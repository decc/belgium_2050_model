# coding: utf-8
# Test for belgium_2050_model
require 'rubygems'
gem 'minitest'
require 'minitest/autorun'
require_relative '../lib/belgium_2050_model'

class TestBelgium2050Model < Minitest::Test
  def self.runnable_methods
    puts 'Overriding minitest to run tests in a defined order'
    methods = methods_matching(/^test_/)
  end
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; Belgium2050ModelShim.new end
  def test_control_b1; assert_equal("OPEERA", worksheet.control_b1); end
  def test_control_f1; assert_equal("BELGIUM", worksheet.control_f1); end
  def test_control_ap1; assert_equal("Reference", worksheet.control_ap1); end
  def test_control_aq1; assert_equal("Core", worksheet.control_aq1); end
  def test_control_ar1; assert_equal("Behavior", worksheet.control_ar1); end
  def test_control_as1; assert_equal("Technology", worksheet.control_as1); end
  def test_control_at1; assert_equal("-95% GHG", worksheet.control_at1); end
  def test_control_au1; assert_equal("EU integration", worksheet.control_au1); end
  def test_control_av1; assert_equal("Sensitivity", worksheet.control_av1); end
  def test_control_aw1; assert_equal("All levers at level 2", worksheet.control_aw1); end
  def test_control_ax1; assert_equal("All levers at level 3", worksheet.control_ax1); end
  def test_control_ay1; assert_equal("All levers at level 3", worksheet.control_ay1); end
  def test_control_b2; assert_equal("Open-source Prospective Energy & Emissions Roadmap Analysis", worksheet.control_b2); end
  def test_control_j3; assert_in_delta(1, worksheet.control_j3, 0.001); end
  def test_control_k3; assert_in_epsilon(2, worksheet.control_k3, 0.001); end
  def test_control_l3; assert_in_epsilon(3, worksheet.control_l3, 0.001); end
  def test_control_m3; assert_in_epsilon(4, worksheet.control_m3, 0.001); end
  def test_control_p3; assert_equal("Descriptions", worksheet.control_p3); end
  def test_control_ac3; assert_in_delta(1, worksheet.control_ac3, 0.001); end
  def test_control_ad3; assert_in_epsilon(2, worksheet.control_ad3, 0.001); end
  def test_control_ae3; assert_in_epsilon(3, worksheet.control_ae3, 0.001); end
  def test_control_af3; assert_in_epsilon(4, worksheet.control_af3, 0.001); end
  def test_control_ai3; assert_equal("Descriptions", worksheet.control_ai3); end
  def test_control_be3; assert_in_epsilon(2, worksheet.control_be3, 0.001); end
  def test_control_bf3; assert_equal("Scenarios", worksheet.control_bf3); end
  def test_control_a4; assert_in_delta(0, (worksheet.control_a4||0), 0.001); end
  def test_control_b4; assert_equal("Demand", worksheet.control_b4); end
  def test_control_c4; assert_equal("Demographics", worksheet.control_c4); end
  def test_control_f4; assert_equal("Demographic evolution", worksheet.control_f4); end
  def test_control_u4; assert_equal("Supply", worksheet.control_u4); end
  def test_control_v4; assert_equal("Energy prices", worksheet.control_v4); end
  def test_control_x4; assert_equal("Energy prices trajectories", worksheet.control_x4); end
  def test_control_ai4; assert_equal("Level 1 is based on the IEA 2DS, their Scenario which limits the increase in average global temperatures to 2°C, and where fossil fuel prices stay lowest due to lower global energy demand: - Oil prices increase from ~80 USD/bbl in 2010 to almost 100 in 2030, to come down again to ~90 in 2050;- Gas prices increase from ~7 USD/mmBTU to ~10 in 2030, to come down again to ~8 in 2050;- Coal prices come down from ~100 USD/tonne to ~75 in 2030, and 60 in 2050;- Biomass prices reach highest price level because strong decarbonization policies lead to biomass demand increases. Biomass price goes from 88 $/boe in 2020 to 155 in 2050", worksheet.control_ai4); end
  def test_control_aj4; assert_equal("Level 2 is based on the IEA 4DS, their Scenario where the increase in average global temperatures reaches 4°C: - Oil prices increase from ~80 USD/bbl in 2010 to ~115 in 2030 and stabilize at ~120 in 2050;- Gas prices increase from ~7 USD/mmBTU to ~12 in 2030 and stabilize there up to 2050;- Coal prices increase from ~100 USD/tonne to ~110 in 2030, and stabilize there up to 2050;- Biomass follows a linear interpolation between level 1 and level 4", worksheet.control_aj4); end
  def test_control_ak4; assert_equal("Level 3 is based on the IEA 6DS, which effectively serves as their baseline scenario, and reflects a world where little is done to curb emissions and where the increase in average global temperatures reaches 6°C. It is line with the WWF 2050 Base case scenario:- Oil prices increase from ~80 USD/bbl in 2010 to ~135 in 2030 and stabilize at ~150 in 2050;- Gas prices increase from ~7 USD/mmBTU to ~13 in 2030 and further to 14 by 2050;- Coal prices increase from ~100 USD/tonne to ~115 in 2030, and further to 125 in 2050;- Biomass follows a linear interpolation between level 1 and level 4", worksheet.control_ak4); end
  def test_control_al4; assert_equal("Level 4 is what we call a \"Highest energy demand scenario\". It reflects a world where fossil fuel demand increases the highest, with oil prices being most affected: - Oil prices increase from ~80 USD/bbl in 2010 to ~170 in 2030 and stabilize at ~200 in 2050;- Gas prices increase from ~7 USD/mmBTU to ~16 in 2030 and further to 20 by 2050;- Coal prices increase from ~100 USD/tonne to ~130 in 2030, and further to 150 in 2050;- Biomass prices decrease to lowest price level as Weak decarbonization policies lead biomass demand not to increase significantly. Biomass price goes from 54 $/boe in 2020 to 78 in 2050", worksheet.control_al4); end
  def test_control_am4; assert_equal(" ", worksheet.control_am4); end
  def test_control_an4; assert_in_delta(0, (worksheet.control_an4||0), 0.001); end
  def test_control_ao4; assert_equal("Demographic evolution", worksheet.control_ao4); end
  def test_control_ap4; assert_in_epsilon(20, worksheet.control_ap4, 0.001); end
  def test_control_aq4; assert_in_epsilon(20, worksheet.control_aq4, 0.001); end
  def test_control_ar4; assert_in_epsilon(20, worksheet.control_ar4, 0.001); end
  def test_control_as4; assert_in_epsilon(20, worksheet.control_as4, 0.001); end
  def test_control_at4; assert_in_epsilon(20, worksheet.control_at4, 0.001); end
  def test_control_au4; assert_in_epsilon(20, worksheet.control_au4, 0.001); end
  def test_control_av4; assert_in_epsilon(20, worksheet.control_av4, 0.001); end
  def test_control_aw4; assert_in_epsilon(20, worksheet.control_aw4, 0.001); end
  def test_control_ax4; assert_in_epsilon(20, worksheet.control_ax4, 0.001); end
  def test_control_ay4; assert_in_epsilon(20, worksheet.control_ay4, 0.001); end
  def test_control_bf4; assert_equal("Reference", worksheet.control_bf4); end
  def test_control_c5; assert_equal("Transport", worksheet.control_c5); end
  def test_control_d5; assert_equal("Domestic", worksheet.control_d5); end
  def test_control_e5; assert_equal("XII.a", worksheet.control_e5); end
  def test_control_f5; assert_equal("Domestic passenger transport", worksheet.control_f5); end
  def test_control_v5; assert_equal("Electricity", worksheet.control_v5); end
  def test_control_w5; assert_equal("Generation", worksheet.control_w5); end
  def test_control_x5; assert_equal("III.a.1", worksheet.control_x5); end
  def test_control_y5; assert_equal("Onshore wind", worksheet.control_y5); end
  def test_control_ai5; assert_equal("Capacity increases up to ~7 GW in 2050, doubling the 3 GW capacity planned in 2020 in the Belgian NREAP (this is a little lower than the 100% RES project figures which are optimized based on costs).This requires installing 260 MW, or ~100 new turbines per year", worksheet.control_ai5); end
  def test_control_aj5; assert_equal("Capacity increases up to ~8,5 GW in 2050.This requires installing on average 300 MW, or ~120 new turbines per year", worksheet.control_aj5); end
  def test_control_ak5; assert_equal("Capacity increases up to ~10,5 GW in 2050.This requires installing on average 380 MW, or ~150 new turbines per year", worksheet.control_ak5); end
  def test_control_al5; assert_equal("Capacity increases up to maximum technical potential of ~13 GW in 2050.This requires installing on average 460 MW, or ~180 new turbines per year", worksheet.control_al5); end
  def test_control_am5; assert_equal(" ", worksheet.control_am5); end
  def test_control_an5; assert_equal("XII.a", worksheet.control_an5); end
  def test_control_ao5; assert_equal("Domestic passenger transport", worksheet.control_ao5); end
  def test_control_bf5; assert_equal("Core", worksheet.control_bf5); end
  def test_control_bj5; assert_equal("Final energy demand", worksheet.control_bj5); end
  def test_control_bl5; assert_in_epsilon(2010, worksheet.control_bl5, 0.001); end
  def test_control_bm5; assert_equal("Ref", worksheet.control_bm5); end
  def test_control_bn5; assert_equal("Scenario", worksheet.control_bn5); end
  def test_control_f6; assert_equal("(i) Overall travel demand per person", worksheet.control_f6); end
  def test_control_j6; assert_equal(" ", worksheet.control_j6); end
  def test_control_k6; assert_equal(" ", worksheet.control_k6); end
  def test_control_m6; assert_equal(" ", worksheet.control_m6); end
  def test_control_p6; assert_equal("Mobility demand per person increases by ~20%; occupation levels of cars decrease by ~5%; occupation levels of buses and trains increase by ~10%", worksheet.control_p6); end
  def test_control_q6; assert_equal("Mobility demand per person increases by ~12%; occupation levels of cars increase by ~5% occupation levels of buses increase by ~20% and trains by ~15%", worksheet.control_q6); end
  def test_control_r6; assert_equal("Mobility demand per person decreases by ~10%; occupation levels of cars increase by ~10%; occupation levels of buses increase by ~33% and trains by ~25%", worksheet.control_r6); end
  def test_control_s6; assert_equal("Mobility demand per person decreases by ~20%; occupation levels of cars increase by ~15%; occupation levels of buses increase by ~50% and trains by ~33%", worksheet.control_s6); end
  def test_control_t6; assert_equal(" ", worksheet.control_t6); end
  def test_control_x6; assert_equal("III.a.2", worksheet.control_x6); end
  def test_control_y6; assert_equal("Offshore wind", worksheet.control_y6); end
  def test_control_ai6; assert_equal("In line with the 100% RES project reference scenario, capacity increases up to 2 GW in 2020 (the NREAP goes to 1,3 GW) and ~4 GW in 2050.This requires installing 120 MW, or ~20 new turbines per year", worksheet.control_ai6); end
  def test_control_aj6; assert_equal("Capacity increases up to ~7 GW in 2050.This requires installing on average 250 MW, or ~40 new turbines per year", worksheet.control_aj6); end
  def test_control_ak6; assert_equal("Capacity increases up to ~10,6 GW in 2050.This requires installing on average 380 MW, or ~65 new turbines per year", worksheet.control_ak6); end
  def test_control_al6; assert_equal("Capacity increases up to maximum technical potential of ~16,5 GW in 2050.This requires installing on average 600 MW, or ~100 new turbines per year", worksheet.control_al6); end
  def test_control_am6; assert_equal(" ", worksheet.control_am6); end
  def test_control_an6; assert_in_delta(0, (worksheet.control_an6||0), 0.001); end
  def test_control_ao6; assert_equal("(i) Overall travel demand per person", worksheet.control_ao6); end
  def test_control_ap6; assert_in_epsilon(10, worksheet.control_ap6, 0.001); end
  def test_control_aq6; assert_in_epsilon(30, worksheet.control_aq6, 0.001); end
  def test_control_ar6; assert_in_epsilon(40, worksheet.control_ar6, 0.001); end
  def test_control_as6; assert_in_epsilon(20, worksheet.control_as6, 0.001); end
  def test_control_at6; assert_in_epsilon(40, worksheet.control_at6, 0.001); end
  def test_control_au6; assert_in_epsilon(10, worksheet.control_au6, 0.001); end
  def test_control_av6; assert_in_epsilon(10, worksheet.control_av6, 0.001); end
  def test_control_aw6; assert_in_epsilon(20, worksheet.control_aw6, 0.001); end
  def test_control_ax6; assert_in_epsilon(30, worksheet.control_ax6, 0.001); end
  def test_control_ay6; assert_in_epsilon(40, worksheet.control_ay6, 0.001); end
  def test_control_bf6; assert_equal("Behavior", worksheet.control_bf6); end
  def test_control_bk6; assert_equal("Road transport", worksheet.control_bk6); end
  def test_control_f7; assert_equal("(ii) Modal shift", worksheet.control_f7); end
  def test_control_h7; assert_in_epsilon(30, worksheet.control_h7, 0.001); end
  def test_control_p7; assert_equal("Shares of the different modes in 2050 remain comparable to 2010 levels(Walking/Biking: ~3%, Car: ~77%, Bus: ~13%, Rail ~7%)", worksheet.control_p7); end
  def test_control_q7; assert_equal("Share of walking and cycling increases to ~4%; Share of bus/coaches increases to ~17%; Share of rail increases to ~9%; Share of cars decreases to ~70%", worksheet.control_q7); end
  def test_control_r7; assert_equal("Share of walking and cycling increases to ~4,5%; Share of bus/coaches increases to ~20,5%; Share of rail increases to ~10%; Share of cars decreases to ~65%", worksheet.control_r7); end
  def test_control_s7; assert_equal("Share of walking and cycling increases to ~6%; Share of bus/coaches increases to ~25%; Share of rail increases to ~13%; Share of cars decreases to ~55%", worksheet.control_s7); end
  def test_control_t7; assert_equal(" ", worksheet.control_t7); end
  def test_control_x7; assert_equal("IV.a", worksheet.control_x7); end
  def test_control_y7; assert_equal("Solar PV", worksheet.control_y7); end
  def test_control_ai7; assert_equal("In line with the 100% RES project reference scenario, Solar PV capacity reaches 2,5 GW in 2020 (higher than the 1,3 of the NREAP which has already been surpassed in 2012) and ~7 GW in 2050, or ~9% of 2010 Belgian electricity production. This requires annual growth to decrease to +~150 MW/year up to 2020, and then slowly increases back to +~400 MW/year in 2050 (average of 250 MW/year over the 40 years) ", worksheet.control_ai7); end
  def test_control_aj7; assert_equal("Annual growth decreases to +~200 MW/year up to 2020, and then slowly increases to +~1500 MW/year in 2050 (average of 600 MW/year over the 40 years). Solar PV capacity reaches ~21 GW in 2050, or ~28% of 2010 Belgian electricity production", worksheet.control_aj7); end
  def test_control_ak7; assert_equal("Annual growth decreases to +~300 MW/year up to 2020, and then slowly increases to +~2700 MW/year in 2050 (average of 1000 MW/year over the 40 years). Solar PV capacity reaches ~35 GW in 2050, or ~47% of 2010 Belgian electricity production", worksheet.control_ak7); end
  def test_control_al7; assert_equal("Annual growth stays stable at ~430 MW/year up to 2020, and then slowly increases to +~3800 MW/year in 2050 (average of 1400 MW/year over the 40 years). Solar PV capacity reaches ~50 GW in 2050, or ~65% of 2010 Belgian electricity production", worksheet.control_al7); end
  def test_control_am7; assert_equal(" ", worksheet.control_am7); end
  def test_control_ao7; assert_equal("(ii) Modal shift", worksheet.control_ao7); end
  def test_control_ap7; assert_in_epsilon(10, worksheet.control_ap7, 0.001); end
  def test_control_aq7; assert_in_epsilon(30, worksheet.control_aq7, 0.001); end
  def test_control_ar7; assert_in_epsilon(40, worksheet.control_ar7, 0.001); end
  def test_control_as7; assert_in_epsilon(20, worksheet.control_as7, 0.001); end
  def test_control_at7; assert_in_epsilon(40, worksheet.control_at7, 0.001); end
  def test_control_au7; assert_in_epsilon(10, worksheet.control_au7, 0.001); end
  def test_control_av7; assert_in_epsilon(10, worksheet.control_av7, 0.001); end
  def test_control_aw7; assert_in_epsilon(20, worksheet.control_aw7, 0.001); end
  def test_control_ax7; assert_in_epsilon(30, worksheet.control_ax7, 0.001); end
  def test_control_ay7; assert_in_epsilon(40, worksheet.control_ay7, 0.001); end
  def test_control_bf7; assert_equal("Technology", worksheet.control_bf7); end
  def test_control_f8; assert_equal("(iii) Energy efficiency", worksheet.control_f8); end
  def test_control_p8; assert_equal("Fuel combustion vehicle fleet efficiency improves by ~19% (vehicles require 19% less energy per km),plug-in hybrids and electric cars efficiency improves by ~30% more efficient;Fuel combustion, hybrid and electric buses efficiency improves by ~15%;Rail transport efficiency improves by ~10%", worksheet.control_p8); end
  def test_control_q8; assert_equal("Fuel combustion vehicle fleet efficiency improves by ~40% (vehicles require 40% less energy per km),plug-in hybrids efficiency improves by 40-45% and electric cars efficiency improves by ~45%;Fuel combustion, hybrid and electric buses efficiency improves by ~20%;Rail transport efficiency improves by ~20%", worksheet.control_q8); end
  def test_control_r8; assert_equal("Fuel combustion vehicle fleet efficiency improves by ~45% (vehicles require 45% less energy per km),plug-in hybrids efficiency improves by 45-50% and electric cars efficiency improves by ~50%;Fuel combustion, hybrid and electric buses efficiency improves by ~25%;Rail transport's efficiency improves by ~30% for diesel and by ~25% for electric traction", worksheet.control_r8); end
  def test_control_s8; assert_equal("Fuel combustion vehicle fleet efficiency improves by  ~50% (vehicles require 50% less energy per km),plug-in hybrids efficiency improves by 50-55% and electric cars efficiency improves by ~55%;Fuel combustion, hybrid and electric buses efficiency improves by ~30%;Rail transport's efficiency improves by ~40%for diesel and by ~30% for electric traction", worksheet.control_s8); end
  def test_control_t8; assert_equal(" ", worksheet.control_t8); end
  def test_control_x8; assert_equal("III.b", worksheet.control_x8); end
  def test_control_y8; assert_equal("Hydroelectric power stations", worksheet.control_y8); end
  def test_control_ai8; assert_equal("110 MW, or no new installations by 2050", worksheet.control_ai8); end
  def test_control_aj8; assert_equal("Gradual increase of 10 MW by 2050, reaching 120 MW", worksheet.control_aj8); end
  def test_control_ak8; assert_equal("Gradual increase of 30 MW up to 2050, reaching 140 MW", worksheet.control_ak8); end
  def test_control_al8; assert_equal("Gradual increase of 40 MW reaching 150 MW by 2050", worksheet.control_al8); end
  def test_control_am8; assert_equal(" ", worksheet.control_am8); end
  def test_control_an8; assert_in_delta(0, (worksheet.control_an8||0), 0.001); end
  def test_control_ao8; assert_equal("(iii) Energy efficiency", worksheet.control_ao8); end
  def test_control_ap8; assert_in_epsilon(10, worksheet.control_ap8, 0.001); end
  def test_control_aq8; assert_in_epsilon(30, worksheet.control_aq8, 0.001); end
  def test_control_ar8; assert_in_epsilon(35, worksheet.control_ar8, 0.001); end
  def test_control_as8; assert_in_epsilon(30, worksheet.control_as8, 0.001); end
  def test_control_at8; assert_in_epsilon(40, worksheet.control_at8, 0.001); end
  def test_control_au8; assert_in_epsilon(40, worksheet.control_au8, 0.001); end
  def test_control_av8; assert_in_epsilon(40, worksheet.control_av8, 0.001); end
  def test_control_aw8; assert_in_epsilon(20, worksheet.control_aw8, 0.001); end
  def test_control_ax8; assert_in_epsilon(30, worksheet.control_ax8, 0.001); end
  def test_control_ay8; assert_in_epsilon(40, worksheet.control_ay8, 0.001); end
  def test_control_bf8; assert_equal("-95% GHG", worksheet.control_bf8); end
  def test_control_bk8; assert_equal("Rail transport", worksheet.control_bk8); end
  def test_control_f9; assert_equal("(iv) Technology mix / electrification", worksheet.control_f9); end
  def test_control_h9; assert_in_epsilon(30, worksheet.control_h9, 0.001); end
  def test_control_p9; assert_equal("2050 Transport system electrification is with:- 20% of cars to plug-in hybrids (20% of buses) and- 5% to battery electric (10% of buses)", worksheet.control_p9); end
  def test_control_q9; assert_equal("2050 Transport system electrification is with:- 55% of cars to plug-in hybrids (30% of buses) and- 10% battery electric by 2050 (20% of buses)", worksheet.control_q9); end
  def test_control_r9; assert_equal("2050 Transport system electrification is with:- 32% of cars are plug-in hybrids (40% of buses) and- 39% battery electric (22% of buses)  and- 9% fuel cell (3% of buses) vehicles", worksheet.control_r9); end
  def test_control_s9; assert_equal("2050 Transport system electrification is with:- 80% of cars are battery electric (30% of buses),- 20% fuel cell (5% of buses)  electric by 2050,- 45% of buses are (plug-in) hybrids", worksheet.control_s9); end
  def test_control_t9; assert_equal(" ", worksheet.control_t9); end
  def test_control_x9; assert_equal("III.d", worksheet.control_x9); end
  def test_control_y9; assert_equal("Geothermal electricity", worksheet.control_y9); end
  def test_control_ai9; assert_equal("Limited developments in conventional geothermal production due to limited potential. No enhanced production take place", worksheet.control_ai9); end
  def test_control_aj9; assert_equal("Limited developments in conventional geothermal production due to limited potential.Gradual implementation of enhanced geothermal, with 60 MW in 2025, increasing up to 1 GW of installed capacity in 2050", worksheet.control_aj9); end
  def test_control_ak9; assert_equal("Limited developments in conventional geothermal production due to limited potential.Gradual implementation of enhanced geothermal, with 200 MW in 2025, rapidly ramping up to reach 3 GW of installed capacity in 2050", worksheet.control_ak9); end
  def test_control_al9; assert_equal("Limited developments in conventional geothermal production due to limited potential. Gradual implementation of enhanced geothermal, with 500 MW in 2025, rapidly ramping up to reach 6 GW of installed capacity in 2050", worksheet.control_al9); end
  def test_control_am9; assert_equal(" ", worksheet.control_am9); end
  def test_control_an9; assert_in_delta(0, (worksheet.control_an9||0), 0.001); end
  def test_control_ao9; assert_equal("(iv) Technology mix / electrification", worksheet.control_ao9); end
  def test_control_ap9; assert_in_epsilon(10, worksheet.control_ap9, 0.001); end
  def test_control_aq9; assert_in_epsilon(30, worksheet.control_aq9, 0.001); end
  def test_control_ar9; assert_in_epsilon(30, worksheet.control_ar9, 0.001); end
  def test_control_as9; assert_in_epsilon(35, worksheet.control_as9, 0.001); end
  def test_control_at9; assert_in_epsilon(40, worksheet.control_at9, 0.001); end
  def test_control_au9; assert_in_epsilon(40, worksheet.control_au9, 0.001); end
  def test_control_av9; assert_in_epsilon(40, worksheet.control_av9, 0.001); end
  def test_control_aw9; assert_in_epsilon(20, worksheet.control_aw9, 0.001); end
  def test_control_ax9; assert_in_epsilon(30, worksheet.control_ax9, 0.001); end
  def test_control_ay9; assert_in_epsilon(40, worksheet.control_ay9, 0.001); end
  def test_control_bf9; assert_equal("EU integration", worksheet.control_bf9); end
  def test_control_bk9; assert_equal("Industry", worksheet.control_bk9); end
  def test_control_e10; assert_equal("XII.b", worksheet.control_e10); end
  def test_control_f10; assert_equal("Domestic freight", worksheet.control_f10); end
  def test_control_t10; assert_equal(" ", worksheet.control_t10); end
  def test_control_x10; assert_equal("IV.c", worksheet.control_x10); end
  def test_control_y10; assert_equal("Small-scale wind  [UNUSED]", worksheet.control_y10); end
  def test_control_ai10; assert_in_delta(0, (worksheet.control_ai10||0), 0.001); end
  def test_control_aj10; assert_in_delta(0, (worksheet.control_aj10||0), 0.001); end
  def test_control_ak10; assert_in_delta(0, (worksheet.control_ak10||0), 0.001); end
  def test_control_al10; assert_in_delta(0, (worksheet.control_al10||0), 0.001); end
  def test_control_am10; assert_equal(" ", worksheet.control_am10); end
  def test_control_an10; assert_equal("XII.b", worksheet.control_an10); end
  def test_control_ao10; assert_equal("Domestic freight", worksheet.control_ao10); end
  def test_control_bf10; assert_equal("Sensitivity", worksheet.control_bf10); end
  def test_control_bk10; assert_equal("Buildings", worksheet.control_bk10); end
  def test_control_f11; assert_equal("(i) Demand for freight transport", worksheet.control_f11); end
  def test_control_h11; assert_in_epsilon(30, worksheet.control_h11, 0.001); end
  def test_control_j11; assert_equal(" ", worksheet.control_j11); end
  def test_control_k11; assert_equal(" ", worksheet.control_k11); end
  def test_control_m11; assert_equal(" ", worksheet.control_m11); end
  def test_control_p11; assert_equal("Transported freight volumes increase by ~60% by 2050 (from 69 billion tonne-km in 2010).The coupling between economic growth and transport growth is still strong (~0,85%/%)", worksheet.control_p11); end
  def test_control_q11; assert_equal("Transported freight volumes increase by ~45% between 2010 and 2050", worksheet.control_q11); end
  def test_control_r11; assert_equal("Transported freight volumes increase by ~20% between 2010 and 2050", worksheet.control_r11); end
  def test_control_s11; assert_equal("Transported freight volumes increase by ~10% between 2010 and 2050.The decoupling between economic growth and transport growth is almost complete (0,10%/%)", worksheet.control_s11); end
  def test_control_t11; assert_equal(" ", worksheet.control_t11); end
  def test_control_x11; assert_equal("III.c", worksheet.control_x11); end
  def test_control_y11; assert_equal("Tidal and Wave [UNUSED]", worksheet.control_y11); end
  def test_control_ai11; assert_in_delta(0, (worksheet.control_ai11||0), 0.001); end
  def test_control_aj11; assert_in_delta(0, (worksheet.control_aj11||0), 0.001); end
  def test_control_ak11; assert_in_delta(0, (worksheet.control_ak11||0), 0.001); end
  def test_control_al11; assert_in_delta(0, (worksheet.control_al11||0), 0.001); end
  def test_control_am11; assert_equal(" ", worksheet.control_am11); end
  def test_control_ao11; assert_equal("(i) Demand for freight transport", worksheet.control_ao11); end
  def test_control_ap11; assert_in_epsilon(10, worksheet.control_ap11, 0.001); end
  def test_control_aq11; assert_in_epsilon(30, worksheet.control_aq11, 0.001); end
  def test_control_ar11; assert_in_epsilon(40, worksheet.control_ar11, 0.001); end
  def test_control_as11; assert_in_epsilon(20, worksheet.control_as11, 0.001); end
  def test_control_at11; assert_in_epsilon(40, worksheet.control_at11, 0.001); end
  def test_control_au11; assert_in_epsilon(10, worksheet.control_au11, 0.001); end
  def test_control_av11; assert_in_epsilon(10, worksheet.control_av11, 0.001); end
  def test_control_aw11; assert_in_epsilon(20, worksheet.control_aw11, 0.001); end
  def test_control_ax11; assert_in_epsilon(30, worksheet.control_ax11, 0.001); end
  def test_control_ay11; assert_in_epsilon(40, worksheet.control_ay11, 0.001); end
  def test_control_bf11; assert_equal("All levers at level 2", worksheet.control_bf11); end
  def test_control_f12; assert_equal("(ii) Modal shift", worksheet.control_f12); end
  def test_control_j12; assert_equal(" ", worksheet.control_j12); end
  def test_control_k12; assert_equal(" ", worksheet.control_k12); end
  def test_control_m12; assert_equal(" ", worksheet.control_m12); end
  def test_control_p12; assert_equal("By 2050, the transport mode share evolve as follows:- trucks' share increases to from 70 to 75%,- rail's share decreases from 13 to ~12%,- inland waterways' share decreases from 18 to ~13%", worksheet.control_p12); end
  def test_control_q12; assert_equal("By 2050, the transport mode share evolve as follows:- trucks' share remains at ~70%,- rail's share remains at  ~13%,- inland waterways' share remains at ~18% (same shares as in 2010)", worksheet.control_q12); end
  def test_control_r12; assert_equal("By 2050, the transport mode share evolve as follows:- trucks' share decreases from 70 to ~65%,- rail's share increases from 13 to ~15%,- inland waterways' share increases from 18 to ~20%", worksheet.control_r12); end
  def test_control_s12; assert_equal("By 2050, the transport mode share evolve as follows:- trucks' share decreases from 70 to ~55%,- rail's share increases from 13 to ~20%,- inland waterways' share increases from 18 to ~25%", worksheet.control_s12); end
  def test_control_t12; assert_equal(" ", worksheet.control_t12); end
  def test_control_x12; assert_equal("IV.b", worksheet.control_x12); end
  def test_control_y12; assert_equal("Solar thermal", worksheet.control_y12); end
  def test_control_ai12; assert_equal("No significant development", worksheet.control_ai12); end
  def test_control_aj12; assert_equal("Gradual increase up to an average of 1m² per household in 2050, which would require about 2% of roof space identified as available in Belgium", worksheet.control_aj12); end
  def test_control_ak12; assert_equal("Gradual increase up to an average of 3m² per household in 2050, which would require about 7% of roof space identified as available in Belgium", worksheet.control_ak12); end
  def test_control_al12; assert_equal("Gradual increase up to an average of 5m² per household in 2050, which would require about 12% of roof space identified as available in Belgium", worksheet.control_al12); end
  def test_control_am12; assert_equal(" ", worksheet.control_am12); end
  def test_control_ao12; assert_equal("(ii) Modal shift", worksheet.control_ao12); end
  def test_control_ap12; assert_in_epsilon(10, worksheet.control_ap12, 0.001); end
  def test_control_aq12; assert_in_epsilon(30, worksheet.control_aq12, 0.001); end
  def test_control_ar12; assert_in_epsilon(40, worksheet.control_ar12, 0.001); end
  def test_control_as12; assert_in_epsilon(20, worksheet.control_as12, 0.001); end
  def test_control_at12; assert_in_epsilon(40, worksheet.control_at12, 0.001); end
  def test_control_au12; assert_in_epsilon(10, worksheet.control_au12, 0.001); end
  def test_control_av12; assert_in_epsilon(10, worksheet.control_av12, 0.001); end
  def test_control_aw12; assert_in_epsilon(20, worksheet.control_aw12, 0.001); end
  def test_control_ax12; assert_in_epsilon(30, worksheet.control_ax12, 0.001); end
  def test_control_ay12; assert_in_epsilon(40, worksheet.control_ay12, 0.001); end
  def test_control_bf12; assert_equal("All levers at level 3", worksheet.control_bf12); end
  def test_control_f13; assert_equal("(iii) Energy efficiency", worksheet.control_f13); end
  def test_control_p13; assert_equal("Efficiency of fuel combustion trucks improves by ~10%(vehicles require 10% less energy per km);Efficiency of diesel and electric trains improves by 10%", worksheet.control_p13); end
  def test_control_q13; assert_equal("Efficiency of fuel combustion trucks improves by ~15%(vehicles require 15% less energy per km);Efficiency of diesel and electric trains improves by ~20%", worksheet.control_q13); end
  def test_control_r13; assert_equal("Efficiency of fuel combustion trucks improves by ~25%(vehicles require 25% less energy per km);Efficiencies of diesel and electric trains improve by ~30% and ~25% respectively", worksheet.control_r13); end
  def test_control_s13; assert_equal("Efficiency of fuel combustion trucks improves by ~35%(vehicles require 35% less energy per km);Efficiencies of diesel and electric trains improve by ~40% and ~30% respectively", worksheet.control_s13); end
  def test_control_t13; assert_equal(" ", worksheet.control_t13); end
  def test_control_x13; assert_equal("II.a", worksheet.control_x13); end
  def test_control_y13; assert_equal("Nuclear power", worksheet.control_y13); end
  def test_control_ai13; assert_equal("Nuclear exit as per the latest official plans (Minister Wathelet's plan): shut down Doel 1 & 2 (0,4 GW each) in the spring of 2016, shut down of Doel 3 (1 GW) in 2022, closing of Tihange 2 (1 GW) in 2023, closing of Tihange 1 &3 and Doel 4 (1 GW each) in 2025", worksheet.control_ai13); end
  def test_control_aj13; assert_equal("Nuclear exit as per the latest official plans (Minister Wathelet's plan): shut down Doel 1 & 2 (0,4 GW each) in the spring of 2016, shut down of Doel 3 (1 GW) in 2022, closing of Tihange 2 (1 GW) in 2023, closing of Tihange 1 &3 and Doel 4 (1 GW each) in 2025", worksheet.control_aj13); end
  def test_control_ak13; assert_equal("Nuclear exit as per the latest official plans (Minister Wathelet's plan): shut down Doel 1 & 2 (0,4 GW each) in the spring of 2016, shut down of Doel 3 (1 GW) in 2022, closing of Tihange 2 (1 GW) in 2023, closing of Tihange 1 &3 and Doel 4 (1 GW each) in 2025", worksheet.control_ak13); end
  def test_control_al13; assert_equal("Nuclear exit as per the latest official plans (Minister Wathelet's plan): shut down Doel 1 & 2 (0,4 GW each) in the spring of 2016, shut down of Doel 3 (1 GW) in 2022, closing of Tihange 2 (1 GW) in 2023, closing of Tihange 1 &3 and Doel 4 (1 GW each) in 2025", worksheet.control_al13); end
  def test_control_am13; assert_equal(" ", worksheet.control_am13); end
  def test_control_ao13; assert_equal("(iii) Energy efficiency", worksheet.control_ao13); end
  def test_control_ap13; assert_in_epsilon(10, worksheet.control_ap13, 0.001); end
  def test_control_aq13; assert_in_epsilon(30, worksheet.control_aq13, 0.001); end
  def test_control_ar13; assert_in_epsilon(35, worksheet.control_ar13, 0.001); end
  def test_control_as13; assert_in_epsilon(30, worksheet.control_as13, 0.001); end
  def test_control_at13; assert_in_epsilon(40, worksheet.control_at13, 0.001); end
  def test_control_au13; assert_in_epsilon(40, worksheet.control_au13, 0.001); end
  def test_control_av13; assert_in_epsilon(40, worksheet.control_av13, 0.001); end
  def test_control_aw13; assert_in_epsilon(20, worksheet.control_aw13, 0.001); end
  def test_control_ax13; assert_in_epsilon(30, worksheet.control_ax13, 0.001); end
  def test_control_ay13; assert_in_epsilon(40, worksheet.control_ay13, 0.001); end
  def test_control_bf13; assert_equal("All levers at level 4", worksheet.control_bf13); end
  def test_control_f14; assert_equal("(iv) Technology mix / electrification", worksheet.control_f14); end
  def test_control_p14; assert_equal("The trucks technology share is ~90% diesel (hybrid) trucks, ~10% CNG (hybrid) trucks;The trains technology share is similar to 2010 with 45% diesel trains and 55% electric trains ", worksheet.control_p14); end
  def test_control_q14; assert_equal("The trucks technology share is ~70% diesel (hybrid) trucks, ~25% CNG (hybrid) trucks and ~5% electric trucks;The trains technology share is 35% diesel trains and 65% electric trains", worksheet.control_q14); end
  def test_control_r14; assert_equal("The trucks technology share is ~52% diesel (hybrid) trucks, ~38% CNG (hybrid) trucks and ~10% electric trucks;The trains technology share is 45% diesel trains and 55% electric trains", worksheet.control_r14); end
  def test_control_s14; assert_equal("The trucks technology share is ~35% diesel (hybrid) trucks, 45% CNG (hybrid) trucks, and ~20% electric trucks;The trains technology share is 10% diesel trains and 90% electric trains.", worksheet.control_s14); end
  def test_control_t14; assert_equal(" ", worksheet.control_t14); end
  def test_control_x14; assert_equal("I.b", worksheet.control_x14); end
  def test_control_y14; assert_equal("Carbon Capture Storage (CCS)", worksheet.control_y14); end
  def test_control_am14; assert_equal(" ", worksheet.control_am14); end
  def test_control_ao14; assert_equal("(iv) Technology mix / electrification", worksheet.control_ao14); end
  def test_control_ap14; assert_in_epsilon(10, worksheet.control_ap14, 0.001); end
  def test_control_aq14; assert_in_epsilon(30, worksheet.control_aq14, 0.001); end
  def test_control_ar14; assert_in_epsilon(30, worksheet.control_ar14, 0.001); end
  def test_control_as14; assert_in_epsilon(35, worksheet.control_as14, 0.001); end
  def test_control_at14; assert_in_epsilon(40, worksheet.control_at14, 0.001); end
  def test_control_au14; assert_in_epsilon(40, worksheet.control_au14, 0.001); end
  def test_control_av14; assert_in_epsilon(35, worksheet.control_av14, 0.001); end
  def test_control_aw14; assert_in_epsilon(20, worksheet.control_aw14, 0.001); end
  def test_control_ax14; assert_in_epsilon(30, worksheet.control_ax14, 0.001); end
  def test_control_ay14; assert_in_epsilon(40, worksheet.control_ay14, 0.001); end
  def test_control_bf14; assert_in_delta(0, (worksheet.control_bf14||0), 0.001); end
  def test_control_d15; assert_equal("International", worksheet.control_d15); end
  def test_control_e15; assert_equal("XII.c", worksheet.control_e15); end
  def test_control_f15; assert_equal("International aviation", worksheet.control_f15); end
  def test_control_p15; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_p15); end
  def test_control_q15; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_q15); end
  def test_control_r15; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_r15); end
  def test_control_s15; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_s15); end
  def test_control_t15; assert_equal(" ", worksheet.control_t15); end
  def test_control_y15; assert_equal("(i) Power Stations", worksheet.control_y15); end
  def test_control_ai15; assert_equal("No CCS development", worksheet.control_ai15); end
  def test_control_aj15; assert_equal("Construction of 1,1 GW of CCS capacity after 2030 (which would represent ~2 coal plants, or ~3 gas plants). This would cover ~10% of current electricity demand", worksheet.control_aj15); end
  def test_control_ak15; assert_equal("Construction of 2,2 GW of CCS capacity starting in 2025 (which would represent ~4 coal plants, or ~6 gas plants). This would cover ~20% of current electricity demand", worksheet.control_ak15); end
  def test_control_al15; assert_equal("Construction of 4,4 GW of CCS capacity starting in 2020 (which would represent ~8 coal plants, or ~12 gas plants). This would cover ~40% of current electricity demand", worksheet.control_al15); end
  def test_control_am15; assert_equal(" ", worksheet.control_am15); end
  def test_control_an15; assert_equal("XII.c", worksheet.control_an15); end
  def test_control_ao15; assert_equal("International aviation", worksheet.control_ao15); end
  def test_control_ap15; assert_in_epsilon(10, worksheet.control_ap15, 0.001); end
  def test_control_aq15; assert_in_epsilon(30, worksheet.control_aq15, 0.001); end
  def test_control_ar15; assert_in_epsilon(40, worksheet.control_ar15, 0.001); end
  def test_control_as15; assert_in_epsilon(30, worksheet.control_as15, 0.001); end
  def test_control_at15; assert_in_epsilon(40, worksheet.control_at15, 0.001); end
  def test_control_au15; assert_in_epsilon(30, worksheet.control_au15, 0.001); end
  def test_control_av15; assert_in_epsilon(30, worksheet.control_av15, 0.001); end
  def test_control_aw15; assert_in_epsilon(20, worksheet.control_aw15, 0.001); end
  def test_control_ax15; assert_in_epsilon(30, worksheet.control_ax15, 0.001); end
  def test_control_ay15; assert_in_epsilon(40, worksheet.control_ay15, 0.001); end
  def test_control_bf15; assert_in_delta(0, (worksheet.control_bf15||0), 0.001); end
  def test_control_bj15; assert_equal("Energy sources", worksheet.control_bj15); end
  def test_control_e16; assert_equal("XII.e", worksheet.control_e16); end
  def test_control_f16; assert_equal("International shipping [UNUSED]", worksheet.control_f16); end
  def test_control_p16; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_p16); end
  def test_control_q16; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_q16); end
  def test_control_r16; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_r16); end
  def test_control_s16; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_s16); end
  def test_control_t16; assert_equal(" ", worksheet.control_t16); end
  def test_control_y16; assert_equal("(ii) Power Station fuel mix", worksheet.control_y16); end
  def test_control_ai16; assert_equal("100% of the CCS capacity is coal based", worksheet.control_ai16); end
  def test_control_aj16; assert_equal("2/3 Coal CCS and 1/3 gas CCS", worksheet.control_aj16); end
  def test_control_ak16; assert_equal("1/3 Coal CCS and 2/3 gas CCS", worksheet.control_ak16); end
  def test_control_al16; assert_equal("100% of the CCS capacity is gas based", worksheet.control_al16); end
  def test_control_am16; assert_equal(" ", worksheet.control_am16); end
  def test_control_an16; assert_equal("XII.e", worksheet.control_an16); end
  def test_control_ao16; assert_equal("International shipping [UNUSED]", worksheet.control_ao16); end
  def test_control_ap16; assert_in_epsilon(10, worksheet.control_ap16, 0.001); end
  def test_control_aq16; assert_in_epsilon(30, worksheet.control_aq16, 0.001); end
  def test_control_ar16; assert_in_epsilon(30, worksheet.control_ar16, 0.001); end
  def test_control_as16; assert_in_epsilon(30, worksheet.control_as16, 0.001); end
  def test_control_at16; assert_in_epsilon(40, worksheet.control_at16, 0.001); end
  def test_control_au16; assert_in_epsilon(30, worksheet.control_au16, 0.001); end
  def test_control_av16; assert_in_epsilon(30, worksheet.control_av16, 0.001); end
  def test_control_aw16; assert_in_epsilon(20, worksheet.control_aw16, 0.001); end
  def test_control_ax16; assert_in_epsilon(30, worksheet.control_ax16, 0.001); end
  def test_control_ay16; assert_in_epsilon(40, worksheet.control_ay16, 0.001); end
  def test_control_bf16; assert_in_delta(0, (worksheet.control_bf16||0), 0.001); end
  def test_control_bk16; assert_equal("Nuclear fission", worksheet.control_bk16); end
  def test_control_c17; assert_equal("Buildings", worksheet.control_c17); end
  def test_control_d17; assert_equal("Residential Heating", worksheet.control_d17); end
  def test_control_e17; assert_equal("IX.a", worksheet.control_e17); end
  def test_control_f17; assert_equal("Domestic space heating and hot water", worksheet.control_f17); end
  def test_control_t17; assert_equal(" ", worksheet.control_t17); end
  def test_control_x17; assert_equal("I.a", worksheet.control_x17); end
  def test_control_y17; assert_equal("Biomass and gas power stations", worksheet.control_y17); end
  def test_control_ai17; assert_equal("30% of indigenous and imported biomass are being used for electricity production. This could lead to ~20 TWh of electricity, or ~20% of today's demand", worksheet.control_ai17); end
  def test_control_aj17; assert_equal("40% of indigenous and imported biomass are being used for electricity production. This could lead to ~30 TWh of electricity, or ~30% of today's demand", worksheet.control_aj17); end
  def test_control_ak17; assert_equal("50% of indigenous and imported biomass are being used for electricity production. This could lead to ~40 TWh of electricity, or ~40% of today's demand", worksheet.control_ak17); end
  def test_control_al17; assert_equal("60% of indigenous and imported biomass are being used for electricity production. This could lead to ~50 TWh of electricity, or ~50% of today's demand", worksheet.control_al17); end
  def test_control_am17; assert_equal(" ", worksheet.control_am17); end
  def test_control_an17; assert_equal("IX.a", worksheet.control_an17); end
  def test_control_ao17; assert_equal("Domestic space heating and hot water", worksheet.control_ao17); end
  def test_control_bf17; assert_in_delta(0, (worksheet.control_bf17||0), 0.001); end
  def test_control_bk17; assert_equal("Solar", worksheet.control_bk17); end
  def test_control_f18; assert_equal("(i) Compactness", worksheet.control_f18); end
  def test_control_h18; assert_in_epsilon(3, worksheet.control_h18, 0.001); end
  def test_control_p18; assert_equal("An important share of the people tends to live & work in suburban to rural areas, leading to regional communities.(This decreases the share of flats from the current 53% to 40%  by 2030. The share remains constant after 2030)", worksheet.control_p18); end
  def test_control_q18; assert_equal("The share of flats in new housing stock remains constant(Current share is 53%)", worksheet.control_q18); end
  def test_control_r18; assert_equal("Part of the population moves to urban areas.(This increases the share of flats in new housing stock until 2030 from 53% up to 60%. The share remains constant after 2030)", worksheet.control_r18); end
  def test_control_s18; assert_equal("An important share of the people tend to live & work in urban areas, resulting in more urbanisation.  (The current trend of increased urbanization is extended, with a 1,2% increase in the share of flats in the total of new houses per year up to 77% in 2030. After 2030 the share of flats remains at that level which is typically reached in urban areas nowadays)", worksheet.control_s18); end
  def test_control_t18; assert_equal(" ", worksheet.control_t18); end
  def test_control_w18; assert_equal("Imported", worksheet.control_w18); end
  def test_control_x18; assert_equal("VII.a", worksheet.control_x18); end
  def test_control_y18; assert_equal("Imports of decarbonized electricity", worksheet.control_y18); end
  def test_control_am18; assert_equal(" ", worksheet.control_am18); end
  def test_control_an18; assert_in_delta(0, (worksheet.control_an18||0), 0.001); end
  def test_control_ao18; assert_equal("(i) Compactness", worksheet.control_ao18); end
  def test_control_ap18; assert_in_delta(1, worksheet.control_ap18, 0.001); end
  def test_control_aq18; assert_in_epsilon(3, worksheet.control_aq18, 0.001); end
  def test_control_ar18; assert_in_epsilon(4, worksheet.control_ar18, 0.001); end
  def test_control_as18; assert_in_epsilon(2, worksheet.control_as18, 0.001); end
  def test_control_at18; assert_in_epsilon(4, worksheet.control_at18, 0.001); end
  def test_control_au18; assert_in_delta(1, worksheet.control_au18, 0.001); end
  def test_control_av18; assert_in_delta(1, worksheet.control_av18, 0.001); end
  def test_control_aw18; assert_in_epsilon(2, worksheet.control_aw18, 0.001); end
  def test_control_ax18; assert_in_epsilon(3, worksheet.control_ax18, 0.001); end
  def test_control_ay18; assert_in_epsilon(4, worksheet.control_ay18, 0.001); end
  def test_control_bf18; assert_in_delta(0, (worksheet.control_bf18||0), 0.001); end
  def test_control_bk18; assert_equal("Wind", worksheet.control_bk18); end
  def test_control_f19; assert_equal("(ii) Heating / cooling comfort level", worksheet.control_f19); end
  def test_control_h19; assert_in_epsilon(3, worksheet.control_h19, 0.001); end
  def test_control_p19; assert_equal("Due to response to increased wealth: Average internal temperature in households rises to 20ºC by 2050, representing a significant increase of 2°C; 20% increase in hot water demand per household in 2050; with the increase in the penetration of heat pumps - which can also be used as cooling device - cooling reaches 60% of the households by 2050 compared to 4% today", worksheet.control_p19); end
  def test_control_q19; assert_equal("Average internal temperature in households rises to 19ºC by 2050; Keep hot water demand per household at current level (1202 kWh/HH); 40% of Belgian households effectively uses air conditioning by 2050", worksheet.control_q19); end
  def test_control_r19; assert_equal("Average internal temperature in households keeps constant at current level, namely 18ºC; 20% decrease in hot water demand per household in 2050; 20% of Belgian households effectively uses air conditioning by 2050", worksheet.control_r19); end
  def test_control_s19; assert_equal("Low comfort demand: Average internal temperature in households falls to 16ºC by 2050, representing a significant decrease of 2°C. The evidence shows that 16°C is a safe minimum in occupied rooms for vulnerable groups; There is a 50% decrease in hot water demand per household in 2050. This is thought to be the limit that could be achieved with greater consumer awareness of hot water efficiency, and more water efficient fittings; total cooling demand of Belgium is kept around current level (~4% of households)", worksheet.control_s19); end
  def test_control_t19; assert_equal(" ", worksheet.control_t19); end
  def test_control_y19; assert_equal("(i) Share of imported electricity", worksheet.control_y19); end
  def test_control_ai19; assert_equal("No net imports, Belgium is self-sufficient in its production of electricity over the year (imports and exports even out across the year)", worksheet.control_ai19); end
  def test_control_aj19; assert_equal("Belgium would go up to 5% imports if production is unsufficient (or ~4 TWh based on its 2010 production of 84 TWh)", worksheet.control_aj19); end
  def test_control_ak19; assert_equal("Belgium would go up to 10% imports if production is unsufficient (or ~8 TWh based on its 2010 production of 84 TWh)", worksheet.control_ak19); end
  def test_control_al19; assert_equal("Belgium would go up to 20% imports if production is unsufficient (or ~17 TWh based on its 2010 production of 84 TWh)", worksheet.control_al19); end
  def test_control_am19; assert_equal(" ", worksheet.control_am19); end
  def test_control_an19; assert_in_delta(0, (worksheet.control_an19||0), 0.001); end
  def test_control_ao19; assert_equal("(ii) Heating / cooling comfort level", worksheet.control_ao19); end
  def test_control_ap19; assert_in_delta(1, worksheet.control_ap19, 0.001); end
  def test_control_aq19; assert_in_epsilon(3, worksheet.control_aq19, 0.001); end
  def test_control_ar19; assert_in_epsilon(4, worksheet.control_ar19, 0.001); end
  def test_control_as19; assert_in_epsilon(2, worksheet.control_as19, 0.001); end
  def test_control_at19; assert_in_epsilon(4, worksheet.control_at19, 0.001); end
  def test_control_au19; assert_in_delta(1, worksheet.control_au19, 0.001); end
  def test_control_av19; assert_in_delta(1, worksheet.control_av19, 0.001); end
  def test_control_aw19; assert_in_epsilon(2, worksheet.control_aw19, 0.001); end
  def test_control_ax19; assert_in_epsilon(3, worksheet.control_ax19, 0.001); end
  def test_control_ay19; assert_in_epsilon(4, worksheet.control_ay19, 0.001); end
  def test_control_bk19; assert_equal("Electricity imports (exports)", worksheet.control_bk19); end
  def test_control_f20; assert_equal("(iii) Housing thermal efficiency", worksheet.control_f20); end
  def test_control_h20; assert_in_epsilon(3, worksheet.control_h20, 0.001); end
  def test_control_p20; assert_equal("Renovations: minor improvements - application of 1 to 3 of the low cost or easy to implement measures resulting in decrease in heat demand to 111 kWh/m² in 2050, compared to ~140 kWh/m² average heat demand in 2010.New houses: starting from the 2010 EPB legislation which requires a max consumption of 99 kWh/m² for a new house, the final demand of each new dwelling will decrease to ‘very low energy house’ standard (30kWh/m²) by 2020", worksheet.control_p20); end
  def test_control_q20; assert_equal("Renovation: moderate renovation level to an average of 99 kWh/m². New houses: starting from the 2010 EPB legislation which requires a max consumption of 99 kWh/m² for a new house, the final demand of each new dwelling will decrease to ‘very low energy house’ standard (30kWh/m²) by 2020 and to the level of ‘a passive house’ (15kWh/m²) by 2040", worksheet.control_q20); end
  def test_control_r20; assert_equal("Renovation: strong renovation – low energy house (60 kWh/m²).New houses: starting from the 2010 EPB legislation which requires a max consumption of 99 kWh/m² for a new house, the final demand of each new dwelling will decrease to ‘very low energy house’ standard (30kWh/m²) by 2020 and to the level of ‘a passive house’ (15kWh/m²) by 2030", worksheet.control_r20); end
  def test_control_s20; assert_equal("Renovationm: extensive, to the \"very low energy house\" level (30 kWh/m²).  New houses: starting from the 2010 EPB legislation which requires a max consumption of 99 kWh/m² for a new house, the final demand of each new dwelling will decrease to the level of ‘a passive house’ (15kWh/m²) by 2020", worksheet.control_s20); end
  def test_control_t20; assert_equal(" ", worksheet.control_t20); end
  def test_control_y20; assert_equal("(ii) Share of RES in imported electricity", worksheet.control_y20); end
  def test_control_aa20; assert_in_epsilon(10, worksheet.control_aa20, 0.001); end
  def test_control_ai20; assert_equal("Average of the other 3 levels", worksheet.control_ai20); end
  def test_control_aj20; assert_equal("60% Renewable energy source, 20% CCS and 20% nuclear", worksheet.control_aj20); end
  def test_control_ak20; assert_equal("80% Renewable energy source, 10% CCS and 10% nuclear", worksheet.control_ak20); end
  def test_control_al20; assert_equal("40% Renewable energy source, 30% CCS and 30% nuclear", worksheet.control_al20); end
  def test_control_am20; assert_equal(" ", worksheet.control_am20); end
  def test_control_an20; assert_in_delta(0, (worksheet.control_an20||0), 0.001); end
  def test_control_ao20; assert_equal("(iii) Housing thermal efficiency", worksheet.control_ao20); end
  def test_control_ap20; assert_in_delta(1, worksheet.control_ap20, 0.001); end
  def test_control_aq20; assert_in_epsilon(3, worksheet.control_aq20, 0.001); end
  def test_control_ar20; assert_in_epsilon(3, worksheet.control_ar20, 0.001); end
  def test_control_as20; assert_in_epsilon(3, worksheet.control_as20, 0.001); end
  def test_control_at20; assert_in_epsilon(4, worksheet.control_at20, 0.001); end
  def test_control_au20; assert_in_epsilon(4, worksheet.control_au20, 0.001); end
  def test_control_av20; assert_in_epsilon(4, worksheet.control_av20, 0.001); end
  def test_control_aw20; assert_in_epsilon(2, worksheet.control_aw20, 0.001); end
  def test_control_ax20; assert_in_epsilon(3, worksheet.control_ax20, 0.001); end
  def test_control_ay20; assert_in_epsilon(4, worksheet.control_ay20, 0.001); end
  def test_control_bk20; assert_equal("Total Biomass", worksheet.control_bk20); end
  def test_control_f21; assert_equal("(iv) Electrification level", worksheet.control_f21); end
  def test_control_p21; assert_equal("By 2050, 20% of the installed heating installations in the residential stock will be heat pumps (air & ground source)", worksheet.control_p21); end
  def test_control_q21; assert_equal("By 2050, 40% of the installed heating installations in the residential stock will be heat pumps (air & ground source)", worksheet.control_q21); end
  def test_control_r21; assert_equal("By 2050, 60% of the installed heating installations in the residential stock will be heat pumps (air & ground source)", worksheet.control_r21); end
  def test_control_s21; assert_equal("By 2050, 85% of the installated heating installations in the residential stock will be heat pumps (air & ground source)", worksheet.control_s21); end
  def test_control_t21; assert_equal(" ", worksheet.control_t21); end
  def test_control_v21; assert_equal("Bioenergy", worksheet.control_v21); end
  def test_control_w21; assert_equal("Generation", worksheet.control_w21); end
  def test_control_x21; assert_equal("VI.a", worksheet.control_x21); end
  def test_control_y21; assert_equal("Agriculture and land use", worksheet.control_y21); end
  def test_control_am21; assert_equal(" ", worksheet.control_am21); end
  def test_control_an21; assert_in_delta(0, (worksheet.control_an21||0), 0.001); end
  def test_control_ao21; assert_equal("(iv) Electrification level", worksheet.control_ao21); end
  def test_control_ap21; assert_in_delta(1, worksheet.control_ap21, 0.001); end
  def test_control_aq21; assert_in_epsilon(3, worksheet.control_aq21, 0.001); end
  def test_control_ar21; assert_in_epsilon(2, worksheet.control_ar21, 0.001); end
  def test_control_as21; assert_in_epsilon(4, worksheet.control_as21, 0.001); end
  def test_control_at21; assert_in_epsilon(4, worksheet.control_at21, 0.001); end
  def test_control_au21; assert_in_epsilon(4, worksheet.control_au21, 0.001); end
  def test_control_av21; assert_in_epsilon(4, worksheet.control_av21, 0.001); end
  def test_control_aw21; assert_in_epsilon(2, worksheet.control_aw21, 0.001); end
  def test_control_ax21; assert_in_epsilon(3, worksheet.control_ax21, 0.001); end
  def test_control_ay21; assert_in_epsilon(4, worksheet.control_ay21, 0.001); end
  def test_control_bk21; assert_equal("Fossil fuels", worksheet.control_bk21); end
  def test_control_f22; assert_equal("(v) Level of innovative heating technology", worksheet.control_f22); end
  def test_control_p22; assert_equal("Innovative technologies represent 10% of the non-electric heating installations", worksheet.control_p22); end
  def test_control_q22; assert_equal("Innovative technologies represent 20% of the non-electric heating installations", worksheet.control_q22); end
  def test_control_r22; assert_equal("Innovative technologies represent 30% of the non-electric heating installations", worksheet.control_r22); end
  def test_control_s22; assert_equal("Innovative technologies represent 40% of the non-electric heating installations", worksheet.control_s22); end
  def test_control_t22; assert_equal(" ", worksheet.control_t22); end
  def test_control_y22; assert_equal("(i) Number of animals and meat consumption", worksheet.control_y22); end
  def test_control_aa22; assert_in_epsilon(3, worksheet.control_aa22, 0.001); end
  def test_control_ai22; assert_equal("With an increasing population and similar diets, the meat consumption increases and results in an increase in the number of animals by 2% in 2050 compared to 2010; this leads to ~43 mio animals in Belgium in 2050.", worksheet.control_ai22); end
  def test_control_aj22; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_aj22); end
  def test_control_ak22; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_ak22); end
  def test_control_al22; assert_equal("Changes in the diets lead to a decrease in meat consumption, and a resulting decrease in the number of animals by 43% in 2050 compared to 2010. This leads to ~ 24 mio animals in 2050.", worksheet.control_al22); end
  def test_control_am22; assert_equal(" ", worksheet.control_am22); end
  def test_control_an22; assert_in_delta(0, (worksheet.control_an22||0), 0.001); end
  def test_control_ao22; assert_equal("(v) Level of innovative heating technology", worksheet.control_ao22); end
  def test_control_ap22; assert_in_delta(1, worksheet.control_ap22, 0.001); end
  def test_control_aq22; assert_in_delta(1, worksheet.control_aq22, 0.001); end
  def test_control_ar22; assert_in_delta(1, worksheet.control_ar22, 0.001); end
  def test_control_as22; assert_in_epsilon(2, worksheet.control_as22, 0.001); end
  def test_control_at22; assert_in_epsilon(2, worksheet.control_at22, 0.001); end
  def test_control_au22; assert_in_epsilon(2, worksheet.control_au22, 0.001); end
  def test_control_av22; assert_in_epsilon(2, worksheet.control_av22, 0.001); end
  def test_control_aw22; assert_in_epsilon(2, worksheet.control_aw22, 0.001); end
  def test_control_ax22; assert_in_epsilon(3, worksheet.control_ax22, 0.001); end
  def test_control_ay22; assert_in_epsilon(4, worksheet.control_ay22, 0.001); end
  def test_control_d23; assert_equal("Residential Lighting & Appliances", worksheet.control_d23); end
  def test_control_e23; assert_equal("X.a", worksheet.control_e23); end
  def test_control_f23; assert_equal("Domestic lighting, appliances, and cooking", worksheet.control_f23); end
  def test_control_t23; assert_equal(" ", worksheet.control_t23); end
  def test_control_y23; assert_equal("(ii) Emissions intensity per animal (enteric fermentation)", worksheet.control_y23); end
  def test_control_aa23; assert_in_epsilon(3, worksheet.control_aa23, 0.001); end
  def test_control_ai23; assert_equal("With no specific lever implemented, there is a stabilization of methane emissions per animal to today's levels. ", worksheet.control_ai23); end
  def test_control_aj23; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_aj23); end
  def test_control_ak23; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_ak23); end
  def test_control_al23; assert_equal("Various reduction measures such as nutritional management and optimizing ration per animal lead to a reduction in the emissions per animal of -0,06% per year from 2010 to 2030, followed by a stabilization up to 2050. ", worksheet.control_al23); end
  def test_control_am23; assert_equal(" ", worksheet.control_am23); end
  def test_control_an23; assert_equal("X.a", worksheet.control_an23); end
  def test_control_ao23; assert_equal("Domestic lighting, appliances, and cooking", worksheet.control_ao23); end
  def test_control_bj23; assert_equal("IPCC Sectors Emissions", worksheet.control_bj23); end
  def test_control_f24; assert_equal("(i) Demand / Efficiency", worksheet.control_f24); end
  def test_control_h24; assert_in_epsilon(3, worksheet.control_h24, 0.001); end
  def test_control_p24; assert_equal("No significant effort to reduce demand further in this sector could lead to 25% increase in demand per household due to:1. Total demand of energy for lighting stabilizing at today’s levels as demand increases and efficiency levels continue to improve as they have in the past;2. Demand for white appliances could increase very slightly in line with historic trends: +10% increase in demand;3. Demand for energy for black appliances could increase significantly up to 50% by 2050;4. Demand for energy for cooking could remain stable at current levels;5. There would be no significant change in the way we manage our use of lighting or appliances", worksheet.control_p24); end
  def test_control_q24; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_q24); end
  def test_control_r24; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_r24); end
  def test_control_s24; assert_equal("At level 4, a decrease in demand per household in 2050 by 40% is technically possible. This requires the following evolutions: 1. All lights are replaced with extremely efficient lights (such as LEDs at 75 lumens/watt), leading to ~50% lower energy demand even with an increase in population;2. All cold appliances are replaced with extremely efficient cold appliances by 2050: each appliance uses about 80% less energy through technological improvements;3. When replacing consumer electronics and home computing products, only the best practice products are adopted until 2050 leading to ~50% decrease in efficiency.  An increase of the penetration level of 50% is assumed;4. 15% less energy is used through a more careful use of lighting and appliances", worksheet.control_s24); end
  def test_control_t24; assert_equal(" ", worksheet.control_t24); end
  def test_control_y24; assert_equal("(iii) Emissions intensity per animal (manure management)", worksheet.control_y24); end
  def test_control_aa24; assert_in_epsilon(3, worksheet.control_aa24, 0.001); end
  def test_control_ai24; assert_equal("Increase in the emissions of manure per animal of 0,31% per year from 2010 to 2030, followed by a stabilization of the emissions per animal up to 2050 due to an increase in productivity.", worksheet.control_ai24); end
  def test_control_aj24; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_aj24); end
  def test_control_ak24; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_ak24); end
  def test_control_al24; assert_equal("The increase of production efficiency reduced the amount of animals required to produce the same amount of meat. Along with that, an larger share of manure is treated in anaerobic digesters and good manure management practices increase. All this leads to a reduction of the emissions per animal of -3,1% per year up to 2030, and a stabilization after that to 2050.", worksheet.control_al24); end
  def test_control_am24; assert_equal(" ", worksheet.control_am24); end
  def test_control_an24; assert_in_delta(0, (worksheet.control_an24||0), 0.001); end
  def test_control_ao24; assert_equal("(i) Demand / Efficiency", worksheet.control_ao24); end
  def test_control_ap24; assert_in_delta(1, worksheet.control_ap24, 0.001); end
  def test_control_aq24; assert_in_epsilon(3, worksheet.control_aq24, 0.001); end
  def test_control_ar24; assert_in_epsilon(4, worksheet.control_ar24, 0.001); end
  def test_control_as24; assert_in_epsilon(2, worksheet.control_as24, 0.001); end
  def test_control_at24; assert_in_epsilon(4, worksheet.control_at24, 0.001); end
  def test_control_au24; assert_in_epsilon(2, worksheet.control_au24, 0.001); end
  def test_control_av24; assert_in_epsilon(2, worksheet.control_av24, 0.001); end
  def test_control_aw24; assert_in_epsilon(2, worksheet.control_aw24, 0.001); end
  def test_control_ax24; assert_in_epsilon(3, worksheet.control_ax24, 0.001); end
  def test_control_ay24; assert_in_epsilon(4, worksheet.control_ay24, 0.001); end
  def test_control_bk24; assert_equal("Carbon capture", worksheet.control_bk24); end
  def test_control_f25; assert_equal("(ii) Electrification", worksheet.control_f25); end
  def test_control_h25; assert_in_epsilon(3, worksheet.control_h25, 0.001); end
  def test_control_p25; assert_equal("[NELE]", worksheet.control_p25); end
  def test_control_q25; assert_equal("[NELE]", worksheet.control_q25); end
  def test_control_r25; assert_equal("[NELE]", worksheet.control_r25); end
  def test_control_s25; assert_equal("[NELE]", worksheet.control_s25); end
  def test_control_t25; assert_equal(" ", worksheet.control_t25); end
  def test_control_y25; assert_equal("(iv) Evolution of soil emissions", worksheet.control_y25); end
  def test_control_ai25; assert_equal("Overall stabilization of direct N2O emissions as the impact of an increase of N input to agricultural soils is offset by a decrease of ha agricultural land. The emissions from grazing increase as nitrogen excretions per animal increase due to improved nutrition in support of productivity growth. This all leads to an increase in overall agricultural emissions of 0,11% per year up to 2030, and a stabilization after that up to 2050. ", worksheet.control_ai25); end
  def test_control_aj25; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_aj25); end
  def test_control_ak25; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_ak25); end
  def test_control_al25; assert_equal("Improvements in the use and the efficiency of nitrogen reduce the amount of N input to the soil and reduce direct emissions. Additionally, the decrease in the nitrogen excreted also reduce emissions from grazing. This leads to a reduction in the overall emissions on agricultural soils of -0,66% per year up to 2030, and a stabilization thereafter up to 2050.", worksheet.control_al25); end
  def test_control_am25; assert_equal(" ", worksheet.control_am25); end
  def test_control_an25; assert_in_delta(0, (worksheet.control_an25||0), 0.001); end
  def test_control_ao25; assert_equal("(ii) Electrification", worksheet.control_ao25); end
  def test_control_ap25; assert_in_delta(1, worksheet.control_ap25, 0.001); end
  def test_control_aq25; assert_in_epsilon(3, worksheet.control_aq25, 0.001); end
  def test_control_ar25; assert_in_epsilon(2, worksheet.control_ar25, 0.001); end
  def test_control_as25; assert_in_epsilon(3, worksheet.control_as25, 0.001); end
  def test_control_at25; assert_in_epsilon(4, worksheet.control_at25, 0.001); end
  def test_control_au25; assert_in_epsilon(4, worksheet.control_au25, 0.001); end
  def test_control_av25; assert_in_epsilon(4, worksheet.control_av25, 0.001); end
  def test_control_aw25; assert_in_epsilon(2, worksheet.control_aw25, 0.001); end
  def test_control_ax25; assert_in_epsilon(3, worksheet.control_ax25, 0.001); end
  def test_control_ay25; assert_in_epsilon(4, worksheet.control_ay25, 0.001); end
  def test_control_d26; assert_equal("Commercial Heating", worksheet.control_d26); end
  def test_control_e26; assert_equal("IX.c", worksheet.control_e26); end
  def test_control_f26; assert_equal("Commercial heating and cooling", worksheet.control_f26); end
  def test_control_t26; assert_equal(" ", worksheet.control_t26); end
  def test_control_y26; assert_equal("(v) Belgian indigenous biomass production ", worksheet.control_y26); end
  def test_control_aa26; assert_in_epsilon(3, worksheet.control_aa26, 0.001); end
  def test_control_ai26; assert_equal("The biomass potential is exploited to reach Belgian objectives of 13% RES in final energy demand by 2020. Exploitation then increases progressively to reach 100% of the potential identified by Valbiom in Wallonia, and Ovam in Flanders in 2050 (altogether ~27 TWh of biomass and biogas) ", worksheet.control_ai26); end
  def test_control_aj26; assert_equal("100% of the biomass potential identified by Valbiom in Wallonia, and Ovam in Flanders is exploited in 2020 (altogether ~27 TWh of biomass and biogas) and stays stable after that.", worksheet.control_aj26); end
  def test_control_ak26; assert_equal("100% of the biomass potential identified by Valbiom in Wallonia, and Ovam in Flanders is exploited in 2020 (altogether ~27 TWh of biomass and biogas) and stays stable after that. The biomass potential remains stable after that, and biogas production increases progressively to reach the full potential identified by Edora in Wallonia en 2050 (~3 to ~9 TWh, bringing total potential to 36 TWh).", worksheet.control_ak26); end
  def test_control_al26; assert_equal("100% of the biomass potential identified by Valbiom and Edora in Wallonia, and Ovam in Flanders is exploited in 2020 (~33 TWh of biomass and biogas). Production continues to increase slightly over time with improved efficiency, reaching 30% more in 2050 (~45 TWh).", worksheet.control_al26); end
  def test_control_am26; assert_equal(" ", worksheet.control_am26); end
  def test_control_an26; assert_equal("IX.c", worksheet.control_an26); end
  def test_control_ao26; assert_equal("Commercial heating and cooling", worksheet.control_ao26); end
  def test_control_f27; assert_equal("(i) Heat / cooling demand", worksheet.control_f27); end
  def test_control_h27; assert_in_epsilon(3, worksheet.control_h27, 0.001); end
  def test_control_p27; assert_equal("(1) Economic growth: the added value of the services sector will increase on average with 2.3% until 2020 and with 1.8% between 2020-2050;(2a) Heating demand/added value:  same performance improvement of the envelope as assumed for the residential sector (minor changes) will result in a 13% efficiency improvement compared to the level of 2010;(2b) Cooling demand/added value: today almost 66% of the floor space of offices has active cooling.  In 2050, 90% of the offices will be actively cooled", worksheet.control_p27); end
  def test_control_q27; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_q27); end
  def test_control_r27; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_r27); end
  def test_control_s27; assert_equal("(1) Economic growth – pessimistic view: the added value of the services sector will increase on average with only 0.4% between 2010-2050.  This growth equals the increase in Belgian population;(2a) Heating demand:  Same performance improvement of the envelope as assumed for the residential sector, a reduction of 85% of heat demand compared to the level of 2010;(2b) Cooling demand: the fraction of non-residential floor space with airco is reduced by 50% due to increase in the use of passive cooling systems. Nearly all new build airco is achieved through passive design measures, achieving a 90% reduction in cooling demand compared to the level of 2010", worksheet.control_s27); end
  def test_control_t27; assert_equal(" ", worksheet.control_t27); end
  def test_control_x27; assert_equal("VI.b", worksheet.control_x27); end
  def test_control_y27; assert_equal("Volume of Waste & Recycling", worksheet.control_y27); end
  def test_control_ai27; assert_equal("GHG Stabilization at current level ", worksheet.control_ai27); end
  def test_control_aj27; assert_equal("Linear decrease of 50% to reach 0,6 MtCO2e in 2050.", worksheet.control_aj27); end
  def test_control_ak27; assert_equal("Linear decrease of 75% to reach 0,3 MtCO2e in 2050.", worksheet.control_ak27); end
  def test_control_al27; assert_equal("Linear decrese to reach 0 MtCO2e in 2050.", worksheet.control_al27); end
  def test_control_am27; assert_equal(" ", worksheet.control_am27); end
  def test_control_an27; assert_in_delta(0, (worksheet.control_an27||0), 0.001); end
  def test_control_ao27; assert_equal("(i) Heat / cooling demand", worksheet.control_ao27); end
  def test_control_ap27; assert_in_delta(1, worksheet.control_ap27, 0.001); end
  def test_control_aq27; assert_in_epsilon(3, worksheet.control_aq27, 0.001); end
  def test_control_ar27; assert_in_epsilon(4, worksheet.control_ar27, 0.001); end
  def test_control_as27; assert_in_epsilon(2, worksheet.control_as27, 0.001); end
  def test_control_at27; assert_in_epsilon(4, worksheet.control_at27, 0.001); end
  def test_control_au27; assert_in_delta(1, worksheet.control_au27, 0.001); end
  def test_control_av27; assert_in_delta(1, worksheet.control_av27, 0.001); end
  def test_control_aw27; assert_in_epsilon(2, worksheet.control_aw27, 0.001); end
  def test_control_ax27; assert_in_epsilon(3, worksheet.control_ax27, 0.001); end
  def test_control_ay27; assert_in_epsilon(4, worksheet.control_ay27, 0.001); end
  def test_control_f28; assert_equal("(ii) Efficiency", worksheet.control_f28); end
  def test_control_h28; assert_in_epsilon(3, worksheet.control_h28, 0.001); end
  def test_control_p28; assert_equal("[NELE]", worksheet.control_p28); end
  def test_control_q28; assert_equal("[NELE]", worksheet.control_q28); end
  def test_control_r28; assert_equal("[NELE]", worksheet.control_r28); end
  def test_control_s28; assert_equal("[NELE]", worksheet.control_s28); end
  def test_control_t28; assert_equal(" ", worksheet.control_t28); end
  def test_control_x28; assert_equal("VI.c", worksheet.control_x28); end
  def test_control_y28; assert_equal("Marine algae  [UNUSED]", worksheet.control_y28); end
  def test_control_am28; assert_equal(" ", worksheet.control_am28); end
  def test_control_an28; assert_in_delta(0, (worksheet.control_an28||0), 0.001); end
  def test_control_ao28; assert_equal("(ii) Efficiency", worksheet.control_ao28); end
  def test_control_ap28; assert_in_delta(1, worksheet.control_ap28, 0.001); end
  def test_control_aq28; assert_in_epsilon(3, worksheet.control_aq28, 0.001); end
  def test_control_ar28; assert_in_epsilon(4, worksheet.control_ar28, 0.001); end
  def test_control_as28; assert_in_epsilon(3, worksheet.control_as28, 0.001); end
  def test_control_at28; assert_in_epsilon(4, worksheet.control_at28, 0.001); end
  def test_control_au28; assert_in_epsilon(4, worksheet.control_au28, 0.001); end
  def test_control_av28; assert_in_epsilon(4, worksheet.control_av28, 0.001); end
  def test_control_aw28; assert_in_epsilon(2, worksheet.control_aw28, 0.001); end
  def test_control_ax28; assert_in_epsilon(3, worksheet.control_ax28, 0.001); end
  def test_control_ay28; assert_in_epsilon(4, worksheet.control_ay28, 0.001); end
  def test_control_f29; assert_equal("(iii) Electrification level", worksheet.control_f29); end
  def test_control_p29; assert_equal("20% of the installed heating devices in the stock will be heat pumps (air & ground source) by 2050", worksheet.control_p29); end
  def test_control_q29; assert_equal("40% of the installed heating devices in the stock will be heat pumps (air & ground source) by 2050", worksheet.control_q29); end
  def test_control_r29; assert_equal("60% of the installed heating devices in the stock will be heat pumps (air & ground source) by 2050", worksheet.control_r29); end
  def test_control_s29; assert_equal("85% of the installed heating devices in the stock will be heat pumps (air & ground source) by 2050", worksheet.control_s29); end
  def test_control_t29; assert_equal(" ", worksheet.control_t29); end
  def test_control_w29; assert_equal("Imported", worksheet.control_w29); end
  def test_control_x29; assert_equal("V.b", worksheet.control_x29); end
  def test_control_y29; assert_equal("Bioenergy imports", worksheet.control_y29); end
  def test_control_ai29; assert_equal("Gradual increase of the import level to 20 TWh/year in 2020 and then to 30 TWh/year in 2050.", worksheet.control_ai29); end
  def test_control_aj29; assert_equal("Gradual increase of the import level to 20 TWh/year in 2020 and then to 38 TWh/year in 2050.", worksheet.control_aj29); end
  def test_control_ak29; assert_equal("Gradual increase of the import level to 20 TWh/year in 2020 and then to 47 TWh/year in 2050.", worksheet.control_ak29); end
  def test_control_al29; assert_equal("Gradual increase of the import level to 20 TWh/year in 2020 and then to 56 TWh/year in 2050.", worksheet.control_al29); end
  def test_control_am29; assert_equal(" ", worksheet.control_am29); end
  def test_control_an29; assert_in_delta(0, (worksheet.control_an29||0), 0.001); end
  def test_control_ao29; assert_equal("(iii) Electrification level", worksheet.control_ao29); end
  def test_control_ap29; assert_in_delta(1, worksheet.control_ap29, 0.001); end
  def test_control_aq29; assert_in_epsilon(3, worksheet.control_aq29, 0.001); end
  def test_control_ar29; assert_in_epsilon(2, worksheet.control_ar29, 0.001); end
  def test_control_as29; assert_in_epsilon(4, worksheet.control_as29, 0.001); end
  def test_control_at29; assert_in_epsilon(4, worksheet.control_at29, 0.001); end
  def test_control_au29; assert_in_epsilon(4, worksheet.control_au29, 0.001); end
  def test_control_av29; assert_in_epsilon(4, worksheet.control_av29, 0.001); end
  def test_control_aw29; assert_in_epsilon(2, worksheet.control_aw29, 0.001); end
  def test_control_ax29; assert_in_epsilon(3, worksheet.control_ax29, 0.001); end
  def test_control_ay29; assert_in_epsilon(4, worksheet.control_ay29, 0.001); end
  def test_control_f30; assert_equal("(iv) Level of innovative heating technology", worksheet.control_f30); end
  def test_control_p30; assert_equal("Innovative technologies represent 10% of the non-electric heating installations", worksheet.control_p30); end
  def test_control_q30; assert_equal("Innovative technologies represent 20% of the non-electric heating installations", worksheet.control_q30); end
  def test_control_r30; assert_equal("Innovative technologies represent 30% of the non-electric heating installations", worksheet.control_r30); end
  def test_control_s30; assert_equal("Innovative technologies represent 40% of the non-electric heating installations", worksheet.control_s30); end
  def test_control_t30; assert_equal(" ", worksheet.control_t30); end
  def test_control_v30; assert_equal("Electricity Balancing & Other", worksheet.control_v30); end
  def test_control_ac30; assert_in_delta(1, worksheet.control_ac30, 0.001); end
  def test_control_ad30; assert_in_epsilon(2, worksheet.control_ad30, 0.001); end
  def test_control_ae30; assert_in_epsilon(3, worksheet.control_ae30, 0.001); end
  def test_control_af30; assert_in_epsilon(4, worksheet.control_af30, 0.001); end
  def test_control_am30; assert_equal(" ", worksheet.control_am30); end
  def test_control_an30; assert_in_delta(0, (worksheet.control_an30||0), 0.001); end
  def test_control_ao30; assert_equal("(iv) Level of innovative heating technology", worksheet.control_ao30); end
  def test_control_ap30; assert_in_delta(1, worksheet.control_ap30, 0.001); end
  def test_control_aq30; assert_in_delta(1, worksheet.control_aq30, 0.001); end
  def test_control_ar30; assert_in_delta(1, worksheet.control_ar30, 0.001); end
  def test_control_as30; assert_in_epsilon(2, worksheet.control_as30, 0.001); end
  def test_control_at30; assert_in_epsilon(2, worksheet.control_at30, 0.001); end
  def test_control_au30; assert_in_epsilon(2, worksheet.control_au30, 0.001); end
  def test_control_av30; assert_in_epsilon(2, worksheet.control_av30, 0.001); end
  def test_control_aw30; assert_in_epsilon(2, worksheet.control_aw30, 0.001); end
  def test_control_ax30; assert_in_epsilon(3, worksheet.control_ax30, 0.001); end
  def test_control_ay30; assert_in_epsilon(4, worksheet.control_ay30, 0.001); end
  def test_control_d31; assert_equal("Commercial Lighting & Appliances", worksheet.control_d31); end
  def test_control_e31; assert_equal("X.b", worksheet.control_e31); end
  def test_control_f31; assert_equal("Commercial lighting, appliances, and catering", worksheet.control_f31); end
  def test_control_t31; assert_equal(" ", worksheet.control_t31); end
  def test_control_v31; assert_equal("Geosequestration", worksheet.control_v31); end
  def test_control_x31; assert_equal("XIV.a", worksheet.control_x31); end
  def test_control_y31; assert_equal("Geosequestration [UNUSED]", worksheet.control_y31); end
  def test_control_am31; assert_equal(" ", worksheet.control_am31); end
  def test_control_an31; assert_equal("X.b", worksheet.control_an31); end
  def test_control_ao31; assert_equal("Commercial lighting, appliances, and catering", worksheet.control_ao31); end
  def test_control_f32; assert_equal("(i) Demand / Efficiency", worksheet.control_f32); end
  def test_control_h32; assert_in_epsilon(3, worksheet.control_h32, 0.001); end
  def test_control_p32; assert_equal("1. Office Lighting: this demand will stabilize at today’s levels as efficiency levels continue to improve as they have in the past, while the penetration of office lighting continues to increase. 2. Appliances: the electricity consumption for appliances will grow with 25% between 2010 and 2050, due to increased penetration", worksheet.control_p32); end
  def test_control_q32; assert_equal("linear interpolation between level 1 and level 4", worksheet.control_q32); end
  def test_control_r32; assert_equal("linear interpolation between level 1 and level 4", worksheet.control_r32); end
  def test_control_s32; assert_equal("1. Office Lighting: demand for lighting per added value could halve by 2050 through eg. the increased use of LEDs instead of other, less efficient lighting technologies and eg. through the use of motion detective lighting.2. Appliances: through increasing adoption of more efficient technologies, electricity consumption is reduced by 25% by 2050", worksheet.control_s32); end
  def test_control_t32; assert_equal(" ", worksheet.control_t32); end
  def test_control_v32; assert_equal("Balancing & Storage", worksheet.control_v32); end
  def test_control_x32; assert_equal("VII.c", worksheet.control_x32); end
  def test_control_y32; assert_equal("EU transmission integration", worksheet.control_y32); end
  def test_control_ai32; assert_equal("Weak integration (25%) of the Belgian electricity transmission network with the rest of Europe compared to an optimal integration", worksheet.control_ai32); end
  def test_control_aj32; assert_equal("Strong integration (50%) of the Belgian electricity transmission network with the rest of Europe compared to an optimal integration", worksheet.control_aj32); end
  def test_control_ak32; assert_equal("Very strong integration (75%) of the Belgian electricity transmission network with the rest of Europe compared to an optimal integration", worksheet.control_ak32); end
  def test_control_al32; assert_equal("Complete integration (100%) of the Belgian electricity transmission network with the rest of Europe compared to an optimal integration", worksheet.control_al32); end
  def test_control_am32; assert_equal(" ", worksheet.control_am32); end
  def test_control_an32; assert_in_delta(0, (worksheet.control_an32||0), 0.001); end
  def test_control_ao32; assert_equal("(i) Demand / Efficiency", worksheet.control_ao32); end
  def test_control_ap32; assert_in_delta(1, worksheet.control_ap32, 0.001); end
  def test_control_aq32; assert_in_epsilon(3, worksheet.control_aq32, 0.001); end
  def test_control_ar32; assert_in_epsilon(4, worksheet.control_ar32, 0.001); end
  def test_control_as32; assert_in_epsilon(2, worksheet.control_as32, 0.001); end
  def test_control_at32; assert_in_epsilon(4, worksheet.control_at32, 0.001); end
  def test_control_au32; assert_in_epsilon(2, worksheet.control_au32, 0.001); end
  def test_control_av32; assert_in_epsilon(2, worksheet.control_av32, 0.001); end
  def test_control_aw32; assert_in_epsilon(2, worksheet.control_aw32, 0.001); end
  def test_control_ax32; assert_in_epsilon(3, worksheet.control_ax32, 0.001); end
  def test_control_ay32; assert_in_epsilon(4, worksheet.control_ay32, 0.001); end
  def test_control_f33; assert_equal("(ii) Electrification", worksheet.control_f33); end
  def test_control_p33; assert_equal("[NELE]", worksheet.control_p33); end
  def test_control_q33; assert_equal("[NELE]", worksheet.control_q33); end
  def test_control_r33; assert_equal("[NELE]", worksheet.control_r33); end
  def test_control_s33; assert_equal("[NELE]", worksheet.control_s33); end
  def test_control_t33; assert_equal(" ", worksheet.control_t33); end
  def test_control_an33; assert_in_delta(0, (worksheet.control_an33||0), 0.001); end
  def test_control_ao33; assert_equal("(ii) Electrification", worksheet.control_ao33); end
  def test_control_ap33; assert_in_delta(1, worksheet.control_ap33, 0.001); end
  def test_control_aq33; assert_in_epsilon(3, worksheet.control_aq33, 0.001); end
  def test_control_ar33; assert_in_epsilon(2, worksheet.control_ar33, 0.001); end
  def test_control_as33; assert_in_epsilon(3, worksheet.control_as33, 0.001); end
  def test_control_at33; assert_in_epsilon(4, worksheet.control_at33, 0.001); end
  def test_control_au33; assert_in_epsilon(4, worksheet.control_au33, 0.001); end
  def test_control_av33; assert_in_epsilon(4, worksheet.control_av33, 0.001); end
  def test_control_aw33; assert_in_epsilon(2, worksheet.control_aw33, 0.001); end
  def test_control_ax33; assert_in_epsilon(3, worksheet.control_ax33, 0.001); end
  def test_control_ay33; assert_in_epsilon(4, worksheet.control_ay33, 0.001); end
  def test_control_c34; assert_equal("Industry", worksheet.control_c34); end
  def test_control_d34; assert_equal("Industry sectors", worksheet.control_d34); end
  def test_control_e34; assert_equal("XI.a", worksheet.control_e34); end
  def test_control_f34; assert_equal("Steel Industry Production", worksheet.control_f34); end
  def test_control_p34; assert_equal("Growth of 0,46% per year (+20% by 2050).   Oxi-steel is only produced in  Arcelor Mittal Gent ( with a maximum capacity of 5 Mton).  Electro-steel is produced on all other sites", worksheet.control_p34); end
  def test_control_q34; assert_equal("Stabilised without growth", worksheet.control_q34); end
  def test_control_r34; assert_equal("Reduction of 1,72% per year (-50 % by 2050).", worksheet.control_r34); end
  def test_control_s34; assert_equal(" ", worksheet.control_s34); end
  def test_control_t34; assert_equal(" ", worksheet.control_t34); end
  def test_control_an34; assert_equal("XI.a", worksheet.control_an34); end
  def test_control_ao34; assert_equal("Steel Industry Production", worksheet.control_ao34); end
  def test_control_ap34; assert_in_epsilon(20, worksheet.control_ap34, 0.001); end
  def test_control_aq34; assert_in_epsilon(20, worksheet.control_aq34, 0.001); end
  def test_control_ar34; assert_in_epsilon(20, worksheet.control_ar34, 0.001); end
  def test_control_as34; assert_in_epsilon(20, worksheet.control_as34, 0.001); end
  def test_control_at34; assert_in_epsilon(20, worksheet.control_at34, 0.001); end
  def test_control_au34; assert_in_epsilon(20, worksheet.control_au34, 0.001); end
  def test_control_av34; assert_in_epsilon(20, worksheet.control_av34, 0.001); end
  def test_control_aw34; assert_in_epsilon(20, worksheet.control_aw34, 0.001); end
  def test_control_ax34; assert_in_epsilon(20, worksheet.control_ax34, 0.001); end
  def test_control_ay34; assert_in_epsilon(20, worksheet.control_ay34, 0.001); end
  def test_control_f35; assert_equal("Energy Intensity of Output", worksheet.control_f35); end
  def test_control_p35; assert_equal("Increase  of electro-steel by 17% in 2050 vs 2010 (shifting Wallonia integrated steel production to electric)", worksheet.control_p35); end
  def test_control_q35; assert_equal("Increase  of electro-steel by 17% by 2050 vs 2010(shifting Wallonia integrated steel production to electric), +13% shift to high processability steel,5% improvement of overall energy efficiency in integrated steel production. Introduction of Top Gas recirculation, resulting in 25 %  savings of coke and coal.  Coal substitution at 2% by gas injection, coal PCI susbtitution at 15 % by biomass.  CCS oxygen steel (on top gas recirculation)", worksheet.control_q35); end
  def test_control_r35; assert_equal("Increase  of electro-steel by 17% by 2050 vs 2010 (shifting Wallonia integrated steel production to electric), +25% shift to high processability steel,5% improvement of overall energy efficiency in integrated steel production, Introduction of Hisarna technology (closing of coke and sinter plants and enabling +35% efficiency),  Coal substitution at 3% by gas injection, Coal PCI substitution at 15% by biomass, CCS  applies on all emissions sources in steel production  ", worksheet.control_r35); end
  def test_control_s35; assert_equal("Shift of 100 % steel to electro steel production by 2050 vs 2010, +38% shift to high processability steel, 10 % improvement of overall energy efficiency.CCS  applies on all emissions sources in steel production", worksheet.control_s35); end
  def test_control_t35; assert_equal(" ", worksheet.control_t35); end
  def test_control_an35; assert_in_delta(0, (worksheet.control_an35||0), 0.001); end
  def test_control_ao35; assert_equal("Energy Intensity of Output", worksheet.control_ao35); end
  def test_control_ap35; assert_in_epsilon(10, worksheet.control_ap35, 0.001); end
  def test_control_aq35; assert_in_epsilon(30, worksheet.control_aq35, 0.001); end
  def test_control_ar35; assert_in_epsilon(30, worksheet.control_ar35, 0.001); end
  def test_control_as35; assert_in_epsilon(30, worksheet.control_as35, 0.001); end
  def test_control_at35; assert_in_epsilon(40, worksheet.control_at35, 0.001); end
  def test_control_au35; assert_in_epsilon(40, worksheet.control_au35, 0.001); end
  def test_control_av35; assert_in_epsilon(40, worksheet.control_av35, 0.001); end
  def test_control_aw35; assert_in_epsilon(20, worksheet.control_aw35, 0.001); end
  def test_control_ax35; assert_in_epsilon(30, worksheet.control_ax35, 0.001); end
  def test_control_ay35; assert_in_epsilon(40, worksheet.control_ay35, 0.001); end
  def test_control_e36; assert_equal("XI.b", worksheet.control_e36); end
  def test_control_f36; assert_equal("Cement Industry Production", worksheet.control_f36); end
  def test_control_p36; assert_equal("Growth of +0.23% per year (+10% by 2050), supported by the building sector", worksheet.control_p36); end
  def test_control_q36; assert_equal("Stabilised without growth", worksheet.control_q36); end
  def test_control_r36; assert_equal("Reduction of -0.25% per year (-10% by 2050)", worksheet.control_r36); end
  def test_control_s36; assert_equal(" ", worksheet.control_s36); end
  def test_control_t36; assert_equal(" ", worksheet.control_t36); end
  def test_control_an36; assert_equal("XI.b", worksheet.control_an36); end
  def test_control_ao36; assert_equal("Cement Industry Production", worksheet.control_ao36); end
  def test_control_ap36; assert_in_epsilon(20, worksheet.control_ap36, 0.001); end
  def test_control_aq36; assert_in_epsilon(10, worksheet.control_aq36, 0.001); end
  def test_control_ar36; assert_in_epsilon(10, worksheet.control_ar36, 0.001); end
  def test_control_as36; assert_in_epsilon(10, worksheet.control_as36, 0.001); end
  def test_control_at36; assert_in_epsilon(10, worksheet.control_at36, 0.001); end
  def test_control_au36; assert_in_epsilon(10, worksheet.control_au36, 0.001); end
  def test_control_av36; assert_in_epsilon(10, worksheet.control_av36, 0.001); end
  def test_control_aw36; assert_in_epsilon(10, worksheet.control_aw36, 0.001); end
  def test_control_ax36; assert_in_epsilon(10, worksheet.control_ax36, 0.001); end
  def test_control_ay36; assert_in_epsilon(10, worksheet.control_ay36, 0.001); end
  def test_control_f37; assert_equal("Energy Intensity of Output", worksheet.control_f37); end
  def test_control_p37; assert_equal("Clinker substitution by steel slag reduces energy & process emissions by -15% by 2050 vs 2010, energy efficiency increases by +13%", worksheet.control_p37); end
  def test_control_q37; assert_equal("Clinker subsitution by steel slag reduces energy & process emissions by -27% by 2050 vs 2010, energy efficiency increases by +17%, fuels substituted at 33% by solid biomass", worksheet.control_q37); end
  def test_control_r37; assert_equal("Clinker substitution by steel slag reduces energy and process emissions by -53% by 2050 vs 2010, energy efficiency increases by +34%, fuels substituted at 66% by solid biomass", worksheet.control_r37); end
  def test_control_s37; assert_equal("Clinker subsitution by steel slag reduces energy and process emissions by -85% by 2050 vs 2010, energy efficiency increases by +41%, fuels substituted at 100% by solid biomass", worksheet.control_s37); end
  def test_control_t37; assert_equal(" ", worksheet.control_t37); end
  def test_control_an37; assert_in_delta(0, (worksheet.control_an37||0), 0.001); end
  def test_control_ao37; assert_equal("Energy Intensity of Output", worksheet.control_ao37); end
  def test_control_ap37; assert_in_epsilon(10, worksheet.control_ap37, 0.001); end
  def test_control_aq37; assert_in_epsilon(30, worksheet.control_aq37, 0.001); end
  def test_control_ar37; assert_in_epsilon(30, worksheet.control_ar37, 0.001); end
  def test_control_as37; assert_in_epsilon(30, worksheet.control_as37, 0.001); end
  def test_control_at37; assert_in_epsilon(40, worksheet.control_at37, 0.001); end
  def test_control_au37; assert_in_epsilon(40, worksheet.control_au37, 0.001); end
  def test_control_av37; assert_in_epsilon(40, worksheet.control_av37, 0.001); end
  def test_control_aw37; assert_in_epsilon(20, worksheet.control_aw37, 0.001); end
  def test_control_ax37; assert_in_epsilon(30, worksheet.control_ax37, 0.001); end
  def test_control_ay37; assert_in_epsilon(40, worksheet.control_ay37, 0.001); end
  def test_control_e38; assert_equal("XI.c", worksheet.control_e38); end
  def test_control_f38; assert_equal("Lime Industry Production", worksheet.control_f38); end
  def test_control_p38; assert_equal("Growth of +0.1% per year (+5% by 2050), supported by demand for water purification, canal dredging and infrastructure demand", worksheet.control_p38); end
  def test_control_q38; assert_equal("Stabilised without growth", worksheet.control_q38); end
  def test_control_r38; assert_equal("Reduction of -0.8% per year (-30% by 2050), caused by the closure of the steel hot phase", worksheet.control_r38); end
  def test_control_s38; assert_equal(" ", worksheet.control_s38); end
  def test_control_t38; assert_equal(" ", worksheet.control_t38); end
  def test_control_an38; assert_equal("XI.c", worksheet.control_an38); end
  def test_control_ao38; assert_equal("Lime Industry Production", worksheet.control_ao38); end
  def test_control_ap38; assert_in_epsilon(20, worksheet.control_ap38, 0.001); end
  def test_control_aq38; assert_in_epsilon(20, worksheet.control_aq38, 0.001); end
  def test_control_ar38; assert_in_epsilon(20, worksheet.control_ar38, 0.001); end
  def test_control_as38; assert_in_epsilon(20, worksheet.control_as38, 0.001); end
  def test_control_at38; assert_in_epsilon(20, worksheet.control_at38, 0.001); end
  def test_control_au38; assert_in_epsilon(20, worksheet.control_au38, 0.001); end
  def test_control_av38; assert_in_epsilon(20, worksheet.control_av38, 0.001); end
  def test_control_aw38; assert_in_epsilon(20, worksheet.control_aw38, 0.001); end
  def test_control_ax38; assert_in_epsilon(20, worksheet.control_ax38, 0.001); end
  def test_control_ay38; assert_in_epsilon(20, worksheet.control_ay38, 0.001); end
  def test_control_f39; assert_equal("Energy Intensity of Output", worksheet.control_f39); end
  def test_control_p39; assert_equal("Energy efficiency increases by +13% by 2050 vs 2010", worksheet.control_p39); end
  def test_control_q39; assert_equal("Energy efficiency increases by +23%, Lignite is substituded at +33% by gas, fuels substitued at 10% by solid biomass", worksheet.control_q39); end
  def test_control_r39; assert_equal("Energy efficiency increases by +30%, lignite is substituted at 66% by gas, fuels substituted at 20% by solid biomass", worksheet.control_r39); end
  def test_control_s39; assert_equal("Energy efficiency increases by +36%, lignite is substituted at 100% by gas, fuels subtituted at 30% by solid biomass", worksheet.control_s39); end
  def test_control_t39; assert_equal(" ", worksheet.control_t39); end
  def test_control_ac39; assert_equal("Energy demand", worksheet.control_ac39); end
  def test_control_h14; assert_in_epsilon(30, worksheet.control_h14, 0.001); end
  def test_control_aa25; assert_in_epsilon(3, worksheet.control_aa25, 0.001); end
  def test_output_ak12; assert_in_epsilon(61.9487795532026, worksheet.output_ak12, 0.001); end
  def test_xi_a_y306; assert_in_delta(0.005637491465024606, worksheet.xi_a_y306, 0.001); end
  def test_xi_a_y364; assert_in_delta(0.0024737226468367164, worksheet.xi_a_y364, 0.001); end
  def test_xi_a_y363; assert_in_delta(0.0004625439260644167, worksheet.xi_a_y363, 0.001); end
  def test_xi_a_y365; assert_in_delta(0.0011896552942223728, worksheet.xi_a_y365, 0.001); end
  def test_xi_a_y366; assert_in_delta(0.00043388023144671475, worksheet.xi_a_y366, 0.001); end
  def test_xi_a_y367; assert_in_delta(0, (worksheet.xi_a_y367||0), 0.001); end
  def test_xi_a_y368; assert_in_delta(-0.0003077372713822169, worksheet.xi_a_y368, 0.001); end
  def test_xi_a_y369; assert_in_delta(0.004252064827188004, worksheet.xi_a_y369, 0.001); end
  def test_xi_a_ak357; assert_in_delta(0.5817697394968108, worksheet.xi_a_ak357, 0.001); end
  def test_xi_a_ak380; assert_in_delta(0.5643166473119064, worksheet.xi_a_ak380, 0.001); end
  def test_xi_a_ak406; assert_in_delta(0.47966915021512047, worksheet.xi_a_ak406, 0.001); end
  def test_xi_a_n458; assert_in_epsilon(-8.62859124805842, worksheet.xi_a_n458, 0.001); end
  def test_xi_a_f203; assert_in_epsilon(1000, worksheet.xi_a_f203, 0.001); end
  def test_xi_a_f236; assert_in_epsilon(5264, worksheet.xi_a_f236, 0.001); end
  def test_xi_a_g203; assert_in_epsilon(1000, worksheet.xi_a_g203, 0.001); end
  def test_xi_a_g236; assert_in_epsilon(5264, worksheet.xi_a_g236, 0.001); end
  def test_xi_a_h203; assert_in_epsilon(1000, worksheet.xi_a_h203, 0.001); end
  def test_xi_a_h236; assert_in_epsilon(5264, worksheet.xi_a_h236, 0.001); end
  def test_xi_a_i203; assert_in_epsilon(1000, worksheet.xi_a_i203, 0.001); end
  def test_xi_a_i236; assert_in_epsilon(5264, worksheet.xi_a_i236, 0.001); end
  def test_xi_a_j203; assert_in_epsilon(1000, worksheet.xi_a_j203, 0.001); end
  def test_xi_a_j236; assert_in_epsilon(5264, worksheet.xi_a_j236, 0.001); end
  def test_xi_a_k203; assert_in_epsilon(1000, worksheet.xi_a_k203, 0.001); end
  def test_xi_a_k236; assert_in_epsilon(5264, worksheet.xi_a_k236, 0.001); end
  def test_xi_a_l203; assert_in_epsilon(1000, worksheet.xi_a_l203, 0.001); end
  def test_xi_a_l236; assert_in_epsilon(5264, worksheet.xi_a_l236, 0.001); end
  def test_xi_a_m203; assert_in_epsilon(1000, worksheet.xi_a_m203, 0.001); end
  def test_xi_a_m236; assert_in_epsilon(5264, worksheet.xi_a_m236, 0.001); end
  def test_xi_a_m260; assert_in_epsilon(4369.12, worksheet.xi_a_m260, 0.001); end
  def test_xi_a_m283; assert_in_epsilon(4106.9728, worksheet.xi_a_m283, 0.001); end
  def test_xi_a_y356; assert_in_delta(0.003946244025517224, worksheet.xi_a_y356, 0.001); end
  def test_xi_a_y432; assert_in_delta(0.00420682468349408, worksheet.xi_a_y432, 0.001); end
  def test_xi_a_ak358; assert_in_delta(0.279782962530494, worksheet.xi_a_ak358, 0.001); end
  def test_xi_a_ak360; assert_in_delta(0, (worksheet.xi_a_ak360||0), 0.001); end
  def test_xi_a_ak411; assert_in_delta(0.0846474970967861, worksheet.xi_a_ak411, 0.001); end
  def test_xi_a_ak436; assert_in_delta(0.0846474970967861, worksheet.xi_a_ak436, 0.001); end
  def test_xi_a_n459; assert_in_epsilon(-10.944126576750367, worksheet.xi_a_n459, 0.001); end
  def test_xi_a_ak356; assert_in_delta(0.10878101460421724, worksheet.xi_a_ak356, 0.001); end
  def test_xi_a_ak361; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ak361, 0.001); end
  def test_xi_a_ak382; assert_in_delta(0.11949298317444279, worksheet.xi_a_ak382, 0.001); end
  def test_xi_a_n460; assert_in_epsilon(-2.1390407420437216, worksheet.xi_a_n460, 0.001); end
  def test_xi_a_n461; assert_in_epsilon(1.2504215839496178, worksheet.xi_a_n461, 0.001); end
  def test_xi_a_n454; assert_in_epsilon(19.122436982902894, worksheet.xi_a_n454, 0.001); end
  def test_xi_b_ak197; assert_in_delta(0.6781107648046033, worksheet.xi_b_ak197, 0.001); end
  def test_xi_b_ak210; assert_in_delta(0.24103399299308784, worksheet.xi_b_ak210, 0.001); end
  def test_xi_b_ak213; assert_in_delta(0.7, worksheet.xi_b_ak213, 0.001); end
  def test_xi_b_n248; assert_in_epsilon(-2.4396222289315372, worksheet.xi_b_n248, 0.001); end
  def test_xi_b_ak198; assert_in_delta(0.02829057779908894, worksheet.xi_b_ak198, 0.001); end
  def test_xi_b_ak211; assert_in_delta(0.01005586592178771, worksheet.xi_b_ak211, 0.001); end
  def test_xi_b_n249; assert_in_delta(-0.026069742662450896, worksheet.xi_b_n249, 0.001); end
  def test_xi_b_ak199; assert_in_delta(0.019835371213937504, worksheet.xi_b_ak199, 0.001); end
  def test_xi_b_ak212; assert_in_delta(0.007050468705614999, worksheet.xi_b_ak212, 0.001); end
  def test_xi_b_n250; assert_in_delta(-0.018278277200057383, worksheet.xi_b_n250, 0.001); end
  def test_xi_b_ak201; assert_in_delta(0, (worksheet.xi_b_ak201||0), 0.001); end
  def test_xi_b_ak214; assert_in_delta(0, (worksheet.xi_b_ak214||0), 0.001); end
  def test_xi_b_n251; assert_in_delta(0, (worksheet.xi_b_n251||0), 0.001); end
  def test_xi_b_n244; assert_in_epsilon(2.4839702487940456, worksheet.xi_b_n244, 0.001); end
  def test_xi_f_ak211; assert_in_delta(0.01606570727242323, worksheet.xi_f_ak211, 0.001); end
  def test_xi_f_ak202; assert_in_delta(0, (worksheet.xi_f_ak202||0), 0.001); end
  def test_xi_f_ak201; assert_in_delta(0.22548136838656974, worksheet.xi_f_ak201, 0.001); end
  def test_xi_f_ak213; assert_in_delta(0, (worksheet.xi_f_ak213||0), 0.001); end
  def test_xi_f_ak214; assert_in_delta(0.5249798059581458, worksheet.xi_f_ak214, 0.001); end
  def test_xi_f_n259; assert_in_epsilon(-6.623600799999999, worksheet.xi_f_n259, 0.001); end
  def test_xi_f_n260; assert_in_epsilon(-2.7603936, worksheet.xi_f_n260, 0.001); end
  def test_xi_f_n261; assert_in_delta(0, (worksheet.xi_f_n261||0), 0.001); end
  def test_xi_f_n262; assert_in_delta(0, (worksheet.xi_f_n262||0), 0.001); end
  def test_xi_f_n255; assert_in_epsilon(6.263317621388888, worksheet.xi_f_n255, 0.001); end
  def test_control_h46; assert_in_epsilon(40, worksheet.control_h46, 0.001); end
  def test_xi_a_q306; assert_in_delta(0.005934201542131165, worksheet.xi_a_q306, 0.001); end
  def test_xi_a_q364; assert_in_delta(0.00473439741021381, worksheet.xi_a_q364, 0.001); end
  def test_xi_a_q363; assert_in_delta(0.0004868883432257018, worksheet.xi_a_q363, 0.001); end
  def test_xi_a_q365; assert_in_delta(0.0012522687307603925, worksheet.xi_a_q365, 0.001); end
  def test_xi_a_q366; assert_in_delta(0.000456716033101805, worksheet.xi_a_q366, 0.001); end
  def test_xi_a_q367; assert_in_delta(-0.0006721350052945285, worksheet.xi_a_q367, 0.001); end
  def test_xi_a_q368; assert_in_delta(-0.0003239339698760178, worksheet.xi_a_q368, 0.001); end
  def test_xi_a_q369; assert_in_delta(0.005934201542131163, worksheet.xi_a_q369, 0.001); end
  def test_xi_a_ac357; assert_in_delta(0.7978154055943195, worksheet.xi_a_ac357, 0.001); end
  def test_xi_a_ac380; assert_in_delta(0.7978154055943195, worksheet.xi_a_ac380, 0.001); end
  def test_xi_a_ac406; assert_in_delta(0.7978154055943195, worksheet.xi_a_ac406, 0.001); end
  def test_xi_a_f458; assert_in_epsilon(-25.213105831443173, worksheet.xi_a_f458, 0.001); end
  def test_xi_b_ac197; assert_in_delta(0.6781107648046033, worksheet.xi_b_ac197, 0.001); end
  def test_xi_b_ac210; assert_in_delta(0.6781107648046033, worksheet.xi_b_ac210, 0.001); end
  def test_xi_b_ac213; assert_in_delta(0.15599776232717974, worksheet.xi_b_ac213, 0.001); end
  def test_xi_b_f248; assert_in_epsilon(-5.2186, worksheet.xi_b_f248, 0.001); end
  def test_xi_f_ac211; assert_in_delta(0.0215647077482191, worksheet.xi_f_ac211, 0.001); end
  def test_xi_f_ac202; assert_in_delta(0.029643631441892818, worksheet.xi_f_ac202, 0.001); end
  def test_xi_f_ac201; assert_in_delta(0.19583773694467688, worksheet.xi_f_ac201, 0.001); end
  def test_xi_f_ac213; assert_in_delta(0.029643631441892818, worksheet.xi_f_ac213, 0.001); end
  def test_xi_f_ac214; assert_in_delta(0.5194808054823499, worksheet.xi_f_ac214, 0.001); end
  def test_xi_f_f259; assert_in_epsilon(-8.279500999999998, worksheet.xi_f_f259, 0.001); end
  def test_xi_a_e260; assert_in_epsilon(5264, worksheet.xi_a_e260, 0.001); end
  def test_xi_a_e283; assert_in_epsilon(5264, worksheet.xi_a_e283, 0.001); end
  def test_xi_a_q356; assert_in_delta(0.005934201542131165, worksheet.xi_a_q356, 0.001); end
  def test_xi_a_q432; assert_in_delta(0.005934201542131165, worksheet.xi_a_q432, 0.001); end
  def test_xi_a_ac358; assert_in_delta(0.2110256488374445, worksheet.xi_a_ac358, 0.001); end
  def test_xi_a_ac360; assert_in_delta(-0.11326460696060943, worksheet.xi_a_ac360, 0.001); end
  def test_xi_a_ac411; assert_in_delta(0, (worksheet.xi_a_ac411||0), 0.001); end
  def test_xi_a_ac436; assert_in_delta(-0.11326460696060943, worksheet.xi_a_ac436, 0.001); end
  def test_xi_a_f459; assert_in_epsilon(-7.021039410895458, worksheet.xi_a_f459, 0.001); end
  def test_xi_b_ac198; assert_in_delta(0.02829057779908894, worksheet.xi_b_ac198, 0.001); end
  def test_xi_b_ac211; assert_in_delta(0.02829057779908894, worksheet.xi_b_ac211, 0.001); end
  def test_xi_b_f249; assert_in_delta(-0.17699999999999996, worksheet.xi_b_f249, 0.001); end
  def test_xi_f_f260; assert_in_epsilon(-2.9968619999999992, worksheet.xi_f_f260, 0.001); end
  def test_xi_a_ac356; assert_in_delta(0.0820478272887989, worksheet.xi_a_ac356, 0.001); end
  def test_xi_a_ac361; assert_in_delta(-0.054587625239247047, worksheet.xi_a_ac361, 0.001); end
  def test_xi_a_ac382; assert_in_delta(0.0769633504792937, worksheet.xi_a_ac382, 0.001); end
  def test_xi_a_f460; assert_in_epsilon(-2.4677643093590182, worksheet.xi_a_f460, 0.001); end
  def test_xi_b_ac199; assert_in_delta(0.019835371213937504, worksheet.xi_b_ac199, 0.001); end
  def test_xi_b_ac212; assert_in_delta(0.019835371213937504, worksheet.xi_b_ac212, 0.001); end
  def test_xi_b_f250; assert_in_delta(-0.12409999999999999, worksheet.xi_b_f250, 0.001); end
  def test_xi_f_f261; assert_in_delta(-0.45363, worksheet.xi_f_f261, 0.001); end
  def test_xi_a_n455; assert_in_epsilon(4.938463384601724, worksheet.xi_a_n455, 0.001); end
  def test_xi_b_ak196; assert_in_delta(0.11776552385519061, worksheet.xi_b_ak196, 0.001); end
  def test_xi_b_ak209; assert_in_delta(0.04185967237950953, worksheet.xi_b_ak209, 0.001); end
  def test_xi_b_n245; assert_in_delta(0.10852082708301597, worksheet.xi_b_n245, 0.001); end
  def test_xi_f_n256; assert_in_epsilon(2.8582304000000005, worksheet.xi_f_n256, 0.001); end
  def test_xi_a_f455; assert_in_epsilon(5.174092698287021, worksheet.xi_a_f455, 0.001); end
  def test_xi_a_f457; assert_in_epsilon(-5.441092698287021, worksheet.xi_a_f457, 0.001); end
  def test_xi_b_ac196; assert_in_delta(0.11776552385519061, worksheet.xi_b_ac196, 0.001); end
  def test_xi_b_ac209; assert_in_delta(0.11776552385519062, worksheet.xi_b_ac209, 0.001); end
  def test_xi_b_f245; assert_in_delta(0.7368000000000001, worksheet.xi_b_f245, 0.001); end
  def test_xi_b_f247; assert_in_delta(-0.7368000000000001, worksheet.xi_b_f247, 0.001); end
  def test_xi_f_f256; assert_in_epsilon(3.572788, worksheet.xi_f_f256, 0.001); end
  def test_xi_f_f258; assert_in_epsilon(-2.6266213333333335, worksheet.xi_f_f258, 0.001); end
  def test_xi_f_n258; assert_in_epsilon(-1.912063733333334, worksheet.xi_f_n258, 0.001); end
  def test_output_ak16; assert_in_epsilon(96.56234868548488, worksheet.output_ak16, 0.001); end
  def test_output_ak19; assert_in_epsilon(131.21851984141745, worksheet.output_ak19, 0.001); end
  def test_output_ak21; assert_in_epsilon(289.72964808010494, worksheet.output_ak21, 0.001); end
  def test_control_ag39; assert_in_epsilon(289.72964808010494, worksheet.control_ag39, 0.001); end
  def test_control_am39; assert_equal("TWH/yr", worksheet.control_am39); end
  def test_control_an39; assert_in_delta(0, (worksheet.control_an39||0), 0.001); end
  def test_control_ao39; assert_equal("Energy Intensity of Output", worksheet.control_ao39); end
  def test_control_ap39; assert_in_epsilon(10, worksheet.control_ap39, 0.001); end
  def test_control_aq39; assert_in_epsilon(30, worksheet.control_aq39, 0.001); end
  def test_control_ar39; assert_in_epsilon(30, worksheet.control_ar39, 0.001); end
  def test_control_as39; assert_in_epsilon(30, worksheet.control_as39, 0.001); end
  def test_control_at39; assert_in_epsilon(40, worksheet.control_at39, 0.001); end
  def test_control_au39; assert_in_epsilon(40, worksheet.control_au39, 0.001); end
  def test_control_av39; assert_in_epsilon(40, worksheet.control_av39, 0.001); end
  def test_control_aw39; assert_in_epsilon(20, worksheet.control_aw39, 0.001); end
  def test_control_ax39; assert_in_epsilon(30, worksheet.control_ax39, 0.001); end
  def test_control_ay39; assert_in_epsilon(40, worksheet.control_ay39, 0.001); end
  def test_control_e40; assert_equal("XI.d", worksheet.control_e40); end
  def test_control_f40; assert_equal("Glass Industry Production", worksheet.control_f40); end
  def test_control_p40; assert_equal("Growth of +1.7% per year (doubling by 2050), with hollow glass remaining stable", worksheet.control_p40); end
  def test_control_q40; assert_equal("Stabilised without growth", worksheet.control_q40); end
  def test_control_r40; assert_equal("Reduction of 0,4% per year (-16% by 2050), with hollow glass sector reduced by 50% by 2050 and flat and others glasses reduced by 10% by 2050", worksheet.control_r40); end
  def test_control_s40; assert_equal(" ", worksheet.control_s40); end
  def test_control_t40; assert_equal(" ", worksheet.control_t40); end
  def test_control_ac40; assert_equal("Intermittence", worksheet.control_ac40); end
  def test_output_ak162; assert_in_epsilon(1.743053093383472, worksheet.output_ak162, 0.001); end
  def test_output_ak163; assert_in_delta(0, (worksheet.output_ak163||0), 0.001); end
  def test_output_ak164; assert_in_delta(0, (worksheet.output_ak164||0), 0.001); end
  def test_output_ak165; assert_in_delta(0, (worksheet.output_ak165||0), 0.001); end
  def test_output_ak166; assert_in_epsilon(7.769858447488584, worksheet.output_ak166, 0.001); end
  def test_output_ak167; assert_in_epsilon(5.5061, worksheet.output_ak167, 0.001); end
  def test_output_ak169; assert_in_delta(0, (worksheet.output_ak169||0), 0.001); end
  def test_output_ak170; assert_in_delta(0, (worksheet.output_ak170||0), 0.001); end
  def test_output_ak171; assert_in_delta(0, (worksheet.output_ak171||0), 0.001); end
  def test_output_ak172; assert_in_epsilon(3.2686005909213, worksheet.output_ak172, 0.001); end
  def test_output_ak173; assert_in_epsilon(14.350999999999999, worksheet.output_ak173, 0.001); end
  def test_output_ak177; assert_in_epsilon(32.63861213179335, worksheet.output_ak177, 0.001); end
  def test_output_ak178; assert_in_delta(0.8464501595819112, worksheet.output_ak178, 0.001); end
  def test_control_ag40; assert_in_delta(0.8464501595819112, worksheet.control_ag40, 0.001); end
  def test_control_am40; assert_equal("of capacity", worksheet.control_am40); end
  def test_control_an40; assert_equal("XI.d", worksheet.control_an40); end
  def test_control_ao40; assert_equal("Glass Industry Production", worksheet.control_ao40); end
  def test_control_ap40; assert_in_epsilon(20, worksheet.control_ap40, 0.001); end
  def test_control_aq40; assert_in_epsilon(10, worksheet.control_aq40, 0.001); end
  def test_control_ar40; assert_in_epsilon(10, worksheet.control_ar40, 0.001); end
  def test_control_as40; assert_in_epsilon(10, worksheet.control_as40, 0.001); end
  def test_control_at40; assert_in_epsilon(10, worksheet.control_at40, 0.001); end
  def test_control_au40; assert_in_epsilon(10, worksheet.control_au40, 0.001); end
  def test_control_av40; assert_in_epsilon(10, worksheet.control_av40, 0.001); end
  def test_control_aw40; assert_in_epsilon(10, worksheet.control_aw40, 0.001); end
  def test_control_ax40; assert_in_epsilon(10, worksheet.control_ax40, 0.001); end
  def test_control_ay40; assert_in_epsilon(10, worksheet.control_ay40, 0.001); end
  def test_control_f41; assert_equal("Energy Intensity of Output", worksheet.control_f41); end
  def test_control_p41; assert_equal("Energy efficiency increases by +8%", worksheet.control_p41); end
  def test_control_q41; assert_equal("Energy efficiency increases by +15%, cullet use increases by +5%, oxyfuel use improves efficiency by +12%, fuel substituted at 100% by gas in 2050, fuels substituded at 3% by solid biomass", worksheet.control_q41); end
  def test_control_r41; assert_equal("Energy efficiency increases by +30%, cullet use increases by +10%, uxyfuel use increases efficiency by +24%, fuel is substituted at 100% by gas in 2030, fuels are substituted at 6% by solid biomass", worksheet.control_r41); end
  def test_control_s41; assert_equal("Energy efficiency increase by +36%, cullet use increases by +12%, oxyfuel use improves efficiency by +29%, fuel substituted at 100% by gas by 2020, fuels substituted at 7% by solid biomass", worksheet.control_s41); end
  def test_control_t41; assert_equal(" ", worksheet.control_t41); end
  def test_control_ac41; assert_equal("Elec. Production", worksheet.control_ac41); end
  def test_output_ak130; assert_in_delta(0, (worksheet.output_ak130||0), 0.001); end
  def test_output_ak135; assert_in_delta(0.7001270868439474, worksheet.output_ak135, 0.001); end
  def test_output_ak140; assert_in_epsilon(40.62194055369114, worksheet.output_ak140, 0.001); end
  def test_xi_a_n457; assert_in_epsilon(-5.205463384601725, worksheet.xi_a_n457, 0.001); end
  def test_xi_b_n247; assert_in_delta(-0.10852082708301597, worksheet.xi_b_n247, 0.001); end
  def test_output_ak149; assert_in_epsilon(10.9970302332823, worksheet.output_ak149, 0.001); end
  def test_output_ak151; assert_in_epsilon(104.78357462016442, worksheet.output_ak151, 0.001); end
  def test_output_ak89; assert_in_epsilon(18.454889462182376, worksheet.output_ak89, 0.001); end
  def test_output_ak91; assert_in_epsilon(3.6069537625899954, worksheet.output_ak91, 0.001); end
  def test_output_ak93; assert_in_delta(0.6073939767719693, worksheet.output_ak93, 0.001); end
  def test_output_ak94; assert_in_epsilon(22.66923720154434, worksheet.output_ak94, 0.001); end
  def test_output_ak97; assert_in_epsilon(42.248126487042825, worksheet.output_ak97, 0.001); end
  def test_output_ak110; assert_in_epsilon(12.913220279140246, worksheet.output_ak110, 0.001); end
  def test_output_ak112; assert_in_epsilon(6.061049974277269, worksheet.output_ak112, 0.001); end
  def test_output_ak113; assert_in_epsilon(1.880909383228595, worksheet.output_ak113, 0.001); end
  def test_output_ak118; assert_in_epsilon(1.0267484047390014, worksheet.output_ak118, 0.001); end
  def test_output_ak119; assert_in_delta(0.5520306208721657, worksheet.output_ak119, 0.001); end
  def test_output_ak120; assert_in_epsilon(9.520738383117031, worksheet.output_ak120, 0.001); end
  def test_output_ak124; assert_in_delta(0, (worksheet.output_ak124||0), 0.001); end
  def test_output_ak125; assert_in_epsilon(6.385668111579108, worksheet.output_ak125, 0.001); end
  def test_output_ak126; assert_in_epsilon(104.73402069570585, worksheet.output_ak126, 0.001); end
  def test_control_ag41; assert_in_epsilon(1.0004731406674678, worksheet.control_ag41, 0.001); end
  def test_control_am41; assert_equal("of demand", worksheet.control_am41); end
  def test_control_an41; assert_in_delta(0, (worksheet.control_an41||0), 0.001); end
  def test_control_ao41; assert_equal("Energy Intensity of Output", worksheet.control_ao41); end
  def test_control_ap41; assert_in_epsilon(10, worksheet.control_ap41, 0.001); end
  def test_control_aq41; assert_in_epsilon(30, worksheet.control_aq41, 0.001); end
  def test_control_ar41; assert_in_epsilon(30, worksheet.control_ar41, 0.001); end
  def test_control_as41; assert_in_epsilon(30, worksheet.control_as41, 0.001); end
  def test_control_at41; assert_in_epsilon(40, worksheet.control_at41, 0.001); end
  def test_control_au41; assert_in_epsilon(40, worksheet.control_au41, 0.001); end
  def test_control_av41; assert_in_epsilon(40, worksheet.control_av41, 0.001); end
  def test_control_aw41; assert_in_epsilon(20, worksheet.control_aw41, 0.001); end
  def test_control_ax41; assert_in_epsilon(30, worksheet.control_ax41, 0.001); end
  def test_control_ay41; assert_in_epsilon(40, worksheet.control_ay41, 0.001); end
  def test_control_e42; assert_equal("XI.e", worksheet.control_e42); end
  def test_control_f42; assert_equal("Chemicals Industry Production", worksheet.control_f42); end
  def test_control_p42; assert_equal("An increase of 20 % for all activities under ETS and an increase of 40 % for activities not under ETS    ", worksheet.control_p42); end
  def test_control_q42; assert_equal("A stabilistation of activities under ETS and an increase  by 20 % of the activities not under ETS  ", worksheet.control_q42); end
  def test_control_r42; assert_equal("A decrease  by 50 % of all activities under ETS and a decrease by 20% of the activities not under ETS ", worksheet.control_r42); end
  def test_control_s42; assert_equal(" ", worksheet.control_s42); end
  def test_control_t42; assert_equal(" ", worksheet.control_t42); end
  def test_control_ad42; assert_in_epsilon(2050, worksheet.control_ad42, 0.001); end
  def test_control_an42; assert_equal("XI.e", worksheet.control_an42); end
  def test_control_ao42; assert_equal("Chemicals Industry Production", worksheet.control_ao42); end
  def test_control_ap42; assert_in_epsilon(20, worksheet.control_ap42, 0.001); end
  def test_control_aq42; assert_in_epsilon(20, worksheet.control_aq42, 0.001); end
  def test_control_ar42; assert_in_epsilon(20, worksheet.control_ar42, 0.001); end
  def test_control_as42; assert_in_epsilon(20, worksheet.control_as42, 0.001); end
  def test_control_at42; assert_in_epsilon(20, worksheet.control_at42, 0.001); end
  def test_control_au42; assert_in_epsilon(20, worksheet.control_au42, 0.001); end
  def test_control_av42; assert_in_epsilon(20, worksheet.control_av42, 0.001); end
  def test_control_aw42; assert_in_epsilon(20, worksheet.control_aw42, 0.001); end
  def test_control_ax42; assert_in_epsilon(20, worksheet.control_ax42, 0.001); end
  def test_control_ay42; assert_in_epsilon(20, worksheet.control_ay42, 0.001); end
  def test_control_f43; assert_equal("Energy Intensity of Output", worksheet.control_f43); end
  def test_control_p43; assert_equal("Status quo ", worksheet.control_p43); end
  def test_control_q43; assert_equal("Penetration of 10 % green chemistry, replacing traditional plastics.10 % energy efficiency gains for ETS activities, Improvements in ammonia production process, CCS on ammonia and hydrogen production process emissions.Replacing mercury cells by membrane cells. 80 % reduction of N2O emissions  ", worksheet.control_q43); end
  def test_control_r43; assert_equal("Penetration of 20 % green chemistry, replacing traditional plastics, 20 to 30 % energy efficiency gains. CCS on all installations > 1 Mton, but not on crackers.90 % reduction of N2O emissions    ", worksheet.control_r43); end
  def test_control_s43; assert_equal("Penetration of 50 % green chemistry, replacing traditional plastics,30 to 40 % energy efficiency gains, CCS on installations  > 200 kton, including crackers.95 % reduction of N2O emissions ", worksheet.control_s43); end
  def test_control_t43; assert_equal(" ", worksheet.control_t43); end
  def test_control_ad43; assert_equal("GHG emissions", worksheet.control_ad43); end
  def test_control_an43; assert_in_delta(0, (worksheet.control_an43||0), 0.001); end
  def test_control_ao43; assert_equal("Energy Intensity of Output", worksheet.control_ao43); end
  def test_control_ap43; assert_in_epsilon(10, worksheet.control_ap43, 0.001); end
  def test_control_aq43; assert_in_epsilon(30, worksheet.control_aq43, 0.001); end
  def test_control_ar43; assert_in_epsilon(30, worksheet.control_ar43, 0.001); end
  def test_control_as43; assert_in_epsilon(30, worksheet.control_as43, 0.001); end
  def test_control_at43; assert_in_epsilon(40, worksheet.control_at43, 0.001); end
  def test_control_au43; assert_in_epsilon(40, worksheet.control_au43, 0.001); end
  def test_control_av43; assert_in_epsilon(40, worksheet.control_av43, 0.001); end
  def test_control_aw43; assert_in_epsilon(20, worksheet.control_aw43, 0.001); end
  def test_control_ax43; assert_in_epsilon(30, worksheet.control_ax43, 0.001); end
  def test_control_ay43; assert_in_epsilon(40, worksheet.control_ay43, 0.001); end
  def test_control_e44; assert_equal("XI.f", worksheet.control_e44); end
  def test_control_f44; assert_equal("Pulp & Paper Industry Production", worksheet.control_f44); end
  def test_control_p44; assert_equal("Growth of +1.2% per year (+61% by 2050)", worksheet.control_p44); end
  def test_control_q44; assert_equal("Stabilised without growth", worksheet.control_q44); end
  def test_control_r44; assert_equal("Reduction of -0.8% per year (-27% by 2050)", worksheet.control_r44); end
  def test_control_s44; assert_equal(" ", worksheet.control_s44); end
  def test_control_t44; assert_equal(" ", worksheet.control_t44); end
  def test_output_ac312; assert_in_epsilon(23.965421380561793, worksheet.output_ac312, 0.001); end
  def test_output_ac363; assert_in_epsilon(19.96312356237269, worksheet.output_ac363, 0.001); end
  def test_output_ac313; assert_in_delta(0, (worksheet.output_ac313||0), 0.001); end
  def test_output_ac314; assert_in_delta(0, (worksheet.output_ac314||0), 0.001); end
  def test_output_ac315; assert_in_delta(0, (worksheet.output_ac315||0), 0.001); end
  def test_output_ac316; assert_in_epsilon(13.692529969967014, worksheet.output_ac316, 0.001); end
  def test_output_ac320; assert_in_delta(0, (worksheet.output_ac320||0), 0.001); end
  def test_output_ac321; assert_in_delta(0, (worksheet.output_ac321||0), 0.001); end
  def test_output_ac322; assert_in_epsilon(24.022821413735436, worksheet.output_ac322, 0.001); end
  def test_output_ac451; assert_in_epsilon(13.559032047177752, worksheet.output_ac451, 0.001); end
  def test_output_ac455; assert_in_epsilon(14, worksheet.output_ac455, 0.001); end
  def test_output_ac459; assert_in_epsilon(27.55903204717775, worksheet.output_ac459, 0.001); end
  def test_output_ac463; assert_in_epsilon(8.433486601220553, worksheet.output_ac463, 0.001); end
  def test_output_ac453; assert_in_epsilon(4.078125783633139, worksheet.output_ac453, 0.001); end
  def test_output_ac457; assert_in_delta(0, (worksheet.output_ac457||0), 0.001); end
  def test_output_ac461; assert_in_epsilon(4.078125783633139, worksheet.output_ac461, 0.001); end
  def test_output_ac465; assert_in_delta(0.8196774544363369, worksheet.output_ac465, 0.001); end
  def test_output_ac354; assert_in_epsilon(2.5461453636702016, worksheet.output_ac354, 0.001); end
  def test_output_ac370; assert_in_epsilon(21.476676050065233, worksheet.output_ac370, 0.001); end
  def test_output_ac323; assert_in_delta(0.05750473978133632, worksheet.output_ac323, 0.001); end
  def test_output_ac324; assert_in_epsilon(52.02963651868326, worksheet.output_ac324, 0.001); end
  def test_output_ac372; assert_in_epsilon(49.32491564488568, worksheet.output_ac372, 0.001); end
  def test_output_ac338; assert_in_epsilon(15.197332956751332, worksheet.output_ac338, 0.001); end
  def test_output_ac339; assert_in_epsilon(8.481983817059477, worksheet.output_ac339, 0.001); end
  def test_output_ac337; assert_in_epsilon(23.67931677381081, worksheet.output_ac337, 0.001); end
  def test_output_ac452; assert_in_delta(0.0682, worksheet.output_ac452, 0.001); end
  def test_output_ac456; assert_in_epsilon(4.346242662072274, worksheet.output_ac456, 0.001); end
  def test_output_ac460; assert_in_epsilon(4.414442662072274, worksheet.output_ac460, 0.001); end
  def test_output_ac464; assert_in_epsilon(1.1450529425392655, worksheet.output_ac464, 0.001); end
  def test_output_ac373; assert_in_epsilon(22.534263831271545, worksheet.output_ac373, 0.001); end
  def test_output_ac344; assert_in_delta(0, (worksheet.output_ac344||0), 0.001); end
  def test_output_ac345; assert_in_delta(0, (worksheet.output_ac345||0), 0.001); end
  def test_output_ac346; assert_in_delta(0, (worksheet.output_ac346||0), 0.001); end
  def test_output_ac347; assert_in_delta(0, (worksheet.output_ac347||0), 0.001); end
  def test_output_ac348; assert_in_delta(0, (worksheet.output_ac348||0), 0.001); end
  def test_output_ac379; assert_in_epsilon(127.0490137983435, worksheet.output_ac379, 0.001); end
  def test_output_ac382; assert_in_epsilon(1.0342009389797702, worksheet.output_ac382, 0.001); end
  def test_output_ak424; assert_in_delta(0.21116352253840842, worksheet.output_ak424, 0.001); end
  def test_control_ad44; assert_in_delta(-0.7888364774615916, worksheet.control_ad44, 0.001); end
  def test_control_an44; assert_equal("XI.f", worksheet.control_an44); end
  def test_control_ao44; assert_equal("Pulp & Paper Industry Production", worksheet.control_ao44); end
  def test_control_ap44; assert_in_epsilon(20, worksheet.control_ap44, 0.001); end
  def test_control_aq44; assert_in_epsilon(20, worksheet.control_aq44, 0.001); end
  def test_control_ar44; assert_in_epsilon(20, worksheet.control_ar44, 0.001); end
  def test_control_as44; assert_in_epsilon(20, worksheet.control_as44, 0.001); end
  def test_control_at44; assert_in_epsilon(20, worksheet.control_at44, 0.001); end
  def test_control_au44; assert_in_epsilon(20, worksheet.control_au44, 0.001); end
  def test_control_av44; assert_in_epsilon(20, worksheet.control_av44, 0.001); end
  def test_control_aw44; assert_in_epsilon(20, worksheet.control_aw44, 0.001); end
  def test_control_ax44; assert_in_epsilon(20, worksheet.control_ax44, 0.001); end
  def test_control_ay44; assert_in_epsilon(20, worksheet.control_ay44, 0.001); end
  def test_control_f45; assert_equal("Energy Intensity of Output", worksheet.control_f45); end
  def test_control_p45; assert_equal("Energy efficiency increases by +10%", worksheet.control_p45); end
  def test_control_q45; assert_equal("Energy efficiency increases by +15%; liquid fuels substituted by gas;  solid fuels substituted at 70% by biomass in Kraft pulp mill", worksheet.control_q45); end
  def test_control_r45; assert_equal("Energy efficiency increases by +20%; all liquid fuels substituted by gas; solid fuels substituted at 85% by biomass in Kraft pulp mill", worksheet.control_r45); end
  def test_control_s45; assert_equal("Energy efficiency increases by +25%; all liquid fuels substituted by gas; solid fuels substituted at 95% by biomass in Kraft pulp mill", worksheet.control_s45); end
  def test_control_t45; assert_equal(" ", worksheet.control_t45); end
  def test_control_an45; assert_in_delta(0, (worksheet.control_an45||0), 0.001); end
  def test_control_ao45; assert_equal("Energy Intensity of Output", worksheet.control_ao45); end
  def test_control_ap45; assert_in_epsilon(10, worksheet.control_ap45, 0.001); end
  def test_control_aq45; assert_in_epsilon(30, worksheet.control_aq45, 0.001); end
  def test_control_ar45; assert_in_epsilon(30, worksheet.control_ar45, 0.001); end
  def test_control_as45; assert_in_epsilon(30, worksheet.control_as45, 0.001); end
  def test_control_at45; assert_in_epsilon(40, worksheet.control_at45, 0.001); end
  def test_control_au45; assert_in_epsilon(40, worksheet.control_au45, 0.001); end
  def test_control_av45; assert_in_epsilon(40, worksheet.control_av45, 0.001); end
  def test_control_aw45; assert_in_epsilon(20, worksheet.control_aw45, 0.001); end
  def test_control_ax45; assert_in_epsilon(30, worksheet.control_ax45, 0.001); end
  def test_control_ay45; assert_in_epsilon(40, worksheet.control_ay45, 0.001); end
  def test_control_e46; assert_equal("XI.g", worksheet.control_e46); end
  def test_control_f46; assert_equal("Oil & Gas Industry Production", worksheet.control_f46); end
  def test_control_p46; assert_equal("Reduction of -0.2% per year (-8% production by 2050); related to reference trajectory from 100% RE study taking into account only 202020 goals of energy-climate package", worksheet.control_p46); end
  def test_control_q46; assert_equal("Reduction of at least -0.9% per year (-30% by 2050); but decrease will be hardlinked  with the demand from other sectors", worksheet.control_q46); end
  def test_control_r46; assert_equal("Reduction of -1.7% per year (-50% by 2050); but decrease will be hardlinked with the demand from other sectors", worksheet.control_r46); end
  def test_control_s46; assert_equal("Correlation to the evolution of fuel demand in the other sectors", worksheet.control_s46); end
  def test_control_t46; assert_equal(" ", worksheet.control_t46); end
  def test_control_ad46; assert_equal("vs.  1990 level", worksheet.control_ad46); end
  def test_control_an46; assert_equal("XI.g", worksheet.control_an46); end
  def test_control_ao46; assert_equal("Oil & Gas Industry Production", worksheet.control_ao46); end
  def test_control_ap46; assert_in_epsilon(40, worksheet.control_ap46, 0.001); end
  def test_control_aq46; assert_in_epsilon(40, worksheet.control_aq46, 0.001); end
  def test_control_ar46; assert_in_epsilon(40, worksheet.control_ar46, 0.001); end
  def test_control_as46; assert_in_epsilon(40, worksheet.control_as46, 0.001); end
  def test_control_at46; assert_in_epsilon(40, worksheet.control_at46, 0.001); end
  def test_control_au46; assert_in_epsilon(40, worksheet.control_au46, 0.001); end
  def test_control_av46; assert_in_epsilon(40, worksheet.control_av46, 0.001); end
  def test_control_aw46; assert_in_epsilon(40, worksheet.control_aw46, 0.001); end
  def test_control_ax46; assert_in_epsilon(40, worksheet.control_ax46, 0.001); end
  def test_control_ay46; assert_in_epsilon(40, worksheet.control_ay46, 0.001); end
  def test_control_f47; assert_equal("Energy Intensity of Output", worksheet.control_f47); end
  def test_control_p47; assert_equal("Energy efficiency increases by +10%", worksheet.control_p47); end
  def test_control_q47; assert_equal("Energy efficiency increases by +18%; 10% extra implementation of CHP; fuel substituted at 25% by natural gas", worksheet.control_q47); end
  def test_control_r47; assert_equal("Energy efficiency increases by +30%; 15% extra implementation of CHP; fuel substituted at 50% by natural gasProcess improvement applied starting from 2030, 15% reduction energy use", worksheet.control_r47); end
  def test_control_s47; assert_equal("Energy efficiency increases by +50%; 20% extra implementation of CHP; Fuel substituted at 100% by natural gasProcess improvements applied starting from 2020, 23% reduction energy use", worksheet.control_s47); end
  def test_control_t47; assert_equal(" ", worksheet.control_t47); end
  def test_control_an47; assert_in_delta(0, (worksheet.control_an47||0), 0.001); end
  def test_control_ao47; assert_equal("Energy Intensity of Output", worksheet.control_ao47); end
  def test_control_ap47; assert_in_epsilon(10, worksheet.control_ap47, 0.001); end
  def test_control_aq47; assert_in_epsilon(30, worksheet.control_aq47, 0.001); end
  def test_control_ar47; assert_in_epsilon(30, worksheet.control_ar47, 0.001); end
  def test_control_as47; assert_in_epsilon(30, worksheet.control_as47, 0.001); end
  def test_control_at47; assert_in_epsilon(40, worksheet.control_at47, 0.001); end
  def test_control_au47; assert_in_epsilon(40, worksheet.control_au47, 0.001); end
  def test_control_av47; assert_in_epsilon(40, worksheet.control_av47, 0.001); end
  def test_control_aw47; assert_in_epsilon(20, worksheet.control_aw47, 0.001); end
  def test_control_ax47; assert_in_epsilon(30, worksheet.control_ax47, 0.001); end
  def test_control_ay47; assert_in_epsilon(40, worksheet.control_ay47, 0.001); end
  def test_control_e48; assert_equal("XI.h", worksheet.control_e48); end
  def test_control_f48; assert_equal("Food, drinks and tobacco Industry Production", worksheet.control_f48); end
  def test_control_p48; assert_equal("Growth of +2% per year (+120% by 2050)", worksheet.control_p48); end
  def test_control_q48; assert_equal("Growth of +1.3% per year (+68% by 2050)", worksheet.control_q48); end
  def test_control_r48; assert_equal("Stabilised without growth", worksheet.control_r48); end
  def test_control_s48; assert_equal("Correlation to the evolution of agriculture production (both vegetal and animal)", worksheet.control_s48); end
  def test_control_t48; assert_equal(" ", worksheet.control_t48); end
  def test_control_an48; assert_equal("XI.h", worksheet.control_an48); end
  def test_control_ao48; assert_equal("Food, drinks and tobacco Industry Production", worksheet.control_ao48); end
  def test_control_ap48; assert_in_epsilon(40, worksheet.control_ap48, 0.001); end
  def test_control_aq48; assert_in_epsilon(40, worksheet.control_aq48, 0.001); end
  def test_control_ar48; assert_in_epsilon(40, worksheet.control_ar48, 0.001); end
  def test_control_as48; assert_in_epsilon(40, worksheet.control_as48, 0.001); end
  def test_control_at48; assert_in_epsilon(40, worksheet.control_at48, 0.001); end
  def test_control_au48; assert_in_epsilon(40, worksheet.control_au48, 0.001); end
  def test_control_av48; assert_in_epsilon(40, worksheet.control_av48, 0.001); end
  def test_control_aw48; assert_in_epsilon(40, worksheet.control_aw48, 0.001); end
  def test_control_ax48; assert_in_epsilon(40, worksheet.control_ax48, 0.001); end
  def test_control_ay48; assert_in_epsilon(40, worksheet.control_ay48, 0.001); end
  def test_control_f49; assert_equal("Energy Intensity of Output", worksheet.control_f49); end
  def test_control_p49; assert_equal("Energy efficiency increases by +10%", worksheet.control_p49); end
  def test_control_q49; assert_equal("Energy efficiency increases by +20%, all solid+liquid fuels subsituted by gas", worksheet.control_q49); end
  def test_control_r49; assert_equal("Energy efficiency increased by +30% ; all solid+liquid fuels switched to gas; gas substituted at 50% by biogas", worksheet.control_r49); end
  def test_control_s49; assert_equal("Energy efficiency increases by +40%; all solid+liquid fuels substituted by gas; gas substituted at 90% by biogas", worksheet.control_s49); end
  def test_control_t49; assert_equal(" ", worksheet.control_t49); end
  def test_control_an49; assert_in_delta(0, (worksheet.control_an49||0), 0.001); end
  def test_control_ao49; assert_equal("Energy Intensity of Output", worksheet.control_ao49); end
  def test_control_ap49; assert_in_epsilon(10, worksheet.control_ap49, 0.001); end
  def test_control_aq49; assert_in_epsilon(30, worksheet.control_aq49, 0.001); end
  def test_control_ar49; assert_in_epsilon(30, worksheet.control_ar49, 0.001); end
  def test_control_as49; assert_in_epsilon(30, worksheet.control_as49, 0.001); end
  def test_control_at49; assert_in_epsilon(40, worksheet.control_at49, 0.001); end
  def test_control_au49; assert_in_epsilon(40, worksheet.control_au49, 0.001); end
  def test_control_av49; assert_in_epsilon(40, worksheet.control_av49, 0.001); end
  def test_control_aw49; assert_in_epsilon(20, worksheet.control_aw49, 0.001); end
  def test_control_ax49; assert_in_epsilon(30, worksheet.control_ax49, 0.001); end
  def test_control_ay49; assert_in_epsilon(40, worksheet.control_ay49, 0.001); end
  def test_control_e50; assert_equal("XI.j", worksheet.control_e50); end
  def test_control_f50; assert_equal("Non-Ferrous metals Industry Production", worksheet.control_f50); end
  def test_control_p50; assert_equal("Growth of +0.8% per year (+30% by 2050)", worksheet.control_p50); end
  def test_control_q50; assert_equal("Stabilised production without growth", worksheet.control_q50); end
  def test_control_r50; assert_equal("Reduction of -0.8% per year (-30% by 2050)", worksheet.control_r50); end
  def test_control_s50; assert_equal(" ", worksheet.control_s50); end
  def test_control_t50; assert_equal(" ", worksheet.control_t50); end
  def test_control_an50; assert_equal(:ref, worksheet.control_an50); end
  def test_control_ao50; assert_equal(:ref, worksheet.control_ao50); end
  def test_control_ap50; assert_in_epsilon(20, worksheet.control_ap50, 0.001); end
  def test_control_aq50; assert_in_epsilon(20, worksheet.control_aq50, 0.001); end
  def test_control_ar50; assert_in_epsilon(20, worksheet.control_ar50, 0.001); end
  def test_control_as50; assert_in_epsilon(20, worksheet.control_as50, 0.001); end
  def test_control_at50; assert_in_epsilon(20, worksheet.control_at50, 0.001); end
  def test_control_au50; assert_in_epsilon(20, worksheet.control_au50, 0.001); end
  def test_control_av50; assert_in_epsilon(20, worksheet.control_av50, 0.001); end
  def test_control_aw50; assert_in_epsilon(20, worksheet.control_aw50, 0.001); end
  def test_control_ax50; assert_in_epsilon(20, worksheet.control_ax50, 0.001); end
  def test_control_ay50; assert_in_epsilon(20, worksheet.control_ay50, 0.001); end
  def test_control_f51; assert_equal("Energy Intensity of Output", worksheet.control_f51); end
  def test_control_p51; assert_equal("Energy efficiency increases by +5%", worksheet.control_p51); end
  def test_control_q51; assert_equal("Energy efficiency increases by +10%; all liquid fuels substituted by gas; gas substituted at 25% by biogas", worksheet.control_q51); end
  def test_control_r51; assert_equal("Energy efficiency increases by +20%; all liquid fuels substituted by gas;  gas substituted at 50% by biogas", worksheet.control_r51); end
  def test_control_s51; assert_equal("Energy efficiency increases by +30%; all liquid fuels substituted by gas; gas substituted at 90% by biogas;  half of the furnaces are switched to electric", worksheet.control_s51); end
  def test_control_t51; assert_equal(" ", worksheet.control_t51); end
  def test_control_an51; assert_equal(:ref, worksheet.control_an51); end
  def test_control_ao51; assert_equal(:ref, worksheet.control_ao51); end
  def test_control_ap51; assert_in_epsilon(10, worksheet.control_ap51, 0.001); end
  def test_control_aq51; assert_in_epsilon(30, worksheet.control_aq51, 0.001); end
  def test_control_ar51; assert_in_epsilon(30, worksheet.control_ar51, 0.001); end
  def test_control_as51; assert_in_epsilon(30, worksheet.control_as51, 0.001); end
  def test_control_at51; assert_in_epsilon(40, worksheet.control_at51, 0.001); end
  def test_control_au51; assert_in_epsilon(40, worksheet.control_au51, 0.001); end
  def test_control_av51; assert_in_epsilon(40, worksheet.control_av51, 0.001); end
  def test_control_aw51; assert_in_epsilon(20, worksheet.control_aw51, 0.001); end
  def test_control_ax51; assert_in_epsilon(30, worksheet.control_ax51, 0.001); end
  def test_control_ay51; assert_in_epsilon(40, worksheet.control_ay51, 0.001); end
  def test_control_e52; assert_equal("XI.k", worksheet.control_e52); end
  def test_control_f52; assert_equal("Construction industry Production", worksheet.control_f52); end
  def test_control_p52; assert_equal("Growth of +3.5% per year between 2015-2025; stable after 2025 (+68% by 2050 production)", worksheet.control_p52); end
  def test_control_q52; assert_equal("Growth of +2.5% between 2015-2025; stable after 2025 (+44% by 2050)", worksheet.control_q52); end
  def test_control_r52; assert_equal("Growth of +3.7%/year between 2015-2015; stable after 2015 (+20% by 2050)", worksheet.control_r52); end
  def test_control_s52; assert_equal(" ", worksheet.control_s52); end
  def test_control_t52; assert_equal(" ", worksheet.control_t52); end
  def test_control_an52; assert_equal("XI.j", worksheet.control_an52); end
  def test_control_ao52; assert_equal("Non-Ferrous metals Industry Production", worksheet.control_ao52); end
  def test_control_ap52; assert_in_epsilon(20, worksheet.control_ap52, 0.001); end
  def test_control_aq52; assert_in_epsilon(20, worksheet.control_aq52, 0.001); end
  def test_control_ar52; assert_in_epsilon(20, worksheet.control_ar52, 0.001); end
  def test_control_as52; assert_in_epsilon(20, worksheet.control_as52, 0.001); end
  def test_control_at52; assert_in_epsilon(20, worksheet.control_at52, 0.001); end
  def test_control_au52; assert_in_epsilon(20, worksheet.control_au52, 0.001); end
  def test_control_av52; assert_in_epsilon(20, worksheet.control_av52, 0.001); end
  def test_control_aw52; assert_in_epsilon(20, worksheet.control_aw52, 0.001); end
  def test_control_ax52; assert_in_epsilon(20, worksheet.control_ax52, 0.001); end
  def test_control_ay52; assert_in_epsilon(20, worksheet.control_ay52, 0.001); end
  def test_control_f53; assert_equal("Energy Intensity of Output", worksheet.control_f53); end
  def test_control_p53; assert_equal("Energy efficiency increases by +10%", worksheet.control_p53); end
  def test_control_q53; assert_equal("Energy efficiency increases by +20%; all solid+liquid fuels susbsituted by gas; gas subsituted at 25% by biogas", worksheet.control_q53); end
  def test_control_r53; assert_equal("Energy efficiency increases by +30%; all solid & liquid fuels substituted by gas;  gas substituted at 50% by biogas", worksheet.control_r53); end
  def test_control_s53; assert_equal("Energy efficiency increases by +40%; all solid+liquid fuels substituded by gas; all gas substituted by biogas", worksheet.control_s53); end
  def test_control_t53; assert_equal(" ", worksheet.control_t53); end
  def test_control_an53; assert_in_delta(0, (worksheet.control_an53||0), 0.001); end
  def test_control_ao53; assert_equal("Energy Intensity of Output", worksheet.control_ao53); end
  def test_control_ap53; assert_in_epsilon(10, worksheet.control_ap53, 0.001); end
  def test_control_aq53; assert_in_epsilon(30, worksheet.control_aq53, 0.001); end
  def test_control_ar53; assert_in_epsilon(30, worksheet.control_ar53, 0.001); end
  def test_control_as53; assert_in_epsilon(30, worksheet.control_as53, 0.001); end
  def test_control_at53; assert_in_epsilon(40, worksheet.control_at53, 0.001); end
  def test_control_au53; assert_in_epsilon(40, worksheet.control_au53, 0.001); end
  def test_control_av53; assert_in_epsilon(40, worksheet.control_av53, 0.001); end
  def test_control_aw53; assert_in_epsilon(20, worksheet.control_aw53, 0.001); end
  def test_control_ax53; assert_in_epsilon(30, worksheet.control_ax53, 0.001); end
  def test_control_ay53; assert_in_epsilon(40, worksheet.control_ay53, 0.001); end
  def test_control_e54; assert_equal("XI", worksheet.control_e54); end
  def test_control_f54; assert_equal("Industry", worksheet.control_f54); end
  def test_control_t54; assert_equal(" ", worksheet.control_t54); end
  def test_control_an54; assert_equal("XI.k", worksheet.control_an54); end
  def test_control_ao54; assert_equal("Construction industry Production", worksheet.control_ao54); end
  def test_control_ap54; assert_in_epsilon(20, worksheet.control_ap54, 0.001); end
  def test_control_aq54; assert_in_epsilon(10, worksheet.control_aq54, 0.001); end
  def test_control_ar54; assert_in_epsilon(10, worksheet.control_ar54, 0.001); end
  def test_control_as54; assert_in_epsilon(10, worksheet.control_as54, 0.001); end
  def test_control_at54; assert_in_epsilon(10, worksheet.control_at54, 0.001); end
  def test_control_au54; assert_in_epsilon(10, worksheet.control_au54, 0.001); end
  def test_control_av54; assert_in_epsilon(10, worksheet.control_av54, 0.001); end
  def test_control_aw54; assert_in_epsilon(10, worksheet.control_aw54, 0.001); end
  def test_control_ax54; assert_in_epsilon(10, worksheet.control_ax54, 0.001); end
  def test_control_ay54; assert_in_epsilon(10, worksheet.control_ay54, 0.001); end
  def test_control_f55; assert_equal("(iii) Carbon Capture & Storage", worksheet.control_f55); end
  def test_control_h55; assert_in_epsilon(20, worksheet.control_h55, 0.001); end
  def test_control_p55; assert_equal("No development", worksheet.control_p55); end
  def test_control_q55; assert_equal("All the installations producing above 1 MtCO2e/year are equiped of CCS and their residual emissions are reduced of 85%", worksheet.control_q55); end
  def test_control_r55; assert_equal("All the installation producing above 300ktCO2e/year are equiped of CCS and their residual emissions are reduced by 85%", worksheet.control_r55); end
  def test_control_s55; assert_equal("All the industrial installations of the industrial sectors above and producing significant GES emissions are equiped, enabling to reduce residual emissions by ~85%For Pulp&Paper, when CCS is applied, black liquor gasification is as well ", worksheet.control_s55); end
  def test_control_t55; assert_equal(" ", worksheet.control_t55); end
  def test_control_an55; assert_in_delta(0, (worksheet.control_an55||0), 0.001); end
  def test_control_ao55; assert_equal("Energy Intensity of Output", worksheet.control_ao55); end
  def test_control_ap55; assert_in_epsilon(10, worksheet.control_ap55, 0.001); end
  def test_control_aq55; assert_in_epsilon(30, worksheet.control_aq55, 0.001); end
  def test_control_ar55; assert_in_epsilon(30, worksheet.control_ar55, 0.001); end
  def test_control_as55; assert_in_epsilon(30, worksheet.control_as55, 0.001); end
  def test_control_at55; assert_in_epsilon(40, worksheet.control_at55, 0.001); end
  def test_control_au55; assert_in_epsilon(40, worksheet.control_au55, 0.001); end
  def test_control_av55; assert_in_epsilon(40, worksheet.control_av55, 0.001); end
  def test_control_aw55; assert_in_epsilon(20, worksheet.control_aw55, 0.001); end
  def test_control_ax55; assert_in_epsilon(30, worksheet.control_ax55, 0.001); end
  def test_control_ay55; assert_in_epsilon(40, worksheet.control_ay55, 0.001); end
  def test_control_an56; assert_equal("XI", worksheet.control_an56); end
  def test_control_ao56; assert_equal("Industry", worksheet.control_ao56); end
  def test_control_an57; assert_in_delta(0, (worksheet.control_an57||0), 0.001); end
  def test_control_ao57; assert_equal("(iii) Carbon Capture & Storage", worksheet.control_ao57); end
  def test_control_ap57; assert_in_epsilon(10, worksheet.control_ap57, 0.001); end
  def test_control_aq57; assert_in_epsilon(20, worksheet.control_aq57, 0.001); end
  def test_control_ar57; assert_in_epsilon(10, worksheet.control_ar57, 0.001); end
  def test_control_as57; assert_in_epsilon(30, worksheet.control_as57, 0.001); end
  def test_control_at57; assert_in_epsilon(40, worksheet.control_at57, 0.001); end
  def test_control_au57; assert_in_epsilon(20, worksheet.control_au57, 0.001); end
  def test_control_av57; assert_in_epsilon(20, worksheet.control_av57, 0.001); end
  def test_control_aw57; assert_in_epsilon(20, worksheet.control_aw57, 0.001); end
  def test_control_ax57; assert_in_epsilon(30, worksheet.control_ax57, 0.001); end
  def test_control_ay57; assert_in_epsilon(40, worksheet.control_ay57, 0.001); end
  def test_control_ap61; assert_equal("Reference", worksheet.control_ap61); end
  def test_control_aq61; assert_equal("Core", worksheet.control_aq61); end
  def test_control_ar61; assert_equal("Behavior", worksheet.control_ar61); end
  def test_control_as61; assert_equal("Technology", worksheet.control_as61); end
  def test_control_at61; assert_equal("-95% GHG", worksheet.control_at61); end
  def test_control_au61; assert_equal("EU integration", worksheet.control_au61); end
  def test_control_av61; assert_equal("Sensitivity", worksheet.control_av61); end
  def test_control_aw61; assert_equal("All levers at level 2", worksheet.control_aw61); end
  def test_control_ax61; assert_equal("All levers at level 3", worksheet.control_ax61); end
  def test_control_ay61; assert_equal("All levers at level 3", worksheet.control_ay61); end
  def test_control_an64; assert_equal("Energy prices trajectories", worksheet.control_an64); end
  def test_control_ao64; assert_equal("Energy prices trajectories", worksheet.control_ao64); end
  def test_control_ap64; assert_in_epsilon(30, worksheet.control_ap64, 0.001); end
  def test_control_aq64; assert_in_epsilon(10, worksheet.control_aq64, 0.001); end
  def test_control_ar64; assert_in_epsilon(10, worksheet.control_ar64, 0.001); end
  def test_control_as64; assert_in_epsilon(10, worksheet.control_as64, 0.001); end
  def test_control_at64; assert_in_epsilon(10, worksheet.control_at64, 0.001); end
  def test_control_au64; assert_in_epsilon(10, worksheet.control_au64, 0.001); end
  def test_control_av64; assert_in_epsilon(10, worksheet.control_av64, 0.001); end
  def test_control_aw64; assert_in_epsilon(20, worksheet.control_aw64, 0.001); end
  def test_control_ax64; assert_in_epsilon(20, worksheet.control_ax64, 0.001); end
  def test_control_ay64; assert_in_epsilon(20, worksheet.control_ay64, 0.001); end
  def test_control_an65; assert_equal("III.a.1", worksheet.control_an65); end
  def test_control_ao65; assert_equal("Onshore wind", worksheet.control_ao65); end
  def test_control_ap65; assert_in_epsilon(10, worksheet.control_ap65, 0.001); end
  def test_control_aq65; assert_in_epsilon(15, worksheet.control_aq65, 0.001); end
  def test_control_ar65; assert_in_epsilon(12, worksheet.control_ar65, 0.001); end
  def test_control_as65; assert_in_epsilon(15, worksheet.control_as65, 0.001); end
  def test_control_at65; assert_in_epsilon(11, worksheet.control_at65, 0.001); end
  def test_control_au65; assert_in_epsilon(25, worksheet.control_au65, 0.001); end
  def test_control_av65; assert_in_epsilon(28, worksheet.control_av65, 0.001); end
  def test_control_aw65; assert_in_epsilon(20, worksheet.control_aw65, 0.001); end
  def test_control_ax65; assert_in_epsilon(30, worksheet.control_ax65, 0.001); end
  def test_control_ay65; assert_in_epsilon(40, worksheet.control_ay65, 0.001); end
  def test_control_an66; assert_equal("III.a.2", worksheet.control_an66); end
  def test_control_ao66; assert_equal("Offshore wind", worksheet.control_ao66); end
  def test_control_ap66; assert_in_epsilon(10, worksheet.control_ap66, 0.001); end
  def test_control_aq66; assert_in_epsilon(15, worksheet.control_aq66, 0.001); end
  def test_control_ar66; assert_in_epsilon(12, worksheet.control_ar66, 0.001); end
  def test_control_as66; assert_in_epsilon(15, worksheet.control_as66, 0.001); end
  def test_control_at66; assert_in_epsilon(11, worksheet.control_at66, 0.001); end
  def test_control_au66; assert_in_epsilon(25, worksheet.control_au66, 0.001); end
  def test_control_av66; assert_in_epsilon(28, worksheet.control_av66, 0.001); end
  def test_control_aw66; assert_in_epsilon(20, worksheet.control_aw66, 0.001); end
  def test_control_ax66; assert_in_epsilon(30, worksheet.control_ax66, 0.001); end
  def test_control_ay66; assert_in_epsilon(40, worksheet.control_ay66, 0.001); end
  def test_control_an67; assert_equal("IV.a", worksheet.control_an67); end
  def test_control_ao67; assert_equal("Solar PV", worksheet.control_ao67); end
  def test_control_ap67; assert_in_epsilon(10, worksheet.control_ap67, 0.001); end
  def test_control_aq67; assert_in_epsilon(15, worksheet.control_aq67, 0.001); end
  def test_control_ar67; assert_in_epsilon(12, worksheet.control_ar67, 0.001); end
  def test_control_as67; assert_in_epsilon(15, worksheet.control_as67, 0.001); end
  def test_control_at67; assert_in_epsilon(11, worksheet.control_at67, 0.001); end
  def test_control_au67; assert_in_epsilon(25, worksheet.control_au67, 0.001); end
  def test_control_av67; assert_in_epsilon(28, worksheet.control_av67, 0.001); end
  def test_control_aw67; assert_in_epsilon(20, worksheet.control_aw67, 0.001); end
  def test_control_ax67; assert_in_epsilon(30, worksheet.control_ax67, 0.001); end
  def test_control_ay67; assert_in_epsilon(40, worksheet.control_ay67, 0.001); end
  def test_control_an68; assert_equal("III.b", worksheet.control_an68); end
  def test_control_ao68; assert_equal("Hydroelectric power stations", worksheet.control_ao68); end
  def test_control_ap68; assert_in_epsilon(10, worksheet.control_ap68, 0.001); end
  def test_control_aq68; assert_in_epsilon(15, worksheet.control_aq68, 0.001); end
  def test_control_ar68; assert_in_epsilon(12, worksheet.control_ar68, 0.001); end
  def test_control_as68; assert_in_epsilon(15, worksheet.control_as68, 0.001); end
  def test_control_at68; assert_in_epsilon(11, worksheet.control_at68, 0.001); end
  def test_control_au68; assert_in_epsilon(25, worksheet.control_au68, 0.001); end
  def test_control_av68; assert_in_epsilon(28, worksheet.control_av68, 0.001); end
  def test_control_aw68; assert_in_epsilon(20, worksheet.control_aw68, 0.001); end
  def test_control_ax68; assert_in_epsilon(30, worksheet.control_ax68, 0.001); end
  def test_control_ay68; assert_in_epsilon(40, worksheet.control_ay68, 0.001); end
  def test_control_an69; assert_equal("III.d", worksheet.control_an69); end
  def test_control_ao69; assert_equal("Geothermal electricity", worksheet.control_ao69); end
  def test_control_ap69; assert_in_epsilon(10, worksheet.control_ap69, 0.001); end
  def test_control_aq69; assert_in_epsilon(30, worksheet.control_aq69, 0.001); end
  def test_control_ar69; assert_in_epsilon(30, worksheet.control_ar69, 0.001); end
  def test_control_as69; assert_in_epsilon(30, worksheet.control_as69, 0.001); end
  def test_control_at69; assert_in_epsilon(25, worksheet.control_at69, 0.001); end
  def test_control_au69; assert_in_epsilon(25, worksheet.control_au69, 0.001); end
  def test_control_av69; assert_in_epsilon(27, worksheet.control_av69, 0.001); end
  def test_control_aw69; assert_in_epsilon(20, worksheet.control_aw69, 0.001); end
  def test_control_ax69; assert_in_epsilon(30, worksheet.control_ax69, 0.001); end
  def test_control_ay69; assert_in_epsilon(40, worksheet.control_ay69, 0.001); end
  def test_control_an70; assert_equal("IV.c", worksheet.control_an70); end
  def test_control_ao70; assert_equal("Small-scale wind  [UNUSED]", worksheet.control_ao70); end
  def test_control_ap70; assert_in_epsilon(10, worksheet.control_ap70, 0.001); end
  def test_control_aq70; assert_in_epsilon(10, worksheet.control_aq70, 0.001); end
  def test_control_ar70; assert_in_epsilon(10, worksheet.control_ar70, 0.001); end
  def test_control_as70; assert_in_epsilon(10, worksheet.control_as70, 0.001); end
  def test_control_at70; assert_in_epsilon(10, worksheet.control_at70, 0.001); end
  def test_control_au70; assert_in_epsilon(10, worksheet.control_au70, 0.001); end
  def test_control_av70; assert_in_epsilon(10, worksheet.control_av70, 0.001); end
  def test_control_aw70; assert_in_epsilon(20, worksheet.control_aw70, 0.001); end
  def test_control_ax70; assert_in_epsilon(10, worksheet.control_ax70, 0.001); end
  def test_control_ay70; assert_in_epsilon(10, worksheet.control_ay70, 0.001); end
  def test_control_an71; assert_equal("III.c", worksheet.control_an71); end
  def test_control_ao71; assert_equal("Tidal and Wave [UNUSED]", worksheet.control_ao71); end
  def test_control_ap71; assert_in_epsilon(10, worksheet.control_ap71, 0.001); end
  def test_control_aq71; assert_in_epsilon(10, worksheet.control_aq71, 0.001); end
  def test_control_ar71; assert_in_epsilon(10, worksheet.control_ar71, 0.001); end
  def test_control_as71; assert_in_epsilon(10, worksheet.control_as71, 0.001); end
  def test_control_at71; assert_in_epsilon(10, worksheet.control_at71, 0.001); end
  def test_control_au71; assert_in_epsilon(10, worksheet.control_au71, 0.001); end
  def test_control_av71; assert_in_epsilon(10, worksheet.control_av71, 0.001); end
  def test_control_aw71; assert_in_epsilon(20, worksheet.control_aw71, 0.001); end
  def test_control_ax71; assert_in_epsilon(10, worksheet.control_ax71, 0.001); end
  def test_control_ay71; assert_in_epsilon(10, worksheet.control_ay71, 0.001); end
  def test_control_an72; assert_equal("IV.b", worksheet.control_an72); end
  def test_control_ao72; assert_equal("Solar thermal", worksheet.control_ao72); end
  def test_control_ap72; assert_in_epsilon(10, worksheet.control_ap72, 0.001); end
  def test_control_aq72; assert_in_epsilon(30, worksheet.control_aq72, 0.001); end
  def test_control_ar72; assert_in_epsilon(25, worksheet.control_ar72, 0.001); end
  def test_control_as72; assert_in_epsilon(30, worksheet.control_as72, 0.001); end
  def test_control_at72; assert_in_epsilon(25, worksheet.control_at72, 0.001); end
  def test_control_au72; assert_in_epsilon(25, worksheet.control_au72, 0.001); end
  def test_control_av72; assert_in_epsilon(25, worksheet.control_av72, 0.001); end
  def test_control_aw72; assert_in_epsilon(20, worksheet.control_aw72, 0.001); end
  def test_control_ax72; assert_in_epsilon(30, worksheet.control_ax72, 0.001); end
  def test_control_ay72; assert_in_epsilon(40, worksheet.control_ay72, 0.001); end
  def test_control_an73; assert_equal("II.a", worksheet.control_an73); end
  def test_control_ao73; assert_equal("Nuclear power", worksheet.control_ao73); end
  def test_control_ap73; assert_in_epsilon(10, worksheet.control_ap73, 0.001); end
  def test_control_aq73; assert_in_epsilon(10, worksheet.control_aq73, 0.001); end
  def test_control_ar73; assert_in_epsilon(10, worksheet.control_ar73, 0.001); end
  def test_control_as73; assert_in_epsilon(10, worksheet.control_as73, 0.001); end
  def test_control_at73; assert_in_epsilon(10, worksheet.control_at73, 0.001); end
  def test_control_au73; assert_in_epsilon(10, worksheet.control_au73, 0.001); end
  def test_control_av73; assert_in_epsilon(10, worksheet.control_av73, 0.001); end
  def test_control_aw73; assert_in_epsilon(10, worksheet.control_aw73, 0.001); end
  def test_control_ax73; assert_in_epsilon(10, worksheet.control_ax73, 0.001); end
  def test_control_ay73; assert_in_epsilon(10, worksheet.control_ay73, 0.001); end
  def test_control_an74; assert_equal("I.b", worksheet.control_an74); end
  def test_control_ao74; assert_equal("Carbon Capture Storage (CCS)", worksheet.control_ao74); end
  def test_control_an75; assert_in_delta(0, (worksheet.control_an75||0), 0.001); end
  def test_control_ao75; assert_equal("(i) Power Stations", worksheet.control_ao75); end
  def test_control_ap75; assert_in_epsilon(10, worksheet.control_ap75, 0.001); end
  def test_control_aq75; assert_in_epsilon(10, worksheet.control_aq75, 0.001); end
  def test_control_ar75; assert_in_epsilon(10, worksheet.control_ar75, 0.001); end
  def test_control_as75; assert_in_epsilon(20, worksheet.control_as75, 0.001); end
  def test_control_at75; assert_in_epsilon(10, worksheet.control_at75, 0.001); end
  def test_control_au75; assert_in_epsilon(10, worksheet.control_au75, 0.001); end
  def test_control_av75; assert_in_epsilon(10, worksheet.control_av75, 0.001); end
  def test_control_aw75; assert_in_epsilon(20, worksheet.control_aw75, 0.001); end
  def test_control_ax75; assert_in_epsilon(30, worksheet.control_ax75, 0.001); end
  def test_control_ay75; assert_in_epsilon(40, worksheet.control_ay75, 0.001); end
  def test_control_an76; assert_in_delta(0, (worksheet.control_an76||0), 0.001); end
  def test_control_ao76; assert_equal("(ii) Power Station fuel mix", worksheet.control_ao76); end
  def test_control_ap76; assert_in_epsilon(10, worksheet.control_ap76, 0.001); end
  def test_control_aq76; assert_in_epsilon(10, worksheet.control_aq76, 0.001); end
  def test_control_ar76; assert_in_epsilon(10, worksheet.control_ar76, 0.001); end
  def test_control_as76; assert_in_epsilon(30, worksheet.control_as76, 0.001); end
  def test_control_at76; assert_in_epsilon(10, worksheet.control_at76, 0.001); end
  def test_control_au76; assert_in_epsilon(10, worksheet.control_au76, 0.001); end
  def test_control_av76; assert_in_epsilon(10, worksheet.control_av76, 0.001); end
  def test_control_aw76; assert_in_epsilon(20, worksheet.control_aw76, 0.001); end
  def test_control_ax76; assert_in_epsilon(30, worksheet.control_ax76, 0.001); end
  def test_control_ay76; assert_in_epsilon(40, worksheet.control_ay76, 0.001); end
  def test_control_an77; assert_equal("I.a", worksheet.control_an77); end
  def test_control_ao77; assert_equal("Biomass and gas power stations", worksheet.control_ao77); end
  def test_control_ap77; assert_in_epsilon(10, worksheet.control_ap77, 0.001); end
  def test_control_aq77; assert_in_epsilon(30, worksheet.control_aq77, 0.001); end
  def test_control_ar77; assert_in_epsilon(15, worksheet.control_ar77, 0.001); end
  def test_control_as77; assert_in_epsilon(30, worksheet.control_as77, 0.001); end
  def test_control_at77; assert_in_epsilon(30, worksheet.control_at77, 0.001); end
  def test_control_au77; assert_in_epsilon(25, worksheet.control_au77, 0.001); end
  def test_control_av77; assert_in_epsilon(27, worksheet.control_av77, 0.001); end
  def test_control_aw77; assert_in_epsilon(20, worksheet.control_aw77, 0.001); end
  def test_control_ax77; assert_in_epsilon(30, worksheet.control_ax77, 0.001); end
  def test_control_ay77; assert_in_epsilon(40, worksheet.control_ay77, 0.001); end
  def test_control_an78; assert_equal("VII.a", worksheet.control_an78); end
  def test_control_ao78; assert_equal("Imports of decarbonized electricity", worksheet.control_ao78); end
  def test_control_an79; assert_in_delta(0, (worksheet.control_an79||0), 0.001); end
  def test_control_ao79; assert_equal("(i) Share of imported electricity", worksheet.control_ao79); end
  def test_control_ap79; assert_in_epsilon(15, worksheet.control_ap79, 0.001); end
  def test_control_aq79; assert_in_epsilon(15, worksheet.control_aq79, 0.001); end
  def test_control_ar79; assert_in_epsilon(10, worksheet.control_ar79, 0.001); end
  def test_control_as79; assert_in_epsilon(15, worksheet.control_as79, 0.001); end
  def test_control_at79; assert_in_epsilon(15, worksheet.control_at79, 0.001); end
  def test_control_au79; assert_in_epsilon(35, worksheet.control_au79, 0.001); end
  def test_control_av79; assert_in_epsilon(35, worksheet.control_av79, 0.001); end
  def test_control_aw79; assert_in_epsilon(10, worksheet.control_aw79, 0.001); end
  def test_control_ax79; assert_in_epsilon(10, worksheet.control_ax79, 0.001); end
  def test_control_ay79; assert_in_epsilon(40, worksheet.control_ay79, 0.001); end
  def test_control_an80; assert_in_delta(0, (worksheet.control_an80||0), 0.001); end
  def test_control_ao80; assert_equal("(ii) Share of RES in imported electricity", worksheet.control_ao80); end
  def test_control_ap80; assert_in_epsilon(10, worksheet.control_ap80, 0.001); end
  def test_control_aq80; assert_in_epsilon(10, worksheet.control_aq80, 0.001); end
  def test_control_ar80; assert_in_epsilon(10, worksheet.control_ar80, 0.001); end
  def test_control_as80; assert_in_epsilon(10, worksheet.control_as80, 0.001); end
  def test_control_at80; assert_in_epsilon(10, worksheet.control_at80, 0.001); end
  def test_control_au80; assert_in_epsilon(10, worksheet.control_au80, 0.001); end
  def test_control_av80; assert_in_epsilon(10, worksheet.control_av80, 0.001); end
  def test_control_aw80; assert_in_epsilon(10, worksheet.control_aw80, 0.001); end
  def test_control_ax80; assert_in_epsilon(10, worksheet.control_ax80, 0.001); end
  def test_control_ay80; assert_in_epsilon(10, worksheet.control_ay80, 0.001); end
  def test_control_an81; assert_equal("VI.a", worksheet.control_an81); end
  def test_control_ao81; assert_equal("Agriculture and land use", worksheet.control_ao81); end
  def test_control_ao82; assert_equal("(i) Number of animals and meat consumption", worksheet.control_ao82); end
  def test_control_ap82; assert_in_delta(1, worksheet.control_ap82, 0.001); end
  def test_control_aq82; assert_in_epsilon(3, worksheet.control_aq82, 0.001); end
  def test_control_ar82; assert_in_epsilon(4, worksheet.control_ar82, 0.001); end
  def test_control_as82; assert_in_epsilon(2, worksheet.control_as82, 0.001); end
  def test_control_at82; assert_in_epsilon(4, worksheet.control_at82, 0.001); end
  def test_control_au82; assert_in_epsilon(4, worksheet.control_au82, 0.001); end
  def test_control_av82; assert_in_epsilon(4, worksheet.control_av82, 0.001); end
  def test_control_aw82; assert_in_epsilon(2, worksheet.control_aw82, 0.001); end
  def test_control_ax82; assert_in_epsilon(3, worksheet.control_ax82, 0.001); end
  def test_control_ay82; assert_in_epsilon(4, worksheet.control_ay82, 0.001); end
  def test_control_ao83; assert_equal("(ii) Emissions intensity per animal (enteric fermentation)", worksheet.control_ao83); end
  def test_control_ap83; assert_in_delta(1, worksheet.control_ap83, 0.001); end
  def test_control_aq83; assert_in_epsilon(3, worksheet.control_aq83, 0.001); end
  def test_control_ar83; assert_in_epsilon(4, worksheet.control_ar83, 0.001); end
  def test_control_as83; assert_in_epsilon(3, worksheet.control_as83, 0.001); end
  def test_control_at83; assert_in_epsilon(4, worksheet.control_at83, 0.001); end
  def test_control_au83; assert_in_epsilon(4, worksheet.control_au83, 0.001); end
  def test_control_av83; assert_in_epsilon(4, worksheet.control_av83, 0.001); end
  def test_control_aw83; assert_in_epsilon(2, worksheet.control_aw83, 0.001); end
  def test_control_ax83; assert_in_epsilon(3, worksheet.control_ax83, 0.001); end
  def test_control_ay83; assert_in_epsilon(4, worksheet.control_ay83, 0.001); end
  def test_control_ao84; assert_equal("(iii) Emissions intensity per animal (manure management)", worksheet.control_ao84); end
  def test_control_ap84; assert_in_delta(1, worksheet.control_ap84, 0.001); end
  def test_control_aq84; assert_in_epsilon(3, worksheet.control_aq84, 0.001); end
  def test_control_ar84; assert_in_epsilon(4, worksheet.control_ar84, 0.001); end
  def test_control_as84; assert_in_epsilon(3, worksheet.control_as84, 0.001); end
  def test_control_at84; assert_in_epsilon(4, worksheet.control_at84, 0.001); end
  def test_control_au84; assert_in_epsilon(4, worksheet.control_au84, 0.001); end
  def test_control_av84; assert_in_epsilon(4, worksheet.control_av84, 0.001); end
  def test_control_aw84; assert_in_epsilon(2, worksheet.control_aw84, 0.001); end
  def test_control_ax84; assert_in_epsilon(3, worksheet.control_ax84, 0.001); end
  def test_control_ay84; assert_in_epsilon(4, worksheet.control_ay84, 0.001); end
  def test_control_ao85; assert_equal("(iv) Evolution of soil emissions", worksheet.control_ao85); end
  def test_control_ap85; assert_in_delta(1, worksheet.control_ap85, 0.001); end
  def test_control_aq85; assert_in_epsilon(3, worksheet.control_aq85, 0.001); end
  def test_control_ar85; assert_in_epsilon(4, worksheet.control_ar85, 0.001); end
  def test_control_as85; assert_in_epsilon(3, worksheet.control_as85, 0.001); end
  def test_control_at85; assert_in_epsilon(4, worksheet.control_at85, 0.001); end
  def test_control_au85; assert_in_epsilon(4, worksheet.control_au85, 0.001); end
  def test_control_av85; assert_in_epsilon(4, worksheet.control_av85, 0.001); end
  def test_control_aw85; assert_in_epsilon(2, worksheet.control_aw85, 0.001); end
  def test_control_ax85; assert_in_epsilon(3, worksheet.control_ax85, 0.001); end
  def test_control_ay85; assert_in_epsilon(4, worksheet.control_ay85, 0.001); end
  def test_control_ao86; assert_equal("(v) Belgian indigenous biomass production ", worksheet.control_ao86); end
  def test_control_ap86; assert_in_delta(1, worksheet.control_ap86, 0.001); end
  def test_control_aq86; assert_in_epsilon(3, worksheet.control_aq86, 0.001); end
  def test_control_ar86; assert_in_epsilon(3, worksheet.control_ar86, 0.001); end
  def test_control_as86; assert_in_epsilon(3, worksheet.control_as86, 0.001); end
  def test_control_at86; assert_in_epsilon(4, worksheet.control_at86, 0.001); end
  def test_control_au86; assert_in_epsilon(4, worksheet.control_au86, 0.001); end
  def test_control_av86; assert_in_epsilon(4, worksheet.control_av86, 0.001); end
  def test_control_aw86; assert_in_epsilon(2, worksheet.control_aw86, 0.001); end
  def test_control_ax86; assert_in_epsilon(3, worksheet.control_ax86, 0.001); end
  def test_control_ay86; assert_in_epsilon(4, worksheet.control_ay86, 0.001); end
  def test_control_an87; assert_equal("VI.b", worksheet.control_an87); end
  def test_control_ao87; assert_equal("Volume of Waste & Recycling", worksheet.control_ao87); end
  def test_control_ap87; assert_in_delta(1, worksheet.control_ap87, 0.001); end
  def test_control_aq87; assert_in_epsilon(3, worksheet.control_aq87, 0.001); end
  def test_control_ar87; assert_in_epsilon(4, worksheet.control_ar87, 0.001); end
  def test_control_as87; assert_in_epsilon(2, worksheet.control_as87, 0.001); end
  def test_control_at87; assert_in_epsilon(4, worksheet.control_at87, 0.001); end
  def test_control_au87; assert_in_epsilon(4, worksheet.control_au87, 0.001); end
  def test_control_av87; assert_in_epsilon(4, worksheet.control_av87, 0.001); end
  def test_control_aw87; assert_in_epsilon(2, worksheet.control_aw87, 0.001); end
  def test_control_ax87; assert_in_epsilon(3, worksheet.control_ax87, 0.001); end
  def test_control_ay87; assert_in_epsilon(4, worksheet.control_ay87, 0.001); end
  def test_control_an88; assert_equal("VI.c", worksheet.control_an88); end
  def test_control_ao88; assert_equal("Marine algae  [UNUSED]", worksheet.control_ao88); end
  def test_control_ap88; assert_in_epsilon(10, worksheet.control_ap88, 0.001); end
  def test_control_aq88; assert_in_epsilon(10, worksheet.control_aq88, 0.001); end
  def test_control_ar88; assert_in_epsilon(10, worksheet.control_ar88, 0.001); end
  def test_control_as88; assert_in_epsilon(10, worksheet.control_as88, 0.001); end
  def test_control_at88; assert_in_epsilon(10, worksheet.control_at88, 0.001); end
  def test_control_au88; assert_in_epsilon(10, worksheet.control_au88, 0.001); end
  def test_control_av88; assert_in_epsilon(10, worksheet.control_av88, 0.001); end
  def test_control_aw88; assert_in_epsilon(10, worksheet.control_aw88, 0.001); end
  def test_control_ax88; assert_in_epsilon(10, worksheet.control_ax88, 0.001); end
  def test_control_ay88; assert_in_epsilon(10, worksheet.control_ay88, 0.001); end
  def test_control_an89; assert_equal("V.b", worksheet.control_an89); end
  def test_control_ao89; assert_equal("Bioenergy imports", worksheet.control_ao89); end
  def test_control_ap89; assert_in_epsilon(10, worksheet.control_ap89, 0.001); end
  def test_control_aq89; assert_in_epsilon(30, worksheet.control_aq89, 0.001); end
  def test_control_ar89; assert_in_epsilon(40, worksheet.control_ar89, 0.001); end
  def test_control_as89; assert_in_epsilon(30, worksheet.control_as89, 0.001); end
  def test_control_at89; assert_in_epsilon(35, worksheet.control_at89, 0.001); end
  def test_control_au89; assert_in_epsilon(40, worksheet.control_au89, 0.001); end
  def test_control_av89; assert_in_epsilon(40, worksheet.control_av89, 0.001); end
  def test_control_aw89; assert_in_epsilon(20, worksheet.control_aw89, 0.001); end
  def test_control_ax89; assert_in_epsilon(30, worksheet.control_ax89, 0.001); end
  def test_control_ay89; assert_in_epsilon(40, worksheet.control_ay89, 0.001); end
  def test_control_an91; assert_equal("XIV.a", worksheet.control_an91); end
  def test_control_ao91; assert_equal("Geosequestration [UNUSED]", worksheet.control_ao91); end
  def test_control_ap91; assert_in_epsilon(10, worksheet.control_ap91, 0.001); end
  def test_control_aq91; assert_in_epsilon(10, worksheet.control_aq91, 0.001); end
  def test_control_ar91; assert_in_epsilon(10, worksheet.control_ar91, 0.001); end
  def test_control_as91; assert_in_epsilon(10, worksheet.control_as91, 0.001); end
  def test_control_at91; assert_in_epsilon(10, worksheet.control_at91, 0.001); end
  def test_control_au91; assert_in_epsilon(10, worksheet.control_au91, 0.001); end
  def test_control_av91; assert_in_epsilon(10, worksheet.control_av91, 0.001); end
  def test_control_aw91; assert_in_epsilon(10, worksheet.control_aw91, 0.001); end
  def test_control_ax91; assert_in_epsilon(10, worksheet.control_ax91, 0.001); end
  def test_control_ay91; assert_in_epsilon(10, worksheet.control_ay91, 0.001); end
  def test_control_an92; assert_equal("VII.c", worksheet.control_an92); end
  def test_control_ao92; assert_equal("EU transmission integration", worksheet.control_ao92); end
  def test_control_ap92; assert_in_epsilon(10, worksheet.control_ap92, 0.001); end
  def test_control_aq92; assert_in_epsilon(20, worksheet.control_aq92, 0.001); end
  def test_control_ar92; assert_in_epsilon(20, worksheet.control_ar92, 0.001); end
  def test_control_as92; assert_in_epsilon(20, worksheet.control_as92, 0.001); end
  def test_control_at92; assert_in_epsilon(20, worksheet.control_at92, 0.001); end
  def test_control_au92; assert_in_epsilon(40, worksheet.control_au92, 0.001); end
  def test_control_av92; assert_in_epsilon(40, worksheet.control_av92, 0.001); end
  def test_control_aw92; assert_in_epsilon(20, worksheet.control_aw92, 0.001); end
  def test_control_ax92; assert_in_epsilon(30, worksheet.control_ax92, 0.001); end
  def test_control_ay92; assert_in_epsilon(40, worksheet.control_ay92, 0.001); end
  def test_output_b1; assert_equal("OPEERA", worksheet.output_b1); end
  def test_output_e1; assert_equal("BELGIUM", worksheet.output_e1); end
  def test_output_ae1; assert_equal("Quick  jump >", worksheet.output_ae1); end
  def test_output_af1; assert_equal("Energy", worksheet.output_af1); end
  def test_output_ag1; assert_equal("Electricity", worksheet.output_ag1); end
  def test_output_ah1; assert_equal("Heat", worksheet.output_ah1); end
  def test_output_ai1; assert_equal("Emissions", worksheet.output_ai1); end
  def test_output_aj1; assert_equal("BioEnergy", worksheet.output_aj1); end
  def test_output_ak1; assert_equal("Costs", worksheet.output_ak1); end
  def test_output_al1; assert_equal("Other info", worksheet.output_al1); end
  def test_output_b2; assert_equal("Open-source Prospective Energy & Emissions Roadmap Analysis", worksheet.output_b2); end
  def test_output_h2; assert_equal("Chosen", worksheet.output_h2); end
  def test_output_h3; assert_in_epsilon(1990, worksheet.output_h3, 0.001); end
  def test_output_m3; assert_in_epsilon(1995, worksheet.output_m3, 0.001); end
  def test_output_r3; assert_in_epsilon(2000, worksheet.output_r3, 0.001); end
  def test_output_w3; assert_in_epsilon(2005, worksheet.output_w3, 0.001); end
  def test_output_ab3; assert_in_epsilon(2010, worksheet.output_ab3, 0.001); end
  def test_output_ac3; assert_in_epsilon(2010, worksheet.output_ac3, 0.001); end
  def test_output_ad3; assert_in_epsilon(2015, worksheet.output_ad3, 0.001); end
  def test_output_ae3; assert_in_epsilon(2020, worksheet.output_ae3, 0.001); end
  def test_output_af3; assert_in_epsilon(2025, worksheet.output_af3, 0.001); end
  def test_output_ag3; assert_in_epsilon(2030, worksheet.output_ag3, 0.001); end
  def test_output_ah3; assert_in_epsilon(2035, worksheet.output_ah3, 0.001); end
  def test_output_ai3; assert_in_epsilon(2040, worksheet.output_ai3, 0.001); end
  def test_output_aj3; assert_in_epsilon(2045, worksheet.output_aj3, 0.001); end
  def test_output_ak3; assert_in_epsilon(2050, worksheet.output_ak3, 0.001); end
  def test_output_al3; assert_equal("Mix", worksheet.output_al3); end
  def test_output_am3; assert_equal("CAGR", worksheet.output_am3); end
  def test_output_an3; assert_equal("Growth", worksheet.output_an3); end
  def test_output_ao3; assert_equal("Growth", worksheet.output_ao3); end
  def test_output_c4; assert_equal("Codes", worksheet.output_c4); end
  def test_output_e4; assert_equal("Description", worksheet.output_e4); end
  def test_output_f4; assert_equal("Units", worksheet.output_f4); end
  def test_output_g4; assert_equal("Comments/ Sources", worksheet.output_g4); end
  def test_output_h4; assert_equal("Actual", worksheet.output_h4); end
  def test_output_m4; assert_equal("Actual", worksheet.output_m4); end
  def test_output_r4; assert_equal("Actual", worksheet.output_r4); end
  def test_output_w4; assert_equal("Actual", worksheet.output_w4); end
  def test_output_ab4; assert_equal("Actual", worksheet.output_ab4); end
  def test_output_ac4; assert_equal("Modeled", worksheet.output_ac4); end
  def test_output_ad4; assert_equal("Modeled", worksheet.output_ad4); end
  def test_output_ae4; assert_equal("Modeled", worksheet.output_ae4); end
  def test_output_af4; assert_equal("Modeled", worksheet.output_af4); end
  def test_output_ag4; assert_equal("Modeled", worksheet.output_ag4); end
  def test_output_ah4; assert_equal("Modeled", worksheet.output_ah4); end
  def test_output_ai4; assert_equal("Modeled", worksheet.output_ai4); end
  def test_output_aj4; assert_equal("Modeled", worksheet.output_aj4); end
  def test_output_ak4; assert_equal("Modeled", worksheet.output_ak4); end
  def test_output_al4; assert_equal("%", worksheet.output_al4); end
  def test_output_am4; assert_equal("%/yr", worksheet.output_am4); end
  def test_output_an4; assert_equal("% to 2010", worksheet.output_an4); end
  def test_output_ao4; assert_equal("% to 1990", worksheet.output_ao4); end
  def test_output_b5; assert_equal("Final energy demand", worksheet.output_b5); end
  def test_output_c6; assert_equal("T.01", worksheet.output_c6); end
  def test_output_e6; assert_equal("Road transport", worksheet.output_e6); end
  def test_output_f6; assert_equal("TWh/yr", worksheet.output_f6); end
  def test_output_g6; assert_equal("NIR", worksheet.output_g6); end
  def test_output_h6; assert_in_epsilon(75.24521128805556, worksheet.output_h6, 0.001); end
  def test_output_m6; assert_in_epsilon(82.76357564944443, worksheet.output_m6, 0.001); end
  def test_output_r6; assert_in_epsilon(90.30742228805555, worksheet.output_r6, 0.001); end
  def test_output_w6; assert_in_epsilon(95.96334084099999, worksheet.output_w6, 0.001); end
  def test_output_ab6; assert_in_epsilon(93.45014293030167, worksheet.output_ab6, 0.001); end
  def test_output_ac6; assert_in_epsilon(102.02103453907664, worksheet.output_ac6, 0.001); end
  def test_output_ad6; assert_in_epsilon(97.43261732287873, worksheet.output_ad6, 0.001); end
  def test_output_ae6; assert_in_epsilon(89.16605707920469, worksheet.output_ae6, 0.001); end
  def test_output_af6; assert_in_epsilon(80.80518605741767, worksheet.output_af6, 0.001); end
  def test_output_ag6; assert_in_epsilon(71.40322147288786, worksheet.output_ag6, 0.001); end
  def test_output_ah6; assert_in_epsilon(63.0223732177829, worksheet.output_ah6, 0.001); end
  def test_output_ai6; assert_in_epsilon(56.9244179048321, worksheet.output_ai6, 0.001); end
  def test_output_aj6; assert_in_epsilon(51.34434489637081, worksheet.output_aj6, 0.001); end
  def test_output_ak6; assert_in_epsilon(46.55088216758504, worksheet.output_ak6, 0.001); end
  def test_output_al6; assert_in_delta(0.16067006768570186, worksheet.output_al6, 0.001); end
  def test_output_am6; assert_in_delta(-0.019424687958364495, worksheet.output_am6, 0.001); end
  def test_output_an6; assert_in_delta(-0.5437128982479111, worksheet.output_an6, 0.001); end
  def test_output_ao6; assert_in_delta(-0.3813442560566703, worksheet.output_ao6, 0.001); end
  def test_output_c7; assert_equal("T.02", worksheet.output_c7); end
  def test_output_e7; assert_equal("Rail transport", worksheet.output_e7); end
  def test_output_f7; assert_equal("TWh/yr", worksheet.output_f7); end
  def test_output_g7; assert_equal("NIR (excludes electricity)", worksheet.output_g7); end
  def test_output_h7; assert_in_delta(0.8489311282741945, worksheet.output_h7, 0.001); end
  def test_output_m7; assert_in_delta(0.7164294941825307, worksheet.output_m7, 0.001); end
  def test_output_r7; assert_in_delta(0.6288815472685639, worksheet.output_r7, 0.001); end
  def test_output_w7; assert_in_delta(0.49162048983395307, worksheet.output_w7, 0.001); end
  def test_output_ab7; assert_in_delta(0.4005557778461738, worksheet.output_ab7, 0.001); end
  def test_output_ac7; assert_in_epsilon(1.715531102175385, worksheet.output_ac7, 0.001); end
  def test_output_ad7; assert_in_epsilon(1.74880086583102, worksheet.output_ad7, 0.001); end
  def test_output_ae7; assert_in_epsilon(1.780965104264299, worksheet.output_ae7, 0.001); end
  def test_output_af7; assert_in_epsilon(1.7816268781510347, worksheet.output_af7, 0.001); end
  def test_output_ag7; assert_in_epsilon(1.788967730759175, worksheet.output_ag7, 0.001); end
  def test_output_ah7; assert_in_epsilon(1.7738919377875328, worksheet.output_ah7, 0.001); end
  def test_output_ai7; assert_in_epsilon(1.7563059331477597, worksheet.output_ai7, 0.001); end
  def test_output_aj7; assert_in_epsilon(1.7422195515859142, worksheet.output_aj7, 0.001); end
  def test_output_ak7; assert_in_epsilon(1.7165813615405803, worksheet.output_ak7, 0.001); end
  def test_output_al7; assert_in_delta(0.00592476942872611, worksheet.output_al7, 0.001); end
  def test_output_am7; assert_in_delta(1.5300597574485764e-05, worksheet.output_am7, 0.001); end
  def test_output_an7; assert_in_delta(0.000612206542838889, worksheet.output_an7, 0.001); end
  def test_output_ao7; assert_in_epsilon(1.0220502045086337, worksheet.output_ao7, 0.001); end
  def test_output_as7; assert_equal("Conversion factor", worksheet.output_as7); end
  def test_output_at7; assert_in_delta(0.0002777778, worksheet.output_at7, 0.001); end
  def test_output_c8; assert_equal("T.03", worksheet.output_c8); end
  def test_output_e8; assert_equal("Domestic aviation", worksheet.output_e8); end
  def test_output_f8; assert_equal("TWh/yr", worksheet.output_f8); end
  def test_output_g8; assert_equal("NIR", worksheet.output_g8); end
  def test_output_h8; assert_in_delta(0.00019822267564840673, worksheet.output_h8, 0.001); end
  def test_output_m8; assert_in_delta(0.00016885733041112035, worksheet.output_m8, 0.001); end
  def test_output_r8; assert_in_delta(9.599764530042064e-05, worksheet.output_r8, 0.001); end
  def test_output_w8; assert_in_delta(8.332281211333842e-05, worksheet.output_w8, 0.001); end
  def test_output_ab8; assert_in_delta(9.821877600125115e-05, worksheet.output_ab8, 0.001); end
  def test_output_ac8; assert_in_delta(0, (worksheet.output_ac8||0), 0.001); end
  def test_output_ad8; assert_in_delta(0, (worksheet.output_ad8||0), 0.001); end
  def test_output_ae8; assert_in_delta(0, (worksheet.output_ae8||0), 0.001); end
  def test_output_af8; assert_in_delta(0, (worksheet.output_af8||0), 0.001); end
  def test_output_ag8; assert_in_delta(0, (worksheet.output_ag8||0), 0.001); end
  def test_output_ah8; assert_in_delta(0, (worksheet.output_ah8||0), 0.001); end
  def test_output_ai8; assert_in_delta(0, (worksheet.output_ai8||0), 0.001); end
  def test_output_aj8; assert_in_delta(0, (worksheet.output_aj8||0), 0.001); end
  def test_output_ak8; assert_in_delta(0, (worksheet.output_ak8||0), 0.001); end
  def test_output_al8; assert_in_delta(0, (worksheet.output_al8||0), 0.001); end
  def test_output_am8; assert_equal("", worksheet.output_am8); end
  def test_output_an8; assert_equal("", worksheet.output_an8); end
  def test_output_ao8; assert_in_delta(-1, worksheet.output_ao8, 0.001); end
  def test_output_c9; assert_equal("T.04", worksheet.output_c9); end
  def test_output_e9; assert_equal("National navigation", worksheet.output_e9); end
  def test_output_f9; assert_equal("TWh/yr", worksheet.output_f9); end
  def test_output_g9; assert_equal("NIR", worksheet.output_g9); end
  def test_output_h9; assert_in_delta(0.045451997884405966, worksheet.output_h9, 0.001); end
  def test_output_m9; assert_in_delta(0.047880372786496615, worksheet.output_m9, 0.001); end
  def test_output_r9; assert_in_delta(0.05661766881251676, worksheet.output_r9, 0.001); end
  def test_output_w9; assert_in_delta(0.04362834192871655, worksheet.output_w9, 0.001); end
  def test_output_ab9; assert_in_delta(0.04079216546155834, worksheet.output_ab9, 0.001); end
  def test_output_ac9; assert_in_epsilon(1.78, worksheet.output_ac9, 0.001); end
  def test_output_ad9; assert_in_epsilon(1.808133704144022, worksheet.output_ad9, 0.001); end
  def test_output_ae9; assert_in_epsilon(1.8327530570652173, worksheet.output_ae9, 0.001); end
  def test_output_af9; assert_in_epsilon(1.8536691151494562, worksheet.output_af9, 0.001); end
  def test_output_ag9; assert_in_epsilon(1.8706929347826082, worksheet.output_ag9, 0.001); end
  def test_output_ah9; assert_in_epsilon(1.8836355723505434, worksheet.output_ah9, 0.001); end
  def test_output_ai9; assert_in_epsilon(1.8923080842391298, worksheet.output_ai9, 0.001); end
  def test_output_aj9; assert_in_epsilon(1.8965215268342386, worksheet.output_aj9, 0.001); end
  def test_output_ak9; assert_in_epsilon(1.8960869565217389, worksheet.output_ak9, 0.001); end
  def test_output_al9; assert_in_delta(0.006544331824810368, worksheet.output_al9, 0.001); end
  def test_output_am9; assert_in_delta(0.0015807205642779376, worksheet.output_am9, 0.001); end
  def test_output_an9; assert_in_delta(0.06521739130434767, worksheet.output_an9, 0.001); end
  def test_output_ao9; assert_in_epsilon(40.71625109514193, worksheet.output_ao9, 0.001); end
  def test_output_ar9; assert_equal("NIR", worksheet.output_ar9); end
  def test_output_as9; assert_equal("(TJ)", worksheet.output_as9); end
  def test_output_at9; assert_equal("TWh", worksheet.output_at9); end
  def test_output_c10; assert_equal("T.05", worksheet.output_c10); end
  def test_output_e10; assert_equal("International aviation", worksheet.output_e10); end
  def test_output_f10; assert_equal("TWh/yr", worksheet.output_f10); end
  def test_output_g10; assert_equal("NIR", worksheet.output_g10); end
  def test_output_h10; assert_in_delta(0.04897084896840799, worksheet.output_h10, 0.001); end
  def test_output_m10; assert_in_delta(0.04363466575560193, worksheet.output_m10, 0.001); end
  def test_output_r10; assert_in_delta(0.04182748174958541, worksheet.output_r10, 0.001); end
  def test_output_w10; assert_in_delta(0.033969658316219994, worksheet.output_w10, 0.001); end
  def test_output_ab10; assert_in_delta(0.0402723485685543, worksheet.output_ab10, 0.001); end
  def test_output_ac10; assert_in_epsilon(16.785, worksheet.output_ac10, 0.001); end
  def test_output_ad10; assert_in_epsilon(16.059182402773875, worksheet.output_ad10, 0.001); end
  def test_output_ae10; assert_in_epsilon(15.364750637209537, worksheet.output_ae10, 0.001); end
  def test_output_af10; assert_in_epsilon(14.700347516001434, worksheet.output_af10, 0.001); end
  def test_output_ag10; assert_in_epsilon(14.064674539388196, worksheet.output_ag10, 0.001); end
  def test_output_ah10; assert_in_epsilon(13.456489357383656, worksheet.output_ah10, 0.001); end
  def test_output_ai10; assert_in_epsilon(12.874603341746175, worksheet.output_ai10, 0.001); end
  def test_output_aj10; assert_in_epsilon(12.317879262940952, worksheet.output_aj10, 0.001); end
  def test_output_ak10; assert_in_epsilon(11.785229067555232, worksheet.output_ak10, 0.001); end
  def test_output_al10; assert_in_delta(0.04067664164040551, worksheet.output_al10, 0.001); end
  def test_output_am10; assert_in_delta(-0.008801999999999977, worksheet.output_am10, 0.001); end
  def test_output_an10; assert_in_delta(-0.2978713692251873, worksheet.output_an10, 0.001); end
  def test_output_ao10; assert_in_epsilon(239.65805097963695, worksheet.output_ao10, 0.001); end
  def test_output_c11; assert_equal("T.06", worksheet.output_c11); end
  def test_output_e11; assert_equal("International shipping", worksheet.output_e11); end
  def test_output_f11; assert_equal("TWh/yr", worksheet.output_f11); end
  def test_output_g11; assert_equal("NIR", worksheet.output_g11); end
  def test_output_h11; assert_in_epsilon(1.46355654342888, worksheet.output_h11, 0.001); end
  def test_output_m11; assert_in_epsilon(1.4822031244787972, worksheet.output_m11, 0.001); end
  def test_output_r11; assert_in_epsilon(1.7934453107431383, worksheet.output_r11, 0.001); end
  def test_output_w11; assert_in_epsilon(1.9689245884651752, worksheet.output_w11, 0.001); end
  def test_output_ab11; assert_in_epsilon(1.7434372672705813, worksheet.output_ab11, 0.001); end
  def test_output_ac11; assert_in_delta(0, (worksheet.output_ac11||0), 0.001); end
  def test_output_ad11; assert_in_delta(0, (worksheet.output_ad11||0), 0.001); end
  def test_output_ae11; assert_in_delta(0, (worksheet.output_ae11||0), 0.001); end
  def test_output_af11; assert_in_delta(0, (worksheet.output_af11||0), 0.001); end
  def test_output_ag11; assert_in_delta(0, (worksheet.output_ag11||0), 0.001); end
  def test_output_ah11; assert_in_delta(0, (worksheet.output_ah11||0), 0.001); end
  def test_output_ai11; assert_in_delta(0, (worksheet.output_ai11||0), 0.001); end
  def test_output_aj11; assert_in_delta(0, (worksheet.output_aj11||0), 0.001); end
  def test_output_ak11; assert_in_delta(0, (worksheet.output_ak11||0), 0.001); end
  def test_output_al11; assert_in_delta(0, (worksheet.output_al11||0), 0.001); end
  def test_output_am11; assert_equal("", worksheet.output_am11); end
  def test_output_an11; assert_equal("", worksheet.output_an11); end
  def test_output_ao11; assert_in_delta(-1, worksheet.output_ao11, 0.001); end
  def test_output_e12; assert_equal("Transport", worksheet.output_e12); end
  def test_output_f12; assert_equal("TWh/yr", worksheet.output_f12); end
  def test_output_h12; assert_in_epsilon(77.65232002928708, worksheet.output_h12, 0.001); end
  def test_output_i12; assert_in_delta(0, (worksheet.output_i12||0), 0.001); end
  def test_output_j12; assert_in_delta(0, (worksheet.output_j12||0), 0.001); end
  def test_output_k12; assert_in_delta(0, (worksheet.output_k12||0), 0.001); end
  def test_output_l12; assert_in_delta(0, (worksheet.output_l12||0), 0.001); end
  def test_output_m12; assert_in_epsilon(85.05389216397828, worksheet.output_m12, 0.001); end
  def test_output_n12; assert_in_delta(0, (worksheet.output_n12||0), 0.001); end
  def test_output_o12; assert_in_delta(0, (worksheet.output_o12||0), 0.001); end
  def test_output_p12; assert_in_delta(0, (worksheet.output_p12||0), 0.001); end
  def test_output_q12; assert_in_delta(0, (worksheet.output_q12||0), 0.001); end
  def test_output_r12; assert_in_epsilon(92.82829029427465, worksheet.output_r12, 0.001); end
  def test_output_s12; assert_in_delta(0, (worksheet.output_s12||0), 0.001); end
  def test_output_t12; assert_in_delta(0, (worksheet.output_t12||0), 0.001); end
  def test_output_u12; assert_in_delta(0, (worksheet.output_u12||0), 0.001); end
  def test_output_v12; assert_in_delta(0, (worksheet.output_v12||0), 0.001); end
  def test_output_w12; assert_in_epsilon(98.50156724235617, worksheet.output_w12, 0.001); end
  def test_output_x12; assert_in_delta(0, (worksheet.output_x12||0), 0.001); end
  def test_output_y12; assert_in_delta(0, (worksheet.output_y12||0), 0.001); end
  def test_output_z12; assert_in_delta(0, (worksheet.output_z12||0), 0.001); end
  def test_output_aa12; assert_in_delta(0, (worksheet.output_aa12||0), 0.001); end
  def test_output_ab12; assert_in_epsilon(95.67529870822453, worksheet.output_ab12, 0.001); end
  def test_output_ad12; assert_in_epsilon(117.04873429562764, worksheet.output_ad12, 0.001); end
  def test_output_ae12; assert_in_epsilon(108.14452587774375, worksheet.output_ae12, 0.001); end
  def test_output_af12; assert_in_epsilon(99.14082956671959, worksheet.output_af12, 0.001); end
  def test_output_ag12; assert_in_epsilon(89.12755667781784, worksheet.output_ag12, 0.001); end
  def test_output_ah12; assert_in_epsilon(80.13639008530464, worksheet.output_ah12, 0.001); end
  def test_output_ai12; assert_in_epsilon(73.44763526396517, worksheet.output_ai12, 0.001); end
  def test_output_aj12; assert_in_epsilon(67.30096523773192, worksheet.output_aj12, 0.001); end
  def test_output_al12; assert_in_delta(0.21381581057964388, worksheet.output_al12, 0.001); end
  def test_output_am12; assert_in_delta(-0.016860787107504493, worksheet.output_am12, 0.001); end
  def test_output_an12; assert_in_delta(-0.4934751715696154, worksheet.output_an12, 0.001); end
  def test_output_ao12; assert_in_delta(-0.2022288641235933, worksheet.output_ao12, 0.001); end
  def test_output_ar12; assert_equal("1.A.3  Transport", worksheet.output_ar12); end
  def test_output_as12; assert_in_epsilon(347846.1568138497, worksheet.output_as12, 0.001); end
  def test_output_at12; assert_in_epsilon(96.62394017820617, worksheet.output_at12, 0.001); end
  def test_output_c13; assert_equal("I.01", worksheet.output_c13); end
  def test_output_e13; assert_equal("Industry Heat", worksheet.output_e13); end
  def test_output_f13; assert_equal("TWh/yr", worksheet.output_f13); end
  def test_output_g13; assert_equal("NIR", worksheet.output_g13); end
  def test_output_h13; assert_in_epsilon(136.2563651780339, worksheet.output_h13, 0.001); end
  def test_output_m13; assert_in_epsilon(142.34083184257193, worksheet.output_m13, 0.001); end
  def test_output_r13; assert_in_epsilon(148.2033928890706, worksheet.output_r13, 0.001); end
  def test_output_w13; assert_in_epsilon(138.14067775039763, worksheet.output_w13, 0.001); end
  def test_output_ab13; assert_in_epsilon(118.94336577640077, worksheet.output_ab13, 0.001); end
  def test_xi_a_f461; assert_in_epsilon(1.7051884174273584, worksheet.xi_a_f461, 0.001); end
  def test_xi_a_f454; assert_in_epsilon(31.65782113427029, worksheet.xi_a_f454, 0.001); end
  def test_xi_b_ac201; assert_in_delta(0, (worksheet.xi_b_ac201||0), 0.001); end
  def test_xi_b_ac214; assert_in_delta(0, (worksheet.xi_b_ac214||0), 0.001); end
  def test_xi_b_f251; assert_in_delta(0, (worksheet.xi_b_f251||0), 0.001); end
  def test_xi_b_f244; assert_in_epsilon(5.5197, worksheet.xi_b_f244, 0.001); end
  def test_xi_f_f262; assert_in_delta(0, (worksheet.xi_f_f262||0), 0.001); end
  def test_xi_f_f255; assert_in_epsilon(8.609316221388886, worksheet.xi_f_f255, 0.001); end
  def test_output_ac13; assert_in_epsilon(126.18501157801052, worksheet.output_ac13, 0.001); end
  def test_xi_a_r306; assert_in_delta(0.005897112782492845, worksheet.xi_a_r306, 0.001); end
  def test_xi_a_r364; assert_in_delta(0.0047048074263999744, worksheet.xi_a_r364, 0.001); end
  def test_xi_a_r363; assert_in_delta(0.00048384529108054123, worksheet.xi_a_r363, 0.001); end
  def test_xi_a_r365; assert_in_delta(0.0012444420511931401, worksheet.xi_a_r365, 0.001); end
  def test_xi_a_r366; assert_in_delta(0.00045386155789491875, worksheet.xi_a_r366, 0.001); end
  def test_xi_a_r367; assert_in_delta(-0.0006679341615114378, worksheet.xi_a_r367, 0.001); end
  def test_xi_a_r368; assert_in_delta(-0.00032190938256429274, worksheet.xi_a_r368, 0.001); end
  def test_xi_a_r369; assert_in_delta(0.005897112782492843, worksheet.xi_a_r369, 0.001); end
  def test_xi_a_ad357; assert_in_delta(0.7978154055943197, worksheet.xi_a_ad357, 0.001); end
  def test_xi_a_ad380; assert_in_delta(0.794823597823341, worksheet.xi_a_ad380, 0.001); end
  def test_xi_a_ad406; assert_in_delta(0.7799206553641533, worksheet.xi_a_ad406, 0.001); end
  def test_xi_a_g458; assert_in_epsilon(-20.32093870112195, worksheet.xi_a_g458, 0.001); end
  def test_xi_a_f260; assert_in_epsilon(4369.12, worksheet.xi_a_f260, 0.001); end
  def test_xi_a_f283; assert_in_epsilon(4336.3516, worksheet.xi_a_f283, 0.001); end
  def test_xi_a_r356; assert_in_delta(0.005897112782492845, worksheet.xi_a_r356, 0.001); end
  def test_xi_a_r432; assert_in_delta(0.005897112782492845, worksheet.xi_a_r432, 0.001); end
  def test_xi_a_ad358; assert_in_delta(0.21102564883744454, worksheet.xi_a_ad358, 0.001); end
  def test_xi_a_ad360; assert_in_delta(-0.11326460696060946, worksheet.xi_a_ad360, 0.001); end
  def test_xi_a_ad411; assert_in_delta(0.01490294245918744, worksheet.xi_a_ad411, 0.001); end
  def test_xi_a_ad436; assert_in_delta(-0.09836166450142202, worksheet.xi_a_ad436, 0.001); end
  def test_xi_a_g459; assert_in_epsilon(-8.014362169964848, worksheet.xi_a_g459, 0.001); end
  def test_xi_a_ad356; assert_in_delta(0.08204782728879893, worksheet.xi_a_ad356, 0.001); end
  def test_xi_a_ad361; assert_in_delta(-0.05458762523924706, worksheet.xi_a_ad361, 0.001); end
  def test_xi_a_ad382; assert_in_delta(0.07995515825027222, worksheet.xi_a_ad382, 0.001); end
  def test_xi_a_g460; assert_in_epsilon(-2.1269183869378425, worksheet.xi_a_g460, 0.001); end
  def test_xi_a_g461; assert_in_epsilon(1.3959122661376837, worksheet.xi_a_g461, 0.001); end
  def test_xi_a_g454; assert_in_epsilon(27.727406991886955, worksheet.xi_a_g454, 0.001); end
  def test_xi_b_ad197; assert_in_delta(0.6781107648046033, worksheet.xi_b_ad197, 0.001); end
  def test_xi_b_ad210; assert_in_delta(0.6234761683281639, worksheet.xi_b_ad210, 0.001); end
  def test_xi_b_ad213; assert_in_delta(0.22399804203628226, worksheet.xi_b_ad213, 0.001); end
  def test_xi_b_g248; assert_in_epsilon(-4.278253529094318, worksheet.xi_b_g248, 0.001); end
  def test_xi_b_ad198; assert_in_delta(0.02829057779908894, worksheet.xi_b_ad198, 0.001); end
  def test_xi_b_ad211; assert_in_delta(0.026011238814426286, worksheet.xi_b_ad211, 0.001); end
  def test_xi_b_g249; assert_in_delta(-0.13131098609605898, worksheet.xi_b_g249, 0.001); end
  def test_xi_b_ad199; assert_in_delta(0.019835371213937504, worksheet.xi_b_ad199, 0.001); end
  def test_xi_b_ad212; assert_in_delta(0.01823725840039719, worksheet.xi_b_ad212, 0.001); end
  def test_xi_b_g250; assert_in_delta(-0.09206606426283008, worksheet.xi_b_g250, 0.001); end
  def test_xi_b_ad201; assert_in_delta(0, (worksheet.xi_b_ad201||0), 0.001); end
  def test_xi_b_ad214; assert_in_delta(0, (worksheet.xi_b_ad214||0), 0.001); end
  def test_xi_b_g251; assert_in_delta(0, (worksheet.xi_b_g251||0), 0.001); end
  def test_xi_b_g244; assert_in_epsilon(4.501630579453207, worksheet.xi_b_g244, 0.001); end
  def test_xi_f_ad211; assert_in_delta(0.020877332688744615, worksheet.xi_f_ad211, 0.001); end
  def test_xi_f_ad202; assert_in_delta(0.019861233066068185, worksheet.xi_f_ad202, 0.001); end
  def test_xi_f_ad201; assert_in_delta(0.2056201353205016, worksheet.xi_f_ad201, 0.001); end
  def test_xi_f_ad213; assert_in_delta(0.01922815626208726, worksheet.xi_f_ad213, 0.001); end
  def test_xi_f_ad214; assert_in_delta(0.5208012573458052, worksheet.xi_f_ad214, 0.001); end
  def test_xi_f_g259; assert_in_epsilon(-8.081959114795309, worksheet.xi_f_g259, 0.001); end
  def test_xi_f_g260; assert_in_epsilon(-3.0678959025000005, worksheet.xi_f_g260, 0.001); end
  def test_xi_f_g261; assert_in_delta(-0.28688815770468745, worksheet.xi_f_g261, 0.001); end
  def test_xi_f_g262; assert_in_delta(0, (worksheet.xi_f_g262||0), 0.001); end
  def test_xi_f_g255; assert_in_epsilon(8.316066396388885, worksheet.xi_f_g255, 0.001); end
  def test_output_ad13; assert_in_epsilon(116.6431370409409, worksheet.output_ad13, 0.001); end
  def test_xi_a_s306; assert_in_delta(0.005860024022854526, worksheet.xi_a_s306, 0.001); end
  def test_xi_a_s364; assert_in_delta(0.0046752174425861385, worksheet.xi_a_s364, 0.001); end
  def test_xi_a_s363; assert_in_delta(0.0004808022389353806, worksheet.xi_a_s363, 0.001); end
  def test_xi_a_s365; assert_in_delta(0.0012366153716258878, worksheet.xi_a_s365, 0.001); end
  def test_xi_a_s366; assert_in_delta(0.0004510070826880325, worksheet.xi_a_s366, 0.001); end
  def test_xi_a_s367; assert_in_delta(-0.000663733317728347, worksheet.xi_a_s367, 0.001); end
  def test_xi_a_s368; assert_in_delta(-0.0003198847952525676, worksheet.xi_a_s368, 0.001); end
  def test_xi_a_s369; assert_in_delta(0.005860024022854526, worksheet.xi_a_s369, 0.001); end
  def test_xi_a_ae357; assert_in_delta(0.7978154055943194, worksheet.xi_a_ae357, 0.001); end
  def test_xi_a_ae380; assert_in_delta(0.791831790052362, worksheet.xi_a_ae380, 0.001); end
  def test_xi_a_ae406; assert_in_delta(0.7621380979253984, worksheet.xi_a_ae406, 0.001); end
  def test_xi_a_h458; assert_in_epsilon(-19.592080991690278, worksheet.xi_a_h458, 0.001); end
  def test_xi_a_g260; assert_in_epsilon(4369.12, worksheet.xi_a_g260, 0.001); end
  def test_xi_a_g283; assert_in_epsilon(4303.5832, worksheet.xi_a_g283, 0.001); end
  def test_xi_a_s356; assert_in_delta(0.005860024022854526, worksheet.xi_a_s356, 0.001); end
  def test_xi_a_s432; assert_in_delta(0.005860024022854526, worksheet.xi_a_s432, 0.001); end
  def test_xi_a_ae358; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae358, 0.001); end
  def test_xi_a_ae360; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ae360, 0.001); end
  def test_xi_a_ae411; assert_in_delta(0.02969369212696371, worksheet.xi_a_ae411, 0.001); end
  def test_xi_a_ae436; assert_in_delta(-0.08357091483364569, worksheet.xi_a_ae436, 0.001); end
  def test_xi_a_h459; assert_in_epsilon(-8.276785747129898, worksheet.xi_a_h459, 0.001); end
  def test_xi_a_ae356; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae356, 0.001); end
  def test_xi_a_ae361; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae361, 0.001); end
  def test_xi_a_ae382; assert_in_delta(0.08294696602125096, worksheet.xi_a_ae382, 0.001); end
  def test_xi_a_h460; assert_in_epsilon(-2.173020897232455, worksheet.xi_a_h460, 0.001); end
  def test_xi_a_h461; assert_in_epsilon(1.3766508307843899, worksheet.xi_a_h461, 0.001); end
  def test_xi_a_h454; assert_in_epsilon(27.32633680526824, worksheet.xi_a_h454, 0.001); end
  def test_xi_b_ae197; assert_in_delta(0.6781107648046033, worksheet.xi_b_ae197, 0.001); end
  def test_xi_b_ae210; assert_in_delta(0.5688415718517245, worksheet.xi_b_ae210, 0.001); end
  def test_xi_b_ae213; assert_in_delta(0.29199832174538476, worksheet.xi_b_ae213, 0.001); end
  def test_xi_b_h248; assert_in_epsilon(-3.8533796796433446, worksheet.xi_b_h248, 0.001); end
  def test_xi_b_ae198; assert_in_delta(0.02829057779908894, worksheet.xi_b_ae198, 0.001); end
  def test_xi_b_ae211; assert_in_delta(0.023731899829763634, worksheet.xi_b_ae211, 0.001); end
  def test_xi_b_h249; assert_in_delta(-0.10623116010715702, worksheet.xi_b_h249, 0.001); end
  def test_xi_b_ae199; assert_in_delta(0.019835371213937504, worksheet.xi_b_ae199, 0.001); end
  def test_xi_b_ae212; assert_in_delta(0.016639145586856877, worksheet.xi_b_ae212, 0.001); end
  def test_xi_b_h250; assert_in_delta(-0.07448184728417055, worksheet.xi_b_h250, 0.001); end
  def test_xi_b_ae201; assert_in_delta(0, (worksheet.xi_b_ae201||0), 0.001); end
  def test_xi_b_ae214; assert_in_delta(0, (worksheet.xi_b_ae214||0), 0.001); end
  def test_xi_b_h251; assert_in_delta(0, (worksheet.xi_b_h251||0), 0.001); end
  def test_xi_b_h244; assert_in_epsilon(4.034092687034672, worksheet.xi_b_h244, 0.001); end
  def test_xi_f_ae211; assert_in_delta(0.020189957629270134, worksheet.xi_f_ae211, 0.001); end
  def test_xi_f_ae202; assert_in_delta(0.010078834690243557, worksheet.xi_f_ae202, 0.001); end
  def test_xi_f_ae201; assert_in_delta(0.21540253369632612, worksheet.xi_f_ae201, 0.001); end
  def test_xi_f_ae213; assert_in_delta(0.00943630897874053, worksheet.xi_f_ae213, 0.001); end
  def test_xi_f_ae214; assert_in_delta(0.521498081312802, worksheet.xi_f_ae214, 0.001); end
  def test_xi_f_h259; assert_in_epsilon(-7.8748667587375, worksheet.xi_f_h259, 0.001); end
  def test_xi_f_h260; assert_in_epsilon(-3.131444909999999, worksheet.xi_f_h260, 0.001); end
  def test_xi_f_h261; assert_in_delta(-0.1371816812625, worksheet.xi_f_h261, 0.001); end
  def test_xi_f_h262; assert_in_delta(0, (worksheet.xi_f_h262||0), 0.001); end
  def test_xi_f_h255; assert_in_epsilon(8.022816571388889, worksheet.xi_f_h255, 0.001); end
  def test_output_ae13; assert_in_epsilon(109.80654979033078, worksheet.output_ae13, 0.001); end
  def test_xi_a_t306; assert_in_delta(0.005822935263216205, worksheet.xi_a_t306, 0.001); end
  def test_xi_a_t364; assert_in_delta(0.004645627458772302, worksheet.xi_a_t364, 0.001); end
  def test_xi_a_t363; assert_in_delta(0.0004777591867902199, worksheet.xi_a_t363, 0.001); end
  def test_xi_a_t365; assert_in_delta(0.0012287886920586352, worksheet.xi_a_t365, 0.001); end
  def test_xi_a_t366; assert_in_delta(0.00044815260748114617, worksheet.xi_a_t366, 0.001); end
  def test_xi_a_t367; assert_in_delta(-0.0006595324739452562, worksheet.xi_a_t367, 0.001); end
  def test_xi_a_t368; assert_in_delta(-0.0003178602079408425, worksheet.xi_a_t368, 0.001); end
  def test_xi_a_t369; assert_in_delta(0.0058229352632162045, worksheet.xi_a_t369, 0.001); end
  def test_xi_a_af357; assert_in_delta(0.7978154055943195, worksheet.xi_a_af357, 0.001); end
  def test_xi_a_af380; assert_in_delta(0.7888399822813834, worksheet.xi_a_af380, 0.001); end
  def test_xi_a_af406; assert_in_delta(0.7444677332780556, worksheet.xi_a_af406, 0.001); end
  def test_xi_a_i458; assert_in_epsilon(-18.88040775340925, worksheet.xi_a_i458, 0.001); end
  def test_xi_a_h260; assert_in_epsilon(4369.12, worksheet.xi_a_h260, 0.001); end
  def test_xi_a_h283; assert_in_epsilon(4270.8148, worksheet.xi_a_h283, 0.001); end
  def test_xi_a_t356; assert_in_delta(0.005822935263216205, worksheet.xi_a_t356, 0.001); end
  def test_xi_a_t432; assert_in_delta(0.005822935263216205, worksheet.xi_a_t432, 0.001); end
  def test_xi_a_af358; assert_in_delta(0.21102564883744448, worksheet.xi_a_af358, 0.001); end
  def test_xi_a_af360; assert_in_delta(-0.11326460696060943, worksheet.xi_a_af360, 0.001); end
  def test_xi_a_af411; assert_in_delta(0.04437224900332759, worksheet.xi_a_af411, 0.001); end
  def test_xi_a_af436; assert_in_delta(-0.06889235795728184, worksheet.xi_a_af436, 0.001); end
  def test_xi_a_i459; assert_in_epsilon(-8.526814990318675, worksheet.xi_a_i459, 0.001); end
  def test_xi_a_af356; assert_in_delta(0.0820478272887989, worksheet.xi_a_af356, 0.001); end
  def test_xi_a_af361; assert_in_delta(-0.05458762523924704, worksheet.xi_a_af361, 0.001); end
  def test_xi_a_af382; assert_in_delta(0.0859387737922297, worksheet.xi_a_af382, 0.001); end
  def test_xi_a_i460; assert_in_epsilon(-2.217228780951796, worksheet.xi_a_i460, 0.001); end
  def test_xi_a_i461; assert_in_epsilon(1.3575220804048278, worksheet.xi_a_i461, 0.001); end
  def test_xi_a_i454; assert_in_epsilon(26.928029444274898, worksheet.xi_a_i454, 0.001); end
  def test_xi_b_af197; assert_in_delta(0.6781107648046033, worksheet.xi_b_af197, 0.001); end
  def test_xi_b_af210; assert_in_delta(0.514206975375285, worksheet.xi_b_af210, 0.001); end
  def test_xi_b_af213; assert_in_delta(0.35999860145448725, worksheet.xi_b_af213, 0.001); end
  def test_xi_b_i248; assert_in_epsilon(-3.5374043709922063, worksheet.xi_b_i248, 0.001); end
  def test_xi_b_af198; assert_in_delta(0.02829057779908894, worksheet.xi_b_af198, 0.001); end
  def test_xi_b_af211; assert_in_delta(0.02145256084510098, worksheet.xi_b_af211, 0.001); end
  def test_xi_b_i249; assert_in_delta(-0.08680610661125224, worksheet.xi_b_i249, 0.001); end
  def test_xi_b_af199; assert_in_delta(0.019835371213937504, worksheet.xi_b_af199, 0.001); end
  def test_xi_b_af212; assert_in_delta(0.015041032773316566, worksheet.xi_b_af212, 0.001); end
  def test_xi_b_i250; assert_in_delta(-0.06086236062404748, worksheet.xi_b_i250, 0.001); end
  def test_xi_b_af201; assert_in_delta(0, (worksheet.xi_b_af201||0), 0.001); end
  def test_xi_b_af214; assert_in_delta(0, (worksheet.xi_b_af214||0), 0.001); end
  def test_xi_b_i251; assert_in_delta(0, (worksheet.xi_b_i251||0), 0.001); end
  def test_xi_b_i244; assert_in_epsilon(3.685072838227506, worksheet.xi_b_i244, 0.001); end
  def test_xi_f_af211; assert_in_delta(0.01950258256979565, worksheet.xi_f_af211, 0.001); end
  def test_xi_f_af202; assert_in_delta(0, (worksheet.xi_f_af202||0), 0.001); end
  def test_xi_f_af201; assert_in_delta(0.22548136838656974, worksheet.xi_f_af201, 0.001); end
  def test_xi_f_af213; assert_in_delta(0, (worksheet.xi_f_af213||0), 0.001); end
  def test_xi_f_af214; assert_in_delta(0.5215429306607733, worksheet.xi_f_af214, 0.001); end
  def test_xi_f_i259; assert_in_epsilon(-7.658538424999998, worksheet.xi_f_i259, 0.001); end
  def test_xi_f_i260; assert_in_epsilon(-3.1917050999999996, worksheet.xi_f_i260, 0.001); end
  def test_xi_f_i261; assert_in_delta(0, (worksheet.xi_f_i261||0), 0.001); end
  def test_xi_f_i262; assert_in_delta(0, (worksheet.xi_f_i262||0), 0.001); end
  def test_xi_f_i255; assert_in_epsilon(7.729566746388887, worksheet.xi_f_i255, 0.001); end
  def test_output_af13; assert_in_epsilon(103.64505708791481, worksheet.output_af13, 0.001); end
  def test_xi_a_u306; assert_in_delta(0.005785846503577885, worksheet.xi_a_u306, 0.001); end
  def test_xi_a_u364; assert_in_delta(0.002538820611227156, worksheet.xi_a_u364, 0.001); end
  def test_xi_a_u363; assert_in_delta(0.00047471613464505923, worksheet.xi_a_u363, 0.001); end
  def test_xi_a_u365; assert_in_delta(0.0012209620124913826, worksheet.xi_a_u365, 0.001); end
  def test_xi_a_u366; assert_in_delta(0.00044529813227425985, worksheet.xi_a_u366, 0.001); end
  def test_xi_a_u367; assert_in_delta(0, (worksheet.xi_a_u367||0), 0.001); end
  def test_xi_a_u368; assert_in_delta(-0.00031583562062911737, worksheet.xi_a_u368, 0.001); end
  def test_xi_a_u369; assert_in_delta(0.004363961270008741, worksheet.xi_a_u369, 0.001); end
  def test_xi_a_ag357; assert_in_delta(0.5817697394968107, worksheet.xi_a_ag357, 0.001); end
  def test_xi_a_ag380; assert_in_delta(0.5730431934043585, worksheet.xi_a_ag380, 0.001); end
  def test_xi_a_ag406; assert_in_delta(0.5300649538990316, worksheet.xi_a_ag406, 0.001); end
  def test_xi_a_j458; assert_in_epsilon(-9.459640507897898, worksheet.xi_a_j458, 0.001); end
  def test_xi_a_i260; assert_in_epsilon(4369.12, worksheet.xi_a_i260, 0.001); end
  def test_xi_a_i283; assert_in_epsilon(4238.0464, worksheet.xi_a_i283, 0.001); end
  def test_xi_a_u356; assert_in_delta(0.0040500925525045195, worksheet.xi_a_u356, 0.001); end
  def test_xi_a_u432; assert_in_delta(0.0040500925525045195, worksheet.xi_a_u432, 0.001); end
  def test_xi_a_ag358; assert_in_delta(0.279782962530494, worksheet.xi_a_ag358, 0.001); end
  def test_xi_a_ag360; assert_in_delta(0, (worksheet.xi_a_ag360||0), 0.001); end
  def test_xi_a_ag411; assert_in_delta(0.042978239505326976, worksheet.xi_a_ag411, 0.001); end
  def test_xi_a_ag436; assert_in_delta(0.042978239505326976, worksheet.xi_a_ag436, 0.001); end
  def test_xi_a_j459; assert_in_epsilon(-10.462320103029281, worksheet.xi_a_j459, 0.001); end
  def test_xi_a_ag356; assert_in_delta(0.10878101460421724, worksheet.xi_a_ag356, 0.001); end
  def test_xi_a_ag361; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ag361, 0.001); end
  def test_xi_a_ag382; assert_in_delta(0.11076643708199085, worksheet.xi_a_ag382, 0.001); end
  def test_xi_a_j460; assert_in_epsilon(-1.980173304896649, worksheet.xi_a_j460, 0.001); end
  def test_xi_a_j461; assert_in_epsilon(1.2422553522502118, worksheet.xi_a_j461, 0.001); end
  def test_xi_a_j454; assert_in_epsilon(19.320978563573618, worksheet.xi_a_j454, 0.001); end
  def test_xi_b_ag197; assert_in_delta(0.6781107648046033, worksheet.xi_b_ag197, 0.001); end
  def test_xi_b_ag210; assert_in_delta(0.45957237889884556, worksheet.xi_b_ag210, 0.001); end
  def test_xi_b_ag213; assert_in_delta(0.42799888116358986, worksheet.xi_b_ag213, 0.001); end
  def test_xi_b_j248; assert_in_epsilon(-3.303322294907978, worksheet.xi_b_j248, 0.001); end
  def test_xi_b_ag198; assert_in_delta(0.02829057779908894, worksheet.xi_b_ag198, 0.001); end
  def test_xi_b_ag211; assert_in_delta(0.019173221860438325, worksheet.xi_b_ag211, 0.001); end
  def test_xi_b_j249; assert_in_delta(-0.07135802395443457, worksheet.xi_b_j249, 0.001); end
  def test_xi_b_ag199; assert_in_delta(0.019835371213937504, worksheet.xi_b_ag199, 0.001); end
  def test_xi_b_ag212; assert_in_delta(0.013442919959776251, worksheet.xi_b_ag212, 0.001); end
  def test_xi_b_j250; assert_in_delta(-0.050031247303645936, worksheet.xi_b_j250, 0.001); end
  def test_xi_b_ag201; assert_in_delta(0, (worksheet.xi_b_ag201||0), 0.001); end
  def test_xi_b_ag214; assert_in_delta(0, (worksheet.xi_b_ag214||0), 0.001); end
  def test_xi_b_j251; assert_in_delta(0, (worksheet.xi_b_j251||0), 0.001); end
  def test_xi_b_j244; assert_in_epsilon(3.4247115661660583, worksheet.xi_b_j244, 0.001); end
  def test_xi_f_ag211; assert_in_delta(0.018815207510321168, worksheet.xi_f_ag211, 0.001); end
  def test_xi_f_ag202; assert_in_delta(0, (worksheet.xi_f_ag202||0), 0.001); end
  def test_xi_f_ag201; assert_in_delta(0.22548136838656974, worksheet.xi_f_ag201, 0.001); end
  def test_xi_f_ag213; assert_in_delta(0, (worksheet.xi_f_ag213||0), 0.001); end
  def test_xi_f_ag214; assert_in_delta(0.5222303057202478, worksheet.xi_f_ag214, 0.001); end
  def test_xi_f_j259; assert_in_epsilon(-7.451550899999998, worksheet.xi_f_j259, 0.001); end
  def test_xi_f_j260; assert_in_epsilon(-3.1054427999999996, worksheet.xi_f_j260, 0.001); end
  def test_xi_f_j261; assert_in_delta(0, (worksheet.xi_f_j261||0), 0.001); end
  def test_xi_f_j262; assert_in_delta(0, (worksheet.xi_f_j262||0), 0.001); end
  def test_xi_f_j255; assert_in_epsilon(7.436316921388887, worksheet.xi_f_j255, 0.001); end
  def test_output_ag13; assert_in_epsilon(87.97663169166783, worksheet.output_ag13, 0.001); end
  def test_xi_a_v306; assert_in_delta(0.0057487577439395655, worksheet.xi_a_v306, 0.001); end
  def test_xi_a_v364; assert_in_delta(0.002522546120129546, worksheet.xi_a_v364, 0.001); end
  def test_xi_a_v363; assert_in_delta(0.00047167308249989866, worksheet.xi_a_v363, 0.001); end
  def test_xi_a_v365; assert_in_delta(0.0012131353329241303, worksheet.xi_a_v365, 0.001); end
  def test_xi_a_v366; assert_in_delta(0.0004424436570673736, worksheet.xi_a_v366, 0.001); end
  def test_xi_a_v367; assert_in_delta(0, (worksheet.xi_a_v367||0), 0.001); end
  def test_xi_a_v368; assert_in_delta(-0.00031381103331739224, worksheet.xi_a_v368, 0.001); end
  def test_xi_a_v369; assert_in_delta(0.004335987159303557, worksheet.xi_a_v369, 0.001); end
  def test_xi_a_ah357; assert_in_delta(0.5817697394968107, worksheet.xi_a_ah357, 0.001); end
  def test_xi_a_ah380; assert_in_delta(0.5708615568812454, worksheet.xi_a_ah380, 0.001); end
  def test_xi_a_ah406; assert_in_delta(0.5173432859236287, worksheet.xi_a_ah406, 0.001); end
  def test_xi_a_k458; assert_in_epsilon(-9.111045557744983, worksheet.xi_a_k458, 0.001); end
  def test_xi_a_j260; assert_in_epsilon(4369.12, worksheet.xi_a_j260, 0.001); end
  def test_xi_a_j283; assert_in_epsilon(4205.278, worksheet.xi_a_j283, 0.001); end
  def test_xi_a_v356; assert_in_delta(0.004024130420757696, worksheet.xi_a_v356, 0.001); end
  def test_xi_a_v432; assert_in_delta(0.004024130420757696, worksheet.xi_a_v432, 0.001); end
  def test_xi_a_ah358; assert_in_delta(0.279782962530494, worksheet.xi_a_ah358, 0.001); end
  def test_xi_a_ah360; assert_in_delta(0, (worksheet.xi_a_ah360||0), 0.001); end
  def test_xi_a_ah411; assert_in_delta(0.053518270957616854, worksheet.xi_a_ah411, 0.001); end
  def test_xi_a_ah436; assert_in_delta(0.053518270957616854, worksheet.xi_a_ah436, 0.001); end
  def test_xi_a_k459; assert_in_epsilon(-10.49324287424139, worksheet.xi_a_k459, 0.001); end
  def test_xi_a_ah356; assert_in_delta(0.10878101460421724, worksheet.xi_a_ah356, 0.001); end
  def test_xi_a_ah361; assert_in_delta(-0.07237360762106047, worksheet.xi_a_ah361, 0.001); end
  def test_xi_a_ah382; assert_in_delta(0.11294807360510395, worksheet.xi_a_ah382, 0.001); end
  def test_xi_a_k460; assert_in_epsilon(-1.9891863470710371, worksheet.xi_a_k460, 0.001); end
  def test_xi_a_k461; assert_in_epsilon(1.2247486807020118, worksheet.xi_a_k461, 0.001); end
  def test_xi_a_k454; assert_in_epsilon(19.029826098355404, worksheet.xi_a_k454, 0.001); end
  def test_xi_b_ah197; assert_in_delta(0.6781107648046033, worksheet.xi_b_ah197, 0.001); end
  def test_xi_b_ah210; assert_in_delta(0.40493778242240613, worksheet.xi_b_ah210, 0.001); end
  def test_xi_b_ah213; assert_in_delta(0.49599916087269236, worksheet.xi_b_ah213, 0.001); end
  def test_xi_b_k248; assert_in_epsilon(-3.1425430618995147, worksheet.xi_b_k248, 0.001); end
  def test_xi_b_ah198; assert_in_delta(0.02829057779908894, worksheet.xi_b_ah198, 0.001); end
  def test_xi_b_ah211; assert_in_delta(0.01689388287577567, worksheet.xi_b_ah211, 0.001); end
  def test_xi_b_k249; assert_in_delta(-0.05892726989931248, worksheet.xi_b_k249, 0.001); end
  def test_xi_b_ah199; assert_in_delta(0.019835371213937504, worksheet.xi_b_ah199, 0.001); end
  def test_xi_b_ah212; assert_in_delta(0.011844807146235939, worksheet.xi_b_ah212, 0.001); end
  def test_xi_b_k250; assert_in_delta(-0.04131567341528068, worksheet.xi_b_k250, 0.001); end
  def test_xi_b_ah201; assert_in_delta(0, (worksheet.xi_b_ah201||0), 0.001); end
  def test_xi_b_ah214; assert_in_delta(0, (worksheet.xi_b_ah214||0), 0.001); end
  def test_xi_b_k251; assert_in_delta(0, (worksheet.xi_b_k251||0), 0.001); end
  def test_xi_b_k244; assert_in_epsilon(3.242786005214108, worksheet.xi_b_k244, 0.001); end
  def test_xi_f_ah211; assert_in_delta(0.01812783245084668, worksheet.xi_f_ah211, 0.001); end
  def test_xi_f_ah202; assert_in_delta(0, (worksheet.xi_f_ah202||0), 0.001); end
  def test_xi_f_ah201; assert_in_delta(0.22548136838656974, worksheet.xi_f_ah201, 0.001); end
  def test_xi_f_ah213; assert_in_delta(0, (worksheet.xi_f_ah213||0), 0.001); end
  def test_xi_f_ah214; assert_in_delta(0.5229176807797222, worksheet.xi_f_ah214, 0.001); end
  def test_xi_f_k259; assert_in_epsilon(-7.2445633749999985, worksheet.xi_f_k259, 0.001); end
  def test_xi_f_k260; assert_in_epsilon(-3.0191804999999996, worksheet.xi_f_k260, 0.001); end
  def test_xi_f_k261; assert_in_delta(0, (worksheet.xi_f_k261||0), 0.001); end
  def test_xi_f_k262; assert_in_delta(0, (worksheet.xi_f_k262||0), 0.001); end
  def test_xi_f_k255; assert_in_epsilon(7.1430670963888865, worksheet.xi_f_k255, 0.001); end
  def test_output_ah13; assert_in_epsilon(82.6828551977251, worksheet.output_ah13, 0.001); end
  def test_xi_a_w306; assert_in_delta(0.005711668984301246, worksheet.xi_a_w306, 0.001); end
  def test_xi_a_w364; assert_in_delta(0.0025062716290319364, worksheet.xi_a_w364, 0.001); end
  def test_xi_a_w363; assert_in_delta(0.00046863003035473803, worksheet.xi_a_w363, 0.001); end
  def test_xi_a_w365; assert_in_delta(0.0012053086533568777, worksheet.xi_a_w365, 0.001); end
  def test_xi_a_w366; assert_in_delta(0.00043958918186048733, worksheet.xi_a_w366, 0.001); end
  def test_xi_a_w367; assert_in_delta(0, (worksheet.xi_a_w367||0), 0.001); end
  def test_xi_a_w368; assert_in_delta(-0.00031178644600566717, worksheet.xi_a_w368, 0.001); end
  def test_xi_a_w369; assert_in_delta(0.004308013048598372, worksheet.xi_a_w369, 0.001); end
  def test_xi_a_ai357; assert_in_delta(0.5817697394968108, worksheet.xi_a_ai357, 0.001); end
  def test_xi_a_ai380; assert_in_delta(0.5686799203581325, worksheet.xi_a_ai380, 0.001); end
  def test_xi_a_ai406; assert_in_delta(0.5047034293178426, worksheet.xi_a_ai406, 0.001); end
  def test_xi_a_l458; assert_in_epsilon(-8.770864403939603, worksheet.xi_a_l458, 0.001); end
  def test_xi_a_k260; assert_in_epsilon(4369.12, worksheet.xi_a_k260, 0.001); end
  def test_xi_a_k283; assert_in_epsilon(4172.509599999999, worksheet.xi_a_k283, 0.001); end
  def test_xi_a_w356; assert_in_delta(0.003998168289010872, worksheet.xi_a_w356, 0.001); end
  def test_xi_a_w432; assert_in_delta(0.003998168289010872, worksheet.xi_a_w432, 0.001); end
  def test_xi_a_ai358; assert_in_delta(0.279782962530494, worksheet.xi_a_ai358, 0.001); end
  def test_xi_a_ai360; assert_in_delta(0, (worksheet.xi_a_ai360||0), 0.001); end
  def test_xi_a_ai411; assert_in_delta(0.06397649104029013, worksheet.xi_a_ai411, 0.001); end
  def test_xi_a_ai436; assert_in_delta(0.06397649104029013, worksheet.xi_a_ai436, 0.001); end
  def test_xi_a_l459; assert_in_epsilon(-10.518774688127923, worksheet.xi_a_l459, 0.001); end
  def test_xi_a_ai356; assert_in_delta(0.10878101460421725, worksheet.xi_a_ai356, 0.001); end
  def test_xi_a_ai361; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ai361, 0.001); end
  def test_xi_a_ai382; assert_in_delta(0.1151297101282166, worksheet.xi_a_ai382, 0.001); end
  def test_xi_a_l460; assert_in_epsilon(-1.9973476578677773, worksheet.xi_a_l460, 0.001); end
  def test_xi_a_l461; assert_in_epsilon(1.207365151040435, worksheet.xi_a_l461, 0.001); end
  def test_xi_a_l454; assert_in_epsilon(18.74072159889487, worksheet.xi_a_l454, 0.001); end
  def test_xi_b_ai197; assert_in_delta(0.6781107648046033, worksheet.xi_b_ai197, 0.001); end
  def test_xi_b_ai210; assert_in_delta(0.35030318594596677, worksheet.xi_b_ai210, 0.001); end
  def test_xi_b_ai213; assert_in_delta(0.5639994405817949, worksheet.xi_b_ai213, 0.001); end
  def test_xi_b_l248; assert_in_epsilon(-2.952344084484681, worksheet.xi_b_l248, 0.001); end
  def test_xi_b_ai198; assert_in_delta(0.02829057779908894, worksheet.xi_b_ai198, 0.001); end
  def test_xi_b_ai211; assert_in_delta(0.014614543891113019, worksheet.xi_b_ai211, 0.001); end
  def test_xi_b_l249; assert_in_delta(-0.04719133572680287, worksheet.xi_b_l249, 0.001); end
  def test_xi_b_ai199; assert_in_delta(0.019835371213937504, worksheet.xi_b_ai199, 0.001); end
  def test_xi_b_ai212; assert_in_delta(0.010246694332695627, worksheet.xi_b_ai212, 0.001); end
  def test_xi_b_l250; assert_in_delta(-0.03308725855195614, worksheet.xi_b_l250, 0.001); end
  def test_xi_b_ai201; assert_in_delta(0, (worksheet.xi_b_ai201||0), 0.001); end
  def test_xi_b_ai214; assert_in_delta(0, (worksheet.xi_b_ai214||0), 0.001); end
  def test_xi_b_l251; assert_in_delta(0, (worksheet.xi_b_l251||0), 0.001); end
  def test_xi_b_l244; assert_in_epsilon(3.03262267876344, worksheet.xi_b_l244, 0.001); end
  def test_xi_f_ai211; assert_in_delta(0.017440457391372198, worksheet.xi_f_ai211, 0.001); end
  def test_xi_f_ai202; assert_in_delta(0, (worksheet.xi_f_ai202||0), 0.001); end
  def test_xi_f_ai201; assert_in_delta(0.22548136838656974, worksheet.xi_f_ai201, 0.001); end
  def test_xi_f_ai213; assert_in_delta(0, (worksheet.xi_f_ai213||0), 0.001); end
  def test_xi_f_ai214; assert_in_delta(0.5236050558391968, worksheet.xi_f_ai214, 0.001); end
  def test_xi_f_l259; assert_in_epsilon(-7.03757585, worksheet.xi_f_l259, 0.001); end
  def test_xi_f_l260; assert_in_epsilon(-2.9329181999999996, worksheet.xi_f_l260, 0.001); end
  def test_xi_f_l261; assert_in_delta(0, (worksheet.xi_f_l261||0), 0.001); end
  def test_xi_f_l262; assert_in_delta(0, (worksheet.xi_f_l262||0), 0.001); end
  def test_xi_f_l255; assert_in_epsilon(6.849817271388888, worksheet.xi_f_l255, 0.001); end
  def test_output_ai13; assert_in_epsilon(77.81713320574381, worksheet.output_ai13, 0.001); end
  def test_xi_a_x306; assert_in_delta(0.0056745802246629265, worksheet.xi_a_x306, 0.001); end
  def test_xi_a_x364; assert_in_delta(0.0024899971379343266, worksheet.xi_a_x364, 0.001); end
  def test_xi_a_x363; assert_in_delta(0.0004655869782095774, worksheet.xi_a_x363, 0.001); end
  def test_xi_a_x365; assert_in_delta(0.0011974819737896253, worksheet.xi_a_x365, 0.001); end
  def test_xi_a_x366; assert_in_delta(0.00043673470665360107, worksheet.xi_a_x366, 0.001); end
  def test_xi_a_x367; assert_in_delta(0, (worksheet.xi_a_x367||0), 0.001); end
  def test_xi_a_x368; assert_in_delta(-0.00030976185869394205, worksheet.xi_a_x368, 0.001); end
  def test_xi_a_x369; assert_in_delta(0.004280038937893189, worksheet.xi_a_x369, 0.001); end
  def test_xi_a_aj357; assert_in_delta(0.5817697394968105, worksheet.xi_a_aj357, 0.001); end
  def test_xi_a_aj380; assert_in_delta(0.5664982838350193, worksheet.xi_a_aj380, 0.001); end
  def test_xi_a_aj406; assert_in_delta(0.4921453840816731, worksheet.xi_a_aj406, 0.001); end
  def test_xi_a_m458; assert_in_epsilon(-8.438973576079048, worksheet.xi_a_m458, 0.001); end
  def test_xi_a_l260; assert_in_epsilon(4369.12, worksheet.xi_a_l260, 0.001); end
  def test_xi_a_l283; assert_in_epsilon(4139.7412, worksheet.xi_a_l283, 0.001); end
  def test_xi_a_x356; assert_in_delta(0.003972206157264048, worksheet.xi_a_x356, 0.001); end
  def test_xi_a_x432; assert_in_delta(0.003972206157264048, worksheet.xi_a_x432, 0.001); end
  def test_xi_a_aj358; assert_in_delta(0.27978296253049395, worksheet.xi_a_aj358, 0.001); end
  def test_xi_a_aj360; assert_in_delta(0, (worksheet.xi_a_aj360||0), 0.001); end
  def test_xi_a_aj411; assert_in_delta(0.07435289975334625, worksheet.xi_a_aj411, 0.001); end
  def test_xi_a_aj436; assert_in_delta(0.07435289975334625, worksheet.xi_a_aj436, 0.001); end
  def test_xi_a_m459; assert_in_epsilon(-10.539027879091329, worksheet.xi_a_m459, 0.001); end
  def test_xi_a_aj356; assert_in_delta(0.10878101460421723, worksheet.xi_a_aj356, 0.001); end
  def test_xi_a_aj361; assert_in_delta(-0.07237360762106046, worksheet.xi_a_aj361, 0.001); end
  def test_xi_a_aj382; assert_in_delta(0.11731134665133003, worksheet.xi_a_aj382, 0.001); end
  def test_xi_a_m460; assert_in_epsilon(-2.004668373287134, worksheet.xi_a_m460, 0.001); end
  def test_xi_a_m461; assert_in_epsilon(1.1901047632654806, worksheet.xi_a_m461, 0.001); end
  def test_xi_a_m454; assert_in_epsilon(18.453665065192034, worksheet.xi_a_m454, 0.001); end
  def test_xi_b_aj197; assert_in_delta(0.6781107648046033, worksheet.xi_b_aj197, 0.001); end
  def test_xi_b_aj210; assert_in_delta(0.29566858946952734, worksheet.xi_b_aj210, 0.001); end
  def test_xi_b_aj213; assert_in_delta(0.6319997202908973, worksheet.xi_b_aj213, 0.001); end
  def test_xi_b_m248; assert_in_epsilon(-2.7310361643728527, worksheet.xi_b_m248, 0.001); end
  def test_xi_b_aj198; assert_in_delta(0.02829057779908894, worksheet.xi_b_aj198, 0.001); end
  def test_xi_b_aj211; assert_in_delta(0.012335204906450365, worksheet.xi_b_aj211, 0.001); end
  def test_xi_b_m249; assert_in_delta(-0.03631458608644881, worksheet.xi_b_m249, 0.001); end
  def test_xi_b_aj199; assert_in_delta(0.019835371213937504, worksheet.xi_b_aj199, 0.001); end
  def test_xi_b_aj212; assert_in_delta(0.008648581519155313, worksheet.xi_b_aj212, 0.001); end
  def test_xi_b_m250; assert_in_delta(-0.025461243691120322, worksheet.xi_b_m250, 0.001); end
  def test_xi_b_aj201; assert_in_delta(0, (worksheet.xi_b_aj201||0), 0.001); end
  def test_xi_b_aj214; assert_in_delta(0, (worksheet.xi_b_aj214||0), 0.001); end
  def test_xi_b_m251; assert_in_delta(0, (worksheet.xi_b_m251||0), 0.001); end
  def test_xi_b_m244; assert_in_epsilon(2.7928119941504215, worksheet.xi_b_m244, 0.001); end
  def test_xi_f_aj211; assert_in_delta(0.016753082331897713, worksheet.xi_f_aj211, 0.001); end
  def test_xi_f_aj202; assert_in_delta(0, (worksheet.xi_f_aj202||0), 0.001); end
  def test_xi_f_aj201; assert_in_delta(0.22548136838656974, worksheet.xi_f_aj201, 0.001); end
  def test_xi_f_aj213; assert_in_delta(0, (worksheet.xi_f_aj213||0), 0.001); end
  def test_xi_f_aj214; assert_in_delta(0.5242924308986713, worksheet.xi_f_aj214, 0.001); end
  def test_xi_f_m259; assert_in_epsilon(-6.830588324999999, worksheet.xi_f_m259, 0.001); end
  def test_xi_f_m260; assert_in_epsilon(-2.8466558999999996, worksheet.xi_f_m260, 0.001); end
  def test_xi_f_m261; assert_in_delta(0, (worksheet.xi_f_m261||0), 0.001); end
  def test_xi_f_m262; assert_in_delta(0, (worksheet.xi_f_m262||0), 0.001); end
  def test_xi_f_m255; assert_in_epsilon(6.556567446388888, worksheet.xi_f_m255, 0.001); end
  def test_output_aj13; assert_in_epsilon(73.18757547625236, worksheet.output_aj13, 0.001); end
  def test_output_ak13; assert_in_epsilon(69.69615847481613, worksheet.output_ak13, 0.001); end
  def test_output_al13; assert_in_delta(0.2405558386470218, worksheet.output_al13, 0.001); end
  def test_output_am13; assert_in_delta(-0.014730527781111724, worksheet.output_am13, 0.001); end
  def test_output_an13; assert_in_delta(-0.44766690113802987, worksheet.output_an13, 0.001); end
  def test_output_ao13; assert_in_delta(-0.4884924577009635, worksheet.output_ao13, 0.001); end
  def test_output_ap13; assert_in_delta(0.18652391013340275, worksheet.output_ap13, 0.001); end
  def test_output_c14; assert_equal("I.02", worksheet.output_c14); end
  def test_output_e14; assert_equal("Industry Power", worksheet.output_e14); end
  def test_output_f14; assert_equal("TWh/yr", worksheet.output_f14); end
  def test_output_g14; assert_equal("SPF Economie (total-NIR heating)", worksheet.output_g14); end
  def test_output_ab14; assert_in_epsilon(14.801634223599237, worksheet.output_ab14, 0.001); end
  def test_output_ac14; assert_in_epsilon(31.888155106837974, worksheet.output_ac14, 0.001); end
  def test_xi_a_g455; assert_in_epsilon(5.47673634873057, worksheet.xi_a_g455, 0.001); end
  def test_xi_b_ad196; assert_in_delta(0.11776552385519061, worksheet.xi_b_ad196, 0.001); end
  def test_xi_b_ad209; assert_in_delta(0.10827729242073049, worksheet.xi_b_ad209, 0.001); end
  def test_xi_b_g245; assert_in_delta(0.5466097997490187, worksheet.xi_b_g245, 0.001); end
  def test_xi_f_g256; assert_in_epsilon(3.4834682999999997, worksheet.xi_f_g256, 0.001); end
  def test_xi_f_g258; assert_in_epsilon(-2.537301633333333, worksheet.xi_f_g258, 0.001); end
  def test_output_ad14; assert_in_epsilon(31.18549297908029, worksheet.output_ad14, 0.001); end
  def test_xi_a_h455; assert_in_epsilon(5.401165837827343, worksheet.xi_a_h455, 0.001); end
  def test_xi_b_ae196; assert_in_delta(0.11776552385519061, worksheet.xi_b_ae196, 0.001); end
  def test_xi_b_ae209; assert_in_delta(0.09878906098627036, worksheet.xi_b_ae209, 0.001); end
  def test_xi_b_h245; assert_in_delta(0.4422097105477589, worksheet.xi_b_h245, 0.001); end
  def test_xi_f_h256; assert_in_epsilon(3.3941486000000003, worksheet.xi_f_h256, 0.001); end
  def test_xi_f_h258; assert_in_epsilon(-2.4479819333333337, worksheet.xi_f_h258, 0.001); end
  def test_output_ae14; assert_in_epsilon(29.955236970207594, worksheet.output_ae14, 0.001); end
  def test_xi_a_i455; assert_in_epsilon(5.326115904496355, worksheet.xi_a_i455, 0.001); end
  def test_xi_b_af196; assert_in_delta(0.11776552385519061, worksheet.xi_b_af196, 0.001); end
  def test_xi_b_af209; assert_in_delta(0.08930082955181022, worksheet.xi_b_af209, 0.001); end
  def test_xi_b_i245; assert_in_delta(0.3613488098936196, worksheet.xi_b_i245, 0.001); end
  def test_xi_f_i256; assert_in_epsilon(3.3048289, worksheet.xi_f_i256, 0.001); end
  def test_xi_f_i258; assert_in_epsilon(-2.3586622333333334, worksheet.xi_f_i258, 0.001); end
  def test_output_af14; assert_in_epsilon(28.838365948173692, worksheet.output_af14, 0.001); end
  def test_xi_a_j455; assert_in_epsilon(5.106887110438693, worksheet.xi_a_j455, 0.001); end
  def test_xi_b_ag196; assert_in_delta(0.11776552385519061, worksheet.xi_b_ag196, 0.001); end
  def test_xi_b_ag209; assert_in_delta(0.07981259811735007, worksheet.xi_b_ag209, 0.001); end
  def test_xi_b_j245; assert_in_delta(0.29704289293574804, worksheet.xi_b_j245, 0.001); end
  def test_xi_f_j256; assert_in_epsilon(3.2155092, worksheet.xi_f_j256, 0.001); end
  def test_xi_f_j258; assert_in_epsilon(-2.2693425333333335, worksheet.xi_f_j258, 0.001); end
  def test_output_ag14; assert_in_epsilon(27.485553101377796, worksheet.output_ag14, 0.001); end
  def test_xi_a_k455; assert_in_epsilon(5.034917530984488, worksheet.xi_a_k455, 0.001); end
  def test_xi_b_ah196; assert_in_delta(0.11776552385519061, worksheet.xi_b_ah196, 0.001); end
  def test_xi_b_ah209; assert_in_delta(0.07032436668288994, worksheet.xi_b_ah209, 0.001); end
  def test_xi_b_k245; assert_in_delta(0.24529724554696866, worksheet.xi_b_k245, 0.001); end
  def test_xi_f_k256; assert_in_epsilon(3.1261894999999997, worksheet.xi_f_k256, 0.001); end
  def test_xi_f_k258; assert_in_epsilon(-2.180022833333333, worksheet.xi_f_k258, 0.001); end
  def test_output_ah14; assert_in_epsilon(26.50404961761377, worksheet.output_ah14, 0.001); end
  def test_xi_a_l455; assert_in_epsilon(4.9634541853834175, worksheet.xi_a_l455, 0.001); end
  def test_xi_b_ai196; assert_in_delta(0.11776552385519061, worksheet.xi_b_ai196, 0.001); end
  def test_xi_b_ai209; assert_in_delta(0.06083613524842981, worksheet.xi_b_ai209, 0.001); end
  def test_xi_b_l245; assert_in_delta(0.1964439331271659, worksheet.xi_b_l245, 0.001); end
  def test_xi_f_l256; assert_in_epsilon(3.0368698, worksheet.xi_f_l256, 0.001); end
  def test_xi_f_l258; assert_in_epsilon(-2.0907031333333332, worksheet.xi_f_l258, 0.001); end
  def test_output_ai14; assert_in_epsilon(25.56807747185382, worksheet.output_ai14, 0.001); end
  def test_xi_a_m455; assert_in_epsilon(4.892497073635483, worksheet.xi_a_m455, 0.001); end
  def test_xi_b_aj196; assert_in_delta(0.11776552385519061, worksheet.xi_b_aj196, 0.001); end
  def test_xi_b_aj209; assert_in_delta(0.05134790381396968, worksheet.xi_b_aj209, 0.001); end
  def test_xi_b_m245; assert_in_delta(0.15116715835308187, worksheet.xi_b_m245, 0.001); end
  def test_xi_f_m256; assert_in_epsilon(2.9475501, worksheet.xi_f_m256, 0.001); end
  def test_xi_f_m258; assert_in_epsilon(-2.0013834333333334, worksheet.xi_f_m258, 0.001); end
  def test_output_aj14; assert_in_epsilon(24.665135839226657, worksheet.output_aj14, 0.001); end
  def test_output_ak14; assert_in_epsilon(23.910250512422547, worksheet.output_ak14, 0.001); end
  def test_output_al14; assert_in_delta(0.08252607446584756, worksheet.output_al14, 0.001); end
  def test_output_am14; assert_in_delta(-0.007172339342425782, worksheet.output_am14, 0.001); end
  def test_output_an14; assert_in_delta(-0.25018394973576497, worksheet.output_an14, 0.001); end
  def test_output_ao14; assert_equal("", worksheet.output_ao14); end
  def test_output_c15; assert_equal("I.03", worksheet.output_c15); end
  def test_output_e15; assert_equal("Industry CHP", worksheet.output_e15); end
  def test_output_f15; assert_equal("TWh/yr", worksheet.output_f15); end
  def test_output_ac15; assert_in_epsilon(2.646275003128475, worksheet.output_ac15, 0.001); end
  def test_output_ad15; assert_in_epsilon(3.960490082483527, worksheet.output_ad15, 0.001); end
  def test_output_ae15; assert_in_epsilon(3.7703192325249524, worksheet.output_ae15, 0.001); end
  def test_output_af15; assert_in_epsilon(3.593103352090274, worksheet.output_af15, 0.001); end
  def test_output_ag15; assert_in_epsilon(3.4178957887901107, worksheet.output_ag15, 0.001); end
  def test_output_ah15; assert_in_epsilon(3.2713699384815356, worksheet.output_ah15, 0.001); end
  def test_output_ai15; assert_in_epsilon(3.152753743537971, worksheet.output_ai15, 0.001); end
  def test_output_aj15; assert_in_epsilon(3.0482758578582843, worksheet.output_aj15, 0.001); end
  def test_output_ak15; assert_in_epsilon(2.9559396982462003, worksheet.output_ak15, 0.001); end
  def test_output_al15; assert_in_delta(0.010202406684416836, worksheet.output_al15, 0.001); end
  def test_output_am15; assert_in_delta(0.0027704208216059456, worksheet.output_am15, 0.001); end
  def test_output_an15; assert_in_delta(0.11701909089253149, worksheet.output_an15, 0.001); end
  def test_output_ao15; assert_equal("", worksheet.output_ao15); end
  def test_output_e16; assert_equal("Industry", worksheet.output_e16); end
  def test_output_f16; assert_equal("TWh/yr", worksheet.output_f16); end
  def test_output_h16; assert_in_epsilon(136.2563651780339, worksheet.output_h16, 0.001); end
  def test_output_i16; assert_in_delta(0, (worksheet.output_i16||0), 0.001); end
  def test_output_j16; assert_in_delta(0, (worksheet.output_j16||0), 0.001); end
  def test_output_k16; assert_in_delta(0, (worksheet.output_k16||0), 0.001); end
  def test_output_l16; assert_in_delta(0, (worksheet.output_l16||0), 0.001); end
  def test_output_m16; assert_in_epsilon(142.34083184257193, worksheet.output_m16, 0.001); end
  def test_output_n16; assert_in_delta(0, (worksheet.output_n16||0), 0.001); end
  def test_output_o16; assert_in_delta(0, (worksheet.output_o16||0), 0.001); end
  def test_output_p16; assert_in_delta(0, (worksheet.output_p16||0), 0.001); end
  def test_output_q16; assert_in_delta(0, (worksheet.output_q16||0), 0.001); end
  def test_output_r16; assert_in_epsilon(148.2033928890706, worksheet.output_r16, 0.001); end
  def test_output_s16; assert_in_delta(0, (worksheet.output_s16||0), 0.001); end
  def test_output_t16; assert_in_delta(0, (worksheet.output_t16||0), 0.001); end
  def test_output_u16; assert_in_delta(0, (worksheet.output_u16||0), 0.001); end
  def test_output_v16; assert_in_delta(0, (worksheet.output_v16||0), 0.001); end
  def test_output_w16; assert_in_epsilon(138.14067775039763, worksheet.output_w16, 0.001); end
  def test_output_x16; assert_in_delta(0, (worksheet.output_x16||0), 0.001); end
  def test_output_y16; assert_in_delta(0, (worksheet.output_y16||0), 0.001); end
  def test_output_z16; assert_in_delta(0, (worksheet.output_z16||0), 0.001); end
  def test_output_aa16; assert_in_delta(0, (worksheet.output_aa16||0), 0.001); end
  def test_output_ab16; assert_in_epsilon(133.745, worksheet.output_ab16, 0.001); end
  def test_output_ad16; assert_in_epsilon(151.7891201025047, worksheet.output_ad16, 0.001); end
  def test_output_ae16; assert_in_epsilon(143.5321059930633, worksheet.output_ae16, 0.001); end
  def test_output_af16; assert_in_epsilon(136.0765263881788, worksheet.output_af16, 0.001); end
  def test_output_ag16; assert_in_epsilon(118.88008058183573, worksheet.output_ag16, 0.001); end
  def test_output_ah16; assert_in_epsilon(112.45827475382042, worksheet.output_ah16, 0.001); end
  def test_output_ai16; assert_in_epsilon(106.5379644211356, worksheet.output_ai16, 0.001); end
  def test_output_aj16; assert_in_epsilon(100.9009871733373, worksheet.output_aj16, 0.001); end
  def test_output_al16; assert_in_delta(0.3332843197972862, worksheet.output_al16, 0.001); end
  def test_output_am16; assert_in_delta(-0.012656014114433956, worksheet.output_am16, 0.001); end
  def test_output_an16; assert_in_delta(-0.39918688323375084, worksheet.output_an16, 0.001); end
  def test_output_ao16; assert_in_delta(-0.2913186216341851, worksheet.output_ao16, 0.001); end
  def test_output_ar16; assert_equal("1.A.2 Manufacturing Industries and Construction", worksheet.output_ar16); end
  def test_output_as16; assert_in_epsilon(510763.928765043, worksheet.output_as16, 0.001); end
  def test_output_at16; assert_in_epsilon(141.87888045171036, worksheet.output_at16, 0.001); end
  def test_output_c17; assert_equal("H.01", worksheet.output_c17); end
  def test_output_e17; assert_equal("Heating and cooling", worksheet.output_e17); end
  def test_output_f17; assert_equal("TWh/yr", worksheet.output_f17); end
  def test_output_g17; assert_equal("NIR", worksheet.output_g17); end
  def test_output_h17; assert_in_epsilon(103.21850568882088, worksheet.output_h17, 0.001); end
  def test_output_m17; assert_in_epsilon(119.02138653274301, worksheet.output_m17, 0.001); end
  def test_output_r17; assert_in_epsilon(116.90815490107154, worksheet.output_r17, 0.001); end
  def test_output_w17; assert_in_epsilon(123.52897166486473, worksheet.output_w17, 0.001); end
  def test_output_ab17; assert_in_epsilon(133.21174249276112, worksheet.output_ab17, 0.001); end
  def test_output_ac17; assert_in_epsilon(101.97077783246047, worksheet.output_ac17, 0.001); end
  def test_output_ad17; assert_in_epsilon(102.81019115795216, worksheet.output_ad17, 0.001); end
  def test_output_ae17; assert_in_epsilon(100.94170105724145, worksheet.output_ae17, 0.001); end
  def test_output_af17; assert_in_epsilon(99.12170395621305, worksheet.output_af17, 0.001); end
  def test_output_ag17; assert_in_epsilon(95.74596925321691, worksheet.output_ag17, 0.001); end
  def test_output_ah17; assert_in_epsilon(92.95230311256854, worksheet.output_ah17, 0.001); end
  def test_output_ai17; assert_in_epsilon(90.86814746078998, worksheet.output_ai17, 0.001); end
  def test_output_aj17; assert_in_epsilon(89.35595386832641, worksheet.output_aj17, 0.001); end
  def test_output_ak17; assert_in_epsilon(88.34167114006735, worksheet.output_ak17, 0.001); end
  def test_output_al17; assert_in_delta(0.30491070460156183, worksheet.output_al17, 0.001); end
  def test_output_am17; assert_in_delta(-0.003580433837528263, worksheet.output_am17, 0.001); end
  def test_output_an17; assert_in_delta(-0.1336569846979686, worksheet.output_an17, 0.001); end
  def test_output_ao17; assert_in_delta(-0.14412952841618953, worksheet.output_ao17, 0.001); end
  def test_output_c18; assert_equal("L.01", worksheet.output_c18); end
  def test_output_e18; assert_equal("Lighting & appliances", worksheet.output_e18); end
  def test_output_f18; assert_equal("TWh/yr", worksheet.output_f18); end
  def test_output_g18; assert_equal("SPF Economie (total-NIR heating)", worksheet.output_g18); end
  def test_output_ab18; assert_in_epsilon(41.2382575072389, worksheet.output_ab18, 0.001); end
  def test_output_ac18; assert_in_epsilon(34.73695908729563, worksheet.output_ac18, 0.001); end
  def test_output_ad18; assert_in_epsilon(36.78927025846661, worksheet.output_ad18, 0.001); end
  def test_output_ae18; assert_in_epsilon(38.675154133307856, worksheet.output_ae18, 0.001); end
  def test_output_af18; assert_in_epsilon(39.71531440271639, worksheet.output_af18, 0.001); end
  def test_output_ag18; assert_in_epsilon(40.52913192846547, worksheet.output_ag18, 0.001); end
  def test_output_ah18; assert_in_epsilon(41.17202503611216, worksheet.output_ah18, 0.001); end
  def test_output_ai18; assert_in_epsilon(41.80726342150264, worksheet.output_ai18, 0.001); end
  def test_output_aj18; assert_in_epsilon(42.371639229034066, worksheet.output_aj18, 0.001); end
  def test_output_ak18; assert_in_epsilon(42.876848701350106, worksheet.output_ak18, 0.001); end
  def test_output_al18; assert_in_delta(0.14798916502150805, worksheet.output_al18, 0.001); end
  def test_output_am18; assert_in_delta(0.005277069928286915, worksheet.output_am18, 0.001); end
  def test_output_an18; assert_in_delta(0.2343293664134085, worksheet.output_an18, 0.001); end
  def test_output_ao18; assert_equal("", worksheet.output_ao18); end
  def test_output_e19; assert_equal("Buildings", worksheet.output_e19); end
  def test_output_f19; assert_equal("TWh/yr", worksheet.output_f19); end
  def test_output_h19; assert_in_epsilon(103.21850568882088, worksheet.output_h19, 0.001); end
  def test_output_i19; assert_in_delta(0, (worksheet.output_i19||0), 0.001); end
  def test_output_j19; assert_in_delta(0, (worksheet.output_j19||0), 0.001); end
  def test_output_k19; assert_in_delta(0, (worksheet.output_k19||0), 0.001); end
  def test_output_l19; assert_in_delta(0, (worksheet.output_l19||0), 0.001); end
  def test_output_m19; assert_in_epsilon(119.02138653274301, worksheet.output_m19, 0.001); end
  def test_output_n19; assert_in_delta(0, (worksheet.output_n19||0), 0.001); end
  def test_output_o19; assert_in_delta(0, (worksheet.output_o19||0), 0.001); end
  def test_output_p19; assert_in_delta(0, (worksheet.output_p19||0), 0.001); end
  def test_output_q19; assert_in_delta(0, (worksheet.output_q19||0), 0.001); end
  def test_output_r19; assert_in_epsilon(116.90815490107154, worksheet.output_r19, 0.001); end
  def test_output_s19; assert_in_delta(0, (worksheet.output_s19||0), 0.001); end
  def test_output_t19; assert_in_delta(0, (worksheet.output_t19||0), 0.001); end
  def test_output_u19; assert_in_delta(0, (worksheet.output_u19||0), 0.001); end
  def test_output_v19; assert_in_delta(0, (worksheet.output_v19||0), 0.001); end
  def test_output_w19; assert_in_epsilon(123.52897166486473, worksheet.output_w19, 0.001); end
  def test_output_x19; assert_in_delta(0, (worksheet.output_x19||0), 0.001); end
  def test_output_y19; assert_in_delta(0, (worksheet.output_y19||0), 0.001); end
  def test_output_z19; assert_in_delta(0, (worksheet.output_z19||0), 0.001); end
  def test_output_aa19; assert_in_delta(0, (worksheet.output_aa19||0), 0.001); end
  def test_output_ab19; assert_in_epsilon(174.45000000000002, worksheet.output_ab19, 0.001); end
  def test_output_ad19; assert_in_epsilon(139.59946141641876, worksheet.output_ad19, 0.001); end
  def test_output_ae19; assert_in_epsilon(139.6168551905493, worksheet.output_ae19, 0.001); end
  def test_output_af19; assert_in_epsilon(138.83701835892944, worksheet.output_af19, 0.001); end
  def test_output_ag19; assert_in_epsilon(136.27510118168237, worksheet.output_ag19, 0.001); end
  def test_output_ah19; assert_in_epsilon(134.12432814868072, worksheet.output_ah19, 0.001); end
  def test_output_ai19; assert_in_epsilon(132.67541088229262, worksheet.output_ai19, 0.001); end
  def test_output_aj19; assert_in_epsilon(131.72759309736048, worksheet.output_aj19, 0.001); end
  def test_output_al19; assert_in_delta(0.4528998696230699, worksheet.output_al19, 0.001); end
  def test_output_am19; assert_in_delta(-0.0010240082467533052, worksheet.output_am19, 0.001); end
  def test_output_an19; assert_in_delta(-0.040152936490790325, worksheet.output_an19, 0.001); end
  def test_output_ao19; assert_in_delta(0.27126932293526806, worksheet.output_ao19, 0.001); end
  def test_output_ar19; assert_equal("b.  Residential + Commercial", worksheet.output_ar19); end
  def test_output_as19; assert_in_epsilon(479562.270132713, worksheet.output_as19, 0.001); end
  def test_output_at19; assert_in_epsilon(133.21175236047074, worksheet.output_at19, 0.001); end
  def test_output_c20; assert_equal("F.01", worksheet.output_c20); end
  def test_output_e20; assert_equal("Food consumption [UNUSED]", worksheet.output_e20); end
  def test_output_f20; assert_equal("TWh/yr", worksheet.output_f20); end
  def test_output_g20; assert_equal("NIR : actually agriculture consumption, which is split in the model btw transport and heating", worksheet.output_g20); end
  def test_output_h20; assert_in_epsilon(11.405010130573304, worksheet.output_h20, 0.001); end
  def test_output_m20; assert_in_epsilon(11.129600734792305, worksheet.output_m20, 0.001); end
  def test_output_r20; assert_in_epsilon(9.125679593118583, worksheet.output_r20, 0.001); end
  def test_output_w20; assert_in_epsilon(9.935619273628443, worksheet.output_w20, 0.001); end
  def test_output_ab20; assert_in_epsilon(10.030134709179222, worksheet.output_ab20, 0.001); end
  def test_output_ac20; assert_in_delta(0, (worksheet.output_ac20||0), 0.001); end
  def test_output_ad20; assert_in_delta(0, (worksheet.output_ad20||0), 0.001); end
  def test_output_ae20; assert_in_delta(0, (worksheet.output_ae20||0), 0.001); end
  def test_output_af20; assert_in_delta(0, (worksheet.output_af20||0), 0.001); end
  def test_output_ag20; assert_in_delta(0, (worksheet.output_ag20||0), 0.001); end
  def test_output_ah20; assert_in_delta(0, (worksheet.output_ah20||0), 0.001); end
  def test_output_ai20; assert_in_delta(0, (worksheet.output_ai20||0), 0.001); end
  def test_output_aj20; assert_in_delta(0, (worksheet.output_aj20||0), 0.001); end
  def test_output_ak20; assert_in_delta(0, (worksheet.output_ak20||0), 0.001); end
  def test_output_al20; assert_in_delta(0, (worksheet.output_al20||0), 0.001); end
  def test_output_am20; assert_equal("", worksheet.output_am20); end
  def test_output_an20; assert_equal("", worksheet.output_an20); end
  def test_output_ao20; assert_in_delta(-1, worksheet.output_ao20, 0.001); end
  def test_output_ar20; assert_equal("c.  Agriculture/Forestry/Fisheries", worksheet.output_ar20); end
  def test_output_as20; assert_in_epsilon(36904.444907751, worksheet.output_as20, 0.001); end
  def test_output_at20; assert_in_epsilon(10.251235516696276, worksheet.output_at20, 0.001); end
  def test_output_b21; assert_equal("REF", worksheet.output_b21); end
  def test_output_e21; assert_equal("Total final energy demand", worksheet.output_e21); end
  def test_output_f21; assert_equal("TWh/yr", worksheet.output_f21); end
  def test_output_h21; assert_in_epsilon(328.53220102671514, worksheet.output_h21, 0.001); end
  def test_output_i21; assert_in_delta(0, (worksheet.output_i21||0), 0.001); end
  def test_output_j21; assert_in_delta(0, (worksheet.output_j21||0), 0.001); end
  def test_output_k21; assert_in_delta(0, (worksheet.output_k21||0), 0.001); end
  def test_output_l21; assert_in_delta(0, (worksheet.output_l21||0), 0.001); end
  def test_output_m21; assert_in_epsilon(357.54571127408553, worksheet.output_m21, 0.001); end
  def test_output_n21; assert_in_delta(0, (worksheet.output_n21||0), 0.001); end
  def test_output_o21; assert_in_delta(0, (worksheet.output_o21||0), 0.001); end
  def test_output_p21; assert_in_delta(0, (worksheet.output_p21||0), 0.001); end
  def test_output_q21; assert_in_delta(0, (worksheet.output_q21||0), 0.001); end
  def test_output_r21; assert_in_epsilon(367.0655176775354, worksheet.output_r21, 0.001); end
  def test_output_s21; assert_in_delta(0, (worksheet.output_s21||0), 0.001); end
  def test_output_t21; assert_in_delta(0, (worksheet.output_t21||0), 0.001); end
  def test_output_u21; assert_in_delta(0, (worksheet.output_u21||0), 0.001); end
  def test_output_v21; assert_in_delta(0, (worksheet.output_v21||0), 0.001); end
  def test_output_w21; assert_in_epsilon(370.1068359312469, worksheet.output_w21, 0.001); end
  def test_output_x21; assert_in_delta(0, (worksheet.output_x21||0), 0.001); end
  def test_output_y21; assert_in_delta(0, (worksheet.output_y21||0), 0.001); end
  def test_output_z21; assert_in_delta(0, (worksheet.output_z21||0), 0.001); end
  def test_output_aa21; assert_in_delta(0, (worksheet.output_aa21||0), 0.001); end
  def test_output_ab21; assert_in_epsilon(413.9004334174038, worksheet.output_ab21, 0.001); end
  def test_output_al21; assert_in_delta(1, worksheet.output_al21, 0.001); end
  def test_output_am21; assert_in_delta(-0.009223708588297908, worksheet.output_am21, 0.001); end
  def test_output_an21; assert_in_delta(-0.30972169037764086, worksheet.output_an21, 0.001); end
  def test_output_ao21; assert_in_delta(-0.11810882715711302, worksheet.output_ao21, 0.001); end
  def test_output_ap21; assert_in_delta(-0.4269617316336919, worksheet.output_ap21, 0.001); end
  def test_output_b22; assert_equal("REF", worksheet.output_b22); end
  def test_output_e22; assert_equal("Reference scenario", worksheet.output_e22); end
  def test_output_f22; assert_equal("TWh/yr", worksheet.output_f22); end
  def test_output_ac22; assert_in_epsilon(436.3553827735202, worksheet.output_ac22, 0.001); end
  def test_output_ad22; assert_in_epsilon(441.11346504785604, worksheet.output_ad22, 0.001); end
  def test_output_ae22; assert_in_epsilon(453.1876875559278, worksheet.output_ae22, 0.001); end
  def test_output_af22; assert_in_epsilon(462.1026484626134, worksheet.output_af22, 0.001); end
  def test_output_ag22; assert_in_epsilon(470.9078230554442, worksheet.output_ag22, 0.001); end
  def test_output_ah22; assert_in_epsilon(477.7594469802544, worksheet.output_ah22, 0.001); end
  def test_output_ai22; assert_in_epsilon(486.46251709184156, worksheet.output_ai22, 0.001); end
  def test_output_aj22; assert_in_epsilon(494.8598002846595, worksheet.output_aj22, 0.001); end
  def test_output_ak22; assert_in_epsilon(505.602616917896, worksheet.output_ak22, 0.001); end
  def test_output_al22; assert_in_epsilon(1.7450841509257835, worksheet.output_al22, 0.001); end
  def test_output_am22; assert_in_delta(0.0036891384123074467, worksheet.output_am22, 0.001); end
  def test_output_an22; assert_in_delta(0.1586945798725643, worksheet.output_an22, 0.001); end
  def test_output_ao22; assert_equal("", worksheet.output_ao22); end
  def test_output_am23; assert_equal("", worksheet.output_am23); end
  def test_output_an23; assert_equal("", worksheet.output_an23); end
  def test_output_ao23; assert_equal("", worksheet.output_ao23); end
  def test_output_e24; assert_equal("Conversion and distribution losses", worksheet.output_e24); end
  def test_output_f24; assert_equal("TWh/yr", worksheet.output_f24); end
  def test_output_ad24; assert_in_epsilon(120.22249648661932, worksheet.output_ad24, 0.001); end
  def test_output_ae24; assert_in_epsilon(112.90792920165484, worksheet.output_ae24, 0.001); end
  def test_output_af24; assert_in_epsilon(48.18759025791644, worksheet.output_af24, 0.001); end
  def test_output_ag24; assert_in_epsilon(44.99661043966387, worksheet.output_ag24, 0.001); end
  def test_output_ah24; assert_in_epsilon(41.84800939767183, worksheet.output_ah24, 0.001); end
  def test_output_ai24; assert_in_epsilon(39.62138204383757, worksheet.output_ai24, 0.001); end
  def test_output_aj24; assert_in_epsilon(35.020614067730605, worksheet.output_aj24, 0.001); end
  def test_output_ak24; assert_in_epsilon(28.851718754370154, worksheet.output_ak24, 0.001); end
  def test_output_al24; assert_in_delta(0.09958152003274853, worksheet.output_al24, 0.001); end
  def test_output_am24; assert_in_delta(-0.03894032017684779, worksheet.output_am24, 0.001); end
  def test_output_an24; assert_in_delta(-0.7958194864128793, worksheet.output_an24, 0.001); end
  def test_output_ao24; assert_equal("", worksheet.output_ao24); end
  def test_output_ac24; assert_in_epsilon(141.3049573022039, worksheet.output_ac24, 0.001); end
  def test_output_ac12; assert_in_epsilon(122.30156564125203, worksheet.output_ac12, 0.001); end
  def test_output_ac16; assert_in_epsilon(160.71944168797697, worksheet.output_ac16, 0.001); end
  def test_output_ac19; assert_in_epsilon(136.7077369197561, worksheet.output_ac19, 0.001); end
  def test_output_ac21; assert_in_epsilon(419.7287442489851, worksheet.output_ac21, 0.001); end
  def test_output_ac25; assert_in_delta(0.3366578039706071, worksheet.output_ac25, 0.001); end
  def test_output_ae21; assert_in_epsilon(391.29348706135636, worksheet.output_ae21, 0.001); end
  def test_output_ae25; assert_in_delta(0.28855049453953835, worksheet.output_ae25, 0.001); end
  def test_output_am25; assert_in_delta(-0.029993260684718526, worksheet.output_am25, 0.001); end
  def test_output_an25; assert_in_delta(-0.7042055200911286, worksheet.output_an25, 0.001); end
  def test_output_ak25; assert_in_delta(0.09958152003274853, worksheet.output_ak25, 0.001); end
  def test_output_ao25; assert_equal("", worksheet.output_ao25); end
  def test_output_b26; assert_equal("Energy sources", worksheet.output_b26); end
  def test_output_am26; assert_equal("", worksheet.output_am26); end
  def test_output_an26; assert_equal("", worksheet.output_an26); end
  def test_output_ao26; assert_equal("", worksheet.output_ao26); end
  def test_output_c27; assert_equal("N.01", worksheet.output_c27); end
  def test_output_e27; assert_equal("Nuclear fission", worksheet.output_e27); end
  def test_output_f27; assert_equal("TWh/yr", worksheet.output_f27); end
  def test_output_g27; assert_equal("SPF Economie (Chiffres clés 2010)", worksheet.output_g27); end
  def test_output_h27; assert_in_delta(0, (worksheet.output_h27||0), 0.001); end
  def test_output_m27; assert_in_delta(0, (worksheet.output_m27||0), 0.001); end
  def test_output_r27; assert_in_delta(0, (worksheet.output_r27||0), 0.001); end
  def test_output_w27; assert_in_delta(0, (worksheet.output_w27||0), 0.001); end
  def test_output_ab27; assert_in_epsilon(145.4, worksheet.output_ab27, 0.001); end
  def test_output_ak27; assert_in_delta(0, (worksheet.output_ak27||0), 0.001); end
  def test_output_ak28; assert_in_epsilon(21.07499167480757, worksheet.output_ak28, 0.001); end
  def test_output_ak29; assert_in_epsilon(40.62194055369114, worksheet.output_ak29, 0.001); end
  def test_output_ak30; assert_in_delta(0, (worksheet.output_ak30||0), 0.001); end
  def test_output_ak31; assert_in_delta(0, (worksheet.output_ak31||0), 0.001); end
  def test_output_ak32; assert_in_epsilon(24.3546698630137, worksheet.output_ak32, 0.001); end
  def test_output_ak33; assert_in_delta(0.45955755, worksheet.output_ak33, 0.001); end
  def test_output_ak34; assert_in_epsilon(2.05044607554145, worksheet.output_ak34, 0.001); end
  def test_output_ak35; assert_in_epsilon(88.56160571705385, worksheet.output_ak35, 0.001); end
  def test_output_ak36; assert_in_epsilon(30.596580886885967, worksheet.output_ak36, 0.001); end
  def test_output_ak40; assert_in_epsilon(56.83889240794596, worksheet.output_ak40, 0.001); end
  def test_output_ak37; assert_in_epsilon(36.379999999999995, worksheet.output_ak37, 0.001); end
  def test_output_ak38; assert_in_delta(0.6, worksheet.output_ak38, 0.001); end
  def test_output_ak39; assert_in_epsilon(36.98, worksheet.output_ak39, 0.001); end
  def test_output_ak41; assert_in_epsilon(93.81889240794595, worksheet.output_ak41, 0.001); end
  def test_output_ak42; assert_in_delta(0, (worksheet.output_ak42||0), 0.001); end
  def test_output_ak44; assert_in_delta(0, (worksheet.output_ak44||0), 0.001); end
  def test_output_ak46; assert_in_epsilon(40.863121678127655, worksheet.output_ak46, 0.001); end
  def test_output_ak48; assert_in_epsilon(40.863121678127655, worksheet.output_ak48, 0.001); end
  def test_output_ak49; assert_in_epsilon(64.74116614446164, worksheet.output_ak49, 0.001); end
  def test_output_ak51; assert_in_epsilon(64.74116614446164, worksheet.output_ak51, 0.001); end
  def test_output_ak52; assert_in_epsilon(318.5813668344751, worksheet.output_ak52, 0.001); end
  def test_output_al27; assert_in_delta(0, (worksheet.output_al27||0), 0.001); end
  def test_output_am27; assert_in_delta(-1, worksheet.output_am27, 0.001); end
  def test_output_an27; assert_in_delta(-1, worksheet.output_an27, 0.001); end
  def test_output_ao27; assert_equal("", worksheet.output_ao27); end
  def test_output_c28; assert_equal("R.01", worksheet.output_c28); end
  def test_output_e28; assert_equal("Solar", worksheet.output_e28); end
  def test_output_f28; assert_equal("TWh/yr", worksheet.output_f28); end
  def test_output_h28; assert_in_delta(0, (worksheet.output_h28||0), 0.001); end
  def test_output_m28; assert_in_delta(0, (worksheet.output_m28||0), 0.001); end
  def test_output_r28; assert_in_delta(0, (worksheet.output_r28||0), 0.001); end
  def test_output_w28; assert_in_delta(0, (worksheet.output_w28||0), 0.001); end
  def test_output_ab28; assert_in_delta(0, (worksheet.output_ab28||0), 0.001); end
  def test_output_ad28; assert_in_epsilon(2.359420331854284, worksheet.output_ad28, 0.001); end
  def test_output_ae28; assert_in_epsilon(4.011355799457693, worksheet.output_ae28, 0.001); end
  def test_output_af28; assert_in_epsilon(5.9726399315972785, worksheet.output_af28, 0.001); end
  def test_output_ag28; assert_in_epsilon(8.343004981880283, worksheet.output_ag28, 0.001); end
  def test_output_ah28; assert_in_epsilon(10.343044529765749, worksheet.output_ah28, 0.001); end
  def test_output_ai28; assert_in_epsilon(13.289476859646406, worksheet.output_ai28, 0.001); end
  def test_output_aj28; assert_in_epsilon(17.17795255172423, worksheet.output_aj28, 0.001); end
  def test_output_al28; assert_in_delta(0.06615261866761177, worksheet.output_al28, 0.001); end
  def test_output_am28; assert_in_delta(0.09298565505952494, worksheet.output_am28, 0.001); end
  def test_output_an28; assert_in_epsilon(34.04116066014808, worksheet.output_an28, 0.001); end
  def test_output_ao28; assert_equal("", worksheet.output_ao28); end
  def test_output_c29; assert_equal("R.02", worksheet.output_c29); end
  def test_output_e29; assert_equal("Wind", worksheet.output_e29); end
  def test_output_f29; assert_equal("TWh/yr", worksheet.output_f29); end
  def test_output_h29; assert_in_delta(0, (worksheet.output_h29||0), 0.001); end
  def test_output_m29; assert_in_delta(0, (worksheet.output_m29||0), 0.001); end
  def test_output_r29; assert_in_delta(0, (worksheet.output_r29||0), 0.001); end
  def test_output_w29; assert_in_delta(0, (worksheet.output_w29||0), 0.001); end
  def test_output_ab29; assert_in_delta(0, (worksheet.output_ab29||0), 0.001); end
  def test_output_ad29; assert_in_epsilon(6.858328720724032, worksheet.output_ad29, 0.001); end
  def test_output_ae29; assert_in_epsilon(12.125843308576773, worksheet.output_ae29, 0.001); end
  def test_output_af29; assert_in_epsilon(18.163915732646537, worksheet.output_af29, 0.001); end
  def test_output_ag29; assert_in_epsilon(25.23739047310731, worksheet.output_ag29, 0.001); end
  def test_output_ah29; assert_in_epsilon(31.68532319218355, worksheet.output_ah29, 0.001); end
  def test_output_ai29; assert_in_epsilon(34.177931751392954, worksheet.output_ai29, 0.001); end
  def test_output_aj29; assert_in_epsilon(37.23043543720176, worksheet.output_aj29, 0.001); end
  def test_output_al29; assert_in_delta(0.12750884007223506, worksheet.output_al29, 0.001); end
  def test_output_am29; assert_in_delta(0.07921874769363213, worksheet.output_am29, 0.001); end
  def test_output_an29; assert_in_epsilon(20.104702947760497, worksheet.output_an29, 0.001); end
  def test_output_ao29; assert_equal("", worksheet.output_ao29); end
  def test_output_c30; assert_equal("R.03", worksheet.output_c30); end
  def test_output_e30; assert_equal("Tidal", worksheet.output_e30); end
  def test_output_f30; assert_equal("TWh/yr", worksheet.output_f30); end
  def test_output_h30; assert_in_delta(0, (worksheet.output_h30||0), 0.001); end
  def test_output_m30; assert_in_delta(0, (worksheet.output_m30||0), 0.001); end
  def test_output_r30; assert_in_delta(0, (worksheet.output_r30||0), 0.001); end
  def test_output_w30; assert_in_delta(0, (worksheet.output_w30||0), 0.001); end
  def test_output_ab30; assert_in_delta(0, (worksheet.output_ab30||0), 0.001); end
  def test_output_ad30; assert_in_delta(0, (worksheet.output_ad30||0), 0.001); end
  def test_output_ae30; assert_in_delta(0, (worksheet.output_ae30||0), 0.001); end
  def test_output_af30; assert_in_delta(0, (worksheet.output_af30||0), 0.001); end
  def test_output_ag30; assert_in_delta(0, (worksheet.output_ag30||0), 0.001); end
  def test_output_ah30; assert_in_delta(0, (worksheet.output_ah30||0), 0.001); end
  def test_output_ai30; assert_in_delta(0, (worksheet.output_ai30||0), 0.001); end
  def test_output_aj30; assert_in_delta(0, (worksheet.output_aj30||0), 0.001); end
  def test_output_al30; assert_in_delta(0, (worksheet.output_al30||0), 0.001); end
  def test_output_am30; assert_equal("", worksheet.output_am30); end
  def test_output_an30; assert_equal("", worksheet.output_an30); end
  def test_output_ao30; assert_equal("", worksheet.output_ao30); end
  def test_output_c31; assert_equal("R.04", worksheet.output_c31); end
  def test_output_e31; assert_equal("Wave", worksheet.output_e31); end
  def test_output_f31; assert_equal("TWh/yr", worksheet.output_f31); end
  def test_output_h31; assert_in_delta(0, (worksheet.output_h31||0), 0.001); end
  def test_output_m31; assert_in_delta(0, (worksheet.output_m31||0), 0.001); end
  def test_output_r31; assert_in_delta(0, (worksheet.output_r31||0), 0.001); end
  def test_output_w31; assert_in_delta(0, (worksheet.output_w31||0), 0.001); end
  def test_output_ab31; assert_in_delta(0, (worksheet.output_ab31||0), 0.001); end
  def test_output_ad31; assert_in_delta(0, (worksheet.output_ad31||0), 0.001); end
  def test_output_ae31; assert_in_delta(0, (worksheet.output_ae31||0), 0.001); end
  def test_output_af31; assert_in_delta(0, (worksheet.output_af31||0), 0.001); end
  def test_output_ag31; assert_in_delta(0, (worksheet.output_ag31||0), 0.001); end
  def test_output_ah31; assert_in_delta(0, (worksheet.output_ah31||0), 0.001); end
  def test_output_ai31; assert_in_delta(0, (worksheet.output_ai31||0), 0.001); end
  def test_output_aj31; assert_in_delta(0, (worksheet.output_aj31||0), 0.001); end
  def test_output_al31; assert_in_delta(0, (worksheet.output_al31||0), 0.001); end
  def test_output_am31; assert_equal("", worksheet.output_am31); end
  def test_output_an31; assert_equal("", worksheet.output_an31); end
  def test_output_ao31; assert_equal("", worksheet.output_ao31); end
  def test_output_ar31; assert_equal("NIR", worksheet.output_ar31); end
  def test_output_c32; assert_equal("R.05", worksheet.output_c32); end
  def test_output_e32; assert_equal("Geothermal", worksheet.output_e32); end
  def test_output_f32; assert_equal("TWh/yr", worksheet.output_f32); end
  def test_output_h32; assert_in_delta(0, (worksheet.output_h32||0), 0.001); end
  def test_output_m32; assert_in_delta(0, (worksheet.output_m32||0), 0.001); end
  def test_output_r32; assert_in_delta(0, (worksheet.output_r32||0), 0.001); end
  def test_output_w32; assert_in_delta(0, (worksheet.output_w32||0), 0.001); end
  def test_output_ab32; assert_in_delta(0, (worksheet.output_ab32||0), 0.001); end
  def test_output_ad32; assert_in_delta(0.02607885, worksheet.output_ad32, 0.001); end
  def test_output_ae32; assert_in_epsilon(1.117665, worksheet.output_ae32, 0.001); end
  def test_output_af32; assert_in_epsilon(2.1342441438356166, worksheet.output_af32, 0.001); end
  def test_output_ag32; assert_in_epsilon(4.641043287671232, worksheet.output_ag32, 0.001); end
  def test_output_ah32; assert_in_epsilon(7.14784243150685, worksheet.output_ah32, 0.001); end
  def test_output_ai32; assert_in_epsilon(11.144861575342468, worksheet.output_ai32, 0.001); end
  def test_output_aj32; assert_in_epsilon(16.632100719178084, worksheet.output_aj32, 0.001); end
  def test_output_al32; assert_in_delta(0.07644725146674264, worksheet.output_al32, 0.001); end
  def test_output_am32; assert_equal("", worksheet.output_am32); end
  def test_output_an32; assert_equal("", worksheet.output_an32); end
  def test_output_ao32; assert_equal("", worksheet.output_ao32); end
  def test_output_ar32; assert_equal("Imported Petroleum", worksheet.output_ar32); end
  def test_output_as32; assert_in_epsilon(1396000, worksheet.output_as32, 0.001); end
  def test_output_at32; assert_in_epsilon(387.7778088, worksheet.output_at32, 0.001); end
  def test_output_c33; assert_equal("R.06", worksheet.output_c33); end
  def test_output_e33; assert_equal("Hydro", worksheet.output_e33); end
  def test_output_f33; assert_equal("TWh/yr", worksheet.output_f33); end
  def test_output_h33; assert_in_delta(0, (worksheet.output_h33||0), 0.001); end
  def test_output_m33; assert_in_delta(0, (worksheet.output_m33||0), 0.001); end
  def test_output_r33; assert_in_delta(0, (worksheet.output_r33||0), 0.001); end
  def test_output_w33; assert_in_delta(0, (worksheet.output_w33||0), 0.001); end
  def test_output_ab33; assert_in_delta(0, (worksheet.output_ab33||0), 0.001); end
  def test_output_ad33; assert_in_delta(0.38677783500000007, worksheet.output_ad33, 0.001); end
  def test_output_ae33; assert_in_delta(0.39585064500000006, worksheet.output_ae33, 0.001); end
  def test_output_af33; assert_in_delta(0.40679718750000005, worksheet.output_af33, 0.001); end
  def test_output_ag33; assert_in_delta(0.41787522000000005, worksheet.output_ag33, 0.001); end
  def test_output_ah33; assert_in_delta(0.42721101, worksheet.output_ah33, 0.001); end
  def test_output_ai33; assert_in_delta(0.43851914999999997, worksheet.output_ai33, 0.001); end
  def test_output_aj33; assert_in_delta(0.44995878, worksheet.output_aj33, 0.001); end
  def test_output_al33; assert_in_delta(0.0014425123307314194, worksheet.output_al33, 0.001); end
  def test_output_am33; assert_in_delta(0.005025378842048012, worksheet.output_am33, 0.001); end
  def test_output_an33; assert_in_delta(0.2220279720279721, worksheet.output_an33, 0.001); end
  def test_output_ao33; assert_equal("", worksheet.output_ao33); end
  def test_output_ar33; assert_equal("Net secondary fuels used", worksheet.output_ar33); end
  def test_output_as33; assert_in_epsilon(1016000, worksheet.output_as33, 0.001); end
  def test_output_at33; assert_in_epsilon(282.2222448, worksheet.output_at33, 0.001); end
  def test_output_c34; assert_equal("Y.02", worksheet.output_c34); end
  def test_output_e34; assert_equal("Electricity imports (exports)", worksheet.output_e34); end
  def test_output_f34; assert_equal("TWh/yr", worksheet.output_f34); end
  def test_output_h34; assert_in_delta(0, (worksheet.output_h34||0), 0.001); end
  def test_output_m34; assert_in_delta(0, (worksheet.output_m34||0), 0.001); end
  def test_output_r34; assert_in_delta(0, (worksheet.output_r34||0), 0.001); end
  def test_output_w34; assert_in_delta(0, (worksheet.output_w34||0), 0.001); end
  def test_output_ab34; assert_in_delta(0, (worksheet.output_ab34||0), 0.001); end
  def test_output_al34; assert_in_delta(0.0064361770304250015, worksheet.output_al34, 0.001); end
  def test_output_am34; assert_equal("", worksheet.output_am34); end
  def test_output_an34; assert_in_epsilon(-1.0884952984789837, worksheet.output_an34, 0.001); end
  def test_output_ao34; assert_equal("", worksheet.output_ao34); end
  def test_output_e35; assert_equal("Electricity (nuclear, RES) and net imports", worksheet.output_e35); end
  def test_output_f35; assert_equal("TWh/yr", worksheet.output_f35); end
  def test_output_h35; assert_in_delta(0, (worksheet.output_h35||0), 0.001); end
  def test_output_i35; assert_in_delta(0, (worksheet.output_i35||0), 0.001); end
  def test_output_j35; assert_in_delta(0, (worksheet.output_j35||0), 0.001); end
  def test_output_k35; assert_in_delta(0, (worksheet.output_k35||0), 0.001); end
  def test_output_l35; assert_in_delta(0, (worksheet.output_l35||0), 0.001); end
  def test_output_m35; assert_in_delta(0, (worksheet.output_m35||0), 0.001); end
  def test_output_n35; assert_in_delta(0, (worksheet.output_n35||0), 0.001); end
  def test_output_o35; assert_in_delta(0, (worksheet.output_o35||0), 0.001); end
  def test_output_p35; assert_in_delta(0, (worksheet.output_p35||0), 0.001); end
  def test_output_q35; assert_in_delta(0, (worksheet.output_q35||0), 0.001); end
  def test_output_r35; assert_in_delta(0, (worksheet.output_r35||0), 0.001); end
  def test_output_s35; assert_in_delta(0, (worksheet.output_s35||0), 0.001); end
  def test_output_t35; assert_in_delta(0, (worksheet.output_t35||0), 0.001); end
  def test_output_u35; assert_in_delta(0, (worksheet.output_u35||0), 0.001); end
  def test_output_v35; assert_in_delta(0, (worksheet.output_v35||0), 0.001); end
  def test_output_w35; assert_in_delta(0, (worksheet.output_w35||0), 0.001); end
  def test_output_x35; assert_in_delta(0, (worksheet.output_x35||0), 0.001); end
  def test_output_y35; assert_in_delta(0, (worksheet.output_y35||0), 0.001); end
  def test_output_z35; assert_in_delta(0, (worksheet.output_z35||0), 0.001); end
  def test_output_aa35; assert_in_delta(0, (worksheet.output_aa35||0), 0.001); end
  def test_output_ab35; assert_in_epsilon(145.4, worksheet.output_ab35, 0.001); end
  def test_output_ad35; assert_in_epsilon(156.22976582257832, worksheet.output_ad35, 0.001); end
  def test_output_ae35; assert_in_epsilon(143.77224042303445, worksheet.output_ae35, 0.001); end
  def test_output_af35; assert_in_epsilon(27.465096995579433, worksheet.output_af35, 0.001); end
  def test_output_ag35; assert_in_epsilon(39.68931396265882, worksheet.output_ag35, 0.001); end
  def test_output_ah35; assert_in_epsilon(50.91592116345616, worksheet.output_ah35, 0.001); end
  def test_output_ai35; assert_in_epsilon(60.62578933638183, worksheet.output_ai35, 0.001); end
  def test_output_aj35; assert_in_epsilon(73.32794748810407, worksheet.output_aj35, 0.001); end
  def test_output_al35; assert_in_delta(0.2779873995677459, worksheet.output_al35, 0.001); end
  def test_output_am35; assert_in_delta(-0.008789384754307128, worksheet.output_am35, 0.001); end
  def test_output_an35; assert_in_delta(-0.2975138332408118, worksheet.output_an35, 0.001); end
  def test_output_ao35; assert_equal("", worksheet.output_ao35); end
  def test_output_c36; assert_equal("R.07", worksheet.output_c36); end
  def test_output_e36; assert_equal("Environmental heat", worksheet.output_e36); end
  def test_output_f36; assert_equal("TWh/yr", worksheet.output_f36); end
  def test_output_al36; assert_in_delta(0.0960400829179159, worksheet.output_al36, 0.001); end
  def test_output_am36; assert_in_delta(0.09263918649934966, worksheet.output_am36, 0.001); end
  def test_output_an36; assert_in_epsilon(33.59958431970326, worksheet.output_an36, 0.001); end
  def test_output_ao36; assert_equal("", worksheet.output_ao36); end
  def test_output_ar36; assert_equal("NIR", worksheet.output_ar36); end
  def test_output_as36; assert_equal("(TJ)", worksheet.output_as36); end
  def test_output_at36; assert_equal("TWh", worksheet.output_at36); end
  def test_output_c37; assert_equal("W.01", worksheet.output_c37); end
  def test_output_e37; assert_equal("Waste", worksheet.output_e37); end
  def test_output_f37; assert_equal("TWh/yr", worksheet.output_f37); end
  def test_output_ad37; assert_in_epsilon(24.192613803383853, worksheet.output_ad37, 0.001); end
  def test_output_ae37; assert_in_epsilon(27.728525861506927, worksheet.output_ae37, 0.001); end
  def test_output_af37; assert_in_epsilon(29.266435826737915, worksheet.output_af37, 0.001); end
  def test_output_ag37; assert_in_epsilon(30.763372519704163, worksheet.output_ag37, 0.001); end
  def test_output_ah37; assert_in_epsilon(32.225435137837614, worksheet.output_ah37, 0.001); end
  def test_output_ai37; assert_in_epsilon(33.648927493481004, worksheet.output_ai37, 0.001); end
  def test_output_aj37; assert_in_epsilon(35.01567348535116, worksheet.output_aj37, 0.001); end
  def test_output_al37; assert_in_delta(0.11419374698992331, worksheet.output_al37, 0.001); end
  def test_output_am37; assert_in_delta(0.014311410669573643, worksheet.output_am37, 0.001); end
  def test_output_an37; assert_in_delta(0.7654379066453068, worksheet.output_an37, 0.001); end
  def test_output_ao37; assert_equal("", worksheet.output_ao37); end
  def test_output_ar37; assert_equal("1.A. Fuel Combustion", worksheet.output_ar37); end
  def test_output_as37; assert_in_epsilon(1706261.4076463738, worksheet.output_as37, 0.001); end
  def test_output_at37; assert_in_epsilon(473.9615400409129, worksheet.output_at37, 0.001); end
  def test_output_c38; assert_equal("A.01", worksheet.output_c38); end
  def test_output_e38; assert_equal("Agriculture", worksheet.output_e38); end
  def test_output_f38; assert_equal("TWh/yr", worksheet.output_f38); end
  def test_output_ad38; assert_in_delta(0.41, worksheet.output_ad38, 0.001); end
  def test_output_ae38; assert_in_delta(0.6, worksheet.output_ae38, 0.001); end
  def test_output_af38; assert_in_delta(0.6, worksheet.output_af38, 0.001); end
  def test_output_ag38; assert_in_delta(0.6, worksheet.output_ag38, 0.001); end
  def test_output_ah38; assert_in_delta(0.6, worksheet.output_ah38, 0.001); end
  def test_output_ai38; assert_in_delta(0.6, worksheet.output_ai38, 0.001); end
  def test_output_aj38; assert_in_delta(0.6, worksheet.output_aj38, 0.001); end
  def test_output_al38; assert_in_delta(0.0018833493181405717, worksheet.output_al38, 0.001); end
  def test_output_am38; assert_in_delta(0.025399766571952975, worksheet.output_am38, 0.001); end
  def test_output_an38; assert_in_epsilon(1.727272727272727, worksheet.output_an38, 0.001); end
  def test_output_ao38; assert_equal("", worksheet.output_ao38); end
  def test_output_ar38; assert_equal("Liquid Fuels", worksheet.output_ar38); end
  def test_output_as38; assert_in_epsilon(660628.5025096091, worksheet.output_as38, 0.001); end
  def test_output_at38; assert_in_epsilon(183.50793204441368, worksheet.output_at38, 0.001); end
  def test_output_e39; assert_equal("Local Biomass", worksheet.output_e39); end
  def test_output_f39; assert_equal("TWh/yr", worksheet.output_f39); end
  def test_output_ad39; assert_in_epsilon(24.602613803383854, worksheet.output_ad39, 0.001); end
  def test_output_ae39; assert_in_epsilon(28.32852586150693, worksheet.output_ae39, 0.001); end
  def test_output_af39; assert_in_epsilon(29.866435826737916, worksheet.output_af39, 0.001); end
  def test_output_ag39; assert_in_epsilon(31.363372519704164, worksheet.output_ag39, 0.001); end
  def test_output_ah39; assert_in_epsilon(32.825435137837616, worksheet.output_ah39, 0.001); end
  def test_output_ai39; assert_in_epsilon(34.248927493481006, worksheet.output_ai39, 0.001); end
  def test_output_aj39; assert_in_epsilon(35.61567348535116, worksheet.output_aj39, 0.001); end
  def test_output_al39; assert_in_delta(0.1160770963080639, worksheet.output_al39, 0.001); end
  def test_output_am39; assert_in_delta(0.014456937897147526, worksheet.output_am39, 0.001); end
  def test_output_an39; assert_in_delta(0.7755980757222978, worksheet.output_an39, 0.001); end
  def test_output_ao39; assert_equal("", worksheet.output_ao39); end
  def test_output_ar39; assert_equal("Solid Fuels", worksheet.output_ar39); end
  def test_output_as39; assert_in_epsilon(179707.136001178, worksheet.output_as39, 0.001); end
  def test_output_at39; assert_in_epsilon(49.918652882708024, worksheet.output_at39, 0.001); end
  def test_output_c40; assert_equal("Y.01", worksheet.output_c40); end
  def test_output_e40; assert_equal("Biomass imports (exports)", worksheet.output_e40); end
  def test_output_f40; assert_equal("TWh/yr", worksheet.output_f40); end
  def test_output_ad40; assert_in_epsilon(21.346242662072274, worksheet.output_ad40, 0.001); end
  def test_output_ae40; assert_in_epsilon(28.054906104597773, worksheet.output_ae40, 0.001); end
  def test_output_af40; assert_in_epsilon(33.50545122733086, worksheet.output_af40, 0.001); end
  def test_output_ag40; assert_in_epsilon(38.95599635006394, worksheet.output_ag40, 0.001); end
  def test_output_ah40; assert_in_epsilon(44.40654147279703, worksheet.output_ah40, 0.001); end
  def test_output_ai40; assert_in_epsilon(49.85708659553012, worksheet.output_ai40, 0.001); end
  def test_output_aj40; assert_in_epsilon(53.81670415528341, worksheet.output_aj40, 0.001); end
  def test_output_al40; assert_in_delta(0.17841248210061725, worksheet.output_al40, 0.001); end
  def test_output_am40; assert_in_delta(0.028673286466896153, worksheet.output_am40, 0.001); end
  def test_output_an40; assert_in_epsilon(2.098121694719032, worksheet.output_an40, 0.001); end
  def test_output_ao40; assert_equal("", worksheet.output_ao40); end
  def test_output_ar40; assert_equal("Gaseous Fuels", worksheet.output_ar40); end
  def test_output_as40; assert_in_epsilon(661442.3745763535, worksheet.output_as40, 0.001); end
  def test_output_at40; assert_in_epsilon(183.7340076365954, worksheet.output_at40, 0.001); end
  def test_output_e41; assert_equal("Total Biomass", worksheet.output_e41); end
  def test_output_f41; assert_equal("TWh/yr", worksheet.output_f41); end
  def test_output_g41; assert_equal("NIR", worksheet.output_g41); end
  def test_output_h41; assert_in_epsilon(5.813220292196417, worksheet.output_h41, 0.001); end
  def test_output_i41; assert_in_delta(0, (worksheet.output_i41||0), 0.001); end
  def test_output_j41; assert_in_delta(0, (worksheet.output_j41||0), 0.001); end
  def test_output_k41; assert_in_delta(0, (worksheet.output_k41||0), 0.001); end
  def test_output_l41; assert_in_delta(0, (worksheet.output_l41||0), 0.001); end
  def test_output_m41; assert_in_epsilon(6.132011385448, worksheet.output_m41, 0.001); end
  def test_output_n41; assert_in_delta(0, (worksheet.output_n41||0), 0.001); end
  def test_output_o41; assert_in_delta(0, (worksheet.output_o41||0), 0.001); end
  def test_output_p41; assert_in_delta(0, (worksheet.output_p41||0), 0.001); end
  def test_output_q41; assert_in_delta(0, (worksheet.output_q41||0), 0.001); end
  def test_output_r41; assert_in_epsilon(7.04027535947325, worksheet.output_r41, 0.001); end
  def test_output_s41; assert_in_delta(0, (worksheet.output_s41||0), 0.001); end
  def test_output_t41; assert_in_delta(0, (worksheet.output_t41||0), 0.001); end
  def test_output_u41; assert_in_delta(0, (worksheet.output_u41||0), 0.001); end
  def test_output_v41; assert_in_delta(0, (worksheet.output_v41||0), 0.001); end
  def test_output_w41; assert_in_epsilon(12.262136986004055, worksheet.output_w41, 0.001); end
  def test_output_x41; assert_in_delta(0, (worksheet.output_x41||0), 0.001); end
  def test_output_y41; assert_in_delta(0, (worksheet.output_y41||0), 0.001); end
  def test_output_z41; assert_in_delta(0, (worksheet.output_z41||0), 0.001); end
  def test_output_aa41; assert_in_delta(0, (worksheet.output_aa41||0), 0.001); end
  def test_output_ab41; assert_in_epsilon(28.64358923708111, worksheet.output_ab41, 0.001); end
  def test_output_al41; assert_in_delta(0.2944895784086811, worksheet.output_al41, 0.001); end
  def test_output_am41; assert_in_delta(0.02207456086152959, worksheet.output_am41, 0.001); end
  def test_output_an41; assert_in_epsilon(1.3949869886702246, worksheet.output_an41, 0.001); end
  def test_output_ao41; assert_in_epsilon(15.138884764764047, worksheet.output_ao41, 0.001); end
  def test_output_ar41; assert_equal("Biomass", worksheet.output_ar41); end
  def test_output_as41; assert_in_epsilon(103116.921253492, worksheet.output_as41, 0.001); end
  def test_output_at41; assert_in_epsilon(28.643591528568248, worksheet.output_at41, 0.001); end
  def test_output_c42; assert_equal("Y.04", worksheet.output_c42); end
  def test_output_e42; assert_equal("Coal imports (exports)", worksheet.output_e42); end
  def test_output_f42; assert_equal("TWh/yr", worksheet.output_f42); end
  def test_output_g42; assert_equal("NIR", worksheet.output_g42); end
  def test_output_h42; assert_in_epsilon(122.35595086906251, worksheet.output_h42, 0.001); end
  def test_output_m42; assert_in_epsilon(108.90307089440945, worksheet.output_m42, 0.001); end
  def test_output_r42; assert_in_epsilon(91.60107708935166, worksheet.output_r42, 0.001); end
  def test_output_w42; assert_in_epsilon(75.65307958894279, worksheet.output_w42, 0.001); end
  def test_output_ab42; assert_in_epsilon(49.918648889216115, worksheet.output_ab42, 0.001); end
  def test_output_ad42; assert_in_epsilon(41.06687724095044, worksheet.output_ad42, 0.001); end
  def test_output_ae42; assert_in_epsilon(38.96428578454065, worksheet.output_ae42, 0.001); end
  def test_output_af42; assert_in_epsilon(19.631172129307625, worksheet.output_af42, 0.001); end
  def test_output_ag42; assert_in_epsilon(7.224998919894002, worksheet.output_ag42, 0.001); end
  def test_output_ah42; assert_in_epsilon(4.336858121552127, worksheet.output_ah42, 0.001); end
  def test_output_ai42; assert_in_epsilon(1.4327450372445394, worksheet.output_ai42, 0.001); end
  def test_output_aj42; assert_in_delta(-0.017695336537178953, worksheet.output_aj42, 0.001); end
  def test_output_al42; assert_in_delta(0, (worksheet.output_al42||0), 0.001); end
  def test_output_am42; assert_in_delta(-1, worksheet.output_am42, 0.001); end
  def test_output_an42; assert_in_delta(-1, worksheet.output_an42, 0.001); end
  def test_output_ao42; assert_in_delta(-1, worksheet.output_ao42, 0.001); end
  def test_output_ar42; assert_equal("Other Fuels", worksheet.output_ar42); end
  def test_output_as42; assert_in_epsilon(101366.47330574159, worksheet.output_as42, 0.001); end
  def test_output_at42; assert_in_epsilon(28.157355948627625, worksheet.output_at42, 0.001); end
  def test_output_c43; assert_equal("Q.01", worksheet.output_c43); end
  def test_output_e43; assert_equal("Coal reserves", worksheet.output_e43); end
  def test_output_f43; assert_equal("TWh/yr", worksheet.output_f43); end
  def test_output_h43; assert_in_delta(0, (worksheet.output_h43||0), 0.001); end
  def test_output_m43; assert_in_delta(0, (worksheet.output_m43||0), 0.001); end
  def test_output_r43; assert_in_delta(0, (worksheet.output_r43||0), 0.001); end
  def test_output_w43; assert_in_delta(0, (worksheet.output_w43||0), 0.001); end
  def test_output_ab43; assert_in_delta(0, (worksheet.output_ab43||0), 0.001); end
  def test_output_ac43; assert_in_delta(0, (worksheet.output_ac43||0), 0.001); end
  def test_output_ad43; assert_in_delta(0, (worksheet.output_ad43||0), 0.001); end
  def test_output_ae43; assert_in_delta(0, (worksheet.output_ae43||0), 0.001); end
  def test_output_af43; assert_in_delta(0, (worksheet.output_af43||0), 0.001); end
  def test_output_ag43; assert_in_delta(0, (worksheet.output_ag43||0), 0.001); end
  def test_output_ah43; assert_in_delta(0, (worksheet.output_ah43||0), 0.001); end
  def test_output_ai43; assert_in_delta(0, (worksheet.output_ai43||0), 0.001); end
  def test_output_aj43; assert_in_delta(0, (worksheet.output_aj43||0), 0.001); end
  def test_output_ak43; assert_in_delta(0, (worksheet.output_ak43||0), 0.001); end
  def test_output_al43; assert_in_delta(0, (worksheet.output_al43||0), 0.001); end
  def test_output_am43; assert_equal("", worksheet.output_am43); end
  def test_output_an43; assert_equal("", worksheet.output_an43); end
  def test_output_ao43; assert_equal("", worksheet.output_ao43); end
  def test_output_ap43; assert_equal("2010 to 2050 fossil fuels", worksheet.output_ap43); end
  def test_output_e44; assert_equal("Coal", worksheet.output_e44); end
  def test_output_f44; assert_equal("TWh/yr", worksheet.output_f44); end
  def test_output_g44; assert_equal("Sum of above", worksheet.output_g44); end
  def test_output_h44; assert_in_epsilon(122.35595086906251, worksheet.output_h44, 0.001); end
  def test_output_i44; assert_in_delta(0, (worksheet.output_i44||0), 0.001); end
  def test_output_j44; assert_in_delta(0, (worksheet.output_j44||0), 0.001); end
  def test_output_k44; assert_in_delta(0, (worksheet.output_k44||0), 0.001); end
  def test_output_l44; assert_in_delta(0, (worksheet.output_l44||0), 0.001); end
  def test_output_m44; assert_in_epsilon(108.90307089440945, worksheet.output_m44, 0.001); end
  def test_output_n44; assert_in_delta(0, (worksheet.output_n44||0), 0.001); end
  def test_output_o44; assert_in_delta(0, (worksheet.output_o44||0), 0.001); end
  def test_output_p44; assert_in_delta(0, (worksheet.output_p44||0), 0.001); end
  def test_output_q44; assert_in_delta(0, (worksheet.output_q44||0), 0.001); end
  def test_output_r44; assert_in_epsilon(91.60107708935166, worksheet.output_r44, 0.001); end
  def test_output_s44; assert_in_delta(0, (worksheet.output_s44||0), 0.001); end
  def test_output_t44; assert_in_delta(0, (worksheet.output_t44||0), 0.001); end
  def test_output_u44; assert_in_delta(0, (worksheet.output_u44||0), 0.001); end
  def test_output_v44; assert_in_delta(0, (worksheet.output_v44||0), 0.001); end
  def test_output_w44; assert_in_epsilon(75.65307958894279, worksheet.output_w44, 0.001); end
  def test_output_x44; assert_in_delta(0, (worksheet.output_x44||0), 0.001); end
  def test_output_y44; assert_in_delta(0, (worksheet.output_y44||0), 0.001); end
  def test_output_z44; assert_in_delta(0, (worksheet.output_z44||0), 0.001); end
  def test_output_aa44; assert_in_delta(0, (worksheet.output_aa44||0), 0.001); end
  def test_output_ab44; assert_in_epsilon(49.918648889216115, worksheet.output_ab44, 0.001); end
  def test_output_al44; assert_in_delta(0, (worksheet.output_al44||0), 0.001); end
  def test_output_am44; assert_in_delta(-1, worksheet.output_am44, 0.001); end
  def test_output_an44; assert_in_delta(-1, worksheet.output_an44, 0.001); end
  def test_output_ao44; assert_in_delta(-1, worksheet.output_ao44, 0.001); end
  def test_output_ac42; assert_in_epsilon(47.189807914157335, worksheet.output_ac42, 0.001); end
  def test_output_ac44; assert_in_epsilon(47.189807914157335, worksheet.output_ac44, 0.001); end
  def test_output_ac46; assert_in_epsilon(171.9953306122488, worksheet.output_ac46, 0.001); end
  def test_output_ac48; assert_in_epsilon(171.9953306122488, worksheet.output_ac48, 0.001); end
  def test_output_ac49; assert_in_epsilon(175.72240500319944, worksheet.output_ac49, 0.001); end
  def test_output_ac51; assert_in_epsilon(175.72240500319944, worksheet.output_ac51, 0.001); end
  def test_output_ap44; assert_in_delta(-0.7325847795189755, worksheet.output_ap44, 0.001); end
  def test_output_c45; assert_equal("Q.02", worksheet.output_c45); end
  def test_output_e45; assert_equal("Oil reserves", worksheet.output_e45); end
  def test_output_f45; assert_equal("TWh/yr", worksheet.output_f45); end
  def test_output_h45; assert_in_delta(0, (worksheet.output_h45||0), 0.001); end
  def test_output_m45; assert_in_delta(0, (worksheet.output_m45||0), 0.001); end
  def test_output_r45; assert_in_delta(0, (worksheet.output_r45||0), 0.001); end
  def test_output_w45; assert_in_delta(0, (worksheet.output_w45||0), 0.001); end
  def test_output_ab45; assert_in_delta(0, (worksheet.output_ab45||0), 0.001); end
  def test_output_ac45; assert_in_delta(0, (worksheet.output_ac45||0), 0.001); end
  def test_output_ad45; assert_in_delta(0, (worksheet.output_ad45||0), 0.001); end
  def test_output_ae45; assert_in_delta(0, (worksheet.output_ae45||0), 0.001); end
  def test_output_af45; assert_in_delta(0, (worksheet.output_af45||0), 0.001); end
  def test_output_ag45; assert_in_delta(0, (worksheet.output_ag45||0), 0.001); end
  def test_output_ah45; assert_in_delta(0, (worksheet.output_ah45||0), 0.001); end
  def test_output_ai45; assert_in_delta(0, (worksheet.output_ai45||0), 0.001); end
  def test_output_aj45; assert_in_delta(0, (worksheet.output_aj45||0), 0.001); end
  def test_output_ak45; assert_in_delta(0, (worksheet.output_ak45||0), 0.001); end
  def test_output_al45; assert_in_delta(0, (worksheet.output_al45||0), 0.001); end
  def test_output_am45; assert_equal("", worksheet.output_am45); end
  def test_output_an45; assert_equal("", worksheet.output_an45); end
  def test_output_ao45; assert_equal("", worksheet.output_ao45); end
  def test_output_as45; assert_equal("conversion factor", worksheet.output_as45); end
  def test_output_at45; assert_in_epsilon(11.63, worksheet.output_at45, 0.001); end
  def test_output_c46; assert_equal("Y.05", worksheet.output_c46); end
  def test_output_e46; assert_equal("Oil and petroleum products imports (exports)", worksheet.output_e46); end
  def test_output_f46; assert_equal("TWh/yr", worksheet.output_f46); end
  def test_output_g46; assert_equal("NIR", worksheet.output_g46); end
  def test_output_h46; assert_in_epsilon(191.05551678525424, worksheet.output_h46, 0.001); end
  def test_output_m46; assert_in_epsilon(203.9391825148134, worksheet.output_m46, 0.001); end
  def test_output_r46; assert_in_epsilon(195.12328128477102, worksheet.output_r46, 0.001); end
  def test_output_w46; assert_in_epsilon(204.63227248509088, worksheet.output_w46, 0.001); end
  def test_output_ab46; assert_in_epsilon(183.5079173637803, worksheet.output_ab46, 0.001); end
  def test_output_ad46; assert_in_epsilon(161.88398271869815, worksheet.output_ad46, 0.001); end
  def test_output_ae46; assert_in_epsilon(139.5984718019355, worksheet.output_ae46, 0.001); end
  def test_output_af46; assert_in_epsilon(119.0072058897119, worksheet.output_af46, 0.001); end
  def test_output_ag46; assert_in_epsilon(99.03285588560192, worksheet.output_ag46, 0.001); end
  def test_output_ah46; assert_in_epsilon(81.6003252846024, worksheet.output_ah46, 0.001); end
  def test_output_ai46; assert_in_epsilon(67.0005756391352, worksheet.output_ai46, 0.001); end
  def test_output_aj46; assert_in_epsilon(53.47811971145497, worksheet.output_aj46, 0.001); end
  def test_output_al46; assert_in_delta(0.12826588724932822, worksheet.output_al46, 0.001); end
  def test_output_am46; assert_in_delta(-0.03529312819502772, worksheet.output_am46, 0.001); end
  def test_output_an46; assert_in_delta(-0.7624172613717599, worksheet.output_an46, 0.001); end
  def test_output_ao46; assert_in_delta(-0.7861191219929144, worksheet.output_ao46, 0.001); end
  def test_output_ar46; assert_equal("SPF ECONOMIE = includes energy for combustion and feedstock", worksheet.output_ar46); end
  def test_output_c47; assert_equal("Y.03", worksheet.output_c47); end
  def test_output_e47; assert_equal("Petroleum products imports (exports)", worksheet.output_e47); end
  def test_output_f47; assert_equal("TWh/yr", worksheet.output_f47); end
  def test_output_h47; assert_in_delta(0, (worksheet.output_h47||0), 0.001); end
  def test_output_m47; assert_in_delta(0, (worksheet.output_m47||0), 0.001); end
  def test_output_r47; assert_in_delta(0, (worksheet.output_r47||0), 0.001); end
  def test_output_w47; assert_in_delta(0, (worksheet.output_w47||0), 0.001); end
  def test_output_ab47; assert_in_delta(0, (worksheet.output_ab47||0), 0.001); end
  def test_output_ac47; assert_in_delta(0, (worksheet.output_ac47||0), 0.001); end
  def test_output_ad47; assert_in_delta(0, (worksheet.output_ad47||0), 0.001); end
  def test_output_ae47; assert_in_delta(0, (worksheet.output_ae47||0), 0.001); end
  def test_output_af47; assert_in_delta(0, (worksheet.output_af47||0), 0.001); end
  def test_output_ag47; assert_in_delta(0, (worksheet.output_ag47||0), 0.001); end
  def test_output_ah47; assert_in_delta(0, (worksheet.output_ah47||0), 0.001); end
  def test_output_ai47; assert_in_delta(0, (worksheet.output_ai47||0), 0.001); end
  def test_output_aj47; assert_in_delta(0, (worksheet.output_aj47||0), 0.001); end
  def test_output_ak47; assert_in_delta(0, (worksheet.output_ak47||0), 0.001); end
  def test_output_al47; assert_in_delta(0, (worksheet.output_al47||0), 0.001); end
  def test_output_am47; assert_equal("", worksheet.output_am47); end
  def test_output_an47; assert_equal("", worksheet.output_an47); end
  def test_output_ao47; assert_equal("", worksheet.output_ao47); end
  def test_output_ar47; assert_equal("Energy source", worksheet.output_ar47); end
  def test_output_as47; assert_equal("Mtep", worksheet.output_as47); end
  def test_output_at47; assert_equal("TWh", worksheet.output_at47); end
  def test_output_e48; assert_equal("Oil and petroleum products", worksheet.output_e48); end
  def test_output_f48; assert_equal("TWh/yr", worksheet.output_f48); end
  def test_output_g48; assert_equal("Sum of above", worksheet.output_g48); end
  def test_output_h48; assert_in_epsilon(191.05551678525424, worksheet.output_h48, 0.001); end
  def test_output_i48; assert_in_delta(0, (worksheet.output_i48||0), 0.001); end
  def test_output_j48; assert_in_delta(0, (worksheet.output_j48||0), 0.001); end
  def test_output_k48; assert_in_delta(0, (worksheet.output_k48||0), 0.001); end
  def test_output_l48; assert_in_delta(0, (worksheet.output_l48||0), 0.001); end
  def test_output_m48; assert_in_epsilon(203.9391825148134, worksheet.output_m48, 0.001); end
  def test_output_n48; assert_in_delta(0, (worksheet.output_n48||0), 0.001); end
  def test_output_o48; assert_in_delta(0, (worksheet.output_o48||0), 0.001); end
  def test_output_p48; assert_in_delta(0, (worksheet.output_p48||0), 0.001); end
  def test_output_q48; assert_in_delta(0, (worksheet.output_q48||0), 0.001); end
  def test_output_r48; assert_in_epsilon(195.12328128477102, worksheet.output_r48, 0.001); end
  def test_output_s48; assert_in_delta(0, (worksheet.output_s48||0), 0.001); end
  def test_output_t48; assert_in_delta(0, (worksheet.output_t48||0), 0.001); end
  def test_output_u48; assert_in_delta(0, (worksheet.output_u48||0), 0.001); end
  def test_output_v48; assert_in_delta(0, (worksheet.output_v48||0), 0.001); end
  def test_output_w48; assert_in_epsilon(204.63227248509088, worksheet.output_w48, 0.001); end
  def test_output_x48; assert_in_delta(0, (worksheet.output_x48||0), 0.001); end
  def test_output_y48; assert_in_delta(0, (worksheet.output_y48||0), 0.001); end
  def test_output_z48; assert_in_delta(0, (worksheet.output_z48||0), 0.001); end
  def test_output_aa48; assert_in_delta(0, (worksheet.output_aa48||0), 0.001); end
  def test_output_ab48; assert_in_epsilon(183.5079173637803, worksheet.output_ab48, 0.001); end
  def test_output_al48; assert_in_delta(0.12826588724932822, worksheet.output_al48, 0.001); end
  def test_output_am48; assert_in_delta(-0.03529312819502772, worksheet.output_am48, 0.001); end
  def test_output_an48; assert_in_delta(-0.7624172613717599, worksheet.output_an48, 0.001); end
  def test_output_ao48; assert_in_delta(-0.7861191219929144, worksheet.output_ao48, 0.001); end
  def test_output_ar48; assert_equal("Pétrole", worksheet.output_ar48); end
  def test_output_as48; assert_in_epsilon(25.9, worksheet.output_as48, 0.001); end
  def test_output_at48; assert_in_epsilon(301.217, worksheet.output_at48, 0.001); end
  def test_output_c49; assert_equal("Y.06", worksheet.output_c49); end
  def test_output_e49; assert_equal("Gas imports (exports)", worksheet.output_e49); end
  def test_output_f49; assert_equal("TWh/yr", worksheet.output_f49); end
  def test_output_g49; assert_equal("NIR", worksheet.output_g49); end
  def test_output_h49; assert_in_epsilon(92.32749043642889, worksheet.output_h49, 0.001); end
  def test_output_m49; assert_in_epsilon(118.71732708836666, worksheet.output_m49, 0.001); end
  def test_output_r49; assert_in_epsilon(148.23251445397443, worksheet.output_r49, 0.001); end
  def test_output_w49; assert_in_epsilon(160.1035298066882, worksheet.output_w49, 0.001); end
  def test_output_ab49; assert_in_epsilon(183.73399293787597, worksheet.output_ab49, 0.001); end
  def test_output_ad49; assert_in_epsilon(119.32939288201538, worksheet.output_ad49, 0.001); end
  def test_output_ae49; assert_in_epsilon(116.99497503800117, worksheet.output_ae49, 0.001); end
  def test_output_af49; assert_in_epsilon(180.12064640716486, worksheet.output_af49, 0.001); end
  def test_output_ag49; assert_in_epsilon(156.68799525463987, worksheet.output_ag49, 0.001); end
  def test_output_ah49; assert_in_epsilon(134.65715710754736, worksheet.output_ah49, 0.001); end
  def test_output_ai49; assert_in_epsilon(115.87666230435332, worksheet.output_ai49, 0.001); end
  def test_output_aj49; assert_in_epsilon(92.10679275795603, worksheet.output_aj49, 0.001); end
  def test_output_al49; assert_in_delta(0.20321705185632882, worksheet.output_al49, 0.001); end
  def test_output_am49; assert_in_delta(-0.024653714195471688, worksheet.output_am49, 0.001); end
  def test_output_an49; assert_in_delta(-0.6315713631208104, worksheet.output_an49, 0.001); end
  def test_output_ao49; assert_in_delta(-0.29878776257827033, worksheet.output_ao49, 0.001); end
  def test_output_ar49; assert_equal("Gaz naturel", worksheet.output_ar49); end
  def test_output_as49; assert_in_epsilon(17, worksheet.output_as49, 0.001); end
  def test_output_at49; assert_in_epsilon(197.71, worksheet.output_at49, 0.001); end
  def test_output_c50; assert_equal("Q.03", worksheet.output_c50); end
  def test_output_e50; assert_equal("Gas reserves", worksheet.output_e50); end
  def test_output_f50; assert_equal("TWh/yr", worksheet.output_f50); end
  def test_output_h50; assert_in_delta(0, (worksheet.output_h50||0), 0.001); end
  def test_output_m50; assert_in_delta(0, (worksheet.output_m50||0), 0.001); end
  def test_output_r50; assert_in_delta(0, (worksheet.output_r50||0), 0.001); end
  def test_output_w50; assert_in_delta(0, (worksheet.output_w50||0), 0.001); end
  def test_output_ab50; assert_in_epsilon(28.157355948627625, worksheet.output_ab50, 0.001); end
  def test_output_ac50; assert_in_delta(0, (worksheet.output_ac50||0), 0.001); end
  def test_output_ad50; assert_in_delta(0, (worksheet.output_ad50||0), 0.001); end
  def test_output_ae50; assert_in_delta(0, (worksheet.output_ae50||0), 0.001); end
  def test_output_af50; assert_in_delta(0, (worksheet.output_af50||0), 0.001); end
  def test_output_ag50; assert_in_delta(0, (worksheet.output_ag50||0), 0.001); end
  def test_output_ah50; assert_in_delta(0, (worksheet.output_ah50||0), 0.001); end
  def test_output_ai50; assert_in_delta(0, (worksheet.output_ai50||0), 0.001); end
  def test_output_aj50; assert_in_delta(0, (worksheet.output_aj50||0), 0.001); end
  def test_output_ak50; assert_in_delta(0, (worksheet.output_ak50||0), 0.001); end
  def test_output_al50; assert_in_delta(0, (worksheet.output_al50||0), 0.001); end
  def test_output_am50; assert_equal("", worksheet.output_am50); end
  def test_output_an50; assert_equal("", worksheet.output_an50); end
  def test_output_ao50; assert_equal("", worksheet.output_ao50); end
  def test_output_ar50; assert_equal("Solides ", worksheet.output_ar50); end
  def test_output_as50; assert_in_epsilon(3.4, worksheet.output_as50, 0.001); end
  def test_output_at50; assert_in_epsilon(39.542, worksheet.output_at50, 0.001); end
  def test_output_e51; assert_equal("Natural gas", worksheet.output_e51); end
  def test_output_f51; assert_equal("TWh/yr", worksheet.output_f51); end
  def test_output_g51; assert_equal("Sum of above", worksheet.output_g51); end
  def test_output_h51; assert_in_epsilon(92.32749043642889, worksheet.output_h51, 0.001); end
  def test_output_i51; assert_in_delta(0, (worksheet.output_i51||0), 0.001); end
  def test_output_j51; assert_in_delta(0, (worksheet.output_j51||0), 0.001); end
  def test_output_k51; assert_in_delta(0, (worksheet.output_k51||0), 0.001); end
  def test_output_l51; assert_in_delta(0, (worksheet.output_l51||0), 0.001); end
  def test_output_m51; assert_in_epsilon(118.71732708836666, worksheet.output_m51, 0.001); end
  def test_output_n51; assert_in_delta(0, (worksheet.output_n51||0), 0.001); end
  def test_output_o51; assert_in_delta(0, (worksheet.output_o51||0), 0.001); end
  def test_output_p51; assert_in_delta(0, (worksheet.output_p51||0), 0.001); end
  def test_output_q51; assert_in_delta(0, (worksheet.output_q51||0), 0.001); end
  def test_output_r51; assert_in_epsilon(148.23251445397443, worksheet.output_r51, 0.001); end
  def test_output_s51; assert_in_delta(0, (worksheet.output_s51||0), 0.001); end
  def test_output_t51; assert_in_delta(0, (worksheet.output_t51||0), 0.001); end
  def test_output_u51; assert_in_delta(0, (worksheet.output_u51||0), 0.001); end
  def test_output_v51; assert_in_delta(0, (worksheet.output_v51||0), 0.001); end
  def test_output_w51; assert_in_epsilon(160.1035298066882, worksheet.output_w51, 0.001); end
  def test_output_x51; assert_in_delta(0, (worksheet.output_x51||0), 0.001); end
  def test_output_y51; assert_in_delta(0, (worksheet.output_y51||0), 0.001); end
  def test_output_z51; assert_in_delta(0, (worksheet.output_z51||0), 0.001); end
  def test_output_aa51; assert_in_delta(0, (worksheet.output_aa51||0), 0.001); end
  def test_output_ab51; assert_in_epsilon(183.73399293787597, worksheet.output_ab51, 0.001); end
  def test_output_al51; assert_in_delta(0.20321705185632882, worksheet.output_al51, 0.001); end
  def test_output_am51; assert_in_delta(-0.024653714195471688, worksheet.output_am51, 0.001); end
  def test_output_an51; assert_in_delta(-0.6315713631208104, worksheet.output_an51, 0.001); end
  def test_output_ao51; assert_in_delta(-0.29878776257827033, worksheet.output_ao51, 0.001); end
  def test_output_ap51; assert_equal("Scenario VS reference case", worksheet.output_ap51); end
  def test_output_ar51; assert_equal("Nucléaire", worksheet.output_ar51); end
  def test_output_as51; assert_in_epsilon(12.5, worksheet.output_as51, 0.001); end
  def test_output_at51; assert_in_epsilon(145.375, worksheet.output_at51, 0.001); end
  def test_output_b52; assert_equal("REF", worksheet.output_b52); end
  def test_output_e52; assert_equal("Total Supply (excluding exports)", worksheet.output_e52); end
  def test_output_f52; assert_equal("TWh/yr", worksheet.output_f52); end
  def test_output_g52; assert_equal("Sum of above", worksheet.output_g52); end
  def test_output_h52; assert_in_epsilon(411.5521783829421, worksheet.output_h52, 0.001); end
  def test_output_i52; assert_in_delta(0, (worksheet.output_i52||0), 0.001); end
  def test_output_j52; assert_in_delta(0, (worksheet.output_j52||0), 0.001); end
  def test_output_k52; assert_in_delta(0, (worksheet.output_k52||0), 0.001); end
  def test_output_l52; assert_in_delta(0, (worksheet.output_l52||0), 0.001); end
  def test_output_m52; assert_in_epsilon(437.6915918830375, worksheet.output_m52, 0.001); end
  def test_output_n52; assert_in_delta(0, (worksheet.output_n52||0), 0.001); end
  def test_output_o52; assert_in_delta(0, (worksheet.output_o52||0), 0.001); end
  def test_output_p52; assert_in_delta(0, (worksheet.output_p52||0), 0.001); end
  def test_output_q52; assert_in_delta(0, (worksheet.output_q52||0), 0.001); end
  def test_output_r52; assert_in_epsilon(441.99714818757036, worksheet.output_r52, 0.001); end
  def test_output_s52; assert_in_delta(0, (worksheet.output_s52||0), 0.001); end
  def test_output_t52; assert_in_delta(0, (worksheet.output_t52||0), 0.001); end
  def test_output_u52; assert_in_delta(0, (worksheet.output_u52||0), 0.001); end
  def test_output_v52; assert_in_delta(0, (worksheet.output_v52||0), 0.001); end
  def test_output_w52; assert_in_epsilon(452.6510188667259, worksheet.output_w52, 0.001); end
  def test_output_x52; assert_in_delta(0, (worksheet.output_x52||0), 0.001); end
  def test_output_y52; assert_in_delta(0, (worksheet.output_y52||0), 0.001); end
  def test_output_z52; assert_in_delta(0, (worksheet.output_z52||0), 0.001); end
  def test_output_aa52; assert_in_delta(0, (worksheet.output_aa52||0), 0.001); end
  def test_output_ab52; assert_in_epsilon(591.2041484279536, worksheet.output_ab52, 0.001); end
  def test_output_ad36; assert_in_epsilon(4.2009371714720105, worksheet.output_ad36, 0.001); end
  def test_output_ad41; assert_in_epsilon(45.94885646545613, worksheet.output_ad41, 0.001); end
  def test_output_ad44; assert_in_epsilon(41.06687724095044, worksheet.output_ad44, 0.001); end
  def test_output_ad48; assert_in_epsilon(161.88398271869815, worksheet.output_ad48, 0.001); end
  def test_output_ad51; assert_in_epsilon(119.32939288201538, worksheet.output_ad51, 0.001); end
  def test_output_ad52; assert_in_epsilon(528.6598123011704, worksheet.output_ad52, 0.001); end
  def test_output_ae36; assert_in_epsilon(8.488011249394791, worksheet.output_ae36, 0.001); end
  def test_output_ae41; assert_in_epsilon(56.3834319661047, worksheet.output_ae41, 0.001); end
  def test_output_ae44; assert_in_epsilon(38.96428578454065, worksheet.output_ae44, 0.001); end
  def test_output_ae48; assert_in_epsilon(139.5984718019355, worksheet.output_ae48, 0.001); end
  def test_output_ae51; assert_in_epsilon(116.99497503800117, worksheet.output_ae51, 0.001); end
  def test_output_ae52; assert_in_epsilon(504.2014162630112, worksheet.output_ae52, 0.001); end
  def test_output_af36; assert_in_epsilon(12.6459560959116, worksheet.output_af36, 0.001); end
  def test_output_af41; assert_in_epsilon(63.37188705406878, worksheet.output_af41, 0.001); end
  def test_output_af44; assert_in_epsilon(19.631172129307625, worksheet.output_af44, 0.001); end
  def test_output_af48; assert_in_epsilon(119.0072058897119, worksheet.output_af48, 0.001); end
  def test_output_af51; assert_in_epsilon(180.12064640716486, worksheet.output_af51, 0.001); end
  def test_output_af52; assert_in_epsilon(422.24196457174423, worksheet.output_af52, 0.001); end
  def test_output_ag36; assert_in_epsilon(16.32481598843706, worksheet.output_ag36, 0.001); end
  def test_output_ag41; assert_in_epsilon(70.31936886976811, worksheet.output_ag41, 0.001); end
  def test_output_ag44; assert_in_epsilon(7.224998919894002, worksheet.output_ag44, 0.001); end
  def test_output_ag48; assert_in_epsilon(99.03285588560192, worksheet.output_ag48, 0.001); end
  def test_output_ag51; assert_in_epsilon(156.68799525463987, worksheet.output_ag51, 0.001); end
  def test_output_ag52; assert_in_epsilon(389.2793488809998, worksheet.output_ag52, 0.001); end
  def test_output_ah36; assert_in_epsilon(19.824764097684927, worksheet.output_ah36, 0.001); end
  def test_output_ah41; assert_in_epsilon(77.23197661063465, worksheet.output_ah41, 0.001); end
  def test_output_ah44; assert_in_epsilon(4.336858121552127, worksheet.output_ah44, 0.001); end
  def test_output_ah48; assert_in_epsilon(81.6003252846024, worksheet.output_ah48, 0.001); end
  def test_output_ah51; assert_in_epsilon(134.65715710754736, worksheet.output_ah51, 0.001); end
  def test_output_ah52; assert_in_epsilon(368.5670023854776, worksheet.output_ah52, 0.001); end
  def test_output_ai36; assert_in_epsilon(23.240606205105, worksheet.output_ai36, 0.001); end
  def test_output_ai41; assert_in_epsilon(84.10601408901113, worksheet.output_ai41, 0.001); end
  def test_output_ai44; assert_in_epsilon(1.4327450372445394, worksheet.output_ai44, 0.001); end
  def test_output_ai48; assert_in_epsilon(67.0005756391352, worksheet.output_ai48, 0.001); end
  def test_output_ai51; assert_in_epsilon(115.87666230435332, worksheet.output_ai51, 0.001); end
  def test_output_ai52; assert_in_epsilon(352.282392611231, worksheet.output_ai52, 0.001); end
  def test_output_aj36; assert_in_epsilon(26.622617314547767, worksheet.output_aj36, 0.001); end
  def test_output_aj41; assert_in_epsilon(89.43237764063457, worksheet.output_aj41, 0.001); end
  def test_output_aj44; assert_in_delta(-0.017695336537178953, worksheet.output_aj44, 0.001); end
  def test_output_aj48; assert_in_epsilon(53.47811971145497, worksheet.output_aj48, 0.001); end
  def test_output_aj51; assert_in_epsilon(92.10679275795603, worksheet.output_aj51, 0.001); end
  def test_output_aj52; assert_in_epsilon(334.9501595761603, worksheet.output_aj52, 0.001); end
  def test_output_al52; assert_in_delta(1, worksheet.output_al52, 0.001); end
  def test_output_am52; assert_in_delta(-0.01404796998486535, worksheet.output_am52, 0.001); end
  def test_output_an52; assert_in_delta(-0.4321528885811371, worksheet.output_an52, 0.001); end
  def test_output_ao52; assert_in_delta(-0.22590285371289975, worksheet.output_ao52, 0.001); end
  def test_output_ap52; assert_in_delta(-0.4464143662486404, worksheet.output_ap52, 0.001); end
  def test_output_ar52; assert_equal("RES et récupération", worksheet.output_ar52); end
  def test_output_as52; assert_in_epsilon(2.9, worksheet.output_as52, 0.001); end
  def test_output_at52; assert_in_epsilon(33.727000000000004, worksheet.output_at52, 0.001); end
  def test_output_b53; assert_equal("REF", worksheet.output_b53); end
  def test_output_e53; assert_equal("Reference scenario", worksheet.output_e53); end
  def test_output_f53; assert_equal("TWh/yr", worksheet.output_f53); end
  def test_output_g53; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g53); end
  def test_output_ac53; assert_in_epsilon(590.4035237132654, worksheet.output_ac53, 0.001); end
  def test_output_ad53; assert_in_epsilon(577.0239059196327, worksheet.output_ad53, 0.001); end
  def test_output_ae53; assert_in_epsilon(579.2841739025088, worksheet.output_ae53, 0.001); end
  def test_output_af53; assert_in_epsilon(523.9556446140252, worksheet.output_af53, 0.001); end
  def test_output_ag53; assert_in_epsilon(531.6762218441254, worksheet.output_ag53, 0.001); end
  def test_output_ah53; assert_in_epsilon(538.7563602813423, worksheet.output_ah53, 0.001); end
  def test_output_ai53; assert_in_epsilon(550.2514372863805, worksheet.output_ai53, 0.001); end
  def test_output_aj53; assert_in_epsilon(561.415939351949, worksheet.output_aj53, 0.001); end
  def test_output_ak53; assert_in_epsilon(575.4870564028481, worksheet.output_ak53, 0.001); end
  def test_output_al53; assert_in_epsilon(1.8064052587917145, worksheet.output_al53, 0.001); end
  def test_output_am53; assert_in_delta(-0.0006395330303889946, worksheet.output_am53, 0.001); end
  def test_output_an53; assert_in_delta(-0.02526486836765829, worksheet.output_an53, 0.001); end
  def test_output_ao53; assert_equal("", worksheet.output_ao53); end
  def test_output_ar53; assert_equal("Total", worksheet.output_ar53); end
  def test_output_as53; assert_in_epsilon(61.699999999999996, worksheet.output_as53, 0.001); end
  def test_output_at53; assert_in_epsilon(717.571, worksheet.output_at53, 0.001); end
  def test_output_e54; assert_equal("Nuclear", worksheet.output_e54); end
  def test_output_f54; assert_equal("TWh/yr", worksheet.output_f54); end
  def test_output_ac27; assert_in_epsilon(146.33666008499998, worksheet.output_ac27, 0.001); end
  def test_output_ac54; assert_in_epsilon(146.33666008499998, worksheet.output_ac54, 0.001); end
  def test_output_ad27; assert_in_epsilon(146.33666008499998, worksheet.output_ad27, 0.001); end
  def test_output_ad54; assert_in_epsilon(146.33666008499998, worksheet.output_ad54, 0.001); end
  def test_output_ae27; assert_in_epsilon(125.59652566999999, worksheet.output_ae27, 0.001); end
  def test_output_ae54; assert_in_epsilon(125.59652566999999, worksheet.output_ae54, 0.001); end
  def test_output_af27; assert_in_delta(0, (worksheet.output_af27||0), 0.001); end
  def test_output_af54; assert_in_delta(0, (worksheet.output_af54||0), 0.001); end
  def test_output_ag27; assert_in_delta(0, (worksheet.output_ag27||0), 0.001); end
  def test_output_ag54; assert_in_delta(0, (worksheet.output_ag54||0), 0.001); end
  def test_output_ah27; assert_in_delta(0, (worksheet.output_ah27||0), 0.001); end
  def test_output_ah54; assert_in_delta(0, (worksheet.output_ah54||0), 0.001); end
  def test_output_ai27; assert_in_delta(0, (worksheet.output_ai27||0), 0.001); end
  def test_output_ai54; assert_in_delta(0, (worksheet.output_ai54||0), 0.001); end
  def test_output_aj27; assert_in_delta(0, (worksheet.output_aj27||0), 0.001); end
  def test_output_aj54; assert_in_delta(0, (worksheet.output_aj54||0), 0.001); end
  def test_output_ak54; assert_in_delta(0, (worksheet.output_ak54||0), 0.001); end
  def test_output_al54; assert_in_delta(0, (worksheet.output_al54||0), 0.001); end
  def test_output_ao54; assert_equal("", worksheet.output_ao54); end
  def test_output_e55; assert_equal("Imports of decarbonized electricity", worksheet.output_e55); end
  def test_output_f55; assert_equal("TWh/yr", worksheet.output_f55); end
  def test_output_ac34; assert_in_epsilon(-23.1701131109061, worksheet.output_ac34, 0.001); end
  def test_output_ac55; assert_in_epsilon(-23.1701131109061, worksheet.output_ac55, 0.001); end
  def test_xi_a_g457; assert_in_epsilon(-5.74373634873057, worksheet.xi_a_g457, 0.001); end
  def test_xi_b_g247; assert_in_delta(-0.5466097997490187, worksheet.xi_b_g247, 0.001); end
  def test_output_ad34; assert_in_delta(0.2625, worksheet.output_ad34, 0.001); end
  def test_output_ad55; assert_in_delta(0.2625, worksheet.output_ad55, 0.001); end
  def test_xi_a_h457; assert_in_epsilon(-5.668165837827344, worksheet.xi_a_h457, 0.001); end
  def test_xi_b_h247; assert_in_delta(-0.4422097105477589, worksheet.xi_b_h247, 0.001); end
  def test_output_ae34; assert_in_delta(0.525, worksheet.output_ae34, 0.001); end
  def test_output_ae55; assert_in_delta(0.525, worksheet.output_ae55, 0.001); end
  def test_xi_a_i457; assert_in_epsilon(-5.593115904496355, worksheet.xi_a_i457, 0.001); end
  def test_xi_b_i247; assert_in_delta(-0.3613488098936196, worksheet.xi_b_i247, 0.001); end
  def test_output_af34; assert_in_delta(0.7875000000000001, worksheet.output_af34, 0.001); end
  def test_output_af55; assert_in_delta(0.7875000000000001, worksheet.output_af55, 0.001); end
  def test_xi_a_j457; assert_in_epsilon(-5.373887110438694, worksheet.xi_a_j457, 0.001); end
  def test_xi_b_j247; assert_in_delta(-0.29704289293574804, worksheet.xi_b_j247, 0.001); end
  def test_output_ag34; assert_in_epsilon(1.05, worksheet.output_ag34, 0.001); end
  def test_output_ag55; assert_in_epsilon(1.05, worksheet.output_ag55, 0.001); end
  def test_xi_a_k457; assert_in_epsilon(-5.301917530984488, worksheet.xi_a_k457, 0.001); end
  def test_xi_b_k247; assert_in_delta(-0.24529724554696866, worksheet.xi_b_k247, 0.001); end
  def test_output_ah34; assert_in_epsilon(1.3125000000000142, worksheet.output_ah34, 0.001); end
  def test_output_ah55; assert_in_epsilon(1.3125000000000142, worksheet.output_ah55, 0.001); end
  def test_xi_a_l457; assert_in_epsilon(-5.230454185383418, worksheet.xi_a_l457, 0.001); end
  def test_xi_b_l247; assert_in_delta(-0.1964439331271659, worksheet.xi_b_l247, 0.001); end
  def test_output_ai34; assert_in_epsilon(1.575, worksheet.output_ai34, 0.001); end
  def test_output_ai55; assert_in_epsilon(1.575, worksheet.output_ai55, 0.001); end
  def test_xi_a_m457; assert_in_epsilon(-5.1594970736354835, worksheet.xi_a_m457, 0.001); end
  def test_xi_b_m247; assert_in_delta(-0.15116715835308187, worksheet.xi_b_m247, 0.001); end
  def test_output_aj34; assert_in_epsilon(1.8374999999999857, worksheet.output_aj34, 0.001); end
  def test_output_aj55; assert_in_epsilon(1.8374999999999857, worksheet.output_aj55, 0.001); end
  def test_output_ak55; assert_in_epsilon(2.05044607554145, worksheet.output_ak55, 0.001); end
  def test_output_al55; assert_in_delta(0.0064361770304250015, worksheet.output_al55, 0.001); end
  def test_output_ao55; assert_equal("", worksheet.output_ao55); end
  def test_output_e56; assert_equal("Renewables", worksheet.output_e56); end
  def test_output_f56; assert_equal("TWh/yr", worksheet.output_f56); end
  def test_output_h56; assert_in_epsilon(5.813220292196417, worksheet.output_h56, 0.001); end
  def test_output_i56; assert_in_delta(0, (worksheet.output_i56||0), 0.001); end
  def test_output_j56; assert_in_delta(0, (worksheet.output_j56||0), 0.001); end
  def test_output_k56; assert_in_delta(0, (worksheet.output_k56||0), 0.001); end
  def test_output_l56; assert_in_delta(0, (worksheet.output_l56||0), 0.001); end
  def test_output_m56; assert_in_epsilon(6.132011385448, worksheet.output_m56, 0.001); end
  def test_output_n56; assert_in_delta(0, (worksheet.output_n56||0), 0.001); end
  def test_output_o56; assert_in_delta(0, (worksheet.output_o56||0), 0.001); end
  def test_output_p56; assert_in_delta(0, (worksheet.output_p56||0), 0.001); end
  def test_output_q56; assert_in_delta(0, (worksheet.output_q56||0), 0.001); end
  def test_output_r56; assert_in_epsilon(7.04027535947325, worksheet.output_r56, 0.001); end
  def test_output_s56; assert_in_delta(0, (worksheet.output_s56||0), 0.001); end
  def test_output_t56; assert_in_delta(0, (worksheet.output_t56||0), 0.001); end
  def test_output_u56; assert_in_delta(0, (worksheet.output_u56||0), 0.001); end
  def test_output_v56; assert_in_delta(0, (worksheet.output_v56||0), 0.001); end
  def test_output_w56; assert_in_epsilon(12.262136986004055, worksheet.output_w56, 0.001); end
  def test_output_x56; assert_in_delta(0, (worksheet.output_x56||0), 0.001); end
  def test_output_y56; assert_in_delta(0, (worksheet.output_y56||0), 0.001); end
  def test_output_z56; assert_in_delta(0, (worksheet.output_z56||0), 0.001); end
  def test_output_aa56; assert_in_delta(0, (worksheet.output_aa56||0), 0.001); end
  def test_output_ab56; assert_in_epsilon(28.64358923708111, worksheet.output_ab56, 0.001); end
  def test_output_ak56; assert_in_epsilon(210.9266329363443, worksheet.output_ak56, 0.001); end
  def test_output_al56; assert_in_delta(0.6620808838639178, worksheet.output_al56, 0.001); end
  def test_output_am56; assert_in_delta(0.040583120837856645, worksheet.output_am56, 0.001); end
  def test_output_an56; assert_in_epsilon(3.9098822776392606, worksheet.output_an56, 0.001); end
  def test_output_ao56; assert_in_epsilon(35.283956625467845, worksheet.output_ao56, 0.001); end
  def test_output_ar56; assert_equal("Energy use", worksheet.output_ar56); end
  def test_output_as56; assert_equal("Mtep", worksheet.output_as56); end
  def test_output_at56; assert_equal("TWh", worksheet.output_at56); end
  def test_output_e57; assert_equal("Fossil fuels", worksheet.output_e57); end
  def test_output_f57; assert_equal("TWh/yr", worksheet.output_f57); end
  def test_output_h57; assert_in_epsilon(405.7389580907456, worksheet.output_h57, 0.001); end
  def test_output_i57; assert_in_delta(0, (worksheet.output_i57||0), 0.001); end
  def test_output_j57; assert_in_delta(0, (worksheet.output_j57||0), 0.001); end
  def test_output_k57; assert_in_delta(0, (worksheet.output_k57||0), 0.001); end
  def test_output_l57; assert_in_delta(0, (worksheet.output_l57||0), 0.001); end
  def test_output_m57; assert_in_epsilon(431.55958049758954, worksheet.output_m57, 0.001); end
  def test_output_n57; assert_in_delta(0, (worksheet.output_n57||0), 0.001); end
  def test_output_o57; assert_in_delta(0, (worksheet.output_o57||0), 0.001); end
  def test_output_p57; assert_in_delta(0, (worksheet.output_p57||0), 0.001); end
  def test_output_q57; assert_in_delta(0, (worksheet.output_q57||0), 0.001); end
  def test_output_r57; assert_in_epsilon(434.95687282809706, worksheet.output_r57, 0.001); end
  def test_output_s57; assert_in_delta(0, (worksheet.output_s57||0), 0.001); end
  def test_output_t57; assert_in_delta(0, (worksheet.output_t57||0), 0.001); end
  def test_output_u57; assert_in_delta(0, (worksheet.output_u57||0), 0.001); end
  def test_output_v57; assert_in_delta(0, (worksheet.output_v57||0), 0.001); end
  def test_output_w57; assert_in_epsilon(440.38888188072184, worksheet.output_w57, 0.001); end
  def test_output_x57; assert_in_delta(0, (worksheet.output_x57||0), 0.001); end
  def test_output_y57; assert_in_delta(0, (worksheet.output_y57||0), 0.001); end
  def test_output_z57; assert_in_delta(0, (worksheet.output_z57||0), 0.001); end
  def test_output_aa57; assert_in_delta(0, (worksheet.output_aa57||0), 0.001); end
  def test_output_ab57; assert_in_epsilon(417.1605591908724, worksheet.output_ab57, 0.001); end
  def test_output_ac57; assert_in_epsilon(394.90754352960556, worksheet.output_ac57, 0.001); end
  def test_output_ad57; assert_in_epsilon(322.280252841664, worksheet.output_ad57, 0.001); end
  def test_output_ae57; assert_in_epsilon(295.5577326244773, worksheet.output_ae57, 0.001); end
  def test_output_af57; assert_in_epsilon(318.7590244261844, worksheet.output_af57, 0.001); end
  def test_output_ag57; assert_in_epsilon(262.9458500601358, worksheet.output_ag57, 0.001); end
  def test_output_ah57; assert_in_epsilon(220.5943405137019, worksheet.output_ah57, 0.001); end
  def test_output_ai57; assert_in_epsilon(184.30998298073305, worksheet.output_ai57, 0.001); end
  def test_output_aj57; assert_in_epsilon(145.56721713287382, worksheet.output_aj57, 0.001); end
  def test_output_ak57; assert_in_epsilon(105.6042878225893, worksheet.output_ak57, 0.001); end
  def test_output_al57; assert_in_delta(0.33148293910565707, worksheet.output_al57, 0.001); end
  def test_output_am57; assert_in_delta(-0.032436107396039526, worksheet.output_am57, 0.001); end
  def test_output_an57; assert_in_delta(-0.7325847795189754, worksheet.output_an57, 0.001); end
  def test_output_ao57; assert_in_delta(-0.7397235692635402, worksheet.output_ao57, 0.001); end
  def test_output_e58; assert_equal("RES supply", worksheet.output_e58); end
  def test_output_f58; assert_equal("%", worksheet.output_f58); end
  def test_output_h58; assert_in_delta(0, (worksheet.output_h58||0), 0.001); end
  def test_output_i58; assert_equal(:div0, worksheet.output_i58); end
  def test_output_j58; assert_equal(:div0, worksheet.output_j58); end
  def test_output_k58; assert_equal(:div0, worksheet.output_k58); end
  def test_output_l58; assert_equal(:div0, worksheet.output_l58); end
  def test_output_m58; assert_in_delta(0, (worksheet.output_m58||0), 0.001); end
  def test_output_n58; assert_equal(:div0, worksheet.output_n58); end
  def test_output_o58; assert_equal(:div0, worksheet.output_o58); end
  def test_output_p58; assert_equal(:div0, worksheet.output_p58); end
  def test_output_q58; assert_equal(:div0, worksheet.output_q58); end
  def test_output_r58; assert_in_delta(0, (worksheet.output_r58||0), 0.001); end
  def test_output_s58; assert_equal(:div0, worksheet.output_s58); end
  def test_output_t58; assert_equal(:div0, worksheet.output_t58); end
  def test_output_u58; assert_equal(:div0, worksheet.output_u58); end
  def test_output_v58; assert_equal(:div0, worksheet.output_v58); end
  def test_output_w58; assert_in_delta(0, (worksheet.output_w58||0), 0.001); end
  def test_output_x58; assert_equal(:div0, worksheet.output_x58); end
  def test_output_y58; assert_equal(:div0, worksheet.output_y58); end
  def test_output_z58; assert_equal(:div0, worksheet.output_z58); end
  def test_output_aa58; assert_equal(:div0, worksheet.output_aa58); end
  def test_output_ab58; assert_in_delta(0, (worksheet.output_ab58||0), 0.001); end
  def test_output_ad58; assert_in_delta(0.11307914462855059, worksheet.output_ad58, 0.001); end
  def test_output_ae58; assert_in_delta(0.16366903246754697, worksheet.output_ae58, 0.001); end
  def test_output_af58; assert_in_delta(0.2432146701707347, worksheet.output_af58, 0.001); end
  def test_output_ag58; assert_in_delta(0.32183443375816567, worksheet.output_ag58, 0.001); end
  def test_output_ah58; assert_in_delta(0.3979199465023906, worksheet.output_ah58, 0.001); end
  def test_output_ai58; assert_in_delta(0.4723409773537262, worksheet.output_ai58, 0.001); end
  def test_output_aj58; assert_in_delta(0.5599204451211576, worksheet.output_aj58, 0.001); end
  def test_output_am58; assert_in_delta(0.055409481556504714, worksheet.output_am58, 0.001); end
  def test_output_an58; assert_in_epsilon(7.646486314548792, worksheet.output_an58, 0.001); end
  def test_output_ak58; assert_in_delta(0.6620808838639178, worksheet.output_ak58, 0.001); end
  def test_output_ao58; assert_equal("", worksheet.output_ao58); end
  def test_output_ar58; assert_equal("Residential and equivalent", worksheet.output_ar58); end
  def test_output_as58; assert_in_epsilon(15, worksheet.output_as58, 0.001); end
  def test_output_at58; assert_in_epsilon(174.45000000000002, worksheet.output_at58, 0.001); end
  def test_output_e59; assert_equal("Biomass used in power production", worksheet.output_e59); end
  def test_output_f59; assert_equal("TWh/yr", worksheet.output_f59); end
  def test_output_h59; assert_in_delta(0, (worksheet.output_h59||0), 0.001); end
  def test_output_m59; assert_in_delta(0, (worksheet.output_m59||0), 0.001); end
  def test_output_r59; assert_in_delta(0, (worksheet.output_r59||0), 0.001); end
  def test_output_w59; assert_in_delta(0, (worksheet.output_w59||0), 0.001); end
  def test_output_ab59; assert_in_delta(0, (worksheet.output_ab59||0), 0.001); end
  def test_output_ac59; assert_in_epsilon(10.970100135284348, worksheet.output_ac59, 0.001); end
  def test_output_ad59; assert_in_epsilon(14.627426932340017, worksheet.output_ad59, 0.001); end
  def test_output_ae59; assert_in_epsilon(18.712751129441877, worksheet.output_ae59, 0.001); end
  def test_output_af59; assert_in_epsilon(21.729898424597337, worksheet.output_af59, 0.001); end
  def test_output_ag59; assert_in_epsilon(24.24695335122997, worksheet.output_ag59, 0.001); end
  def test_output_ah59; assert_in_epsilon(26.74795763875322, worksheet.output_ah59, 0.001); end
  def test_output_ai59; assert_in_epsilon(29.232911287167088, worksheet.output_ai59, 0.001); end
  def test_output_aj59; assert_in_epsilon(31.693788976916878, worksheet.output_aj59, 0.001); end
  def test_output_ak59; assert_in_epsilon(34.154666666666664, worksheet.output_ak59, 0.001); end
  def test_output_am59; assert_in_delta(0.028800073207081667, worksheet.output_am59, 0.001); end
  def test_output_an59; assert_in_epsilon(2.1134325343860105, worksheet.output_an59, 0.001); end
  def test_output_ao59; assert_equal("", worksheet.output_ao59); end
  def test_output_ar59; assert_equal("Industry", worksheet.output_ar59); end
  def test_output_as59; assert_in_epsilon(11.5, worksheet.output_as59, 0.001); end
  def test_output_at59; assert_in_epsilon(133.745, worksheet.output_at59, 0.001); end
  def test_output_e60; assert_equal("RES share in final energy demand", worksheet.output_e60); end
  def test_output_f60; assert_equal("%", worksheet.output_f60); end
  def test_output_g60; assert_equal("! primary RES electricity supply + env heat + biomass for heat + effective biomass-based electricity production", worksheet.output_g60); end
  def test_output_h60; assert_in_delta(0, (worksheet.output_h60||0), 0.001); end
  def test_output_i60; assert_equal(:value, worksheet.output_i60); end
  def test_output_j60; assert_equal(:value, worksheet.output_j60); end
  def test_output_k60; assert_equal(:value, worksheet.output_k60); end
  def test_output_l60; assert_equal(:value, worksheet.output_l60); end
  def test_output_m60; assert_in_delta(0, (worksheet.output_m60||0), 0.001); end
  def test_output_n60; assert_equal(:value, worksheet.output_n60); end
  def test_output_o60; assert_equal(:value, worksheet.output_o60); end
  def test_output_p60; assert_equal(:value, worksheet.output_p60); end
  def test_output_q60; assert_equal(:value, worksheet.output_q60); end
  def test_output_r60; assert_in_delta(0, (worksheet.output_r60||0), 0.001); end
  def test_output_s60; assert_equal(:value, worksheet.output_s60); end
  def test_output_t60; assert_equal(:value, worksheet.output_t60); end
  def test_output_u60; assert_equal(:value, worksheet.output_u60); end
  def test_output_v60; assert_equal(:value, worksheet.output_v60); end
  def test_output_w60; assert_in_delta(0, (worksheet.output_w60||0), 0.001); end
  def test_output_x60; assert_equal(:value, worksheet.output_x60); end
  def test_output_y60; assert_equal(:value, worksheet.output_y60); end
  def test_output_z60; assert_equal(:value, worksheet.output_z60); end
  def test_output_aa60; assert_equal(:value, worksheet.output_aa60); end
  def test_output_ab60; assert_in_delta(0, (worksheet.output_ab60||0), 0.001); end
  def test_output_ac36; assert_in_delta(0.8843048692195494, worksheet.output_ac36, 0.001); end
  def test_output_ac40; assert_in_epsilon(18.346242662072274, worksheet.output_ac40, 0.001); end
  def test_output_ac37; assert_in_epsilon(20.60678535510175, worksheet.output_ac37, 0.001); end
  def test_output_ac38; assert_in_delta(0.22, worksheet.output_ac38, 0.001); end
  def test_output_ac39; assert_in_epsilon(20.826785355101748, worksheet.output_ac39, 0.001); end
  def test_output_ac41; assert_in_epsilon(39.17302801717402, worksheet.output_ac41, 0.001); end
  def test_output_ac60; assert_in_delta(0.08517586614142966, worksheet.output_ac60, 0.001); end
  def test_output_ad21; assert_in_epsilon(408.4373158145511, worksheet.output_ad21, 0.001); end
  def test_output_ad60; assert_in_delta(0.12316207565882187, worksheet.output_ad60, 0.001); end
  def test_output_ae60; assert_in_delta(0.1803576927206152, worksheet.output_ae60, 0.001); end
  def test_output_af21; assert_in_epsilon(374.0543743138278, worksheet.output_af21, 0.001); end
  def test_output_af60; assert_in_delta(0.23798989367038484, worksheet.output_af60, 0.001); end
  def test_output_ag21; assert_in_epsilon(344.28273844133594, worksheet.output_ag21, 0.001); end
  def test_output_ag60; assert_in_delta(0.3202321099287048, worksheet.output_ag60, 0.001); end
  def test_output_ah21; assert_in_epsilon(326.7189929878058, worksheet.output_ah21, 0.001); end
  def test_output_ah60; assert_in_delta(0.39812937394981374, worksheet.output_ah60, 0.001); end
  def test_output_ai21; assert_in_epsilon(312.6610105673934, worksheet.output_ai21, 0.001); end
  def test_output_ai60; assert_in_delta(0.4742292758645531, worksheet.output_ai60, 0.001); end
  def test_output_aj21; assert_in_epsilon(299.92954550842967, worksheet.output_aj21, 0.001); end
  def test_output_aj60; assert_in_delta(0.559782441549691, worksheet.output_aj60, 0.001); end
  def test_output_am60; assert_in_delta(0.05231763748017482, worksheet.output_am60, 0.001); end
  def test_output_an60; assert_in_epsilon(6.6890729255165, worksheet.output_an60, 0.001); end
  def test_output_ak60; assert_in_delta(0.6549234462554844, worksheet.output_ak60, 0.001); end
  def test_output_ao60; assert_equal("", worksheet.output_ao60); end
  def test_output_ar60; assert_equal("Transport", worksheet.output_ar60); end
  def test_output_as60; assert_in_epsilon(10.4, worksheet.output_as60, 0.001); end
  def test_output_at60; assert_in_epsilon(120.95200000000001, worksheet.output_at60, 0.001); end
  def test_output_e61; assert_equal("RES supply in final energy demand", worksheet.output_e61); end
  def test_output_f61; assert_equal("%", worksheet.output_f61); end
  def test_output_h61; assert_in_delta(0, (worksheet.output_h61||0), 0.001); end
  def test_output_i61; assert_equal(:div0, worksheet.output_i61); end
  def test_output_j61; assert_equal(:div0, worksheet.output_j61); end
  def test_output_k61; assert_equal(:div0, worksheet.output_k61); end
  def test_output_l61; assert_equal(:div0, worksheet.output_l61); end
  def test_output_m61; assert_in_delta(0, (worksheet.output_m61||0), 0.001); end
  def test_output_n61; assert_equal(:div0, worksheet.output_n61); end
  def test_output_o61; assert_equal(:div0, worksheet.output_o61); end
  def test_output_p61; assert_equal(:div0, worksheet.output_p61); end
  def test_output_q61; assert_equal(:div0, worksheet.output_q61); end
  def test_output_r61; assert_in_delta(0, (worksheet.output_r61||0), 0.001); end
  def test_output_s61; assert_equal(:div0, worksheet.output_s61); end
  def test_output_t61; assert_equal(:div0, worksheet.output_t61); end
  def test_output_u61; assert_equal(:div0, worksheet.output_u61); end
  def test_output_v61; assert_equal(:div0, worksheet.output_v61); end
  def test_output_w61; assert_in_delta(0, (worksheet.output_w61||0), 0.001); end
  def test_output_x61; assert_equal(:div0, worksheet.output_x61); end
  def test_output_y61; assert_equal(:div0, worksheet.output_y61); end
  def test_output_z61; assert_equal(:div0, worksheet.output_z61); end
  def test_output_aa61; assert_equal(:div0, worksheet.output_aa61); end
  def test_output_ab61; assert_in_delta(0, (worksheet.output_ab61||0), 0.001); end
  def test_output_ac56; assert_in_epsilon(42.95961104748946, worksheet.output_ac56, 0.001); end
  def test_output_ac61; assert_in_delta(0.1023508912270388, worksheet.output_ac61, 0.001); end
  def test_output_ad56; assert_in_epsilon(59.78039937450646, worksheet.output_ad56, 0.001); end
  def test_output_ad61; assert_in_delta(0.14636370639956278, worksheet.output_ad61, 0.001); end
  def test_output_ae56; assert_in_epsilon(82.52215796853395, worksheet.output_ae56, 0.001); end
  def test_output_ae61; assert_in_delta(0.21089581272686542, worksheet.output_ae61, 0.001); end
  def test_output_af56; assert_in_epsilon(102.69544014555981, worksheet.output_af56, 0.001); end
  def test_output_af61; assert_in_delta(0.27454682312951484, worksheet.output_af61, 0.001); end
  def test_output_ag56; assert_in_epsilon(125.283498820864, worksheet.output_ag56, 0.001); end
  def test_output_ag61; assert_in_delta(0.3638971253338386, worksheet.output_ag61, 0.001); end
  def test_output_ah56; assert_in_epsilon(146.66016187177573, worksheet.output_ah56, 0.001); end
  def test_output_ah61; assert_in_delta(0.4488877751813148, worksheet.output_ah61, 0.001); end
  def test_output_ai56; assert_in_epsilon(166.39740963049795, worksheet.output_ai56, 0.001); end
  def test_output_ai61; assert_in_delta(0.5321975046665799, worksheet.output_ai61, 0.001); end
  def test_output_aj56; assert_in_epsilon(187.54544244328642, worksheet.output_aj56, 0.001); end
  def test_output_aj61; assert_in_delta(0.6252983250628616, worksheet.output_aj61, 0.001); end
  def test_output_am61; assert_in_delta(0.05027050996061644, worksheet.output_am61, 0.001); end
  def test_output_an61; assert_in_epsilon(6.11290244702225, worksheet.output_an61, 0.001); end
  def test_output_ak61; assert_in_delta(0.7280119046637125, worksheet.output_ak61, 0.001); end
  def test_output_ao61; assert_equal("", worksheet.output_ao61); end
  def test_output_ar61; assert_equal("Non-energetic uses", worksheet.output_ar61); end
  def test_output_as61; assert_in_epsilon(7.2, worksheet.output_as61, 0.001); end
  def test_output_at61; assert_in_epsilon(83.736, worksheet.output_at61, 0.001); end
  def test_output_e62; assert_equal("SHOULD BE O", worksheet.output_e62); end
  def test_output_f62; assert_equal("%", worksheet.output_f62); end
  def test_output_h62; assert_in_delta(0, (worksheet.output_h62||0), 0.001); end
  def test_output_i62; assert_in_delta(0, (worksheet.output_i62||0), 0.001); end
  def test_output_j62; assert_in_delta(0, (worksheet.output_j62||0), 0.001); end
  def test_output_k62; assert_in_delta(0, (worksheet.output_k62||0), 0.001); end
  def test_output_l62; assert_in_delta(0, (worksheet.output_l62||0), 0.001); end
  def test_output_m62; assert_in_delta(0, (worksheet.output_m62||0), 0.001); end
  def test_output_n62; assert_in_delta(0, (worksheet.output_n62||0), 0.001); end
  def test_output_o62; assert_in_delta(0, (worksheet.output_o62||0), 0.001); end
  def test_output_p62; assert_in_delta(0, (worksheet.output_p62||0), 0.001); end
  def test_output_q62; assert_in_delta(0, (worksheet.output_q62||0), 0.001); end
  def test_output_r62; assert_in_delta(0, (worksheet.output_r62||0), 0.001); end
  def test_output_s62; assert_in_delta(0, (worksheet.output_s62||0), 0.001); end
  def test_output_t62; assert_in_delta(0, (worksheet.output_t62||0), 0.001); end
  def test_output_u62; assert_in_delta(0, (worksheet.output_u62||0), 0.001); end
  def test_output_v62; assert_in_delta(0, (worksheet.output_v62||0), 0.001); end
  def test_output_w62; assert_in_delta(0, (worksheet.output_w62||0), 0.001); end
  def test_output_x62; assert_in_delta(0, (worksheet.output_x62||0), 0.001); end
  def test_output_y62; assert_in_delta(0, (worksheet.output_y62||0), 0.001); end
  def test_output_z62; assert_in_delta(0, (worksheet.output_z62||0), 0.001); end
  def test_output_aa62; assert_in_delta(0, (worksheet.output_aa62||0), 0.001); end
  def test_output_ab62; assert_in_delta(0, (worksheet.output_ab62||0), 0.001); end
  def test_output_ac62; assert_in_delta(0, (worksheet.output_ac62||0), 0.001); end
  def test_output_ad62; assert_in_delta(0, (worksheet.output_ad62||0), 0.001); end
  def test_output_ae62; assert_in_delta(0, (worksheet.output_ae62||0), 0.001); end
  def test_output_af62; assert_in_delta(0, (worksheet.output_af62||0), 0.001); end
  def test_output_ag62; assert_in_delta(0, (worksheet.output_ag62||0), 0.001); end
  def test_output_ah62; assert_in_delta(0, (worksheet.output_ah62||0), 0.001); end
  def test_output_ai62; assert_in_delta(0, (worksheet.output_ai62||0), 0.001); end
  def test_output_aj62; assert_in_delta(0, (worksheet.output_aj62||0), 0.001); end
  def test_output_am62; assert_equal("", worksheet.output_am62); end
  def test_output_an62; assert_equal("", worksheet.output_an62); end
  def test_output_ak62; assert_in_delta(0, (worksheet.output_ak62||0), 0.001); end
  def test_output_ao62; assert_equal("", worksheet.output_ao62); end
  def test_output_ar62; assert_equal("Total", worksheet.output_ar62); end
  def test_output_as62; assert_in_epsilon(44.1, worksheet.output_as62, 0.001); end
  def test_output_at62; assert_in_epsilon(512.883, worksheet.output_at62, 0.001); end
  def test_output_h63; assert_in_delta(0, (worksheet.output_h63||0), 0.001); end
  def test_output_m63; assert_in_delta(0, (worksheet.output_m63||0), 0.001); end
  def test_output_r63; assert_in_delta(0, (worksheet.output_r63||0), 0.001); end
  def test_output_w63; assert_in_delta(0, (worksheet.output_w63||0), 0.001); end
  def test_output_ab63; assert_in_delta(0, (worksheet.output_ab63||0), 0.001); end
  def test_output_ae63; assert_in_delta(0.16366903246754697, worksheet.output_ae63, 0.001); end
  def test_output_am63; assert_equal("", worksheet.output_am63); end
  def test_output_an63; assert_equal("", worksheet.output_an63); end
  def test_output_ao63; assert_equal("", worksheet.output_ao63); end
  def test_output_b64; assert_equal("Conversion losses, distribution, and own use", worksheet.output_b64); end
  def test_output_h64; assert_in_delta(0, (worksheet.output_h64||0), 0.001); end
  def test_output_m64; assert_in_delta(0, (worksheet.output_m64||0), 0.001); end
  def test_output_r64; assert_in_delta(0, (worksheet.output_r64||0), 0.001); end
  def test_output_w64; assert_in_delta(0, (worksheet.output_w64||0), 0.001); end
  def test_output_ab64; assert_in_delta(0, (worksheet.output_ab64||0), 0.001); end
  def test_output_am64; assert_equal("", worksheet.output_am64); end
  def test_output_an64; assert_equal("", worksheet.output_an64); end
  def test_output_ao64; assert_equal("", worksheet.output_ao64); end
  def test_output_c65; assert_equal("X.01", worksheet.output_c65); end
  def test_output_e65; assert_equal("Conversion losses", worksheet.output_e65); end
  def test_output_f65; assert_equal("TWh/yr", worksheet.output_f65); end
  def test_output_h65; assert_in_delta(0, (worksheet.output_h65||0), 0.001); end
  def test_output_m65; assert_in_delta(0, (worksheet.output_m65||0), 0.001); end
  def test_output_r65; assert_in_delta(0, (worksheet.output_r65||0), 0.001); end
  def test_output_w65; assert_in_delta(0, (worksheet.output_w65||0), 0.001); end
  def test_output_ab65; assert_in_delta(0, (worksheet.output_ab65||0), 0.001); end
  def test_output_ac65; assert_in_epsilon(129.06130464962078, worksheet.output_ac65, 0.001); end
  def test_output_ad65; assert_in_epsilon(108.1896526653142, worksheet.output_ad65, 0.001); end
  def test_output_ae65; assert_in_epsilon(101.05414426134351, worksheet.output_ae65, 0.001); end
  def test_output_af65; assert_in_epsilon(39.64429549338456, worksheet.output_af65, 0.001); end
  def test_output_ag65; assert_in_epsilon(36.40088560522227, worksheet.output_ag65, 0.001); end
  def test_output_ah65; assert_in_epsilon(33.202455618372255, worksheet.output_ah65, 0.001); end
  def test_output_ai65; assert_in_epsilon(30.908664455047866, worksheet.output_ai65, 0.001); end
  def test_output_aj65; assert_in_epsilon(26.332479968549492, worksheet.output_aj65, 0.001); end
  def test_output_ak65; assert_in_epsilon(20.171892096032796, worksheet.output_ak65, 0.001); end
  def test_output_am65; assert_in_delta(-0.04533991534409321, worksheet.output_am65, 0.001); end
  def test_output_an65; assert_in_delta(-0.8437030204305155, worksheet.output_an65, 0.001); end
  def test_output_ao65; assert_equal("", worksheet.output_ao65); end
  def test_output_c66; assert_equal("X.02", worksheet.output_c66); end
  def test_output_e66; assert_equal("Distribution losses and own use", worksheet.output_e66); end
  def test_output_f66; assert_equal("TWh/yr", worksheet.output_f66); end
  def test_output_h66; assert_in_delta(0, (worksheet.output_h66||0), 0.001); end
  def test_output_m66; assert_in_delta(0, (worksheet.output_m66||0), 0.001); end
  def test_output_r66; assert_in_delta(0, (worksheet.output_r66||0), 0.001); end
  def test_output_w66; assert_in_delta(0, (worksheet.output_w66||0), 0.001); end
  def test_output_ab66; assert_in_delta(0, (worksheet.output_ab66||0), 0.001); end
  def test_output_ac66; assert_in_epsilon(10.626274065727301, worksheet.output_ac66, 0.001); end
  def test_output_ad66; assert_in_epsilon(10.415380367546568, worksheet.output_ad66, 0.001); end
  def test_output_ae66; assert_in_epsilon(10.236385902524855, worksheet.output_ae66, 0.001); end
  def test_output_af66; assert_in_epsilon(6.926390778226995, worksheet.output_af66, 0.001); end
  def test_output_ag66; assert_in_epsilon(6.979643192551919, worksheet.output_ag66, 0.001); end
  def test_output_ah66; assert_in_epsilon(7.030609082861046, worksheet.output_ah66, 0.001); end
  def test_output_ai66; assert_in_epsilon(7.09918735729064, worksheet.output_ai66, 0.001); end
  def test_output_aj66; assert_in_epsilon(7.076444474558574, worksheet.output_aj66, 0.001); end
  def test_output_ak66; assert_in_epsilon(7.068761444912441, worksheet.output_ak66, 0.001); end
  def test_output_am66; assert_in_delta(-0.01013935510426256, worksheet.output_am66, 0.001); end
  def test_output_an66; assert_in_delta(-0.334784572542584, worksheet.output_an66, 0.001); end
  def test_output_ao66; assert_equal("", worksheet.output_ao66); end
  def test_output_e67; assert_equal("Supply net of losses", worksheet.output_e67); end
  def test_output_f67; assert_equal("TWh/yr", worksheet.output_f67); end
  def test_output_h67; assert_in_delta(0, (worksheet.output_h67||0), 0.001); end
  def test_output_m67; assert_in_delta(0, (worksheet.output_m67||0), 0.001); end
  def test_output_r67; assert_in_delta(0, (worksheet.output_r67||0), 0.001); end
  def test_output_w67; assert_in_delta(0, (worksheet.output_w67||0), 0.001); end
  def test_output_ab67; assert_in_delta(0, (worksheet.output_ab67||0), 0.001); end
  def test_output_ad67; assert_in_epsilon(410.05477926830963, worksheet.output_ad67, 0.001); end
  def test_output_ae67; assert_in_epsilon(392.91088609914283, worksheet.output_ae67, 0.001); end
  def test_output_af67; assert_in_epsilon(375.67127830013266, worksheet.output_af67, 0.001); end
  def test_output_ag67; assert_in_epsilon(345.8988200832256, worksheet.output_ag67, 0.001); end
  def test_output_ah67; assert_in_epsilon(328.33393768424435, worksheet.output_ah67, 0.001); end
  def test_output_ai67; assert_in_epsilon(314.2745407988925, worksheet.output_ai67, 0.001); end
  def test_output_aj67; assert_in_epsilon(301.5412351330522, worksheet.output_aj67, 0.001); end
  def test_output_am67; assert_in_delta(-0.009181619681886133, worksheet.output_am67, 0.001); end
  def test_output_an67; assert_in_delta(-0.3085477769851509, worksheet.output_an67, 0.001); end
  def test_output_ak67; assert_in_epsilon(291.34071329352986, worksheet.output_ak67, 0.001); end
  def test_output_ao67; assert_equal("", worksheet.output_ao67); end
  def test_output_h68; assert_in_delta(0, (worksheet.output_h68||0), 0.001); end
  def test_output_m68; assert_in_delta(0, (worksheet.output_m68||0), 0.001); end
  def test_output_r68; assert_in_delta(0, (worksheet.output_r68||0), 0.001); end
  def test_output_w68; assert_in_delta(0, (worksheet.output_w68||0), 0.001); end
  def test_output_ab68; assert_in_delta(0, (worksheet.output_ab68||0), 0.001); end
  def test_output_am68; assert_equal("", worksheet.output_am68); end
  def test_output_an68; assert_equal("", worksheet.output_an68); end
  def test_output_ao68; assert_equal("", worksheet.output_ao68); end
  def test_output_b69; assert_equal("Supply / demand not accounted for", worksheet.output_b69); end
  def test_output_h69; assert_in_delta(0, (worksheet.output_h69||0), 0.001); end
  def test_output_m69; assert_in_delta(0, (worksheet.output_m69||0), 0.001); end
  def test_output_r69; assert_in_delta(0, (worksheet.output_r69||0), 0.001); end
  def test_output_w69; assert_in_delta(0, (worksheet.output_w69||0), 0.001); end
  def test_output_ab69; assert_in_delta(0, (worksheet.output_ab69||0), 0.001); end
  def test_output_am69; assert_equal("", worksheet.output_am69); end
  def test_output_an69; assert_equal("", worksheet.output_an69); end
  def test_output_ao69; assert_equal("", worksheet.output_ao69); end
  def test_output_c70; assert_equal("C.01", worksheet.output_c70); end
  def test_output_e70; assert_equal("Coal and fossil waste", worksheet.output_e70); end
  def test_output_f70; assert_equal("TWh/yr", worksheet.output_f70); end
  def test_output_h70; assert_in_delta(0, (worksheet.output_h70||0), 0.001); end
  def test_output_m70; assert_in_delta(0, (worksheet.output_m70||0), 0.001); end
  def test_output_r70; assert_in_delta(0, (worksheet.output_r70||0), 0.001); end
  def test_output_w70; assert_in_delta(0, (worksheet.output_w70||0), 0.001); end
  def test_output_ab70; assert_in_delta(0, (worksheet.output_ab70||0), 0.001); end
  def test_output_ac70; assert_in_delta(-1.6930901125533637e-15, worksheet.output_ac70, 0.001); end
  def test_output_ad70; assert_in_delta(-3.7470027081099033e-16, worksheet.output_ad70, 0.001); end
  def test_output_ae70; assert_in_delta(3.2335245592207684e-15, worksheet.output_ae70, 0.001); end
  def test_output_af70; assert_in_delta(-1.2490009027033011e-15, worksheet.output_af70, 0.001); end
  def test_output_ag70; assert_in_delta(-1.249000902703301e-16, worksheet.output_ag70, 0.001); end
  def test_output_ah70; assert_in_delta(3.885780586188048e-16, worksheet.output_ah70, 0.001); end
  def test_output_ai70; assert_in_delta(6.245004513516506e-17, worksheet.output_ai70, 0.001); end
  def test_output_aj70; assert_in_delta(0, (worksheet.output_aj70||0), 0.001); end
  def test_output_ak70; assert_in_delta(0, (worksheet.output_ak70||0), 0.001); end
  def test_output_am70; assert_in_delta(-1, worksheet.output_am70, 0.001); end
  def test_output_an70; assert_in_delta(-1, worksheet.output_an70, 0.001); end
  def test_output_ao70; assert_equal("", worksheet.output_ao70); end
  def test_output_c71; assert_equal("C.02", worksheet.output_c71); end
  def test_output_e71; assert_equal("Oil and petroleum products", worksheet.output_e71); end
  def test_output_f71; assert_equal("TWh/yr", worksheet.output_f71); end
  def test_output_h71; assert_in_delta(0, (worksheet.output_h71||0), 0.001); end
  def test_output_m71; assert_in_delta(0, (worksheet.output_m71||0), 0.001); end
  def test_output_r71; assert_in_delta(0, (worksheet.output_r71||0), 0.001); end
  def test_output_w71; assert_in_delta(0, (worksheet.output_w71||0), 0.001); end
  def test_output_ab71; assert_in_delta(0, (worksheet.output_ab71||0), 0.001); end
  def test_output_ac71; assert_in_delta(0, (worksheet.output_ac71||0), 0.001); end
  def test_output_ad71; assert_in_delta(0, (worksheet.output_ad71||0), 0.001); end
  def test_output_ae71; assert_in_delta(0, (worksheet.output_ae71||0), 0.001); end
  def test_output_af71; assert_in_delta(0, (worksheet.output_af71||0), 0.001); end
  def test_output_ag71; assert_in_delta(0, (worksheet.output_ag71||0), 0.001); end
  def test_output_ah71; assert_in_delta(0, (worksheet.output_ah71||0), 0.001); end
  def test_output_ai71; assert_in_delta(0, (worksheet.output_ai71||0), 0.001); end
  def test_output_aj71; assert_in_delta(0, (worksheet.output_aj71||0), 0.001); end
  def test_output_ak71; assert_in_delta(0, (worksheet.output_ak71||0), 0.001); end
  def test_output_am71; assert_equal("", worksheet.output_am71); end
  def test_output_an71; assert_equal("", worksheet.output_an71); end
  def test_output_ao71; assert_equal("", worksheet.output_ao71); end
  def test_output_c72; assert_equal("C.03", worksheet.output_c72); end
  def test_output_e72; assert_equal("Natural gas", worksheet.output_e72); end
  def test_output_f72; assert_equal("TWh/yr", worksheet.output_f72); end
  def test_output_h72; assert_in_delta(0, (worksheet.output_h72||0), 0.001); end
  def test_output_m72; assert_in_delta(0, (worksheet.output_m72||0), 0.001); end
  def test_output_r72; assert_in_delta(0, (worksheet.output_r72||0), 0.001); end
  def test_output_w72; assert_in_delta(0, (worksheet.output_w72||0), 0.001); end
  def test_output_ab72; assert_in_delta(0, (worksheet.output_ab72||0), 0.001); end
  def test_output_ac72; assert_in_delta(0, (worksheet.output_ac72||0), 0.001); end
  def test_output_ad72; assert_in_delta(0, (worksheet.output_ad72||0), 0.001); end
  def test_output_ae72; assert_in_delta(0, (worksheet.output_ae72||0), 0.001); end
  def test_output_af72; assert_in_delta(0, (worksheet.output_af72||0), 0.001); end
  def test_output_ag72; assert_in_delta(0, (worksheet.output_ag72||0), 0.001); end
  def test_output_ah72; assert_in_delta(0, (worksheet.output_ah72||0), 0.001); end
  def test_output_ai72; assert_in_delta(0, (worksheet.output_ai72||0), 0.001); end
  def test_output_aj72; assert_in_delta(0, (worksheet.output_aj72||0), 0.001); end
  def test_output_ak72; assert_in_delta(0, (worksheet.output_ak72||0), 0.001); end
  def test_output_am72; assert_equal("", worksheet.output_am72); end
  def test_output_an72; assert_equal("", worksheet.output_an72); end
  def test_output_ao72; assert_equal("", worksheet.output_ao72); end
  def test_output_c73; assert_equal("V.03", worksheet.output_c73); end
  def test_output_e73; assert_equal("Solid hydrocarbons", worksheet.output_e73); end
  def test_output_f73; assert_equal("TWh/yr", worksheet.output_f73); end
  def test_output_h73; assert_in_delta(0, (worksheet.output_h73||0), 0.001); end
  def test_output_m73; assert_in_delta(0, (worksheet.output_m73||0), 0.001); end
  def test_output_r73; assert_in_delta(0, (worksheet.output_r73||0), 0.001); end
  def test_output_w73; assert_in_delta(0, (worksheet.output_w73||0), 0.001); end
  def test_output_ab73; assert_in_delta(0, (worksheet.output_ab73||0), 0.001); end
  def test_output_ac73; assert_in_delta(0, (worksheet.output_ac73||0), 0.001); end
  def test_output_ad73; assert_in_delta(0, (worksheet.output_ad73||0), 0.001); end
  def test_output_ae73; assert_in_delta(0, (worksheet.output_ae73||0), 0.001); end
  def test_output_af73; assert_in_delta(0, (worksheet.output_af73||0), 0.001); end
  def test_output_ag73; assert_in_delta(0, (worksheet.output_ag73||0), 0.001); end
  def test_output_ah73; assert_in_delta(0, (worksheet.output_ah73||0), 0.001); end
  def test_output_ai73; assert_in_delta(0, (worksheet.output_ai73||0), 0.001); end
  def test_output_aj73; assert_in_delta(0, (worksheet.output_aj73||0), 0.001); end
  def test_output_ak73; assert_in_delta(0, (worksheet.output_ak73||0), 0.001); end
  def test_output_am73; assert_equal("", worksheet.output_am73); end
  def test_output_an73; assert_equal("", worksheet.output_an73); end
  def test_output_ao73; assert_equal("", worksheet.output_ao73); end
  def test_output_c74; assert_equal("V.04", worksheet.output_c74); end
  def test_output_e74; assert_equal("Liquid hydrocarbons", worksheet.output_e74); end
  def test_output_f74; assert_equal("TWh/yr", worksheet.output_f74); end
  def test_output_h74; assert_in_delta(0, (worksheet.output_h74||0), 0.001); end
  def test_output_m74; assert_in_delta(0, (worksheet.output_m74||0), 0.001); end
  def test_output_r74; assert_in_delta(0, (worksheet.output_r74||0), 0.001); end
  def test_output_w74; assert_in_delta(0, (worksheet.output_w74||0), 0.001); end
  def test_output_ab74; assert_in_delta(0, (worksheet.output_ab74||0), 0.001); end
  def test_output_ac74; assert_in_delta(0, (worksheet.output_ac74||0), 0.001); end
  def test_output_ad74; assert_in_delta(0, (worksheet.output_ad74||0), 0.001); end
  def test_output_ae74; assert_in_delta(0, (worksheet.output_ae74||0), 0.001); end
  def test_output_af74; assert_in_delta(0, (worksheet.output_af74||0), 0.001); end
  def test_output_ag74; assert_in_delta(0, (worksheet.output_ag74||0), 0.001); end
  def test_output_ah74; assert_in_delta(0, (worksheet.output_ah74||0), 0.001); end
  def test_output_ai74; assert_in_delta(0, (worksheet.output_ai74||0), 0.001); end
  def test_output_aj74; assert_in_delta(0, (worksheet.output_aj74||0), 0.001); end
  def test_output_ak74; assert_in_delta(0, (worksheet.output_ak74||0), 0.001); end
  def test_output_am74; assert_equal("", worksheet.output_am74); end
  def test_output_an74; assert_equal("", worksheet.output_an74); end
  def test_output_ao74; assert_equal("", worksheet.output_ao74); end
  def test_output_c75; assert_equal("V.05", worksheet.output_c75); end
  def test_output_e75; assert_equal("Gaseous hydrocarbons", worksheet.output_e75); end
  def test_output_f75; assert_equal("TWh/yr", worksheet.output_f75); end
  def test_output_h75; assert_in_delta(0, (worksheet.output_h75||0), 0.001); end
  def test_output_m75; assert_in_delta(0, (worksheet.output_m75||0), 0.001); end
  def test_output_r75; assert_in_delta(0, (worksheet.output_r75||0), 0.001); end
  def test_output_w75; assert_in_delta(0, (worksheet.output_w75||0), 0.001); end
  def test_output_ab75; assert_in_delta(0, (worksheet.output_ab75||0), 0.001); end
  def test_output_ac75; assert_in_delta(0, (worksheet.output_ac75||0), 0.001); end
  def test_output_ad75; assert_in_delta(0, (worksheet.output_ad75||0), 0.001); end
  def test_output_ae75; assert_in_delta(0, (worksheet.output_ae75||0), 0.001); end
  def test_output_af75; assert_in_delta(0, (worksheet.output_af75||0), 0.001); end
  def test_output_ag75; assert_in_delta(0, (worksheet.output_ag75||0), 0.001); end
  def test_output_ah75; assert_in_delta(0, (worksheet.output_ah75||0), 0.001); end
  def test_output_ai75; assert_in_delta(0, (worksheet.output_ai75||0), 0.001); end
  def test_output_aj75; assert_in_delta(0, (worksheet.output_aj75||0), 0.001); end
  def test_output_ak75; assert_in_delta(0, (worksheet.output_ak75||0), 0.001); end
  def test_output_am75; assert_equal("", worksheet.output_am75); end
  def test_output_an75; assert_equal("", worksheet.output_an75); end
  def test_output_ao75; assert_equal("", worksheet.output_ao75); end
  def test_output_c76; assert_equal("V.06", worksheet.output_c76); end
  def test_output_e76; assert_equal("Blast furnace gas", worksheet.output_e76); end
  def test_output_f76; assert_equal("TWh/yr", worksheet.output_f76); end
  def test_output_h76; assert_in_delta(0, (worksheet.output_h76||0), 0.001); end
  def test_output_m76; assert_in_delta(0, (worksheet.output_m76||0), 0.001); end
  def test_output_r76; assert_in_delta(0, (worksheet.output_r76||0), 0.001); end
  def test_output_w76; assert_in_delta(0, (worksheet.output_w76||0), 0.001); end
  def test_output_ab76; assert_in_delta(0, (worksheet.output_ab76||0), 0.001); end
  def test_output_ac76; assert_in_delta(0, (worksheet.output_ac76||0), 0.001); end
  def test_output_ad76; assert_in_delta(0, (worksheet.output_ad76||0), 0.001); end
  def test_output_ae76; assert_in_delta(0, (worksheet.output_ae76||0), 0.001); end
  def test_output_af76; assert_in_delta(0, (worksheet.output_af76||0), 0.001); end
  def test_output_ag76; assert_in_delta(0, (worksheet.output_ag76||0), 0.001); end
  def test_output_ah76; assert_in_delta(0, (worksheet.output_ah76||0), 0.001); end
  def test_output_ai76; assert_in_delta(0, (worksheet.output_ai76||0), 0.001); end
  def test_output_aj76; assert_in_delta(0, (worksheet.output_aj76||0), 0.001); end
  def test_output_ak76; assert_in_delta(0, (worksheet.output_ak76||0), 0.001); end
  def test_output_am76; assert_equal("", worksheet.output_am76); end
  def test_output_an76; assert_equal("", worksheet.output_an76); end
  def test_output_ao76; assert_equal("", worksheet.output_ao76); end
  def test_output_c77; assert_equal("V.08", worksheet.output_c77); end
  def test_output_e77; assert_equal("Edible biomass", worksheet.output_e77); end
  def test_output_f77; assert_equal("TWh/yr", worksheet.output_f77); end
  def test_output_h77; assert_in_delta(0, (worksheet.output_h77||0), 0.001); end
  def test_output_m77; assert_in_delta(0, (worksheet.output_m77||0), 0.001); end
  def test_output_r77; assert_in_delta(0, (worksheet.output_r77||0), 0.001); end
  def test_output_w77; assert_in_delta(0, (worksheet.output_w77||0), 0.001); end
  def test_output_ab77; assert_in_delta(0, (worksheet.output_ab77||0), 0.001); end
  def test_output_ac77; assert_in_delta(0, (worksheet.output_ac77||0), 0.001); end
  def test_output_ad77; assert_in_delta(0, (worksheet.output_ad77||0), 0.001); end
  def test_output_ae77; assert_in_delta(0, (worksheet.output_ae77||0), 0.001); end
  def test_output_af77; assert_in_delta(0, (worksheet.output_af77||0), 0.001); end
  def test_output_ag77; assert_in_delta(0, (worksheet.output_ag77||0), 0.001); end
  def test_output_ah77; assert_in_delta(0, (worksheet.output_ah77||0), 0.001); end
  def test_output_ai77; assert_in_delta(0, (worksheet.output_ai77||0), 0.001); end
  def test_output_aj77; assert_in_delta(0, (worksheet.output_aj77||0), 0.001); end
  def test_output_ak77; assert_in_delta(0, (worksheet.output_ak77||0), 0.001); end
  def test_output_am77; assert_equal("", worksheet.output_am77); end
  def test_output_an77; assert_equal("", worksheet.output_an77); end
  def test_output_ao77; assert_equal("", worksheet.output_ao77); end
  def test_output_c78; assert_equal("V.07", worksheet.output_c78); end
  def test_output_e78; assert_equal("Heat transport", worksheet.output_e78); end
  def test_output_f78; assert_equal("TWh/yr", worksheet.output_f78); end
  def test_output_h78; assert_in_delta(0, (worksheet.output_h78||0), 0.001); end
  def test_output_m78; assert_in_delta(0, (worksheet.output_m78||0), 0.001); end
  def test_output_r78; assert_in_delta(0, (worksheet.output_r78||0), 0.001); end
  def test_output_w78; assert_in_delta(0, (worksheet.output_w78||0), 0.001); end
  def test_output_ab78; assert_in_delta(0, (worksheet.output_ab78||0), 0.001); end
  def test_output_ac78; assert_in_delta(0, (worksheet.output_ac78||0), 0.001); end
  def test_output_ad78; assert_in_delta(0, (worksheet.output_ad78||0), 0.001); end
  def test_output_ae78; assert_in_delta(0, (worksheet.output_ae78||0), 0.001); end
  def test_output_af78; assert_in_delta(0, (worksheet.output_af78||0), 0.001); end
  def test_output_ag78; assert_in_delta(0, (worksheet.output_ag78||0), 0.001); end
  def test_output_ah78; assert_in_delta(0, (worksheet.output_ah78||0), 0.001); end
  def test_output_ai78; assert_in_delta(0, (worksheet.output_ai78||0), 0.001); end
  def test_output_aj78; assert_in_delta(0, (worksheet.output_aj78||0), 0.001); end
  def test_output_ak78; assert_in_delta(0, (worksheet.output_ak78||0), 0.001); end
  def test_output_am78; assert_equal("", worksheet.output_am78); end
  def test_output_an78; assert_equal("", worksheet.output_an78); end
  def test_output_ao78; assert_equal("", worksheet.output_ao78); end
  def test_output_c79; assert_equal("V.09", worksheet.output_c79); end
  def test_output_e79; assert_equal("Dry biomass and waste", worksheet.output_e79); end
  def test_output_f79; assert_equal("TWh/yr", worksheet.output_f79); end
  def test_output_h79; assert_in_delta(0, (worksheet.output_h79||0), 0.001); end
  def test_output_m79; assert_in_delta(0, (worksheet.output_m79||0), 0.001); end
  def test_output_r79; assert_in_delta(0, (worksheet.output_r79||0), 0.001); end
  def test_output_w79; assert_in_delta(0, (worksheet.output_w79||0), 0.001); end
  def test_output_ab79; assert_in_delta(0, (worksheet.output_ab79||0), 0.001); end
  def test_output_ac79; assert_in_delta(0, (worksheet.output_ac79||0), 0.001); end
  def test_output_ad79; assert_in_delta(0, (worksheet.output_ad79||0), 0.001); end
  def test_output_ae79; assert_in_delta(0, (worksheet.output_ae79||0), 0.001); end
  def test_output_af79; assert_in_delta(0, (worksheet.output_af79||0), 0.001); end
  def test_output_ag79; assert_in_delta(0, (worksheet.output_ag79||0), 0.001); end
  def test_output_ah79; assert_in_delta(0, (worksheet.output_ah79||0), 0.001); end
  def test_output_ai79; assert_in_delta(0, (worksheet.output_ai79||0), 0.001); end
  def test_output_aj79; assert_in_delta(0, (worksheet.output_aj79||0), 0.001); end
  def test_output_ak79; assert_in_delta(0, (worksheet.output_ak79||0), 0.001); end
  def test_output_am79; assert_equal("", worksheet.output_am79); end
  def test_output_an79; assert_equal("", worksheet.output_an79); end
  def test_output_ao79; assert_equal("", worksheet.output_ao79); end
  def test_output_c80; assert_equal("V.10", worksheet.output_c80); end
  def test_output_e80; assert_equal("Wet biomass and waste", worksheet.output_e80); end
  def test_output_f80; assert_equal("TWh/yr", worksheet.output_f80); end
  def test_output_h80; assert_in_delta(0, (worksheet.output_h80||0), 0.001); end
  def test_output_m80; assert_in_delta(0, (worksheet.output_m80||0), 0.001); end
  def test_output_r80; assert_in_delta(0, (worksheet.output_r80||0), 0.001); end
  def test_output_w80; assert_in_delta(0, (worksheet.output_w80||0), 0.001); end
  def test_output_ab80; assert_in_delta(0, (worksheet.output_ab80||0), 0.001); end
  def test_output_ac80; assert_in_delta(0, (worksheet.output_ac80||0), 0.001); end
  def test_output_ad80; assert_in_delta(0, (worksheet.output_ad80||0), 0.001); end
  def test_output_ae80; assert_in_delta(0, (worksheet.output_ae80||0), 0.001); end
  def test_output_af80; assert_in_delta(0, (worksheet.output_af80||0), 0.001); end
  def test_output_ag80; assert_in_delta(0, (worksheet.output_ag80||0), 0.001); end
  def test_output_ah80; assert_in_delta(0, (worksheet.output_ah80||0), 0.001); end
  def test_output_ai80; assert_in_delta(0, (worksheet.output_ai80||0), 0.001); end
  def test_output_aj80; assert_in_delta(0, (worksheet.output_aj80||0), 0.001); end
  def test_output_ak80; assert_in_delta(0, (worksheet.output_ak80||0), 0.001); end
  def test_output_am80; assert_equal("", worksheet.output_am80); end
  def test_output_an80; assert_equal("", worksheet.output_an80); end
  def test_output_ao80; assert_equal("", worksheet.output_ao80); end
  def test_output_c81; assert_equal("V.11", worksheet.output_c81); end
  def test_output_e81; assert_equal("Domestic solar thermal", worksheet.output_e81); end
  def test_output_f81; assert_equal("TWh/yr", worksheet.output_f81); end
  def test_output_h81; assert_in_delta(0, (worksheet.output_h81||0), 0.001); end
  def test_output_m81; assert_in_delta(0, (worksheet.output_m81||0), 0.001); end
  def test_output_r81; assert_in_delta(0, (worksheet.output_r81||0), 0.001); end
  def test_output_w81; assert_in_delta(0, (worksheet.output_w81||0), 0.001); end
  def test_output_ab81; assert_in_delta(0, (worksheet.output_ab81||0), 0.001); end
  def test_output_ac81; assert_in_delta(0, (worksheet.output_ac81||0), 0.001); end
  def test_output_ad81; assert_in_delta(0, (worksheet.output_ad81||0), 0.001); end
  def test_output_ae81; assert_in_delta(0, (worksheet.output_ae81||0), 0.001); end
  def test_output_af81; assert_in_delta(0, (worksheet.output_af81||0), 0.001); end
  def test_output_ag81; assert_in_delta(0, (worksheet.output_ag81||0), 0.001); end
  def test_output_ah81; assert_in_delta(0, (worksheet.output_ah81||0), 0.001); end
  def test_output_ai81; assert_in_delta(0, (worksheet.output_ai81||0), 0.001); end
  def test_output_aj81; assert_in_delta(0, (worksheet.output_aj81||0), 0.001); end
  def test_output_ak81; assert_in_delta(0, (worksheet.output_ak81||0), 0.001); end
  def test_output_am81; assert_equal("", worksheet.output_am81); end
  def test_output_an81; assert_equal("", worksheet.output_an81); end
  def test_output_ao81; assert_equal("", worksheet.output_ao81); end
  def test_output_c82; assert_equal("V.12", worksheet.output_c82); end
  def test_output_e82; assert_equal("H2", worksheet.output_e82); end
  def test_output_f82; assert_equal("TWh/yr", worksheet.output_f82); end
  def test_output_h82; assert_in_delta(0, (worksheet.output_h82||0), 0.001); end
  def test_output_m82; assert_in_delta(0, (worksheet.output_m82||0), 0.001); end
  def test_output_r82; assert_in_delta(0, (worksheet.output_r82||0), 0.001); end
  def test_output_w82; assert_in_delta(0, (worksheet.output_w82||0), 0.001); end
  def test_output_ab82; assert_in_delta(0, (worksheet.output_ab82||0), 0.001); end
  def test_output_ac82; assert_in_delta(0, (worksheet.output_ac82||0), 0.001); end
  def test_output_ad82; assert_in_delta(0, (worksheet.output_ad82||0), 0.001); end
  def test_output_ae82; assert_in_delta(0, (worksheet.output_ae82||0), 0.001); end
  def test_output_af82; assert_in_delta(0, (worksheet.output_af82||0), 0.001); end
  def test_output_ag82; assert_in_delta(0, (worksheet.output_ag82||0), 0.001); end
  def test_output_ah82; assert_in_delta(0, (worksheet.output_ah82||0), 0.001); end
  def test_output_ai82; assert_in_delta(0, (worksheet.output_ai82||0), 0.001); end
  def test_output_aj82; assert_in_delta(0, (worksheet.output_aj82||0), 0.001); end
  def test_output_ak82; assert_in_delta(0, (worksheet.output_ak82||0), 0.001); end
  def test_output_am82; assert_equal("", worksheet.output_am82); end
  def test_output_an82; assert_equal("", worksheet.output_an82); end
  def test_output_ao82; assert_equal("", worksheet.output_ao82); end
  def test_output_c83; assert_equal("V.13", worksheet.output_c83); end
  def test_output_e83; assert_equal("Energy crops (second generation)", worksheet.output_e83); end
  def test_output_f83; assert_equal("TWh/yr", worksheet.output_f83); end
  def test_output_h83; assert_in_delta(0, (worksheet.output_h83||0), 0.001); end
  def test_output_m83; assert_in_delta(0, (worksheet.output_m83||0), 0.001); end
  def test_output_r83; assert_in_delta(0, (worksheet.output_r83||0), 0.001); end
  def test_output_w83; assert_in_delta(0, (worksheet.output_w83||0), 0.001); end
  def test_output_ab83; assert_in_delta(0, (worksheet.output_ab83||0), 0.001); end
  def test_output_ac83; assert_in_delta(0, (worksheet.output_ac83||0), 0.001); end
  def test_output_ad83; assert_in_delta(0, (worksheet.output_ad83||0), 0.001); end
  def test_output_ae83; assert_in_delta(0, (worksheet.output_ae83||0), 0.001); end
  def test_output_af83; assert_in_delta(0, (worksheet.output_af83||0), 0.001); end
  def test_output_ag83; assert_in_delta(0, (worksheet.output_ag83||0), 0.001); end
  def test_output_ah83; assert_in_delta(0, (worksheet.output_ah83||0), 0.001); end
  def test_output_ai83; assert_in_delta(0, (worksheet.output_ai83||0), 0.001); end
  def test_output_aj83; assert_in_delta(0, (worksheet.output_aj83||0), 0.001); end
  def test_output_ak83; assert_in_delta(0, (worksheet.output_ak83||0), 0.001); end
  def test_output_am83; assert_equal("", worksheet.output_am83); end
  def test_output_an83; assert_equal("", worksheet.output_an83); end
  def test_output_ao83; assert_equal("", worksheet.output_ao83); end
  def test_output_e84; assert_equal("Total unnaccounted supply / demand", worksheet.output_e84); end
  def test_output_f84; assert_equal("TWh/yr", worksheet.output_f84); end
  def test_output_h84; assert_in_delta(0, (worksheet.output_h84||0), 0.001); end
  def test_output_m84; assert_in_delta(0, (worksheet.output_m84||0), 0.001); end
  def test_output_r84; assert_in_delta(0, (worksheet.output_r84||0), 0.001); end
  def test_output_w84; assert_in_delta(0, (worksheet.output_w84||0), 0.001); end
  def test_output_ab84; assert_in_delta(0, (worksheet.output_ab84||0), 0.001); end
  def test_output_ad84; assert_in_delta(-3.7470027081099033e-16, worksheet.output_ad84, 0.001); end
  def test_output_ae84; assert_in_delta(3.2335245592207684e-15, worksheet.output_ae84, 0.001); end
  def test_output_af84; assert_in_delta(-1.2490009027033011e-15, worksheet.output_af84, 0.001); end
  def test_output_ag84; assert_in_delta(-1.249000902703301e-16, worksheet.output_ag84, 0.001); end
  def test_output_ah84; assert_in_delta(3.885780586188048e-16, worksheet.output_ah84, 0.001); end
  def test_output_ai84; assert_in_delta(6.245004513516506e-17, worksheet.output_ai84, 0.001); end
  def test_output_aj84; assert_in_delta(0, (worksheet.output_aj84||0), 0.001); end
  def test_output_am84; assert_in_delta(-1, worksheet.output_am84, 0.001); end
  def test_output_an84; assert_in_delta(-1, worksheet.output_an84, 0.001); end
  def test_output_ak84; assert_in_delta(0, (worksheet.output_ak84||0), 0.001); end
  def test_output_ao84; assert_equal("", worksheet.output_ao84); end
  def test_output_h85; assert_in_delta(0, (worksheet.output_h85||0), 0.001); end
  def test_output_m85; assert_in_delta(0, (worksheet.output_m85||0), 0.001); end
  def test_output_r85; assert_in_delta(0, (worksheet.output_r85||0), 0.001); end
  def test_output_w85; assert_in_delta(0, (worksheet.output_w85||0), 0.001); end
  def test_output_ab85; assert_in_delta(0, (worksheet.output_ab85||0), 0.001); end
  def test_output_am85; assert_equal("", worksheet.output_am85); end
  def test_output_an85; assert_equal("", worksheet.output_an85); end
  def test_output_ao85; assert_equal("", worksheet.output_ao85); end
  def test_output_e86; assert_equal("Supply, Demand, and Unaccounted supply", worksheet.output_e86); end
  def test_output_f86; assert_equal("TWh/yr", worksheet.output_f86); end
  def test_output_h86; assert_in_delta(0, (worksheet.output_h86||0), 0.001); end
  def test_output_m86; assert_in_delta(0, (worksheet.output_m86||0), 0.001); end
  def test_output_r86; assert_in_delta(0, (worksheet.output_r86||0), 0.001); end
  def test_output_w86; assert_in_delta(0, (worksheet.output_w86||0), 0.001); end
  def test_output_ab86; assert_in_delta(0, (worksheet.output_ab86||0), 0.001); end
  def test_output_ad86; assert_in_epsilon(-1.6174634537585466, worksheet.output_ad86, 0.001); end
  def test_output_ae86; assert_in_epsilon(-1.6173990377864664, worksheet.output_ae86, 0.001); end
  def test_output_af86; assert_in_epsilon(-1.6169039863048638, worksheet.output_af86, 0.001); end
  def test_output_ag86; assert_in_epsilon(-1.6160816418896504, worksheet.output_ag86, 0.001); end
  def test_output_ah86; assert_in_epsilon(-1.6149446964385556, worksheet.output_ah86, 0.001); end
  def test_output_ai86; assert_in_epsilon(-1.6135302314990554, worksheet.output_ai86, 0.001); end
  def test_output_aj86; assert_in_epsilon(-1.6116896246225565, worksheet.output_aj86, 0.001); end
  def test_output_am86; assert_in_delta(-9.777269213984141e-05, worksheet.output_am86, 0.001); end
  def test_output_an86; assert_in_delta(-0.003903460502194367, worksheet.output_an86, 0.001); end
  def test_output_ak86; assert_in_epsilon(-1.6110652134249221, worksheet.output_ak86, 0.001); end
  def test_output_ao86; assert_equal("", worksheet.output_ao86); end
  def test_output_h87; assert_in_delta(0, (worksheet.output_h87||0), 0.001); end
  def test_output_m87; assert_in_delta(0, (worksheet.output_m87||0), 0.001); end
  def test_output_r87; assert_in_delta(0, (worksheet.output_r87||0), 0.001); end
  def test_output_w87; assert_in_delta(0, (worksheet.output_w87||0), 0.001); end
  def test_output_ab87; assert_in_delta(0, (worksheet.output_ab87||0), 0.001); end
  def test_output_am87; assert_equal("", worksheet.output_am87); end
  def test_output_an87; assert_equal("", worksheet.output_an87); end
  def test_output_ao87; assert_equal("", worksheet.output_ao87); end
  def test_output_b88; assert_equal("Electricity Consumption", worksheet.output_b88); end
  def test_output_h88; assert_in_delta(0, (worksheet.output_h88||0), 0.001); end
  def test_output_m88; assert_in_delta(0, (worksheet.output_m88||0), 0.001); end
  def test_output_r88; assert_in_delta(0, (worksheet.output_r88||0), 0.001); end
  def test_output_w88; assert_in_delta(0, (worksheet.output_w88||0), 0.001); end
  def test_output_ab88; assert_in_delta(0, (worksheet.output_ab88||0), 0.001); end
  def test_output_am88; assert_equal("", worksheet.output_am88); end
  def test_output_an88; assert_equal("", worksheet.output_an88); end
  def test_output_ao88; assert_equal("", worksheet.output_ao88); end
  def test_output_c89; assert_equal("IX.a", worksheet.output_c89); end
  def test_output_d89; assert_equal("V.01", worksheet.output_d89); end
  def test_output_e89; assert_equal("Domestic space heating and hot water", worksheet.output_e89); end
  def test_output_f89; assert_equal("TWh/yr", worksheet.output_f89); end
  def test_output_g89; assert_equal("IEA - Electricity demand - Residential (incl. appliances)", worksheet.output_g89); end
  def test_output_h89; assert_in_epsilon(18.414, worksheet.output_h89, 0.001); end
  def test_output_m89; assert_in_epsilon(22.109, worksheet.output_m89, 0.001); end
  def test_output_r89; assert_in_epsilon(23.738, worksheet.output_r89, 0.001); end
  def test_output_w89; assert_in_epsilon(26.007, worksheet.output_w89, 0.001); end
  def test_output_ab89; assert_in_epsilon(20.276, worksheet.output_ab89, 0.001); end
  def test_output_al89; assert_in_delta(0.17620720888584235, worksheet.output_al89, 0.001); end
  def test_output_am89; assert_in_delta(0.034151271232713665, worksheet.output_am89, 0.001); end
  def test_output_an89; assert_in_epsilon(2.8314468544645646, worksheet.output_an89, 0.001); end
  def test_output_ao89; assert_in_delta(0.002220563820048538, worksheet.output_ao89, 0.001); end
  def test_output_c90; assert_equal("IX.b", worksheet.output_c90); end
  def test_output_d90; assert_equal("V.01", worksheet.output_d90); end
  def test_output_e90; assert_equal("Domestic hot water [UNUSED - See IX.a]", worksheet.output_e90); end
  def test_output_f90; assert_equal("TWh/yr", worksheet.output_f90); end
  def test_output_g90; assert_equal("/", worksheet.output_g90); end
  def test_output_h90; assert_in_delta(0, (worksheet.output_h90||0), 0.001); end
  def test_output_m90; assert_in_delta(0, (worksheet.output_m90||0), 0.001); end
  def test_output_r90; assert_in_delta(0, (worksheet.output_r90||0), 0.001); end
  def test_output_w90; assert_in_delta(0, (worksheet.output_w90||0), 0.001); end
  def test_output_ab90; assert_in_delta(0, (worksheet.output_ab90||0), 0.001); end
  def test_output_ac90; assert_in_delta(0, (worksheet.output_ac90||0), 0.001); end
  def test_output_ad90; assert_in_delta(0, (worksheet.output_ad90||0), 0.001); end
  def test_output_ae90; assert_in_delta(0, (worksheet.output_ae90||0), 0.001); end
  def test_output_af90; assert_in_delta(0, (worksheet.output_af90||0), 0.001); end
  def test_output_ag90; assert_in_delta(0, (worksheet.output_ag90||0), 0.001); end
  def test_output_ah90; assert_in_delta(0, (worksheet.output_ah90||0), 0.001); end
  def test_output_ai90; assert_in_delta(0, (worksheet.output_ai90||0), 0.001); end
  def test_output_aj90; assert_in_delta(0, (worksheet.output_aj90||0), 0.001); end
  def test_output_ak90; assert_in_delta(0, (worksheet.output_ak90||0), 0.001); end
  def test_output_al90; assert_in_delta(0, (worksheet.output_al90||0), 0.001); end
  def test_output_am90; assert_equal("", worksheet.output_am90); end
  def test_output_an90; assert_equal("", worksheet.output_an90); end
  def test_output_ao90; assert_equal("", worksheet.output_ao90); end
  def test_output_c91; assert_equal("IX.c", worksheet.output_c91); end
  def test_output_d91; assert_equal("V.01", worksheet.output_d91); end
  def test_output_e91; assert_equal("Commercial heating and cooling", worksheet.output_e91); end
  def test_output_f91; assert_equal("TWh/yr", worksheet.output_f91); end
  def test_output_g91; assert_equal("IEA - Electricity demand - Commercial (incl. appliances)", worksheet.output_g91); end
  def test_output_h91; assert_in_epsilon(7.798, worksheet.output_h91, 0.001); end
  def test_output_m91; assert_in_epsilon(10.27, worksheet.output_m91, 0.001); end
  def test_output_r91; assert_in_epsilon(12.236, worksheet.output_r91, 0.001); end
  def test_output_w91; assert_in_epsilon(12.703, worksheet.output_w91, 0.001); end
  def test_output_ab91; assert_in_epsilon(22.182, worksheet.output_ab91, 0.001); end
  def test_output_ad91; assert_in_delta(0.3280149751149168, worksheet.output_ad91, 0.001); end
  def test_output_ae91; assert_in_epsilon(1.0727468048069126, worksheet.output_ae91, 0.001); end
  def test_output_af91; assert_in_epsilon(1.6866028468647998, worksheet.output_af91, 0.001); end
  def test_output_ag91; assert_in_epsilon(2.187405319740771, worksheet.output_ag91, 0.001); end
  def test_output_ah91; assert_in_epsilon(2.5780692754339696, worksheet.output_ah91, 0.001); end
  def test_output_ai91; assert_in_epsilon(2.874964938022951, worksheet.output_ai91, 0.001); end
  def test_output_aj91; assert_in_epsilon(3.0802344216773796, worksheet.output_aj91, 0.001); end
  def test_output_al91; assert_in_delta(0.03443917973004814, worksheet.output_al91, 0.001); end
  def test_output_am91; assert_in_delta(0.06366114832492609, worksheet.output_am91, 0.001); end
  def test_output_an91; assert_in_epsilon(10.806790394399556, worksheet.output_an91, 0.001); end
  def test_output_ao91; assert_in_delta(-0.5374514282392927, worksheet.output_ao91, 0.001); end
  def test_output_c92; assert_equal("IX.d", worksheet.output_c92); end
  def test_output_d92; assert_equal("V.01", worksheet.output_d92); end
  def test_output_e92; assert_equal("Commercial hot water [UNUSED - See IX.c]", worksheet.output_e92); end
  def test_output_f92; assert_equal("TWh/yr", worksheet.output_f92); end
  def test_output_g92; assert_equal("/", worksheet.output_g92); end
  def test_output_h92; assert_in_delta(0, (worksheet.output_h92||0), 0.001); end
  def test_output_m92; assert_in_delta(0, (worksheet.output_m92||0), 0.001); end
  def test_output_r92; assert_in_delta(0, (worksheet.output_r92||0), 0.001); end
  def test_output_w92; assert_in_delta(0, (worksheet.output_w92||0), 0.001); end
  def test_output_ab92; assert_in_delta(0, (worksheet.output_ab92||0), 0.001); end
  def test_output_ac92; assert_in_delta(0, (worksheet.output_ac92||0), 0.001); end
  def test_output_ad92; assert_in_delta(0, (worksheet.output_ad92||0), 0.001); end
  def test_output_ae92; assert_in_delta(0, (worksheet.output_ae92||0), 0.001); end
  def test_output_af92; assert_in_delta(0, (worksheet.output_af92||0), 0.001); end
  def test_output_ag92; assert_in_delta(0, (worksheet.output_ag92||0), 0.001); end
  def test_output_ah92; assert_in_delta(0, (worksheet.output_ah92||0), 0.001); end
  def test_output_ai92; assert_in_delta(0, (worksheet.output_ai92||0), 0.001); end
  def test_output_aj92; assert_in_delta(0, (worksheet.output_aj92||0), 0.001); end
  def test_output_ak92; assert_in_delta(0, (worksheet.output_ak92||0), 0.001); end
  def test_output_al92; assert_in_delta(0, (worksheet.output_al92||0), 0.001); end
  def test_output_am92; assert_equal("", worksheet.output_am92); end
  def test_output_an92; assert_equal("", worksheet.output_an92); end
  def test_output_ao92; assert_equal("", worksheet.output_ao92); end
  def test_output_c93; assert_equal("IV.b", worksheet.output_c93); end
  def test_output_d93; assert_equal("V.01", worksheet.output_d93); end
  def test_output_e93; assert_equal("Solar thermal production", worksheet.output_e93); end
  def test_output_ad93; assert_in_delta(0.05271030941816313, worksheet.output_ad93, 0.001); end
  def test_output_ae93; assert_in_delta(0.1153925571041209, worksheet.output_ae93, 0.001); end
  def test_output_af93; assert_in_delta(0.18509142368551992, worksheet.output_af93, 0.001); end
  def test_output_ag93; assert_in_delta(0.2636746415628773, worksheet.output_ag93, 0.001); end
  def test_output_ah93; assert_in_delta(0.3496571806975535, worksheet.output_ah93, 0.001); end
  def test_output_ai93; assert_in_delta(0.4449226328318862, worksheet.output_ai93, 0.001); end
  def test_output_aj93; assert_in_delta(0.5480340394088733, worksheet.output_aj93, 0.001); end
  def test_output_ao93; assert_equal("", worksheet.output_ao93); end
  def test_output_c94; assert_equal("IX", worksheet.output_c94); end
  def test_output_d94; assert_equal("V.01", worksheet.output_d94); end
  def test_output_e94; assert_equal("Heating", worksheet.output_e94); end
  def test_output_f94; assert_equal("TWh/yr", worksheet.output_f94); end
  def test_output_h94; assert_in_delta(0, (worksheet.output_h94||0), 0.001); end
  def test_output_m94; assert_in_delta(0, (worksheet.output_m94||0), 0.001); end
  def test_output_r94; assert_in_delta(0, (worksheet.output_r94||0), 0.001); end
  def test_output_w94; assert_in_delta(0, (worksheet.output_w94||0), 0.001); end
  def test_output_ab94; assert_in_delta(0, (worksheet.output_ab94||0), 0.001); end
  def test_output_ad94; assert_in_epsilon(7.307200089449975, worksheet.output_ad94, 0.001); end
  def test_output_ae94; assert_in_epsilon(10.078185273222664, worksheet.output_ae94, 0.001); end
  def test_output_af94; assert_in_epsilon(12.6937174019145, worksheet.output_af94, 0.001); end
  def test_output_ag94; assert_in_epsilon(14.851862400411525, worksheet.output_ag94, 0.001); end
  def test_output_ah94; assert_in_epsilon(16.82510344389734, worksheet.output_ah94, 0.001); end
  def test_output_ai94; assert_in_epsilon(18.655776234254684, worksheet.output_ai94, 0.001); end
  def test_output_aj94; assert_in_epsilon(20.345592259539707, worksheet.output_aj94, 0.001); end
  def test_output_al94; assert_in_delta(0.216445783814674, worksheet.output_al94, 0.001); end
  def test_output_am94; assert_in_delta(0.037885717384198436, worksheet.output_am94, 0.001); end
  def test_output_an94; assert_in_epsilon(3.4256944010040584, worksheet.output_an94, 0.001); end
  def test_output_ao94; assert_equal("", worksheet.output_ao94); end
  def test_output_c95; assert_equal("X.a", worksheet.output_c95); end
  def test_output_d95; assert_equal("V.01", worksheet.output_d95); end
  def test_output_e95; assert_equal("Domestic lighting, appliances, and cooking", worksheet.output_e95); end
  def test_output_f95; assert_equal("TWh/yr", worksheet.output_f95); end
  def test_output_g95; assert_equal("Included in domestic space heating", worksheet.output_g95); end
  def test_output_h95; assert_in_delta(0, (worksheet.output_h95||0), 0.001); end
  def test_output_i95; assert_in_epsilon(19.897, worksheet.output_i95, 0.001); end
  def test_output_j95; assert_in_epsilon(20.245, worksheet.output_j95, 0.001); end
  def test_output_k95; assert_in_epsilon(21.09, worksheet.output_k95, 0.001); end
  def test_output_l95; assert_in_epsilon(21.358, worksheet.output_l95, 0.001); end
  def test_output_m95; assert_in_delta(0, (worksheet.output_m95||0), 0.001); end
  def test_output_n95; assert_in_epsilon(23.229, worksheet.output_n95, 0.001); end
  def test_output_o95; assert_in_epsilon(22.933, worksheet.output_o95, 0.001); end
  def test_output_p95; assert_in_epsilon(23.388, worksheet.output_p95, 0.001); end
  def test_output_q95; assert_in_epsilon(23.482, worksheet.output_q95, 0.001); end
  def test_output_r95; assert_in_delta(0, (worksheet.output_r95||0), 0.001); end
  def test_output_s95; assert_in_epsilon(24.396, worksheet.output_s95, 0.001); end
  def test_output_t95; assert_in_epsilon(25.921, worksheet.output_t95, 0.001); end
  def test_output_u95; assert_in_epsilon(26.026, worksheet.output_u95, 0.001); end
  def test_output_v95; assert_in_epsilon(26.543, worksheet.output_v95, 0.001); end
  def test_output_w95; assert_in_delta(0, (worksheet.output_w95||0), 0.001); end
  def test_output_x95; assert_in_epsilon(22.722, worksheet.output_x95, 0.001); end
  def test_output_y95; assert_in_epsilon(21.856, worksheet.output_y95, 0.001); end
  def test_output_z95; assert_in_epsilon(19.982, worksheet.output_z95, 0.001); end
  def test_output_aa95; assert_in_epsilon(20.21, worksheet.output_aa95, 0.001); end
  def test_output_ab95; assert_in_delta(0, (worksheet.output_ab95||0), 0.001); end
  def test_output_ad95; assert_in_epsilon(13.608148387833333, worksheet.output_ad95, 0.001); end
  def test_output_ae95; assert_in_epsilon(14.181764225942684, worksheet.output_ae95, 0.001); end
  def test_output_af95; assert_in_epsilon(14.445693803110597, worksheet.output_af95, 0.001); end
  def test_output_ag95; assert_in_epsilon(14.708108262910798, worksheet.output_ag95, 0.001); end
  def test_output_ah95; assert_in_epsilon(14.874889509940525, worksheet.output_ah95, 0.001); end
  def test_output_ai95; assert_in_epsilon(15.041110438152028, worksheet.output_ai95, 0.001); end
  def test_output_aj95; assert_in_epsilon(15.14710483061386, worksheet.output_aj95, 0.001); end
  def test_output_ak95; assert_in_epsilon(15.251822661504015, worksheet.output_ak95, 0.001); end
  def test_output_al95; assert_in_delta(0.14562434021144524, worksheet.output_al95, 0.001); end
  def test_output_am95; assert_in_delta(0.0041719494841079285, worksheet.output_am95, 0.001); end
  def test_output_an95; assert_in_delta(0.18119996502095814, worksheet.output_an95, 0.001); end
  def test_output_ao95; assert_equal("", worksheet.output_ao95); end
  def test_output_c96; assert_equal("X.b", worksheet.output_c96); end
  def test_output_d96; assert_equal("V.01", worksheet.output_d96); end
  def test_output_e96; assert_equal("Commercial lighting, appliances, and catering", worksheet.output_e96); end
  def test_output_f96; assert_equal("TWh/yr", worksheet.output_f96); end
  def test_output_g96; assert_equal("Included in commercial space heating", worksheet.output_g96); end
  def test_output_h96; assert_in_delta(0, (worksheet.output_h96||0), 0.001); end
  def test_output_i96; assert_in_epsilon(8.262, worksheet.output_i96, 0.001); end
  def test_output_j96; assert_in_epsilon(8.821, worksheet.output_j96, 0.001); end
  def test_output_k96; assert_in_epsilon(9.595, worksheet.output_k96, 0.001); end
  def test_output_l96; assert_in_epsilon(10.097, worksheet.output_l96, 0.001); end
  def test_output_m96; assert_in_delta(0, (worksheet.output_m96||0), 0.001); end
  def test_output_n96; assert_in_epsilon(10.871, worksheet.output_n96, 0.001); end
  def test_output_o96; assert_in_epsilon(10.988, worksheet.output_o96, 0.001); end
  def test_output_p96; assert_in_epsilon(11.567, worksheet.output_p96, 0.001); end
  def test_output_q96; assert_in_epsilon(11.738, worksheet.output_q96, 0.001); end
  def test_output_r96; assert_in_delta(0, (worksheet.output_r96||0), 0.001); end
  def test_output_s96; assert_in_epsilon(12.791, worksheet.output_s96, 0.001); end
  def test_output_t96; assert_in_epsilon(11.858, worksheet.output_t96, 0.001); end
  def test_output_u96; assert_in_epsilon(11.906, worksheet.output_u96, 0.001); end
  def test_output_v96; assert_in_epsilon(11.928, worksheet.output_v96, 0.001); end
  def test_output_w96; assert_in_delta(0, (worksheet.output_w96||0), 0.001); end
  def test_output_x96; assert_in_epsilon(17.148, worksheet.output_x96, 0.001); end
  def test_output_y96; assert_in_epsilon(18.147, worksheet.output_y96, 0.001); end
  def test_output_z96; assert_in_epsilon(20.83, worksheet.output_z96, 0.001); end
  def test_output_aa96; assert_in_epsilon(21.476, worksheet.output_aa96, 0.001); end
  def test_output_ab96; assert_in_delta(0, (worksheet.output_ab96||0), 0.001); end
  def test_output_ac96; assert_in_epsilon(21.539210527295626, worksheet.output_ac96, 0.001); end
  def test_output_ad96; assert_in_epsilon(22.857955435471524, worksheet.output_ad96, 0.001); end
  def test_output_ae96; assert_in_epsilon(24.129209837742195, worksheet.output_ae96, 0.001); end
  def test_output_af96; assert_in_epsilon(24.86613070587419, worksheet.output_af96, 0.001); end
  def test_output_ag96; assert_in_epsilon(25.372079793944838, worksheet.output_ag96, 0.001); end
  def test_output_ah96; assert_in_epsilon(25.79917338955194, worksheet.output_ah96, 0.001); end
  def test_output_ai96; assert_in_epsilon(26.212433891653255, worksheet.output_ai96, 0.001); end
  def test_output_aj96; assert_in_epsilon(26.610177045690136, worksheet.output_aj96, 0.001); end
  def test_output_ak96; assert_in_epsilon(26.99630382553881, worksheet.output_ak96, 0.001); end
  def test_output_al96; assert_in_delta(0.25776059819162156, worksheet.output_al96, 0.001); end
  def test_output_am96; assert_in_delta(0.005661590107978176, worksheet.output_am96, 0.001); end
  def test_output_an96; assert_in_delta(0.2533562356581114, worksheet.output_an96, 0.001); end
  def test_output_ao96; assert_equal("", worksheet.output_ao96); end
  def test_output_c97; assert_equal("X", worksheet.output_c97); end
  def test_output_d97; assert_equal("V.01", worksheet.output_d97); end
  def test_output_e97; assert_equal("Lighting and appliances", worksheet.output_e97); end
  def test_output_f97; assert_equal("TWh/yr", worksheet.output_f97); end
  def test_output_h97; assert_in_delta(0, (worksheet.output_h97||0), 0.001); end
  def test_output_m97; assert_in_delta(0, (worksheet.output_m97||0), 0.001); end
  def test_output_r97; assert_in_delta(0, (worksheet.output_r97||0), 0.001); end
  def test_output_w97; assert_in_delta(0, (worksheet.output_w97||0), 0.001); end
  def test_output_ab97; assert_in_delta(0, (worksheet.output_ab97||0), 0.001); end
  def test_output_ad97; assert_in_epsilon(36.466103823304856, worksheet.output_ad97, 0.001); end
  def test_output_ae97; assert_in_epsilon(38.31097406368488, worksheet.output_ae97, 0.001); end
  def test_output_af97; assert_in_epsilon(39.311824508984785, worksheet.output_af97, 0.001); end
  def test_output_ag97; assert_in_epsilon(40.08018805685563, worksheet.output_ag97, 0.001); end
  def test_output_ah97; assert_in_epsilon(40.67406289949246, worksheet.output_ah97, 0.001); end
  def test_output_ai97; assert_in_epsilon(41.25354432980528, worksheet.output_ai97, 0.001); end
  def test_output_aj97; assert_in_epsilon(41.75728187630399, worksheet.output_aj97, 0.001); end
  def test_output_al97; assert_in_delta(0.4033849384030668, worksheet.output_al97, 0.001); end
  def test_output_am97; assert_in_delta(0.005113321833133622, worksheet.output_am97, 0.001); end
  def test_output_an97; assert_in_delta(0.22631253543029484, worksheet.output_an97, 0.001); end
  def test_output_ao97; assert_equal("", worksheet.output_ao97); end
  def test_output_c98; assert_equal("XI.a", worksheet.output_c98); end
  def test_output_d98; assert_equal("V.01", worksheet.output_d98); end
  def test_output_e98; assert_equal("Steel Industry", worksheet.output_e98); end
  def test_output_f98; assert_equal("TWh/yr", worksheet.output_f98); end
  def test_output_g98; assert_equal("IEA - Electricity demand - Steel", worksheet.output_g98); end
  def test_output_h98; assert_in_epsilon(5.136, worksheet.output_h98, 0.001); end
  def test_output_i98; assert_in_epsilon(5.388, worksheet.output_i98, 0.001); end
  def test_output_j98; assert_in_epsilon(5.566, worksheet.output_j98, 0.001); end
  def test_output_k98; assert_in_epsilon(5.302, worksheet.output_k98, 0.001); end
  def test_output_l98; assert_in_epsilon(5.873, worksheet.output_l98, 0.001); end
  def test_output_m98; assert_in_epsilon(6.126, worksheet.output_m98, 0.001); end
  def test_output_n98; assert_in_epsilon(5.798, worksheet.output_n98, 0.001); end
  def test_output_o98; assert_in_epsilon(6.303, worksheet.output_o98, 0.001); end
  def test_output_p98; assert_in_epsilon(6.445, worksheet.output_p98, 0.001); end
  def test_output_q98; assert_in_epsilon(6.198, worksheet.output_q98, 0.001); end
  def test_output_r98; assert_in_epsilon(6.876, worksheet.output_r98, 0.001); end
  def test_output_s98; assert_in_epsilon(6.663, worksheet.output_s98, 0.001); end
  def test_output_t98; assert_in_epsilon(6.833, worksheet.output_t98, 0.001); end
  def test_output_u98; assert_in_epsilon(7.015, worksheet.output_u98, 0.001); end
  def test_output_v98; assert_in_epsilon(7.061, worksheet.output_v98, 0.001); end
  def test_output_w98; assert_in_epsilon(5.997, worksheet.output_w98, 0.001); end
  def test_output_x98; assert_in_epsilon(6.193, worksheet.output_x98, 0.001); end
  def test_output_y98; assert_in_epsilon(6.486, worksheet.output_y98, 0.001); end
  def test_output_z98; assert_in_epsilon(6.346, worksheet.output_z98, 0.001); end
  def test_output_aa98; assert_in_epsilon(5.198, worksheet.output_aa98, 0.001); end
  def test_output_ab98; assert_in_epsilon(5.986, worksheet.output_ab98, 0.001); end
  def test_output_ac98; assert_in_epsilon(5.441092698287021, worksheet.output_ac98, 0.001); end
  def test_output_ad98; assert_in_epsilon(5.74373634873057, worksheet.output_ad98, 0.001); end
  def test_output_ae98; assert_in_epsilon(5.668165837827344, worksheet.output_ae98, 0.001); end
  def test_output_af98; assert_in_epsilon(5.593115904496355, worksheet.output_af98, 0.001); end
  def test_output_ag98; assert_in_epsilon(5.373887110438694, worksheet.output_ag98, 0.001); end
  def test_output_ah98; assert_in_epsilon(5.301917530984488, worksheet.output_ah98, 0.001); end
  def test_output_ai98; assert_in_epsilon(5.230454185383418, worksheet.output_ai98, 0.001); end
  def test_output_aj98; assert_in_epsilon(5.1594970736354835, worksheet.output_aj98, 0.001); end
  def test_output_ak98; assert_in_epsilon(5.205463384601725, worksheet.output_ak98, 0.001); end
  def test_output_al98; assert_in_delta(0.04970174304417926, worksheet.output_al98, 0.001); end
  def test_output_am98; assert_in_delta(-0.0011061672311870607, worksheet.output_am98, 0.001); end
  def test_output_an98; assert_in_delta(-0.0433055135707352, worksheet.output_an98, 0.001); end
  def test_output_ao98; assert_in_delta(0.013524802297843586, worksheet.output_ao98, 0.001); end
  def test_output_c99; assert_equal("XI.b", worksheet.output_c99); end
  def test_output_d99; assert_equal("V.01", worksheet.output_d99); end
  def test_output_e99; assert_equal("Cement Industry", worksheet.output_e99); end
  def test_output_f99; assert_equal("TWh/yr", worksheet.output_f99); end
  def test_output_g99; assert_equal("IEA - Electricity demand - Minerals (incl. cement and lime)", worksheet.output_g99); end
  def test_output_h99; assert_in_epsilon(2.085, worksheet.output_h99, 0.001); end
  def test_output_m99; assert_in_epsilon(2.424, worksheet.output_m99, 0.001); end
  def test_output_r99; assert_in_epsilon(2.518, worksheet.output_r99, 0.001); end
  def test_output_w99; assert_in_epsilon(2.325, worksheet.output_w99, 0.001); end
  def test_output_ab99; assert_in_epsilon(1.059, worksheet.output_ab99, 0.001); end
  def test_output_ac99; assert_in_delta(0.7368000000000001, worksheet.output_ac99, 0.001); end
  def test_output_ad99; assert_in_delta(0.5466097997490187, worksheet.output_ad99, 0.001); end
  def test_output_ae99; assert_in_delta(0.4422097105477589, worksheet.output_ae99, 0.001); end
  def test_output_af99; assert_in_delta(0.3613488098936196, worksheet.output_af99, 0.001); end
  def test_output_ag99; assert_in_delta(0.29704289293574804, worksheet.output_ag99, 0.001); end
  def test_output_ah99; assert_in_delta(0.24529724554696866, worksheet.output_ah99, 0.001); end
  def test_output_ai99; assert_in_delta(0.1964439331271659, worksheet.output_ai99, 0.001); end
  def test_output_aj99; assert_in_delta(0.15116715835308187, worksheet.output_aj99, 0.001); end
  def test_output_ak99; assert_in_delta(0.10852082708301597, worksheet.output_ak99, 0.001); end
  def test_output_al99; assert_in_delta(0.0010361564118531485, worksheet.output_al99, 0.001); end
  def test_output_am99; assert_in_delta(-0.04675598557905769, worksheet.output_am99, 0.001); end
  def test_output_an99; assert_in_delta(-0.8527133182912379, worksheet.output_an99, 0.001); end
  def test_output_ao99; assert_in_delta(-0.9479516416868029, worksheet.output_ao99, 0.001); end
  def test_output_c100; assert_equal("XI.c", worksheet.output_c100); end
  def test_output_d100; assert_equal("V.01", worksheet.output_d100); end
  def test_output_e100; assert_equal("Lime Industry", worksheet.output_e100); end
  def test_output_f100; assert_equal("TWh/yr", worksheet.output_f100); end
  def test_output_g100; assert_equal("included in cement", worksheet.output_g100); end
  def test_output_h100; assert_in_delta(0, (worksheet.output_h100||0), 0.001); end
  def test_output_m100; assert_in_delta(0, (worksheet.output_m100||0), 0.001); end
  def test_output_r100; assert_in_delta(0, (worksheet.output_r100||0), 0.001); end
  def test_output_w100; assert_in_delta(0, (worksheet.output_w100||0), 0.001); end
  def test_output_ab100; assert_in_delta(0, (worksheet.output_ab100||0), 0.001); end
  def test_output_ac100; assert_in_delta(0.3632617650452761, worksheet.output_ac100, 0.001); end
  def test_output_ad100; assert_in_delta(0.3406912254345319, worksheet.output_ad100, 0.001); end
  def test_output_ae100; assert_in_delta(0.3187894749320368, worksheet.output_ae100, 0.001); end
  def test_output_af100; assert_in_delta(0.2975565135377906, worksheet.output_af100, 0.001); end
  def test_output_ag100; assert_in_delta(0.2817037978503208, worksheet.output_ag100, 0.001); end
  def test_output_ah100; assert_in_delta(0.2661454212341811, worksheet.output_ah100, 0.001); end
  def test_output_ai100; assert_in_delta(0.2508929566434445, worksheet.output_ai100, 0.001); end
  def test_output_aj100; assert_in_delta(0.23595760829234694, worksheet.output_aj100, 0.001); end
  def test_output_ak100; assert_in_delta(0.22250955950483806, worksheet.output_ak100, 0.001); end
  def test_output_al100; assert_in_delta(0.002124520361452724, worksheet.output_al100, 0.001); end
  def test_output_am100; assert_in_delta(-0.01217906806010094, worksheet.output_am100, 0.001); end
  def test_output_an100; assert_in_delta(-0.38746771360012244, worksheet.output_an100, 0.001); end
  def test_output_ao100; assert_equal("", worksheet.output_ao100); end
  def test_output_c101; assert_equal("XI.d", worksheet.output_c101); end
  def test_output_d101; assert_equal("V.01", worksheet.output_d101); end
  def test_output_e101; assert_equal("Glass Industry", worksheet.output_e101); end
  def test_output_f101; assert_equal("TWh/yr", worksheet.output_f101); end
  def test_output_g101; assert_equal("included in cement", worksheet.output_g101); end
  def test_output_h101; assert_in_delta(0, (worksheet.output_h101||0), 0.001); end
  def test_output_m101; assert_in_delta(0, (worksheet.output_m101||0), 0.001); end
  def test_output_r101; assert_in_delta(0, (worksheet.output_r101||0), 0.001); end
  def test_output_w101; assert_in_delta(0, (worksheet.output_w101||0), 0.001); end
  def test_output_ab101; assert_in_delta(0, (worksheet.output_ab101||0), 0.001); end
  def test_output_ac101; assert_in_delta(0.675195238095238, worksheet.output_ac101, 0.001); end
  def test_output_ad101; assert_in_delta(0.7358359226703619, worksheet.output_ad101, 0.001); end
  def test_output_ae101; assert_in_delta(0.7131937482707105, worksheet.output_ae101, 0.001); end
  def test_output_af101; assert_in_delta(0.7373529619747903, worksheet.output_af101, 0.001); end
  def test_output_ag101; assert_in_delta(0.7622591833612602, worksheet.output_ag101, 0.001); end
  def test_output_ah101; assert_in_delta(0.7841057681879542, worksheet.output_ah101, 0.001); end
  def test_output_ai101; assert_in_delta(0.8064289806192911, worksheet.output_ai101, 0.001); end
  def test_output_aj101; assert_in_delta(0.8291866363960517, worksheet.output_aj101, 0.001); end
  def test_output_ak101; assert_in_delta(0.8523312652335038, worksheet.output_ak101, 0.001); end
  def test_output_al101; assert_in_delta(0.008138055424319729, worksheet.output_al101, 0.001); end
  def test_output_am101; assert_in_delta(0.005841328651089661, worksheet.output_am101, 0.001); end
  def test_output_an101; assert_in_delta(0.2623478619872617, worksheet.output_an101, 0.001); end
  def test_output_ao101; assert_equal("", worksheet.output_ao101); end
  def test_output_c102; assert_equal("XI.e", worksheet.output_c102); end
  def test_output_d102; assert_equal("V.01", worksheet.output_d102); end
  def test_output_e102; assert_equal("Chemicals Industry", worksheet.output_e102); end
  def test_output_f102; assert_equal("TWh/yr", worksheet.output_f102); end
  def test_output_g102; assert_equal("IEA - Electricity demand - Chemicals (including oil & gas)", worksheet.output_g102); end
  def test_output_h102; assert_in_epsilon(9.875, worksheet.output_h102, 0.001); end
  def test_output_i102; assert_in_epsilon(10.01, worksheet.output_i102, 0.001); end
  def test_output_j102; assert_in_epsilon(10.636, worksheet.output_j102, 0.001); end
  def test_output_k102; assert_in_epsilon(10.279, worksheet.output_k102, 0.001); end
  def test_output_l102; assert_in_epsilon(11.106, worksheet.output_l102, 0.001); end
  def test_output_m102; assert_in_epsilon(11.426, worksheet.output_m102, 0.001); end
  def test_output_n102; assert_in_epsilon(11.555, worksheet.output_n102, 0.001); end
  def test_output_o102; assert_in_epsilon(12.323, worksheet.output_o102, 0.001); end
  def test_output_p102; assert_in_epsilon(12.757, worksheet.output_p102, 0.001); end
  def test_output_q102; assert_in_epsilon(12.79, worksheet.output_q102, 0.001); end
  def test_output_r102; assert_in_epsilon(13.48, worksheet.output_r102, 0.001); end
  def test_output_s102; assert_in_epsilon(13.189, worksheet.output_s102, 0.001); end
  def test_output_t102; assert_in_epsilon(13.177, worksheet.output_t102, 0.001); end
  def test_output_u102; assert_in_epsilon(13.537, worksheet.output_u102, 0.001); end
  def test_output_v102; assert_in_epsilon(13.473, worksheet.output_v102, 0.001); end
  def test_output_w102; assert_in_epsilon(13.767, worksheet.output_w102, 0.001); end
  def test_output_x102; assert_in_epsilon(11.766, worksheet.output_x102, 0.001); end
  def test_output_y102; assert_in_epsilon(13.176, worksheet.output_y102, 0.001); end
  def test_output_z102; assert_in_epsilon(12.222, worksheet.output_z102, 0.001); end
  def test_output_aa102; assert_in_epsilon(8.678, worksheet.output_aa102, 0.001); end
  def test_output_ab102; assert_in_epsilon(13.5, worksheet.output_ab102, 0.001); end
  def test_output_ac102; assert_in_epsilon(6.780929327873316, worksheet.output_ac102, 0.001); end
  def test_output_ad102; assert_in_epsilon(6.41459110952836, worksheet.output_ad102, 0.001); end
  def test_output_ae102; assert_in_epsilon(6.024923111630026, worksheet.output_ae102, 0.001); end
  def test_output_af102; assert_in_epsilon(5.64587399461315, worksheet.output_af102, 0.001); end
  def test_output_ag102; assert_in_epsilon(5.277443758477733, worksheet.output_ag102, 0.001); end
  def test_output_ah102; assert_in_epsilon(4.919632403223772, worksheet.output_ah102, 0.001); end
  def test_output_ai102; assert_in_epsilon(4.572439928851268, worksheet.output_ai102, 0.001); end
  def test_output_aj102; assert_in_epsilon(4.23586633536022, worksheet.output_aj102, 0.001); end
  def test_output_ak102; assert_in_epsilon(3.90991162275063, worksheet.output_ak102, 0.001); end
  def test_output_al102; assert_in_delta(0.03733182013617604, worksheet.output_al102, 0.001); end
  def test_output_am102; assert_in_delta(-0.01367068055928089, worksheet.output_am102, 0.001); end
  def test_output_an102; assert_in_delta(-0.4233959043521126, worksheet.output_an102, 0.001); end
  def test_output_ao102; assert_in_delta(-0.6040595825062653, worksheet.output_ao102, 0.001); end
  def test_output_c103; assert_equal("XI.f", worksheet.output_c103); end
  def test_output_d103; assert_equal("V.01", worksheet.output_d103); end
  def test_output_e103; assert_equal("Pulp & Paper Industry", worksheet.output_e103); end
  def test_output_f103; assert_equal("TWh/yr", worksheet.output_f103); end
  def test_output_g103; assert_equal("IEA - Electricity demand - Pulp & Paper", worksheet.output_g103); end
  def test_output_h103; assert_in_epsilon(2.117, worksheet.output_h103, 0.001); end
  def test_output_m103; assert_in_epsilon(2.329, worksheet.output_m103, 0.001); end
  def test_output_r103; assert_in_epsilon(2.525, worksheet.output_r103, 0.001); end
  def test_output_w103; assert_in_epsilon(2.71, worksheet.output_w103, 0.001); end
  def test_output_ab103; assert_in_epsilon(2.6, worksheet.output_ab103, 0.001); end
  def test_output_ac103; assert_in_epsilon(2.6266213333333335, worksheet.output_ac103, 0.001); end
  def test_output_ad103; assert_in_epsilon(2.537301633333333, worksheet.output_ad103, 0.001); end
  def test_output_ae103; assert_in_epsilon(2.4479819333333337, worksheet.output_ae103, 0.001); end
  def test_output_af103; assert_in_epsilon(2.3586622333333334, worksheet.output_af103, 0.001); end
  def test_output_ag103; assert_in_epsilon(2.2693425333333335, worksheet.output_ag103, 0.001); end
  def test_output_ah103; assert_in_epsilon(2.180022833333333, worksheet.output_ah103, 0.001); end
  def test_output_ai103; assert_in_epsilon(2.0907031333333332, worksheet.output_ai103, 0.001); end
  def test_output_aj103; assert_in_epsilon(2.0013834333333334, worksheet.output_aj103, 0.001); end
  def test_output_ak103; assert_in_epsilon(1.912063733333334, worksheet.output_ak103, 0.001); end
  def test_output_al103; assert_in_delta(0.018256376682879792, worksheet.output_al103, 0.001); end
  def test_output_am103; assert_in_delta(-0.007906458443607156, worksheet.output_am103, 0.001); end
  def test_output_an103; assert_in_delta(-0.272044390613848, worksheet.output_an103, 0.001); end
  def test_output_ao103; assert_in_delta(-0.09680503857660183, worksheet.output_ao103, 0.001); end
  def test_output_c104; assert_equal("XI.g", worksheet.output_c104); end
  def test_output_d104; assert_equal("V.01", worksheet.output_d104); end
  def test_output_e104; assert_equal("Oil & Gas Industry", worksheet.output_e104); end
  def test_output_f104; assert_equal("TWh/yr", worksheet.output_f104); end
  def test_output_g104; assert_equal("included in chemicals", worksheet.output_g104); end
  def test_output_h104; assert_in_epsilon(2.117, worksheet.output_h104, 0.001); end
  def test_output_i104; assert_in_epsilon(2.047, worksheet.output_i104, 0.001); end
  def test_output_j104; assert_in_epsilon(2.229, worksheet.output_j104, 0.001); end
  def test_output_k104; assert_in_epsilon(2.045, worksheet.output_k104, 0.001); end
  def test_output_l104; assert_in_epsilon(2.199, worksheet.output_l104, 0.001); end
  def test_output_m104; assert_in_epsilon(2.329, worksheet.output_m104, 0.001); end
  def test_output_n104; assert_in_epsilon(2.232, worksheet.output_n104, 0.001); end
  def test_output_o104; assert_in_epsilon(2.38, worksheet.output_o104, 0.001); end
  def test_output_p104; assert_in_epsilon(2.371, worksheet.output_p104, 0.001); end
  def test_output_q104; assert_in_epsilon(2.475, worksheet.output_q104, 0.001); end
  def test_output_r104; assert_in_epsilon(2.525, worksheet.output_r104, 0.001); end
  def test_output_s104; assert_in_epsilon(2.465, worksheet.output_s104, 0.001); end
  def test_output_t104; assert_in_epsilon(2.497, worksheet.output_t104, 0.001); end
  def test_output_u104; assert_in_epsilon(2.563, worksheet.output_u104, 0.001); end
  def test_output_v104; assert_in_epsilon(2.612, worksheet.output_v104, 0.001); end
  def test_output_w104; assert_in_epsilon(2.71, worksheet.output_w104, 0.001); end
  def test_output_x104; assert_in_epsilon(2.739, worksheet.output_x104, 0.001); end
  def test_output_y104; assert_in_epsilon(2.848, worksheet.output_y104, 0.001); end
  def test_output_z104; assert_in_epsilon(2.671, worksheet.output_z104, 0.001); end
  def test_output_aa104; assert_in_epsilon(2.382, worksheet.output_aa104, 0.001); end
  def test_output_ab104; assert_in_epsilon(2.6, worksheet.output_ab104, 0.001); end
  def test_output_ac104; assert_in_epsilon(-1.5510879741391, worksheet.output_ac104, 0.001); end
  def test_output_ad104; assert_in_epsilon(-1.5953934887992647, worksheet.output_ad104, 0.001); end
  def test_output_ae104; assert_in_epsilon(-1.7891826890054137, worksheet.output_ae104, 0.001); end
  def test_output_af104; assert_in_epsilon(-1.971697868658493, worksheet.output_af104, 0.001); end
  def test_output_ag104; assert_in_epsilon(-2.2551642399386767, worksheet.output_ag104, 0.001); end
  def test_output_ah104; assert_in_epsilon(-2.375889261534403, worksheet.output_ah104, 0.001); end
  def test_output_ai104; assert_in_epsilon(-2.4770108101798933, worksheet.output_ai104, 0.001); end
  def test_output_aj104; assert_in_epsilon(-2.5705115108952366, worksheet.output_aj104, 0.001); end
  def test_output_ak104; assert_in_epsilon(-2.6573503609555384, worksheet.output_ak104, 0.001); end
  def test_output_al104; assert_in_delta(-0.025372370346367225, worksheet.output_al104, 0.001); end
  def test_output_am104; assert_in_delta(0.013550307373791926, worksheet.output_am104, 0.001); end
  def test_output_an104; assert_in_delta(0.7132170484594513, worksheet.output_an104, 0.001); end
  def test_output_ao104; assert_in_epsilon(-2.2552434392798952, worksheet.output_ao104, 0.001); end
  def test_output_c105; assert_equal("XI.h", worksheet.output_c105); end
  def test_output_d105; assert_equal("V.01", worksheet.output_d105); end
  def test_output_e105; assert_equal("Food, drinks and tobacco Industry", worksheet.output_e105); end
  def test_output_f105; assert_equal("TWh/yr", worksheet.output_f105); end
  def test_output_g105; assert_equal("IEA - Electricity demand - Food, drinks and tobacco", worksheet.output_g105); end
  def test_output_h105; assert_in_epsilon(2.793, worksheet.output_h105, 0.001); end
  def test_output_m105; assert_in_epsilon(3.312, worksheet.output_m105, 0.001); end
  def test_output_r105; assert_in_epsilon(3.953, worksheet.output_r105, 0.001); end
  def test_output_w105; assert_in_epsilon(3.991, worksheet.output_w105, 0.001); end
  def test_output_ab105; assert_in_epsilon(4.72, worksheet.output_ab105, 0.001); end
  def test_output_ac105; assert_in_epsilon(3.8470838333333335, worksheet.output_ac105, 0.001); end
  def test_output_ad105; assert_in_epsilon(3.514870751645267, worksheet.output_ad105, 0.001); end
  def test_output_ae105; assert_in_epsilon(3.1991484024249033, worksheet.output_ae105, 0.001); end
  def test_output_af105; assert_in_epsilon(2.8990749880242737, worksheet.output_af105, 0.001); end
  def test_output_ag105; assert_in_epsilon(2.613852847951772, worksheet.output_ag105, 0.001); end
  def test_output_ah105; assert_in_epsilon(2.3695256536611216, worksheet.output_ah105, 0.001); end
  def test_output_ai105; assert_in_epsilon(2.136326335090692, worksheet.output_ai105, 0.001); end
  def test_output_aj105; assert_in_epsilon(1.9130834697575367, worksheet.output_aj105, 0.001); end
  def test_output_ak105; assert_in_epsilon(1.6991880398684582, worksheet.output_ak105, 0.001); end
  def test_output_al105; assert_in_delta(0.016223840434860016, worksheet.output_al105, 0.001); end
  def test_output_am105; assert_in_delta(-0.020221861811619002, worksheet.output_am105, 0.001); end
  def test_output_an105; assert_in_delta(-0.5583179068920407, worksheet.output_an105, 0.001); end
  def test_output_ao105; assert_in_delta(-0.39162619410366695, worksheet.output_ao105, 0.001); end
  def test_output_c106; assert_equal("XI.i", worksheet.output_c106); end
  def test_output_d106; assert_equal("V.01", worksheet.output_d106); end
  def test_output_e106; assert_equal("Machines Industry", worksheet.output_e106); end
  def test_output_f106; assert_equal("TWh/yr", worksheet.output_f106); end
  def test_output_g106; assert_equal("IEA - Electricity demand - Machines", worksheet.output_g106); end
  def test_output_h106; assert_in_epsilon(2.003, worksheet.output_h106, 0.001); end
  def test_output_m106; assert_in_epsilon(1.909, worksheet.output_m106, 0.001); end
  def test_output_r106; assert_in_epsilon(2.092, worksheet.output_r106, 0.001); end
  def test_output_w106; assert_in_epsilon(2.169, worksheet.output_w106, 0.001); end
  def test_output_ab106; assert_in_epsilon(1.899, worksheet.output_ab106, 0.001); end
  def test_output_ac106; assert_in_delta(0, (worksheet.output_ac106||0), 0.001); end
  def test_output_ad106; assert_in_delta(0, (worksheet.output_ad106||0), 0.001); end
  def test_output_ae106; assert_in_delta(0, (worksheet.output_ae106||0), 0.001); end
  def test_output_af106; assert_in_delta(0, (worksheet.output_af106||0), 0.001); end
  def test_output_ag106; assert_in_delta(0, (worksheet.output_ag106||0), 0.001); end
  def test_output_ah106; assert_in_delta(0, (worksheet.output_ah106||0), 0.001); end
  def test_output_ai106; assert_in_delta(0, (worksheet.output_ai106||0), 0.001); end
  def test_output_aj106; assert_in_delta(0, (worksheet.output_aj106||0), 0.001); end
  def test_output_ak106; assert_in_delta(0, (worksheet.output_ak106||0), 0.001); end
  def test_output_al106; assert_in_delta(0, (worksheet.output_al106||0), 0.001); end
  def test_output_am106; assert_equal("", worksheet.output_am106); end
  def test_output_an106; assert_equal("", worksheet.output_an106); end
  def test_output_ao106; assert_in_delta(-1, worksheet.output_ao106, 0.001); end
  def test_output_c107; assert_equal("XI.j", worksheet.output_c107); end
  def test_output_d107; assert_equal("V.01", worksheet.output_d107); end
  def test_output_e107; assert_equal("Non-Ferrous metals Industry", worksheet.output_e107); end
  def test_output_f107; assert_equal("TWh/yr", worksheet.output_f107); end
  def test_output_g107; assert_equal("IEA - Electricity demand - Non-Ferrous metals", worksheet.output_g107); end
  def test_output_h107; assert_in_epsilon(2.106, worksheet.output_h107, 0.001); end
  def test_output_m107; assert_in_epsilon(1.843, worksheet.output_m107, 0.001); end
  def test_output_r107; assert_in_epsilon(2.045, worksheet.output_r107, 0.001); end
  def test_output_w107; assert_in_epsilon(1.729, worksheet.output_w107, 0.001); end
  def test_output_ab107; assert_in_epsilon(1.775, worksheet.output_ab107, 0.001); end
  def test_output_ac107; assert_in_epsilon(1.8179999999999996, worksheet.output_ac107, 0.001); end
  def test_output_ad107; assert_in_epsilon(1.7725499999999994, worksheet.output_ad107, 0.001); end
  def test_output_ae107; assert_in_epsilon(1.7270999999999996, worksheet.output_ae107, 0.001); end
  def test_output_af107; assert_in_epsilon(1.6816499999999999, worksheet.output_af107, 0.001); end
  def test_output_ag107; assert_in_epsilon(1.6361999999999997, worksheet.output_ag107, 0.001); end
  def test_output_ah107; assert_in_epsilon(1.5907499999999997, worksheet.output_ah107, 0.001); end
  def test_output_ai107; assert_in_epsilon(1.5452999999999997, worksheet.output_ai107, 0.001); end
  def test_output_aj107; assert_in_epsilon(1.4998499999999997, worksheet.output_aj107, 0.001); end
  def test_output_ak107; assert_in_epsilon(1.4543999999999997, worksheet.output_ak107, 0.001); end
  def test_output_al107; assert_in_delta(0.013886605234278291, worksheet.output_al107, 0.001); end
  def test_output_am107; assert_in_delta(-0.005563057351029577, worksheet.output_am107, 0.001); end
  def test_output_an107; assert_in_delta(-0.19999999999999996, worksheet.output_an107, 0.001); end
  def test_output_ao107; assert_in_delta(-0.3094017094017095, worksheet.output_ao107, 0.001); end
  def test_output_c108; assert_equal("XI.k", worksheet.output_c108); end
  def test_output_d108; assert_equal("V.01", worksheet.output_d108); end
  def test_output_e108; assert_equal("Construction industry", worksheet.output_e108); end
  def test_output_f108; assert_equal("TWh/yr", worksheet.output_f108); end
  def test_output_g108; assert_equal("IEA - Electricity demand - Construction", worksheet.output_g108); end
  def test_output_h108; assert_in_delta(0.082, worksheet.output_h108, 0.001); end
  def test_output_m108; assert_in_delta(0.19, worksheet.output_m108, 0.001); end
  def test_output_r108; assert_in_delta(0.294, worksheet.output_r108, 0.001); end
  def test_output_w108; assert_in_delta(0.321, worksheet.output_w108, 0.001); end
  def test_output_ab108; assert_in_epsilon(1.41, worksheet.output_ab108, 0.001); end
  def test_output_ac108; assert_in_delta(0.15322865172725741, worksheet.output_ac108, 0.001); end
  def test_output_ad108; assert_in_delta(0.17766944350581151, worksheet.output_ad108, 0.001); end
  def test_output_ae108; assert_in_delta(0.20587720696458997, worksheet.output_ae108, 0.001); end
  def test_output_af108; assert_in_delta(0.23839817767657318, worksheet.output_af108, 0.001); end
  def test_output_ag108; assert_in_delta(0.23195498368531442, worksheet.output_ag108, 0.001); end
  def test_output_ah108; assert_in_delta(0.2255117896940557, worksheet.output_ah108, 0.001); end
  def test_output_ai108; assert_in_delta(0.21906859570279694, worksheet.output_ai108, 0.001); end
  def test_output_aj108; assert_in_delta(0.2126254017115382, worksheet.output_aj108, 0.001); end
  def test_output_ak108; assert_in_delta(0.2061822077202795, worksheet.output_ak108, 0.001); end
  def test_output_al108; assert_in_delta(0.0019686268735860063, worksheet.output_al108, 0.001); end
  def test_output_am108; assert_in_delta(0.007448327311484482, worksheet.output_am108, 0.001); end
  def test_output_an108; assert_in_delta(0.3455852113564106, worksheet.output_an108, 0.001); end
  def test_output_ao108; assert_in_epsilon(1.5144171673204818, worksheet.output_ao108, 0.001); end
  def test_output_c109; assert_equal("XI.l", worksheet.output_c109); end
  def test_output_d109; assert_equal("V.01", worksheet.output_d109); end
  def test_output_e109; assert_equal("Other Industry", worksheet.output_e109); end
  def test_output_f109; assert_equal("TWh/yr", worksheet.output_f109); end
  def test_output_g109; assert_equal("IEA - Electricity demand - Other", worksheet.output_g109); end
  def test_output_h109; assert_in_epsilon(3.993, worksheet.output_h109, 0.001); end
  def test_output_m109; assert_in_epsilon(4.65, worksheet.output_m109, 0.001); end
  def test_output_r109; assert_in_epsilon(5.707, worksheet.output_r109, 0.001); end
  def test_output_w109; assert_in_epsilon(5.885, worksheet.output_w109, 0.001); end
  def test_output_ab109; assert_in_epsilon(4.002, worksheet.output_ab109, 0.001); end
  def test_output_ac109; assert_in_delta(0, (worksheet.output_ac109||0), 0.001); end
  def test_output_ad109; assert_in_delta(0, (worksheet.output_ad109||0), 0.001); end
  def test_output_ae109; assert_in_delta(0, (worksheet.output_ae109||0), 0.001); end
  def test_output_af109; assert_in_delta(0, (worksheet.output_af109||0), 0.001); end
  def test_output_ag109; assert_in_delta(0, (worksheet.output_ag109||0), 0.001); end
  def test_output_ah109; assert_in_delta(0, (worksheet.output_ah109||0), 0.001); end
  def test_output_ai109; assert_in_delta(0, (worksheet.output_ai109||0), 0.001); end
  def test_output_aj109; assert_in_delta(0, (worksheet.output_aj109||0), 0.001); end
  def test_output_ak109; assert_in_delta(0, (worksheet.output_ak109||0), 0.001); end
  def test_output_al109; assert_in_delta(0, (worksheet.output_al109||0), 0.001); end
  def test_output_am109; assert_equal("", worksheet.output_am109); end
  def test_output_an109; assert_equal("", worksheet.output_an109); end
  def test_output_ao109; assert_in_delta(-1, worksheet.output_ao109, 0.001); end
  def test_output_c110; assert_equal("XI", worksheet.output_c110); end
  def test_output_d110; assert_equal("V.01", worksheet.output_d110); end
  def test_output_e110; assert_equal("Industry", worksheet.output_e110); end
  def test_output_f110; assert_equal("TWh/yr", worksheet.output_f110); end
  def test_output_g110; assert_equal("IEA - Electricity demand - Total industry", worksheet.output_g110); end
  def test_output_h110; assert_in_epsilon(30.522999999999996, worksheet.output_h110, 0.001); end
  def test_output_i110; assert_in_epsilon(31.081, worksheet.output_i110, 0.001); end
  def test_output_j110; assert_in_epsilon(32.212, worksheet.output_j110, 0.001); end
  def test_output_k110; assert_in_epsilon(31.255, worksheet.output_k110, 0.001); end
  def test_output_l110; assert_in_epsilon(33.608, worksheet.output_l110, 0.001); end
  def test_output_m110; assert_in_epsilon(34.605, worksheet.output_m110, 0.001); end
  def test_output_n110; assert_in_epsilon(34.498, worksheet.output_n110, 0.001); end
  def test_output_o110; assert_in_epsilon(36.421, worksheet.output_o110, 0.001); end
  def test_output_p110; assert_in_epsilon(37.395, worksheet.output_p110, 0.001); end
  def test_output_q110; assert_in_epsilon(37.633, worksheet.output_q110, 0.001); end
  def test_output_r110; assert_in_epsilon(39.867999999999995, worksheet.output_r110, 0.001); end
  def test_output_s110; assert_in_epsilon(39.224, worksheet.output_s110, 0.001); end
  def test_output_t110; assert_in_epsilon(38.933, worksheet.output_t110, 0.001); end
  def test_output_u110; assert_in_epsilon(40.026, worksheet.output_u110, 0.001); end
  def test_output_v110; assert_in_epsilon(40.367, worksheet.output_v110, 0.001); end
  def test_output_w110; assert_in_epsilon(39.423, worksheet.output_w110, 0.001); end
  def test_output_x110; assert_in_epsilon(40.211, worksheet.output_x110, 0.001); end
  def test_output_y110; assert_in_epsilon(40.134, worksheet.output_y110, 0.001); end
  def test_output_z110; assert_in_epsilon(39.019, worksheet.output_z110, 0.001); end
  def test_output_aa110; assert_in_epsilon(32.676, worksheet.output_aa110, 0.001); end
  def test_output_ab110; assert_in_epsilon(38.137, worksheet.output_ab110, 0.001); end
  def test_output_ad110; assert_in_epsilon(20.188462745797988, worksheet.output_ad110, 0.001); end
  def test_output_ae110; assert_in_epsilon(18.958206736925295, worksheet.output_ae110, 0.001); end
  def test_output_af110; assert_in_epsilon(17.841335714891393, worksheet.output_af110, 0.001); end
  def test_output_ag110; assert_in_epsilon(16.488522868095497, worksheet.output_ag110, 0.001); end
  def test_output_ah110; assert_in_epsilon(15.50701938433147, worksheet.output_ah110, 0.001); end
  def test_output_ai110; assert_in_epsilon(14.571047238571516, worksheet.output_ai110, 0.001); end
  def test_output_aj110; assert_in_epsilon(13.668105605944355, worksheet.output_aj110, 0.001); end
  def test_output_al110; assert_in_delta(0.12329537425721779, worksheet.output_al110, 0.001); end
  def test_output_am110; assert_in_delta(-0.011954787042754988, worksheet.output_am110, 0.001); end
  def test_output_an110; assert_in_delta(-0.38188008748700686, worksheet.output_an110, 0.001); end
  def test_output_ao110; assert_in_delta(-0.5769347613556909, worksheet.output_ao110, 0.001); end
  def test_output_e111; assert_equal("Industry electricity consumption based on CHP", worksheet.output_e111); end
  def test_output_f111; assert_equal("TWh/yr", worksheet.output_f111); end
  def test_output_ac149; assert_in_epsilon(10.997030233282302, worksheet.output_ac149, 0.001); end
  def test_output_ac111; assert_in_epsilon(10.997030233282302, worksheet.output_ac111, 0.001); end
  def test_output_ad149; assert_in_epsilon(10.997030233282302, worksheet.output_ad149, 0.001); end
  def test_output_ad111; assert_in_epsilon(10.997030233282302, worksheet.output_ad111, 0.001); end
  def test_output_ae149; assert_in_epsilon(10.997030233282299, worksheet.output_ae149, 0.001); end
  def test_output_ae111; assert_in_epsilon(10.997030233282299, worksheet.output_ae111, 0.001); end
  def test_output_af149; assert_in_epsilon(10.997030233282299, worksheet.output_af149, 0.001); end
  def test_output_af111; assert_in_epsilon(10.997030233282299, worksheet.output_af111, 0.001); end
  def test_output_ag149; assert_in_epsilon(10.997030233282299, worksheet.output_ag149, 0.001); end
  def test_output_ag111; assert_in_epsilon(10.997030233282299, worksheet.output_ag111, 0.001); end
  def test_output_ah149; assert_in_epsilon(10.9970302332823, worksheet.output_ah149, 0.001); end
  def test_output_ah111; assert_in_epsilon(10.9970302332823, worksheet.output_ah111, 0.001); end
  def test_output_ai149; assert_in_epsilon(10.997030233282302, worksheet.output_ai149, 0.001); end
  def test_output_ai111; assert_in_epsilon(10.997030233282302, worksheet.output_ai111, 0.001); end
  def test_output_aj149; assert_in_epsilon(10.997030233282302, worksheet.output_aj149, 0.001); end
  def test_output_aj111; assert_in_epsilon(10.997030233282302, worksheet.output_aj111, 0.001); end
  def test_output_ak111; assert_in_epsilon(10.9970302332823, worksheet.output_ak111, 0.001); end
  def test_output_am111; assert_in_delta(0, (worksheet.output_am111||0), 0.001); end
  def test_output_an111; assert_in_delta(-1.1102230246251565e-16, worksheet.output_an111, 0.001); end
  def test_output_ao111; assert_equal("", worksheet.output_ao111); end
  def test_output_c112; assert_equal("XII.a", worksheet.output_c112); end
  def test_output_d112; assert_equal("V.01", worksheet.output_d112); end
  def test_output_e112; assert_equal("Domestic passenger transport", worksheet.output_e112); end
  def test_output_f112; assert_equal("TWh/yr", worksheet.output_f112); end
  def test_output_g112; assert_equal("IEA - Electricity demand - Rail", worksheet.output_g112); end
  def test_output_h112; assert_in_epsilon(1.249, worksheet.output_h112, 0.001); end
  def test_output_m112; assert_in_epsilon(1.455, worksheet.output_m112, 0.001); end
  def test_output_r112; assert_in_epsilon(1.44, worksheet.output_r112, 0.001); end
  def test_output_w112; assert_in_epsilon(1.675, worksheet.output_w112, 0.001); end
  def test_output_ab112; assert_in_epsilon(1.664, worksheet.output_ab112, 0.001); end
  def test_output_al112; assert_in_delta(0.05787088029291876, worksheet.output_al112, 0.001); end
  def test_output_am112; assert_in_delta(0.04447096020506658, worksheet.output_am112, 0.001); end
  def test_output_an112; assert_in_epsilon(4.699736592409126, worksheet.output_an112, 0.001); end
  def test_output_ao112; assert_in_epsilon(3.852722157147533, worksheet.output_ao112, 0.001); end
  def test_output_c113; assert_equal("XII.b", worksheet.output_c113); end
  def test_output_d113; assert_equal("V.01", worksheet.output_d113); end
  def test_output_e113; assert_equal("Domestic freight", worksheet.output_e113); end
  def test_output_f113; assert_equal("TWh/yr", worksheet.output_f113); end
  def test_output_g113; assert_equal("included in passenger", worksheet.output_g113); end
  def test_output_h113; assert_in_delta(0, (worksheet.output_h113||0), 0.001); end
  def test_output_i113; assert_in_epsilon(1.276, worksheet.output_i113, 0.001); end
  def test_output_j113; assert_in_epsilon(1.305, worksheet.output_j113, 0.001); end
  def test_output_k113; assert_in_epsilon(1.36, worksheet.output_k113, 0.001); end
  def test_output_l113; assert_in_epsilon(1.376, worksheet.output_l113, 0.001); end
  def test_output_m113; assert_in_delta(0, (worksheet.output_m113||0), 0.001); end
  def test_output_n113; assert_in_epsilon(1.267, worksheet.output_n113, 0.001); end
  def test_output_o113; assert_in_epsilon(1.252, worksheet.output_o113, 0.001); end
  def test_output_p113; assert_in_epsilon(1.366, worksheet.output_p113, 0.001); end
  def test_output_q113; assert_in_epsilon(1.401, worksheet.output_q113, 0.001); end
  def test_output_r113; assert_in_delta(0, (worksheet.output_r113||0), 0.001); end
  def test_output_s113; assert_in_epsilon(1.463, worksheet.output_s113, 0.001); end
  def test_output_t113; assert_in_epsilon(1.452, worksheet.output_t113, 0.001); end
  def test_output_u113; assert_in_epsilon(1.49, worksheet.output_u113, 0.001); end
  def test_output_v113; assert_in_epsilon(1.502, worksheet.output_v113, 0.001); end
  def test_output_w113; assert_in_delta(0, (worksheet.output_w113||0), 0.001); end
  def test_output_x113; assert_in_epsilon(1.585, worksheet.output_x113, 0.001); end
  def test_output_y113; assert_in_epsilon(1.658, worksheet.output_y113, 0.001); end
  def test_output_z113; assert_in_epsilon(1.676, worksheet.output_z113, 0.001); end
  def test_output_aa113; assert_in_epsilon(1.651, worksheet.output_aa113, 0.001); end
  def test_output_ab113; assert_in_delta(0, (worksheet.output_ab113||0), 0.001); end
  def test_output_ad113; assert_in_delta(0.3070582336956522, worksheet.output_ad113, 0.001); end
  def test_output_ae113; assert_in_delta(0.560636900985705, worksheet.output_ae113, 0.001); end
  def test_output_af113; assert_in_delta(0.8064936067733195, worksheet.output_af113, 0.001); end
  def test_output_ag113; assert_in_epsilon(1.0434754371082469, worksheet.output_ag113, 0.001); end
  def test_output_ah113; assert_in_epsilon(1.2704670111348808, worksheet.output_ah113, 0.001); end
  def test_output_ai113; assert_in_epsilon(1.4863904810922581, worksheet.output_ai113, 0.001); end
  def test_output_aj113; assert_in_epsilon(1.6902055323140557, worksheet.output_aj113, 0.001); end
  def test_output_al113; assert_in_delta(0.017958915075870024, worksheet.output_al113, 0.001); end
  def test_output_am113; assert_in_delta(0.04696259405850345, worksheet.output_am113, 0.001); end
  def test_output_an113; assert_in_epsilon(5.269697944095317, worksheet.output_an113, 0.001); end
  def test_output_ao113; assert_equal("", worksheet.output_ao113); end
  def test_output_c114; assert_equal("XII.c", worksheet.output_c114); end
  def test_output_d114; assert_equal("V.01", worksheet.output_d114); end
  def test_output_e114; assert_equal("International aviation", worksheet.output_e114); end
  def test_output_f114; assert_equal("TWh/yr", worksheet.output_f114); end
  def test_output_h114; assert_in_delta(0, (worksheet.output_h114||0), 0.001); end
  def test_output_m114; assert_in_delta(0, (worksheet.output_m114||0), 0.001); end
  def test_output_r114; assert_in_delta(0, (worksheet.output_r114||0), 0.001); end
  def test_output_w114; assert_in_delta(0, (worksheet.output_w114||0), 0.001); end
  def test_output_ab114; assert_in_delta(0, (worksheet.output_ab114||0), 0.001); end
  def test_output_ac114; assert_in_delta(0, (worksheet.output_ac114||0), 0.001); end
  def test_output_ad114; assert_in_delta(0, (worksheet.output_ad114||0), 0.001); end
  def test_output_ae114; assert_in_delta(0, (worksheet.output_ae114||0), 0.001); end
  def test_output_af114; assert_in_delta(0, (worksheet.output_af114||0), 0.001); end
  def test_output_ag114; assert_in_delta(0, (worksheet.output_ag114||0), 0.001); end
  def test_output_ah114; assert_in_delta(0, (worksheet.output_ah114||0), 0.001); end
  def test_output_ai114; assert_in_delta(0, (worksheet.output_ai114||0), 0.001); end
  def test_output_aj114; assert_in_delta(0, (worksheet.output_aj114||0), 0.001); end
  def test_output_ak114; assert_in_delta(0, (worksheet.output_ak114||0), 0.001); end
  def test_output_al114; assert_in_delta(0, (worksheet.output_al114||0), 0.001); end
  def test_output_am114; assert_equal("", worksheet.output_am114); end
  def test_output_an114; assert_equal("", worksheet.output_an114); end
  def test_output_ao114; assert_equal("", worksheet.output_ao114); end
  def test_output_c115; assert_equal("XII.d", worksheet.output_c115); end
  def test_output_d115; assert_equal("V.01", worksheet.output_d115); end
  def test_output_e115; assert_equal("Domestic aviation [UNUSED - see XII.a]", worksheet.output_e115); end
  def test_output_f115; assert_equal("TWh/yr", worksheet.output_f115); end
  def test_output_h115; assert_in_delta(0, (worksheet.output_h115||0), 0.001); end
  def test_output_m115; assert_in_delta(0, (worksheet.output_m115||0), 0.001); end
  def test_output_r115; assert_in_delta(0, (worksheet.output_r115||0), 0.001); end
  def test_output_w115; assert_in_delta(0, (worksheet.output_w115||0), 0.001); end
  def test_output_ab115; assert_in_delta(0, (worksheet.output_ab115||0), 0.001); end
  def test_output_ac115; assert_in_delta(0, (worksheet.output_ac115||0), 0.001); end
  def test_output_ad115; assert_in_delta(0, (worksheet.output_ad115||0), 0.001); end
  def test_output_ae115; assert_in_delta(0, (worksheet.output_ae115||0), 0.001); end
  def test_output_af115; assert_in_delta(0, (worksheet.output_af115||0), 0.001); end
  def test_output_ag115; assert_in_delta(0, (worksheet.output_ag115||0), 0.001); end
  def test_output_ah115; assert_in_delta(0, (worksheet.output_ah115||0), 0.001); end
  def test_output_ai115; assert_in_delta(0, (worksheet.output_ai115||0), 0.001); end
  def test_output_aj115; assert_in_delta(0, (worksheet.output_aj115||0), 0.001); end
  def test_output_ak115; assert_in_delta(0, (worksheet.output_ak115||0), 0.001); end
  def test_output_al115; assert_in_delta(0, (worksheet.output_al115||0), 0.001); end
  def test_output_am115; assert_equal("", worksheet.output_am115); end
  def test_output_an115; assert_equal("", worksheet.output_an115); end
  def test_output_ao115; assert_equal("", worksheet.output_ao115); end
  def test_output_c116; assert_equal("XII.e", worksheet.output_c116); end
  def test_output_d116; assert_equal("V.01", worksheet.output_d116); end
  def test_output_e116; assert_equal("International shipping [UNUSED]", worksheet.output_e116); end
  def test_output_f116; assert_equal("TWh/yr", worksheet.output_f116); end
  def test_output_h116; assert_in_delta(0, (worksheet.output_h116||0), 0.001); end
  def test_output_m116; assert_in_delta(0, (worksheet.output_m116||0), 0.001); end
  def test_output_r116; assert_in_delta(0, (worksheet.output_r116||0), 0.001); end
  def test_output_w116; assert_in_delta(0, (worksheet.output_w116||0), 0.001); end
  def test_output_ab116; assert_in_delta(0, (worksheet.output_ab116||0), 0.001); end
  def test_output_ac116; assert_in_delta(0, (worksheet.output_ac116||0), 0.001); end
  def test_output_ad116; assert_in_delta(0, (worksheet.output_ad116||0), 0.001); end
  def test_output_ae116; assert_in_delta(0, (worksheet.output_ae116||0), 0.001); end
  def test_output_af116; assert_in_delta(0, (worksheet.output_af116||0), 0.001); end
  def test_output_ag116; assert_in_delta(0, (worksheet.output_ag116||0), 0.001); end
  def test_output_ah116; assert_in_delta(0, (worksheet.output_ah116||0), 0.001); end
  def test_output_ai116; assert_in_delta(0, (worksheet.output_ai116||0), 0.001); end
  def test_output_aj116; assert_in_delta(0, (worksheet.output_aj116||0), 0.001); end
  def test_output_ak116; assert_in_delta(0, (worksheet.output_ak116||0), 0.001); end
  def test_output_al116; assert_in_delta(0, (worksheet.output_al116||0), 0.001); end
  def test_output_am116; assert_equal("", worksheet.output_am116); end
  def test_output_an116; assert_equal("", worksheet.output_an116); end
  def test_output_ao116; assert_equal("", worksheet.output_ao116); end
  def test_output_c117; assert_equal("XII.f", worksheet.output_c117); end
  def test_output_d117; assert_equal("V.01", worksheet.output_d117); end
  def test_output_e117; assert_equal("National navigation [UNUSED - see XII.a]", worksheet.output_e117); end
  def test_output_f117; assert_equal("TWh/yr", worksheet.output_f117); end
  def test_output_h117; assert_in_delta(0, (worksheet.output_h117||0), 0.001); end
  def test_output_m117; assert_in_delta(0, (worksheet.output_m117||0), 0.001); end
  def test_output_r117; assert_in_delta(0, (worksheet.output_r117||0), 0.001); end
  def test_output_w117; assert_in_delta(0, (worksheet.output_w117||0), 0.001); end
  def test_output_ab117; assert_in_delta(0, (worksheet.output_ab117||0), 0.001); end
  def test_output_ac117; assert_in_delta(0, (worksheet.output_ac117||0), 0.001); end
  def test_output_ad117; assert_in_delta(0, (worksheet.output_ad117||0), 0.001); end
  def test_output_ae117; assert_in_delta(0, (worksheet.output_ae117||0), 0.001); end
  def test_output_af117; assert_in_delta(0, (worksheet.output_af117||0), 0.001); end
  def test_output_ag117; assert_in_delta(0, (worksheet.output_ag117||0), 0.001); end
  def test_output_ah117; assert_in_delta(0, (worksheet.output_ah117||0), 0.001); end
  def test_output_ai117; assert_in_delta(0, (worksheet.output_ai117||0), 0.001); end
  def test_output_aj117; assert_in_delta(0, (worksheet.output_aj117||0), 0.001); end
  def test_output_ak117; assert_in_delta(0, (worksheet.output_ak117||0), 0.001); end
  def test_output_al117; assert_in_delta(0, (worksheet.output_al117||0), 0.001); end
  def test_output_am117; assert_equal("", worksheet.output_am117); end
  def test_output_an117; assert_equal("", worksheet.output_an117); end
  def test_output_ao117; assert_equal("", worksheet.output_ao117); end
  def test_output_c118; assert_equal("VIII.a", worksheet.output_c118); end
  def test_output_d118; assert_equal("V.01", worksheet.output_d118); end
  def test_output_e118; assert_equal("H2 Production for Transport", worksheet.output_e118); end
  def test_output_f118; assert_equal("TWh/yr", worksheet.output_f118); end
  def test_output_g118; assert_equal("IEA - Electricity demand - Pipeline", worksheet.output_g118); end
  def test_output_h118; assert_in_delta(0, (worksheet.output_h118||0), 0.001); end
  def test_output_m118; assert_in_delta(0.009, worksheet.output_m118, 0.001); end
  def test_output_r118; assert_in_delta(0.003, worksheet.output_r118, 0.001); end
  def test_output_w118; assert_in_delta(0.02, worksheet.output_w118, 0.001); end
  def test_output_ab118; assert_in_delta(0.072, worksheet.output_ab118, 0.001); end
  def test_output_ad118; assert_in_delta(0, (worksheet.output_ad118||0), 0.001); end
  def test_output_ae118; assert_in_delta(0.05855309512804192, worksheet.output_ae118, 0.001); end
  def test_output_af118; assert_in_delta(0.1375098638367366, worksheet.output_af118, 0.001); end
  def test_output_ag118; assert_in_delta(0.24191761539202236, worksheet.output_ag118, 0.001); end
  def test_output_ah118; assert_in_delta(0.3753433186853149, worksheet.output_ah118, 0.001); end
  def test_output_ai118; assert_in_delta(0.5455202289223333, worksheet.output_ai118, 0.001); end
  def test_output_aj118; assert_in_delta(0.7583701826449493, worksheet.output_aj118, 0.001); end
  def test_output_al118; assert_in_delta(0.009803389556886349, worksheet.output_al118, 0.001); end
  def test_output_am118; assert_equal("", worksheet.output_am118); end
  def test_output_an118; assert_equal("", worksheet.output_an118); end
  def test_output_ao118; assert_equal("", worksheet.output_ao118); end
  def test_output_c119; assert_equal("VI.a", worksheet.output_c119); end
  def test_output_d119; assert_equal("V.01", worksheet.output_d119); end
  def test_output_e119; assert_equal("Agriculture", worksheet.output_e119); end
  def test_output_f119; assert_equal("TWh/yr", worksheet.output_f119); end
  def test_output_ac119; assert_in_delta(0.5914174336555542, worksheet.output_ac119, 0.001); end
  def test_output_ad119; assert_in_delta(0.589194301542093, worksheet.output_ad119, 0.001); end
  def test_output_ae119; assert_in_delta(0.5870004066090312, worksheet.output_ae119, 0.001); end
  def test_output_af119; assert_in_delta(0.5848353643480833, worksheet.output_af119, 0.001); end
  def test_output_ag119; assert_in_delta(0.582698795307765, worksheet.output_ag119, 0.001); end
  def test_output_ah119; assert_in_delta(0.5717279720526065, worksheet.output_ah119, 0.001); end
  def test_output_ai119; assert_in_delta(0.5648503373937451, worksheet.output_ai119, 0.001); end
  def test_output_aj119; assert_in_delta(0.5582894151620279, worksheet.output_aj119, 0.001); end
  def test_output_al119; assert_in_delta(0.005270786103744027, worksheet.output_al119, 0.001); end
  def test_output_am119; assert_in_delta(-0.001721480756028626, worksheet.output_am119, 0.001); end
  def test_output_an119; assert_in_delta(-0.06659731442128514, worksheet.output_an119, 0.001); end
  def test_output_ao119; assert_equal("", worksheet.output_ao119); end
  def test_output_c120; assert_equal("XII", worksheet.output_c120); end
  def test_output_d120; assert_equal("V.01", worksheet.output_d120); end
  def test_output_e120; assert_equal("Transport", worksheet.output_e120); end
  def test_output_f120; assert_equal("TWh/yr", worksheet.output_f120); end
  def test_output_g120; assert_equal("IEA - Electricity demand - Total transport excluding aviation, navigation and H2 production", worksheet.output_g120); end
  def test_output_h120; assert_in_epsilon(1.249, worksheet.output_h120, 0.001); end
  def test_output_i120; assert_in_epsilon(1.276, worksheet.output_i120, 0.001); end
  def test_output_j120; assert_in_epsilon(1.305, worksheet.output_j120, 0.001); end
  def test_output_k120; assert_in_epsilon(1.36, worksheet.output_k120, 0.001); end
  def test_output_l120; assert_in_epsilon(1.384, worksheet.output_l120, 0.001); end
  def test_output_m120; assert_in_epsilon(1.464, worksheet.output_m120, 0.001); end
  def test_output_n120; assert_in_epsilon(1.278, worksheet.output_n120, 0.001); end
  def test_output_o120; assert_in_epsilon(1.264, worksheet.output_o120, 0.001); end
  def test_output_p120; assert_in_epsilon(1.369, worksheet.output_p120, 0.001); end
  def test_output_q120; assert_in_epsilon(1.404, worksheet.output_q120, 0.001); end
  def test_output_r120; assert_in_epsilon(1.4429999999999998, worksheet.output_r120, 0.001); end
  def test_output_s120; assert_in_epsilon(1.467, worksheet.output_s120, 0.001); end
  def test_output_t120; assert_in_epsilon(1.456, worksheet.output_t120, 0.001); end
  def test_output_u120; assert_in_epsilon(1.494, worksheet.output_u120, 0.001); end
  def test_output_v120; assert_in_epsilon(1.508, worksheet.output_v120, 0.001); end
  def test_output_w120; assert_in_epsilon(1.695, worksheet.output_w120, 0.001); end
  def test_output_x120; assert_in_epsilon(1.608, worksheet.output_x120, 0.001); end
  def test_output_y120; assert_in_epsilon(1.675, worksheet.output_y120, 0.001); end
  def test_output_z120; assert_in_epsilon(1.723, worksheet.output_z120, 0.001); end
  def test_output_aa120; assert_in_epsilon(1.762, worksheet.output_aa120, 0.001); end
  def test_output_ab120; assert_in_epsilon(1.736, worksheet.output_ab120, 0.001); end
  def test_output_ad120; assert_in_epsilon(1.9796994386530256, worksheet.output_ad120, 0.001); end
  def test_output_ae120; assert_in_epsilon(3.540512687449842, worksheet.output_ae120, 0.001); end
  def test_output_af120; assert_in_epsilon(4.8870351611342215, worksheet.output_af120, 0.001); end
  def test_output_ag120; assert_in_epsilon(6.027314452711465, worksheet.output_ag120, 0.001); end
  def test_output_ah120; assert_in_epsilon(6.958863311591724, worksheet.output_ah120, 0.001); end
  def test_output_ai120; assert_in_epsilon(7.878329176112453, worksheet.output_ai120, 0.001); end
  def test_output_aj120; assert_in_epsilon(8.672319392582173, worksheet.output_aj120, 0.001); end
  def test_output_al120; assert_in_delta(0.09090397102941916, worksheet.output_al120, 0.001); end
  def test_output_am120; assert_in_delta(0.04037320741281114, worksheet.output_am120, 0.001); end
  def test_output_an120; assert_in_epsilon(3.870419546174352, worksheet.output_an120, 0.001); end
  def test_output_ao120; assert_in_epsilon(6.622688857579688, worksheet.output_ao120, 0.001); end
  def test_output_c121; assert_equal("XIII.a", worksheet.output_c121); end
  def test_output_d121; assert_equal("V.01", worksheet.output_d121); end
  def test_output_e121; assert_equal("Food consumption [UNUSED]", worksheet.output_e121); end
  def test_output_f121; assert_equal("TWh/yr", worksheet.output_f121); end
  def test_output_g121; assert_equal("IEA - Electricity demand - Agriculture/Forestry", worksheet.output_g121); end
  def test_output_h121; assert_in_delta(0, (worksheet.output_h121||0), 0.001); end
  def test_output_m121; assert_in_delta(0, (worksheet.output_m121||0), 0.001); end
  def test_output_r121; assert_in_delta(0.257, worksheet.output_r121, 0.001); end
  def test_output_w121; assert_in_delta(0.374, worksheet.output_w121, 0.001); end
  def test_output_ab121; assert_in_delta(0.826, worksheet.output_ab121, 0.001); end
  def test_output_ac121; assert_in_delta(0, (worksheet.output_ac121||0), 0.001); end
  def test_output_ad121; assert_in_delta(0, (worksheet.output_ad121||0), 0.001); end
  def test_output_ae121; assert_in_delta(0, (worksheet.output_ae121||0), 0.001); end
  def test_output_af121; assert_in_delta(0, (worksheet.output_af121||0), 0.001); end
  def test_output_ag121; assert_in_delta(0, (worksheet.output_ag121||0), 0.001); end
  def test_output_ah121; assert_in_delta(0, (worksheet.output_ah121||0), 0.001); end
  def test_output_ai121; assert_in_delta(0, (worksheet.output_ai121||0), 0.001); end
  def test_output_aj121; assert_in_delta(0, (worksheet.output_aj121||0), 0.001); end
  def test_output_ak121; assert_in_delta(0, (worksheet.output_ak121||0), 0.001); end
  def test_output_al121; assert_in_delta(0, (worksheet.output_al121||0), 0.001); end
  def test_output_am121; assert_equal("", worksheet.output_am121); end
  def test_output_an121; assert_equal("", worksheet.output_an121); end
  def test_output_ao121; assert_equal("", worksheet.output_ao121); end
  def test_output_c122; assert_equal("XIII", worksheet.output_c122); end
  def test_output_d122; assert_equal("V.01", worksheet.output_d122); end
  def test_output_e122; assert_equal("Food consumption [UNUSED]", worksheet.output_e122); end
  def test_output_f122; assert_equal("TWh/yr", worksheet.output_f122); end
  def test_output_ac122; assert_in_delta(0, (worksheet.output_ac122||0), 0.001); end
  def test_output_ad122; assert_in_delta(0, (worksheet.output_ad122||0), 0.001); end
  def test_output_ae122; assert_in_delta(0, (worksheet.output_ae122||0), 0.001); end
  def test_output_af122; assert_in_delta(0, (worksheet.output_af122||0), 0.001); end
  def test_output_ag122; assert_in_delta(0, (worksheet.output_ag122||0), 0.001); end
  def test_output_ah122; assert_in_delta(0, (worksheet.output_ah122||0), 0.001); end
  def test_output_ai122; assert_in_delta(0, (worksheet.output_ai122||0), 0.001); end
  def test_output_aj122; assert_in_delta(0, (worksheet.output_aj122||0), 0.001); end
  def test_output_ak122; assert_in_delta(0, (worksheet.output_ak122||0), 0.001); end
  def test_output_al122; assert_in_delta(0, (worksheet.output_al122||0), 0.001); end
  def test_output_am122; assert_equal("", worksheet.output_am122); end
  def test_output_an122; assert_equal("", worksheet.output_an122); end
  def test_output_ao122; assert_equal("", worksheet.output_ao122); end
  def test_output_c123; assert_equal("XIV.a", worksheet.output_c123); end
  def test_output_d123; assert_equal("V.01", worksheet.output_d123); end
  def test_output_e123; assert_equal("Geosequestration [UNUSED]", worksheet.output_e123); end
  def test_output_f123; assert_equal("TWh/yr", worksheet.output_f123); end
  def test_output_ac123; assert_in_delta(0, (worksheet.output_ac123||0), 0.001); end
  def test_output_ad123; assert_in_delta(0, (worksheet.output_ad123||0), 0.001); end
  def test_output_ae123; assert_in_delta(0, (worksheet.output_ae123||0), 0.001); end
  def test_output_af123; assert_in_delta(0, (worksheet.output_af123||0), 0.001); end
  def test_output_ag123; assert_in_delta(0, (worksheet.output_ag123||0), 0.001); end
  def test_output_ah123; assert_in_delta(0, (worksheet.output_ah123||0), 0.001); end
  def test_output_ai123; assert_in_delta(0, (worksheet.output_ai123||0), 0.001); end
  def test_output_aj123; assert_in_delta(0, (worksheet.output_aj123||0), 0.001); end
  def test_output_ak123; assert_in_delta(0, (worksheet.output_ak123||0), 0.001); end
  def test_output_al123; assert_in_delta(0, (worksheet.output_al123||0), 0.001); end
  def test_output_am123; assert_equal("", worksheet.output_am123); end
  def test_output_an123; assert_equal("", worksheet.output_an123); end
  def test_output_ao123; assert_equal("", worksheet.output_ao123); end
  def test_output_c124; assert_equal("XIV", worksheet.output_c124); end
  def test_output_d124; assert_equal("V.01", worksheet.output_d124); end
  def test_output_e124; assert_equal("Geosequestration", worksheet.output_e124); end
  def test_output_f124; assert_equal("TWh/yr", worksheet.output_f124); end
  def test_output_ad124; assert_in_delta(0, (worksheet.output_ad124||0), 0.001); end
  def test_output_ae124; assert_in_delta(0, (worksheet.output_ae124||0), 0.001); end
  def test_output_af124; assert_in_delta(0, (worksheet.output_af124||0), 0.001); end
  def test_output_ag124; assert_in_delta(0, (worksheet.output_ag124||0), 0.001); end
  def test_output_ah124; assert_in_delta(0, (worksheet.output_ah124||0), 0.001); end
  def test_output_ai124; assert_in_delta(0, (worksheet.output_ai124||0), 0.001); end
  def test_output_aj124; assert_in_delta(0, (worksheet.output_aj124||0), 0.001); end
  def test_output_al124; assert_in_delta(0, (worksheet.output_al124||0), 0.001); end
  def test_output_am124; assert_equal("", worksheet.output_am124); end
  def test_output_an124; assert_equal("", worksheet.output_an124); end
  def test_output_ao124; assert_equal("", worksheet.output_ao124); end
  def test_output_c125; assert_equal("VII.b", worksheet.output_c125); end
  def test_output_d125; assert_equal("V.02", worksheet.output_d125); end
  def test_output_e125; assert_equal("Electricity losses", worksheet.output_e125); end
  def test_output_f125; assert_equal("TWh/yr", worksheet.output_f125); end
  def test_output_ad125; assert_in_epsilon(4.896149782779091, worksheet.output_ad125, 0.001); end
  def test_output_ae125; assert_in_epsilon(5.258105238430204, worksheet.output_ae125, 0.001); end
  def test_output_af125; assert_in_epsilon(5.535496362684313, worksheet.output_af125, 0.001); end
  def test_output_ag125; assert_in_epsilon(5.7254293047730584, worksheet.output_ag125, 0.001); end
  def test_output_ah125; assert_in_epsilon(5.89853701760525, worksheet.output_ah125, 0.001); end
  def test_output_ai125; assert_in_epsilon(6.0586251861218585, worksheet.output_ai125, 0.001); end
  def test_output_aj125; assert_in_epsilon(6.191729502689796, worksheet.output_aj125, 0.001); end
  def test_output_am125; assert_in_delta(0.008038008837480959, worksheet.output_am125, 0.001); end
  def test_output_an125; assert_in_delta(0.3774514890067393, worksheet.output_an125, 0.001); end
  def test_output_ao125; assert_equal("", worksheet.output_ao125); end
  def test_output_e126; assert_equal("Total consumption", worksheet.output_e126); end
  def test_output_f126; assert_equal("TWh/yr", worksheet.output_f126); end
  def test_output_g126; assert_equal("IEA - ELET34 - Consommation totale observée", worksheet.output_g126); end
  def test_output_h126; assert_in_epsilon(59.108000000000004, worksheet.output_h126, 0.001); end
  def test_output_i126; assert_in_epsilon(61.783, worksheet.output_i126, 0.001); end
  def test_output_j126; assert_in_epsilon(63.871, worksheet.output_j126, 0.001); end
  def test_output_k126; assert_in_epsilon(64.644, worksheet.output_k126, 0.001); end
  def test_output_l126; assert_in_epsilon(67.822, worksheet.output_l126, 0.001); end
  def test_output_m126; assert_in_epsilon(69.829, worksheet.output_m126, 0.001); end
  def test_output_n126; assert_in_epsilon(71.405, worksheet.output_n126, 0.001); end
  def test_output_o126; assert_in_epsilon(73.321, worksheet.output_o126, 0.001); end
  def test_output_p126; assert_in_epsilon(75.527, worksheet.output_p126, 0.001); end
  def test_output_q126; assert_in_epsilon(76.05, worksheet.output_q126, 0.001); end
  def test_output_r126; assert_in_epsilon(79.166, worksheet.output_r126, 0.001); end
  def test_output_s126; assert_in_epsilon(79.816, worksheet.output_s126, 0.001); end
  def test_output_t126; assert_in_epsilon(80.438, worksheet.output_t126, 0.001); end
  def test_output_u126; assert_in_epsilon(82.065, worksheet.output_u126, 0.001); end
  def test_output_v126; assert_in_epsilon(83.76, worksheet.output_v126, 0.001); end
  def test_output_w126; assert_in_epsilon(83.63600000000001, worksheet.output_w126, 0.001); end
  def test_output_x126; assert_in_epsilon(86.055, worksheet.output_x126, 0.001); end
  def test_output_y126; assert_in_epsilon(86.084, worksheet.output_y126, 0.001); end
  def test_output_z126; assert_in_epsilon(85.822, worksheet.output_z126, 0.001); end
  def test_output_aa126; assert_in_epsilon(79.662, worksheet.output_aa126, 0.001); end
  def test_output_ab126; assert_in_epsilon(85.91799999999999, worksheet.output_ab126, 0.001); end
  def test_output_ad126; assert_in_epsilon(82.4765507242275, worksheet.output_ad126, 0.001); end
  def test_output_ae126; assert_in_epsilon(87.84540719670835, worksheet.output_ae126, 0.001); end
  def test_output_af126; assert_in_epsilon(92.03636617092512, worksheet.output_af126, 0.001); end
  def test_output_ag126; assert_in_epsilon(95.01672075300011, worksheet.output_ag126, 0.001); end
  def test_output_ah126; assert_in_epsilon(97.7820014429507, worksheet.output_ah126, 0.001); end
  def test_output_ai126; assert_in_epsilon(100.42412536837375, worksheet.output_ai126, 0.001); end
  def test_output_aj126; assert_in_epsilon(102.73838232491322, worksheet.output_aj126, 0.001); end
  def test_output_al126; assert_in_delta(1, worksheet.output_al126, 0.001); end
  def test_output_am126; assert_in_delta(0.007188097946721594, worksheet.output_am126, 0.001); end
  def test_output_an126; assert_in_delta(0.3317521327577051, worksheet.output_an126, 0.001); end
  def test_output_ao126; assert_in_delta(0.771909397978376, worksheet.output_ao126, 0.001); end
  def test_output_aq126; assert_in_epsilon(87.35132235084444, worksheet.output_aq126, 0.001); end
  def test_output_b127; assert_equal("REF", worksheet.output_b127); end
  def test_output_e127; assert_equal("Reference scenario", worksheet.output_e127); end
  def test_output_f127; assert_equal("TWh/yr", worksheet.output_f127); end
  def test_output_g127; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g127); end
  def test_output_ac127; assert_in_epsilon(86.41144920235298, worksheet.output_ac127, 0.001); end
  def test_output_ad127; assert_in_epsilon(90.84444349677565, worksheet.output_ad127, 0.001); end
  def test_output_ae127; assert_in_epsilon(97.17267127504138, worksheet.output_ae127, 0.001); end
  def test_output_af127; assert_in_epsilon(102.96413619106767, worksheet.output_af127, 0.001); end
  def test_output_ag127; assert_in_epsilon(108.77025799002102, worksheet.output_ag127, 0.001); end
  def test_output_ah127; assert_in_epsilon(114.60924701733546, worksheet.output_ah127, 0.001); end
  def test_output_ai127; assert_in_epsilon(120.85059253546466, worksheet.output_ai127, 0.001); end
  def test_output_aj127; assert_in_epsilon(127.41509247448818, worksheet.output_aj127, 0.001); end
  def test_output_ak127; assert_in_epsilon(134.32104286496013, worksheet.output_ak127, 0.001); end
  def test_output_al127; assert_in_epsilon(1.2824967663106948, worksheet.output_al127, 0.001); end
  def test_output_am127; assert_in_delta(0.011088845384315649, worksheet.output_am127, 0.001); end
  def test_output_an127; assert_in_delta(0.5544357154619108, worksheet.output_an127, 0.001); end
  def test_output_ao127; assert_equal("", worksheet.output_ao127); end
  def test_output_e128; assert_equal("Domestic electricity demand", worksheet.output_e128); end
  def test_output_f128; assert_equal("TWh/yr", worksheet.output_f128); end
  def test_output_h128; assert_in_delta(0, (worksheet.output_h128||0), 0.001); end
  def test_output_m128; assert_in_delta(0, (worksheet.output_m128||0), 0.001); end
  def test_output_r128; assert_in_delta(0, (worksheet.output_r128||0), 0.001); end
  def test_output_w128; assert_in_delta(0, (worksheet.output_w128||0), 0.001); end
  def test_output_ab128; assert_in_delta(0, (worksheet.output_ab128||0), 0.001); end
  def test_output_ac95; assert_in_epsilon(12.912142832, worksheet.output_ac95, 0.001); end
  def test_output_ac89; assert_in_epsilon(4.816689403032683, worksheet.output_ac89, 0.001); end
  def test_output_ac112; assert_in_epsilon(1.0633912420355247, worksheet.output_ac112, 0.001); end
  def test_output_ac128; assert_in_epsilon(18.79222347706821, worksheet.output_ac128, 0.001); end
  def test_output_ad89; assert_in_epsilon(6.926474804916896, worksheet.output_ad89, 0.001); end
  def test_output_ad112; assert_in_epsilon(1.0834469034152803, worksheet.output_ad112, 0.001); end
  def test_output_ad128; assert_in_epsilon(21.618070096165507, worksheet.output_ad128, 0.001); end
  def test_output_ae89; assert_in_epsilon(8.89004591131163, worksheet.output_ae89, 0.001); end
  def test_output_ae112; assert_in_epsilon(2.3343222847270644, worksheet.output_ae112, 0.001); end
  def test_output_ae128; assert_in_epsilon(25.40613242198138, worksheet.output_ae128, 0.001); end
  def test_output_af89; assert_in_epsilon(10.82202313136418, worksheet.output_af89, 0.001); end
  def test_output_af112; assert_in_epsilon(3.358196326176082, worksheet.output_af112, 0.001); end
  def test_output_af128; assert_in_epsilon(28.625913260650858, worksheet.output_af128, 0.001); end
  def test_output_ag89; assert_in_epsilon(12.400782439107877, worksheet.output_ag89, 0.001); end
  def test_output_ag112; assert_in_epsilon(4.159222604903431, worksheet.output_ag112, 0.001); end
  def test_output_ag128; assert_in_epsilon(31.268113306922107, worksheet.output_ag128, 0.001); end
  def test_output_ah89; assert_in_epsilon(13.897376987765817, worksheet.output_ah89, 0.001); end
  def test_output_ah112; assert_in_epsilon(4.741325009718922, worksheet.output_ah112, 0.001); end
  def test_output_ah128; assert_in_epsilon(33.51359150742526, worksheet.output_ah128, 0.001); end
  def test_output_ai89; assert_in_epsilon(15.335888663399848, worksheet.output_ai89, 0.001); end
  def test_output_ai112; assert_in_epsilon(5.281568128704118, worksheet.output_ai112, 0.001); end
  def test_output_ai128; assert_in_epsilon(35.65856723025599, worksheet.output_ai128, 0.001); end
  def test_output_aj89; assert_in_epsilon(16.717323798453457, worksheet.output_aj89, 0.001); end
  def test_output_aj112; assert_in_epsilon(5.6654542624611395, worksheet.output_aj112, 0.001); end
  def test_output_aj128; assert_in_epsilon(37.52988289152846, worksheet.output_aj128, 0.001); end
  def test_output_ak128; assert_in_epsilon(39.767762097963654, worksheet.output_ak128, 0.001); end
  def test_output_al128; assert_in_delta(0.37970242939020626, worksheet.output_al128, 0.001); end
  def test_output_am128; assert_in_delta(0.01891703837109926, worksheet.output_am128, 0.001); end
  def test_output_an128; assert_in_epsilon(1.1161818422653123, worksheet.output_an128, 0.001); end
  def test_output_ao128; assert_equal("", worksheet.output_ao128); end
  def test_output_b129; assert_equal("Electricity Generation", worksheet.output_b129); end
  def test_output_am129; assert_equal("", worksheet.output_am129); end
  def test_output_an129; assert_equal("", worksheet.output_an129); end
  def test_output_ao129; assert_equal("", worksheet.output_ao129); end
  def test_output_c130; assert_equal("I.a", worksheet.output_c130); end
  def test_output_d130; assert_equal("V.02", worksheet.output_d130); end
  def test_output_e130; assert_equal("Coal+Gas+Oil power stations", worksheet.output_e130); end
  def test_output_f130; assert_equal("TWh/yr", worksheet.output_f130); end
  def test_output_g130; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g130); end
  def test_output_h130; assert_in_epsilon(27.297, worksheet.output_h130, 0.001); end
  def test_output_i130; assert_in_epsilon(28.088, worksheet.output_i130, 0.001); end
  def test_output_j130; assert_in_epsilon(27.604, worksheet.output_j130, 0.001); end
  def test_output_k130; assert_in_epsilon(27.879, worksheet.output_k130, 0.001); end
  def test_output_l130; assert_in_epsilon(30.362, worksheet.output_l130, 0.001); end
  def test_output_m130; assert_in_epsilon(31.813, worksheet.output_m130, 0.001); end
  def test_output_n130; assert_in_epsilon(31.555, worksheet.output_n130, 0.001); end
  def test_output_o130; assert_in_epsilon(30.14, worksheet.output_o130, 0.001); end
  def test_output_p130; assert_in_epsilon(35.51, worksheet.output_p130, 0.001); end
  def test_output_q130; assert_in_epsilon(33.995, worksheet.output_q130, 0.001); end
  def test_output_r130; assert_in_epsilon(34.14, worksheet.output_r130, 0.001); end
  def test_output_s130; assert_in_epsilon(31.791, worksheet.output_s130, 0.001); end
  def test_output_t130; assert_in_epsilon(33.162, worksheet.output_t130, 0.001); end
  def test_output_u130; assert_in_epsilon(35.847, worksheet.output_u130, 0.001); end
  def test_output_v130; assert_in_epsilon(36.581, worksheet.output_v130, 0.001); end
  def test_output_w130; assert_in_epsilon(37.332, worksheet.output_w130, 0.001); end
  def test_output_x130; assert_in_epsilon(36.72, worksheet.output_x130, 0.001); end
  def test_output_y130; assert_in_epsilon(38.167, worksheet.output_y130, 0.001); end
  def test_output_z130; assert_in_epsilon(36.68, worksheet.output_z130, 0.001); end
  def test_output_aa130; assert_in_epsilon(40.999, worksheet.output_aa130, 0.001); end
  def test_output_ab130; assert_in_epsilon(43.401, worksheet.output_ab130, 0.001); end
  def test_output_ad130; assert_in_epsilon(10.487709584609924, worksheet.output_ad130, 0.001); end
  def test_output_ae130; assert_in_epsilon(13.135540284582829, worksheet.output_ae130, 0.001); end
  def test_output_af130; assert_in_epsilon(48.34572327995584, worksheet.output_af130, 0.001); end
  def test_output_ag130; assert_in_epsilon(38.46374103771292, worksheet.output_ag130, 0.001); end
  def test_output_ah130; assert_in_epsilon(29.855645624036793, worksheet.output_ah130, 0.001); end
  def test_output_ai130; assert_in_epsilon(22.795197271272272, worksheet.output_ai130, 0.001); end
  def test_output_aj130; assert_in_epsilon(12.541959616522393, worksheet.output_aj130, 0.001); end
  def test_output_am130; assert_in_delta(-1, worksheet.output_am130, 0.001); end
  def test_output_an130; assert_in_delta(-1, worksheet.output_an130, 0.001); end
  def test_output_ao130; assert_in_delta(-1, worksheet.output_ao130, 0.001); end
  def test_output_c131; assert_equal("I.a", worksheet.output_c131); end
  def test_output_e131; assert_equal("Biomass power stations", worksheet.output_e131); end
  def test_output_f131; assert_equal("TWh/yr", worksheet.output_f131); end
  def test_output_h131; assert_equal("above", worksheet.output_h131); end
  def test_output_i131; assert_equal("above", worksheet.output_i131); end
  def test_output_j131; assert_equal("above", worksheet.output_j131); end
  def test_output_k131; assert_equal("above", worksheet.output_k131); end
  def test_output_l131; assert_equal("above", worksheet.output_l131); end
  def test_output_m131; assert_equal("above", worksheet.output_m131); end
  def test_output_n131; assert_equal("above", worksheet.output_n131); end
  def test_output_o131; assert_equal("above", worksheet.output_o131); end
  def test_output_p131; assert_equal("above", worksheet.output_p131); end
  def test_output_q131; assert_equal("above", worksheet.output_q131); end
  def test_output_r131; assert_equal("above", worksheet.output_r131); end
  def test_output_s131; assert_equal("above", worksheet.output_s131); end
  def test_output_t131; assert_equal("above", worksheet.output_t131); end
  def test_output_u131; assert_equal("above", worksheet.output_u131); end
  def test_output_v131; assert_equal("above", worksheet.output_v131); end
  def test_output_w131; assert_equal("above", worksheet.output_w131); end
  def test_output_x131; assert_equal("above", worksheet.output_x131); end
  def test_output_y131; assert_equal("above", worksheet.output_y131); end
  def test_output_z131; assert_equal("above", worksheet.output_z131); end
  def test_output_aa131; assert_equal("above", worksheet.output_aa131); end
  def test_output_ab131; assert_equal("above", worksheet.output_ab131); end
  def test_output_ac131; assert_in_epsilon(3.7612484236568107, worksheet.output_ac131, 0.001); end
  def test_output_ad131; assert_in_epsilon(5.151015150071418, worksheet.output_ad131, 0.001); end
  def test_output_ae131; assert_in_epsilon(6.763383663898049, worksheet.output_ae131, 0.001); end
  def test_output_af131; assert_in_epsilon(8.055619048927715, worksheet.output_af131, 0.001); end
  def test_output_ag131; assert_in_epsilon(9.213842273467389, worksheet.output_ag131, 0.001); end
  def test_output_ah131; assert_in_epsilon(10.164223902726224, worksheet.output_ah131, 0.001); end
  def test_output_ai131; assert_in_epsilon(11.108506289123495, worksheet.output_ai131, 0.001); end
  def test_output_aj131; assert_in_epsilon(12.043639811228415, worksheet.output_aj131, 0.001); end
  def test_output_ak131; assert_in_epsilon(12.978773333333333, worksheet.output_ak131, 0.001); end
  def test_output_am131; assert_in_delta(0.03144848125051003, worksheet.output_am131, 0.001); end
  def test_output_an131; assert_in_epsilon(2.4506557056167373, worksheet.output_an131, 0.001); end
  def test_output_ao131; assert_equal("", worksheet.output_ao131); end
  def test_output_aq131; assert_equal("CHART", worksheet.output_aq131); end
  def test_output_c132; assert_equal("IX.a", worksheet.output_c132); end
  def test_output_d132; assert_equal("V.02", worksheet.output_d132); end
  def test_output_e132; assert_equal("Domestic space heating and hot water", worksheet.output_e132); end
  def test_output_f132; assert_equal("TWh/yr", worksheet.output_f132); end
  def test_output_h132; assert_in_delta(0, (worksheet.output_h132||0), 0.001); end
  def test_output_i132; assert_in_delta(0, (worksheet.output_i132||0), 0.001); end
  def test_output_j132; assert_in_delta(0, (worksheet.output_j132||0), 0.001); end
  def test_output_k132; assert_in_delta(0, (worksheet.output_k132||0), 0.001); end
  def test_output_l132; assert_in_delta(0, (worksheet.output_l132||0), 0.001); end
  def test_output_m132; assert_in_delta(0, (worksheet.output_m132||0), 0.001); end
  def test_output_n132; assert_in_delta(0, (worksheet.output_n132||0), 0.001); end
  def test_output_o132; assert_in_delta(0, (worksheet.output_o132||0), 0.001); end
  def test_output_p132; assert_in_delta(0, (worksheet.output_p132||0), 0.001); end
  def test_output_q132; assert_in_delta(0, (worksheet.output_q132||0), 0.001); end
  def test_output_r132; assert_in_delta(0, (worksheet.output_r132||0), 0.001); end
  def test_output_s132; assert_in_delta(0, (worksheet.output_s132||0), 0.001); end
  def test_output_t132; assert_in_delta(0, (worksheet.output_t132||0), 0.001); end
  def test_output_u132; assert_in_delta(0, (worksheet.output_u132||0), 0.001); end
  def test_output_v132; assert_in_delta(0, (worksheet.output_v132||0), 0.001); end
  def test_output_w132; assert_in_delta(0.266, worksheet.output_w132, 0.001); end
  def test_output_x132; assert_in_delta(0.256, worksheet.output_x132, 0.001); end
  def test_output_y132; assert_in_delta(0.246, worksheet.output_y132, 0.001); end
  def test_output_z132; assert_in_delta(0.244, worksheet.output_z132, 0.001); end
  def test_output_aa132; assert_in_delta(0.083, worksheet.output_aa132, 0.001); end
  def test_output_ab132; assert_in_delta(0.255, worksheet.output_ab132, 0.001); end
  def test_output_ac132; assert_in_delta(0, (worksheet.output_ac132||0), 0.001); end
  def test_output_ad132; assert_in_delta(0.15655881031461183, worksheet.output_ad132, 0.001); end
  def test_output_ae132; assert_in_delta(0.3144011297886694, worksheet.output_ae132, 0.001); end
  def test_output_af132; assert_in_delta(0.474851657962819, worksheet.output_af132, 0.001); end
  def test_output_ag132; assert_in_delta(0.6206025714220124, worksheet.output_ag132, 0.001); end
  def test_output_ah132; assert_in_delta(0.7646442937302946, worksheet.output_ah132, 0.001); end
  def test_output_ai132; assert_in_delta(0.9100266549790077, worksheet.output_ai132, 0.001); end
  def test_output_aj132; assert_in_epsilon(1.0587615833686979, worksheet.output_aj132, 0.001); end
  def test_output_ak132; assert_in_epsilon(1.2235674157756244, worksheet.output_ak132, 0.001); end
  def test_output_am132; assert_equal("", worksheet.output_am132); end
  def test_output_an132; assert_equal("", worksheet.output_an132); end
  def test_output_ao132; assert_equal("", worksheet.output_ao132); end
  def test_output_aq132; assert_equal("Imports of decarbonized electricity", worksheet.output_aq132); end
  def test_output_ar132; assert_in_epsilon(2.1, worksheet.output_ar132, 0.001); end
  def test_output_c133; assert_equal("IX.c", worksheet.output_c133); end
  def test_output_d133; assert_equal("V.02", worksheet.output_d133); end
  def test_output_e133; assert_equal("Commercial heating and cooling", worksheet.output_e133); end
  def test_output_f133; assert_equal("TWh/yr", worksheet.output_f133); end
  def test_output_h133; assert_in_delta(0, (worksheet.output_h133||0), 0.001); end
  def test_output_m133; assert_in_delta(0, (worksheet.output_m133||0), 0.001); end
  def test_output_r133; assert_in_delta(0, (worksheet.output_r133||0), 0.001); end
  def test_output_w133; assert_in_delta(0, (worksheet.output_w133||0), 0.001); end
  def test_output_ab133; assert_in_delta(0, (worksheet.output_ab133||0), 0.001); end
  def test_output_ac133; assert_in_delta(0, (worksheet.output_ac133||0), 0.001); end
  def test_output_ad133; assert_in_delta(0, (worksheet.output_ad133||0), 0.001); end
  def test_output_ae133; assert_in_delta(0.04451833355036168, worksheet.output_ae133, 0.001); end
  def test_output_af133; assert_in_delta(0.08000889257104199, worksheet.output_af133, 0.001); end
  def test_output_ag133; assert_in_delta(0.10750720036834278, worksheet.output_ag133, 0.001); end
  def test_output_ah133; assert_in_delta(0.12701786664519638, worksheet.output_ah133, 0.001); end
  def test_output_ai133; assert_in_delta(0.13966505173773808, worksheet.output_ai133, 0.001); end
  def test_output_aj133; assert_in_delta(0.14556250687342376, worksheet.output_aj133, 0.001); end
  def test_output_ak133; assert_in_delta(0.16590301057785156, worksheet.output_ak133, 0.001); end
  def test_output_am133; assert_equal("", worksheet.output_am133); end
  def test_output_an133; assert_equal("", worksheet.output_an133); end
  def test_output_ao133; assert_equal("", worksheet.output_ao133); end
  def test_output_aq133; assert_equal("Solar PV", worksheet.output_aq133); end
  def test_output_ar133; assert_in_epsilon(12.571476, worksheet.output_ar133, 0.001); end
  def test_output_c134; assert_equal("XVII.a", worksheet.output_c134); end
  def test_output_d134; assert_equal("V.02", worksheet.output_d134); end
  def test_output_e134; assert_equal("District heating effective demand", worksheet.output_e134); end
  def test_output_f134; assert_equal("TWh/yr", worksheet.output_f134); end
  def test_output_ac134; assert_in_epsilon(-2.0343948417767277, worksheet.output_ac134, 0.001); end
  def test_output_ad134; assert_in_epsilon(-2.004826916735035, worksheet.output_ad134, 0.001); end
  def test_output_ae134; assert_in_epsilon(-1.7763958576838008, worksheet.output_ae134, 0.001); end
  def test_output_af134; assert_in_epsilon(-1.5606107937903553, worksheet.output_af134, 0.001); end
  def test_output_ag134; assert_in_epsilon(-1.2302449809020342, worksheet.output_ag134, 0.001); end
  def test_output_ah134; assert_in_epsilon(-1.0686662639106852, worksheet.output_ah134, 0.001); end
  def test_output_ai134; assert_in_delta(-0.9329455789821309, worksheet.output_ai134, 0.001); end
  def test_output_aj134; assert_in_delta(-0.8103658173127634, worksheet.output_aj134, 0.001); end
  def test_output_ak134; assert_in_delta(-0.6893433395095286, worksheet.output_ak134, 0.001); end
  def test_output_am134; assert_in_delta(-0.026692637785733497, worksheet.output_am134, 0.001); end
  def test_output_an134; assert_in_delta(-0.661155580345704, worksheet.output_an134, 0.001); end
  def test_output_ao134; assert_equal("", worksheet.output_ao134); end
  def test_output_aq134; assert_equal("Wind on/offshore", worksheet.output_aq134); end
  def test_output_ar134; assert_in_epsilon(40.62194055369114, worksheet.output_ar134, 0.001); end
  def test_output_e135; assert_equal("Residential CHP", worksheet.output_e135); end
  def test_output_f135; assert_equal("TWh/yr", worksheet.output_f135); end
  def test_output_h135; assert_in_delta(0, (worksheet.output_h135||0), 0.001); end
  def test_output_m135; assert_in_delta(0, (worksheet.output_m135||0), 0.001); end
  def test_output_r135; assert_in_delta(0, (worksheet.output_r135||0), 0.001); end
  def test_output_w135; assert_in_delta(0, (worksheet.output_w135||0), 0.001); end
  def test_output_ab135; assert_in_delta(0, (worksheet.output_ab135||0), 0.001); end
  def test_output_ad135; assert_in_epsilon(-1.8482681064204232, worksheet.output_ad135, 0.001); end
  def test_output_ae135; assert_in_epsilon(-1.4174763943447697, worksheet.output_ae135, 0.001); end
  def test_output_af135; assert_in_epsilon(-1.0057502432564944, worksheet.output_af135, 0.001); end
  def test_output_ag135; assert_in_delta(-0.502135209111679, worksheet.output_ag135, 0.001); end
  def test_output_ah135; assert_in_delta(-0.17700410353519413, worksheet.output_ah135, 0.001); end
  def test_output_ai135; assert_in_delta(0.11674612773461479, worksheet.output_ai135, 0.001); end
  def test_output_aj135; assert_in_delta(0.39395827292935814, worksheet.output_aj135, 0.001); end
  def test_output_am135; assert_equal("", worksheet.output_am135); end
  def test_output_an135; assert_in_epsilon(-1.344145134693959, worksheet.output_an135, 0.001); end
  def test_output_ao135; assert_equal("", worksheet.output_ao135); end
  def test_output_aq135; assert_equal("Geothermal and hydro electricity", worksheet.output_aq135); end
  def test_output_ar135; assert_in_epsilon(24.8142274130137, worksheet.output_ar135, 0.001); end
  def test_output_c136; assert_equal("I.b", worksheet.output_c136); end
  def test_output_e136; assert_equal("Carbon Capture Storage (CCS)", worksheet.output_e136); end
  def test_output_f136; assert_equal("TWh/yr", worksheet.output_f136); end
  def test_output_h136; assert_in_delta(0, (worksheet.output_h136||0), 0.001); end
  def test_output_m136; assert_in_delta(0, (worksheet.output_m136||0), 0.001); end
  def test_output_r136; assert_in_delta(0, (worksheet.output_r136||0), 0.001); end
  def test_output_w136; assert_in_delta(0, (worksheet.output_w136||0), 0.001); end
  def test_output_ab136; assert_in_delta(0, (worksheet.output_ab136||0), 0.001); end
  def test_output_ac136; assert_in_delta(0, (worksheet.output_ac136||0), 0.001); end
  def test_output_ad136; assert_in_delta(0, (worksheet.output_ad136||0), 0.001); end
  def test_output_ae136; assert_in_delta(0, (worksheet.output_ae136||0), 0.001); end
  def test_output_af136; assert_in_delta(0, (worksheet.output_af136||0), 0.001); end
  def test_output_ag136; assert_in_delta(0, (worksheet.output_ag136||0), 0.001); end
  def test_output_ah136; assert_in_delta(0, (worksheet.output_ah136||0), 0.001); end
  def test_output_ai136; assert_in_delta(0, (worksheet.output_ai136||0), 0.001); end
  def test_output_aj136; assert_in_delta(0, (worksheet.output_aj136||0), 0.001); end
  def test_output_ak136; assert_in_delta(0, (worksheet.output_ak136||0), 0.001); end
  def test_output_am136; assert_equal("", worksheet.output_am136); end
  def test_output_an136; assert_equal("", worksheet.output_an136); end
  def test_output_ao136; assert_equal("", worksheet.output_ao136); end
  def test_output_aq136; assert_equal("Industrial and residential CHP", worksheet.output_aq136); end
  def test_output_ar136; assert_in_epsilon(11.697157320126248, worksheet.output_ar136, 0.001); end
  def test_output_c137; assert_equal("II.a", worksheet.output_c137); end
  def test_output_e137; assert_equal("Nuclear power", worksheet.output_e137); end
  def test_output_f137; assert_equal("TWh/yr", worksheet.output_f137); end
  def test_output_g137; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g137); end
  def test_output_h137; assert_in_epsilon(42.722, worksheet.output_h137, 0.001); end
  def test_output_i137; assert_in_epsilon(42.861, worksheet.output_i137, 0.001); end
  def test_output_j137; assert_in_epsilon(43.456, worksheet.output_j137, 0.001); end
  def test_output_k137; assert_in_epsilon(41.927, worksheet.output_k137, 0.001); end
  def test_output_l137; assert_in_epsilon(40.624, worksheet.output_l137, 0.001); end
  def test_output_m137; assert_in_epsilon(41.356, worksheet.output_m137, 0.001); end
  def test_output_n137; assert_in_epsilon(43.336, worksheet.output_n137, 0.001); end
  def test_output_o137; assert_in_epsilon(47.408, worksheet.output_o137, 0.001); end
  def test_output_p137; assert_in_epsilon(46.165, worksheet.output_p137, 0.001); end
  def test_output_q137; assert_in_epsilon(49.017, worksheet.output_q137, 0.001); end
  def test_output_r137; assert_in_epsilon(48.157, worksheet.output_r137, 0.001); end
  def test_output_s137; assert_in_epsilon(46.349, worksheet.output_s137, 0.001); end
  def test_output_t137; assert_in_epsilon(47.36, worksheet.output_t137, 0.001); end
  def test_output_u137; assert_in_epsilon(47.379, worksheet.output_u137, 0.001); end
  def test_output_v137; assert_in_epsilon(47.312, worksheet.output_v137, 0.001); end
  def test_output_w137; assert_in_epsilon(47.595, worksheet.output_w137, 0.001); end
  def test_output_x137; assert_in_epsilon(46.645, worksheet.output_x137, 0.001); end
  def test_output_y137; assert_in_epsilon(48.227, worksheet.output_y137, 0.001); end
  def test_output_z137; assert_in_epsilon(45.568, worksheet.output_z137, 0.001); end
  def test_output_aa137; assert_in_epsilon(47.222, worksheet.output_aa137, 0.001); end
  def test_output_ab137; assert_in_epsilon(47.944, worksheet.output_ab137, 0.001); end
  def test_output_ac137; assert_in_epsilon(47.89199784599999, worksheet.output_ac137, 0.001); end
  def test_output_ad137; assert_in_epsilon(47.89199784599999, worksheet.output_ad137, 0.001); end
  def test_output_ae137; assert_in_epsilon(41.104317492, worksheet.output_ae137, 0.001); end
  def test_output_af137; assert_in_delta(0, (worksheet.output_af137||0), 0.001); end
  def test_output_ag137; assert_in_delta(0, (worksheet.output_ag137||0), 0.001); end
  def test_output_ah137; assert_in_delta(0, (worksheet.output_ah137||0), 0.001); end
  def test_output_ai137; assert_in_delta(0, (worksheet.output_ai137||0), 0.001); end
  def test_output_aj137; assert_in_delta(0, (worksheet.output_aj137||0), 0.001); end
  def test_output_ak137; assert_in_delta(0, (worksheet.output_ak137||0), 0.001); end
  def test_output_am137; assert_in_delta(-1, worksheet.output_am137, 0.001); end
  def test_output_an137; assert_in_delta(-1, worksheet.output_an137, 0.001); end
  def test_output_ao137; assert_in_delta(-1, worksheet.output_ao137, 0.001); end
  def test_output_aq137; assert_equal("Biomass power stations", worksheet.output_aq137); end
  def test_output_ar137; assert_in_epsilon(12.978773333333333, worksheet.output_ar137, 0.001); end
  def test_output_c138; assert_equal("III.a.1", worksheet.output_c138); end
  def test_output_e138; assert_equal("Onshore wind", worksheet.output_e138); end
  def test_output_f138; assert_equal("TWh/yr", worksheet.output_f138); end
  def test_output_h138; assert_in_delta(0, (worksheet.output_h138||0), 0.001); end
  def test_output_m138; assert_in_delta(0, (worksheet.output_m138||0), 0.001); end
  def test_output_r138; assert_in_delta(0, (worksheet.output_r138||0), 0.001); end
  def test_output_w138; assert_in_delta(0, (worksheet.output_w138||0), 0.001); end
  def test_output_ab138; assert_in_delta(0, (worksheet.output_ab138||0), 0.001); end
  def test_output_ac138; assert_in_epsilon(1.2988890410958904, worksheet.output_ac138, 0.001); end
  def test_output_ad138; assert_in_epsilon(4.156713265724032, worksheet.output_ad138, 0.001); end
  def test_output_ae138; assert_in_epsilon(7.086136227076774, worksheet.output_ae138, 0.001); end
  def test_output_af138; assert_in_epsilon(10.163703752646539, worksheet.output_af138, 0.001); end
  def test_output_ag138; assert_in_epsilon(13.433189594607313, worksheet.output_ag138, 0.001); end
  def test_output_ah138; assert_in_epsilon(16.29033154468355, worksheet.output_ah138, 0.001); end
  def test_output_ai138; assert_in_epsilon(17.088888688892954, worksheet.output_ai138, 0.001); end
  def test_output_aj138; assert_in_epsilon(17.965002767201756, worksheet.output_aj138, 0.001); end
  def test_output_ak138; assert_in_epsilon(18.902027883691137, worksheet.output_ak138, 0.001); end
  def test_output_am138; assert_in_delta(0.06923559653547451, worksheet.output_am138, 0.001); end
  def test_output_an138; assert_in_epsilon(13.552457743228965, worksheet.output_an138, 0.001); end
  def test_output_ao138; assert_equal("", worksheet.output_ao138); end
  def test_output_aq138; assert_equal("CCS", worksheet.output_aq138); end
  def test_output_ar138; assert_in_delta(0, (worksheet.output_ar138||0), 0.001); end
  def test_output_c139; assert_equal("III.a.2", worksheet.output_c139); end
  def test_output_e139; assert_equal("Offshore wind", worksheet.output_e139); end
  def test_output_f139; assert_equal("TWh/yr", worksheet.output_f139); end
  def test_output_h139; assert_in_delta(0, (worksheet.output_h139||0), 0.001); end
  def test_output_m139; assert_in_delta(0, (worksheet.output_m139||0), 0.001); end
  def test_output_r139; assert_in_delta(0, (worksheet.output_r139||0), 0.001); end
  def test_output_w139; assert_in_delta(0, (worksheet.output_w139||0), 0.001); end
  def test_output_ab139; assert_in_delta(0, (worksheet.output_ab139||0), 0.001); end
  def test_output_ac139; assert_in_delta(0.6258924000000001, worksheet.output_ac139, 0.001); end
  def test_output_ad139; assert_in_epsilon(2.7016154549999998, worksheet.output_ad139, 0.001); end
  def test_output_ae139; assert_in_epsilon(5.039707081499999, worksheet.output_ae139, 0.001); end
  def test_output_af139; assert_in_epsilon(8.00021198, worksheet.output_af139, 0.001); end
  def test_output_ag139; assert_in_epsilon(11.8042008785, worksheet.output_ag139, 0.001); end
  def test_output_ah139; assert_in_epsilon(15.3949916475, worksheet.output_ah139, 0.001); end
  def test_output_ai139; assert_in_epsilon(17.0890430625, worksheet.output_ai139, 0.001); end
  def test_output_aj139; assert_in_epsilon(19.265432670000003, worksheet.output_aj139, 0.001); end
  def test_output_ak139; assert_in_epsilon(21.719912670000003, worksheet.output_ak139, 0.001); end
  def test_output_am139; assert_in_delta(0.09272017083256445, worksheet.output_am139, 0.001); end
  def test_output_an139; assert_in_epsilon(33.70231092436975, worksheet.output_an139, 0.001); end
  def test_output_ao139; assert_equal("", worksheet.output_ao139); end
  def test_output_aq139; assert_equal("Gas", worksheet.output_aq139); end
  def test_output_ar139; assert_in_delta(0, (worksheet.output_ar139||0), 0.001); end
  def test_output_e140; assert_equal("Total Wind", worksheet.output_e140); end
  def test_output_f140; assert_equal("TWh/yr", worksheet.output_f140); end
  def test_output_g140; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g140); end
  def test_output_h140; assert_in_delta(0.007, worksheet.output_h140, 0.001); end
  def test_output_i140; assert_in_delta(0.008, worksheet.output_i140, 0.001); end
  def test_output_j140; assert_in_delta(0.009, worksheet.output_j140, 0.001); end
  def test_output_k140; assert_in_delta(0.008, worksheet.output_k140, 0.001); end
  def test_output_l140; assert_in_delta(0.009, worksheet.output_l140, 0.001); end
  def test_output_m140; assert_in_delta(0.009, worksheet.output_m140, 0.001); end
  def test_output_n140; assert_in_delta(0.008, worksheet.output_n140, 0.001); end
  def test_output_o140; assert_in_delta(0.008, worksheet.output_o140, 0.001); end
  def test_output_p140; assert_in_delta(0.011, worksheet.output_p140, 0.001); end
  def test_output_q140; assert_in_delta(0.013, worksheet.output_q140, 0.001); end
  def test_output_r140; assert_in_delta(0.016, worksheet.output_r140, 0.001); end
  def test_output_s140; assert_in_delta(0.037, worksheet.output_s140, 0.001); end
  def test_output_t140; assert_in_delta(0.057, worksheet.output_t140, 0.001); end
  def test_output_u140; assert_in_delta(0.088, worksheet.output_u140, 0.001); end
  def test_output_v140; assert_in_delta(0.142, worksheet.output_v140, 0.001); end
  def test_output_w140; assert_in_delta(0.227, worksheet.output_w140, 0.001); end
  def test_output_x140; assert_in_delta(0.366, worksheet.output_x140, 0.001); end
  def test_output_y140; assert_in_delta(0.491, worksheet.output_y140, 0.001); end
  def test_output_z140; assert_in_delta(0.637, worksheet.output_z140, 0.001); end
  def test_output_aa140; assert_in_delta(0.996, worksheet.output_aa140, 0.001); end
  def test_output_ab140; assert_in_epsilon(1.292, worksheet.output_ab140, 0.001); end
  def test_output_ac140; assert_in_epsilon(1.9247814410958906, worksheet.output_ac140, 0.001); end
  def test_output_ad140; assert_in_epsilon(6.858328720724032, worksheet.output_ad140, 0.001); end
  def test_output_ae140; assert_in_epsilon(12.125843308576773, worksheet.output_ae140, 0.001); end
  def test_output_af140; assert_in_epsilon(18.163915732646537, worksheet.output_af140, 0.001); end
  def test_output_ag140; assert_in_epsilon(25.23739047310731, worksheet.output_ag140, 0.001); end
  def test_output_ah140; assert_in_epsilon(31.68532319218355, worksheet.output_ah140, 0.001); end
  def test_output_ai140; assert_in_epsilon(34.177931751392954, worksheet.output_ai140, 0.001); end
  def test_output_aj140; assert_in_epsilon(37.23043543720176, worksheet.output_aj140, 0.001); end
  def test_output_am140; assert_in_delta(0.07921874769363213, worksheet.output_am140, 0.001); end
  def test_output_an140; assert_in_epsilon(20.104702947760497, worksheet.output_an140, 0.001); end
  def test_output_ao140; assert_in_epsilon(5802.13436481302, worksheet.output_ao140, 0.001); end
  def test_output_aq140; assert_equal("Nuclear power", worksheet.output_aq140); end
  def test_output_ar140; assert_in_delta(0, (worksheet.output_ar140||0), 0.001); end
  def test_output_c141; assert_equal("IV.a", worksheet.output_c141); end
  def test_output_e141; assert_equal("Solar PV", worksheet.output_e141); end
  def test_output_f141; assert_equal("TWh/yr", worksheet.output_f141); end
  def test_output_g141; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g141); end
  def test_output_h141; assert_in_delta(0, (worksheet.output_h141||0), 0.001); end
  def test_output_i141; assert_in_delta(0, (worksheet.output_i141||0), 0.001); end
  def test_output_j141; assert_in_delta(0, (worksheet.output_j141||0), 0.001); end
  def test_output_k141; assert_in_delta(0, (worksheet.output_k141||0), 0.001); end
  def test_output_l141; assert_in_delta(0, (worksheet.output_l141||0), 0.001); end
  def test_output_m141; assert_in_delta(0, (worksheet.output_m141||0), 0.001); end
  def test_output_n141; assert_in_delta(0, (worksheet.output_n141||0), 0.001); end
  def test_output_o141; assert_in_delta(0, (worksheet.output_o141||0), 0.001); end
  def test_output_p141; assert_in_delta(0, (worksheet.output_p141||0), 0.001); end
  def test_output_q141; assert_in_delta(0, (worksheet.output_q141||0), 0.001); end
  def test_output_r141; assert_in_delta(0, (worksheet.output_r141||0), 0.001); end
  def test_output_s141; assert_in_delta(0, (worksheet.output_s141||0), 0.001); end
  def test_output_t141; assert_in_delta(0, (worksheet.output_t141||0), 0.001); end
  def test_output_u141; assert_in_delta(0, (worksheet.output_u141||0), 0.001); end
  def test_output_v141; assert_in_delta(0.001, worksheet.output_v141, 0.001); end
  def test_output_w141; assert_in_delta(0.001, worksheet.output_w141, 0.001); end
  def test_output_x141; assert_in_delta(0.002, worksheet.output_x141, 0.001); end
  def test_output_y141; assert_in_delta(0.006, worksheet.output_y141, 0.001); end
  def test_output_z141; assert_in_delta(0.042, worksheet.output_z141, 0.001); end
  def test_output_aa141; assert_in_delta(0.166, worksheet.output_aa141, 0.001); end
  def test_output_ab141; assert_in_delta(0.56, worksheet.output_ab141, 0.001); end
  def test_output_ac141; assert_in_delta(0.60143532, worksheet.output_ac141, 0.001); end
  def test_output_ad141; assert_in_epsilon(1.6214760000000001, worksheet.output_ad141, 0.001); end
  def test_output_ae141; assert_in_epsilon(2.3958600000000003, worksheet.output_ae141, 0.001); end
  def test_output_af141; assert_in_epsilon(3.38136, worksheet.output_af141, 0.001); end
  def test_output_ag141; assert_in_epsilon(4.65156, worksheet.output_ag141, 0.001); end
  def test_output_ah141; assert_in_epsilon(5.447844, worksheet.output_ah141, 0.001); end
  def test_output_ai141; assert_in_epsilon(7.06056, worksheet.output_ai141, 0.001); end
  def test_output_aj141; assert_in_epsilon(9.505476000000002, worksheet.output_aj141, 0.001); end
  def test_output_ak141; assert_in_epsilon(12.571476, worksheet.output_ak141, 0.001); end
  def test_output_am141; assert_in_delta(0.07895897902395022, worksheet.output_am141, 0.001); end
  def test_output_an141; assert_in_epsilon(19.90245714202485, worksheet.output_an141, 0.001); end
  def test_output_ao141; assert_equal("", worksheet.output_ao141); end
  def test_output_c142; assert_equal("III.d", worksheet.output_c142); end
  def test_output_e142; assert_equal("Geothermal electricity", worksheet.output_e142); end
  def test_output_f142; assert_equal("TWh/yr", worksheet.output_f142); end
  def test_output_g142; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g142); end
  def test_output_h142; assert_in_delta(0, (worksheet.output_h142||0), 0.001); end
  def test_output_i142; assert_in_delta(0, (worksheet.output_i142||0), 0.001); end
  def test_output_j142; assert_in_delta(0, (worksheet.output_j142||0), 0.001); end
  def test_output_k142; assert_in_delta(0, (worksheet.output_k142||0), 0.001); end
  def test_output_l142; assert_in_delta(0, (worksheet.output_l142||0), 0.001); end
  def test_output_m142; assert_in_delta(0, (worksheet.output_m142||0), 0.001); end
  def test_output_n142; assert_in_delta(0, (worksheet.output_n142||0), 0.001); end
  def test_output_o142; assert_in_delta(0, (worksheet.output_o142||0), 0.001); end
  def test_output_p142; assert_in_delta(0, (worksheet.output_p142||0), 0.001); end
  def test_output_q142; assert_in_delta(0, (worksheet.output_q142||0), 0.001); end
  def test_output_r142; assert_in_delta(0, (worksheet.output_r142||0), 0.001); end
  def test_output_s142; assert_in_delta(0, (worksheet.output_s142||0), 0.001); end
  def test_output_t142; assert_in_delta(0, (worksheet.output_t142||0), 0.001); end
  def test_output_u142; assert_in_delta(0, (worksheet.output_u142||0), 0.001); end
  def test_output_v142; assert_in_delta(0, (worksheet.output_v142||0), 0.001); end
  def test_output_w142; assert_in_delta(0, (worksheet.output_w142||0), 0.001); end
  def test_output_x142; assert_in_delta(0, (worksheet.output_x142||0), 0.001); end
  def test_output_y142; assert_in_delta(0, (worksheet.output_y142||0), 0.001); end
  def test_output_z142; assert_in_delta(0, (worksheet.output_z142||0), 0.001); end
  def test_output_aa142; assert_in_delta(0, (worksheet.output_aa142||0), 0.001); end
  def test_output_ab142; assert_in_delta(0, (worksheet.output_ab142||0), 0.001); end
  def test_output_ac142; assert_in_delta(0, (worksheet.output_ac142||0), 0.001); end
  def test_output_ad142; assert_in_delta(0.02607885, worksheet.output_ad142, 0.001); end
  def test_output_ae142; assert_in_epsilon(1.117665, worksheet.output_ae142, 0.001); end
  def test_output_af142; assert_in_epsilon(2.1342441438356166, worksheet.output_af142, 0.001); end
  def test_output_ag142; assert_in_epsilon(4.641043287671232, worksheet.output_ag142, 0.001); end
  def test_output_ah142; assert_in_epsilon(7.14784243150685, worksheet.output_ah142, 0.001); end
  def test_output_ai142; assert_in_epsilon(11.144861575342468, worksheet.output_ai142, 0.001); end
  def test_output_aj142; assert_in_epsilon(16.632100719178084, worksheet.output_aj142, 0.001); end
  def test_output_ak142; assert_in_epsilon(24.3546698630137, worksheet.output_ak142, 0.001); end
  def test_output_am142; assert_equal("", worksheet.output_am142); end
  def test_output_an142; assert_equal("", worksheet.output_an142); end
  def test_output_ao142; assert_equal("", worksheet.output_ao142); end
  def test_output_c143; assert_equal("III.b", worksheet.output_c143); end
  def test_output_e143; assert_equal("Hydroelectric power stations", worksheet.output_e143); end
  def test_output_f143; assert_equal("TWh/yr", worksheet.output_f143); end
  def test_output_g143; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g143); end
  def test_output_h143; assert_in_delta(0.897, worksheet.output_h143, 0.001); end
  def test_output_i143; assert_in_delta(0.979, worksheet.output_i143, 0.001); end
  def test_output_j143; assert_in_epsilon(1.156, worksheet.output_j143, 0.001); end
  def test_output_k143; assert_in_epsilon(1.02, worksheet.output_k143, 0.001); end
  def test_output_l143; assert_in_epsilon(1.184, worksheet.output_l143, 0.001); end
  def test_output_m143; assert_in_epsilon(1.23, worksheet.output_m143, 0.001); end
  def test_output_n143; assert_in_epsilon(1.2, worksheet.output_n143, 0.001); end
  def test_output_o143; assert_in_epsilon(1.277, worksheet.output_o143, 0.001); end
  def test_output_p143; assert_in_epsilon(1.497, worksheet.output_p143, 0.001); end
  def test_output_q143; assert_in_epsilon(1.489, worksheet.output_q143, 0.001); end
  def test_output_r143; assert_in_epsilon(1.699, worksheet.output_r143, 0.001); end
  def test_output_s143; assert_in_epsilon(1.644, worksheet.output_s143, 0.001); end
  def test_output_t143; assert_in_epsilon(1.49, worksheet.output_t143, 0.001); end
  def test_output_u143; assert_in_epsilon(1.316, worksheet.output_u143, 0.001); end
  def test_output_v143; assert_in_epsilon(1.607, worksheet.output_v143, 0.001); end
  def test_output_w143; assert_in_epsilon(1.604, worksheet.output_w143, 0.001); end
  def test_output_x143; assert_in_epsilon(1.628, worksheet.output_x143, 0.001); end
  def test_output_y143; assert_in_epsilon(1.683, worksheet.output_y143, 0.001); end
  def test_output_z143; assert_in_epsilon(1.757, worksheet.output_z143, 0.001); end
  def test_output_aa143; assert_in_epsilon(1.757, worksheet.output_aa143, 0.001); end
  def test_output_ab143; assert_in_epsilon(1.668, worksheet.output_ab143, 0.001); end
  def test_output_ac143; assert_in_delta(0.3760614, worksheet.output_ac143, 0.001); end
  def test_output_ad143; assert_in_delta(0.38677783500000007, worksheet.output_ad143, 0.001); end
  def test_output_ae143; assert_in_delta(0.39585064500000006, worksheet.output_ae143, 0.001); end
  def test_output_af143; assert_in_delta(0.40679718750000005, worksheet.output_af143, 0.001); end
  def test_output_ag143; assert_in_delta(0.41787522000000005, worksheet.output_ag143, 0.001); end
  def test_output_ah143; assert_in_delta(0.42721101, worksheet.output_ah143, 0.001); end
  def test_output_ai143; assert_in_delta(0.43851914999999997, worksheet.output_ai143, 0.001); end
  def test_output_aj143; assert_in_delta(0.44995878, worksheet.output_aj143, 0.001); end
  def test_output_ak143; assert_in_delta(0.45955755, worksheet.output_ak143, 0.001); end
  def test_output_am143; assert_in_delta(0.005025378842048012, worksheet.output_am143, 0.001); end
  def test_output_an143; assert_in_delta(0.2220279720279721, worksheet.output_an143, 0.001); end
  def test_output_ao143; assert_in_delta(-0.48767274247491643, worksheet.output_ao143, 0.001); end
  def test_output_c144; assert_equal("III.c", worksheet.output_c144); end
  def test_output_e144; assert_equal("Tidal and Wave [UNUSED]", worksheet.output_e144); end
  def test_output_f144; assert_equal("TWh/yr", worksheet.output_f144); end
  def test_output_h144; assert_in_delta(0, (worksheet.output_h144||0), 0.001); end
  def test_output_i144; assert_in_delta(0, (worksheet.output_i144||0), 0.001); end
  def test_output_j144; assert_in_delta(0, (worksheet.output_j144||0), 0.001); end
  def test_output_k144; assert_in_delta(0, (worksheet.output_k144||0), 0.001); end
  def test_output_l144; assert_in_delta(0, (worksheet.output_l144||0), 0.001); end
  def test_output_m144; assert_in_delta(0, (worksheet.output_m144||0), 0.001); end
  def test_output_n144; assert_in_delta(0, (worksheet.output_n144||0), 0.001); end
  def test_output_o144; assert_in_delta(0, (worksheet.output_o144||0), 0.001); end
  def test_output_p144; assert_in_delta(0, (worksheet.output_p144||0), 0.001); end
  def test_output_q144; assert_in_delta(0, (worksheet.output_q144||0), 0.001); end
  def test_output_r144; assert_in_delta(0, (worksheet.output_r144||0), 0.001); end
  def test_output_s144; assert_in_delta(0, (worksheet.output_s144||0), 0.001); end
  def test_output_t144; assert_in_delta(0, (worksheet.output_t144||0), 0.001); end
  def test_output_u144; assert_in_delta(0, (worksheet.output_u144||0), 0.001); end
  def test_output_v144; assert_in_delta(0, (worksheet.output_v144||0), 0.001); end
  def test_output_w144; assert_in_delta(0, (worksheet.output_w144||0), 0.001); end
  def test_output_x144; assert_in_delta(0, (worksheet.output_x144||0), 0.001); end
  def test_output_y144; assert_in_delta(0, (worksheet.output_y144||0), 0.001); end
  def test_output_z144; assert_in_delta(0, (worksheet.output_z144||0), 0.001); end
  def test_output_aa144; assert_in_delta(0, (worksheet.output_aa144||0), 0.001); end
  def test_output_ab144; assert_in_delta(0, (worksheet.output_ab144||0), 0.001); end
  def test_output_ac144; assert_in_delta(0, (worksheet.output_ac144||0), 0.001); end
  def test_output_ad144; assert_in_delta(0, (worksheet.output_ad144||0), 0.001); end
  def test_output_ae144; assert_in_delta(0, (worksheet.output_ae144||0), 0.001); end
  def test_output_af144; assert_in_delta(0, (worksheet.output_af144||0), 0.001); end
  def test_output_ag144; assert_in_delta(0, (worksheet.output_ag144||0), 0.001); end
  def test_output_ah144; assert_in_delta(0, (worksheet.output_ah144||0), 0.001); end
  def test_output_ai144; assert_in_delta(0, (worksheet.output_ai144||0), 0.001); end
  def test_output_aj144; assert_in_delta(0, (worksheet.output_aj144||0), 0.001); end
  def test_output_ak144; assert_in_delta(0, (worksheet.output_ak144||0), 0.001); end
  def test_output_am144; assert_equal("", worksheet.output_am144); end
  def test_output_an144; assert_equal("", worksheet.output_an144); end
  def test_output_ao144; assert_equal("", worksheet.output_ao144); end
  def test_output_c145; assert_equal("III.e", worksheet.output_c145); end
  def test_output_e145; assert_equal("Tidal [UNUSED]", worksheet.output_e145); end
  def test_output_f145; assert_equal("TWh/yr", worksheet.output_f145); end
  def test_output_h145; assert_in_delta(0, (worksheet.output_h145||0), 0.001); end
  def test_output_m145; assert_in_delta(0, (worksheet.output_m145||0), 0.001); end
  def test_output_r145; assert_in_delta(0, (worksheet.output_r145||0), 0.001); end
  def test_output_w145; assert_in_delta(0, (worksheet.output_w145||0), 0.001); end
  def test_output_ab145; assert_in_delta(0, (worksheet.output_ab145||0), 0.001); end
  def test_output_ac145; assert_in_delta(0, (worksheet.output_ac145||0), 0.001); end
  def test_output_ad145; assert_in_delta(0, (worksheet.output_ad145||0), 0.001); end
  def test_output_ae145; assert_in_delta(0, (worksheet.output_ae145||0), 0.001); end
  def test_output_af145; assert_in_delta(0, (worksheet.output_af145||0), 0.001); end
  def test_output_ag145; assert_in_delta(0, (worksheet.output_ag145||0), 0.001); end
  def test_output_ah145; assert_in_delta(0, (worksheet.output_ah145||0), 0.001); end
  def test_output_ai145; assert_in_delta(0, (worksheet.output_ai145||0), 0.001); end
  def test_output_aj145; assert_in_delta(0, (worksheet.output_aj145||0), 0.001); end
  def test_output_ak145; assert_in_delta(0, (worksheet.output_ak145||0), 0.001); end
  def test_output_am145; assert_equal("", worksheet.output_am145); end
  def test_output_an145; assert_equal("", worksheet.output_an145); end
  def test_output_ao145; assert_equal("", worksheet.output_ao145); end
  def test_output_c146; assert_equal("VII.a", worksheet.output_c146); end
  def test_output_e146; assert_equal("Imports of decarbonized electricity", worksheet.output_e146); end
  def test_output_f146; assert_equal("TWh/yr", worksheet.output_f146); end
  def test_output_g146; assert_equal("IEA - TAB8IMPE-TAB8EXPE", worksheet.output_g146); end
  def test_output_h146; assert_in_epsilon(-3.724, worksheet.output_h146, 0.001); end
  def test_output_i146; assert_in_epsilon(-1.847, worksheet.output_i146, 0.001); end
  def test_output_j146; assert_in_delta(0.128, worksheet.output_j146, 0.001); end
  def test_output_k146; assert_in_epsilon(2.231, worksheet.output_k146, 0.001); end
  def test_output_l146; assert_in_epsilon(3.983, worksheet.output_l146, 0.001); end
  def test_output_m146; assert_in_epsilon(4.072, worksheet.output_m146, 0.001); end
  def test_output_n146; assert_in_epsilon(4.191, worksheet.output_n146, 0.001); end
  def test_output_o146; assert_in_epsilon(3.27, worksheet.output_o146, 0.001); end
  def test_output_p146; assert_in_epsilon(1.393, worksheet.output_p146, 0.001); end
  def test_output_q146; assert_in_delta(0.852, worksheet.output_q146, 0.001); end
  def test_output_r146; assert_in_epsilon(4.326, worksheet.output_r146, 0.001); end
  def test_output_s146; assert_in_epsilon(9.106, worksheet.output_s146, 0.001); end
  def test_output_t146; assert_in_epsilon(7.588, worksheet.output_t146, 0.001); end
  def test_output_u146; assert_in_epsilon(6.41, worksheet.output_u146, 0.001); end
  def test_output_v146; assert_in_epsilon(7.777, worksheet.output_v146, 0.001); end
  def test_output_w146; assert_in_epsilon(6.304, worksheet.output_w146, 0.001); end
  def test_output_x146; assert_in_epsilon(10.157, worksheet.output_x146, 0.001); end
  def test_output_y146; assert_in_epsilon(6.779, worksheet.output_y146, 0.001); end
  def test_output_z146; assert_in_epsilon(10.597, worksheet.output_z146, 0.001); end
  def test_output_aa146; assert_in_epsilon(-1.835, worksheet.output_aa146, 0.001); end
  def test_output_ab146; assert_in_delta(0.551, worksheet.output_ab146, 0.001); end
  def test_output_ac146; assert_in_delta(0, (worksheet.output_ac146||0), 0.001); end
  def test_output_ad146; assert_in_delta(0.2625, worksheet.output_ad146, 0.001); end
  def test_output_ae146; assert_in_delta(0.525, worksheet.output_ae146, 0.001); end
  def test_output_af146; assert_in_delta(0.7875000000000001, worksheet.output_af146, 0.001); end
  def test_output_ag146; assert_in_epsilon(1.05, worksheet.output_ag146, 0.001); end
  def test_output_ah146; assert_in_epsilon(1.3125, worksheet.output_ah146, 0.001); end
  def test_output_ai146; assert_in_epsilon(1.575, worksheet.output_ai146, 0.001); end
  def test_output_aj146; assert_in_epsilon(1.8375, worksheet.output_aj146, 0.001); end
  def test_output_ak146; assert_in_epsilon(2.1, worksheet.output_ak146, 0.001); end
  def test_output_am146; assert_equal("", worksheet.output_am146); end
  def test_output_an146; assert_equal("", worksheet.output_an146); end
  def test_output_ao146; assert_in_epsilon(-1.5639097744360901, worksheet.output_ao146, 0.001); end
  def test_output_c147; assert_equal("XI", worksheet.output_c147); end
  def test_output_d147; assert_equal("I.02", worksheet.output_d147); end
  def test_output_e147; assert_equal("Electricity used by industry", worksheet.output_e147); end
  def test_output_f147; assert_equal("TWh/yr", worksheet.output_f147); end
  def test_output_ac147; assert_in_epsilon(31.888155106837974, worksheet.output_ac147, 0.001); end
  def test_output_ad147; assert_in_epsilon(31.18549297908029, worksheet.output_ad147, 0.001); end
  def test_output_ae147; assert_in_epsilon(29.955236970207594, worksheet.output_ae147, 0.001); end
  def test_output_af147; assert_in_epsilon(28.838365948173692, worksheet.output_af147, 0.001); end
  def test_output_ag147; assert_in_epsilon(27.485553101377796, worksheet.output_ag147, 0.001); end
  def test_output_ah147; assert_in_epsilon(26.50404961761377, worksheet.output_ah147, 0.001); end
  def test_output_ai147; assert_in_epsilon(25.56807747185382, worksheet.output_ai147, 0.001); end
  def test_output_aj147; assert_in_epsilon(24.665135839226657, worksheet.output_aj147, 0.001); end
  def test_output_ak147; assert_in_epsilon(23.910250512422547, worksheet.output_ak147, 0.001); end
  def test_output_am147; assert_in_delta(-0.007172339342425782, worksheet.output_am147, 0.001); end
  def test_output_an147; assert_in_delta(-0.25018394973576497, worksheet.output_an147, 0.001); end
  def test_output_ao147; assert_equal("", worksheet.output_ao147); end
  def test_output_c148; assert_equal("XI", worksheet.output_c148); end
  def test_output_d148; assert_equal("V.01", worksheet.output_d148); end
  def test_output_e148; assert_equal("Electricity used by industry from network", worksheet.output_e148); end
  def test_output_f148; assert_equal("TWh/yr", worksheet.output_f148); end
  def test_output_ac148; assert_in_epsilon(-20.891124873555672, worksheet.output_ac148, 0.001); end
  def test_output_ad148; assert_in_epsilon(-20.188462745797988, worksheet.output_ad148, 0.001); end
  def test_output_ae148; assert_in_epsilon(-18.958206736925295, worksheet.output_ae148, 0.001); end
  def test_output_af148; assert_in_epsilon(-17.841335714891393, worksheet.output_af148, 0.001); end
  def test_output_ag148; assert_in_epsilon(-16.488522868095497, worksheet.output_ag148, 0.001); end
  def test_output_ah148; assert_in_epsilon(-15.50701938433147, worksheet.output_ah148, 0.001); end
  def test_output_ai148; assert_in_epsilon(-14.571047238571516, worksheet.output_ai148, 0.001); end
  def test_output_aj148; assert_in_epsilon(-13.668105605944355, worksheet.output_aj148, 0.001); end
  def test_output_ak148; assert_in_epsilon(-12.913220279140246, worksheet.output_ak148, 0.001); end
  def test_output_am148; assert_in_delta(-0.011954787042754988, worksheet.output_am148, 0.001); end
  def test_output_an148; assert_in_delta(-0.38188008748700686, worksheet.output_an148, 0.001); end
  def test_output_ao148; assert_equal("", worksheet.output_ao148); end
  def test_output_e149; assert_equal("Industry CHP", worksheet.output_e149); end
  def test_output_f149; assert_equal("TWh/yr", worksheet.output_f149); end
  def test_output_g149; assert_equal("line XI industry (col I2+ Col v1)", worksheet.output_g149); end
  def test_output_ab149; assert_in_epsilon(12.1161346777267, worksheet.output_ab149, 0.001); end
  def test_output_am149; assert_in_delta(0, (worksheet.output_am149||0), 0.001); end
  def test_output_an149; assert_in_delta(-1.1102230246251565e-16, worksheet.output_an149, 0.001); end
  def test_output_ao149; assert_equal("", worksheet.output_ao149); end
  def test_output_e150; assert_equal("Electricity produced by Public CHP and allocated in industry in the model (gap opera IEA)", worksheet.output_e150); end
  def test_output_f150; assert_equal("TWh/yr", worksheet.output_f150); end
  def test_output_ab150; assert_in_epsilon(10.02, worksheet.output_ab150, 0.001); end
  def test_output_am150; assert_equal("", worksheet.output_am150); end
  def test_output_an150; assert_equal("", worksheet.output_an150); end
  def test_output_ao150; assert_equal("", worksheet.output_ao150); end
  def test_output_b151; assert_equal("Electricity", worksheet.output_b151); end
  def test_output_e151; assert_equal("Total generation", worksheet.output_e151); end
  def test_output_f151; assert_equal("TWh/yr", worksheet.output_f151); end
  def test_output_g151; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g151); end
  def test_output_h151; assert_in_epsilon(70.923, worksheet.output_h151, 0.001); end
  def test_output_i151; assert_in_epsilon(71.936, worksheet.output_i151, 0.001); end
  def test_output_j151; assert_in_epsilon(72.225, worksheet.output_j151, 0.001); end
  def test_output_k151; assert_in_epsilon(70.834, worksheet.output_k151, 0.001); end
  def test_output_l151; assert_in_epsilon(72.179, worksheet.output_l151, 0.001); end
  def test_output_m151; assert_in_epsilon(74.408, worksheet.output_m151, 0.001); end
  def test_output_n151; assert_in_epsilon(76.099, worksheet.output_n151, 0.001); end
  def test_output_o151; assert_in_epsilon(78.833, worksheet.output_o151, 0.001); end
  def test_output_p151; assert_in_epsilon(83.183, worksheet.output_p151, 0.001); end
  def test_output_q151; assert_in_epsilon(84.514, worksheet.output_q151, 0.001); end
  def test_output_r151; assert_in_epsilon(84.012, worksheet.output_r151, 0.001); end
  def test_output_s151; assert_in_epsilon(79.821, worksheet.output_s151, 0.001); end
  def test_output_t151; assert_in_epsilon(82.069, worksheet.output_t151, 0.001); end
  def test_output_u151; assert_in_epsilon(84.63, worksheet.output_u151, 0.001); end
  def test_output_v151; assert_in_epsilon(85.643, worksheet.output_v151, 0.001); end
  def test_output_w151; assert_in_epsilon(87.025, worksheet.output_w151, 0.001); end
  def test_output_x151; assert_in_epsilon(85.617, worksheet.output_x151, 0.001); end
  def test_output_y151; assert_in_epsilon(88.82, worksheet.output_y151, 0.001); end
  def test_output_z151; assert_in_epsilon(84.93, worksheet.output_z151, 0.001); end
  def test_output_aa151; assert_in_epsilon(91.225, worksheet.output_aa151, 0.001); end
  def test_output_ab151; assert_in_epsilon(95.12, worksheet.output_ab151, 0.001); end
  def test_output_am151; assert_in_delta(0.0008647790255154053, worksheet.output_am151, 0.001); end
  def test_output_an151; assert_in_delta(0.03518091938827306, worksheet.output_an151, 0.001); end
  def test_output_ao151; assert_in_delta(0.4774272749342867, worksheet.output_ao151, 0.001); end
  def test_output_aq151; assert_in_delta(0.049553924458564325, worksheet.output_aq151, 0.001); end
  def test_output_b152; assert_equal("REF", worksheet.output_b152); end
  def test_output_e152; assert_equal("Reference scenario", worksheet.output_e152); end
  def test_output_f152; assert_equal("TWh/yr", worksheet.output_f152); end
  def test_output_g152; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g152); end
  def test_output_ac152; assert_in_epsilon(103.25504594567349, worksheet.output_ac152, 0.001); end
  def test_output_ad152; assert_in_epsilon(90.23523011855958, worksheet.output_ad152, 0.001); end
  def test_output_ae152; assert_in_epsilon(96.54378848102128, worksheet.output_ae152, 0.001); end
  def test_output_af152; assert_in_epsilon(102.31351327998009, worksheet.output_af152, 0.001); end
  def test_output_ag152; assert_in_epsilon(108.09560626715707, worksheet.output_ag152, 0.001); end
  def test_output_ah152; assert_in_epsilon(113.95185839005318, worksheet.output_ah152, 0.001); end
  def test_output_ai152; assert_in_epsilon(120.19320390818237, worksheet.output_ai152, 0.001); end
  def test_output_aj152; assert_in_epsilon(126.75770384720593, worksheet.output_aj152, 0.001); end
  def test_output_ak152; assert_in_epsilon(134.32104286496013, worksheet.output_ak152, 0.001); end
  def test_output_am152; assert_in_delta(0.006597434697665605, worksheet.output_am152, 0.001); end
  def test_output_an152; assert_in_delta(0.3008666223985963, worksheet.output_an152, 0.001); end
  def test_output_ao152; assert_equal("", worksheet.output_ao152); end
  def test_output_aq152; assert_in_epsilon(-2.0504460755414358, worksheet.output_aq152, 0.001); end
  def test_output_e153; assert_equal("Intermittent sources", worksheet.output_e153); end
  def test_output_f153; assert_equal("TWh/yr", worksheet.output_f153); end
  def test_output_ac153; assert_in_epsilon(2.5262167610958906, worksheet.output_ac153, 0.001); end
  def test_output_ad153; assert_in_epsilon(8.479804720724031, worksheet.output_ad153, 0.001); end
  def test_output_ae153; assert_in_epsilon(14.521703308576773, worksheet.output_ae153, 0.001); end
  def test_output_af153; assert_in_epsilon(21.545275732646537, worksheet.output_af153, 0.001); end
  def test_output_ag153; assert_in_epsilon(29.88895047310731, worksheet.output_ag153, 0.001); end
  def test_output_ah153; assert_in_epsilon(37.13316719218355, worksheet.output_ah153, 0.001); end
  def test_output_ai153; assert_in_epsilon(41.23849175139296, worksheet.output_ai153, 0.001); end
  def test_output_aj153; assert_in_epsilon(46.735911437201764, worksheet.output_aj153, 0.001); end
  def test_output_al153; assert_in_delta(0.5076503330461363, worksheet.output_al153, 0.001); end
  def test_output_am153; assert_in_delta(0.07915712345341519, worksheet.output_am153, 0.001); end
  def test_output_an153; assert_in_epsilon(20.056552776023647, worksheet.output_an153, 0.001); end
  def test_output_ak153; assert_in_epsilon(53.19341655369114, worksheet.output_ak153, 0.001); end
  def test_output_ao153; assert_equal("", worksheet.output_ao153); end
  def test_output_aq153; assert_in_epsilon(-13.047476308823736, worksheet.output_aq153, 0.001); end
  def test_output_e154; assert_equal("Renewable energy sources", worksheet.output_e154); end
  def test_output_f154; assert_equal("TWh/yr", worksheet.output_f154); end
  def test_output_ad154; assert_in_epsilon(14.043676555795447, worksheet.output_ad154, 0.001); end
  def test_output_ae154; assert_in_epsilon(22.798602617474817, worksheet.output_ae154, 0.001); end
  def test_output_af154; assert_in_epsilon(32.14193611290987, worksheet.output_af154, 0.001); end
  def test_output_ag154; assert_in_epsilon(44.16171125424594, worksheet.output_ag154, 0.001); end
  def test_output_ah154; assert_in_epsilon(54.87244453641662, worksheet.output_ah154, 0.001); end
  def test_output_ai154; assert_in_epsilon(63.93037876585891, worksheet.output_ai154, 0.001); end
  def test_output_aj154; assert_in_epsilon(75.86161074760827, worksheet.output_aj154, 0.001); end
  def test_output_am154; assert_in_delta(0.06753423336504571, worksheet.output_am154, 0.001); end
  def test_output_an154; assert_in_epsilon(12.654393982344242, worksheet.output_an154, 0.001); end
  def test_output_ak154; assert_in_epsilon(90.98641730003817, worksheet.output_ak154, 0.001); end
  def test_output_ao154; assert_equal("", worksheet.output_ao154); end
  def test_output_e155; assert_equal("Share of RES in electricity generation", worksheet.output_e155); end
  def test_output_f155; assert_equal("%", worksheet.output_f155); end
  def test_output_ac154; assert_in_epsilon(6.663526584752701, worksheet.output_ac154, 0.001); end
  def test_output_ac130; assert_in_epsilon(37.70431506849315, worksheet.output_ac130, 0.001); end
  def test_output_ac135; assert_in_epsilon(-2.0343948417767277, worksheet.output_ac135, 0.001); end
  def test_output_ac151; assert_in_epsilon(101.2224748907514, worksheet.output_ac151, 0.001); end
  def test_output_ac155; assert_in_delta(0.06583050446004794, worksheet.output_ac155, 0.001); end
  def test_output_ad151; assert_in_epsilon(81.83464611326725, worksheet.output_ad151, 0.001); end
  def test_output_ad155; assert_in_delta(0.1716104024737592, worksheet.output_ad155, 0.001); end
  def test_output_ae151; assert_in_epsilon(87.14301423299518, worksheet.output_ae151, 0.001); end
  def test_output_ae155; assert_in_delta(0.2616228371045091, worksheet.output_ae155, 0.001); end
  def test_output_af151; assert_in_epsilon(91.26643938289152, worksheet.output_af151, 0.001); end
  def test_output_af155; assert_in_delta(0.35217694839681757, worksheet.output_af155, 0.001); end
  def test_output_ag151; assert_in_epsilon(94.1703473161295, worksheet.output_ag151, 0.001); end
  def test_output_ag155; assert_in_delta(0.4689555949708377, worksheet.output_ag155, 0.001); end
  def test_output_ah151; assert_in_epsilon(96.86061629020051, worksheet.output_ah151, 0.001); end
  def test_output_ah155; assert_in_delta(0.5665093475351769, worksheet.output_ah155, 0.001); end
  def test_output_ai151; assert_in_epsilon(99.4143523981481, worksheet.output_ai151, 0.001); end
  def test_output_ai155; assert_in_delta(0.6430699111715967, worksheet.output_ai155, 0.001); end
  def test_output_aj151; assert_in_epsilon(101.63205887034232, worksheet.output_aj151, 0.001); end
  def test_output_aj155; assert_in_delta(0.7464338673330346, worksheet.output_aj155, 0.001); end
  def test_output_am155; assert_in_delta(0.06661184980896473, worksheet.output_am155, 0.001); end
  def test_output_an155; assert_in_epsilon(12.190345500584703, worksheet.output_an155, 0.001); end
  def test_output_ak155; assert_in_delta(0.8683270983058147, worksheet.output_ak155, 0.001); end
  def test_output_ao155; assert_equal("", worksheet.output_ao155); end
  def test_output_e156; assert_equal("Surface needed for Onshore wind", worksheet.output_e156); end
  def test_output_f156; assert_equal("km²", worksheet.output_f156); end
  def test_output_ac156; assert_in_epsilon(14.760102739726028, worksheet.output_ac156, 0.001); end
  def test_output_ad156; assert_in_epsilon(47.23537801959127, worksheet.output_ad156, 0.001); end
  def test_output_ae156; assert_in_epsilon(80.52427530769062, worksheet.output_ae156, 0.001); end
  def test_output_af156; assert_in_epsilon(115.49663355280158, worksheet.output_af156, 0.001); end
  def test_output_ag156; assert_in_epsilon(152.6498817569013, worksheet.output_ag156, 0.001); end
  def test_output_ah156; assert_in_epsilon(185.11740391685854, worksheet.output_ah156, 0.001); end
  def test_output_ai156; assert_in_epsilon(194.19191691923814, worksheet.output_ai156, 0.001); end
  def test_output_aj156; assert_in_epsilon(204.1477587182018, worksheet.output_aj156, 0.001); end
  def test_output_am156; assert_in_delta(0.06923559653547451, worksheet.output_am156, 0.001); end
  def test_output_an156; assert_in_epsilon(13.552457743228967, worksheet.output_an156, 0.001); end
  def test_output_ak156; assert_in_epsilon(214.79577140558112, worksheet.output_ak156, 0.001); end
  def test_output_ao156; assert_equal("", worksheet.output_ao156); end
  def test_output_e157; assert_equal("Surface needed for PV", worksheet.output_e157); end
  def test_output_f157; assert_equal("km²", worksheet.output_f157); end
  def test_output_ac157; assert_in_epsilon(29.259015567567566, worksheet.output_ac157, 0.001); end
  def test_output_ad157; assert_in_epsilon(39.44130810810811, worksheet.output_ad157, 0.001); end
  def test_output_ae157; assert_in_epsilon(38.85178378378379, worksheet.output_ae157, 0.001); end
  def test_output_af157; assert_in_epsilon(41.124648648648645, worksheet.output_af157, 0.001); end
  def test_output_ag157; assert_in_epsilon(45.258421621621615, worksheet.output_ag157, 0.001); end
  def test_output_ah157; assert_in_epsilon(44.171708108108106, worksheet.output_ah157, 0.001); end
  def test_output_ai157; assert_in_epsilon(49.069528957528945, worksheet.output_ai157, 0.001); end
  def test_output_aj157; assert_in_epsilon(57.80357027027028, worksheet.output_aj157, 0.001); end
  def test_output_am157; assert_in_delta(0.021289509190106415, worksheet.output_am157, 0.001); end
  def test_output_an157; assert_in_epsilon(1.3224952380027615, worksheet.output_an157, 0.001); end
  def test_output_ak157; assert_in_epsilon(67.95392432432433, worksheet.output_ak157, 0.001); end
  def test_output_ao157; assert_equal("", worksheet.output_ao157); end
  def test_output_e158; assert_equal("PV efficiency", worksheet.output_e158); end
  def test_output_f158; assert_equal("kWh/m²/yr", worksheet.output_f158); end
  def test_output_ac158; assert_in_epsilon(20.555555555555557, worksheet.output_ac158, 0.001); end
  def test_output_ad158; assert_in_epsilon(41.111111111111114, worksheet.output_ad158, 0.001); end
  def test_output_ae158; assert_in_epsilon(61.66666666666667, worksheet.output_ae158, 0.001); end
  def test_output_af158; assert_in_epsilon(82.22222222222223, worksheet.output_af158, 0.001); end
  def test_output_ag158; assert_in_epsilon(102.77777777777779, worksheet.output_ag158, 0.001); end
  def test_output_ah158; assert_in_epsilon(123.33333333333334, worksheet.output_ah158, 0.001); end
  def test_output_ai158; assert_in_epsilon(143.8888888888889, worksheet.output_ai158, 0.001); end
  def test_output_aj158; assert_in_epsilon(164.44444444444446, worksheet.output_aj158, 0.001); end
  def test_output_ak158; assert_in_epsilon(185, worksheet.output_ak158, 0.001); end
  def test_output_am158; assert_in_delta(0.056467308549537965, worksheet.output_am158, 0.001); end
  def test_output_an158; assert_in_epsilon(8, worksheet.output_an158, 0.001); end
  def test_output_ao158; assert_equal("", worksheet.output_ao158); end
  def test_output_b159; assert_equal("Electricity Production capacity", worksheet.output_b159); end
  def test_output_h159; assert_in_delta(0, (worksheet.output_h159||0), 0.001); end
  def test_output_m159; assert_in_delta(0, (worksheet.output_m159||0), 0.001); end
  def test_output_r159; assert_in_delta(0, (worksheet.output_r159||0), 0.001); end
  def test_output_w159; assert_in_delta(0, (worksheet.output_w159||0), 0.001); end
  def test_output_ab159; assert_in_delta(0, (worksheet.output_ab159||0), 0.001); end
  def test_output_am159; assert_equal("", worksheet.output_am159); end
  def test_output_an159; assert_equal("", worksheet.output_an159); end
  def test_output_ao159; assert_equal("", worksheet.output_ao159); end
  def test_output_c160; assert_equal("I.a", worksheet.output_c160); end
  def test_output_e160; assert_equal("Unabated thermal generation ", worksheet.output_e160); end
  def test_output_f160; assert_equal("GW", worksheet.output_f160); end
  def test_output_g160; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g160); end
  def test_output_h160; assert_in_epsilon(7.235, worksheet.output_h160, 0.001); end
  def test_output_i160; assert_in_epsilon(7.207, worksheet.output_i160, 0.001); end
  def test_output_j160; assert_in_epsilon(7.148, worksheet.output_j160, 0.001); end
  def test_output_k160; assert_in_epsilon(7.161, worksheet.output_k160, 0.001); end
  def test_output_l160; assert_in_epsilon(7.964, worksheet.output_l160, 0.001); end
  def test_output_m160; assert_in_epsilon(7.877, worksheet.output_m160, 0.001); end
  def test_output_n160; assert_in_epsilon(7.751, worksheet.output_n160, 0.001); end
  def test_output_o160; assert_in_epsilon(7.572, worksheet.output_o160, 0.001); end
  def test_output_p160; assert_in_epsilon(8.272, worksheet.output_p160, 0.001); end
  def test_output_q160; assert_in_epsilon(8.389, worksheet.output_q160, 0.001); end
  def test_output_r160; assert_in_epsilon(8.545, worksheet.output_r160, 0.001); end
  def test_output_s160; assert_in_epsilon(8.348, worksheet.output_s160, 0.001); end
  def test_output_t160; assert_in_epsilon(8.338, worksheet.output_t160, 0.001); end
  def test_output_u160; assert_in_epsilon(8.366, worksheet.output_u160, 0.001); end
  def test_output_v160; assert_in_epsilon(8.365, worksheet.output_v160, 0.001); end
  def test_output_w160; assert_in_epsilon(8.713, worksheet.output_w160, 0.001); end
  def test_output_x160; assert_in_epsilon(8.807, worksheet.output_x160, 0.001); end
  def test_output_y160; assert_in_epsilon(8.842, worksheet.output_y160, 0.001); end
  def test_output_z160; assert_in_epsilon(9.13, worksheet.output_z160, 0.001); end
  def test_output_aa160; assert_in_epsilon(9.183, worksheet.output_aa160, 0.001); end
  def test_output_ab160; assert_in_epsilon(9.154, worksheet.output_ab160, 0.001); end
  def test_output_ac160; assert_in_epsilon(5.27842366448078, worksheet.output_ac160, 0.001); end
  def test_output_ad160; assert_in_epsilon(2.2482005009118384, worksheet.output_ad160, 0.001); end
  def test_output_ae160; assert_in_epsilon(2.968170219134744, worksheet.output_ae160, 0.001); end
  def test_output_af160; assert_in_epsilon(10.273773166757339, worksheet.output_af160, 0.001); end
  def test_output_ag160; assert_in_epsilon(8.550476161609195, worksheet.output_ag160, 0.001); end
  def test_output_ah160; assert_in_epsilon(7.041468194938376, worksheet.output_ah160, 0.001); end
  def test_output_ai160; assert_in_epsilon(5.825892953976909, worksheet.output_ai160, 0.001); end
  def test_output_aj160; assert_in_epsilon(4.002048691199822, worksheet.output_aj160, 0.001); end
  def test_output_am160; assert_in_delta(-0.027319612193984377, worksheet.output_am160, 0.001); end
  def test_output_an160; assert_in_delta(-0.6697777207402449, worksheet.output_an160, 0.001); end
  def test_output_ak160; assert_in_epsilon(1.743053093383472, worksheet.output_ak160, 0.001); end
  def test_output_ao160; assert_in_delta(-0.7590804293872189, worksheet.output_ao160, 0.001); end
  def test_output_ar160; assert_in_epsilon(2010, worksheet.output_ar160, 0.001); end
  def test_output_as160; assert_in_epsilon(2050, worksheet.output_as160, 0.001); end
  def test_output_c161; assert_equal("I.a.Liquid", worksheet.output_c161); end
  def test_output_e161; assert_equal("Oil / Biofuel", worksheet.output_e161); end
  def test_output_f161; assert_equal("GW", worksheet.output_f161); end
  def test_output_h161; assert_in_delta(0, (worksheet.output_h161||0), 0.001); end
  def test_output_m161; assert_in_delta(0, (worksheet.output_m161||0), 0.001); end
  def test_output_r161; assert_in_delta(0, (worksheet.output_r161||0), 0.001); end
  def test_output_w161; assert_in_delta(0, (worksheet.output_w161||0), 0.001); end
  def test_output_ab161; assert_in_delta(0, (worksheet.output_ab161||0), 0.001); end
  def test_output_ac161; assert_in_delta(0.76103500761035, worksheet.output_ac161, 0.001); end
  def test_output_ad161; assert_in_delta(0.76103500761035, worksheet.output_ad161, 0.001); end
  def test_output_ae161; assert_in_delta(0.76103500761035, worksheet.output_ae161, 0.001); end
  def test_output_af161; assert_in_delta(0, (worksheet.output_af161||0), 0.001); end
  def test_output_ag161; assert_in_delta(0, (worksheet.output_ag161||0), 0.001); end
  def test_output_ah161; assert_in_delta(0, (worksheet.output_ah161||0), 0.001); end
  def test_output_ai161; assert_in_delta(0, (worksheet.output_ai161||0), 0.001); end
  def test_output_aj161; assert_in_delta(0, (worksheet.output_aj161||0), 0.001); end
  def test_output_ak161; assert_in_delta(0, (worksheet.output_ak161||0), 0.001); end
  def test_output_am161; assert_in_delta(-1, worksheet.output_am161, 0.001); end
  def test_output_an161; assert_in_delta(-1, worksheet.output_an161, 0.001); end
  def test_output_ao161; assert_equal("", worksheet.output_ao161); end
  def test_output_c162; assert_equal("I.a.Solid", worksheet.output_c162); end
  def test_output_e162; assert_equal("Coal / Biomass", worksheet.output_e162); end
  def test_output_f162; assert_equal("GW", worksheet.output_f162); end
  def test_output_h162; assert_in_delta(0, (worksheet.output_h162||0), 0.001); end
  def test_output_m162; assert_in_delta(0, (worksheet.output_m162||0), 0.001); end
  def test_output_r162; assert_in_delta(0, (worksheet.output_r162||0), 0.001); end
  def test_output_w162; assert_in_delta(0, (worksheet.output_w162||0), 0.001); end
  def test_output_ab162; assert_in_delta(0, (worksheet.output_ab162||0), 0.001); end
  def test_output_am162; assert_in_delta(0.03144848125051003, worksheet.output_am162, 0.001); end
  def test_output_an162; assert_in_epsilon(2.4506557056167373, worksheet.output_an162, 0.001); end
  def test_output_ao162; assert_equal("", worksheet.output_ao162); end
  def test_output_aq162; assert_equal("Back-up gas plants", worksheet.output_aq162); end
  def test_output_ac174; assert_in_delta(0, (worksheet.output_ac174||0), 0.001); end
  def test_output_ar162; assert_in_delta(0, (worksheet.output_ar162||0), 0.001); end
  def test_output_ak174; assert_in_epsilon(7.128146527375013, worksheet.output_ak174, 0.001); end
  def test_output_as162; assert_in_epsilon(7.128146527375013, worksheet.output_as162, 0.001); end
  def test_output_c163; assert_equal("I.a.Gas", worksheet.output_c163); end
  def test_output_e163; assert_equal("Gas / Biogas", worksheet.output_e163); end
  def test_output_f163; assert_equal("GW", worksheet.output_f163); end
  def test_output_h163; assert_in_delta(0, (worksheet.output_h163||0), 0.001); end
  def test_output_m163; assert_in_delta(0, (worksheet.output_m163||0), 0.001); end
  def test_output_r163; assert_in_delta(0, (worksheet.output_r163||0), 0.001); end
  def test_output_w163; assert_in_delta(0, (worksheet.output_w163||0), 0.001); end
  def test_output_ab163; assert_in_delta(0, (worksheet.output_ab163||0), 0.001); end
  def test_output_ac163; assert_in_epsilon(4.012251882272416, worksheet.output_ac163, 0.001); end
  def test_output_am163; assert_in_delta(-1, worksheet.output_am163, 0.001); end
  def test_output_an163; assert_in_delta(-1, worksheet.output_an163, 0.001); end
  def test_output_ao163; assert_equal("", worksheet.output_ao163); end
  def test_output_aq163; assert_equal("CCS", worksheet.output_aq163); end
  def test_output_ar163; assert_in_delta(0, (worksheet.output_ar163||0), 0.001); end
  def test_output_as163; assert_in_delta(0, (worksheet.output_as163||0), 0.001); end
  def test_output_c164; assert_equal("I.b", worksheet.output_c164); end
  def test_output_e164; assert_equal("Carbon Capture Storage (CCS)", worksheet.output_e164); end
  def test_output_f164; assert_equal("GW", worksheet.output_f164); end
  def test_output_h164; assert_in_delta(0, (worksheet.output_h164||0), 0.001); end
  def test_output_m164; assert_in_delta(0, (worksheet.output_m164||0), 0.001); end
  def test_output_r164; assert_in_delta(0, (worksheet.output_r164||0), 0.001); end
  def test_output_w164; assert_in_delta(0, (worksheet.output_w164||0), 0.001); end
  def test_output_ab164; assert_in_delta(0, (worksheet.output_ab164||0), 0.001); end
  def test_output_ac164; assert_in_delta(0, (worksheet.output_ac164||0), 0.001); end
  def test_output_am164; assert_equal("", worksheet.output_am164); end
  def test_output_an164; assert_equal("", worksheet.output_an164); end
  def test_output_ao164; assert_equal("", worksheet.output_ao164); end
  def test_output_aq164; assert_equal("Biomass", worksheet.output_aq164); end
  def test_output_as164; assert_in_epsilon(1.743053093383472, worksheet.output_as164, 0.001); end
  def test_output_c165; assert_equal("II.a", worksheet.output_c165); end
  def test_output_e165; assert_equal("Nuclear power", worksheet.output_e165); end
  def test_output_f165; assert_equal("GW", worksheet.output_f165); end
  def test_output_g165; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g165); end
  def test_output_h165; assert_in_epsilon(5.5, worksheet.output_h165, 0.001); end
  def test_output_i165; assert_in_epsilon(5.485, worksheet.output_i165, 0.001); end
  def test_output_j165; assert_in_epsilon(5.485, worksheet.output_j165, 0.001); end
  def test_output_k165; assert_in_epsilon(5.485, worksheet.output_k165, 0.001); end
  def test_output_l165; assert_in_epsilon(5.528, worksheet.output_l165, 0.001); end
  def test_output_m165; assert_in_epsilon(5.632, worksheet.output_m165, 0.001); end
  def test_output_n165; assert_in_epsilon(5.693, worksheet.output_n165, 0.001); end
  def test_output_o165; assert_in_epsilon(5.713, worksheet.output_o165, 0.001); end
  def test_output_p165; assert_in_epsilon(5.722, worksheet.output_p165, 0.001); end
  def test_output_q165; assert_in_epsilon(5.713, worksheet.output_q165, 0.001); end
  def test_output_r165; assert_in_epsilon(5.713, worksheet.output_r165, 0.001); end
  def test_output_s165; assert_in_epsilon(5.738, worksheet.output_s165, 0.001); end
  def test_output_t165; assert_in_epsilon(5.761, worksheet.output_t165, 0.001); end
  def test_output_u165; assert_in_epsilon(5.761, worksheet.output_u165, 0.001); end
  def test_output_v165; assert_in_epsilon(5.761, worksheet.output_v165, 0.001); end
  def test_output_w165; assert_in_epsilon(5.802, worksheet.output_w165, 0.001); end
  def test_output_x165; assert_in_epsilon(5.825, worksheet.output_x165, 0.001); end
  def test_output_y165; assert_in_epsilon(5.825, worksheet.output_y165, 0.001); end
  def test_output_z165; assert_in_epsilon(5.825, worksheet.output_z165, 0.001); end
  def test_output_aa165; assert_in_epsilon(5.902, worksheet.output_aa165, 0.001); end
  def test_output_ab165; assert_in_epsilon(5.927, worksheet.output_ab165, 0.001); end
  def test_output_am165; assert_in_delta(-1, worksheet.output_am165, 0.001); end
  def test_output_an165; assert_in_delta(-1, worksheet.output_an165, 0.001); end
  def test_output_ao165; assert_in_delta(-1, worksheet.output_ao165, 0.001); end
  def test_output_aq165; assert_equal("Geothermal", worksheet.output_aq165); end
  def test_output_ac172; assert_in_delta(0, (worksheet.output_ac172||0), 0.001); end
  def test_output_ar165; assert_in_delta(0, (worksheet.output_ar165||0), 0.001); end
  def test_output_as165; assert_in_epsilon(3.2686005909213, worksheet.output_as165, 0.001); end
  def test_output_c166; assert_equal("III.a.1", worksheet.output_c166); end
  def test_output_e166; assert_equal("Onshore wind", worksheet.output_e166); end
  def test_output_f166; assert_equal("GW", worksheet.output_f166); end
  def test_output_h166; assert_in_delta(0, (worksheet.output_h166||0), 0.001); end
  def test_output_m166; assert_in_delta(0, (worksheet.output_m166||0), 0.001); end
  def test_output_r166; assert_in_delta(0, (worksheet.output_r166||0), 0.001); end
  def test_output_w166; assert_in_delta(0, (worksheet.output_w166||0), 0.001); end
  def test_output_ab166; assert_in_delta(0, (worksheet.output_ab166||0), 0.001); end
  def test_output_ac166; assert_in_delta(0.59, worksheet.output_ac166, 0.001); end
  def test_output_am166; assert_in_delta(0.06656917360147085, worksheet.output_am166, 0.001); end
  def test_output_an166; assert_in_epsilon(12.169251605912855, worksheet.output_an166, 0.001); end
  def test_output_ao166; assert_equal("", worksheet.output_ao166); end
  def test_output_aq166; assert_equal("Wind", worksheet.output_aq166); end
  def test_output_ar166; assert_in_delta(0.7999999999999999, worksheet.output_ar166, 0.001); end
  def test_output_as166; assert_in_epsilon(13.275958447488584, worksheet.output_as166, 0.001); end
  def test_output_c167; assert_equal("III.a.2", worksheet.output_c167); end
  def test_output_e167; assert_equal("Offshore wind", worksheet.output_e167); end
  def test_output_f167; assert_equal("GW", worksheet.output_f167); end
  def test_output_g167; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g167); end
  def test_output_h167; assert_in_delta(0.005, worksheet.output_h167, 0.001); end
  def test_output_i167; assert_in_delta(0.005, worksheet.output_i167, 0.001); end
  def test_output_j167; assert_in_delta(0.005, worksheet.output_j167, 0.001); end
  def test_output_k167; assert_in_delta(0.005, worksheet.output_k167, 0.001); end
  def test_output_l167; assert_in_delta(0.005, worksheet.output_l167, 0.001); end
  def test_output_m167; assert_in_delta(0.005, worksheet.output_m167, 0.001); end
  def test_output_n167; assert_in_delta(0.005, worksheet.output_n167, 0.001); end
  def test_output_o167; assert_in_delta(0.005, worksheet.output_o167, 0.001); end
  def test_output_p167; assert_in_delta(0.006, worksheet.output_p167, 0.001); end
  def test_output_q167; assert_in_delta(0.01, worksheet.output_q167, 0.001); end
  def test_output_r167; assert_in_delta(0.014, worksheet.output_r167, 0.001); end
  def test_output_s167; assert_in_delta(0.026, worksheet.output_s167, 0.001); end
  def test_output_t167; assert_in_delta(0.031, worksheet.output_t167, 0.001); end
  def test_output_u167; assert_in_delta(0.067, worksheet.output_u167, 0.001); end
  def test_output_v167; assert_in_delta(0.096, worksheet.output_v167, 0.001); end
  def test_output_w167; assert_in_delta(0.167, worksheet.output_w167, 0.001); end
  def test_output_x167; assert_in_delta(0.212, worksheet.output_x167, 0.001); end
  def test_output_y167; assert_in_delta(0.276, worksheet.output_y167, 0.001); end
  def test_output_z167; assert_in_delta(0.324, worksheet.output_z167, 0.001); end
  def test_output_aa167; assert_in_delta(0.608, worksheet.output_aa167, 0.001); end
  def test_output_ab167; assert_in_delta(0.912, worksheet.output_ab167, 0.001); end
  def test_output_ac167; assert_in_delta(0.21, worksheet.output_ac167, 0.001); end
  def test_output_am167; assert_in_delta(0.08508964741043101, worksheet.output_am167, 0.001); end
  def test_output_an167; assert_in_epsilon(25.21952380952381, worksheet.output_an167, 0.001); end
  def test_output_ao167; assert_in_epsilon(1100.22, worksheet.output_ao167, 0.001); end
  def test_output_aq167; assert_equal("Solar", worksheet.output_aq167); end
  def test_output_ar167; assert_in_delta(0.967, worksheet.output_ar167, 0.001); end
  def test_output_as167; assert_in_epsilon(14.350999999999999, worksheet.output_as167, 0.001); end
  def test_output_c168; assert_equal("III.b", worksheet.output_c168); end
  def test_output_e168; assert_equal("Hydroelectric power stations", worksheet.output_e168); end
  def test_output_f168; assert_equal("GW", worksheet.output_f168); end
  def test_output_g168; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g168); end
  def test_output_h168; assert_in_epsilon(1.401, worksheet.output_h168, 0.001); end
  def test_output_i168; assert_in_epsilon(1.401, worksheet.output_i168, 0.001); end
  def test_output_j168; assert_in_epsilon(1.401, worksheet.output_j168, 0.001); end
  def test_output_k168; assert_in_epsilon(1.402, worksheet.output_k168, 0.001); end
  def test_output_l168; assert_in_epsilon(1.402, worksheet.output_l168, 0.001); end
  def test_output_m168; assert_in_epsilon(1.403, worksheet.output_m168, 0.001); end
  def test_output_n168; assert_in_epsilon(1.403, worksheet.output_n168, 0.001); end
  def test_output_o168; assert_in_epsilon(1.403, worksheet.output_o168, 0.001); end
  def test_output_p168; assert_in_epsilon(1.404, worksheet.output_p168, 0.001); end
  def test_output_q168; assert_in_epsilon(1.41, worksheet.output_q168, 0.001); end
  def test_output_r168; assert_in_epsilon(1.413, worksheet.output_r168, 0.001); end
  def test_output_s168; assert_in_epsilon(1.421, worksheet.output_s168, 0.001); end
  def test_output_t168; assert_in_epsilon(1.421, worksheet.output_t168, 0.001); end
  def test_output_u168; assert_in_epsilon(1.42, worksheet.output_u168, 0.001); end
  def test_output_v168; assert_in_epsilon(1.425, worksheet.output_v168, 0.001); end
  def test_output_w168; assert_in_epsilon(1.412, worksheet.output_w168, 0.001); end
  def test_output_x168; assert_in_epsilon(1.414, worksheet.output_x168, 0.001); end
  def test_output_y168; assert_in_epsilon(1.417, worksheet.output_y168, 0.001); end
  def test_output_z168; assert_in_epsilon(1.418, worksheet.output_z168, 0.001); end
  def test_output_aa168; assert_in_epsilon(1.417, worksheet.output_aa168, 0.001); end
  def test_output_ab168; assert_in_epsilon(1.425, worksheet.output_ab168, 0.001); end
  def test_output_ac168; assert_in_delta(0, (worksheet.output_ac168||0), 0.001); end
  def test_output_ad168; assert_in_delta(0, (worksheet.output_ad168||0), 0.001); end
  def test_output_ae168; assert_in_delta(0, (worksheet.output_ae168||0), 0.001); end
  def test_output_af168; assert_in_delta(0, (worksheet.output_af168||0), 0.001); end
  def test_output_ag168; assert_in_delta(0, (worksheet.output_ag168||0), 0.001); end
  def test_output_ah168; assert_in_delta(0, (worksheet.output_ah168||0), 0.001); end
  def test_output_ai168; assert_in_delta(0, (worksheet.output_ai168||0), 0.001); end
  def test_output_aj168; assert_in_delta(0, (worksheet.output_aj168||0), 0.001); end
  def test_output_ak168; assert_in_delta(0, (worksheet.output_ak168||0), 0.001); end
  def test_output_am168; assert_equal("", worksheet.output_am168); end
  def test_output_an168; assert_equal("", worksheet.output_an168); end
  def test_output_ao168; assert_in_delta(-1, worksheet.output_ao168, 0.001); end
  def test_output_aq168; assert_equal("Unabated fossil fuels", worksheet.output_aq168); end
  def test_output_ac162; assert_in_delta(0.5051367745980138, worksheet.output_ac162, 0.001); end
  def test_output_ar168; assert_in_epsilon(5.27842366448078, worksheet.output_ar168, 0.001); end
  def test_output_c169; assert_equal("III.c.Wave", worksheet.output_c169); end
  def test_output_e169; assert_equal("Wave [UNUSED]", worksheet.output_e169); end
  def test_output_f169; assert_equal("GW", worksheet.output_f169); end
  def test_output_g169; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g169); end
  def test_output_h169; assert_in_delta(0, (worksheet.output_h169||0), 0.001); end
  def test_output_i169; assert_in_delta(0, (worksheet.output_i169||0), 0.001); end
  def test_output_j169; assert_in_delta(0, (worksheet.output_j169||0), 0.001); end
  def test_output_k169; assert_in_delta(0, (worksheet.output_k169||0), 0.001); end
  def test_output_l169; assert_in_delta(0, (worksheet.output_l169||0), 0.001); end
  def test_output_m169; assert_in_delta(0, (worksheet.output_m169||0), 0.001); end
  def test_output_n169; assert_in_delta(0, (worksheet.output_n169||0), 0.001); end
  def test_output_o169; assert_in_delta(0, (worksheet.output_o169||0), 0.001); end
  def test_output_p169; assert_in_delta(0, (worksheet.output_p169||0), 0.001); end
  def test_output_q169; assert_in_delta(0, (worksheet.output_q169||0), 0.001); end
  def test_output_r169; assert_in_delta(0, (worksheet.output_r169||0), 0.001); end
  def test_output_s169; assert_in_delta(0, (worksheet.output_s169||0), 0.001); end
  def test_output_t169; assert_in_delta(0, (worksheet.output_t169||0), 0.001); end
  def test_output_u169; assert_in_delta(0, (worksheet.output_u169||0), 0.001); end
  def test_output_v169; assert_in_delta(0, (worksheet.output_v169||0), 0.001); end
  def test_output_w169; assert_in_delta(0, (worksheet.output_w169||0), 0.001); end
  def test_output_x169; assert_in_delta(0, (worksheet.output_x169||0), 0.001); end
  def test_output_y169; assert_in_delta(0, (worksheet.output_y169||0), 0.001); end
  def test_output_z169; assert_in_delta(0, (worksheet.output_z169||0), 0.001); end
  def test_output_aa169; assert_in_delta(0, (worksheet.output_aa169||0), 0.001); end
  def test_output_ab169; assert_in_delta(0, (worksheet.output_ab169||0), 0.001); end
  def test_output_am169; assert_equal("", worksheet.output_am169); end
  def test_output_an169; assert_equal("", worksheet.output_an169); end
  def test_output_ao169; assert_equal("", worksheet.output_ao169); end
  def test_output_aq169; assert_equal("Nuclear", worksheet.output_aq169); end
  def test_output_ac165; assert_in_epsilon(5.8245, worksheet.output_ac165, 0.001); end
  def test_output_ar169; assert_in_epsilon(5.8245, worksheet.output_ar169, 0.001); end
  def test_output_c170; assert_equal("III.c.TidalStream", worksheet.output_c170); end
  def test_output_e170; assert_equal("Tidal Stream  [UNUSED]", worksheet.output_e170); end
  def test_output_f170; assert_equal("GW", worksheet.output_f170); end
  def test_output_h170; assert_in_delta(0, (worksheet.output_h170||0), 0.001); end
  def test_output_m170; assert_in_delta(0, (worksheet.output_m170||0), 0.001); end
  def test_output_r170; assert_in_delta(0, (worksheet.output_r170||0), 0.001); end
  def test_output_w170; assert_in_delta(0, (worksheet.output_w170||0), 0.001); end
  def test_output_ab170; assert_in_delta(0, (worksheet.output_ab170||0), 0.001); end
  def test_output_am170; assert_equal("", worksheet.output_am170); end
  def test_output_an170; assert_equal("", worksheet.output_an170); end
  def test_output_ao170; assert_equal("", worksheet.output_ao170); end
  def test_output_c171; assert_equal("III.c.TidalRange", worksheet.output_c171); end
  def test_output_e171; assert_equal("Tidal Range  [UNUSED]", worksheet.output_e171); end
  def test_output_f171; assert_equal("GW", worksheet.output_f171); end
  def test_output_h171; assert_in_delta(0, (worksheet.output_h171||0), 0.001); end
  def test_output_m171; assert_in_delta(0, (worksheet.output_m171||0), 0.001); end
  def test_output_r171; assert_in_delta(0, (worksheet.output_r171||0), 0.001); end
  def test_output_w171; assert_in_delta(0, (worksheet.output_w171||0), 0.001); end
  def test_output_ab171; assert_in_delta(0, (worksheet.output_ab171||0), 0.001); end
  def test_output_am171; assert_equal("", worksheet.output_am171); end
  def test_output_an171; assert_equal("", worksheet.output_an171); end
  def test_output_ao171; assert_equal("", worksheet.output_ao171); end
  def test_output_c172; assert_equal("III.d", worksheet.output_c172); end
  def test_output_e172; assert_equal("Geothermal electricity", worksheet.output_e172); end
  def test_output_f172; assert_equal("GW", worksheet.output_f172); end
  def test_output_g172; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g172); end
  def test_output_h172; assert_in_delta(0, (worksheet.output_h172||0), 0.001); end
  def test_output_i172; assert_in_delta(0, (worksheet.output_i172||0), 0.001); end
  def test_output_j172; assert_in_delta(0, (worksheet.output_j172||0), 0.001); end
  def test_output_k172; assert_in_delta(0, (worksheet.output_k172||0), 0.001); end
  def test_output_l172; assert_in_delta(0, (worksheet.output_l172||0), 0.001); end
  def test_output_m172; assert_in_delta(0, (worksheet.output_m172||0), 0.001); end
  def test_output_n172; assert_in_delta(0, (worksheet.output_n172||0), 0.001); end
  def test_output_o172; assert_in_delta(0, (worksheet.output_o172||0), 0.001); end
  def test_output_p172; assert_in_delta(0, (worksheet.output_p172||0), 0.001); end
  def test_output_q172; assert_in_delta(0, (worksheet.output_q172||0), 0.001); end
  def test_output_r172; assert_in_delta(0, (worksheet.output_r172||0), 0.001); end
  def test_output_s172; assert_in_delta(0, (worksheet.output_s172||0), 0.001); end
  def test_output_t172; assert_in_delta(0, (worksheet.output_t172||0), 0.001); end
  def test_output_u172; assert_in_delta(0, (worksheet.output_u172||0), 0.001); end
  def test_output_v172; assert_in_delta(0, (worksheet.output_v172||0), 0.001); end
  def test_output_w172; assert_in_delta(0, (worksheet.output_w172||0), 0.001); end
  def test_output_x172; assert_in_delta(0, (worksheet.output_x172||0), 0.001); end
  def test_output_y172; assert_in_delta(0, (worksheet.output_y172||0), 0.001); end
  def test_output_z172; assert_in_delta(0, (worksheet.output_z172||0), 0.001); end
  def test_output_aa172; assert_in_delta(0, (worksheet.output_aa172||0), 0.001); end
  def test_output_ab172; assert_in_delta(0, (worksheet.output_ab172||0), 0.001); end
  def test_output_am172; assert_equal("", worksheet.output_am172); end
  def test_output_an172; assert_equal("", worksheet.output_an172); end
  def test_output_ao172; assert_equal("", worksheet.output_ao172); end
  def test_output_c173; assert_equal("IV.a", worksheet.output_c173); end
  def test_output_e173; assert_equal("Solar PV", worksheet.output_e173); end
  def test_output_f173; assert_equal("GW", worksheet.output_f173); end
  def test_output_h173; assert_in_delta(0, (worksheet.output_h173||0), 0.001); end
  def test_output_m173; assert_in_delta(0, (worksheet.output_m173||0), 0.001); end
  def test_output_r173; assert_in_delta(0, (worksheet.output_r173||0), 0.001); end
  def test_output_w173; assert_in_delta(0, (worksheet.output_w173||0), 0.001); end
  def test_output_ab173; assert_in_delta(0, (worksheet.output_ab173||0), 0.001); end
  def test_output_ac173; assert_in_delta(0.967, worksheet.output_ac173, 0.001); end
  def test_output_am173; assert_in_delta(0.06976009199224387, worksheet.output_am173, 0.001); end
  def test_output_an173; assert_in_epsilon(13.840744570837641, worksheet.output_an173, 0.001); end
  def test_output_ao173; assert_equal("", worksheet.output_ao173); end
  def test_output_c174; assert_equal("VII.c", worksheet.output_c174); end
  def test_output_e174; assert_equal("Standby / peaking gas", worksheet.output_e174); end
  def test_output_f174; assert_equal("GW", worksheet.output_f174); end
  def test_output_h174; assert_in_delta(0, (worksheet.output_h174||0), 0.001); end
  def test_output_m174; assert_in_delta(0, (worksheet.output_m174||0), 0.001); end
  def test_output_r174; assert_in_delta(0, (worksheet.output_r174||0), 0.001); end
  def test_output_w174; assert_in_delta(0, (worksheet.output_w174||0), 0.001); end
  def test_output_ab174; assert_in_delta(0, (worksheet.output_ab174||0), 0.001); end
  def test_output_am174; assert_equal("", worksheet.output_am174); end
  def test_output_an174; assert_equal("", worksheet.output_an174); end
  def test_output_ao174; assert_equal("", worksheet.output_ao174); end
  def test_output_e175; assert_equal("Total capacity", worksheet.output_e175); end
  def test_output_f175; assert_equal("GW", worksheet.output_f175); end
  def test_output_g175; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g175); end
  def test_output_h175; assert_in_epsilon(14.141, worksheet.output_h175, 0.001); end
  def test_output_i175; assert_in_epsilon(14.098, worksheet.output_i175, 0.001); end
  def test_output_j175; assert_in_epsilon(14.039, worksheet.output_j175, 0.001); end
  def test_output_k175; assert_in_epsilon(14.053, worksheet.output_k175, 0.001); end
  def test_output_l175; assert_in_epsilon(14.899, worksheet.output_l175, 0.001); end
  def test_output_m175; assert_in_epsilon(14.917, worksheet.output_m175, 0.001); end
  def test_output_n175; assert_in_epsilon(14.852, worksheet.output_n175, 0.001); end
  def test_output_o175; assert_in_epsilon(14.693, worksheet.output_o175, 0.001); end
  def test_output_p175; assert_in_epsilon(15.404, worksheet.output_p175, 0.001); end
  def test_output_q175; assert_in_epsilon(15.522, worksheet.output_q175, 0.001); end
  def test_output_r175; assert_in_epsilon(15.685, worksheet.output_r175, 0.001); end
  def test_output_s175; assert_in_epsilon(15.533, worksheet.output_s175, 0.001); end
  def test_output_t175; assert_in_epsilon(15.552, worksheet.output_t175, 0.001); end
  def test_output_u175; assert_in_epsilon(15.615, worksheet.output_u175, 0.001); end
  def test_output_v175; assert_in_epsilon(15.648, worksheet.output_v175, 0.001); end
  def test_output_w175; assert_in_epsilon(16.096, worksheet.output_w175, 0.001); end
  def test_output_x175; assert_in_epsilon(16.26, worksheet.output_x175, 0.001); end
  def test_output_y175; assert_in_epsilon(16.38, worksheet.output_y175, 0.001); end
  def test_output_z175; assert_in_epsilon(16.76, worksheet.output_z175, 0.001); end
  def test_output_aa175; assert_in_epsilon(17.496, worksheet.output_aa175, 0.001); end
  def test_output_ab175; assert_in_epsilon(18.322, worksheet.output_ab175, 0.001); end
  def test_output_am175; assert_in_delta(0.028604939582503652, worksheet.output_am175, 0.001); end
  def test_output_an175; assert_in_epsilon(2.0898985647381227, worksheet.output_an175, 0.001); end
  def test_output_ak175; assert_in_epsilon(39.76675865916837, worksheet.output_ak175, 0.001); end
  def test_output_ao175; assert_in_epsilon(1.8121602898782525, worksheet.output_ao175, 0.001); end
  def test_output_e176; assert_equal("Share of intermittent over total", worksheet.output_e176); end
  def test_output_f176; assert_equal("%", worksheet.output_f176); end
  def test_output_h176; assert_in_delta(0, (worksheet.output_h176||0), 0.001); end
  def test_output_m176; assert_in_delta(0, (worksheet.output_m176||0), 0.001); end
  def test_output_r176; assert_in_delta(0, (worksheet.output_r176||0), 0.001); end
  def test_output_w176; assert_in_delta(0, (worksheet.output_w176||0), 0.001); end
  def test_output_ab176; assert_in_delta(0, (worksheet.output_ab176||0), 0.001); end
  def test_output_ac169; assert_in_delta(0, (worksheet.output_ac169||0), 0.001); end
  def test_output_ac170; assert_in_delta(0, (worksheet.output_ac170||0), 0.001); end
  def test_output_ac171; assert_in_delta(0, (worksheet.output_ac171||0), 0.001); end
  def test_output_ac175; assert_in_epsilon(12.869923664480782, worksheet.output_ac175, 0.001); end
  def test_output_ac176; assert_in_delta(0.13729685164152736, worksheet.output_ac176, 0.001); end
  def test_output_ad162; assert_in_delta(0.6917828565768758, worksheet.output_ad162, 0.001); end
  def test_output_ad163; assert_in_delta(0.7953826367246126, worksheet.output_ad163, 0.001); end
  def test_output_ad164; assert_in_delta(0, (worksheet.output_ad164||0), 0.001); end
  def test_output_ad165; assert_in_epsilon(5.8245, worksheet.output_ad165, 0.001); end
  def test_output_ad166; assert_in_epsilon(1.864696347031963, worksheet.output_ad166, 0.001); end
  def test_output_ad167; assert_in_delta(0.8805499999999999, worksheet.output_ad167, 0.001); end
  def test_output_ad169; assert_in_delta(0, (worksheet.output_ad169||0), 0.001); end
  def test_output_ad170; assert_in_delta(0, (worksheet.output_ad170||0), 0.001); end
  def test_output_ad171; assert_in_delta(0, (worksheet.output_ad171||0), 0.001); end
  def test_output_ad172; assert_in_delta(0.0035, worksheet.output_ad172, 0.001); end
  def test_output_ad173; assert_in_epsilon(1.851, worksheet.output_ad173, 0.001); end
  def test_output_ad174; assert_in_delta(0, (worksheet.output_ad174||0), 0.001); end
  def test_output_ad175; assert_in_epsilon(12.6724468479438, worksheet.output_ad175, 0.001); end
  def test_output_ad176; assert_in_delta(0.36269604459045246, worksheet.output_ad176, 0.001); end
  def test_output_ae162; assert_in_delta(0.9083244243752415, worksheet.output_ae162, 0.001); end
  def test_output_ae163; assert_in_epsilon(1.298810787149152, worksheet.output_ae163, 0.001); end
  def test_output_ae164; assert_in_delta(0, (worksheet.output_ae164||0), 0.001); end
  def test_output_ae165; assert_in_epsilon(4.999, worksheet.output_ae165, 0.001); end
  def test_output_ae166; assert_in_epsilon(3.1393926940639263, worksheet.output_ae166, 0.001); end
  def test_output_ae167; assert_in_epsilon(1.5538249999999998, worksheet.output_ae167, 0.001); end
  def test_output_ae169; assert_in_delta(0, (worksheet.output_ae169||0), 0.001); end
  def test_output_ae170; assert_in_delta(0, (worksheet.output_ae170||0), 0.001); end
  def test_output_ae171; assert_in_delta(0, (worksheet.output_ae171||0), 0.001); end
  def test_output_ae172; assert_in_delta(0.15000000000000002, worksheet.output_ae172, 0.001); end
  def test_output_ae173; assert_in_epsilon(2.735, worksheet.output_ae173, 0.001); end
  def test_output_ae174; assert_in_delta(0.27577802185684613, worksheet.output_ae174, 0.001); end
  def test_output_ae175; assert_in_epsilon(15.821165935055514, worksheet.output_ae175, 0.001); end
  def test_output_ae176; assert_in_delta(0.4695113953393892, worksheet.output_ae176, 0.001); end
  def test_output_af162; assert_in_epsilon(1.0818720183894326, worksheet.output_af162, 0.001); end
  def test_output_af163; assert_in_epsilon(9.191901148367906, worksheet.output_af163, 0.001); end
  def test_output_af164; assert_in_delta(0, (worksheet.output_af164||0), 0.001); end
  def test_output_af165; assert_in_delta(0, (worksheet.output_af165||0), 0.001); end
  def test_output_af166; assert_in_epsilon(4.446990867579908, worksheet.output_af166, 0.001); end
  def test_output_af167; assert_in_epsilon(2.2816027777777776, worksheet.output_af167, 0.001); end
  def test_output_af169; assert_in_delta(0, (worksheet.output_af169||0), 0.001); end
  def test_output_af170; assert_in_delta(0, (worksheet.output_af170||0), 0.001); end
  def test_output_af171; assert_in_delta(0, (worksheet.output_af171||0), 0.001); end
  def test_output_af172; assert_in_delta(0.2864334318202167, worksheet.output_af172, 0.001); end
  def test_output_af173; assert_in_epsilon(3.86, worksheet.output_af173, 0.001); end
  def test_output_af174; assert_in_epsilon(1.3697035987614374, worksheet.output_af174, 0.001); end
  def test_output_af175; assert_in_epsilon(22.518503842696678, worksheet.output_af175, 0.001); end
  def test_output_af176; assert_in_delta(0.47021745846546703, worksheet.output_af176, 0.001); end
  def test_output_ag162; assert_in_epsilon(1.2374217396544978, worksheet.output_ag162, 0.001); end
  def test_output_ag163; assert_in_epsilon(7.313054421954697, worksheet.output_ag163, 0.001); end
  def test_output_ag164; assert_in_delta(0, (worksheet.output_ag164||0), 0.001); end
  def test_output_ag165; assert_in_delta(0, (worksheet.output_ag165||0), 0.001); end
  def test_output_ag166; assert_in_epsilon(5.804589041095889, worksheet.output_ag166, 0.001); end
  def test_output_ag167; assert_in_epsilon(3.1316027777777777, worksheet.output_ag167, 0.001); end
  def test_output_ag169; assert_in_delta(0, (worksheet.output_ag169||0), 0.001); end
  def test_output_ag170; assert_in_delta(0, (worksheet.output_ag170||0), 0.001); end
  def test_output_ag171; assert_in_delta(0, (worksheet.output_ag171||0), 0.001); end
  def test_output_ag172; assert_in_delta(0.6228668636404333, worksheet.output_ag172, 0.001); end
  def test_output_ag173; assert_in_epsilon(5.31, worksheet.output_ag173, 0.001); end
  def test_output_ag174; assert_in_epsilon(2.620400563963832, worksheet.output_ag174, 0.001); end
  def test_output_ag175; assert_in_epsilon(26.039935408087125, worksheet.output_ag175, 0.001); end
  def test_output_ag176; assert_in_delta(0.5470901365772697, worksheet.output_ag176, 0.001); end
  def test_output_ah162; assert_in_epsilon(1.365058273264333, worksheet.output_ah162, 0.001); end
  def test_output_ah163; assert_in_epsilon(5.6764099216740425, worksheet.output_ah163, 0.001); end
  def test_output_ah164; assert_in_delta(0, (worksheet.output_ah164||0), 0.001); end
  def test_output_ah165; assert_in_delta(0, (worksheet.output_ah165||0), 0.001); end
  def test_output_ah166; assert_in_epsilon(6.951849315068492, worksheet.output_ah166, 0.001); end
  def test_output_ah167; assert_in_epsilon(3.902702777777778, worksheet.output_ah167, 0.001); end
  def test_output_ah169; assert_in_delta(0, (worksheet.output_ah169||0), 0.001); end
  def test_output_ah170; assert_in_delta(0, (worksheet.output_ah170||0), 0.001); end
  def test_output_ah171; assert_in_delta(0, (worksheet.output_ah171||0), 0.001); end
  def test_output_ah172; assert_in_delta(0.9593002954606501, worksheet.output_ah172, 0.001); end
  def test_output_ah173; assert_in_epsilon(6.218999999999999, worksheet.output_ah173, 0.001); end
  def test_output_ah174; assert_in_epsilon(3.814961609266145, worksheet.output_ah174, 0.001); end
  def test_output_ah175; assert_in_epsilon(28.88928219251144, worksheet.output_ah175, 0.001); end
  def test_output_ah176; assert_in_delta(0.5909995263666331, worksheet.output_ah176, 0.001); end
  def test_output_ai162; assert_in_epsilon(1.4918756767557744, worksheet.output_ai162, 0.001); end
  def test_output_ai163; assert_in_epsilon(4.334017277221134, worksheet.output_ai163, 0.001); end
  def test_output_ai164; assert_in_delta(0, (worksheet.output_ai164||0), 0.001); end
  def test_output_ai165; assert_in_delta(0, (worksheet.output_ai165||0), 0.001); end
  def test_output_ai166; assert_in_epsilon(7.202152968036529, worksheet.output_ai166, 0.001); end
  def test_output_ai167; assert_in_epsilon(4.332152777777778, worksheet.output_ai167, 0.001); end
  def test_output_ai169; assert_in_delta(0, (worksheet.output_ai169||0), 0.001); end
  def test_output_ai170; assert_in_delta(0, (worksheet.output_ai170||0), 0.001); end
  def test_output_ai171; assert_in_delta(0, (worksheet.output_ai171||0), 0.001); end
  def test_output_ai172; assert_in_epsilon(1.4957337272808668, worksheet.output_ai172, 0.001); end
  def test_output_ai173; assert_in_epsilon(8.059999999999999, worksheet.output_ai173, 0.001); end
  def test_output_ai174; assert_in_epsilon(4.78329869242811, worksheet.output_ai174, 0.001); end
  def test_output_ai175; assert_in_epsilon(31.69923111950019, worksheet.output_ai175, 0.001); end
  def test_output_ai176; assert_in_delta(0.6181318932294423, worksheet.output_ai176, 0.001); end
  def test_output_aj162; assert_in_epsilon(1.6174643850696233, worksheet.output_aj162, 0.001); end
  def test_output_aj163; assert_in_epsilon(2.384584306130199, worksheet.output_aj163, 0.001); end
  def test_output_aj164; assert_in_delta(0, (worksheet.output_aj164||0), 0.001); end
  def test_output_aj165; assert_in_delta(0, (worksheet.output_aj165||0), 0.001); end
  def test_output_aj166; assert_in_epsilon(7.477456621004566, worksheet.output_aj166, 0.001); end
  def test_output_aj167; assert_in_epsilon(4.883877777777778, worksheet.output_aj167, 0.001); end
  def test_output_aj169; assert_in_delta(0, (worksheet.output_aj169||0), 0.001); end
  def test_output_aj170; assert_in_delta(0, (worksheet.output_aj170||0), 0.001); end
  def test_output_aj171; assert_in_delta(0, (worksheet.output_aj171||0), 0.001); end
  def test_output_aj172; assert_in_epsilon(2.2321671591010834, worksheet.output_aj172, 0.001); end
  def test_output_aj173; assert_in_epsilon(10.850999999999999, worksheet.output_aj173, 0.001); end
  def test_output_aj174; assert_in_epsilon(5.890393929974977, worksheet.output_aj174, 0.001); end
  def test_output_aj175; assert_in_epsilon(35.33694417905822, worksheet.output_aj175, 0.001); end
  def test_output_aj176; assert_in_delta(0.656885730728768, worksheet.output_aj176, 0.001); end
  def test_output_am176; assert_in_delta(0.04136699139028854, worksheet.output_am176, 0.001); end
  def test_output_an176; assert_in_epsilon(4.06002080316819, worksheet.output_an176, 0.001); end
  def test_output_ak176; assert_in_delta(0.6947249255156251, worksheet.output_ak176, 0.001); end
  def test_output_ao176; assert_equal("", worksheet.output_ao176); end
  def test_output_e177; assert_equal("Total generation excl. Back-up", worksheet.output_e177); end
  def test_output_f177; assert_equal("GW", worksheet.output_f177); end
  def test_output_h177; assert_in_delta(0, (worksheet.output_h177||0), 0.001); end
  def test_output_m177; assert_in_delta(0, (worksheet.output_m177||0), 0.001); end
  def test_output_r177; assert_in_delta(0, (worksheet.output_r177||0), 0.001); end
  def test_output_w177; assert_in_delta(0, (worksheet.output_w177||0), 0.001); end
  def test_output_ab177; assert_in_delta(0, (worksheet.output_ab177||0), 0.001); end
  def test_output_am177; assert_in_delta(0.023537815790267036, worksheet.output_am177, 0.001); end
  def test_output_an177; assert_in_epsilon(1.5360377406022563, worksheet.output_an177, 0.001); end
  def test_output_ao177; assert_equal("", worksheet.output_ao177); end
  def test_output_e178; assert_equal("Share of intermittent over total excl. Back-up", worksheet.output_e178); end
  def test_output_f178; assert_equal("%", worksheet.output_f178); end
  def test_output_h178; assert_in_delta(0, (worksheet.output_h178||0), 0.001); end
  def test_output_m178; assert_in_delta(0, (worksheet.output_m178||0), 0.001); end
  def test_output_r178; assert_in_delta(0, (worksheet.output_r178||0), 0.001); end
  def test_output_w178; assert_in_delta(0, (worksheet.output_w178||0), 0.001); end
  def test_output_ab178; assert_in_delta(0, (worksheet.output_ab178||0), 0.001); end
  def test_output_ac177; assert_in_epsilon(12.869923664480782, worksheet.output_ac177, 0.001); end
  def test_output_ac178; assert_in_delta(0.13729685164152736, worksheet.output_ac178, 0.001); end
  def test_output_ad177; assert_in_epsilon(12.6724468479438, worksheet.output_ad177, 0.001); end
  def test_output_ad178; assert_in_delta(0.36269604459045246, worksheet.output_ad178, 0.001); end
  def test_output_ae177; assert_in_epsilon(15.545387913198669, worksheet.output_ae177, 0.001); end
  def test_output_ae178; assert_in_delta(0.47784061327649896, worksheet.output_ae178, 0.001); end
  def test_output_af177; assert_in_epsilon(21.14880024393524, worksheet.output_af177, 0.001); end
  def test_output_af178; assert_in_delta(0.5006711266467295, worksheet.output_af178, 0.001); end
  def test_output_ag177; assert_in_epsilon(23.419534844123294, worksheet.output_ag177, 0.001); end
  def test_output_ag178; assert_in_delta(0.6083037905617706, worksheet.output_ag178, 0.001); end
  def test_output_ah177; assert_in_epsilon(25.074320583245296, worksheet.output_ah177, 0.001); end
  def test_output_ah178; assert_in_delta(0.6809178352874234, worksheet.output_ah178, 0.001); end
  def test_output_ai177; assert_in_epsilon(26.915932427072082, worksheet.output_ai177, 0.001); end
  def test_output_ai178; assert_in_delta(0.7279816814410757, worksheet.output_ai178, 0.001); end
  def test_output_aj177; assert_in_epsilon(29.44655024908325, worksheet.output_aj177, 0.001); end
  def test_output_aj178; assert_in_delta(0.788287055781857, worksheet.output_aj178, 0.001); end
  def test_output_am178; assert_in_delta(0.04652238025537847, worksheet.output_am178, 0.001); end
  def test_output_an178; assert_in_epsilon(5.1651097564271495, worksheet.output_an178, 0.001); end
  def test_output_ao178; assert_equal("", worksheet.output_ao178); end
  def test_output_e179; assert_equal("Share of back-up over total excl. Back-up", worksheet.output_e179); end
  def test_output_f179; assert_equal("%", worksheet.output_f179); end
  def test_output_h179; assert_in_delta(0, (worksheet.output_h179||0), 0.001); end
  def test_output_m179; assert_in_delta(0, (worksheet.output_m179||0), 0.001); end
  def test_output_r179; assert_in_delta(0, (worksheet.output_r179||0), 0.001); end
  def test_output_w179; assert_in_delta(0, (worksheet.output_w179||0), 0.001); end
  def test_output_ab179; assert_in_delta(0, (worksheet.output_ab179||0), 0.001); end
  def test_output_ac179; assert_in_delta(0, (worksheet.output_ac179||0), 0.001); end
  def test_output_ad179; assert_in_delta(0, (worksheet.output_ad179||0), 0.001); end
  def test_output_ae179; assert_in_delta(0.01774018270864115, worksheet.output_ae179, 0.001); end
  def test_output_af179; assert_in_delta(0.06476507333574262, worksheet.output_af179, 0.001); end
  def test_output_ag179; assert_in_delta(0.11188952220463823, worksheet.output_ag179, 0.001); end
  def test_output_ah179; assert_in_delta(0.15214616071453232, worksheet.output_ah179, 0.001); end
  def test_output_ai179; assert_in_delta(0.17771253904683834, worksheet.output_ai179, 0.001); end
  def test_output_aj179; assert_in_delta(0.20003680839178642, worksheet.output_aj179, 0.001); end
  def test_output_am179; assert_equal("", worksheet.output_am179); end
  def test_output_an179; assert_equal("", worksheet.output_an179); end
  def test_output_ak179; assert_in_delta(0.21839612844418307, worksheet.output_ak179, 0.001); end
  def test_output_ao179; assert_equal("", worksheet.output_ao179); end
  def test_output_e180; assert_equal("Number of onshore wind turbines", worksheet.output_e180); end
  def test_output_f180; assert_equal("units", worksheet.output_f180); end
  def test_output_h180; assert_in_delta(0, (worksheet.output_h180||0), 0.001); end
  def test_output_m180; assert_in_delta(0, (worksheet.output_m180||0), 0.001); end
  def test_output_r180; assert_in_delta(0, (worksheet.output_r180||0), 0.001); end
  def test_output_w180; assert_in_delta(0, (worksheet.output_w180||0), 0.001); end
  def test_output_ab180; assert_in_delta(0, (worksheet.output_ab180||0), 0.001); end
  def test_output_ac180; assert_in_epsilon(235.99999999999997, worksheet.output_ac180, 0.001); end
  def test_output_ad180; assert_in_epsilon(745.8785388127852, worksheet.output_ad180, 0.001); end
  def test_output_ae180; assert_in_epsilon(1255.7570776255704, worksheet.output_ae180, 0.001); end
  def test_output_af180; assert_in_epsilon(1778.796347031963, worksheet.output_af180, 0.001); end
  def test_output_ag180; assert_in_epsilon(2321.835616438356, worksheet.output_ag180, 0.001); end
  def test_output_ah180; assert_in_epsilon(2780.739726027397, worksheet.output_ah180, 0.001); end
  def test_output_ai180; assert_in_epsilon(2880.8611872146116, worksheet.output_ai180, 0.001); end
  def test_output_aj180; assert_in_epsilon(2990.9826484018263, worksheet.output_aj180, 0.001); end
  def test_output_am180; assert_in_delta(0.06656917360147085, worksheet.output_am180, 0.001); end
  def test_output_an180; assert_in_epsilon(12.169251605912857, worksheet.output_an180, 0.001); end
  def test_output_ak180; assert_in_epsilon(3107.9433789954337, worksheet.output_ak180, 0.001); end
  def test_output_ao180; assert_equal("", worksheet.output_ao180); end
  def test_output_e181; assert_equal("Number of offshore wind turbines", worksheet.output_e181); end
  def test_output_f181; assert_equal("units", worksheet.output_f181); end
  def test_output_h181; assert_in_delta(0, (worksheet.output_h181||0), 0.001); end
  def test_output_m181; assert_in_delta(0, (worksheet.output_m181||0), 0.001); end
  def test_output_r181; assert_in_delta(0, (worksheet.output_r181||0), 0.001); end
  def test_output_w181; assert_in_delta(0, (worksheet.output_w181||0), 0.001); end
  def test_output_ab181; assert_in_delta(0, (worksheet.output_ab181||0), 0.001); end
  def test_output_ac181; assert_in_epsilon(35, worksheet.output_ac181, 0.001); end
  def test_output_ad181; assert_in_epsilon(146.75833333333333, worksheet.output_ad181, 0.001); end
  def test_output_ae181; assert_in_epsilon(258.9708333333333, worksheet.output_ae181, 0.001); end
  def test_output_af181; assert_in_epsilon(380.2671296296296, worksheet.output_af181, 0.001); end
  def test_output_ag181; assert_in_epsilon(521.9337962962962, worksheet.output_ag181, 0.001); end
  def test_output_ah181; assert_in_epsilon(650.450462962963, worksheet.output_ah181, 0.001); end
  def test_output_ai181; assert_in_epsilon(722.0254629629629, worksheet.output_ai181, 0.001); end
  def test_output_aj181; assert_in_epsilon(813.9796296296297, worksheet.output_aj181, 0.001); end
  def test_output_am181; assert_in_delta(0.08508964741043101, worksheet.output_am181, 0.001); end
  def test_output_an181; assert_in_epsilon(25.219523809523807, worksheet.output_an181, 0.001); end
  def test_output_ak181; assert_in_epsilon(917.6833333333333, worksheet.output_ak181, 0.001); end
  def test_output_ao181; assert_equal("", worksheet.output_ao181); end
  def test_output_am182; assert_equal("", worksheet.output_am182); end
  def test_output_an182; assert_equal("", worksheet.output_an182); end
  def test_output_ao182; assert_equal("", worksheet.output_ao182); end
  def test_output_b183; assert_equal("Electricity grid (net of distribution losses)", worksheet.output_b183); end
  def test_output_am183; assert_equal("", worksheet.output_am183); end
  def test_output_an183; assert_equal("", worksheet.output_an183); end
  def test_output_ao183; assert_equal("", worksheet.output_ao183); end
  def test_output_c184; assert_equal("V.01", worksheet.output_c184); end
  def test_output_e184; assert_equal("Electricity (delivered to end user)", worksheet.output_e184); end
  def test_output_f184; assert_equal("TWh/yr", worksheet.output_f184); end
  def test_output_ac184; assert_in_epsilon(-62.41947455810114, worksheet.output_ac184, 0.001); end
  def test_output_ad184; assert_in_epsilon(-65.94146609720585, worksheet.output_ad184, 0.001); end
  def test_output_ae184; assert_in_epsilon(-70.88787876128268, worksheet.output_ae184, 0.001); end
  def test_output_af184; assert_in_epsilon(-74.7339127869249, worksheet.output_af184, 0.001); end
  def test_output_ag184; assert_in_epsilon(-77.44788777807412, worksheet.output_ag184, 0.001); end
  def test_output_ah184; assert_in_epsilon(-79.96504903931299, worksheet.output_ah184, 0.001); end
  def test_output_ai184; assert_in_epsilon(-82.35869697874395, worksheet.output_ai184, 0.001); end
  def test_output_aj184; assert_in_epsilon(-84.44329913437022, worksheet.output_aj184, 0.001); end
  def test_output_ak184; assert_in_epsilon(-87.35132235084446, worksheet.output_ak184, 0.001); end
  def test_output_am184; assert_in_delta(0.008436913227464427, worksheet.output_am184, 0.001); end
  def test_output_an184; assert_in_delta(0.3994241856287386, worksheet.output_an184, 0.001); end
  def test_output_ao184; assert_equal("", worksheet.output_ao184); end
  def test_output_c185; assert_equal("V.02", worksheet.output_c185); end
  def test_output_e185; assert_equal("Electricity (supplied to grid)", worksheet.output_e185); end
  def test_output_f185; assert_equal("TWh/yr", worksheet.output_f185); end
  def test_output_ac185; assert_in_epsilon(62.419474558101136, worksheet.output_ac185, 0.001); end
  def test_output_ad185; assert_in_epsilon(65.94146609720585, worksheet.output_ad185, 0.001); end
  def test_output_ae185; assert_in_epsilon(70.88787876128268, worksheet.output_ae185, 0.001); end
  def test_output_af185; assert_in_epsilon(74.7339127869249, worksheet.output_af185, 0.001); end
  def test_output_ag185; assert_in_epsilon(77.44788777807412, worksheet.output_ag185, 0.001); end
  def test_output_ah185; assert_in_epsilon(79.96504903931299, worksheet.output_ah185, 0.001); end
  def test_output_ai185; assert_in_epsilon(82.35869697874395, worksheet.output_ai185, 0.001); end
  def test_output_aj185; assert_in_epsilon(84.44329913437022, worksheet.output_aj185, 0.001); end
  def test_output_ak185; assert_in_epsilon(87.35132235084446, worksheet.output_ak185, 0.001); end
  def test_output_am185; assert_in_delta(0.008436913227464427, worksheet.output_am185, 0.001); end
  def test_output_an185; assert_in_delta(0.3994241856287386, worksheet.output_an185, 0.001); end
  def test_output_ao185; assert_equal("", worksheet.output_ao185); end
  def test_output_e186; assert_equal("Total electricity grid", worksheet.output_e186); end
  def test_output_f186; assert_equal("TWh/yr", worksheet.output_f186); end
  def test_output_ad186; assert_in_delta(0, (worksheet.output_ad186||0), 0.001); end
  def test_output_ae186; assert_in_delta(0, (worksheet.output_ae186||0), 0.001); end
  def test_output_af186; assert_in_delta(0, (worksheet.output_af186||0), 0.001); end
  def test_output_ag186; assert_in_delta(0, (worksheet.output_ag186||0), 0.001); end
  def test_output_ah186; assert_in_delta(0, (worksheet.output_ah186||0), 0.001); end
  def test_output_ai186; assert_in_delta(0, (worksheet.output_ai186||0), 0.001); end
  def test_output_aj186; assert_in_delta(0, (worksheet.output_aj186||0), 0.001); end
  def test_output_am186; assert_equal("", worksheet.output_am186); end
  def test_output_an186; assert_equal("", worksheet.output_an186); end
  def test_output_ak186; assert_in_delta(0, (worksheet.output_ak186||0), 0.001); end
  def test_output_ao186; assert_equal("", worksheet.output_ao186); end
  def test_output_c187; assert_equal("V.02", worksheet.output_c187); end
  def test_output_e187; assert_equal("Losses", worksheet.output_e187); end
  def test_output_f187; assert_equal("TWh/yr", worksheet.output_f187); end
  def test_output_ac187; assert_in_epsilon(-4.6358569884618746, worksheet.output_ac187, 0.001); end
  def test_output_ad187; assert_in_epsilon(-4.896149782779091, worksheet.output_ad187, 0.001); end
  def test_output_ae187; assert_in_epsilon(-5.258105238430204, worksheet.output_ae187, 0.001); end
  def test_output_af187; assert_in_epsilon(-5.535496362684313, worksheet.output_af187, 0.001); end
  def test_output_ag187; assert_in_epsilon(-5.7254293047730584, worksheet.output_ag187, 0.001); end
  def test_output_ah187; assert_in_epsilon(-5.89853701760525, worksheet.output_ah187, 0.001); end
  def test_output_ai187; assert_in_epsilon(-6.0586251861218585, worksheet.output_ai187, 0.001); end
  def test_output_aj187; assert_in_epsilon(-6.191729502689796, worksheet.output_aj187, 0.001); end
  def test_output_ak187; assert_in_epsilon(-6.385668111579108, worksheet.output_ak187, 0.001); end
  def test_output_am187; assert_in_delta(0.008038008837480959, worksheet.output_am187, 0.001); end
  def test_output_an187; assert_in_delta(0.3774514890067393, worksheet.output_an187, 0.001); end
  def test_output_ao187; assert_equal("", worksheet.output_ao187); end
  def test_output_e188; assert_equal("Demand (for charting)", worksheet.output_e188); end
  def test_output_f188; assert_equal("TWh/yr", worksheet.output_f188); end
  def test_output_ac188; assert_in_epsilon(67.05533154656302, worksheet.output_ac188, 0.001); end
  def test_output_ad188; assert_in_epsilon(70.83761587998494, worksheet.output_ad188, 0.001); end
  def test_output_ae188; assert_in_epsilon(76.14598399971288, worksheet.output_ae188, 0.001); end
  def test_output_af188; assert_in_epsilon(80.26940914960922, worksheet.output_af188, 0.001); end
  def test_output_ag188; assert_in_epsilon(83.17331708284718, worksheet.output_ag188, 0.001); end
  def test_output_ah188; assert_in_epsilon(85.86358605691824, worksheet.output_ah188, 0.001); end
  def test_output_ai188; assert_in_epsilon(88.41732216486581, worksheet.output_ai188, 0.001); end
  def test_output_aj188; assert_in_epsilon(90.63502863706002, worksheet.output_aj188, 0.001); end
  def test_output_am188; assert_in_delta(0.008409532223548455, worksheet.output_am188, 0.001); end
  def test_output_an188; assert_in_delta(0.39790510762493025, worksheet.output_an188, 0.001); end
  def test_output_ak188; assert_in_epsilon(93.73699046242356, worksheet.output_ak188, 0.001); end
  def test_output_ao188; assert_equal("", worksheet.output_ao188); end
  def test_output_e189; assert_equal("Dummy for charting", worksheet.output_e189); end
  def test_output_f189; assert_equal("TWh/yr", worksheet.output_f189); end
  def test_output_ac189; assert_in_epsilon(101.2224748907514, worksheet.output_ac189, 0.001); end
  def test_output_ad189; assert_in_epsilon(81.83464611326725, worksheet.output_ad189, 0.001); end
  def test_output_ae189; assert_in_epsilon(87.14301423299518, worksheet.output_ae189, 0.001); end
  def test_output_af189; assert_in_epsilon(91.26643938289152, worksheet.output_af189, 0.001); end
  def test_output_ag189; assert_in_epsilon(94.1703473161295, worksheet.output_ag189, 0.001); end
  def test_output_ah189; assert_in_epsilon(96.86061629020051, worksheet.output_ah189, 0.001); end
  def test_output_ai189; assert_in_epsilon(99.4143523981481, worksheet.output_ai189, 0.001); end
  def test_output_aj189; assert_in_epsilon(101.63205887034232, worksheet.output_aj189, 0.001); end
  def test_output_ak189; assert_in_epsilon(104.78357462016442, worksheet.output_ak189, 0.001); end
  def test_output_am189; assert_in_delta(0.0008647790255154053, worksheet.output_am189, 0.001); end
  def test_output_an189; assert_in_delta(0.03518091938827306, worksheet.output_an189, 0.001); end
  def test_output_ao189; assert_equal("", worksheet.output_ao189); end
  def test_output_c190; assert_equal("Z.01", worksheet.output_c190); end
  def test_output_e190; assert_equal("Unallocated", worksheet.output_e190); end
  def test_output_f190; assert_equal("TWh/yr", worksheet.output_f190); end
  def test_output_ac190; assert_in_epsilon(-1.6173785868556934, worksheet.output_ac190, 0.001); end
  def test_output_ad190; assert_in_epsilon(-1.6174634537584325, worksheet.output_ad190, 0.001); end
  def test_output_ae190; assert_in_epsilon(-1.6173990377865834, worksheet.output_ae190, 0.001); end
  def test_output_af190; assert_in_epsilon(-1.616903986304827, worksheet.output_af190, 0.001); end
  def test_output_ag190; assert_in_epsilon(-1.6160816418896218, worksheet.output_ag190, 0.001); end
  def test_output_ah190; assert_in_epsilon(-1.6149446964385277, worksheet.output_ah190, 0.001); end
  def test_output_ai190; assert_in_epsilon(-1.6135302314991762, worksheet.output_ai190, 0.001); end
  def test_output_aj190; assert_in_epsilon(-1.6116896246224854, worksheet.output_aj190, 0.001); end
  def test_output_ak190; assert_in_epsilon(-1.611065213424915, worksheet.output_ak190, 0.001); end
  def test_output_am190; assert_in_delta(-9.777269213817608e-05, worksheet.output_am190, 0.001); end
  def test_output_an190; assert_in_delta(-0.0039034605021277535, worksheet.output_an190, 0.001); end
  def test_output_ao190; assert_equal("", worksheet.output_ao190); end
  def test_output_am191; assert_equal("", worksheet.output_am191); end
  def test_output_an191; assert_equal("", worksheet.output_an191); end
  def test_output_ao191; assert_equal("", worksheet.output_ao191); end
  def test_output_e192; assert_equal("Net balance (should be zero!)", worksheet.output_e192); end
  def test_output_f192; assert_equal("TWh/yr", worksheet.output_f192); end
  def test_output_ac28; assert_in_delta(0.60143532, worksheet.output_ac28, 0.001); end
  def test_output_ac29; assert_in_epsilon(1.9247814410958906, worksheet.output_ac29, 0.001); end
  def test_output_ac30; assert_in_delta(0, (worksheet.output_ac30||0), 0.001); end
  def test_output_ac31; assert_in_delta(0, (worksheet.output_ac31||0), 0.001); end
  def test_output_ac32; assert_in_delta(0, (worksheet.output_ac32||0), 0.001); end
  def test_output_ac33; assert_in_delta(0.3760614, worksheet.output_ac33, 0.001); end
  def test_output_ac35; assert_in_epsilon(126.06882513518977, worksheet.output_ac35, 0.001); end
  def test_output_ac52; assert_in_epsilon(561.033701551189, worksheet.output_ac52, 0.001); end
  def test_output_ac67; assert_in_epsilon(421.3461228358409, worksheet.output_ac67, 0.001); end
  def test_output_ac84; assert_in_delta(-1.6930901125533637e-15, worksheet.output_ac84, 0.001); end
  def test_output_ac86; assert_in_epsilon(-1.6173785868558088, worksheet.output_ac86, 0.001); end
  def test_output_ac186; assert_in_delta(0, (worksheet.output_ac186||0), 0.001); end
  def test_output_ac192; assert_in_epsilon(-3.234757173711502, worksheet.output_ac192, 0.001); end
  def test_output_ad192; assert_in_epsilon(-3.234926907516979, worksheet.output_ad192, 0.001); end
  def test_output_ae192; assert_in_epsilon(-3.2347980755730497, worksheet.output_ae192, 0.001); end
  def test_output_af192; assert_in_epsilon(-3.2338079726096907, worksheet.output_af192, 0.001); end
  def test_output_ag192; assert_in_epsilon(-3.232163283779272, worksheet.output_ag192, 0.001); end
  def test_output_ah192; assert_in_epsilon(-3.2298893928770833, worksheet.output_ah192, 0.001); end
  def test_output_ai192; assert_in_epsilon(-3.2270604629982316, worksheet.output_ai192, 0.001); end
  def test_output_aj192; assert_in_epsilon(-3.223379249245042, worksheet.output_aj192, 0.001); end
  def test_output_am192; assert_in_delta(-9.777269213906425e-05, worksheet.output_am192, 0.001); end
  def test_output_an192; assert_in_delta(-0.0039034605021610602, worksheet.output_an192, 0.001); end
  def test_output_ak192; assert_in_epsilon(-3.222130426849837, worksheet.output_ak192, 0.001); end
  def test_output_ao192; assert_equal("", worksheet.output_ao192); end
  def test_output_am193; assert_equal("", worksheet.output_am193); end
  def test_output_an193; assert_equal("", worksheet.output_an193); end
  def test_output_ao193; assert_equal("", worksheet.output_ao193); end
  def test_output_am194; assert_equal("", worksheet.output_am194); end
  def test_output_an194; assert_equal("", worksheet.output_an194); end
  def test_output_ao194; assert_equal("", worksheet.output_ao194); end
  def test_output_b195; assert_equal("Heat demand", worksheet.output_b195); end
  def test_output_am195; assert_equal("", worksheet.output_am195); end
  def test_output_an195; assert_equal("", worksheet.output_an195); end
  def test_output_ao195; assert_equal("", worksheet.output_ao195); end
  def test_output_c196; assert_equal("IX.a", worksheet.output_c196); end
  def test_output_d196; assert_equal("H.01", worksheet.output_d196); end
  def test_output_e196; assert_equal("Heating and cooling / Domestic space heating and hot water", worksheet.output_e196); end
  def test_output_f196; assert_equal("TWh/yr", worksheet.output_f196); end
  def test_output_g196; assert_equal("NIR", worksheet.output_g196); end
  def test_output_h196; assert_in_epsilon(84.44099755264888, worksheet.output_h196, 0.001); end
  def test_output_m196; assert_in_epsilon(94.56243360318945, worksheet.output_m196, 0.001); end
  def test_output_r196; assert_in_epsilon(90.32120404322806, worksheet.output_r196, 0.001); end
  def test_output_w196; assert_in_epsilon(94.89659740822027, worksheet.output_w196, 0.001); end
  def test_output_ab196; assert_in_epsilon(101.53865837019805, worksheet.output_ab196, 0.001); end
  def test_output_ac196; assert_in_epsilon(72.19613855748818, worksheet.output_ac196, 0.001); end
  def test_output_ad196; assert_in_epsilon(74.17299294577367, worksheet.output_ad196, 0.001); end
  def test_output_ae196; assert_in_epsilon(74.50180089269917, worksheet.output_ae196, 0.001); end
  def test_output_af196; assert_in_epsilon(75.02150999979753, worksheet.output_af196, 0.001); end
  def test_output_ag196; assert_in_epsilon(73.77821700437488, worksheet.output_ag196, 0.001); end
  def test_output_ah196; assert_in_epsilon(73.02134023183102, worksheet.output_ah196, 0.001); end
  def test_output_ai196; assert_in_epsilon(72.80294411277312, worksheet.output_ai196, 0.001); end
  def test_output_aj196; assert_in_epsilon(73.03765108697917, worksheet.output_aj196, 0.001); end
  def test_output_ak196; assert_in_epsilon(73.82757093116487, worksheet.output_ak196, 0.001); end
  def test_output_am196; assert_in_delta(0.000558798314815645, worksheet.output_am196, 0.001); end
  def test_output_an196; assert_in_delta(0.0225972248138675, worksheet.output_an196, 0.001); end
  def test_output_ao196; assert_in_delta(-0.125690445744279, worksheet.output_ao196, 0.001); end
  def test_output_c197; assert_equal("IX.b", worksheet.output_c197); end
  def test_output_d197; assert_equal("H.01", worksheet.output_d197); end
  def test_output_e197; assert_equal("Heating and cooling / Domestic hot water [UNUSED - See IX.a]", worksheet.output_e197); end
  def test_output_f197; assert_equal("TWh/yr", worksheet.output_f197); end
  def test_output_ac197; assert_in_delta(0, (worksheet.output_ac197||0), 0.001); end
  def test_output_ad197; assert_in_delta(0, (worksheet.output_ad197||0), 0.001); end
  def test_output_ae197; assert_in_delta(0, (worksheet.output_ae197||0), 0.001); end
  def test_output_af197; assert_in_delta(0, (worksheet.output_af197||0), 0.001); end
  def test_output_ag197; assert_in_delta(0, (worksheet.output_ag197||0), 0.001); end
  def test_output_ah197; assert_in_delta(0, (worksheet.output_ah197||0), 0.001); end
  def test_output_ai197; assert_in_delta(0, (worksheet.output_ai197||0), 0.001); end
  def test_output_aj197; assert_in_delta(0, (worksheet.output_aj197||0), 0.001); end
  def test_output_ak197; assert_in_delta(0, (worksheet.output_ak197||0), 0.001); end
  def test_output_am197; assert_equal("", worksheet.output_am197); end
  def test_output_an197; assert_equal("", worksheet.output_an197); end
  def test_output_ao197; assert_equal("", worksheet.output_ao197); end
  def test_output_c198; assert_equal("IX.c", worksheet.output_c198); end
  def test_output_d198; assert_equal("H.01", worksheet.output_d198); end
  def test_output_e198; assert_equal("Heating and cooling / Commercial heating and cooling", worksheet.output_e198); end
  def test_output_f198; assert_equal("TWh/yr", worksheet.output_f198); end
  def test_output_g198; assert_equal("NIR", worksheet.output_g198); end
  def test_output_h198; assert_in_epsilon(18.777508136172, worksheet.output_h198, 0.001); end
  def test_output_m198; assert_in_epsilon(24.458952929553558, worksheet.output_m198, 0.001); end
  def test_output_r198; assert_in_epsilon(26.586950857843473, worksheet.output_r198, 0.001); end
  def test_output_w198; assert_in_epsilon(28.632374256644443, worksheet.output_w198, 0.001); end
  def test_output_ab198; assert_in_epsilon(31.673084122563054, worksheet.output_ab198, 0.001); end
  def test_output_ac198; assert_in_epsilon(26.175415496219273, worksheet.output_ac198, 0.001); end
  def test_output_ad198; assert_in_epsilon(25.03797443342547, worksheet.output_ad198, 0.001); end
  def test_output_ae198; assert_in_epsilon(22.84067638578927, worksheet.output_ae198, 0.001); end
  def test_output_af198; assert_in_epsilon(20.500970177662516, worksheet.output_af198, 0.001); end
  def test_output_ag198; assert_in_epsilon(18.36852847008901, worksheet.output_ag198, 0.001); end
  def test_output_ah198; assert_in_epsilon(16.331739101984514, worksheet.output_ah198, 0.001); end
  def test_output_ai198; assert_in_epsilon(14.465979569263851, worksheet.output_ai198, 0.001); end
  def test_output_aj198; assert_in_epsilon(12.719079002594224, worksheet.output_aj198, 0.001); end
  def test_output_ak198; assert_in_epsilon(10.914876430149468, worksheet.output_ak198, 0.001); end
  def test_output_am198; assert_in_delta(-0.02162999183488512, worksheet.output_am198, 0.001); end
  def test_output_an198; assert_in_delta(-0.5830103850032107, worksheet.output_an198, 0.001); end
  def test_output_ao198; assert_in_delta(-0.41872604442526495, worksheet.output_ao198, 0.001); end
  def test_output_c199; assert_equal("IX.d", worksheet.output_c199); end
  def test_output_d199; assert_equal("H.01", worksheet.output_d199); end
  def test_output_e199; assert_equal("Heating and cooling / Commercial hot water [UNUSED - See IX.c]", worksheet.output_e199); end
  def test_output_f199; assert_equal("TWh/yr", worksheet.output_f199); end
  def test_output_ac199; assert_in_delta(0, (worksheet.output_ac199||0), 0.001); end
  def test_output_ad199; assert_in_delta(0, (worksheet.output_ad199||0), 0.001); end
  def test_output_ae199; assert_in_delta(0, (worksheet.output_ae199||0), 0.001); end
  def test_output_af199; assert_in_delta(0, (worksheet.output_af199||0), 0.001); end
  def test_output_ag199; assert_in_delta(0, (worksheet.output_ag199||0), 0.001); end
  def test_output_ah199; assert_in_delta(0, (worksheet.output_ah199||0), 0.001); end
  def test_output_ai199; assert_in_delta(0, (worksheet.output_ai199||0), 0.001); end
  def test_output_aj199; assert_in_delta(0, (worksheet.output_aj199||0), 0.001); end
  def test_output_ak199; assert_in_delta(0, (worksheet.output_ak199||0), 0.001); end
  def test_output_am199; assert_equal("", worksheet.output_am199); end
  def test_output_an199; assert_equal("", worksheet.output_an199); end
  def test_output_ao199; assert_equal("", worksheet.output_ao199); end
  def test_output_c200; assert_equal("IX", worksheet.output_c200); end
  def test_output_d200; assert_equal("H.01", worksheet.output_d200); end
  def test_output_e200; assert_equal("Heating and cooling / Heating", worksheet.output_e200); end
  def test_output_f200; assert_equal("TWh/yr", worksheet.output_f200); end
  def test_output_g200; assert_equal("sum of above", worksheet.output_g200); end
  def test_output_h200; assert_in_epsilon(103.21850568882088, worksheet.output_h200, 0.001); end
  def test_output_m200; assert_in_epsilon(119.02138653274301, worksheet.output_m200, 0.001); end
  def test_output_r200; assert_in_epsilon(116.90815490107154, worksheet.output_r200, 0.001); end
  def test_output_w200; assert_in_epsilon(123.52897166486471, worksheet.output_w200, 0.001); end
  def test_output_ab200; assert_in_epsilon(133.21174249276112, worksheet.output_ab200, 0.001); end
  def test_output_ac200; assert_in_epsilon(98.37155405370746, worksheet.output_ac200, 0.001); end
  def test_output_ad200; assert_in_epsilon(99.21096737919915, worksheet.output_ad200, 0.001); end
  def test_output_ae200; assert_in_epsilon(97.34247727848843, worksheet.output_ae200, 0.001); end
  def test_output_af200; assert_in_epsilon(95.52248017746004, worksheet.output_af200, 0.001); end
  def test_output_ag200; assert_in_epsilon(92.1467454744639, worksheet.output_ag200, 0.001); end
  def test_output_ah200; assert_in_epsilon(89.35307933381553, worksheet.output_ah200, 0.001); end
  def test_output_ai200; assert_in_epsilon(87.26892368203697, worksheet.output_ai200, 0.001); end
  def test_output_aj200; assert_in_epsilon(85.7567300895734, worksheet.output_aj200, 0.001); end
  def test_output_ak200; assert_in_epsilon(84.74244736131433, worksheet.output_ak200, 0.001); end
  def test_output_am200; assert_in_delta(-0.0037214345308564933, worksheet.output_am200, 0.001); end
  def test_output_an200; assert_in_delta(-0.13854723373539568, worksheet.output_an200, 0.001); end
  def test_output_ao200; assert_in_delta(-0.1789994749895668, worksheet.output_ao200, 0.001); end
  def test_output_c201; assert_equal("XII.a", worksheet.output_c201); end
  def test_output_d201; assert_equal("V.04", worksheet.output_d201); end
  def test_output_e201; assert_equal("Liquid hydrocarbons / Domestic passenger transport", worksheet.output_e201); end
  def test_output_f201; assert_equal("TWh/yr", worksheet.output_f201); end
  def test_output_g201; assert_equal("NIR", worksheet.output_g201); end
  def test_output_h201; assert_in_epsilon(76.09414241632976, worksheet.output_h201, 0.001); end
  def test_output_m201; assert_in_epsilon(83.48000514362698, worksheet.output_m201, 0.001); end
  def test_output_r201; assert_in_epsilon(90.93630383532414, worksheet.output_r201, 0.001); end
  def test_output_w201; assert_in_epsilon(96.4549491070562, worksheet.output_w201, 0.001); end
  def test_output_ab201; assert_in_epsilon(93.85021878870344, worksheet.output_ab201, 0.001); end
  def test_output_ac201; assert_in_epsilon(62.82116266127325, worksheet.output_ac201, 0.001); end
  def test_output_ad201; assert_in_epsilon(58.73891507246771, worksheet.output_ad201, 0.001); end
  def test_output_ae201; assert_in_epsilon(49.89411611996089, worksheet.output_ae201, 0.001); end
  def test_output_af201; assert_in_epsilon(41.19523849398166, worksheet.output_af201, 0.001); end
  def test_output_ag201; assert_in_epsilon(31.727267326380154, worksheet.output_ag201, 0.001); end
  def test_output_ah201; assert_in_epsilon(23.67427687068835, worksheet.output_ah201, 0.001); end
  def test_output_ai201; assert_in_epsilon(17.912571953717816, worksheet.output_ai201, 0.001); end
  def test_output_aj201; assert_in_epsilon(12.86293729984185, worksheet.output_aj201, 0.001); end
  def test_output_am201; assert_in_delta(-0.04847751976835579, worksheet.output_am201, 0.001); end
  def test_output_an201; assert_in_delta(-0.8629868890141424, worksheet.output_an201, 0.001); end
  def test_output_ak201; assert_in_epsilon(8.607322931969643, worksheet.output_ak201, 0.001); end
  def test_output_ao201; assert_in_delta(-0.8868858671817751, worksheet.output_ao201, 0.001); end
  def test_output_c202; assert_equal("XII.b", worksheet.output_c202); end
  def test_output_d202; assert_equal("V.04", worksheet.output_d202); end
  def test_output_e202; assert_equal("Liquid hydrocarbons / Domestic freight", worksheet.output_e202); end
  def test_output_f202; assert_equal("TWh/yr", worksheet.output_f202); end
  def test_output_g202; assert_equal("included above", worksheet.output_g202); end
  def test_output_ac202; assert_in_epsilon(34.68000000000001, worksheet.output_ac202, 0.001); end
  def test_output_ad202; assert_in_epsilon(34.246654235298536, worksheet.output_ad202, 0.001); end
  def test_output_ae202; assert_in_epsilon(31.566563712573306, worksheet.output_ae202, 0.001); end
  def test_output_af202; assert_in_epsilon(28.909699680394468, worksheet.output_af202, 0.001); end
  def test_output_ag202; assert_in_epsilon(26.287453828236977, worksheet.output_ag202, 0.001); end
  def test_output_ah202; assert_in_epsilon(23.710797016639333, worksheet.output_ah202, 0.001); end
  def test_output_ai202; assert_in_epsilon(21.190279277203537, worksheet.output_ai202, 0.001); end
  def test_output_aj202; assert_in_epsilon(18.736029812595145, worksheet.output_aj202, 0.001); end
  def test_output_am202; assert_in_delta(-0.018611156491409098, worksheet.output_am202, 0.001); end
  def test_output_an202; assert_in_delta(-0.5283230393153624, worksheet.output_an202, 0.001); end
  def test_output_ak202; assert_in_epsilon(16.357756996543237, worksheet.output_ak202, 0.001); end
  def test_output_ao202; assert_equal("", worksheet.output_ao202); end
  def test_output_c203; assert_equal("XII.c", worksheet.output_c203); end
  def test_output_d203; assert_equal("V.04", worksheet.output_d203); end
  def test_output_e203; assert_equal("Liquid hydrocarbons / International aviation", worksheet.output_e203); end
  def test_output_f203; assert_equal("TWh/yr", worksheet.output_f203); end
  def test_output_g203; assert_equal("NIR", worksheet.output_g203); end
  def test_output_h203; assert_in_delta(0.04897084896840799, worksheet.output_h203, 0.001); end
  def test_output_m203; assert_in_delta(0.04363466575560185, worksheet.output_m203, 0.001); end
  def test_output_r203; assert_in_delta(0.04182748174958541, worksheet.output_r203, 0.001); end
  def test_output_w203; assert_in_delta(0.033969658316219994, worksheet.output_w203, 0.001); end
  def test_output_ab203; assert_in_delta(0.04027234856855431, worksheet.output_ab203, 0.001); end
  def test_output_ac203; assert_in_epsilon(16.785, worksheet.output_ac203, 0.001); end
  def test_output_ad203; assert_in_epsilon(16.059182402773875, worksheet.output_ad203, 0.001); end
  def test_output_ae203; assert_in_epsilon(15.364750637209537, worksheet.output_ae203, 0.001); end
  def test_output_af203; assert_in_epsilon(14.700347516001434, worksheet.output_af203, 0.001); end
  def test_output_ag203; assert_in_epsilon(14.064674539388196, worksheet.output_ag203, 0.001); end
  def test_output_ah203; assert_in_epsilon(13.456489357383656, worksheet.output_ah203, 0.001); end
  def test_output_ai203; assert_in_epsilon(12.874603341746175, worksheet.output_ai203, 0.001); end
  def test_output_aj203; assert_in_epsilon(12.317879262940952, worksheet.output_aj203, 0.001); end
  def test_output_am203; assert_in_delta(-0.008801999999999977, worksheet.output_am203, 0.001); end
  def test_output_an203; assert_in_delta(-0.2978713692251873, worksheet.output_an203, 0.001); end
  def test_output_ak203; assert_in_epsilon(11.785229067555232, worksheet.output_ak203, 0.001); end
  def test_output_ao203; assert_in_epsilon(239.65805097963695, worksheet.output_ao203, 0.001); end
  def test_output_c204; assert_equal("XII.d", worksheet.output_c204); end
  def test_output_d204; assert_equal("V.04", worksheet.output_d204); end
  def test_output_e204; assert_equal("Liquid hydrocarbons / Domestic aviation [UNUSED - see XII.a]", worksheet.output_e204); end
  def test_output_f204; assert_equal("TWh/yr", worksheet.output_f204); end
  def test_output_g204; assert_equal("NIR", worksheet.output_g204); end
  def test_output_h204; assert_in_delta(0.00019822267564840673, worksheet.output_h204, 0.001); end
  def test_output_m204; assert_in_delta(0.00016885733041112003, worksheet.output_m204, 0.001); end
  def test_output_r204; assert_in_delta(9.599764530042064e-05, worksheet.output_r204, 0.001); end
  def test_output_w204; assert_in_delta(8.332281211333842e-05, worksheet.output_w204, 0.001); end
  def test_output_ab204; assert_in_delta(9.821877600125116e-05, worksheet.output_ab204, 0.001); end
  def test_output_ac204; assert_in_delta(0, (worksheet.output_ac204||0), 0.001); end
  def test_output_ad204; assert_in_delta(0, (worksheet.output_ad204||0), 0.001); end
  def test_output_ae204; assert_in_delta(0, (worksheet.output_ae204||0), 0.001); end
  def test_output_af204; assert_in_delta(0, (worksheet.output_af204||0), 0.001); end
  def test_output_ag204; assert_in_delta(0, (worksheet.output_ag204||0), 0.001); end
  def test_output_ah204; assert_in_delta(0, (worksheet.output_ah204||0), 0.001); end
  def test_output_ai204; assert_in_delta(0, (worksheet.output_ai204||0), 0.001); end
  def test_output_aj204; assert_in_delta(0, (worksheet.output_aj204||0), 0.001); end
  def test_output_ak204; assert_in_delta(0, (worksheet.output_ak204||0), 0.001); end
  def test_output_am204; assert_equal("", worksheet.output_am204); end
  def test_output_an204; assert_equal("", worksheet.output_an204); end
  def test_output_ao204; assert_in_delta(-1, worksheet.output_ao204, 0.001); end
  def test_output_c205; assert_equal("XII.e", worksheet.output_c205); end
  def test_output_d205; assert_equal("V.04", worksheet.output_d205); end
  def test_output_e205; assert_equal("Liquid hydrocarbons / International shipping [UNUSED]", worksheet.output_e205); end
  def test_output_f205; assert_equal("TWh/yr", worksheet.output_f205); end
  def test_output_g205; assert_equal("NIR", worksheet.output_g205); end
  def test_output_h205; assert_in_epsilon(1.46355654342888, worksheet.output_h205, 0.001); end
  def test_output_m205; assert_in_epsilon(1.4822031244787972, worksheet.output_m205, 0.001); end
  def test_output_r205; assert_in_epsilon(1.7934453107431383, worksheet.output_r205, 0.001); end
  def test_output_w205; assert_in_epsilon(1.9689245884651752, worksheet.output_w205, 0.001); end
  def test_output_ab205; assert_in_epsilon(1.7434372672705813, worksheet.output_ab205, 0.001); end
  def test_output_ac205; assert_in_delta(0, (worksheet.output_ac205||0), 0.001); end
  def test_output_ad205; assert_in_delta(0, (worksheet.output_ad205||0), 0.001); end
  def test_output_ae205; assert_in_delta(0, (worksheet.output_ae205||0), 0.001); end
  def test_output_af205; assert_in_delta(0, (worksheet.output_af205||0), 0.001); end
  def test_output_ag205; assert_in_delta(0, (worksheet.output_ag205||0), 0.001); end
  def test_output_ah205; assert_in_delta(0, (worksheet.output_ah205||0), 0.001); end
  def test_output_ai205; assert_in_delta(0, (worksheet.output_ai205||0), 0.001); end
  def test_output_aj205; assert_in_delta(0, (worksheet.output_aj205||0), 0.001); end
  def test_output_am205; assert_equal("", worksheet.output_am205); end
  def test_output_an205; assert_equal("", worksheet.output_an205); end
  def test_output_ak205; assert_in_delta(0, (worksheet.output_ak205||0), 0.001); end
  def test_output_ao205; assert_in_delta(-1, worksheet.output_ao205, 0.001); end
  def test_output_c206; assert_equal("XII.f", worksheet.output_c206); end
  def test_output_d206; assert_equal("V.04", worksheet.output_d206); end
  def test_output_e206; assert_equal("Liquid hydrocarbons / National navigation [UNUSED - see XII.a]", worksheet.output_e206); end
  def test_output_f206; assert_equal("TWh/yr", worksheet.output_f206); end
  def test_output_g206; assert_equal("NIR", worksheet.output_g206); end
  def test_output_h206; assert_in_delta(0.045451997884405966, worksheet.output_h206, 0.001); end
  def test_output_m206; assert_in_delta(0.047880372786496615, worksheet.output_m206, 0.001); end
  def test_output_r206; assert_in_delta(0.05661766881251676, worksheet.output_r206, 0.001); end
  def test_output_w206; assert_in_delta(0.04362834192871655, worksheet.output_w206, 0.001); end
  def test_output_ab206; assert_in_delta(0.04079216546155834, worksheet.output_ab206, 0.001); end
  def test_output_ac206; assert_in_delta(0, (worksheet.output_ac206||0), 0.001); end
  def test_output_ad206; assert_in_delta(0, (worksheet.output_ad206||0), 0.001); end
  def test_output_ae206; assert_in_delta(0, (worksheet.output_ae206||0), 0.001); end
  def test_output_af206; assert_in_delta(0, (worksheet.output_af206||0), 0.001); end
  def test_output_ag206; assert_in_delta(0, (worksheet.output_ag206||0), 0.001); end
  def test_output_ah206; assert_in_delta(0, (worksheet.output_ah206||0), 0.001); end
  def test_output_ai206; assert_in_delta(0, (worksheet.output_ai206||0), 0.001); end
  def test_output_aj206; assert_in_delta(0, (worksheet.output_aj206||0), 0.001); end
  def test_output_ak206; assert_in_delta(0, (worksheet.output_ak206||0), 0.001); end
  def test_output_am206; assert_equal("", worksheet.output_am206); end
  def test_output_an206; assert_equal("", worksheet.output_an206); end
  def test_output_ao206; assert_in_delta(-1, worksheet.output_ao206, 0.001); end
  def test_output_c207; assert_equal("VIII.a", worksheet.output_c207); end
  def test_output_d207; assert_equal("V.04", worksheet.output_d207); end
  def test_output_e207; assert_equal("Liquid hydrocarbons / H2 Production for Transport", worksheet.output_e207); end
  def test_output_f207; assert_equal("TWh/yr", worksheet.output_f207); end
  def test_output_h207; assert_in_delta(0, (worksheet.output_h207||0), 0.001); end
  def test_output_m207; assert_in_delta(0, (worksheet.output_m207||0), 0.001); end
  def test_output_r207; assert_in_delta(0, (worksheet.output_r207||0), 0.001); end
  def test_output_w207; assert_in_delta(0, (worksheet.output_w207||0), 0.001); end
  def test_output_ab207; assert_in_delta(0, (worksheet.output_ab207||0), 0.001); end
  def test_output_ac207; assert_in_delta(0, (worksheet.output_ac207||0), 0.001); end
  def test_output_ad207; assert_in_delta(0, (worksheet.output_ad207||0), 0.001); end
  def test_output_ae207; assert_in_delta(0, (worksheet.output_ae207||0), 0.001); end
  def test_output_af207; assert_in_delta(0, (worksheet.output_af207||0), 0.001); end
  def test_output_ag207; assert_in_delta(0, (worksheet.output_ag207||0), 0.001); end
  def test_output_ah207; assert_in_delta(0, (worksheet.output_ah207||0), 0.001); end
  def test_output_ai207; assert_in_delta(0, (worksheet.output_ai207||0), 0.001); end
  def test_output_aj207; assert_in_delta(0, (worksheet.output_aj207||0), 0.001); end
  def test_output_ak207; assert_in_delta(0, (worksheet.output_ak207||0), 0.001); end
  def test_output_am207; assert_equal("", worksheet.output_am207); end
  def test_output_an207; assert_equal("", worksheet.output_an207); end
  def test_output_ao207; assert_equal("", worksheet.output_ao207); end
  def test_output_c208; assert_equal("XII", worksheet.output_c208); end
  def test_output_d208; assert_equal("V.04", worksheet.output_d208); end
  def test_output_e208; assert_equal("Liquid hydrocarbons / Transport", worksheet.output_e208); end
  def test_output_f208; assert_equal("TWh/yr", worksheet.output_f208); end
  def test_output_g208; assert_equal("NIR", worksheet.output_g208); end
  def test_output_h208; assert_in_epsilon(77.6523200292871, worksheet.output_h208, 0.001); end
  def test_output_m208; assert_in_epsilon(85.05389216397828, worksheet.output_m208, 0.001); end
  def test_output_r208; assert_in_epsilon(92.82829029427467, worksheet.output_r208, 0.001); end
  def test_output_w208; assert_in_epsilon(98.5015550185784, worksheet.output_w208, 0.001); end
  def test_output_ab208; assert_in_epsilon(95.67481878878019, worksheet.output_ab208, 0.001); end
  def test_output_am208; assert_in_delta(-0.02796549064985787, worksheet.output_am208, 0.001); end
  def test_output_an208; assert_in_delta(-0.6784360578717616, worksheet.output_an208, 0.001); end
  def test_output_ak208; assert_in_epsilon(36.750308996068114, worksheet.output_ak208, 0.001); end
  def test_output_ao208; assert_in_delta(-0.5267326335876702, worksheet.output_ao208, 0.001); end
  def test_output_c209; assert_equal("XI.a", worksheet.output_c209); end
  def test_output_d209; assert_equal("V.03", worksheet.output_d209); end
  def test_output_e209; assert_equal("Solid hydrocarbons / Steel Industry", worksheet.output_e209); end
  def test_output_f209; assert_equal("TWh/yr", worksheet.output_f209); end
  def test_output_g209; assert_equal("NIR", worksheet.output_g209); end
  def test_output_h209; assert_in_epsilon(49.598996927580004, worksheet.output_h209, 0.001); end
  def test_output_m209; assert_in_epsilon(47.47824117438111, worksheet.output_m209, 0.001); end
  def test_output_r209; assert_in_epsilon(45.53663005277778, worksheet.output_r209, 0.001); end
  def test_output_w209; assert_in_epsilon(39.978313344444445, worksheet.output_w209, 0.001); end
  def test_output_ab209; assert_in_epsilon(25.32300002102325, worksheet.output_ab209, 0.001); end
  def test_output_ad209; assert_in_epsilon(20.32093870112195, worksheet.output_ad209, 0.001); end
  def test_output_ae209; assert_in_epsilon(19.592080991690278, worksheet.output_ae209, 0.001); end
  def test_output_af209; assert_in_epsilon(18.88040775340925, worksheet.output_af209, 0.001); end
  def test_output_ag209; assert_in_epsilon(9.459640507897898, worksheet.output_ag209, 0.001); end
  def test_output_ah209; assert_in_epsilon(9.111045557744983, worksheet.output_ah209, 0.001); end
  def test_output_ai209; assert_in_epsilon(8.770864403939603, worksheet.output_ai209, 0.001); end
  def test_output_aj209; assert_in_epsilon(8.438973576079048, worksheet.output_aj209, 0.001); end
  def test_output_am209; assert_in_delta(-0.026450946833849298, worksheet.output_am209, 0.001); end
  def test_output_an209; assert_in_delta(-0.6577735680108979, worksheet.output_an209, 0.001); end
  def test_output_ak209; assert_in_epsilon(8.62859124805842, worksheet.output_ak209, 0.001); end
  def test_output_ao209; assert_in_delta(-0.8260329485965792, worksheet.output_ao209, 0.001); end
  def test_output_c210; assert_equal("XI.b", worksheet.output_c210); end
  def test_output_d210; assert_equal("V.03", worksheet.output_d210); end
  def test_output_e210; assert_equal("Solid hydrocarbons / Cement Industry", worksheet.output_e210); end
  def test_output_f210; assert_equal("TWh/yr", worksheet.output_f210); end
  def test_output_g210; assert_equal("Wallonia", worksheet.output_g210); end
  def test_output_h210; assert_in_epsilon(2.9910763386102457, worksheet.output_h210, 0.001); end
  def test_output_m210; assert_in_epsilon(3.15483230771447, worksheet.output_m210, 0.001); end
  def test_output_r210; assert_in_epsilon(3.2718012631200932, worksheet.output_r210, 0.001); end
  def test_output_w210; assert_in_epsilon(3.0785461794612274, worksheet.output_w210, 0.001); end
  def test_output_ab210; assert_in_epsilon(2.7582265202523124, worksheet.output_ab210, 0.001); end
  def test_output_ad210; assert_in_epsilon(4.278253529094318, worksheet.output_ad210, 0.001); end
  def test_output_ae210; assert_in_epsilon(3.8533796796433446, worksheet.output_ae210, 0.001); end
  def test_output_af210; assert_in_epsilon(3.5374043709922063, worksheet.output_af210, 0.001); end
  def test_output_ag210; assert_in_epsilon(3.303322294907978, worksheet.output_ag210, 0.001); end
  def test_output_ah210; assert_in_epsilon(3.1425430618995147, worksheet.output_ah210, 0.001); end
  def test_output_ai210; assert_in_epsilon(2.952344084484681, worksheet.output_ai210, 0.001); end
  def test_output_aj210; assert_in_epsilon(2.7310361643728527, worksheet.output_aj210, 0.001); end
  def test_output_am210; assert_in_delta(-0.018830105198969327, worksheet.output_am210, 0.001); end
  def test_output_an210; assert_in_delta(-0.53251404036877, worksheet.output_an210, 0.001); end
  def test_output_ak210; assert_in_epsilon(2.4396222289315372, worksheet.output_ak210, 0.001); end
  def test_output_ao210; assert_in_delta(-0.1843664444669214, worksheet.output_ao210, 0.001); end
  def test_output_c211; assert_equal("XI.c", worksheet.output_c211); end
  def test_output_d211; assert_equal("V.03", worksheet.output_d211); end
  def test_output_e211; assert_equal("Solid hydrocarbons / Lime Industry", worksheet.output_e211); end
  def test_output_f211; assert_equal("TWh/yr", worksheet.output_f211); end
  def test_output_g211; assert_equal("Wallonia", worksheet.output_g211); end
  def test_output_h211; assert_in_delta(0.8431569802063185, worksheet.output_h211, 0.001); end
  def test_output_m211; assert_in_delta(0.8893182856261694, worksheet.output_m211, 0.001); end
  def test_output_r211; assert_in_delta(0.9222907611008397, worksheet.output_r211, 0.001); end
  def test_output_w211; assert_in_delta(0.867813925908115, worksheet.output_w211, 0.001); end
  def test_output_ab211; assert_in_delta(0.7775187525375837, worksheet.output_ab211, 0.001); end
  def test_output_ad211; assert_in_epsilon(2.042236942570486, worksheet.output_ad211, 0.001); end
  def test_output_ae211; assert_in_epsilon(1.6863848629063747, worksheet.output_ae211, 0.001); end
  def test_output_af211; assert_in_epsilon(1.6034716459710852, worksheet.output_af211, 0.001); end
  def test_output_ag211; assert_in_epsilon(1.549756888774575, worksheet.output_ag211, 0.001); end
  def test_output_ah211; assert_in_epsilon(1.4980668130130212, worksheet.output_ah211, 0.001); end
  def test_output_ai211; assert_in_epsilon(1.4481862614402718, worksheet.output_ai211, 0.001); end
  def test_output_aj211; assert_in_epsilon(1.3998911826200233, worksheet.output_aj211, 0.001); end
  def test_output_am211; assert_in_delta(-0.01474590189527214, worksheet.output_am211, 0.001); end
  def test_output_an211; assert_in_delta(-0.44801153980003305, worksheet.output_an211, 0.001); end
  def test_output_ak211; assert_in_epsilon(1.3456073611731854, worksheet.output_ak211, 0.001); end
  def test_output_ao211; assert_in_delta(0.5959155800903391, worksheet.output_ao211, 0.001); end
  def test_output_c212; assert_equal("XI.d", worksheet.output_c212); end
  def test_output_d212; assert_equal("V.03", worksheet.output_d212); end
  def test_output_e212; assert_equal("Solid hydrocarbons / Glass Industry", worksheet.output_e212); end
  def test_output_f212; assert_equal("TWh/yr", worksheet.output_f212); end
  def test_output_g212; assert_equal("Wallonia", worksheet.output_g212); end
  def test_output_h212; assert_in_epsilon(4.684092681239687, worksheet.output_h212, 0.001); end
  def test_output_m212; assert_in_epsilon(3.9457478221960205, worksheet.output_m212, 0.001); end
  def test_output_r212; assert_in_epsilon(4.179959715528829, worksheet.output_r212, 0.001); end
  def test_output_w212; assert_in_epsilon(3.98041346388646, worksheet.output_w212, 0.001); end
  def test_output_ab212; assert_in_epsilon(4.641852511987877, worksheet.output_ab212, 0.001); end
  def test_output_ad212; assert_in_delta(0.029802285140606184, worksheet.output_ad212, 0.001); end
  def test_output_ae212; assert_in_delta(0.05817320632535617, worksheet.output_ae212, 0.001); end
  def test_output_af212; assert_in_delta(0.0908490027604662, worksheet.output_af212, 0.001); end
  def test_output_ag212; assert_in_delta(0.1261088429295707, worksheet.output_ag212, 0.001); end
  def test_output_ah212; assert_in_delta(0.16330844605147812, worksheet.output_ah212, 0.001); end
  def test_output_ai212; assert_in_delta(0.20299460436328198, worksheet.output_ai212, 0.001); end
  def test_output_aj212; assert_in_delta(0.24526913977286313, worksheet.output_aj212, 0.001); end
  def test_output_am212; assert_equal("", worksheet.output_am212); end
  def test_output_an212; assert_equal("", worksheet.output_an212); end
  def test_output_ak212; assert_in_delta(0.29022785521730365, worksheet.output_ak212, 0.001); end
  def test_output_ao212; assert_in_delta(-0.9380396855980885, worksheet.output_ao212, 0.001); end
  def test_output_c213; assert_equal("XI.e", worksheet.output_c213); end
  def test_output_d213; assert_equal("V.03", worksheet.output_d213); end
  def test_output_e213; assert_equal("Solid hydrocarbons / Chemicals Industry", worksheet.output_e213); end
  def test_output_f213; assert_equal("TWh/yr", worksheet.output_f213); end
  def test_output_g213; assert_equal("NIR", worksheet.output_g213); end
  def test_output_h213; assert_in_epsilon(1.296395466339286, worksheet.output_h213, 0.001); end
  def test_output_m213; assert_in_delta(0.13911442520849251, worksheet.output_m213, 0.001); end
  def test_output_r213; assert_in_delta(0.008139444444444444, worksheet.output_r213, 0.001); end
  def test_output_w213; assert_in_delta(0.0724325, worksheet.output_w213, 0.001); end
  def test_output_ab213; assert_in_delta(0.22159105555555556, worksheet.output_ab213, 0.001); end
  def test_output_ad213; assert_in_delta(0.22617598571276065, worksheet.output_ad213, 0.001); end
  def test_output_ae213; assert_in_delta(0.2117905001079863, worksheet.output_ae213, 0.001); end
  def test_output_af213; assert_in_delta(0.19785691457456614, worksheet.output_af213, 0.001); end
  def test_output_ag213; assert_in_delta(0.18437522911250018, worksheet.output_ag213, 0.001); end
  def test_output_ah213; assert_in_delta(0.17134544372178834, worksheet.output_ah213, 0.001); end
  def test_output_ai213; assert_in_delta(0.15876755840243073, worksheet.output_ai213, 0.001); end
  def test_output_aj213; assert_in_delta(0.14664157315442722, worksheet.output_aj213, 0.001); end
  def test_output_am213; assert_in_delta(-0.01432043304308106, worksheet.output_am213, 0.001); end
  def test_output_an213; assert_in_delta(-0.4383960540364147, worksheet.output_an213, 0.001); end
  def test_output_ak213; assert_in_delta(0.1349674879777779, worksheet.output_ak213, 0.001); end
  def test_output_ao213; assert_in_delta(-0.8958901882317638, worksheet.output_ao213, 0.001); end
  def test_output_c214; assert_equal("XI.f", worksheet.output_c214); end
  def test_output_d214; assert_equal("V.03", worksheet.output_d214); end
  def test_output_e214; assert_equal("Solid hydrocarbons / Pulp & Paper Industry", worksheet.output_e214); end
  def test_output_f214; assert_equal("TWh/yr", worksheet.output_f214); end
  def test_output_g214; assert_equal("NIR", worksheet.output_g214); end
  def test_output_h214; assert_in_epsilon(2.0576527777777778, worksheet.output_h214, 0.001); end
  def test_output_m214; assert_in_epsilon(1.5990041666666666, worksheet.output_m214, 0.001); end
  def test_output_r214; assert_in_epsilon(1.944717777777778, worksheet.output_r214, 0.001); end
  def test_output_w214; assert_in_epsilon(3.444607277777778, worksheet.output_w214, 0.001); end
  def test_output_ab214; assert_in_epsilon(4.147410000000001, worksheet.output_ab214, 0.001); end
  def test_output_ad214; assert_in_epsilon(8.081959114795309, worksheet.output_ad214, 0.001); end
  def test_output_ae214; assert_in_epsilon(7.8748667587375, worksheet.output_ae214, 0.001); end
  def test_output_af214; assert_in_epsilon(7.658538424999998, worksheet.output_af214, 0.001); end
  def test_output_ag214; assert_in_epsilon(7.451550899999998, worksheet.output_ag214, 0.001); end
  def test_output_ah214; assert_in_epsilon(7.2445633749999985, worksheet.output_ah214, 0.001); end
  def test_output_ai214; assert_in_epsilon(7.03757585, worksheet.output_ai214, 0.001); end
  def test_output_aj214; assert_in_epsilon(6.830588324999999, worksheet.output_aj214, 0.001); end
  def test_output_am214; assert_in_delta(-0.005563057351029577, worksheet.output_am214, 0.001); end
  def test_output_an214; assert_in_delta(-0.19999999999999984, worksheet.output_an214, 0.001); end
  def test_output_ak214; assert_in_epsilon(6.623600799999999, worksheet.output_ak214, 0.001); end
  def test_output_ao214; assert_in_epsilon(2.219008022895559, worksheet.output_ao214, 0.001); end
  def test_output_c215; assert_equal("XI.g", worksheet.output_c215); end
  def test_output_d215; assert_equal("V.03", worksheet.output_d215); end
  def test_output_e215; assert_equal("Solid hydrocarbons / Oil & Gas Industry", worksheet.output_e215); end
  def test_output_f215; assert_equal("TWh/yr", worksheet.output_f215); end
  def test_output_h215; assert_in_delta(0, (worksheet.output_h215||0), 0.001); end
  def test_output_m215; assert_in_delta(0, (worksheet.output_m215||0), 0.001); end
  def test_output_r215; assert_in_delta(0, (worksheet.output_r215||0), 0.001); end
  def test_output_w215; assert_in_delta(0, (worksheet.output_w215||0), 0.001); end
  def test_output_ab215; assert_in_delta(0, (worksheet.output_ab215||0), 0.001); end
  def test_output_ad215; assert_in_epsilon(3.315321159886577, worksheet.output_ad215, 0.001); end
  def test_output_ae215; assert_in_epsilon(2.8539618843605896, worksheet.output_ae215, 0.001); end
  def test_output_af215; assert_in_epsilon(2.4197026130653745, worksheet.output_af215, 0.001); end
  def test_output_ag215; assert_in_epsilon(1.68717528102571, worksheet.output_ag215, 0.001); end
  def test_output_ah215; assert_in_epsilon(1.3758459858740066, worksheet.output_ah215, 0.001); end
  def test_output_ai215; assert_in_epsilon(1.1222092577213034, worksheet.output_ai215, 0.001); end
  def test_output_aj215; assert_in_delta(0.8967056804062479, worksheet.output_aj215, 0.001); end
  def test_output_am215; assert_in_delta(-0.038979751976879085, worksheet.output_am215, 0.001); end
  def test_output_an215; assert_in_delta(-0.796154315440758, worksheet.output_an215, 0.001); end
  def test_output_ak215; assert_in_delta(0.6954193907489853, worksheet.output_ak215, 0.001); end
  def test_output_ao215; assert_equal("", worksheet.output_ao215); end
  def test_output_c216; assert_equal("XI.h", worksheet.output_c216); end
  def test_output_d216; assert_equal("V.03", worksheet.output_d216); end
  def test_output_e216; assert_equal("Solid hydrocarbons / Food, drinks and tobacco Industry", worksheet.output_e216); end
  def test_output_f216; assert_equal("TWh/yr", worksheet.output_f216); end
  def test_output_g216; assert_equal("NIR", worksheet.output_g216); end
  def test_output_h216; assert_in_epsilon(1.9408306760664782, worksheet.output_h216, 0.001); end
  def test_output_m216; assert_in_delta(0.6602502324534267, worksheet.output_m216, 0.001); end
  def test_output_r216; assert_in_delta(0.4039145833333333, worksheet.output_r216, 0.001); end
  def test_output_w216; assert_in_delta(0.6474168965, worksheet.output_w216, 0.001); end
  def test_output_ab216; assert_in_delta(0.7326633950000001, worksheet.output_ab216, 0.001); end
  def test_output_ad216; assert_in_epsilon(1.5066533015393837, worksheet.output_ad216, 0.001); end
  def test_output_ae216; assert_in_epsilon(1.8407070430310943, worksheet.output_ae216, 0.001); end
  def test_output_af216; assert_in_epsilon(2.162047531237139, worksheet.output_af216, 0.001); end
  def test_output_ag216; assert_in_epsilon(2.496859615544551, worksheet.output_ag216, 0.001); end
  def test_output_ah216; assert_in_epsilon(2.790247445588617, worksheet.output_ah216, 0.001); end
  def test_output_ai216; assert_in_epsilon(3.0306340100938387, worksheet.output_ai216, 0.001); end
  def test_output_aj216; assert_in_epsilon(3.2211092114556052, worksheet.output_aj216, 0.001); end
  def test_output_am216; assert_in_delta(0.026822022550013536, worksheet.output_am216, 0.001); end
  def test_output_an216; assert_in_epsilon(1.8827500050075239, worksheet.output_an216, 0.001); end
  def test_output_ak216; assert_in_epsilon(3.3648207573449125, worksheet.output_ak216, 0.001); end
  def test_output_ao216; assert_in_delta(0.7337013469740001, worksheet.output_ao216, 0.001); end
  def test_output_c217; assert_equal("XI.i", worksheet.output_c217); end
  def test_output_d217; assert_equal("V.03", worksheet.output_d217); end
  def test_output_e217; assert_equal("Solid hydrocarbons / Machines Industry", worksheet.output_e217); end
  def test_output_f217; assert_equal("TWh/yr", worksheet.output_f217); end
  def test_output_h217; assert_in_delta(0, (worksheet.output_h217||0), 0.001); end
  def test_output_m217; assert_in_delta(0, (worksheet.output_m217||0), 0.001); end
  def test_output_r217; assert_in_delta(0, (worksheet.output_r217||0), 0.001); end
  def test_output_w217; assert_in_delta(0, (worksheet.output_w217||0), 0.001); end
  def test_output_ab217; assert_in_delta(0, (worksheet.output_ab217||0), 0.001); end
  def test_output_ad217; assert_in_delta(0, (worksheet.output_ad217||0), 0.001); end
  def test_output_ae217; assert_in_delta(0, (worksheet.output_ae217||0), 0.001); end
  def test_output_af217; assert_in_delta(0, (worksheet.output_af217||0), 0.001); end
  def test_output_ag217; assert_in_delta(0, (worksheet.output_ag217||0), 0.001); end
  def test_output_ah217; assert_in_delta(0, (worksheet.output_ah217||0), 0.001); end
  def test_output_ai217; assert_in_delta(0, (worksheet.output_ai217||0), 0.001); end
  def test_output_aj217; assert_in_delta(0, (worksheet.output_aj217||0), 0.001); end
  def test_output_am217; assert_equal("", worksheet.output_am217); end
  def test_output_an217; assert_equal("", worksheet.output_an217); end
  def test_output_ak217; assert_in_delta(0, (worksheet.output_ak217||0), 0.001); end
  def test_output_ao217; assert_equal("", worksheet.output_ao217); end
  def test_output_c218; assert_equal("XI.j", worksheet.output_c218); end
  def test_output_d218; assert_equal("V.03", worksheet.output_d218); end
  def test_output_e218; assert_equal("Solid hydrocarbons / Non-Ferrous metals Industry", worksheet.output_e218); end
  def test_output_f218; assert_equal("TWh/yr", worksheet.output_f218); end
  def test_output_g218; assert_equal("NIR", worksheet.output_g218); end
  def test_output_h218; assert_in_delta(0.38252777777777774, worksheet.output_h218, 0.001); end
  def test_output_m218; assert_in_delta(0.46126338888888885, worksheet.output_m218, 0.001); end
  def test_output_r218; assert_in_delta(0.18375983333333332, worksheet.output_r218, 0.001); end
  def test_output_w218; assert_in_delta(0.18717002777777778, worksheet.output_w218, 0.001); end
  def test_output_ab218; assert_in_delta(0.2206734520277778, worksheet.output_ab218, 0.001); end
  def test_output_ad218; assert_in_delta(0.3323124746406838, worksheet.output_ad218, 0.001); end
  def test_output_ae218; assert_in_delta(0.4241211020488897, worksheet.output_ae218, 0.001); end
  def test_output_af218; assert_in_delta(0.5161131376863181, worksheet.output_af218, 0.001); end
  def test_output_ag218; assert_in_delta(0.5972901430117542, worksheet.output_ag218, 0.001); end
  def test_output_ah218; assert_in_delta(0.6731823700568188, worksheet.output_ah218, 0.001); end
  def test_output_ai218; assert_in_delta(0.743789818821512, worksheet.output_ai218, 0.001); end
  def test_output_aj218; assert_in_delta(0.8091124893058335, worksheet.output_aj218, 0.001); end
  def test_output_am218; assert_in_delta(0.032601257777716164, worksheet.output_am218, 0.001); end
  def test_output_an218; assert_in_epsilon(2.608327834358202, worksheet.output_an218, 0.001); end
  def test_output_ak218; assert_in_delta(0.8691503815097835, worksheet.output_ak218, 0.001); end
  def test_output_ao218; assert_in_epsilon(1.2721235737674976, worksheet.output_ao218, 0.001); end
  def test_output_c219; assert_equal("XI.k", worksheet.output_c219); end
  def test_output_d219; assert_equal("V.03", worksheet.output_d219); end
  def test_output_e219; assert_equal("Solid hydrocarbons / Construction industry", worksheet.output_e219); end
  def test_output_f219; assert_equal("TWh/yr", worksheet.output_f219); end
  def test_output_g219; assert_equal("IEA", worksheet.output_g219); end
  def test_output_h219; assert_in_delta(0.26657583333333335, worksheet.output_h219, 0.001); end
  def test_output_m219; assert_in_delta(0.2342636111111111, worksheet.output_m219, 0.001); end
  def test_output_r219; assert_in_delta(0.12117083333333332, worksheet.output_r219, 0.001); end
  def test_output_w219; assert_in_delta(0.28646583333333336, worksheet.output_w219, 0.001); end
  def test_output_ab219; assert_in_delta(0, (worksheet.output_ab219||0), 0.001); end
  def test_output_ad219; assert_in_delta(0.14888876059010434, worksheet.output_ad219, 0.001); end
  def test_output_ae219; assert_in_delta(0.33066005879032256, worksheet.output_ae219, 0.001); end
  def test_output_af219; assert_in_delta(0.5743381451128754, worksheet.output_af219, 0.001); end
  def test_output_ag219; assert_in_delta(0.745087323389676, worksheet.output_ag219, 0.001); end
  def test_output_ah219; assert_in_delta(0.9054880666193982, worksheet.output_ah219, 0.001); end
  def test_output_ai219; assert_in_epsilon(1.055540374802041, worksheet.output_ai219, 0.001); end
  def test_output_aj219; assert_in_epsilon(1.1952442479376053, worksheet.output_aj219, 0.001); end
  def test_output_am219; assert_in_delta(0.12114195695800944, worksheet.output_am219, 0.001); end
  def test_output_an219; assert_in_epsilon(95.922414856046, worksheet.output_an219, 0.001); end
  def test_output_ak219; assert_in_epsilon(1.3245996860260907, worksheet.output_ak219, 0.001); end
  def test_output_ao219; assert_in_epsilon(3.9689413682514, worksheet.output_ao219, 0.001); end
  def test_output_c220; assert_equal("XI.l", worksheet.output_c220); end
  def test_output_d220; assert_equal("V.03", worksheet.output_d220); end
  def test_output_e220; assert_equal("Solid hydrocarbons / Other Industry", worksheet.output_e220); end
  def test_output_f220; assert_equal("TWh/yr", worksheet.output_f220); end
  def test_output_g220; assert_equal("NIR", worksheet.output_g220); end
  def test_output_h220; assert_in_epsilon(-1.5459195666666679, worksheet.output_h220, 0.001); end
  def test_output_m220; assert_in_epsilon(-3.6201557730366596, worksheet.output_m220, 0.001); end
  def test_output_r220; assert_in_epsilon(-3.2848503114164567, worksheet.output_r220, 0.001); end
  def test_output_w220; assert_in_epsilon(-5.075268647033581, worksheet.output_w220, 0.001); end
  def test_output_ab220; assert_in_epsilon(-3.286153631777773, worksheet.output_ab220, 0.001); end
  def test_output_ad220; assert_in_delta(0, (worksheet.output_ad220||0), 0.001); end
  def test_output_ae220; assert_in_delta(0, (worksheet.output_ae220||0), 0.001); end
  def test_output_af220; assert_in_delta(0, (worksheet.output_af220||0), 0.001); end
  def test_output_ag220; assert_in_delta(0, (worksheet.output_ag220||0), 0.001); end
  def test_output_ah220; assert_in_delta(0, (worksheet.output_ah220||0), 0.001); end
  def test_output_ai220; assert_in_delta(0, (worksheet.output_ai220||0), 0.001); end
  def test_output_aj220; assert_in_delta(0, (worksheet.output_aj220||0), 0.001); end
  def test_output_am220; assert_equal("", worksheet.output_am220); end
  def test_output_an220; assert_equal("", worksheet.output_an220); end
  def test_output_ak220; assert_in_delta(0, (worksheet.output_ak220||0), 0.001); end
  def test_output_ao220; assert_in_delta(-1, worksheet.output_ao220, 0.001); end
  def test_output_c221; assert_equal("XI", worksheet.output_c221); end
  def test_output_d221; assert_equal("V.03", worksheet.output_d221); end
  def test_output_e221; assert_equal("Solid hydrocarbons / Industry", worksheet.output_e221); end
  def test_output_f221; assert_equal("TWh/yr", worksheet.output_f221); end
  def test_output_g221; assert_equal("NIR", worksheet.output_g221); end
  def test_output_h221; assert_in_epsilon(62.51885107670178, worksheet.output_h221, 0.001); end
  def test_output_m221; assert_in_epsilon(55.17362374002919, worksheet.output_m221, 0.001); end
  def test_output_r221; assert_in_epsilon(54.10578545333333, worksheet.output_r221, 0.001); end
  def test_output_w221; assert_in_epsilon(49.283033812606114, worksheet.output_w221, 0.001); end
  def test_output_ab221; assert_in_epsilon(40.01805445287667, worksheet.output_ab221, 0.001); end
  def test_output_ad221; assert_in_epsilon(40.28254225509218, worksheet.output_ad221, 0.001); end
  def test_output_ae221; assert_in_epsilon(38.72612608764173, worksheet.output_ae221, 0.001); end
  def test_output_af221; assert_in_epsilon(37.640729539809286, worksheet.output_af221, 0.001); end
  def test_output_ag221; assert_in_epsilon(27.60116702659421, worksheet.output_ag221, 0.001); end
  def test_output_ah221; assert_in_epsilon(27.075636565569624, worksheet.output_ah221, 0.001); end
  def test_output_ai221; assert_in_epsilon(26.52290622406896, worksheet.output_ai221, 0.001); end
  def test_output_aj221; assert_in_epsilon(25.914571590104504, worksheet.output_aj221, 0.001); end
  def test_output_am221; assert_in_delta(-0.014551356527446435, worksheet.output_am221, 0.001); end
  def test_output_an221; assert_in_delta(-0.4436349503389394, worksheet.output_an221, 0.001); end
  def test_output_ak221; assert_in_epsilon(25.716607196987994, worksheet.output_ak221, 0.001); end
  def test_output_ao221; assert_in_delta(-0.588658352575332, worksheet.output_ao221, 0.001); end
  def test_output_c222; assert_equal("XI.a", worksheet.output_c222); end
  def test_output_d222; assert_equal("V.04", worksheet.output_d222); end
  def test_output_e222; assert_equal("Liquid hydrocarbons / Steel Industry", worksheet.output_e222); end
  def test_output_f222; assert_equal("TWh/yr", worksheet.output_f222); end
  def test_output_g222; assert_equal("NIR", worksheet.output_g222); end
  def test_output_h222; assert_in_epsilon(3.1922768672222226, worksheet.output_h222, 0.001); end
  def test_output_m222; assert_in_epsilon(1.1462742906576278, worksheet.output_m222, 0.001); end
  def test_output_r222; assert_in_delta(0.5155159545621945, worksheet.output_r222, 0.001); end
  def test_output_w222; assert_in_delta(0.3813004655569972, worksheet.output_w222, 0.001); end
  def test_output_ab222; assert_in_delta(0.12431015555555557, worksheet.output_ab222, 0.001); end
  def test_output_am222; assert_in_delta(-0.0035674994408316785, worksheet.output_am222, 0.001); end
  def test_output_an222; assert_in_delta(-0.13320703523776944, worksheet.output_an222, 0.001); end
  def test_output_ak222; assert_in_epsilon(2.1390407420437216, worksheet.output_ak222, 0.001); end
  def test_output_ao222; assert_in_delta(-0.32993257445585544, worksheet.output_ao222, 0.001); end
  def test_output_c223; assert_equal("XI.b", worksheet.output_c223); end
  def test_output_d223; assert_equal("V.04", worksheet.output_d223); end
  def test_output_e223; assert_equal("Liquid hydrocarbons / Cement Industry", worksheet.output_e223); end
  def test_output_f223; assert_equal("TWh/yr", worksheet.output_f223); end
  def test_output_g223; assert_equal("Wallonia", worksheet.output_g223); end
  def test_output_h223; assert_in_epsilon(1.7814047526672008, worksheet.output_h223, 0.001); end
  def test_output_m223; assert_in_epsilon(1.8789334107874514, worksheet.output_m223, 0.001); end
  def test_output_r223; assert_in_epsilon(1.948596979845976, worksheet.output_r223, 0.001); end
  def test_output_w223; assert_in_epsilon(1.8334994411897216, worksheet.output_w223, 0.001); end
  def test_output_ab223; assert_in_epsilon(1.6427256531985304, worksheet.output_ab223, 0.001); end
  def test_output_am223; assert_in_delta(-0.04675598557905769, worksheet.output_am223, 0.001); end
  def test_output_an223; assert_in_delta(-0.8527133182912379, worksheet.output_an223, 0.001); end
  def test_output_ak223; assert_in_delta(0.018278277200057383, worksheet.output_ak223, 0.001); end
  def test_output_ao223; assert_in_delta(-0.9897394024728573, worksheet.output_ao223, 0.001); end
  def test_output_c224; assert_equal("XI.c", worksheet.output_c224); end
  def test_output_d224; assert_equal("V.04", worksheet.output_d224); end
  def test_output_e224; assert_equal("Liquid hydrocarbons / Lime Industry", worksheet.output_e224); end
  def test_output_f224; assert_equal("TWh/yr", worksheet.output_f224); end
  def test_output_g224; assert_equal("Wallonia", worksheet.output_g224); end
  def test_output_h224; assert_in_delta(0.20314038155953873, worksheet.output_h224, 0.001); end
  def test_output_m224; assert_in_delta(0.2142619466018875, worksheet.output_m224, 0.001); end
  def test_output_r224; assert_in_delta(0.22220594920890857, worksheet.output_r224, 0.001); end
  def test_output_w224; assert_in_delta(0.2090809376784362, worksheet.output_w224, 0.001); end
  def test_output_ab224; assert_in_delta(0.18732627466540389, worksheet.output_ab224, 0.001); end
  def test_output_am224; assert_in_delta(-0.01217906806010094, worksheet.output_am224, 0.001); end
  def test_output_an224; assert_in_delta(-0.38746771360012244, worksheet.output_an224, 0.001); end
  def test_output_ak224; assert_in_delta(0.19206990878259625, worksheet.output_ak224, 0.001); end
  def test_output_ao224; assert_in_delta(-0.05449666231771755, worksheet.output_ao224, 0.001); end
  def test_output_c225; assert_equal("XI.d", worksheet.output_c225); end
  def test_output_d225; assert_equal("V.04", worksheet.output_d225); end
  def test_output_e225; assert_equal("Liquid hydrocarbons / Glass Industry", worksheet.output_e225); end
  def test_output_f225; assert_equal("TWh/yr", worksheet.output_f225); end
  def test_output_g225; assert_equal("Wallonia", worksheet.output_g225); end
  def test_output_h225; assert_in_epsilon(2.83363919008894, worksheet.output_h225, 0.001); end
  def test_output_m225; assert_in_epsilon(1.8782227390553214, worksheet.output_m225, 0.001); end
  def test_output_r225; assert_in_delta(0.9961011365136054, worksheet.output_r225, 0.001); end
  def test_output_w225; assert_in_epsilon(1.7823006682012323, worksheet.output_w225, 0.001); end
  def test_output_ab225; assert_in_epsilon(2.350856066987716, worksheet.output_ab225, 0.001); end
  def test_output_am225; assert_in_delta(-1, worksheet.output_am225, 0.001); end
  def test_output_an225; assert_in_delta(-1, worksheet.output_an225, 0.001); end
  def test_output_ak225; assert_in_delta(0, (worksheet.output_ak225||0), 0.001); end
  def test_output_ao225; assert_in_delta(-1, worksheet.output_ao225, 0.001); end
  def test_output_c226; assert_equal("XI.e", worksheet.output_c226); end
  def test_output_d226; assert_equal("V.04", worksheet.output_d226); end
  def test_output_e226; assert_equal("Liquid hydrocarbons / Chemicals Industry", worksheet.output_e226); end
  def test_output_f226; assert_equal("TWh/yr", worksheet.output_f226); end
  def test_output_g226; assert_equal("NIR", worksheet.output_g226); end
  def test_output_h226; assert_in_epsilon(6.613420307613639, worksheet.output_h226, 0.001); end
  def test_output_m226; assert_in_epsilon(6.168490409572389, worksheet.output_m226, 0.001); end
  def test_output_r226; assert_in_epsilon(2.895697584293611, worksheet.output_r226, 0.001); end
  def test_output_w226; assert_in_epsilon(2.642089019761208, worksheet.output_w226, 0.001); end
  def test_output_ab226; assert_in_epsilon(2.808808846461806, worksheet.output_ab226, 0.001); end
  def test_output_am226; assert_in_delta(-0.012259625337161184, worksheet.output_am226, 0.001); end
  def test_output_an226; assert_in_delta(-0.3894626316700669, worksheet.output_an226, 0.001); end
  def test_output_ak226; assert_in_epsilon(1.5647517392116872, worksheet.output_ak226, 0.001); end
  def test_output_ao226; assert_in_delta(-0.7633975059153157, worksheet.output_ao226, 0.001); end
  def test_output_c227; assert_equal("XI.f", worksheet.output_c227); end
  def test_output_d227; assert_equal("V.04", worksheet.output_d227); end
  def test_output_e227; assert_equal("Liquid hydrocarbons / Pulp & Paper Industry", worksheet.output_e227); end
  def test_output_f227; assert_equal("TWh/yr", worksheet.output_f227); end
  def test_output_g227; assert_equal("NIR", worksheet.output_g227); end
  def test_output_h227; assert_in_delta(0.8443403795514861, worksheet.output_h227, 0.001); end
  def test_output_m227; assert_in_epsilon(1.1426193136212166, worksheet.output_m227, 0.001); end
  def test_output_r227; assert_in_delta(0.8480627650835612, worksheet.output_r227, 0.001); end
  def test_output_w227; assert_in_delta(0.7000771591604944, worksheet.output_w227, 0.001); end
  def test_output_ab227; assert_in_delta(0.2913889610847611, worksheet.output_ab227, 0.001); end
  def test_output_am227; assert_in_delta(-1, worksheet.output_am227, 0.001); end
  def test_output_an227; assert_in_delta(-1, worksheet.output_an227, 0.001); end
  def test_output_ak227; assert_in_delta(0, (worksheet.output_ak227||0), 0.001); end
  def test_output_ao227; assert_in_delta(-1, worksheet.output_ao227, 0.001); end
  def test_output_c228; assert_equal("XI.g", worksheet.output_c228); end
  def test_output_d228; assert_equal("V.04", worksheet.output_d228); end
  def test_output_e228; assert_equal("Liquid hydrocarbons / Oil & Gas Industry", worksheet.output_e228); end
  def test_output_f228; assert_equal("TWh/yr", worksheet.output_f228); end
  def test_output_h228; assert_in_delta(0, (worksheet.output_h228||0), 0.001); end
  def test_output_m228; assert_in_delta(0, (worksheet.output_m228||0), 0.001); end
  def test_output_r228; assert_in_delta(0, (worksheet.output_r228||0), 0.001); end
  def test_output_w228; assert_in_delta(0, (worksheet.output_w228||0), 0.001); end
  def test_output_ab228; assert_in_delta(0, (worksheet.output_ab228||0), 0.001); end
  def test_output_ad228; assert_in_epsilon(1.1714241025226193, worksheet.output_ad228, 0.001); end
  def test_output_ae228; assert_in_delta(0.9411817455797337, worksheet.output_ae228, 0.001); end
  def test_output_af228; assert_in_delta(0.7409734326859465, worksheet.output_af228, 0.001); end
  def test_output_ag228; assert_in_delta(0.4769125388603996, worksheet.output_ag228, 0.001); end
  def test_output_ah228; assert_in_delta(0.35650021594361214, worksheet.output_ah228, 0.001); end
  def test_output_ai228; assert_in_delta(0.2643450230351593, worksheet.output_ai228, 0.001); end
  def test_output_aj228; assert_in_delta(0.1901033286801259, worksheet.output_aj228, 0.001); end
  def test_output_am228; assert_in_delta(-0.05548950462381075, worksheet.output_am228, 0.001); end
  def test_output_an228; assert_in_delta(-0.898077157720379, worksheet.output_an228, 0.001); end
  def test_output_ak228; assert_in_delta(0.13104910949668222, worksheet.output_ak228, 0.001); end
  def test_output_ao228; assert_equal("", worksheet.output_ao228); end
  def test_output_c229; assert_equal("XI.h", worksheet.output_c229); end
  def test_output_d229; assert_equal("V.04", worksheet.output_d229); end
  def test_output_e229; assert_equal("Liquid hydrocarbons / Food, drinks and tobacco Industry", worksheet.output_e229); end
  def test_output_f229; assert_equal("TWh/yr", worksheet.output_f229); end
  def test_output_g229; assert_equal("NIR", worksheet.output_g229); end
  def test_output_h229; assert_in_epsilon(6.074077199991556, worksheet.output_h229, 0.001); end
  def test_output_m229; assert_in_epsilon(6.623067358709973, worksheet.output_m229, 0.001); end
  def test_output_r229; assert_in_epsilon(3.283631471636917, worksheet.output_r229, 0.001); end
  def test_output_w229; assert_in_epsilon(2.586479777227808, worksheet.output_w229, 0.001); end
  def test_output_ab229; assert_in_delta(0.8235538153236583, worksheet.output_ab229, 0.001); end
  def test_output_am229; assert_in_delta(-1, worksheet.output_am229, 0.001); end
  def test_output_an229; assert_in_delta(-1, worksheet.output_an229, 0.001); end
  def test_output_ak229; assert_in_delta(0, (worksheet.output_ak229||0), 0.001); end
  def test_output_ao229; assert_in_delta(-1, worksheet.output_ao229, 0.001); end
  def test_output_c230; assert_equal("XI.i", worksheet.output_c230); end
  def test_output_d230; assert_equal("V.04", worksheet.output_d230); end
  def test_output_e230; assert_equal("Liquid hydrocarbons / Machines Industry", worksheet.output_e230); end
  def test_output_f230; assert_equal("TWh/yr", worksheet.output_f230); end
  def test_output_h230; assert_in_delta(0, (worksheet.output_h230||0), 0.001); end
  def test_output_m230; assert_in_delta(0, (worksheet.output_m230||0), 0.001); end
  def test_output_r230; assert_in_delta(0, (worksheet.output_r230||0), 0.001); end
  def test_output_w230; assert_in_delta(0, (worksheet.output_w230||0), 0.001); end
  def test_output_ab230; assert_in_delta(0, (worksheet.output_ab230||0), 0.001); end
  def test_output_am230; assert_equal("", worksheet.output_am230); end
  def test_output_an230; assert_equal("", worksheet.output_an230); end
  def test_output_ak230; assert_in_delta(0, (worksheet.output_ak230||0), 0.001); end
  def test_output_ao230; assert_equal("", worksheet.output_ao230); end
  def test_output_c231; assert_equal("XI.j", worksheet.output_c231); end
  def test_output_d231; assert_equal("V.04", worksheet.output_d231); end
  def test_output_e231; assert_equal("Liquid hydrocarbons / Non-Ferrous metals Industry", worksheet.output_e231); end
  def test_output_f231; assert_equal("TWh/yr", worksheet.output_f231); end
  def test_output_g231; assert_equal("NIR", worksheet.output_g231); end
  def test_output_h231; assert_in_delta(0.7956407126934584, worksheet.output_h231, 0.001); end
  def test_output_m231; assert_in_delta(0.6124319624928528, worksheet.output_m231, 0.001); end
  def test_output_r231; assert_in_delta(0.3553972511312333, worksheet.output_r231, 0.001); end
  def test_output_w231; assert_in_delta(0.3571755697809056, worksheet.output_w231, 0.001); end
  def test_output_ab231; assert_in_delta(0.13697218654168222, worksheet.output_ab231, 0.001); end
  def test_output_am231; assert_in_delta(-1, worksheet.output_am231, 0.001); end
  def test_output_an231; assert_in_delta(-1, worksheet.output_an231, 0.001); end
  def test_output_ak231; assert_in_delta(0, (worksheet.output_ak231||0), 0.001); end
  def test_output_ao231; assert_in_delta(-1, worksheet.output_ao231, 0.001); end
  def test_output_c232; assert_equal("XI.k", worksheet.output_c232); end
  def test_output_d232; assert_equal("V.04", worksheet.output_d232); end
  def test_output_e232; assert_equal("Liquid hydrocarbons / Construction industry", worksheet.output_e232); end
  def test_output_f232; assert_equal("TWh/yr", worksheet.output_f232); end
  def test_output_g232; assert_equal("IEA", worksheet.output_g232); end
  def test_output_h232; assert_in_delta(0, (worksheet.output_h232||0), 0.001); end
  def test_output_m232; assert_in_delta(0, (worksheet.output_m232||0), 0.001); end
  def test_output_r232; assert_in_delta(0, (worksheet.output_r232||0), 0.001); end
  def test_output_w232; assert_in_delta(0.9997222222222222, worksheet.output_w232, 0.001); end
  def test_output_ab232; assert_in_epsilon(2.4880555555555555, worksheet.output_ab232, 0.001); end
  def test_output_am232; assert_in_delta(-1, worksheet.output_am232, 0.001); end
  def test_output_an232; assert_in_delta(-1, worksheet.output_an232, 0.001); end
  def test_output_ak232; assert_in_delta(0, (worksheet.output_ak232||0), 0.001); end
  def test_output_ao232; assert_equal("", worksheet.output_ao232); end
  def test_output_c233; assert_equal("XI.l", worksheet.output_c233); end
  def test_output_d233; assert_equal("V.04", worksheet.output_d233); end
  def test_output_e233; assert_equal("Liquid hydrocarbons / Other Industry", worksheet.output_e233); end
  def test_output_f233; assert_equal("TWh/yr", worksheet.output_f233); end
  def test_output_g233; assert_equal("NIR", worksheet.output_g233); end
  def test_output_h233; assert_in_epsilon(5.916116384390763, worksheet.output_h233, 0.001); end
  def test_output_m233; assert_in_epsilon(6.307530727640284, worksheet.output_m233, 0.001); end
  def test_output_r233; assert_in_epsilon(6.195184481793399, worksheet.output_r233, 0.001); end
  def test_output_w233; assert_in_epsilon(5.5302231285416665, worksheet.output_w233, 0.001); end
  def test_output_ab233; assert_in_delta(0.5224686803652938, worksheet.output_ab233, 0.001); end
  def test_output_ad233; assert_in_delta(0, (worksheet.output_ad233||0), 0.001); end
  def test_output_ae233; assert_in_delta(0, (worksheet.output_ae233||0), 0.001); end
  def test_output_af233; assert_in_delta(0, (worksheet.output_af233||0), 0.001); end
  def test_output_ag233; assert_in_delta(0, (worksheet.output_ag233||0), 0.001); end
  def test_output_ah233; assert_in_delta(0, (worksheet.output_ah233||0), 0.001); end
  def test_output_ai233; assert_in_delta(0, (worksheet.output_ai233||0), 0.001); end
  def test_output_aj233; assert_in_delta(0, (worksheet.output_aj233||0), 0.001); end
  def test_output_am233; assert_equal("", worksheet.output_am233); end
  def test_output_an233; assert_equal("", worksheet.output_an233); end
  def test_output_ak233; assert_in_delta(0, (worksheet.output_ak233||0), 0.001); end
  def test_output_ao233; assert_in_delta(-1, worksheet.output_ao233, 0.001); end
  def test_output_c234; assert_equal("XI", worksheet.output_c234); end
  def test_output_d234; assert_equal("V.04", worksheet.output_d234); end
  def test_output_e234; assert_equal("Liquid hydrocarbons / Industry", worksheet.output_e234); end
  def test_output_f234; assert_equal("TWh/yr", worksheet.output_f234); end
  def test_output_g234; assert_equal("NIR", worksheet.output_g234); end
  def test_output_h234; assert_in_epsilon(28.25405617577889, worksheet.output_h234, 0.001); end
  def test_output_m234; assert_in_epsilon(25.971832159139, worksheet.output_m234, 0.001); end
  def test_output_r234; assert_in_epsilon(17.26039357406942, worksheet.output_r234, 0.001); end
  def test_output_w234; assert_in_epsilon(17.021948389320695, worksheet.output_w234, 0.001); end
  def test_output_ab234; assert_in_epsilon(11.376466195739962, worksheet.output_ab234, 0.001); end
  def test_output_ad234; assert_in_epsilon(8.33085490521796, worksheet.output_ad234, 0.001); end
  def test_output_ae234; assert_in_epsilon(7.020175393604117, worksheet.output_ae234, 0.001); end
  def test_output_af234; assert_in_epsilon(5.862034377078839, worksheet.output_af234, 0.001); end
  def test_output_ag234; assert_in_epsilon(4.78344244745555, worksheet.output_ag234, 0.001); end
  def test_output_ah234; assert_in_epsilon(4.526369472716938, worksheet.output_ah234, 0.001); end
  def test_output_ai234; assert_in_epsilon(4.301737331835381, worksheet.output_ai234, 0.001); end
  def test_output_aj234; assert_in_epsilon(4.099338441794132, worksheet.output_aj234, 0.001); end
  def test_output_am234; assert_in_delta(-0.02229362456380868, worksheet.output_am234, 0.001); end
  def test_output_an234; assert_in_delta(-0.594175851760345, worksheet.output_an234, 0.001); end
  def test_output_ak234; assert_in_epsilon(4.045189776734745, worksheet.output_ak234, 0.001); end
  def test_output_ao234; assert_in_delta(-0.8568279983741758, worksheet.output_ao234, 0.001); end
  def test_output_c235; assert_equal("XI.a", worksheet.output_c235); end
  def test_output_d235; assert_equal("V.05", worksheet.output_d235); end
  def test_output_e235; assert_equal("Gaseous hydrocarbons / Steel Industry", worksheet.output_e235); end
  def test_output_f235; assert_equal("TWh/yr", worksheet.output_f235); end
  def test_output_g235; assert_equal("NIR", worksheet.output_g235); end
  def test_output_h235; assert_in_epsilon(7.392457970854417, worksheet.output_h235, 0.001); end
  def test_output_m235; assert_in_epsilon(7.705084140555556, worksheet.output_m235, 0.001); end
  def test_output_r235; assert_in_epsilon(10.307285215765555, worksheet.output_r235, 0.001); end
  def test_output_w235; assert_in_epsilon(8.878116989093167, worksheet.output_w235, 0.001); end
  def test_output_ab235; assert_in_epsilon(5.979415155290555, worksheet.output_ab235, 0.001); end
  def test_output_ad235; assert_in_epsilon(8.014362169964848, worksheet.output_ad235, 0.001); end
  def test_output_ae235; assert_in_epsilon(8.276785747129898, worksheet.output_ae235, 0.001); end
  def test_output_af235; assert_in_epsilon(8.526814990318675, worksheet.output_af235, 0.001); end
  def test_output_ag235; assert_in_epsilon(10.462320103029281, worksheet.output_ag235, 0.001); end
  def test_output_ah235; assert_in_epsilon(10.49324287424139, worksheet.output_ah235, 0.001); end
  def test_output_ai235; assert_in_epsilon(10.518774688127923, worksheet.output_ai235, 0.001); end
  def test_output_aj235; assert_in_epsilon(10.539027879091329, worksheet.output_aj235, 0.001); end
  def test_output_am235; assert_in_delta(0.011159094727123842, worksheet.output_am235, 0.001); end
  def test_output_an235; assert_in_delta(0.5587615930152658, worksheet.output_an235, 0.001); end
  def test_output_ak235; assert_in_epsilon(10.944126576750367, worksheet.output_ak235, 0.001); end
  def test_output_ao235; assert_in_delta(0.48044488313613654, worksheet.output_ao235, 0.001); end
  def test_output_c236; assert_equal("XI.b", worksheet.output_c236); end
  def test_output_d236; assert_equal("V.05", worksheet.output_d236); end
  def test_output_e236; assert_equal("Gaseous hydrocarbons / Cement Industry", worksheet.output_e236); end
  def test_output_f236; assert_equal("TWh/yr", worksheet.output_f236); end
  def test_output_g236; assert_equal("Wallonia", worksheet.output_g236); end
  def test_output_h236; assert_in_delta(0.25245601717058547, worksheet.output_h236, 0.001); end
  def test_output_m236; assert_in_delta(0.26627752323323933, worksheet.output_m236, 0.001); end
  def test_output_r236; assert_in_delta(0.2761500618351888, worksheet.output_r236, 0.001); end
  def test_output_w236; assert_in_delta(0.2598387400248086, worksheet.output_w236, 0.001); end
  def test_output_ab236; assert_in_delta(0.23280277830712964, worksheet.output_ab236, 0.001); end
  def test_output_ad236; assert_in_delta(0.13131098609605898, worksheet.output_ad236, 0.001); end
  def test_output_ae236; assert_in_delta(0.10623116010715702, worksheet.output_ae236, 0.001); end
  def test_output_af236; assert_in_delta(0.08680610661125224, worksheet.output_af236, 0.001); end
  def test_output_ag236; assert_in_delta(0.07135802395443457, worksheet.output_ag236, 0.001); end
  def test_output_ah236; assert_in_delta(0.05892726989931248, worksheet.output_ah236, 0.001); end
  def test_output_ai236; assert_in_delta(0.04719133572680287, worksheet.output_ai236, 0.001); end
  def test_output_aj236; assert_in_delta(0.03631458608644881, worksheet.output_aj236, 0.001); end
  def test_output_am236; assert_in_delta(-0.04675598557905769, worksheet.output_am236, 0.001); end
  def test_output_an236; assert_in_delta(-0.8527133182912379, worksheet.output_an236, 0.001); end
  def test_output_ak236; assert_in_delta(0.026069742662450896, worksheet.output_ak236, 0.001); end
  def test_output_ao236; assert_in_delta(-0.8967355068236085, worksheet.output_ao236, 0.001); end
  def test_output_c237; assert_equal("XI.c", worksheet.output_c237); end
  def test_output_d237; assert_equal("V.05", worksheet.output_d237); end
  def test_output_e237; assert_equal("Gaseous hydrocarbons / Lime Industry", worksheet.output_e237); end
  def test_output_f237; assert_equal("TWh/yr", worksheet.output_f237); end
  def test_output_g237; assert_equal("Wallonia", worksheet.output_g237); end
  def test_output_h237; assert_in_delta(0.35489002156142513, worksheet.output_h237, 0.001); end
  def test_output_m237; assert_in_delta(0.3743196023635028, worksheet.output_m237, 0.001); end
  def test_output_r237; assert_in_delta(0.38819792254211993, worksheet.output_r237, 0.001); end
  def test_output_w237; assert_in_delta(0.3652682834950549, worksheet.output_w237, 0.001); end
  def test_output_ab237; assert_in_delta(0.32726248294232846, worksheet.output_ab237, 0.001); end
  def test_output_ad237; assert_in_delta(0.9895393422935418, worksheet.output_ad237, 0.001); end
  def test_output_ae237; assert_in_epsilon(1.233050380677374, worksheet.output_ae237, 0.001); end
  def test_output_af237; assert_in_epsilon(1.2023764694967842, worksheet.output_af237, 0.001); end
  def test_output_ag237; assert_in_epsilon(1.1870303961062179, worksheet.output_ag237, 0.001); end
  def test_output_ah237; assert_in_epsilon(1.1674930003291788, worksheet.output_ah237, 0.001); end
  def test_output_ai237; assert_in_epsilon(1.1439697411418044, worksheet.output_ai237, 0.001); end
  def test_output_aj237; assert_in_epsilon(1.1166723372184484, worksheet.output_aj237, 0.001); end
  def test_output_am237; assert_in_delta(0.01131524626717928, worksheet.output_am237, 0.001); end
  def test_output_an237; assert_in_delta(0.5684193187824291, worksheet.output_an237, 0.001); end
  def test_output_ak237; assert_in_epsilon(1.1059328991323556, worksheet.output_ak237, 0.001); end
  def test_output_ao237; assert_in_epsilon(2.1162693565362427, worksheet.output_ao237, 0.001); end
  def test_output_c238; assert_equal("XI.d", worksheet.output_c238); end
  def test_output_d238; assert_equal("V.05", worksheet.output_d238); end
  def test_output_e238; assert_equal("Gaseous hydrocarbons / Glass Industry", worksheet.output_e238); end
  def test_output_f238; assert_equal("TWh/yr", worksheet.output_f238); end
  def test_output_g238; assert_equal("Wallonia", worksheet.output_g238); end
  def test_output_h238; assert_in_epsilon(6.5279009518691, worksheet.output_h238, 0.001); end
  def test_output_m238; assert_in_epsilon(7.429660250792147, worksheet.output_m238, 0.001); end
  def test_output_r238; assert_in_epsilon(7.632198839130452, worksheet.output_r238, 0.001); end
  def test_output_w238; assert_in_epsilon(7.616221271707877, worksheet.output_w238, 0.001); end
  def test_output_ab238; assert_in_epsilon(5.484077566311652, worksheet.output_ab238, 0.001); end
  def test_output_ad238; assert_in_epsilon(2.29641962606909, worksheet.output_ad238, 0.001); end
  def test_output_ae238; assert_in_epsilon(2.636975378557681, worksheet.output_ae238, 0.001); end
  def test_output_af238; assert_in_epsilon(3.1514501292363906, worksheet.output_af238, 0.001); end
  def test_output_ag238; assert_in_epsilon(3.6974080802390117, worksheet.output_ag238, 0.001); end
  def test_output_ah238; assert_in_epsilon(3.803376943621749, worksheet.output_ah238, 0.001); end
  def test_output_ai238; assert_in_epsilon(3.911657732915171, worksheet.output_ai238, 0.001); end
  def test_output_aj238; assert_in_epsilon(4.022045829500967, worksheet.output_aj238, 0.001); end
  def test_output_am238; assert_in_delta(0.024630060267696097, worksheet.output_am238, 0.001); end
  def test_output_an238; assert_in_epsilon(1.6465720201126794, worksheet.output_an238, 0.001); end
  def test_output_ak238; assert_in_epsilon(4.134310974409258, worksheet.output_ak238, 0.001); end
  def test_output_ao238; assert_in_delta(-0.366670694777392, worksheet.output_ao238, 0.001); end
  def test_output_c239; assert_equal("XI.e", worksheet.output_c239); end
  def test_output_d239; assert_equal("V.05", worksheet.output_d239); end
  def test_output_e239; assert_equal("Gaseous hydrocarbons / Chemicals Industry", worksheet.output_e239); end
  def test_output_f239; assert_equal("TWh/yr", worksheet.output_f239); end
  def test_output_g239; assert_equal("NIR", worksheet.output_g239); end
  def test_output_h239; assert_in_epsilon(12.538777713576804, worksheet.output_h239, 0.001); end
  def test_output_m239; assert_in_epsilon(15.647462892222222, worksheet.output_m239, 0.001); end
  def test_output_r239; assert_in_epsilon(17.139496259725554, worksheet.output_r239, 0.001); end
  def test_output_w239; assert_in_epsilon(15.621609508835917, worksheet.output_w239, 0.001); end
  def test_output_ab239; assert_in_epsilon(15.264960985653945, worksheet.output_ab239, 0.001); end
  def test_output_ad239; assert_in_epsilon(36.13352651680417, worksheet.output_ad239, 0.001); end
  def test_output_ae239; assert_in_epsilon(34.428368924573256, worksheet.output_ae239, 0.001); end
  def test_output_af239; assert_in_epsilon(32.7714415746908, worksheet.output_af239, 0.001); end
  def test_output_ag239; assert_in_epsilon(31.162744467156788, worksheet.output_ag239, 0.001); end
  def test_output_ah239; assert_in_epsilon(29.602277601971235, worksheet.output_ah239, 0.001); end
  def test_output_ai239; assert_in_epsilon(28.09004097913412, worksheet.output_ai239, 0.001); end
  def test_output_aj239; assert_in_epsilon(26.626034598645457, worksheet.output_aj239, 0.001); end
  def test_output_am239; assert_in_delta(-0.010063080747579778, worksheet.output_am239, 0.001); end
  def test_output_an239; assert_in_delta(-0.33273114439586793, worksheet.output_an239, 0.001); end
  def test_output_ak239; assert_in_epsilon(25.210258460505248, worksheet.output_ak239, 0.001); end
  def test_output_ao239; assert_in_epsilon(1.0105834106308422, worksheet.output_ao239, 0.001); end
  def test_output_c240; assert_equal("XI.f", worksheet.output_c240); end
  def test_output_d240; assert_equal("V.05", worksheet.output_d240); end
  def test_output_e240; assert_equal("Gaseous hydrocarbons / Pulp & Paper Industry", worksheet.output_e240); end
  def test_output_f240; assert_equal("TWh/yr", worksheet.output_f240); end
  def test_output_g240; assert_equal("NIR", worksheet.output_g240); end
  def test_output_h240; assert_in_epsilon(1.395441851005422, worksheet.output_h240, 0.001); end
  def test_output_m240; assert_in_epsilon(1.5991180416666668, worksheet.output_m240, 0.001); end
  def test_output_r240; assert_in_epsilon(1.8304070713177778, worksheet.output_r240, 0.001); end
  def test_output_w240; assert_in_epsilon(1.4789523626164445, worksheet.output_w240, 0.001); end
  def test_output_ab240; assert_in_epsilon(1.2706933407702057, worksheet.output_ab240, 0.001); end
  def test_output_ad240; assert_in_epsilon(3.0678959025000005, worksheet.output_ad240, 0.001); end
  def test_output_ae240; assert_in_epsilon(3.131444909999999, worksheet.output_ae240, 0.001); end
  def test_output_af240; assert_in_epsilon(3.1917050999999996, worksheet.output_af240, 0.001); end
  def test_output_ag240; assert_in_epsilon(3.1054427999999996, worksheet.output_ag240, 0.001); end
  def test_output_ah240; assert_in_epsilon(3.0191804999999996, worksheet.output_ah240, 0.001); end
  def test_output_ai240; assert_in_epsilon(2.9329181999999996, worksheet.output_ai240, 0.001); end
  def test_output_aj240; assert_in_epsilon(2.8466558999999996, worksheet.output_aj240, 0.001); end
  def test_output_am240; assert_in_delta(-0.0020527018942245734, worksheet.output_am240, 0.001); end
  def test_output_an240; assert_in_delta(-0.07890533498038921, worksheet.output_an240, 0.001); end
  def test_output_ak240; assert_in_epsilon(2.7603936, worksheet.output_ak240, 0.001); end
  def test_output_ao240; assert_in_delta(0.9781502167296503, worksheet.output_ao240, 0.001); end
  def test_output_c241; assert_equal("XI.g", worksheet.output_c241); end
  def test_output_d241; assert_equal("V.05", worksheet.output_d241); end
  def test_output_e241; assert_equal("Gaseous hydrocarbons / Oil & Gas Industry", worksheet.output_e241); end
  def test_output_f241; assert_equal("TWh/yr", worksheet.output_f241); end
  def test_output_h241; assert_in_delta(0, (worksheet.output_h241||0), 0.001); end
  def test_output_m241; assert_in_delta(0, (worksheet.output_m241||0), 0.001); end
  def test_output_r241; assert_in_delta(0, (worksheet.output_r241||0), 0.001); end
  def test_output_w241; assert_in_delta(0, (worksheet.output_w241||0), 0.001); end
  def test_output_ab241; assert_in_delta(0, (worksheet.output_ab241||0), 0.001); end
  def test_output_ad241; assert_in_epsilon(8.096111176529412, worksheet.output_ad241, 0.001); end
  def test_output_ae241; assert_in_epsilon(7.0366856080875815, worksheet.output_ae241, 0.001); end
  def test_output_af241; assert_in_epsilon(6.022980419726028, worksheet.output_af241, 0.001); end
  def test_output_ag241; assert_in_epsilon(4.2393594857133, worksheet.output_ag241, 0.001); end
  def test_output_ah241; assert_in_epsilon(3.489492554502104, worksheet.output_ah241, 0.001); end
  def test_output_ai241; assert_in_epsilon(2.8726403201183763, worksheet.output_ai241, 0.001); end
  def test_output_aj241; assert_in_epsilon(2.3165170339684105, worksheet.output_aj241, 0.001); end
  def test_output_am241; assert_in_delta(-0.037175360102661426, worksheet.output_am241, 0.001); end
  def test_output_an241; assert_in_delta(-0.780270769117166, worksheet.output_an241, 0.001); end
  def test_output_ak241; assert_in_epsilon(1.8129024495503394, worksheet.output_ak241, 0.001); end
  def test_output_ao241; assert_equal("", worksheet.output_ao241); end
  def test_output_c242; assert_equal("XI.h", worksheet.output_c242); end
  def test_output_d242; assert_equal("V.05", worksheet.output_d242); end
  def test_output_e242; assert_equal("Gaseous hydrocarbons / Food, drinks and tobacco Industry", worksheet.output_e242); end
  def test_output_f242; assert_equal("TWh/yr", worksheet.output_f242); end
  def test_output_g242; assert_equal("NIR", worksheet.output_g242); end
  def test_output_h242; assert_in_epsilon(3.3877731294475835, worksheet.output_h242, 0.001); end
  def test_output_m242; assert_in_epsilon(3.783129195, worksheet.output_m242, 0.001); end
  def test_output_r242; assert_in_epsilon(5.438133538148334, worksheet.output_r242, 0.001); end
  def test_output_w242; assert_in_epsilon(6.701722599900639, worksheet.output_w242, 0.001); end
  def test_output_ab242; assert_in_epsilon(8.473917498855556, worksheet.output_ab242, 0.001); end
  def test_output_ad242; assert_in_epsilon(8.285610659259554, worksheet.output_ad242, 0.001); end
  def test_output_ae242; assert_in_epsilon(7.540389455130671, worksheet.output_ae242, 0.001); end
  def test_output_af242; assert_in_epsilon(6.813092068799046, worksheet.output_af242, 0.001); end
  def test_output_ag242; assert_in_epsilon(5.8458679487799845, worksheet.output_ag242, 0.001); end
  def test_output_ah242; assert_in_epsilon(5.010742866916025, worksheet.output_ah242, 0.001); end
  def test_output_ai242; assert_in_epsilon(4.2532924596593, worksheet.output_ai242, 0.001); end
  def test_output_aj242; assert_in_epsilon(3.5678294747841126, worksheet.output_aj242, 0.001); end
  def test_output_am242; assert_in_delta(-0.02759128559471624, worksheet.output_am242, 0.001); end
  def test_output_an242; assert_in_delta(-0.673446992655488, worksheet.output_an242, 0.001); end
  def test_output_ak242; assert_in_epsilon(2.9498558529872843, worksheet.output_ak242, 0.001); end
  def test_output_ao242; assert_in_delta(-0.12926405037391242, worksheet.output_ao242, 0.001); end
  def test_output_c243; assert_equal("XI.i", worksheet.output_c243); end
  def test_output_d243; assert_equal("V.05", worksheet.output_d243); end
  def test_output_e243; assert_equal("Gaseous hydrocarbons / Machines Industry", worksheet.output_e243); end
  def test_output_f243; assert_equal("TWh/yr", worksheet.output_f243); end
  def test_output_h243; assert_in_delta(0, (worksheet.output_h243||0), 0.001); end
  def test_output_m243; assert_in_delta(0, (worksheet.output_m243||0), 0.001); end
  def test_output_r243; assert_in_delta(0, (worksheet.output_r243||0), 0.001); end
  def test_output_w243; assert_in_delta(0, (worksheet.output_w243||0), 0.001); end
  def test_output_ab243; assert_in_delta(0, (worksheet.output_ab243||0), 0.001); end
  def test_output_ad243; assert_in_delta(0, (worksheet.output_ad243||0), 0.001); end
  def test_output_ae243; assert_in_delta(0, (worksheet.output_ae243||0), 0.001); end
  def test_output_af243; assert_in_delta(0, (worksheet.output_af243||0), 0.001); end
  def test_output_ag243; assert_in_delta(0, (worksheet.output_ag243||0), 0.001); end
  def test_output_ah243; assert_in_delta(0, (worksheet.output_ah243||0), 0.001); end
  def test_output_ai243; assert_in_delta(0, (worksheet.output_ai243||0), 0.001); end
  def test_output_aj243; assert_in_delta(0, (worksheet.output_aj243||0), 0.001); end
  def test_output_am243; assert_equal("", worksheet.output_am243); end
  def test_output_an243; assert_equal("", worksheet.output_an243); end
  def test_output_ak243; assert_in_delta(0, (worksheet.output_ak243||0), 0.001); end
  def test_output_ao243; assert_equal("", worksheet.output_ao243); end
  def test_output_c244; assert_equal("XI.j", worksheet.output_c244); end
  def test_output_d244; assert_equal("V.05", worksheet.output_d244); end
  def test_output_e244; assert_equal("Gaseous hydrocarbons / Non-Ferrous metals Industry", worksheet.output_e244); end
  def test_output_f244; assert_equal("TWh/yr", worksheet.output_f244); end
  def test_output_g244; assert_equal("NIR", worksheet.output_g244); end
  def test_output_h244; assert_in_epsilon(1.2915243150834943, worksheet.output_h244, 0.001); end
  def test_output_m244; assert_in_epsilon(1.2237401572222222, worksheet.output_m244, 0.001); end
  def test_output_r244; assert_in_epsilon(1.3271083733333333, worksheet.output_r244, 0.001); end
  def test_output_w244; assert_in_epsilon(1.6504345251752224, worksheet.output_w244, 0.001); end
  def test_output_ab244; assert_in_epsilon(1.5541568631772027, worksheet.output_ab244, 0.001); end
  def test_output_ad244; assert_in_epsilon(1.4619128837039732, worksheet.output_ad244, 0.001); end
  def test_output_ae244; assert_in_epsilon(1.367039258357491, worksheet.output_ae244, 0.001); end
  def test_output_af244; assert_in_epsilon(1.2709891764293597, worksheet.output_af244, 0.001); end
  def test_output_ag244; assert_in_epsilon(1.1415121085602564, worksheet.output_ag244, 0.001); end
  def test_output_ah244; assert_in_epsilon(1.017319818971525, worksheet.output_ah244, 0.001); end
  def test_output_ai244; assert_in_delta(0.8984123076631648, worksheet.output_ai244, 0.001); end
  def test_output_aj244; assert_in_delta(0.7847895746351763, worksheet.output_aj244, 0.001); end
  def test_output_am244; assert_in_delta(-0.020580949238341195, worksheet.output_am244, 0.001); end
  def test_output_an244; assert_in_delta(-0.5647468824320174, worksheet.output_an244, 0.001); end
  def test_output_ak244; assert_in_delta(0.6764516198875594, worksheet.output_ak244, 0.001); end
  def test_output_ao244; assert_in_delta(-0.4762377974712553, worksheet.output_ao244, 0.001); end
  def test_output_c245; assert_equal("XI.k", worksheet.output_c245); end
  def test_output_d245; assert_equal("V.05", worksheet.output_d245); end
  def test_output_e245; assert_equal("Gaseous hydrocarbons / Construction industry", worksheet.output_e245); end
  def test_output_f245; assert_equal("TWh/yr", worksheet.output_f245); end
  def test_output_g245; assert_equal("IEA", worksheet.output_g245); end
  def test_output_h245; assert_in_epsilon(4.889891391999999, worksheet.output_h245, 0.001); end
  def test_output_m245; assert_in_epsilon(5.3228505256666665, worksheet.output_m245, 0.001); end
  def test_output_r245; assert_in_epsilon(4.456932258333333, worksheet.output_r245, 0.001); end
  def test_output_w245; assert_in_epsilon(3.654684451833333, worksheet.output_w245, 0.001); end
  def test_output_ab245; assert_in_epsilon(1.9228479171666666, worksheet.output_ab245, 0.001); end
  def test_output_ad245; assert_in_epsilon(2.11448270579876, worksheet.output_ad245, 0.001); end
  def test_output_ae245; assert_in_epsilon(2.3146204115322573, worksheet.output_ae245, 0.001); end
  def test_output_af245; assert_in_epsilon(2.4887986288224595, worksheet.output_af245, 0.001); end
  def test_output_ag245; assert_in_epsilon(2.235261970169028, worksheet.output_ag245, 0.001); end
  def test_output_ah245; assert_in_epsilon(1.9920737465626754, worksheet.output_ah245, 0.001); end
  def test_output_ai245; assert_in_epsilon(1.7592339580034015, worksheet.output_ai245, 0.001); end
  def test_output_aj245; assert_in_epsilon(1.536742604491207, worksheet.output_aj245, 0.001); end
  def test_output_am245; assert_in_delta(-0.009257486828080252, worksheet.output_am245, 0.001); end
  def test_output_an245; assert_in_delta(-0.31066240291751035, worksheet.output_an245, 0.001); end
  def test_output_ak245; assert_in_epsilon(1.324599686026091, worksheet.output_ak245, 0.001); end
  def test_output_ao245; assert_in_delta(-0.7291147021806714, worksheet.output_ao245, 0.001); end
  def test_output_c246; assert_equal("XI.l", worksheet.output_c246); end
  def test_output_d246; assert_equal("V.05", worksheet.output_d246); end
  def test_output_e246; assert_equal("Gaseous hydrocarbons / Other Industry", worksheet.output_e246); end
  def test_output_f246; assert_equal("TWh/yr", worksheet.output_f246); end
  def test_output_g246; assert_equal("NIR", worksheet.output_g246); end
  def test_output_h246; assert_in_delta(0.6930740640241666, worksheet.output_h246, 0.001); end
  def test_output_m246; assert_in_epsilon(1.3035701387715841, worksheet.output_m246, 0.001); end
  def test_output_r246; assert_in_epsilon(3.756945723566239, worksheet.output_r246, 0.001); end
  def test_output_w246; assert_in_epsilon(2.4722650001341755, worksheet.output_w246, 0.001); end
  def test_output_ab246; assert_in_epsilon(4.123881195063056, worksheet.output_ab246, 0.001); end
  def test_output_ad246; assert_in_delta(0, (worksheet.output_ad246||0), 0.001); end
  def test_output_ae246; assert_in_delta(0, (worksheet.output_ae246||0), 0.001); end
  def test_output_af246; assert_in_delta(0, (worksheet.output_af246||0), 0.001); end
  def test_output_ag246; assert_in_delta(0, (worksheet.output_ag246||0), 0.001); end
  def test_output_ah246; assert_in_delta(0, (worksheet.output_ah246||0), 0.001); end
  def test_output_ai246; assert_in_delta(0, (worksheet.output_ai246||0), 0.001); end
  def test_output_aj246; assert_in_delta(0, (worksheet.output_aj246||0), 0.001); end
  def test_output_am246; assert_equal("", worksheet.output_am246); end
  def test_output_an246; assert_equal("", worksheet.output_an246); end
  def test_output_ak246; assert_in_delta(0, (worksheet.output_ak246||0), 0.001); end
  def test_output_ao246; assert_in_delta(-1, worksheet.output_ao246, 0.001); end
  def test_output_c247; assert_equal("XI", worksheet.output_c247); end
  def test_output_d247; assert_equal("V.05", worksheet.output_d247); end
  def test_output_e247; assert_equal("Gaseous hydrocarbons / Industry", worksheet.output_e247); end
  def test_output_f247; assert_equal("TWh/yr", worksheet.output_f247); end
  def test_output_g247; assert_equal("NIR", worksheet.output_g247); end
  def test_output_h247; assert_in_epsilon(38.724187426593055, worksheet.output_h247, 0.001); end
  def test_output_m247; assert_in_epsilon(44.65521246749389, worksheet.output_m247, 0.001); end
  def test_output_r247; assert_in_epsilon(52.55285526369778, worksheet.output_r247, 0.001); end
  def test_output_w247; assert_in_epsilon(48.69911373281666, worksheet.output_w247, 0.001); end
  def test_output_ab247; assert_in_epsilon(44.63401578353834, worksheet.output_ab247, 0.001); end
  def test_output_ad247; assert_in_epsilon(70.5911719690194, worksheet.output_ad247, 0.001); end
  def test_output_ae247; assert_in_epsilon(68.07159123415337, worksheet.output_ae247, 0.001); end
  def test_output_af247; assert_in_epsilon(65.5264546641308, worksheet.output_af247, 0.001); end
  def test_output_ag247; assert_in_epsilon(63.1483053837083, worksheet.output_ag247, 0.001); end
  def test_output_ah247; assert_in_epsilon(59.65412717701519, worksheet.output_ah247, 0.001); end
  def test_output_ai247; assert_in_epsilon(56.428131722490065, worksheet.output_ai247, 0.001); end
  def test_output_aj247; assert_in_epsilon(53.39262981842156, worksheet.output_aj247, 0.001); end
  def test_output_am247; assert_in_delta(-0.008265115586015948, worksheet.output_am247, 0.001); end
  def test_output_an247; assert_in_delta(-0.2824972088364016, worksheet.output_an247, 0.001); end
  def test_output_ak247; assert_in_epsilon(50.94490186191095, worksheet.output_ak247, 0.001); end
  def test_output_ao247; assert_in_delta(0.31558349567654354, worksheet.output_ao247, 0.001); end
  def test_output_f248; assert_equal("TWh/yr", worksheet.output_f248); end
  def test_output_am248; assert_equal("", worksheet.output_am248); end
  def test_output_an248; assert_equal("", worksheet.output_an248); end
  def test_output_ao248; assert_equal("", worksheet.output_ao248); end
  def test_output_e249; assert_equal("Residential heat demand", worksheet.output_e249); end
  def test_output_f249; assert_equal("TWh/yr", worksheet.output_f249); end
  def test_output_g249; assert_equal("same as above", worksheet.output_g249); end
  def test_output_h249; assert_in_epsilon(84.44099755264888, worksheet.output_h249, 0.001); end
  def test_output_m249; assert_in_epsilon(94.56243360318945, worksheet.output_m249, 0.001); end
  def test_output_r249; assert_in_epsilon(90.32120404322806, worksheet.output_r249, 0.001); end
  def test_output_w249; assert_in_epsilon(94.89659740822027, worksheet.output_w249, 0.001); end
  def test_output_ab249; assert_in_epsilon(101.53865837019805, worksheet.output_ab249, 0.001); end
  def test_output_am249; assert_in_delta(0.000558798314815645, worksheet.output_am249, 0.001); end
  def test_output_an249; assert_in_delta(0.0225972248138675, worksheet.output_an249, 0.001); end
  def test_output_ak249; assert_in_epsilon(73.82757093116487, worksheet.output_ak249, 0.001); end
  def test_output_ao249; assert_in_delta(-0.125690445744279, worksheet.output_ao249, 0.001); end
  def test_output_e250; assert_equal("Residential heat demand per household", worksheet.output_e250); end
  def test_output_f250; assert_equal("MWh/yr", worksheet.output_f250); end
  def test_output_ac249; assert_in_epsilon(72.19613855748818, worksheet.output_ac249, 0.001); end
  def test_output_ac250; assert_in_epsilon(15.672516871105145, worksheet.output_ac250, 0.001); end
  def test_output_ad249; assert_in_epsilon(74.17299294577367, worksheet.output_ad249, 0.001); end
  def test_output_ad250; assert_in_epsilon(14.992414277500359, worksheet.output_ad250, 0.001); end
  def test_output_ae249; assert_in_epsilon(74.50180089269917, worksheet.output_ae249, 0.001); end
  def test_output_ae250; assert_in_epsilon(14.174419527268357, worksheet.output_ae250, 0.001); end
  def test_output_af249; assert_in_epsilon(75.02150999979753, worksheet.output_af249, 0.001); end
  def test_output_af250; assert_in_epsilon(13.740299551359987, worksheet.output_af250, 0.001); end
  def test_output_ag249; assert_in_epsilon(73.77821700437488, worksheet.output_ag249, 0.001); end
  def test_output_ag250; assert_in_epsilon(13.00857363919622, worksheet.output_ag250, 0.001); end
  def test_output_ah249; assert_in_epsilon(73.02134023183102, worksheet.output_ah249, 0.001); end
  def test_output_ah250; assert_in_epsilon(12.473446629193718, worksheet.output_ah250, 0.001); end
  def test_output_ai249; assert_in_epsilon(72.80294411277312, worksheet.output_ai249, 0.001); end
  def test_output_ai250; assert_in_epsilon(12.044996755365537, worksheet.output_ai250, 0.001); end
  def test_output_aj249; assert_in_epsilon(73.03765108697917, worksheet.output_aj249, 0.001); end
  def test_output_aj250; assert_in_epsilon(11.746522289804107, worksheet.output_aj250, 0.001); end
  def test_output_am250; assert_in_delta(-0.007626655969262819, worksheet.output_am250, 0.001); end
  def test_output_an250; assert_in_delta(-0.2637867830408581, worksheet.output_an250, 0.001); end
  def test_output_ak250; assert_in_epsilon(11.538314063522744, worksheet.output_ak250, 0.001); end
  def test_output_ao250; assert_equal("", worksheet.output_ao250); end
  def test_output_e251; assert_equal("Commercial Heat demand", worksheet.output_e251); end
  def test_output_f251; assert_equal("TWh/yr", worksheet.output_f251); end
  def test_output_g251; assert_equal("same as above", worksheet.output_g251); end
  def test_output_h251; assert_in_delta(0, (worksheet.output_h251||0), 0.001); end
  def test_output_m251; assert_in_delta(0, (worksheet.output_m251||0), 0.001); end
  def test_output_r251; assert_in_delta(0, (worksheet.output_r251||0), 0.001); end
  def test_output_w251; assert_in_delta(0, (worksheet.output_w251||0), 0.001); end
  def test_output_ab251; assert_in_epsilon(31.673084122563054, worksheet.output_ab251, 0.001); end
  def test_output_ad251; assert_in_epsilon(25.03797443342547, worksheet.output_ad251, 0.001); end
  def test_output_ae251; assert_in_epsilon(22.84067638578927, worksheet.output_ae251, 0.001); end
  def test_output_af251; assert_in_epsilon(20.500970177662516, worksheet.output_af251, 0.001); end
  def test_output_ag251; assert_in_epsilon(18.36852847008901, worksheet.output_ag251, 0.001); end
  def test_output_ah251; assert_in_epsilon(16.331739101984514, worksheet.output_ah251, 0.001); end
  def test_output_ai251; assert_in_epsilon(14.465979569263851, worksheet.output_ai251, 0.001); end
  def test_output_aj251; assert_in_epsilon(12.719079002594224, worksheet.output_aj251, 0.001); end
  def test_output_am251; assert_in_delta(-0.02162999183488512, worksheet.output_am251, 0.001); end
  def test_output_an251; assert_in_delta(-0.5830103850032107, worksheet.output_an251, 0.001); end
  def test_output_ak251; assert_in_epsilon(10.914876430149468, worksheet.output_ak251, 0.001); end
  def test_output_ao251; assert_equal("", worksheet.output_ao251); end
  def test_output_e252; assert_equal("Transport heat demand", worksheet.output_e252); end
  def test_output_f252; assert_equal("TWh/yr", worksheet.output_f252); end
  def test_output_g252; assert_equal("not same as above as includes other heats (not only liquid)", worksheet.output_g252); end
  def test_output_h252; assert_in_epsilon(78.63030965781796, worksheet.output_h252, 0.001); end
  def test_output_m252; assert_in_epsilon(85.95171327468337, worksheet.output_m252, 0.001); end
  def test_output_r252; assert_in_epsilon(93.50280602370111, worksheet.output_r252, 0.001); end
  def test_output_w252; assert_in_epsilon(99.18759836466883, worksheet.output_w252, 0.001); end
  def test_output_ab252; assert_in_epsilon(96.62393244829158, worksheet.output_ab252, 0.001); end
  def test_output_ac208; assert_in_epsilon(114.28616266127325, worksheet.output_ac208, 0.001); end
  def test_output_ac252; assert_in_epsilon(114.28616266127325, worksheet.output_ac252, 0.001); end
  def test_output_ad208; assert_in_epsilon(109.04475171054011, worksheet.output_ad208, 0.001); end
  def test_output_ad252; assert_in_epsilon(109.04475171054011, worksheet.output_ad252, 0.001); end
  def test_output_ae208; assert_in_epsilon(96.82543046974374, worksheet.output_ae208, 0.001); end
  def test_output_ae252; assert_in_epsilon(96.82543046974374, worksheet.output_ae252, 0.001); end
  def test_output_af208; assert_in_epsilon(84.80528569037756, worksheet.output_af208, 0.001); end
  def test_output_af252; assert_in_epsilon(84.80528569037756, worksheet.output_af252, 0.001); end
  def test_output_ag208; assert_in_epsilon(72.07939569400533, worksheet.output_ag208, 0.001); end
  def test_output_ag252; assert_in_epsilon(72.07939569400533, worksheet.output_ag252, 0.001); end
  def test_output_ah208; assert_in_epsilon(60.84156324471134, worksheet.output_ah208, 0.001); end
  def test_output_ah252; assert_in_epsilon(60.84156324471134, worksheet.output_ah252, 0.001); end
  def test_output_ai208; assert_in_epsilon(51.977454572667526, worksheet.output_ai208, 0.001); end
  def test_output_ai252; assert_in_epsilon(51.977454572667526, worksheet.output_ai252, 0.001); end
  def test_output_aj208; assert_in_epsilon(43.91684637537794, worksheet.output_aj208, 0.001); end
  def test_output_aj252; assert_in_epsilon(43.91684637537794, worksheet.output_aj252, 0.001); end
  def test_output_ak252; assert_in_epsilon(36.750308996068114, worksheet.output_ak252, 0.001); end
  def test_output_am252; assert_in_delta(-0.02796549064985787, worksheet.output_am252, 0.001); end
  def test_output_an252; assert_in_delta(-0.6784360578717616, worksheet.output_an252, 0.001); end
  def test_output_ao252; assert_in_delta(-0.5326190478455766, worksheet.output_ao252, 0.001); end
  def test_output_e253; assert_equal("Steel Industry", worksheet.output_e253); end
  def test_output_f253; assert_equal("TWh/yr", worksheet.output_f253); end
  def test_output_g253; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g253); end
  def test_output_h253; assert_in_epsilon(60.183731765656674, worksheet.output_h253, 0.001); end
  def test_output_m253; assert_in_epsilon(56.32959960559417, worksheet.output_m253, 0.001); end
  def test_output_r253; assert_in_epsilon(56.35943122310556, worksheet.output_r253, 0.001); end
  def test_output_w253; assert_in_epsilon(49.23773079909472, worksheet.output_w253, 0.001); end
  def test_output_ab253; assert_in_epsilon(31.42672533186936, worksheet.output_ab253, 0.001); end
  def test_output_ac209; assert_in_epsilon(25.213105831443173, worksheet.output_ac209, 0.001); end
  def test_output_ac222; assert_in_epsilon(2.4677643093590182, worksheet.output_ac222, 0.001); end
  def test_output_ac235; assert_in_epsilon(7.021039410895458, worksheet.output_ac235, 0.001); end
  def test_output_ac253; assert_in_epsilon(34.70190955169765, worksheet.output_ac253, 0.001); end
  def test_output_ad222; assert_in_epsilon(2.1269183869378425, worksheet.output_ad222, 0.001); end
  def test_output_ad253; assert_in_epsilon(30.46221925802464, worksheet.output_ad253, 0.001); end
  def test_output_ae222; assert_in_epsilon(2.173020897232455, worksheet.output_ae222, 0.001); end
  def test_output_ae253; assert_in_epsilon(30.04188763605263, worksheet.output_ae253, 0.001); end
  def test_output_af222; assert_in_epsilon(2.217228780951796, worksheet.output_af222, 0.001); end
  def test_output_af253; assert_in_epsilon(29.62445152467972, worksheet.output_af253, 0.001); end
  def test_output_ag222; assert_in_epsilon(1.980173304896649, worksheet.output_ag222, 0.001); end
  def test_output_ag253; assert_in_epsilon(21.90213391582383, worksheet.output_ag253, 0.001); end
  def test_output_ah222; assert_in_epsilon(1.9891863470710371, worksheet.output_ah222, 0.001); end
  def test_output_ah253; assert_in_epsilon(21.59347477905741, worksheet.output_ah253, 0.001); end
  def test_output_ai222; assert_in_epsilon(1.9973476578677773, worksheet.output_ai222, 0.001); end
  def test_output_ai253; assert_in_epsilon(21.286986749935302, worksheet.output_ai253, 0.001); end
  def test_output_aj222; assert_in_epsilon(2.004668373287134, worksheet.output_aj222, 0.001); end
  def test_output_aj253; assert_in_epsilon(20.98266982845751, worksheet.output_aj253, 0.001); end
  def test_output_am253; assert_in_delta(-0.011655065635355344, worksheet.output_am253, 0.001); end
  def test_output_an253; assert_in_delta(-0.37433533637371985, worksheet.output_an253, 0.001); end
  def test_output_ak253; assert_in_epsilon(21.71175856685251, worksheet.output_ak253, 0.001); end
  def test_output_ao253; assert_in_delta(-0.6392420687471869, worksheet.output_ao253, 0.001); end
  def test_output_e254; assert_equal("Cement Industry", worksheet.output_e254); end
  def test_output_f254; assert_equal("TWh/yr", worksheet.output_f254); end
  def test_output_g254; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g254); end
  def test_output_h254; assert_in_epsilon(6.624320139361679, worksheet.output_h254, 0.001); end
  def test_output_m254; assert_in_epsilon(6.920126173894529, worksheet.output_m254, 0.001); end
  def test_output_r254; assert_in_epsilon(7.205143913490148, worksheet.output_r254, 0.001); end
  def test_output_w254; assert_in_epsilon(6.715928995253674, worksheet.output_w254, 0.001); end
  def test_output_ab254; assert_in_epsilon(5.78262110784015, worksheet.output_ab254, 0.001); end
  def test_output_ac210; assert_in_epsilon(5.2186, worksheet.output_ac210, 0.001); end
  def test_output_ac223; assert_in_delta(0.12409999999999999, worksheet.output_ac223, 0.001); end
  def test_output_ac236; assert_in_delta(0.17699999999999996, worksheet.output_ac236, 0.001); end
  def test_output_ac254; assert_in_epsilon(5.5197, worksheet.output_ac254, 0.001); end
  def test_output_ad223; assert_in_delta(0.09206606426283008, worksheet.output_ad223, 0.001); end
  def test_output_ad254; assert_in_epsilon(4.501630579453207, worksheet.output_ad254, 0.001); end
  def test_output_ae223; assert_in_delta(0.07448184728417055, worksheet.output_ae223, 0.001); end
  def test_output_ae254; assert_in_epsilon(4.034092687034672, worksheet.output_ae254, 0.001); end
  def test_output_af223; assert_in_delta(0.06086236062404748, worksheet.output_af223, 0.001); end
  def test_output_af254; assert_in_epsilon(3.685072838227506, worksheet.output_af254, 0.001); end
  def test_output_ag223; assert_in_delta(0.050031247303645936, worksheet.output_ag223, 0.001); end
  def test_output_ag254; assert_in_epsilon(3.4247115661660583, worksheet.output_ag254, 0.001); end
  def test_output_ah223; assert_in_delta(0.04131567341528068, worksheet.output_ah223, 0.001); end
  def test_output_ah254; assert_in_epsilon(3.242786005214108, worksheet.output_ah254, 0.001); end
  def test_output_ai223; assert_in_delta(0.03308725855195614, worksheet.output_ai223, 0.001); end
  def test_output_ai254; assert_in_epsilon(3.03262267876344, worksheet.output_ai254, 0.001); end
  def test_output_aj223; assert_in_delta(0.025461243691120322, worksheet.output_aj223, 0.001); end
  def test_output_aj254; assert_in_epsilon(2.7928119941504215, worksheet.output_aj254, 0.001); end
  def test_output_am254; assert_in_delta(-0.01976371879032468, worksheet.output_am254, 0.001); end
  def test_output_an254; assert_in_delta(-0.5499809321531886, worksheet.output_an254, 0.001); end
  def test_output_ak254; assert_in_epsilon(2.4839702487940456, worksheet.output_ak254, 0.001); end
  def test_output_ao254; assert_in_delta(-0.625022614164689, worksheet.output_ao254, 0.001); end
  def test_output_e255; assert_equal("Lime Industry", worksheet.output_e255); end
  def test_output_f255; assert_equal("TWh/yr", worksheet.output_f255); end
  def test_output_g255; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g255); end
  def test_output_h255; assert_in_epsilon(1.4801823674857828, worksheet.output_h255, 0.001); end
  def test_output_m255; assert_in_epsilon(1.546279244946419, worksheet.output_m255, 0.001); end
  def test_output_r255; assert_in_epsilon(1.6099655136796125, worksheet.output_r255, 0.001); end
  def test_output_w255; assert_in_epsilon(1.5006520625403974, worksheet.output_w255, 0.001); end
  def test_output_ab255; assert_in_epsilon(1.292107510145316, worksheet.output_ab255, 0.001); end
  def test_output_ac211; assert_in_epsilon(2.437745457007773, worksheet.output_ac211, 0.001); end
  def test_output_ac224; assert_in_delta(0.31356699564601864, worksheet.output_ac224, 0.001); end
  def test_output_ac237; assert_in_delta(0.7051257823009323, worksheet.output_ac237, 0.001); end
  def test_output_ac255; assert_in_epsilon(3.456438234954724, worksheet.output_ac255, 0.001); end
  def test_output_ad224; assert_in_delta(0.29408414064483673, worksheet.output_ad224, 0.001); end
  def test_output_ad255; assert_in_epsilon(3.3258604255088646, worksheet.output_ad255, 0.001); end
  def test_output_ae224; assert_in_delta(0.27517858337100665, worksheet.output_ae224, 0.001); end
  def test_output_ae255; assert_in_epsilon(3.1946138269547553, worksheet.output_ae255, 0.001); end
  def test_output_af224; assert_in_delta(0.2568503238245283, worksheet.output_af224, 0.001); end
  def test_output_af255; assert_in_epsilon(3.0626984392923977, worksheet.output_af255, 0.001); end
  def test_output_ag224; assert_in_delta(0.24316628407888966, worksheet.output_ag224, 0.001); end
  def test_output_ag255; assert_in_epsilon(2.9799535689596826, worksheet.output_ag255, 0.001); end
  def test_output_ah224; assert_in_delta(0.22973631736592126, worksheet.output_ah224, 0.001); end
  def test_output_ah255; assert_in_epsilon(2.8952961307081213, worksheet.output_ah255, 0.001); end
  def test_output_ai224; assert_in_delta(0.21657041344174022, worksheet.output_ai224, 0.001); end
  def test_output_ai255; assert_in_epsilon(2.8087264160238163, worksheet.output_ai255, 0.001); end
  def test_output_aj224; assert_in_delta(0.2036782437668043, worksheet.output_aj224, 0.001); end
  def test_output_aj255; assert_in_epsilon(2.720241763605276, worksheet.output_aj255, 0.001); end
  def test_output_am255; assert_in_delta(-0.006679918878604751, worksheet.output_am255, 0.001); end
  def test_output_an255; assert_in_delta(-0.23516348640242202, worksheet.output_an255, 0.001); end
  def test_output_ak255; assert_in_epsilon(2.643610169088137, worksheet.output_ak255, 0.001); end
  def test_output_ao255; assert_in_delta(0.7860030136546867, worksheet.output_ao255, 0.001); end
  def test_output_e256; assert_equal("Minerals Industry", worksheet.output_e256); end
  def test_output_f256; assert_equal("TWh/yr", worksheet.output_f256); end
  def test_output_g256; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g256); end
  def test_output_h256; assert_in_epsilon(13.74981695562558, worksheet.output_h256, 0.001); end
  def test_output_m256; assert_in_epsilon(12.947730617029261, worksheet.output_m256, 0.001); end
  def test_output_r256; assert_in_epsilon(12.404955349156253, worksheet.output_r256, 0.001); end
  def test_output_w256; assert_in_epsilon(13.158964001258862, worksheet.output_w256, 0.001); end
  def test_output_ab256; assert_in_epsilon(12.71048213670507, worksheet.output_ab256, 0.001); end
  def test_output_ac212; assert_in_delta(0, (worksheet.output_ac212||0), 0.001); end
  def test_output_ac225; assert_in_epsilon(1.7129583333333331, worksheet.output_ac225, 0.001); end
  def test_output_ac238; assert_in_epsilon(1.562138095238095, worksheet.output_ac238, 0.001); end
  def test_output_ac256; assert_in_epsilon(3.275096428571428, worksheet.output_ac256, 0.001); end
  def test_output_ad225; assert_in_epsilon(1.272820004753568, worksheet.output_ad225, 0.001); end
  def test_output_ad256; assert_in_epsilon(3.599041915963264, worksheet.output_ad256, 0.001); end
  def test_output_ae225; assert_in_delta(0.8224363086903367, worksheet.output_ae225, 0.001); end
  def test_output_ae256; assert_in_epsilon(3.517584893573374, worksheet.output_ae256, 0.001); end
  def test_output_af225; assert_in_delta(0.4251480398691385, worksheet.output_af225, 0.001); end
  def test_output_af256; assert_in_epsilon(3.6674471718659953, worksheet.output_af256, 0.001); end
  def test_output_ag225; assert_in_delta(0, (worksheet.output_ag225||0), 0.001); end
  def test_output_ag256; assert_in_epsilon(3.823516923168582, worksheet.output_ag256, 0.001); end
  def test_output_ah225; assert_in_delta(0, (worksheet.output_ah225||0), 0.001); end
  def test_output_ah256; assert_in_epsilon(3.966685389673227, worksheet.output_ah256, 0.001); end
  def test_output_ai225; assert_in_delta(0, (worksheet.output_ai225||0), 0.001); end
  def test_output_ai256; assert_in_epsilon(4.114652337278454, worksheet.output_ai256, 0.001); end
  def test_output_aj225; assert_in_delta(0, (worksheet.output_aj225||0), 0.001); end
  def test_output_aj256; assert_in_epsilon(4.26731496927383, worksheet.output_aj256, 0.001); end
  def test_output_am256; assert_in_delta(0.007548818277767433, worksheet.output_am256, 0.001); end
  def test_output_an256; assert_in_delta(0.35096444520765213, worksheet.output_an256, 0.001); end
  def test_output_ak256; assert_in_epsilon(4.424538829626562, worksheet.output_ak256, 0.001); end
  def test_output_ao256; assert_in_delta(-0.6782110740887854, worksheet.output_ao256, 0.001); end
  def test_output_e257; assert_equal("Chemicals Industry", worksheet.output_e257); end
  def test_output_f257; assert_equal("TWh/yr", worksheet.output_f257); end
  def test_output_g257; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g257); end
  def test_output_h257; assert_in_epsilon(26.61461208364439, worksheet.output_h257, 0.001); end
  def test_output_m257; assert_in_epsilon(37.16335258484, worksheet.output_m257, 0.001); end
  def test_output_r257; assert_in_epsilon(42.40534317759028, worksheet.output_r257, 0.001); end
  def test_output_w257; assert_in_epsilon(39.253887530775, worksheet.output_w257, 0.001); end
  def test_output_ab257; assert_in_epsilon(38.91646071997278, worksheet.output_ab257, 0.001); end
  def test_output_ac213; assert_in_delta(0.24032503501414013, worksheet.output_ac213, 0.001); end
  def test_output_ac226; assert_in_epsilon(2.5629090378070005, worksheet.output_ac226, 0.001); end
  def test_output_ac239; assert_in_epsilon(37.781260505078386, worksheet.output_ac239, 0.001); end
  def test_output_ac257; assert_in_epsilon(40.58449457789953, worksheet.output_ac257, 0.001); end
  def test_output_ad226; assert_in_epsilon(2.4294488129758354, worksheet.output_ad226, 0.001); end
  def test_output_ad257; assert_in_epsilon(38.78915131549277, worksheet.output_ad257, 0.001); end
  def test_output_ae226; assert_in_epsilon(2.2930680193433393, worksheet.output_ae226, 0.001); end
  def test_output_ae257; assert_in_epsilon(36.93322744402458, worksheet.output_ae257, 0.001); end
  def test_output_af226; assert_in_epsilon(2.160971439123383, worksheet.output_af226, 0.001); end
  def test_output_af257; assert_in_epsilon(35.13026992838875, worksheet.output_af257, 0.001); end
  def test_output_ag226; assert_in_epsilon(2.0331590723159656, worksheet.output_ag226, 0.001); end
  def test_output_ag257; assert_in_epsilon(33.380278768585256, worksheet.output_ag257, 0.001); end
  def test_output_ah226; assert_in_epsilon(1.9096309189210872, worksheet.output_ah226, 0.001); end
  def test_output_ah257; assert_in_epsilon(31.68325396461411, worksheet.output_ah257, 0.001); end
  def test_output_ai226; assert_in_epsilon(1.790386978938748, worksheet.output_ai226, 0.001); end
  def test_output_ai257; assert_in_epsilon(30.0391955164753, worksheet.output_ai257, 0.001); end
  def test_output_aj226; assert_in_epsilon(1.675427252368948, worksheet.output_aj226, 0.001); end
  def test_output_aj257; assert_in_epsilon(28.44810342416883, worksheet.output_aj257, 0.001); end
  def test_output_am257; assert_in_delta(-0.01021964467613623, worksheet.output_am257, 0.001); end
  def test_output_an257; assert_in_delta(-0.33693944035590717, worksheet.output_an257, 0.001); end
  def test_output_ak257; assert_in_epsilon(26.909977687694713, worksheet.output_ak257, 0.001); end
  def test_output_ao257; assert_in_delta(0.01109787372147486, worksheet.output_ao257, 0.001); end
  def test_output_e258; assert_equal("Pulp & Paper Industry", worksheet.output_e258); end
  def test_output_f258; assert_equal("TWh/yr", worksheet.output_f258); end
  def test_output_g258; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g258); end
  def test_output_h258; assert_in_epsilon(4.297435008334694, worksheet.output_h258, 0.001); end
  def test_output_m258; assert_in_epsilon(4.3407415219545555, worksheet.output_m258, 0.001); end
  def test_output_r258; assert_in_epsilon(4.623187614179112, worksheet.output_r258, 0.001); end
  def test_output_w258; assert_in_epsilon(5.623636799554722, worksheet.output_w258, 0.001); end
  def test_output_ab258; assert_in_epsilon(6.04977507963275, worksheet.output_ab258, 0.001); end
  def test_output_ac214; assert_in_epsilon(8.279500999999998, worksheet.output_ac214, 0.001); end
  def test_output_ac227; assert_in_delta(0.45363, worksheet.output_ac227, 0.001); end
  def test_output_ac240; assert_in_epsilon(2.9968619999999992, worksheet.output_ac240, 0.001); end
  def test_output_ac258; assert_in_epsilon(11.729992999999997, worksheet.output_ac258, 0.001); end
  def test_output_ad227; assert_in_delta(0.28688815770468745, worksheet.output_ad227, 0.001); end
  def test_output_ad258; assert_in_epsilon(11.436743174999997, worksheet.output_ad258, 0.001); end
  def test_output_ae227; assert_in_delta(0.1371816812625, worksheet.output_ae227, 0.001); end
  def test_output_ae258; assert_in_epsilon(11.14349335, worksheet.output_ae258, 0.001); end
  def test_output_af227; assert_in_delta(0, (worksheet.output_af227||0), 0.001); end
  def test_output_af258; assert_in_epsilon(10.850243524999998, worksheet.output_af258, 0.001); end
  def test_output_ag227; assert_in_delta(0, (worksheet.output_ag227||0), 0.001); end
  def test_output_ag258; assert_in_epsilon(10.556993699999998, worksheet.output_ag258, 0.001); end
  def test_output_ah227; assert_in_delta(0, (worksheet.output_ah227||0), 0.001); end
  def test_output_ah258; assert_in_epsilon(10.263743874999998, worksheet.output_ah258, 0.001); end
  def test_output_ai227; assert_in_delta(0, (worksheet.output_ai227||0), 0.001); end
  def test_output_ai258; assert_in_epsilon(9.97049405, worksheet.output_ai258, 0.001); end
  def test_output_aj227; assert_in_delta(0, (worksheet.output_aj227||0), 0.001); end
  def test_output_aj258; assert_in_epsilon(9.677244224999999, worksheet.output_aj258, 0.001); end
  def test_output_am258; assert_in_delta(-0.005563057351029577, worksheet.output_am258, 0.001); end
  def test_output_an258; assert_in_delta(-0.19999999999999984, worksheet.output_an258, 0.001); end
  def test_output_ak258; assert_in_epsilon(9.383994399999999, worksheet.output_ak258, 0.001); end
  def test_output_ao258; assert_in_epsilon(1.1836268336345142, worksheet.output_ao258, 0.001); end
  def test_output_e259; assert_equal("Oil & Gas Industry", worksheet.output_e259); end
  def test_output_f259; assert_equal("TWh/yr", worksheet.output_f259); end
  def test_output_g259; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g259); end
  def test_output_h259; assert_in_epsilon(15.665450305555554, worksheet.output_h259, 0.001); end
  def test_output_m259; assert_in_epsilon(17.89842569405039, worksheet.output_m259, 0.001); end
  def test_output_r259; assert_in_epsilon(17.976915309166667, worksheet.output_r259, 0.001); end
  def test_output_w259; assert_in_epsilon(18.223878578888886, worksheet.output_w259, 0.001); end
  def test_output_ab259; assert_in_epsilon(21.15161443611111, worksheet.output_ab259, 0.001); end
  def test_output_ac215; assert_in_epsilon(3.4114992046686248, worksheet.output_ac215, 0.001); end
  def test_output_ac228; assert_in_epsilon(1.285767807938034, worksheet.output_ac228, 0.001); end
  def test_output_ac241; assert_in_epsilon(8.250620285095483, worksheet.output_ac241, 0.001); end
  def test_output_ac259; assert_in_epsilon(12.947887297702142, worksheet.output_ac259, 0.001); end
  def test_output_ad259; assert_in_epsilon(12.582856438938608, worksheet.output_ad259, 0.001); end
  def test_output_ae259; assert_in_epsilon(10.831829238027904, worksheet.output_ae259, 0.001); end
  def test_output_af259; assert_in_epsilon(9.183656465477348, worksheet.output_af259, 0.001); end
  def test_output_ag259; assert_in_epsilon(6.40344730559941, worksheet.output_ag259, 0.001); end
  def test_output_ah259; assert_in_epsilon(5.221838756319723, worksheet.output_ah259, 0.001); end
  def test_output_ai259; assert_in_epsilon(4.259194600874839, worksheet.output_ai259, 0.001); end
  def test_output_aj259; assert_in_epsilon(3.4033260430547845, worksheet.output_aj259, 0.001); end
  def test_output_am259; assert_in_delta(-0.038979751976879085, worksheet.output_am259, 0.001); end
  def test_output_an259; assert_in_delta(-0.796154315440758, worksheet.output_an259, 0.001); end
  def test_output_ak259; assert_in_epsilon(2.6393709497960067, worksheet.output_ak259, 0.001); end
  def test_output_ao259; assert_in_delta(-0.8315164327666988, worksheet.output_ao259, 0.001); end
  def test_output_e260; assert_equal("Food, drinks and tobacco Industry", worksheet.output_e260); end
  def test_output_f260; assert_equal("TWh/yr", worksheet.output_f260); end
  def test_output_g260; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g260); end
  def test_output_h260; assert_in_epsilon(11.405010130573304, worksheet.output_h260, 0.001); end
  def test_output_m260; assert_in_epsilon(11.129600734792305, worksheet.output_m260, 0.001); end
  def test_output_r260; assert_in_epsilon(9.125679593118583, worksheet.output_r260, 0.001); end
  def test_output_w260; assert_in_epsilon(9.935619273628443, worksheet.output_w260, 0.001); end
  def test_output_ab260; assert_in_epsilon(10.030134709179222, worksheet.output_ab260, 0.001); end
  def test_output_ac216; assert_in_epsilon(1.167226, worksheet.output_ac216, 0.001); end
  def test_output_ac229; assert_in_delta(0.876583, worksheet.output_ac229, 0.001); end
  def test_output_ac242; assert_in_epsilon(9.033314000000003, worksheet.output_ac242, 0.001); end
  def test_output_ac260; assert_in_epsilon(11.077123000000002, worksheet.output_ac260, 0.001); end
  def test_output_ad229; assert_in_delta(0.5482558034670284, worksheet.output_ad229, 0.001); end
  def test_output_ad260; assert_in_epsilon(10.340519764265967, worksheet.output_ad260, 0.001); end
  def test_output_ae229; assert_in_delta(0.25938429458761203, worksheet.output_ae229, 0.001); end
  def test_output_ae260; assert_in_epsilon(9.640480792749377, worksheet.output_ae260, 0.001); end
  def test_output_af229; assert_in_delta(0, (worksheet.output_af229||0), 0.001); end
  def test_output_af260; assert_in_epsilon(8.975139600036185, worksheet.output_af260, 0.001); end
  def test_output_ag229; assert_in_delta(0, (worksheet.output_ag229||0), 0.001); end
  def test_output_ag260; assert_in_epsilon(8.342727564324536, worksheet.output_ag260, 0.001); end
  def test_output_ah229; assert_in_delta(0, (worksheet.output_ah229||0), 0.001); end
  def test_output_ah260; assert_in_epsilon(7.800990312504641, worksheet.output_ah260, 0.001); end
  def test_output_ai229; assert_in_delta(0, (worksheet.output_ai229||0), 0.001); end
  def test_output_ai260; assert_in_epsilon(7.283926469753139, worksheet.output_ai260, 0.001); end
  def test_output_aj229; assert_in_delta(0, (worksheet.output_aj229||0), 0.001); end
  def test_output_aj260; assert_in_epsilon(6.788938686239717, worksheet.output_aj260, 0.001); end
  def test_output_am260; assert_in_delta(-0.013951893628185608, worksheet.output_am260, 0.001); end
  def test_output_an260; assert_in_delta(-0.4299353171096687, worksheet.output_an260, 0.001); end
  def test_output_ak260; assert_in_epsilon(6.314676610332197, worksheet.output_ak260, 0.001); end
  def test_output_ao260; assert_in_delta(-0.44632433132132854, worksheet.output_ao260, 0.001); end
  def test_output_e261; assert_equal("Machines", worksheet.output_e261); end
  def test_output_f261; assert_equal("TWh/yr", worksheet.output_f261); end
  def test_output_g261; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g261); end
  def test_output_h261; assert_in_delta(0, (worksheet.output_h261||0), 0.001); end
  def test_output_m261; assert_in_delta(0, (worksheet.output_m261||0), 0.001); end
  def test_output_r261; assert_in_delta(0, (worksheet.output_r261||0), 0.001); end
  def test_output_w261; assert_in_delta(0, (worksheet.output_w261||0), 0.001); end
  def test_output_ab261; assert_in_delta(0, (worksheet.output_ab261||0), 0.001); end
  def test_output_ac217; assert_in_delta(0, (worksheet.output_ac217||0), 0.001); end
  def test_output_ac230; assert_in_delta(0, (worksheet.output_ac230||0), 0.001); end
  def test_output_ac243; assert_in_delta(0, (worksheet.output_ac243||0), 0.001); end
  def test_output_ac261; assert_in_delta(0, (worksheet.output_ac261||0), 0.001); end
  def test_output_ad230; assert_in_delta(0, (worksheet.output_ad230||0), 0.001); end
  def test_output_ad261; assert_in_delta(0, (worksheet.output_ad261||0), 0.001); end
  def test_output_ae230; assert_in_delta(0, (worksheet.output_ae230||0), 0.001); end
  def test_output_ae261; assert_in_delta(0, (worksheet.output_ae261||0), 0.001); end
  def test_output_af230; assert_in_delta(0, (worksheet.output_af230||0), 0.001); end
  def test_output_af261; assert_in_delta(0, (worksheet.output_af261||0), 0.001); end
  def test_output_ag230; assert_in_delta(0, (worksheet.output_ag230||0), 0.001); end
  def test_output_ag261; assert_in_delta(0, (worksheet.output_ag261||0), 0.001); end
  def test_output_ah230; assert_in_delta(0, (worksheet.output_ah230||0), 0.001); end
  def test_output_ah261; assert_in_delta(0, (worksheet.output_ah261||0), 0.001); end
  def test_output_ai230; assert_in_delta(0, (worksheet.output_ai230||0), 0.001); end
  def test_output_ai261; assert_in_delta(0, (worksheet.output_ai261||0), 0.001); end
  def test_output_aj230; assert_in_delta(0, (worksheet.output_aj230||0), 0.001); end
  def test_output_aj261; assert_in_delta(0, (worksheet.output_aj261||0), 0.001); end
  def test_output_am261; assert_equal("", worksheet.output_am261); end
  def test_output_an261; assert_equal("", worksheet.output_an261); end
  def test_output_ak261; assert_in_delta(0, (worksheet.output_ak261||0), 0.001); end
  def test_output_ao261; assert_equal("", worksheet.output_ao261); end
  def test_output_e262; assert_equal("Non-Ferrous metals", worksheet.output_e262); end
  def test_output_f262; assert_equal("TWh/yr", worksheet.output_f262); end
  def test_output_g262; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g262); end
  def test_output_h262; assert_in_epsilon(2.4708324344366974, worksheet.output_h262, 0.001); end
  def test_output_m262; assert_in_epsilon(2.297435508603964, worksheet.output_m262, 0.001); end
  def test_output_r262; assert_in_epsilon(1.8662654577978999, worksheet.output_r262, 0.001); end
  def test_output_w262; assert_in_epsilon(2.1985910586505724, worksheet.output_w262, 0.001); end
  def test_output_ab262; assert_in_epsilon(1.9320511128577749, worksheet.output_ab262, 0.001); end
  def test_output_ac218; assert_in_delta(0.24087345202777996, worksheet.output_ac218, 0.001); end
  def test_output_ac231; assert_in_delta(0.1369721865416833, worksheet.output_ac231, 0.001); end
  def test_output_ac244; assert_in_epsilon(1.5541568631772151, worksheet.output_ac244, 0.001); end
  def test_output_ac262; assert_in_epsilon(1.9320025017466784, worksheet.output_ac262, 0.001); end
  def test_output_ad231; assert_in_delta(0.0894770808583546, worksheet.output_ad231, 0.001); end
  def test_output_ad262; assert_in_epsilon(1.8837024392030117, worksheet.output_ad262, 0.001); end
  def test_output_ae231; assert_in_delta(0.0442420162529637, worksheet.output_ae231, 0.001); end
  def test_output_ae262; assert_in_epsilon(1.8354023766593444, worksheet.output_ae262, 0.001); end
  def test_output_af231; assert_in_delta(0, (worksheet.output_af231||0), 0.001); end
  def test_output_af262; assert_in_epsilon(1.7871023141156779, worksheet.output_af262, 0.001); end
  def test_output_ag231; assert_in_delta(0, (worksheet.output_ag231||0), 0.001); end
  def test_output_ag262; assert_in_epsilon(1.7388022515720105, worksheet.output_ag262, 0.001); end
  def test_output_ah231; assert_in_delta(0, (worksheet.output_ah231||0), 0.001); end
  def test_output_ah262; assert_in_epsilon(1.6905021890283436, worksheet.output_ah262, 0.001); end
  def test_output_ai231; assert_in_delta(0, (worksheet.output_ai231||0), 0.001); end
  def test_output_ai262; assert_in_epsilon(1.6422021264846767, worksheet.output_ai262, 0.001); end
  def test_output_aj231; assert_in_delta(0, (worksheet.output_aj231||0), 0.001); end
  def test_output_aj262; assert_in_epsilon(1.5939020639410098, worksheet.output_aj262, 0.001); end
  def test_output_am262; assert_in_delta(-0.005563057351029577, worksheet.output_am262, 0.001); end
  def test_output_an262; assert_in_delta(-0.19999999999999996, worksheet.output_an262, 0.001); end
  def test_output_ak262; assert_in_epsilon(1.5456020013973428, worksheet.output_ak262, 0.001); end
  def test_output_ao262; assert_in_delta(-0.37446101975356716, worksheet.output_ao262, 0.001); end
  def test_output_e263; assert_equal("Construction", worksheet.output_e263); end
  def test_output_f263; assert_equal("TWh/yr", worksheet.output_f263); end
  def test_output_g263; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g263); end
  def test_output_h263; assert_in_epsilon(5.156467225333333, worksheet.output_h263, 0.001); end
  def test_output_m263; assert_in_epsilon(5.557114136777778, worksheet.output_m263, 0.001); end
  def test_output_r263; assert_in_epsilon(4.578103091666666, worksheet.output_r263, 0.001); end
  def test_output_w263; assert_in_epsilon(4.940872507388889, worksheet.output_w263, 0.001); end
  def test_output_ab263; assert_in_epsilon(4.410903472722222, worksheet.output_ab263, 0.001); end
  def test_output_ac219; assert_in_delta(0.013666598051580247, worksheet.output_ac219, 0.001); end
  def test_output_ac232; assert_in_delta(0.03358734112810429, worksheet.output_ac232, 0.001); end
  def test_output_ac245; assert_in_epsilon(1.9215543902323706, worksheet.output_ac245, 0.001); end
  def test_output_ac263; assert_in_epsilon(1.968808329412055, worksheet.output_ac263, 0.001); end
  def test_output_ad232; assert_in_delta(0.019472351090356207, worksheet.output_ad232, 0.001); end
  def test_output_ad263; assert_in_epsilon(2.2828438174792205, worksheet.output_ad263, 0.001); end
  def test_output_ae232; assert_in_delta(0, (worksheet.output_ae232||0), 0.001); end
  def test_output_ae263; assert_in_epsilon(2.6452804703225796, worksheet.output_ae263, 0.001); end
  def test_output_af232; assert_in_delta(0, (worksheet.output_af232||0), 0.001); end
  def test_output_af263; assert_in_epsilon(3.063136773935335, worksheet.output_af263, 0.001); end
  def test_output_ag232; assert_in_delta(0, (worksheet.output_ag232||0), 0.001); end
  def test_output_ag263; assert_in_epsilon(2.980349293558704, worksheet.output_ag263, 0.001); end
  def test_output_ah232; assert_in_delta(0, (worksheet.output_ah232||0), 0.001); end
  def test_output_ah263; assert_in_epsilon(2.8975618131820737, worksheet.output_ah263, 0.001); end
  def test_output_ai232; assert_in_delta(0, (worksheet.output_ai232||0), 0.001); end
  def test_output_ai263; assert_in_epsilon(2.8147743328054426, worksheet.output_ai263, 0.001); end
  def test_output_aj232; assert_in_delta(0, (worksheet.output_aj232||0), 0.001); end
  def test_output_aj263; assert_in_epsilon(2.731986852428812, worksheet.output_aj263, 0.001); end
  def test_output_am263; assert_in_delta(0.007448327311484482, worksheet.output_am263, 0.001); end
  def test_output_an263; assert_in_delta(0.3455852113564104, worksheet.output_an263, 0.001); end
  def test_output_ak263; assert_in_epsilon(2.6491993720521814, worksheet.output_ak263, 0.001); end
  def test_output_ao263; assert_in_delta(-0.4862375234274998, worksheet.output_ao263, 0.001); end
  def test_output_e264; assert_equal("Other", worksheet.output_e264); end
  def test_output_f264; assert_equal("TWh/yr", worksheet.output_f264); end
  def test_output_g264; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g264); end
  def test_output_h264; assert_in_epsilon(4.2739570675816845, worksheet.output_h264, 0.001); end
  def test_output_m264; assert_in_epsilon(4.108851714138953, worksheet.output_m264, 0.001); end
  def test_output_r264; assert_in_epsilon(8.025317955286493, worksheet.output_r264, 0.001); end
  def test_output_w264; assert_in_epsilon(5.574794722252346, worksheet.output_w264, 0.001); end
  def test_output_ab264; assert_in_epsilon(6.392104595476129, worksheet.output_ab264, 0.001); end
  def test_output_ac220; assert_in_delta(0, (worksheet.output_ac220||0), 0.001); end
  def test_output_ac233; assert_in_delta(0, (worksheet.output_ac233||0), 0.001); end
  def test_output_ac246; assert_in_delta(0, (worksheet.output_ac246||0), 0.001); end
  def test_output_ac264; assert_in_delta(0, (worksheet.output_ac264||0), 0.001); end
  def test_output_ad264; assert_in_delta(0, (worksheet.output_ad264||0), 0.001); end
  def test_output_ae264; assert_in_delta(0, (worksheet.output_ae264||0), 0.001); end
  def test_output_af264; assert_in_delta(0, (worksheet.output_af264||0), 0.001); end
  def test_output_ag264; assert_in_delta(0, (worksheet.output_ag264||0), 0.001); end
  def test_output_ah264; assert_in_delta(0, (worksheet.output_ah264||0), 0.001); end
  def test_output_ai264; assert_in_delta(0, (worksheet.output_ai264||0), 0.001); end
  def test_output_aj264; assert_in_delta(0, (worksheet.output_aj264||0), 0.001); end
  def test_output_am264; assert_equal("", worksheet.output_am264); end
  def test_output_an264; assert_equal("", worksheet.output_an264); end
  def test_output_ak264; assert_in_delta(0, (worksheet.output_ak264||0), 0.001); end
  def test_output_ao264; assert_in_delta(-1, worksheet.output_ao264, 0.001); end
  def test_output_e265; assert_equal("Industry Heat demand", worksheet.output_e265); end
  def test_output_f265; assert_equal("TWh/yr", worksheet.output_f265); end
  def test_output_g265; assert_equal("not same as above as includes other heats (not only liquid)", worksheet.output_g265); end
  def test_output_h265; assert_in_epsilon(151.92181548358934, worksheet.output_h265, 0.001); end
  def test_output_m265; assert_in_epsilon(160.23925753662232, worksheet.output_m265, 0.001); end
  def test_output_r265; assert_in_epsilon(166.18030819823727, worksheet.output_r265, 0.001); end
  def test_output_w265; assert_in_epsilon(156.3645563292865, worksheet.output_w265, 0.001); end
  def test_output_ab265; assert_in_epsilon(140.09498021251187, worksheet.output_ab265, 0.001); end
  def test_output_ad265; assert_in_epsilon(119.20456912932954, worksheet.output_ad265, 0.001); end
  def test_output_ae265; assert_in_epsilon(113.81789271539922, worksheet.output_ae265, 0.001); end
  def test_output_af265; assert_in_epsilon(109.02921858101892, worksheet.output_af265, 0.001); end
  def test_output_ag265; assert_in_epsilon(95.53291485775806, worksheet.output_ag265, 0.001); end
  def test_output_ah265; assert_in_epsilon(91.25613321530176, worksheet.output_ah265, 0.001); end
  def test_output_ai265; assert_in_epsilon(87.25277527839441, worksheet.output_ai265, 0.001); end
  def test_output_aj265; assert_in_epsilon(83.4065398503202, worksheet.output_aj265, 0.001); end
  def test_output_am265; assert_in_delta(-0.01130777102129188, worksheet.output_am265, 0.001); end
  def test_output_an265; assert_in_delta(-0.3654807147571013, worksheet.output_an265, 0.001); end
  def test_output_ak265; assert_in_epsilon(80.70669883563369, worksheet.output_ak265, 0.001); end
  def test_output_ao265; assert_in_delta(-0.46876162203082905, worksheet.output_ao265, 0.001); end
  def test_output_e266; assert_equal("Total heat demand", worksheet.output_e266); end
  def test_output_f266; assert_equal("TWh/yr", worksheet.output_f266); end
  def test_output_g266; assert_equal("sum of above", worksheet.output_g266); end
  def test_output_h266; assert_in_epsilon(299.32767238850073, worksheet.output_h266, 0.001); end
  def test_output_m266; assert_in_epsilon(322.85497872044476, worksheet.output_m266, 0.001); end
  def test_output_r266; assert_in_epsilon(332.0274029559998, worksheet.output_r266, 0.001); end
  def test_output_w266; assert_in_epsilon(332.2248735232867, worksheet.output_w266, 0.001); end
  def test_output_ab266; assert_in_epsilon(473.9615021239927, worksheet.output_ab266, 0.001); end
  def test_output_ac221; assert_in_epsilon(46.22254257821306, worksheet.output_ac221, 0.001); end
  def test_output_ac234; assert_in_epsilon(9.967839011753194, worksheet.output_ac234, 0.001); end
  def test_output_ac247; assert_in_epsilon(71.00307133201794, worksheet.output_ac247, 0.001); end
  def test_output_ac265; assert_in_epsilon(127.19345292198419, worksheet.output_ac265, 0.001); end
  def test_output_ac251; assert_in_epsilon(26.175415496219273, worksheet.output_ac251, 0.001); end
  def test_output_ac266; assert_in_epsilon(339.85116963696487, worksheet.output_ac266, 0.001); end
  def test_output_ad266; assert_in_epsilon(327.4602882190688, worksheet.output_ad266, 0.001); end
  def test_output_ae266; assert_in_epsilon(307.9858004636314, worksheet.output_ae266, 0.001); end
  def test_output_af266; assert_in_epsilon(289.35698444885656, worksheet.output_af266, 0.001); end
  def test_output_ag266; assert_in_epsilon(259.7590560262273, worksheet.output_ag266, 0.001); end
  def test_output_ah266; assert_in_epsilon(241.4507757938286, worksheet.output_ah266, 0.001); end
  def test_output_ai266; assert_in_epsilon(226.49915353309893, worksheet.output_ai266, 0.001); end
  def test_output_aj266; assert_in_epsilon(213.08011631527154, worksheet.output_aj266, 0.001); end
  def test_output_am266; assert_in_delta(-0.012897435286200132, worksheet.output_am266, 0.001); end
  def test_output_an266; assert_in_delta(-0.40503528232958785, worksheet.output_an266, 0.001); end
  def test_output_ak266; assert_in_epsilon(202.19945519301615, worksheet.output_ak266, 0.001); end
  def test_output_ao266; assert_in_delta(-0.3244879313043292, worksheet.output_ao266, 0.001); end
  def test_output_b267; assert_equal("REF", worksheet.output_b267); end
  def test_output_e267; assert_equal("Reference scenario", worksheet.output_e267); end
  def test_output_f267; assert_equal("TWh/yr", worksheet.output_f267); end
  def test_output_g267; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g267); end
  def test_output_ac267; assert_in_epsilon(363.49269692749283, worksheet.output_ac267, 0.001); end
  def test_output_ad267; assert_in_epsilon(365.07393932629054, worksheet.output_ad267, 0.001); end
  def test_output_ae267; assert_in_epsilon(372.2612995928843, worksheet.output_ae267, 0.001); end
  def test_output_af267; assert_in_epsilon(376.7152271386381, worksheet.output_af267, 0.001); end
  def test_output_ag267; assert_in_epsilon(381.03298950389626, worksheet.output_ag267, 0.001); end
  def test_output_ah267; assert_in_epsilon(384.0181036068505, worksheet.output_ah267, 0.001); end
  def test_output_ai267; assert_in_epsilon(388.26932467312133, worksheet.output_ai267, 0.001); end
  def test_output_aj267; assert_in_epsilon(391.94697803980023, worksheet.output_aj267, 0.001); end
  def test_output_ak267; assert_in_epsilon(397.55642547540293, worksheet.output_ak267, 0.001); end
  def test_output_am267; assert_in_delta(0.002241951150351529, worksheet.output_am267, 0.001); end
  def test_output_an267; assert_in_delta(0.0937122776766679, worksheet.output_an267, 0.001); end
  def test_output_ao267; assert_equal("", worksheet.output_ao267); end
  def test_output_b268; assert_equal("Heat production", worksheet.output_b268); end
  def test_output_am268; assert_equal("", worksheet.output_am268); end
  def test_output_an268; assert_equal("", worksheet.output_an268); end
  def test_output_ao268; assert_equal("", worksheet.output_ao268); end
  def test_output_c269; assert_equal("V.01", worksheet.output_c269); end
  def test_output_d269; assert_equal("IX.a", worksheet.output_d269); end
  def test_output_e269; assert_equal("Electricity (delivered to end user) / Domestic space heating and hot water", worksheet.output_e269); end
  def test_output_f269; assert_equal("TWh/yr", worksheet.output_f269); end
  def test_output_ad269; assert_in_epsilon(6.926474804916896, worksheet.output_ad269, 0.001); end
  def test_output_ae269; assert_in_epsilon(8.89004591131163, worksheet.output_ae269, 0.001); end
  def test_output_af269; assert_in_epsilon(10.82202313136418, worksheet.output_af269, 0.001); end
  def test_output_ag269; assert_in_epsilon(12.400782439107877, worksheet.output_ag269, 0.001); end
  def test_output_ah269; assert_in_epsilon(13.897376987765817, worksheet.output_ah269, 0.001); end
  def test_output_ai269; assert_in_epsilon(15.335888663399848, worksheet.output_ai269, 0.001); end
  def test_output_aj269; assert_in_epsilon(16.717323798453457, worksheet.output_aj269, 0.001); end
  def test_output_am269; assert_in_delta(0.034151271232713665, worksheet.output_am269, 0.001); end
  def test_output_an269; assert_in_epsilon(2.8314468544645646, worksheet.output_an269, 0.001); end
  def test_output_ak269; assert_in_epsilon(18.454889462182376, worksheet.output_ak269, 0.001); end
  def test_output_ao269; assert_equal("", worksheet.output_ao269); end
  def test_output_c270; assert_equal("V.01", worksheet.output_c270); end
  def test_output_d270; assert_equal("IX.c", worksheet.output_d270); end
  def test_output_e270; assert_equal("Electricity (delivered to end user) / Commercial heating and cooling", worksheet.output_e270); end
  def test_output_f270; assert_equal("TWh/yr", worksheet.output_f270); end
  def test_output_ad270; assert_in_delta(0.3280149751149168, worksheet.output_ad270, 0.001); end
  def test_output_ae270; assert_in_epsilon(1.0727468048069126, worksheet.output_ae270, 0.001); end
  def test_output_af270; assert_in_epsilon(1.6866028468647998, worksheet.output_af270, 0.001); end
  def test_output_ag270; assert_in_epsilon(2.187405319740771, worksheet.output_ag270, 0.001); end
  def test_output_ah270; assert_in_epsilon(2.5780692754339696, worksheet.output_ah270, 0.001); end
  def test_output_ai270; assert_in_epsilon(2.874964938022951, worksheet.output_ai270, 0.001); end
  def test_output_aj270; assert_in_epsilon(3.0802344216773796, worksheet.output_aj270, 0.001); end
  def test_output_am270; assert_in_delta(0.06366114832492609, worksheet.output_am270, 0.001); end
  def test_output_an270; assert_in_epsilon(10.806790394399556, worksheet.output_an270, 0.001); end
  def test_output_ak270; assert_in_epsilon(3.6069537625899954, worksheet.output_ak270, 0.001); end
  def test_output_ao270; assert_equal("", worksheet.output_ao270); end
  def test_output_e271; assert_equal("Electricity ", worksheet.output_e271); end
  def test_output_f271; assert_equal("TWh/yr", worksheet.output_f271); end
  def test_output_ad271; assert_in_epsilon(7.254489780031812, worksheet.output_ad271, 0.001); end
  def test_output_ae271; assert_in_epsilon(9.962792716118543, worksheet.output_ae271, 0.001); end
  def test_output_af271; assert_in_epsilon(12.508625978228979, worksheet.output_af271, 0.001); end
  def test_output_ag271; assert_in_epsilon(14.588187758848647, worksheet.output_ag271, 0.001); end
  def test_output_ah271; assert_in_epsilon(16.475446263199785, worksheet.output_ah271, 0.001); end
  def test_output_ai271; assert_in_epsilon(18.210853601422798, worksheet.output_ai271, 0.001); end
  def test_output_aj271; assert_in_epsilon(19.797558220130835, worksheet.output_aj271, 0.001); end
  def test_output_am271; assert_in_delta(0.037181251612778965, worksheet.output_am271, 0.001); end
  def test_output_an271; assert_in_epsilon(3.307113431635571, worksheet.output_an271, 0.001); end
  def test_output_ak271; assert_in_epsilon(22.06184322477237, worksheet.output_ak271, 0.001); end
  def test_output_ao271; assert_equal("", worksheet.output_ao271); end
  def test_output_c272; assert_equal("V.03", worksheet.output_c272); end
  def test_output_d272; assert_equal("IX.a", worksheet.output_d272); end
  def test_output_e272; assert_equal("Solid hydrocarbons / Domestic space heating and hot water", worksheet.output_e272); end
  def test_output_f272; assert_equal("TWh/yr", worksheet.output_f272); end
  def test_output_ac272; assert_in_epsilon(2.9358791259056303, worksheet.output_ac272, 0.001); end
  def test_output_ad272; assert_in_epsilon(3.156543087104834, worksheet.output_ad272, 0.001); end
  def test_output_ae272; assert_in_epsilon(3.3045036186401924, worksheet.output_ae272, 0.001); end
  def test_output_af272; assert_in_epsilon(3.4566185445709667, worksheet.output_af272, 0.001); end
  def test_output_ag272; assert_in_epsilon(3.513009658466491, worksheet.output_ag272, 0.001); end
  def test_output_ah272; assert_in_epsilon(3.579223872359572, worksheet.output_ah272, 0.001); end
  def test_output_ai272; assert_in_epsilon(3.6588708036405038, worksheet.output_ai272, 0.001); end
  def test_output_aj272; assert_in_epsilon(3.7505592565583696, worksheet.output_aj272, 0.001); end
  def test_output_am272; assert_in_delta(0.007194733307716028, worksheet.output_am272, 0.001); end
  def test_output_an272; assert_in_delta(0.3321031214748895, worksheet.output_an272, 0.001); end
  def test_output_ak272; assert_in_epsilon(3.91089374789186, worksheet.output_ak272, 0.001); end
  def test_output_ao272; assert_equal("", worksheet.output_ao272); end
  def test_output_c273; assert_equal("V.03", worksheet.output_c273); end
  def test_output_d273; assert_equal("IX.c", worksheet.output_d273); end
  def test_output_e273; assert_equal("Solid hydrocarbons / Commercial heating and cooling", worksheet.output_e273); end
  def test_output_f273; assert_equal("TWh/yr", worksheet.output_f273); end
  def test_output_ac273; assert_in_delta(0.12400592639987766, worksheet.output_ac273, 0.001); end
  def test_output_ad273; assert_in_delta(0.11812600223281672, worksheet.output_ad273, 0.001); end
  def test_output_ae273; assert_in_delta(0.24579244950696538, worksheet.output_ae273, 0.001); end
  def test_output_af273; assert_in_delta(0.346774839270363, worksheet.output_af273, 0.001); end
  def test_output_ag273; assert_in_delta(0.425663965310519, worksheet.output_ag273, 0.001); end
  def test_output_ah273; assert_in_delta(0.4819564693996422, worksheet.output_ah273, 0.001); end
  def test_output_ai273; assert_in_delta(0.519269969776512, worksheet.output_ai273, 0.001); end
  def test_output_aj273; assert_in_delta(0.5377305672742045, worksheet.output_aj273, 0.001); end
  def test_output_am273; assert_in_delta(0.040541505905675956, worksheet.output_am273, 0.001); end
  def test_output_an273; assert_in_epsilon(3.9020341719498095, worksheet.output_an273, 0.001); end
  def test_output_ak273; assert_in_delta(0.6078812887364933, worksheet.output_ak273, 0.001); end
  def test_output_ao273; assert_equal("", worksheet.output_ao273); end
  def test_output_c274; assert_equal("V.03", worksheet.output_c274); end
  def test_output_d274; assert_equal("XI", worksheet.output_d274); end
  def test_output_e274; assert_equal("Solid hydrocarbons / Industry", worksheet.output_e274); end
  def test_output_f274; assert_equal("TWh/yr", worksheet.output_f274); end
  def test_output_ac274; assert_in_epsilon(46.22254257821306, worksheet.output_ac274, 0.001); end
  def test_output_ad274; assert_in_epsilon(40.28254225509218, worksheet.output_ad274, 0.001); end
  def test_output_ae274; assert_in_epsilon(38.72612608764173, worksheet.output_ae274, 0.001); end
  def test_output_af274; assert_in_epsilon(37.640729539809286, worksheet.output_af274, 0.001); end
  def test_output_ag274; assert_in_epsilon(27.60116702659421, worksheet.output_ag274, 0.001); end
  def test_output_ah274; assert_in_epsilon(27.075636565569624, worksheet.output_ah274, 0.001); end
  def test_output_ai274; assert_in_epsilon(26.52290622406896, worksheet.output_ai274, 0.001); end
  def test_output_aj274; assert_in_epsilon(25.914571590104504, worksheet.output_aj274, 0.001); end
  def test_output_am274; assert_in_delta(-0.014551356527446435, worksheet.output_am274, 0.001); end
  def test_output_an274; assert_in_delta(-0.4436349503389394, worksheet.output_an274, 0.001); end
  def test_output_ak274; assert_in_epsilon(25.716607196987994, worksheet.output_ak274, 0.001); end
  def test_output_ao274; assert_equal("", worksheet.output_ao274); end
  def test_output_c275; assert_equal("V.03", worksheet.output_c275); end
  def test_output_d275; assert_equal("V", worksheet.output_d275); end
  def test_output_e275; assert_equal("Solid hydrocarbons / Bioenergy", worksheet.output_e275); end
  def test_output_f275; assert_equal("TWh/yr", worksheet.output_f275); end
  def test_output_am275; assert_in_delta(0.025294348680194645, worksheet.output_am275, 0.001); end
  def test_output_an275; assert_in_epsilon(1.7160799131527664, worksheet.output_an275, 0.001); end
  def test_output_ak275; assert_in_delta(1, worksheet.output_ak275, 0.001); end
  def test_output_ao275; assert_equal("", worksheet.output_ao275); end
  def test_output_e276; assert_equal("Coal", worksheet.output_e276); end
  def test_output_f276; assert_equal("TWh/yr", worksheet.output_f276); end
  def test_output_ad276; assert_in_epsilon(24.341799940577832, worksheet.output_ad276, 0.001); end
  def test_output_ae276; assert_in_epsilon(21.590416471536045, worksheet.output_ae276, 0.001); end
  def test_output_af276; assert_in_epsilon(12.9331444484002, worksheet.output_af276, 0.001); end
  def test_output_ag276; assert_in_epsilon(4.123135365861486, worksheet.output_ag276, 0.001); end
  def test_output_ah276; assert_in_epsilon(2.360812641135554, worksheet.output_ah276, 0.001); end
  def test_output_ai276; assert_in_delta(0.7520495013380334, worksheet.output_ai276, 0.001); end
  def test_output_aj276; assert_in_delta(0, (worksheet.output_aj276||0), 0.001); end
  def test_output_am276; assert_in_delta(-1, worksheet.output_am276, 0.001); end
  def test_output_an276; assert_in_delta(-1, worksheet.output_an276, 0.001); end
  def test_output_ak276; assert_in_delta(0, (worksheet.output_ak276||0), 0.001); end
  def test_output_ao276; assert_equal("", worksheet.output_ao276); end
  def test_output_c277; assert_equal("V.04", worksheet.output_c277); end
  def test_output_d277; assert_equal("IX.a", worksheet.output_d277); end
  def test_output_e277; assert_equal("Liquid hydrocarbons / Domestic space heating and hot water", worksheet.output_e277); end
  def test_output_f277; assert_equal("TWh/yr", worksheet.output_f277); end
  def test_output_am277; assert_in_delta(-0.05050359379108904, worksheet.output_am277, 0.001); end
  def test_output_an277; assert_in_delta(-0.8741848291104831, worksheet.output_an277, 0.001); end
  def test_output_ak277; assert_in_epsilon(4.0924415046933, worksheet.output_ak277, 0.001); end
  def test_output_ao277; assert_equal("", worksheet.output_ao277); end
  def test_output_c278; assert_equal("V.04", worksheet.output_c278); end
  def test_output_d278; assert_equal("IX.c", worksheet.output_d278); end
  def test_output_e278; assert_equal("Liquid hydrocarbons / Commercial heating and cooling", worksheet.output_e278); end
  def test_output_f278; assert_equal("TWh/yr", worksheet.output_f278); end
  def test_output_am278; assert_in_delta(-0.061753993167882215, worksheet.output_am278, 0.001); end
  def test_output_an278; assert_in_delta(-0.9218967709573087, worksheet.output_an278, 0.001); end
  def test_output_ak278; assert_in_delta(0.6535247673824173, worksheet.output_ak278, 0.001); end
  def test_output_ao278; assert_equal("", worksheet.output_ao278); end
  def test_output_c279; assert_equal("V.04", worksheet.output_c279); end
  def test_output_d279; assert_equal("XII", worksheet.output_d279); end
  def test_output_e279; assert_equal("Liquid hydrocarbons / Transport", worksheet.output_e279); end
  def test_output_f279; assert_equal("TWh/yr", worksheet.output_f279); end
  def test_output_am279; assert_in_delta(-0.02796549064985787, worksheet.output_am279, 0.001); end
  def test_output_an279; assert_in_delta(-0.6784360578717616, worksheet.output_an279, 0.001); end
  def test_output_ak279; assert_in_epsilon(36.750308996068114, worksheet.output_ak279, 0.001); end
  def test_output_ao279; assert_equal("", worksheet.output_ao279); end
  def test_output_c280; assert_equal("V.04", worksheet.output_c280); end
  def test_output_d280; assert_equal("XI", worksheet.output_d280); end
  def test_output_e280; assert_equal("Liquid hydrocarbons / Industry", worksheet.output_e280); end
  def test_output_f280; assert_equal("TWh/yr", worksheet.output_f280); end
  def test_output_ac280; assert_in_epsilon(9.967839011753194, worksheet.output_ac280, 0.001); end
  def test_output_ad280; assert_in_epsilon(8.33085490521796, worksheet.output_ad280, 0.001); end
  def test_output_ae280; assert_in_epsilon(7.020175393604117, worksheet.output_ae280, 0.001); end
  def test_output_af280; assert_in_epsilon(5.862034377078839, worksheet.output_af280, 0.001); end
  def test_output_ag280; assert_in_epsilon(4.78344244745555, worksheet.output_ag280, 0.001); end
  def test_output_ah280; assert_in_epsilon(4.526369472716938, worksheet.output_ah280, 0.001); end
  def test_output_ai280; assert_in_epsilon(4.301737331835381, worksheet.output_ai280, 0.001); end
  def test_output_aj280; assert_in_epsilon(4.099338441794132, worksheet.output_aj280, 0.001); end
  def test_output_am280; assert_in_delta(-0.02229362456380868, worksheet.output_am280, 0.001); end
  def test_output_an280; assert_in_delta(-0.594175851760345, worksheet.output_an280, 0.001); end
  def test_output_ak280; assert_in_epsilon(4.045189776734745, worksheet.output_ak280, 0.001); end
  def test_output_ao280; assert_equal("", worksheet.output_ao280); end
  def test_output_c281; assert_equal("V.04", worksheet.output_c281); end
  def test_output_d281; assert_equal("V", worksheet.output_d281); end
  def test_output_e281; assert_equal("Liquid hydrocarbons / Bioenergy", worksheet.output_e281); end
  def test_output_f281; assert_equal("TWh/yr", worksheet.output_f281); end
  def test_output_am281; assert_in_delta(0.05933578138459472, worksheet.output_am281, 0.001); end
  def test_output_an281; assert_in_epsilon(9.031033275671355, worksheet.output_an281, 0.001); end
  def test_output_ak281; assert_in_delta(0.2510145578381966, worksheet.output_ak281, 0.001); end
  def test_output_ao281; assert_equal("", worksheet.output_ao281); end
  def test_output_e282; assert_equal("Oil", worksheet.output_e282); end
  def test_output_f282; assert_equal("TWh/yr", worksheet.output_f282); end
  def test_output_ad282; assert_in_epsilon(150.96120908029343, worksheet.output_ad282, 0.001); end
  def test_output_ae282; assert_in_epsilon(129.0333902684966, worksheet.output_ae282, 0.001); end
  def test_output_af282; assert_in_epsilon(110.13802604971907, worksheet.output_af282, 0.001); end
  def test_output_ag282; assert_in_epsilon(90.39531440773712, worksheet.output_ag282, 0.001); end
  def test_output_ah282; assert_in_epsilon(73.37226748982934, worksheet.output_ah282, 0.001); end
  def test_output_ai282; assert_in_epsilon(59.1666434889596, worksheet.output_ai282, 0.001); end
  def test_output_aj282; assert_in_epsilon(46.12043580282735, worksheet.output_aj282, 0.001); end
  def test_output_am282; assert_in_delta(-0.038054938161188545, worksheet.output_am282, 0.001); end
  def test_output_an282; assert_in_delta(-0.7881586278400587, worksheet.output_an282, 0.001); end
  def test_output_ak282; assert_in_epsilon(34.109894333334694, worksheet.output_ak282, 0.001); end
  def test_output_ao282; assert_equal("", worksheet.output_ao282); end
  def test_output_c283; assert_equal("V.05", worksheet.output_c283); end
  def test_output_d283; assert_equal("IX.a", worksheet.output_d283); end
  def test_output_e283; assert_equal("Gaseous hydrocarbons / Domestic space heating and hot water", worksheet.output_e283); end
  def test_output_f283; assert_equal("TWh/yr", worksheet.output_f283); end
  def test_output_ac283; assert_in_epsilon(31.498232239201204, worksheet.output_ac283, 0.001); end
  def test_output_ad283; assert_in_epsilon(30.009290260844267, worksheet.output_ad283, 0.001); end
  def test_output_ae283; assert_in_epsilon(27.74493093191741, worksheet.output_ae283, 0.001); end
  def test_output_af283; assert_in_epsilon(25.504835628321132, worksheet.output_af283, 0.001); end
  def test_output_ag283; assert_in_epsilon(22.654717004773463, worksheet.output_ag283, 0.001); end
  def test_output_ah283; assert_in_epsilon(20.025574407660528, worksheet.output_ah283, 0.001); end
  def test_output_ai283; assert_in_epsilon(17.601097923662085, worksheet.output_ai283, 0.001); end
  def test_output_aj283; assert_in_epsilon(15.338212801389618, worksheet.output_aj283, 0.001); end
  def test_output_am283; assert_in_delta(-0.021157020963511797, worksheet.output_am283, 0.001); end
  def test_output_an283; assert_in_delta(-0.5748705371728855, worksheet.output_an283, 0.001); end
  def test_output_ak283; assert_in_epsilon(13.390826551855309, worksheet.output_ak283, 0.001); end
  def test_output_ao283; assert_equal("", worksheet.output_ao283); end
  def test_output_c284; assert_equal("V.05", worksheet.output_c284); end
  def test_output_d284; assert_equal("IX.c", worksheet.output_d284); end
  def test_output_e284; assert_equal("Gaseous hydrocarbons / Commercial heating and cooling", worksheet.output_e284); end
  def test_output_f284; assert_equal("TWh/yr", worksheet.output_f284); end
  def test_output_ac284; assert_in_epsilon(16.923565202435206, worksheet.output_ac284, 0.001); end
  def test_output_ad284; assert_in_epsilon(16.112842870550306, worksheet.output_ad284, 0.001); end
  def test_output_ae284; assert_in_epsilon(13.473501706703638, worksheet.output_ae284, 0.001); end
  def test_output_af284; assert_in_epsilon(10.967979689122263, worksheet.output_af284, 0.001); end
  def test_output_ag284; assert_in_epsilon(8.799373353623425, worksheet.output_ag284, 0.001); end
  def test_output_ah284; assert_in_epsilon(6.887983569161122, worksheet.output_ah284, 0.001); end
  def test_output_ai284; assert_in_epsilon(5.255693844451907, worksheet.output_ai284, 0.001); end
  def test_output_aj284; assert_in_epsilon(3.864308368241181, worksheet.output_aj284, 0.001); end
  def test_output_am284; assert_in_delta(-0.05149032883870319, worksheet.output_am284, 0.001); end
  def test_output_an284; assert_in_delta(-0.8793102089435756, worksheet.output_an284, 0.001); end
  def test_output_ak284; assert_in_epsilon(2.04250154821168, worksheet.output_ak284, 0.001); end
  def test_output_ao284; assert_equal("", worksheet.output_ao284); end
  def test_output_c285; assert_equal("V.05", worksheet.output_c285); end
  def test_output_d285; assert_equal("XI", worksheet.output_d285); end
  def test_output_e285; assert_equal("Gaseous hydrocarbons / Industry", worksheet.output_e285); end
  def test_output_f285; assert_equal("TWh/yr", worksheet.output_f285); end
  def test_output_ac285; assert_in_epsilon(71.00307133201794, worksheet.output_ac285, 0.001); end
  def test_output_ad285; assert_in_epsilon(70.5911719690194, worksheet.output_ad285, 0.001); end
  def test_output_ae285; assert_in_epsilon(68.07159123415337, worksheet.output_ae285, 0.001); end
  def test_output_af285; assert_in_epsilon(65.5264546641308, worksheet.output_af285, 0.001); end
  def test_output_ag285; assert_in_epsilon(63.1483053837083, worksheet.output_ag285, 0.001); end
  def test_output_ah285; assert_in_epsilon(59.65412717701519, worksheet.output_ah285, 0.001); end
  def test_output_ai285; assert_in_epsilon(56.428131722490065, worksheet.output_ai285, 0.001); end
  def test_output_aj285; assert_in_epsilon(53.39262981842156, worksheet.output_aj285, 0.001); end
  def test_output_am285; assert_in_delta(-0.008265115586015948, worksheet.output_am285, 0.001); end
  def test_output_an285; assert_in_delta(-0.2824972088364016, worksheet.output_an285, 0.001); end
  def test_output_ak285; assert_in_epsilon(50.94490186191095, worksheet.output_ak285, 0.001); end
  def test_output_ao285; assert_equal("", worksheet.output_ao285); end
  def test_output_c286; assert_equal("V.05", worksheet.output_c286); end
  def test_output_d286; assert_equal("V", worksheet.output_d286); end
  def test_output_e286; assert_equal("Gaseous hydrocarbons / Bioenergy", worksheet.output_e286); end
  def test_output_f286; assert_equal("TWh/yr", worksheet.output_f286); end
  def test_output_am286; assert_in_delta(0.04973460873874469, worksheet.output_am286, 0.001); end
  def test_output_an286; assert_in_epsilon(5.9691630983366935, worksheet.output_an286, 0.001); end
  def test_output_ak286; assert_in_delta(0.15807029933280295, worksheet.output_ak286, 0.001); end
  def test_output_ao286; assert_equal("", worksheet.output_ao286); end
  def test_output_e287; assert_equal("Natural Gas", worksheet.output_e287); end
  def test_output_f287; assert_equal("TWh/yr", worksheet.output_f287); end
  def test_output_ad287; assert_in_epsilon(111.89319700736702, worksheet.output_ad287, 0.001); end
  def test_output_ae287; assert_in_epsilon(103.78811040002694, worksheet.output_ae287, 0.001); end
  def test_output_af287; assert_in_epsilon(97.71799020831504, worksheet.output_af287, 0.001); end
  def test_output_ag287; assert_in_epsilon(89.59960952276846, worksheet.output_ag287, 0.001); end
  def test_output_ah287; assert_in_epsilon(80.80373586505371, worksheet.output_ah287, 0.001); end
  def test_output_ai287; assert_in_epsilon(72.72124008117873, worksheet.output_ai287, 0.001); end
  def test_output_aj287; assert_in_epsilon(64.65719866276945, worksheet.output_aj287, 0.001); end
  def test_output_am287; assert_in_delta(-0.018242418145215433, worksheet.output_am287, 0.001); end
  def test_output_an287; assert_in_delta(-0.5211819034229892, worksheet.output_an287, 0.001); end
  def test_output_ak287; assert_in_epsilon(55.885803282706455, worksheet.output_ak287, 0.001); end
  def test_output_ao287; assert_equal("", worksheet.output_ao287); end
  def test_output_c288; assert_equal("V.11", worksheet.output_c288); end
  def test_output_d288; assert_equal("IX.a", worksheet.output_d288); end
  def test_output_e288; assert_equal("Domestic solar thermal / Domestic space heating and hot water", worksheet.output_e288); end
  def test_output_f288; assert_equal("TWh/yr", worksheet.output_f288); end
  def test_output_ad288; assert_in_delta(0.7379443318542839, worksheet.output_ad288, 0.001); end
  def test_output_ae288; assert_in_epsilon(1.6154957994576926, worksheet.output_ae288, 0.001); end
  def test_output_af288; assert_in_epsilon(2.591279931597279, worksheet.output_af288, 0.001); end
  def test_output_ag288; assert_in_epsilon(3.691444981880282, worksheet.output_ag288, 0.001); end
  def test_output_ah288; assert_in_epsilon(4.8952005297657495, worksheet.output_ah288, 0.001); end
  def test_output_ai288; assert_in_epsilon(6.228916859646407, worksheet.output_ai288, 0.001); end
  def test_output_aj288; assert_in_epsilon(7.672476551724226, worksheet.output_aj288, 0.001); end
  def test_output_am288; assert_equal("", worksheet.output_am288); end
  def test_output_an288; assert_equal("", worksheet.output_an288); end
  def test_output_ak288; assert_in_epsilon(8.50351567480757, worksheet.output_ak288, 0.001); end
  def test_output_ao288; assert_equal("", worksheet.output_ao288); end
  def test_output_c289; assert_equal("V.11", worksheet.output_c289); end
  def test_output_d289; assert_equal("IX.c", worksheet.output_d289); end
  def test_output_e289; assert_equal("Domestic solar thermal / Commercial heating and cooling", worksheet.output_e289); end
  def test_output_f289; assert_equal("TWh/yr", worksheet.output_f289); end
  def test_output_ac289; assert_in_delta(0, (worksheet.output_ac289||0), 0.001); end
  def test_output_ad289; assert_in_delta(0, (worksheet.output_ad289||0), 0.001); end
  def test_output_ae289; assert_in_delta(0, (worksheet.output_ae289||0), 0.001); end
  def test_output_af289; assert_in_delta(0, (worksheet.output_af289||0), 0.001); end
  def test_output_ag289; assert_in_delta(0, (worksheet.output_ag289||0), 0.001); end
  def test_output_ah289; assert_in_delta(0, (worksheet.output_ah289||0), 0.001); end
  def test_output_ai289; assert_in_delta(0, (worksheet.output_ai289||0), 0.001); end
  def test_output_aj289; assert_in_delta(0, (worksheet.output_aj289||0), 0.001); end
  def test_output_ak289; assert_in_delta(0, (worksheet.output_ak289||0), 0.001); end
  def test_output_am289; assert_equal("", worksheet.output_am289); end
  def test_output_an289; assert_equal("", worksheet.output_an289); end
  def test_output_ao289; assert_equal("", worksheet.output_ao289); end
  def test_output_e290; assert_equal("Solar thermal", worksheet.output_e290); end
  def test_output_f290; assert_equal("TWh/yr", worksheet.output_f290); end
  def test_output_ad290; assert_in_delta(0.7379443318542839, worksheet.output_ad290, 0.001); end
  def test_output_ae290; assert_in_epsilon(1.6154957994576926, worksheet.output_ae290, 0.001); end
  def test_output_af290; assert_in_epsilon(2.591279931597279, worksheet.output_af290, 0.001); end
  def test_output_ag290; assert_in_epsilon(3.691444981880282, worksheet.output_ag290, 0.001); end
  def test_output_ah290; assert_in_epsilon(4.8952005297657495, worksheet.output_ah290, 0.001); end
  def test_output_ai290; assert_in_epsilon(6.228916859646407, worksheet.output_ai290, 0.001); end
  def test_output_aj290; assert_in_epsilon(7.672476551724226, worksheet.output_aj290, 0.001); end
  def test_output_am290; assert_equal("", worksheet.output_am290); end
  def test_output_an290; assert_equal("", worksheet.output_an290); end
  def test_output_ak290; assert_in_epsilon(8.50351567480757, worksheet.output_ak290, 0.001); end
  def test_output_ao290; assert_equal("", worksheet.output_ao290); end
  def test_output_c291; assert_equal("R.07", worksheet.output_c291); end
  def test_output_d291; assert_equal("IX.a", worksheet.output_d291); end
  def test_output_e291; assert_equal("Environmental heat / Domestic space heating and hot water", worksheet.output_e291); end
  def test_output_f291; assert_equal("TWh/yr", worksheet.output_f291); end
  def test_output_ad291; assert_in_epsilon(3.698756728609886, worksheet.output_ad291, 0.001); end
  def test_output_ae291; assert_in_epsilon(6.999414797642101, worksheet.output_ae291, 0.001); end
  def test_output_af291; assert_in_epsilon(10.376853502971429, worksheet.output_af291, 0.001); end
  def test_output_ag291; assert_in_epsilon(13.452205961304315, worksheet.output_ag291, 0.001); end
  def test_output_ah291; assert_in_epsilon(16.52234028984341, worksheet.output_ah291, 0.001); end
  def test_output_ai291; assert_in_epsilon(19.655890662407636, worksheet.output_ai291, 0.001); end
  def test_output_aj291; assert_in_epsilon(22.900744041284934, worksheet.output_aj291, 0.001); end
  def test_output_am291; assert_in_delta(0.10873364399710117, worksheet.output_am291, 0.001); end
  def test_output_an291; assert_in_epsilon(61.09963500032495, worksheet.output_an291, 0.001); end
  def test_output_ak291; assert_in_epsilon(26.458015203781084, worksheet.output_ak291, 0.001); end
  def test_output_ao291; assert_equal("", worksheet.output_ao291); end
  def test_output_c292; assert_equal("R.07", worksheet.output_c292); end
  def test_output_d292; assert_equal("IX.c", worksheet.output_d292); end
  def test_output_e292; assert_equal("Environmental heat / Commercial heating and cooling", worksheet.output_e292); end
  def test_output_f292; assert_equal("TWh/yr", worksheet.output_f292); end
  def test_output_ad292; assert_in_delta(0.5021804428621245, worksheet.output_ad292, 0.001); end
  def test_output_ae292; assert_in_epsilon(1.4885964517526906, worksheet.output_ae292, 0.001); end
  def test_output_af292; assert_in_epsilon(2.269102592940171, worksheet.output_af292, 0.001); end
  def test_output_ag292; assert_in_epsilon(2.8726100271327444, worksheet.output_ag292, 0.001); end
  def test_output_ah292; assert_in_epsilon(3.302423807841516, worksheet.output_ah292, 0.001); end
  def test_output_ai292; assert_in_epsilon(3.584715542697365, worksheet.output_ai292, 0.001); end
  def test_output_aj292; assert_in_epsilon(3.7218732732628323, worksheet.output_aj292, 0.001); end
  def test_output_am292; assert_in_delta(0.056558982963227145, worksheet.output_am292, 0.001); end
  def test_output_an292; assert_in_epsilon(8.031291734439066, worksheet.output_an292, 0.001); end
  def test_output_ak292; assert_in_epsilon(4.138565683104883, worksheet.output_ak292, 0.001); end
  def test_output_ao292; assert_equal("", worksheet.output_ao292); end
  def test_output_c293; assert_equal("R.07", worksheet.output_c293); end
  def test_output_d293; assert_equal("XI", worksheet.output_d293); end
  def test_output_e293; assert_equal("Environmental heat / Industry", worksheet.output_e293); end
  def test_output_f293; assert_equal("TWh/yr", worksheet.output_f293); end
  def test_output_ac293; assert_in_delta(0, (worksheet.output_ac293||0), 0.001); end
  def test_output_ad293; assert_in_delta(0, (worksheet.output_ad293||0), 0.001); end
  def test_output_ae293; assert_in_delta(0, (worksheet.output_ae293||0), 0.001); end
  def test_output_af293; assert_in_delta(0, (worksheet.output_af293||0), 0.001); end
  def test_output_ag293; assert_in_delta(0, (worksheet.output_ag293||0), 0.001); end
  def test_output_ah293; assert_in_delta(0, (worksheet.output_ah293||0), 0.001); end
  def test_output_ai293; assert_in_delta(0, (worksheet.output_ai293||0), 0.001); end
  def test_output_aj293; assert_in_delta(0, (worksheet.output_aj293||0), 0.001); end
  def test_output_ak293; assert_in_delta(0, (worksheet.output_ak293||0), 0.001); end
  def test_output_am293; assert_equal("", worksheet.output_am293); end
  def test_output_an293; assert_equal("", worksheet.output_an293); end
  def test_output_ao293; assert_equal("", worksheet.output_ao293); end
  def test_output_e294; assert_equal("Environmental heat", worksheet.output_e294); end
  def test_output_f294; assert_equal("TWh/yr", worksheet.output_f294); end
  def test_output_ad294; assert_in_epsilon(4.2009371714720105, worksheet.output_ad294, 0.001); end
  def test_output_ae294; assert_in_epsilon(8.488011249394791, worksheet.output_ae294, 0.001); end
  def test_output_af294; assert_in_epsilon(12.6459560959116, worksheet.output_af294, 0.001); end
  def test_output_ag294; assert_in_epsilon(16.32481598843706, worksheet.output_ag294, 0.001); end
  def test_output_ah294; assert_in_epsilon(19.824764097684927, worksheet.output_ah294, 0.001); end
  def test_output_ai294; assert_in_epsilon(23.240606205105, worksheet.output_ai294, 0.001); end
  def test_output_aj294; assert_in_epsilon(26.622617314547767, worksheet.output_aj294, 0.001); end
  def test_output_am294; assert_in_delta(0.09263918649934966, worksheet.output_am294, 0.001); end
  def test_output_an294; assert_in_epsilon(33.59958431970326, worksheet.output_an294, 0.001); end
  def test_output_ak294; assert_in_epsilon(30.596580886885967, worksheet.output_ak294, 0.001); end
  def test_output_ao294; assert_equal("", worksheet.output_ao294); end
  def test_output_e295; assert_equal("BioFuels (Solid, Liquid, Gas)", worksheet.output_e295); end
  def test_output_f295; assert_equal("TWh/yr", worksheet.output_f295); end
  def test_output_ad275; assert_in_delta(0.441153389088792, worksheet.output_ad275, 0.001); end
  def test_output_ad281; assert_in_delta(0.026889965030595257, worksheet.output_ad281, 0.001); end
  def test_output_ad286; assert_in_delta(0.041298702739160614, worksheet.output_ad286, 0.001); end
  def test_output_ad295; assert_in_epsilon(28.207032981777463, worksheet.output_ad295, 0.001); end
  def test_output_ae275; assert_in_delta(0.4893036030349205, worksheet.output_ae275, 0.001); end
  def test_output_ae281; assert_in_delta(0.05574229424725951, worksheet.output_ae281, 0.001); end
  def test_output_ae286; assert_in_delta(0.05034232108094608, worksheet.output_ae286, 0.001); end
  def test_output_ae295; assert_in_epsilon(33.80513759667851, worksheet.output_ae295, 0.001); end
  def test_output_af275; assert_in_delta(0.6879377934423668, worksheet.output_af275, 0.001); end
  def test_output_af281; assert_in_delta(0.07151474805717203, worksheet.output_af281, 0.001); end
  def test_output_af286; assert_in_delta(0.04197363151748578, worksheet.output_af286, 0.001); end
  def test_output_af295; assert_in_epsilon(41.275422809259, worksheet.output_af295, 0.001); end
  def test_output_ag275; assert_in_delta(0.8692721560781583, worksheet.output_ag275, 0.001); end
  def test_output_ag281; assert_in_delta(0.09244866416096902, worksheet.output_ag281, 0.001); end
  def test_output_ag286; assert_in_delta(0.05288223601625044, worksheet.output_ag286, 0.001); end
  def test_output_ag295; assert_in_epsilon(41.62770456397063, worksheet.output_ag295, 0.001); end
  def test_output_ah275; assert_in_delta(0.9241793839054924, worksheet.output_ah275, 0.001); end
  def test_output_ah281; assert_in_delta(0.11888404080051318, worksheet.output_ah281, 0.001); end
  def test_output_ah286; assert_in_delta(0.06658315142122817, worksheet.output_ah286, 0.001); end
  def test_output_ah295; assert_in_epsilon(44.43966261235393, worksheet.output_ah295, 0.001); end
  def test_output_ai275; assert_in_delta(0.9755041089836572, worksheet.output_ai275, 0.001); end
  def test_output_ai281; assert_in_delta(0.15087507745258807, worksheet.output_ai281, 0.001); end
  def test_output_ai286; assert_in_delta(0.08278602186206535, worksheet.output_ai286, 0.001); end
  def test_output_ai295; assert_in_epsilon(47.02558858495894, worksheet.output_ai295, 0.001); end
  def test_output_aj275; assert_in_delta(1, worksheet.output_aj275, 0.001); end
  def test_output_aj281; assert_in_delta(0.19312379717135011, worksheet.output_aj281, 0.001); end
  def test_output_aj286; assert_in_delta(0.10934548957118821, worksheet.output_aj286, 0.001); end
  def test_output_aj295; assert_in_epsilon(49.17962447401992, worksheet.output_aj295, 0.001); end
  def test_output_am295; assert_in_delta(0.018569961744305807, worksheet.output_am295, 0.001); end
  def test_output_an295; assert_in_epsilon(1.0875388982991017, worksheet.output_an295, 0.001); end
  def test_output_ak295; assert_in_epsilon(52.159379624431715, worksheet.output_ak295, 0.001); end
  def test_output_ao295; assert_equal("", worksheet.output_ao295); end
  def test_output_am296; assert_equal("", worksheet.output_am296); end
  def test_output_an296; assert_equal("", worksheet.output_an296); end
  def test_output_ao296; assert_equal("", worksheet.output_ao296); end
  def test_output_e297; assert_equal("Total production", worksheet.output_e297); end
  def test_output_f297; assert_equal("TWh/yr", worksheet.output_f297); end
  def test_output_ad297; assert_in_epsilon(327.59661029337383, worksheet.output_ad297, 0.001); end
  def test_output_ae297; assert_in_epsilon(308.2833545017091, worksheet.output_ae297, 0.001); end
  def test_output_af297; assert_in_epsilon(289.8104455214311, worksheet.output_af297, 0.001); end
  def test_output_ag297; assert_in_epsilon(260.3502125895037, worksheet.output_ag297, 0.001); end
  def test_output_ah297; assert_in_epsilon(242.171889499023, worksheet.output_ah297, 0.001); end
  def test_output_ai297; assert_in_epsilon(227.34589832260951, worksheet.output_ai297, 0.001); end
  def test_output_aj297; assert_in_epsilon(214.04991102601957, worksheet.output_aj297, 0.001); end
  def test_output_am297; assert_in_delta(-0.012762241488757264, worksheet.output_am297, 0.001); end
  def test_output_an297; assert_in_delta(-0.4017671018292016, worksheet.output_an297, 0.001); end
  def test_output_ak297; assert_in_epsilon(203.31701702693877, worksheet.output_ak297, 0.001); end
  def test_output_ao297; assert_equal("", worksheet.output_ao297); end
  def test_output_b298; assert_equal("REF", worksheet.output_b298); end
  def test_output_e298; assert_equal("Reference scenario", worksheet.output_e298); end
  def test_output_f298; assert_equal("TWh/yr", worksheet.output_f298); end
  def test_output_g298; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g298); end
  def test_output_ac298; assert_in_epsilon(363.50417551434856, worksheet.output_ac298, 0.001); end
  def test_output_ad298; assert_in_epsilon(365.42206694402023, worksheet.output_ad298, 0.001); end
  def test_output_ae298; assert_in_epsilon(373.0892100267905, worksheet.output_ae298, 0.001); end
  def test_output_af298; assert_in_epsilon(378.04632176990737, worksheet.output_af298, 0.001); end
  def test_output_ag298; assert_in_epsilon(382.89420008787147, worksheet.output_ag298, 0.001); end
  def test_output_ah298; assert_in_epsilon(386.4324142459772, worksheet.output_ah298, 0.001); end
  def test_output_ai298; assert_in_epsilon(391.2670029013325, worksheet.output_ai298, 0.001); end
  def test_output_aj298; assert_in_epsilon(395.55264624798986, worksheet.output_aj298, 0.001); end
  def test_output_ak298; assert_in_epsilon(401.9205483130132, worksheet.output_ak298, 0.001); end
  def test_output_am298; assert_in_delta(0.002514747791989569, worksheet.output_am298, 0.001); end
  def test_output_an298; assert_in_delta(0.10568344295992338, worksheet.output_an298, 0.001); end
  def test_output_ao298; assert_equal("", worksheet.output_ao298); end
  def test_output_e299; assert_equal("RES production", worksheet.output_e299); end
  def test_output_f299; assert_equal("TWh/yr", worksheet.output_f299); end
  def test_output_ad299; assert_in_epsilon(28.944977313631746, worksheet.output_ad299, 0.001); end
  def test_output_ae299; assert_in_epsilon(35.4206333961362, worksheet.output_ae299, 0.001); end
  def test_output_af299; assert_in_epsilon(43.866702740856276, worksheet.output_af299, 0.001); end
  def test_output_ag299; assert_in_epsilon(45.31914954585091, worksheet.output_ag299, 0.001); end
  def test_output_ah299; assert_in_epsilon(49.33486314211968, worksheet.output_ah299, 0.001); end
  def test_output_ai299; assert_in_epsilon(53.25450544460534, worksheet.output_ai299, 0.001); end
  def test_output_aj299; assert_in_epsilon(56.85210102574414, worksheet.output_aj299, 0.001); end
  def test_output_am299; assert_in_delta(0.022423051113238168, worksheet.output_am299, 0.001); end
  def test_output_an299; assert_in_epsilon(1.427869244849889, worksheet.output_an299, 0.001); end
  def test_output_ak299; assert_in_epsilon(60.66289529923928, worksheet.output_ak299, 0.001); end
  def test_output_ao299; assert_equal("", worksheet.output_ao299); end
  def test_output_e300; assert_equal("Share of RES production in total production", worksheet.output_e300); end
  def test_output_f300; assert_equal("%", worksheet.output_f300); end
  def test_output_ac275; assert_in_delta(0.3681776795879403, worksheet.output_ac275, 0.001); end
  def test_output_ac281; assert_in_delta(0.02502379873935736, worksheet.output_ac281, 0.001); end
  def test_output_ac286; assert_in_delta(0.022681389013629063, worksheet.output_ac286, 0.001); end
  def test_output_ac295; assert_in_epsilon(24.986063573201182, worksheet.output_ac295, 0.001); end
  def test_output_ac288; assert_in_delta(0, (worksheet.output_ac288||0), 0.001); end
  def test_output_ac290; assert_in_delta(0, (worksheet.output_ac290||0), 0.001); end
  def test_output_ac299; assert_in_epsilon(24.986063573201182, worksheet.output_ac299, 0.001); end
  def test_output_ac269; assert_in_epsilon(4.816689403032683, worksheet.output_ac269, 0.001); end
  def test_output_ac270; assert_in_delta(0.30549824652607716, worksheet.output_ac270, 0.001); end
  def test_output_ac271; assert_in_epsilon(5.12218764955876, worksheet.output_ac271, 0.001); end
  def test_output_ac276; assert_in_epsilon(31.137737781053644, worksheet.output_ac276, 0.001); end
  def test_output_ac282; assert_in_epsilon(161.01620748369, worksheet.output_ac282, 0.001); end
  def test_output_ac287; assert_in_epsilon(116.71614686709749, worksheet.output_ac287, 0.001); end
  def test_output_ac291; assert_in_delta(0.42605749943043364, worksheet.output_ac291, 0.001); end
  def test_output_ac292; assert_in_delta(0.45824736978911573, worksheet.output_ac292, 0.001); end
  def test_output_ac294; assert_in_delta(0.8843048692195494, worksheet.output_ac294, 0.001); end
  def test_output_ac297; assert_in_epsilon(339.86264822382066, worksheet.output_ac297, 0.001); end
  def test_output_ac300; assert_in_delta(0.07351812181710038, worksheet.output_ac300, 0.001); end
  def test_output_ad300; assert_in_delta(0.08835554582726159, worksheet.output_ad300, 0.001); end
  def test_output_ae300; assert_in_delta(0.1148963538864692, worksheet.output_ae300, 0.001); end
  def test_output_af300; assert_in_delta(0.15136342881613765, worksheet.output_af300, 0.001); end
  def test_output_ag300; assert_in_delta(0.17406995406339837, worksheet.output_ag300, 0.001); end
  def test_output_ah300; assert_in_delta(0.20371837228580864, worksheet.output_ah300, 0.001); end
  def test_output_ai300; assert_in_delta(0.2342444083553945, worksheet.output_ai300, 0.001); end
  def test_output_aj300; assert_in_delta(0.2656020773530398, worksheet.output_aj300, 0.001); end
  def test_output_am300; assert_in_delta(0.03564014068409915, worksheet.output_am300, 0.001); end
  def test_output_an300; assert_in_epsilon(3.0584014223783473, worksheet.output_an300, 0.001); end
  def test_output_ak300; assert_in_delta(0.2983660501531048, worksheet.output_ak300, 0.001); end
  def test_output_ao300; assert_equal("", worksheet.output_ao300); end
  def test_output_c301; assert_equal("XI", worksheet.output_c301); end
  def test_output_d301; assert_equal("I.01", worksheet.output_d301); end
  def test_output_e301; assert_equal("Heat required for industry", worksheet.output_e301); end
  def test_output_f301; assert_equal("TWh/yr", worksheet.output_f301); end
  def test_output_ac301; assert_in_epsilon(126.18501157801052, worksheet.output_ac301, 0.001); end
  def test_output_ad301; assert_in_epsilon(116.6431370409409, worksheet.output_ad301, 0.001); end
  def test_output_ae301; assert_in_epsilon(109.80654979033078, worksheet.output_ae301, 0.001); end
  def test_output_af301; assert_in_epsilon(103.64505708791481, worksheet.output_af301, 0.001); end
  def test_output_ag301; assert_in_epsilon(87.97663169166783, worksheet.output_ag301, 0.001); end
  def test_output_ah301; assert_in_epsilon(82.6828551977251, worksheet.output_ah301, 0.001); end
  def test_output_ai301; assert_in_epsilon(77.81713320574381, worksheet.output_ai301, 0.001); end
  def test_output_aj301; assert_in_epsilon(73.18757547625236, worksheet.output_aj301, 0.001); end
  def test_output_ak301; assert_in_epsilon(69.69615847481613, worksheet.output_ak301, 0.001); end
  def test_output_am301; assert_in_delta(-0.014730527781111724, worksheet.output_am301, 0.001); end
  def test_output_an301; assert_in_delta(-0.44766690113802987, worksheet.output_an301, 0.001); end
  def test_output_ao301; assert_equal("", worksheet.output_ao301); end
  def test_output_c302; assert_equal("XI", worksheet.output_c302); end
  def test_output_d302; assert_equal("V.03", worksheet.output_d302); end
  def test_output_e302; assert_equal("Solid hydrocarbons used by industry", worksheet.output_e302); end
  def test_output_f302; assert_equal("TWh/yr", worksheet.output_f302); end
  def test_output_ac302; assert_in_epsilon(-46.22254257821306, worksheet.output_ac302, 0.001); end
  def test_output_ad302; assert_in_epsilon(-40.28254225509218, worksheet.output_ad302, 0.001); end
  def test_output_ae302; assert_in_epsilon(-38.72612608764173, worksheet.output_ae302, 0.001); end
  def test_output_af302; assert_in_epsilon(-37.640729539809286, worksheet.output_af302, 0.001); end
  def test_output_ag302; assert_in_epsilon(-27.60116702659421, worksheet.output_ag302, 0.001); end
  def test_output_ah302; assert_in_epsilon(-27.075636565569624, worksheet.output_ah302, 0.001); end
  def test_output_ai302; assert_in_epsilon(-26.52290622406896, worksheet.output_ai302, 0.001); end
  def test_output_aj302; assert_in_epsilon(-25.914571590104504, worksheet.output_aj302, 0.001); end
  def test_output_ak302; assert_in_epsilon(-25.716607196987994, worksheet.output_ak302, 0.001); end
  def test_output_am302; assert_in_delta(-0.014551356527446435, worksheet.output_am302, 0.001); end
  def test_output_an302; assert_in_delta(-0.4436349503389394, worksheet.output_an302, 0.001); end
  def test_output_ao302; assert_equal("", worksheet.output_ao302); end
  def test_output_c303; assert_equal("XI", worksheet.output_c303); end
  def test_output_d303; assert_equal("V.05", worksheet.output_d303); end
  def test_output_e303; assert_equal("Gaseous hydrocarbons used by Industry", worksheet.output_e303); end
  def test_output_f303; assert_equal("TWh/yr", worksheet.output_f303); end
  def test_output_ac303; assert_in_epsilon(-71.00307133201794, worksheet.output_ac303, 0.001); end
  def test_output_ad303; assert_in_epsilon(-70.5911719690194, worksheet.output_ad303, 0.001); end
  def test_output_ae303; assert_in_epsilon(-68.07159123415337, worksheet.output_ae303, 0.001); end
  def test_output_af303; assert_in_epsilon(-65.5264546641308, worksheet.output_af303, 0.001); end
  def test_output_ag303; assert_in_epsilon(-63.1483053837083, worksheet.output_ag303, 0.001); end
  def test_output_ah303; assert_in_epsilon(-59.65412717701519, worksheet.output_ah303, 0.001); end
  def test_output_ai303; assert_in_epsilon(-56.428131722490065, worksheet.output_ai303, 0.001); end
  def test_output_aj303; assert_in_epsilon(-53.39262981842156, worksheet.output_aj303, 0.001); end
  def test_output_ak303; assert_in_epsilon(-50.94490186191095, worksheet.output_ak303, 0.001); end
  def test_output_am303; assert_in_delta(-0.008265115586015948, worksheet.output_am303, 0.001); end
  def test_output_an303; assert_in_delta(-0.2824972088364016, worksheet.output_an303, 0.001); end
  def test_output_ao303; assert_equal("", worksheet.output_ao303); end
  def test_output_c304; assert_equal("XI", worksheet.output_c304); end
  def test_output_d304; assert_equal("V.04", worksheet.output_d304); end
  def test_output_e304; assert_equal("Liquid hydrocarbons used by Industry", worksheet.output_e304); end
  def test_output_f304; assert_equal("TWh/yr", worksheet.output_f304); end
  def test_output_ac304; assert_in_epsilon(-9.967839011753194, worksheet.output_ac304, 0.001); end
  def test_output_ad304; assert_in_epsilon(-8.33085490521796, worksheet.output_ad304, 0.001); end
  def test_output_ae304; assert_in_epsilon(-7.020175393604117, worksheet.output_ae304, 0.001); end
  def test_output_af304; assert_in_epsilon(-5.862034377078839, worksheet.output_af304, 0.001); end
  def test_output_ag304; assert_in_epsilon(-4.78344244745555, worksheet.output_ag304, 0.001); end
  def test_output_ah304; assert_in_epsilon(-4.526369472716938, worksheet.output_ah304, 0.001); end
  def test_output_ai304; assert_in_epsilon(-4.301737331835381, worksheet.output_ai304, 0.001); end
  def test_output_aj304; assert_in_epsilon(-4.099338441794132, worksheet.output_aj304, 0.001); end
  def test_output_ak304; assert_in_epsilon(-4.045189776734745, worksheet.output_ak304, 0.001); end
  def test_output_am304; assert_in_delta(-0.02229362456380868, worksheet.output_am304, 0.001); end
  def test_output_an304; assert_in_delta(-0.594175851760345, worksheet.output_an304, 0.001); end
  def test_output_ao304; assert_equal("", worksheet.output_ao304); end
  def test_output_c305; assert_equal("XI", worksheet.output_c305); end
  def test_output_d305; assert_equal("V.07", worksheet.output_d305); end
  def test_output_e305; assert_equal("Heat transport used by Industry", worksheet.output_e305); end
  def test_output_f305; assert_equal("TWh/yr", worksheet.output_f305); end
  def test_output_ac305; assert_in_epsilon(-14.240763892437093, worksheet.output_ac305, 0.001); end
  def test_output_ad305; assert_in_epsilon(-14.001988227377181, worksheet.output_ad305, 0.001); end
  def test_output_ae305; assert_in_epsilon(-12.361906540738818, worksheet.output_ae305, 0.001); end
  def test_output_af305; assert_in_epsilon(-10.81187209226848, worksheet.output_af305, 0.001); end
  def test_output_ag305; assert_in_epsilon(-8.464542855982167, worksheet.output_ag305, 0.001); end
  def test_output_ah305; assert_in_epsilon(-7.301022154187154, worksheet.output_ah305, 0.001); end
  def test_output_ai305; assert_in_epsilon(-6.320041904169686, worksheet.output_ai305, 0.001); end
  def test_output_aj305; assert_in_epsilon(-5.432241717072749, worksheet.output_aj305, 0.001); end
  def test_output_ak305; assert_in_epsilon(-4.548329570710933, worksheet.output_ak305, 0.001); end
  def test_output_am305; assert_in_delta(-0.02813047081127118, worksheet.output_am305, 0.001); end
  def test_output_an305; assert_in_delta(-0.6806119668112443, worksheet.output_an305, 0.001); end
  def test_output_ao305; assert_equal("", worksheet.output_ao305); end
  def test_output_e306; assert_equal("Heat used by CHPs", worksheet.output_e306); end
  def test_output_f306; assert_equal("TWh/yr", worksheet.output_f306); end
  def test_output_ab306; assert_in_epsilon(-17.1335069891886, worksheet.output_ab306, 0.001); end
  def test_output_ac306; assert_in_epsilon(-15.24920523641076, worksheet.output_ac306, 0.001); end
  def test_output_ad306; assert_in_epsilon(-16.56342031576582, worksheet.output_ad306, 0.001); end
  def test_output_ae306; assert_in_epsilon(-16.373249465807262, worksheet.output_ae306, 0.001); end
  def test_output_af306; assert_in_epsilon(-16.196033585372593, worksheet.output_af306, 0.001); end
  def test_output_ag306; assert_in_epsilon(-16.02082602207239, worksheet.output_ag306, 0.001); end
  def test_output_ah306; assert_in_epsilon(-15.874300171763803, worksheet.output_ah306, 0.001); end
  def test_output_ai306; assert_in_epsilon(-15.755683976820276, worksheet.output_ai306, 0.001); end
  def test_output_aj306; assert_in_epsilon(-15.65120609114058, worksheet.output_aj306, 0.001); end
  def test_output_am306; assert_in_delta(0.000502713907158503, worksheet.output_am306, 0.001); end
  def test_output_an306; assert_in_delta(0.02030693995634225, worksheet.output_an306, 0.001); end
  def test_output_ak306; assert_in_epsilon(-15.558869931528491, worksheet.output_ak306, 0.001); end
  def test_output_ao306; assert_equal("", worksheet.output_ao306); end
  def test_output_e307; assert_equal("Heat used by public CHP and allocated in industry in the model (NIR-OPERA gap)", worksheet.output_e307); end
  def test_output_f307; assert_equal("TWh/yr", worksheet.output_f307); end
  def test_output_ab307; assert_in_epsilon(-10.735523836544, worksheet.output_ab307, 0.001); end
  def test_output_am307; assert_equal("", worksheet.output_am307); end
  def test_output_an307; assert_equal("", worksheet.output_an307); end
  def test_output_ao307; assert_equal("", worksheet.output_ao307); end
  def test_output_am308; assert_equal("", worksheet.output_am308); end
  def test_output_an308; assert_equal("", worksheet.output_an308); end
  def test_output_ao308; assert_equal("", worksheet.output_ao308); end
  def test_output_am309; assert_equal("", worksheet.output_am309); end
  def test_output_an309; assert_equal("", worksheet.output_an309); end
  def test_output_b310; assert_equal("Emissions by sector", worksheet.output_b310); end
  def test_output_am310; assert_equal("", worksheet.output_am310); end
  def test_output_an310; assert_equal("to 2010", worksheet.output_an310); end
  def test_output_ao310; assert_equal("to 1990", worksheet.output_ao310); end
  def test_output_c311; assert_equal("Total emissions allocation across sectors - GROSS OF BIOMASS IMPACT (Biomass emits)", worksheet.output_c311); end
  def test_output_am311; assert_equal("", worksheet.output_am311); end
  def test_output_an311; assert_equal("", worksheet.output_an311); end
  def test_output_ao311; assert_equal("", worksheet.output_ao311); end
  def test_output_c312; assert_equal("I", worksheet.output_c312); end
  def test_output_e312; assert_equal("Hydrocarbon fuel power generation", worksheet.output_e312); end
  def test_output_f312; assert_equal("Mt CO2e", worksheet.output_f312); end
  def test_output_g312; assert_equal("Energy - Refining (incl emissions from biomass)", worksheet.output_g312); end
  def test_output_x312; assert_in_delta(0, (worksheet.output_x312||0), 0.001); end
  def test_output_y312; assert_in_delta(0, (worksheet.output_y312||0), 0.001); end
  def test_output_z312; assert_in_delta(0, (worksheet.output_z312||0), 0.001); end
  def test_output_aa312; assert_in_delta(0, (worksheet.output_aa312||0), 0.001); end
  def test_output_ab312; assert_in_epsilon(25.7666478159777, worksheet.output_ab312, 0.001); end
  def test_output_am312; assert_in_delta(-0.016083873305023144, worksheet.output_am312, 0.001); end
  def test_output_an312; assert_in_delta(-0.4772149566877414, worksheet.output_an312, 0.001); end
  def test_output_ak312; assert_in_epsilon(12.528763854433524, worksheet.output_ak312, 0.001); end
  def test_output_ao312; assert_equal("", worksheet.output_ao312); end
  def test_output_c313; assert_equal("II", worksheet.output_c313); end
  def test_output_e313; assert_equal("Nuclear power generation", worksheet.output_e313); end
  def test_output_f313; assert_equal("Mt CO2e", worksheet.output_f313); end
  def test_output_g313; assert_equal("OK", worksheet.output_g313); end
  def test_output_ab313; assert_in_delta(0, (worksheet.output_ab313||0), 0.001); end
  def test_output_am313; assert_equal("", worksheet.output_am313); end
  def test_output_an313; assert_equal("", worksheet.output_an313); end
  def test_output_ak313; assert_in_delta(0, (worksheet.output_ak313||0), 0.001); end
  def test_output_ao313; assert_equal("", worksheet.output_ao313); end
  def test_output_c314; assert_equal("III", worksheet.output_c314); end
  def test_output_e314; assert_equal("National renewable power generation", worksheet.output_e314); end
  def test_output_f314; assert_equal("Mt CO2e", worksheet.output_f314); end
  def test_output_g314; assert_equal("OK", worksheet.output_g314); end
  def test_output_ab314; assert_in_delta(0, (worksheet.output_ab314||0), 0.001); end
  def test_output_am314; assert_equal("", worksheet.output_am314); end
  def test_output_an314; assert_equal("", worksheet.output_an314); end
  def test_output_ak314; assert_in_delta(0, (worksheet.output_ak314||0), 0.001); end
  def test_output_ao314; assert_equal("", worksheet.output_ao314); end
  def test_output_c315; assert_equal("IV", worksheet.output_c315); end
  def test_output_e315; assert_equal("Distributed renewable power generation", worksheet.output_e315); end
  def test_output_f315; assert_equal("Mt CO2e", worksheet.output_f315); end
  def test_output_g315; assert_equal("OK", worksheet.output_g315); end
  def test_output_ab315; assert_in_delta(0, (worksheet.output_ab315||0), 0.001); end
  def test_output_am315; assert_equal("", worksheet.output_am315); end
  def test_output_an315; assert_equal("", worksheet.output_an315); end
  def test_output_ak315; assert_in_delta(0, (worksheet.output_ak315||0), 0.001); end
  def test_output_ao315; assert_equal("", worksheet.output_ao315); end
  def test_output_c316; assert_equal("VI", worksheet.output_c316); end
  def test_output_e316; assert_equal("Agriculture and waste", worksheet.output_e316); end
  def test_output_f316; assert_equal("Mt CO2e", worksheet.output_f316); end
  def test_output_g316; assert_equal("Historic nb ok, fix model", worksheet.output_g316); end
  def test_output_h316; assert_in_epsilon(17.988853785900357, worksheet.output_h316, 0.001); end
  def test_output_i316; assert_in_delta(0, (worksheet.output_i316||0), 0.001); end
  def test_output_j316; assert_in_delta(0, (worksheet.output_j316||0), 0.001); end
  def test_output_k316; assert_in_delta(0, (worksheet.output_k316||0), 0.001); end
  def test_output_l316; assert_in_delta(0, (worksheet.output_l316||0), 0.001); end
  def test_output_m316; assert_in_epsilon(17.746944317184152, worksheet.output_m316, 0.001); end
  def test_output_n316; assert_in_delta(0, (worksheet.output_n316||0), 0.001); end
  def test_output_o316; assert_in_delta(0, (worksheet.output_o316||0), 0.001); end
  def test_output_p316; assert_in_delta(0, (worksheet.output_p316||0), 0.001); end
  def test_output_q316; assert_in_delta(0, (worksheet.output_q316||0), 0.001); end
  def test_output_r316; assert_in_epsilon(15.88406367057655, worksheet.output_r316, 0.001); end
  def test_output_s316; assert_in_delta(0, (worksheet.output_s316||0), 0.001); end
  def test_output_t316; assert_in_delta(0, (worksheet.output_t316||0), 0.001); end
  def test_output_u316; assert_in_delta(0, (worksheet.output_u316||0), 0.001); end
  def test_output_v316; assert_in_delta(0, (worksheet.output_v316||0), 0.001); end
  def test_output_w316; assert_in_epsilon(14.02568362725688, worksheet.output_w316, 0.001); end
  def test_output_x316; assert_in_delta(0, (worksheet.output_x316||0), 0.001); end
  def test_output_y316; assert_in_delta(0, (worksheet.output_y316||0), 0.001); end
  def test_output_z316; assert_in_delta(0, (worksheet.output_z316||0), 0.001); end
  def test_output_aa316; assert_in_delta(0, (worksheet.output_aa316||0), 0.001); end
  def test_output_ab316; assert_in_epsilon(13.463808239851314, worksheet.output_ab316, 0.001); end
  def test_output_am316; assert_in_delta(-0.008349091569554323, worksheet.output_am316, 0.001); end
  def test_output_an316; assert_in_delta(-0.2849234064690347, worksheet.output_an316, 0.001); end
  def test_output_ao316; assert_in_delta(-0.45570697253545966, worksheet.output_ao316, 0.001); end
  def test_output_c317; assert_in_epsilon(4, worksheet.output_c317, 0.001); end
  def test_output_e317; assert_equal("Agriculture", worksheet.output_e317); end
  def test_output_f317; assert_equal("Mt CO2e", worksheet.output_f317); end
  def test_output_g317; assert_equal("non-CO2 only", worksheet.output_g317); end
  def test_output_h317; assert_in_epsilon(11.85618007516327, worksheet.output_h317, 0.001); end
  def test_output_i317; assert_in_delta(0, (worksheet.output_i317||0), 0.001); end
  def test_output_j317; assert_in_delta(0, (worksheet.output_j317||0), 0.001); end
  def test_output_k317; assert_in_delta(0, (worksheet.output_k317||0), 0.001); end
  def test_output_l317; assert_in_delta(0, (worksheet.output_l317||0), 0.001); end
  def test_output_m317; assert_in_epsilon(11.982718812493207, worksheet.output_m317, 0.001); end
  def test_output_n317; assert_in_delta(0, (worksheet.output_n317||0), 0.001); end
  def test_output_o317; assert_in_delta(0, (worksheet.output_o317||0), 0.001); end
  def test_output_p317; assert_in_delta(0, (worksheet.output_p317||0), 0.001); end
  def test_output_q317; assert_in_delta(0, (worksheet.output_q317||0), 0.001); end
  def test_output_r317; assert_in_epsilon(11.0506551688113, worksheet.output_r317, 0.001); end
  def test_output_s317; assert_in_delta(0, (worksheet.output_s317||0), 0.001); end
  def test_output_t317; assert_in_delta(0, (worksheet.output_t317||0), 0.001); end
  def test_output_u317; assert_in_delta(0, (worksheet.output_u317||0), 0.001); end
  def test_output_v317; assert_in_delta(0, (worksheet.output_v317||0), 0.001); end
  def test_output_w317; assert_in_epsilon(9.983700195609668, worksheet.output_w317, 0.001); end
  def test_output_x317; assert_in_delta(0, (worksheet.output_x317||0), 0.001); end
  def test_output_y317; assert_in_delta(0, (worksheet.output_y317||0), 0.001); end
  def test_output_z317; assert_in_delta(0, (worksheet.output_z317||0), 0.001); end
  def test_output_aa317; assert_in_delta(0, (worksheet.output_aa317||0), 0.001); end
  def test_output_ab317; assert_in_epsilon(10.0418232537418, worksheet.output_ab317, 0.001); end
  def test_output_ac317; assert_in_epsilon(10.041845420711166, worksheet.output_ac317, 0.001); end
  def test_output_ad317; assert_in_epsilon(9.504779986629426, worksheet.output_ad317, 0.001); end
  def test_output_ae317; assert_in_epsilon(9.019740960929646, worksheet.output_ae317, 0.001); end
  def test_output_af317; assert_in_epsilon(8.580293946445199, worksheet.output_af317, 0.001); end
  def test_output_ag317; assert_in_epsilon(8.180858910819666, worksheet.output_ag317, 0.001); end
  def test_output_ah317; assert_in_epsilon(7.977783926169814, worksheet.output_ah317, 0.001); end
  def test_output_ai317; assert_in_epsilon(7.785302533779535, worksheet.output_ai317, 0.001); end
  def test_output_aj317; assert_in_epsilon(7.601684835375312, worksheet.output_aj317, 0.001); end
  def test_output_am317; assert_in_delta(-0.007514205339859137, worksheet.output_am317, 0.001); end
  def test_output_an317; assert_in_delta(-0.26044244358255053, worksheet.output_an317, 0.001); end
  def test_output_ak317; assert_in_epsilon(7.426522661262904, worksheet.output_ak317, 0.001); end
  def test_output_ao317; assert_in_delta(-0.3736159020711707, worksheet.output_ao317, 0.001); end
  def test_output_c318; assert_in_epsilon(6, worksheet.output_c318, 0.001); end
  def test_output_e318; assert_equal("Waste", worksheet.output_e318); end
  def test_output_f318; assert_equal("Mt CO2e", worksheet.output_f318); end
  def test_output_g318; assert_equal("non-CO2 only", worksheet.output_g318); end
  def test_output_h318; assert_in_epsilon(3.3266737107370887, worksheet.output_h318, 0.001); end
  def test_output_i318; assert_in_delta(0, (worksheet.output_i318||0), 0.001); end
  def test_output_j318; assert_in_delta(0, (worksheet.output_j318||0), 0.001); end
  def test_output_k318; assert_in_delta(0, (worksheet.output_k318||0), 0.001); end
  def test_output_l318; assert_in_delta(0, (worksheet.output_l318||0), 0.001); end
  def test_output_m318; assert_in_epsilon(2.9662255046909474, worksheet.output_m318, 0.001); end
  def test_output_n318; assert_in_delta(0, (worksheet.output_n318||0), 0.001); end
  def test_output_o318; assert_in_delta(0, (worksheet.output_o318||0), 0.001); end
  def test_output_p318; assert_in_delta(0, (worksheet.output_p318||0), 0.001); end
  def test_output_q318; assert_in_delta(0, (worksheet.output_q318||0), 0.001); end
  def test_output_r318; assert_in_epsilon(2.409408501765251, worksheet.output_r318, 0.001); end
  def test_output_s318; assert_in_delta(0, (worksheet.output_s318||0), 0.001); end
  def test_output_t318; assert_in_delta(0, (worksheet.output_t318||0), 0.001); end
  def test_output_u318; assert_in_delta(0, (worksheet.output_u318||0), 0.001); end
  def test_output_v318; assert_in_delta(0, (worksheet.output_v318||0), 0.001); end
  def test_output_w318; assert_in_epsilon(1.5746834316472123, worksheet.output_w318, 0.001); end
  def test_output_x318; assert_in_delta(0, (worksheet.output_x318||0), 0.001); end
  def test_output_y318; assert_in_delta(0, (worksheet.output_y318||0), 0.001); end
  def test_output_z318; assert_in_delta(0, (worksheet.output_z318||0), 0.001); end
  def test_output_aa318; assert_in_delta(0, (worksheet.output_aa318||0), 0.001); end
  def test_output_ab318; assert_in_epsilon(1.1349849861095138, worksheet.output_ab318, 0.001); end
  def test_output_ac318; assert_in_epsilon(1.117281696428572, worksheet.output_ac318, 0.001); end
  def test_output_ad318; assert_in_delta(0.9776214843750003, worksheet.output_ad318, 0.001); end
  def test_output_ae318; assert_in_delta(0.8379612723214289, worksheet.output_ae318, 0.001); end
  def test_output_af318; assert_in_delta(0.6565671540178576, worksheet.output_af318, 0.001); end
  def test_output_ag318; assert_in_delta(0.4936851607142859, worksheet.output_ag318, 0.001); end
  def test_output_ah318; assert_in_delta(0.34522352678571444, worksheet.output_ah318, 0.001); end
  def test_output_ai318; assert_in_delta(0.21345545535714294, worksheet.output_ai318, 0.001); end
  def test_output_aj318; assert_in_delta(0.09883558705357151, worksheet.output_aj318, 0.001); end
  def test_output_am318; assert_in_delta(-1, worksheet.output_am318, 0.001); end
  def test_output_an318; assert_in_delta(-1, worksheet.output_an318, 0.001); end
  def test_output_ak318; assert_in_delta(0, (worksheet.output_ak318||0), 0.001); end
  def test_output_ao318; assert_in_delta(-1, worksheet.output_ao318, 0.001); end
  def test_output_e319; assert_equal("Agriculture combustion emissions", worksheet.output_e319); end
  def test_output_f319; assert_equal("Mt CO2e", worksheet.output_f319); end
  def test_output_g319; assert_equal("Combustion emissions", worksheet.output_g319); end
  def test_output_h319; assert_in_epsilon(2.806, worksheet.output_h319, 0.001); end
  def test_output_i319; assert_in_delta(0, (worksheet.output_i319||0), 0.001); end
  def test_output_j319; assert_in_delta(0, (worksheet.output_j319||0), 0.001); end
  def test_output_k319; assert_in_delta(0, (worksheet.output_k319||0), 0.001); end
  def test_output_l319; assert_in_delta(0, (worksheet.output_l319||0), 0.001); end
  def test_output_m319; assert_in_epsilon(2.798, worksheet.output_m319, 0.001); end
  def test_output_n319; assert_in_delta(0, (worksheet.output_n319||0), 0.001); end
  def test_output_o319; assert_in_delta(0, (worksheet.output_o319||0), 0.001); end
  def test_output_p319; assert_in_delta(0, (worksheet.output_p319||0), 0.001); end
  def test_output_q319; assert_in_delta(0, (worksheet.output_q319||0), 0.001); end
  def test_output_r319; assert_in_epsilon(2.424, worksheet.output_r319, 0.001); end
  def test_output_s319; assert_in_delta(0, (worksheet.output_s319||0), 0.001); end
  def test_output_t319; assert_in_delta(0, (worksheet.output_t319||0), 0.001); end
  def test_output_u319; assert_in_delta(0, (worksheet.output_u319||0), 0.001); end
  def test_output_v319; assert_in_delta(0, (worksheet.output_v319||0), 0.001); end
  def test_output_w319; assert_in_epsilon(2.4673, worksheet.output_w319, 0.001); end
  def test_output_x319; assert_in_delta(0, (worksheet.output_x319||0), 0.001); end
  def test_output_y319; assert_in_delta(0, (worksheet.output_y319||0), 0.001); end
  def test_output_z319; assert_in_delta(0, (worksheet.output_z319||0), 0.001); end
  def test_output_aa319; assert_in_delta(0, (worksheet.output_aa319||0), 0.001); end
  def test_output_ab319; assert_in_epsilon(2.287, worksheet.output_ab319, 0.001); end
  def test_output_ac319; assert_in_epsilon(2.533402852827276, worksheet.output_ac319, 0.001); end
  def test_output_ad319; assert_in_epsilon(2.523879817289343, worksheet.output_ad319, 0.001); end
  def test_output_ae319; assert_in_epsilon(2.5144820224900464, worksheet.output_ae319, 0.001); end
  def test_output_af319; assert_in_epsilon(2.5052078213450533, worksheet.output_af319, 0.001); end
  def test_output_ag319; assert_in_epsilon(2.49605558843141, worksheet.output_ag319, 0.001); end
  def test_output_ah319; assert_in_epsilon(2.4490608375991756, worksheet.output_ah319, 0.001); end
  def test_output_ai319; assert_in_epsilon(2.419599718812456, worksheet.output_ai319, 0.001); end
  def test_output_aj319; assert_in_epsilon(2.3914952731990198, worksheet.output_aj319, 0.001); end
  def test_output_am319; assert_in_delta(-0.001721480756028626, worksheet.output_am319, 0.001); end
  def test_output_an319; assert_in_delta(-0.06659731442128525, worksheet.output_an319, 0.001); end
  def test_output_ak319; assert_in_epsilon(2.364685026481757, worksheet.output_ak319, 0.001); end
  def test_output_ao319; assert_in_delta(-0.15727547167435607, worksheet.output_ao319, 0.001); end
  def test_output_c320; assert_equal("VII", worksheet.output_c320); end
  def test_output_e320; assert_equal("Electricity distribution, storage, and balancing", worksheet.output_e320); end
  def test_output_f320; assert_equal("Mt CO2e", worksheet.output_f320); end
  def test_output_g320; assert_equal("Check ?? Mais 2010 = 0", worksheet.output_g320); end
  def test_output_x320; assert_in_delta(0, (worksheet.output_x320||0), 0.001); end
  def test_output_y320; assert_in_delta(0, (worksheet.output_y320||0), 0.001); end
  def test_output_z320; assert_in_delta(0, (worksheet.output_z320||0), 0.001); end
  def test_output_aa320; assert_in_delta(0, (worksheet.output_aa320||0), 0.001); end
  def test_output_ab320; assert_in_delta(0, (worksheet.output_ab320||0), 0.001); end
  def test_output_am320; assert_equal("", worksheet.output_am320); end
  def test_output_an320; assert_equal("", worksheet.output_an320); end
  def test_output_ak320; assert_in_epsilon(1.571547336900856, worksheet.output_ak320, 0.001); end
  def test_output_ao320; assert_equal("", worksheet.output_ao320); end
  def test_output_c321; assert_equal("VIII", worksheet.output_c321); end
  def test_output_e321; assert_equal("H2 Production", worksheet.output_e321); end
  def test_output_f321; assert_equal("Mt CO2e", worksheet.output_f321); end
  def test_output_g321; assert_equal("Check ?? Mais 2010 = 0", worksheet.output_g321); end
  def test_output_x321; assert_in_delta(0, (worksheet.output_x321||0), 0.001); end
  def test_output_y321; assert_in_delta(0, (worksheet.output_y321||0), 0.001); end
  def test_output_z321; assert_in_delta(0, (worksheet.output_z321||0), 0.001); end
  def test_output_aa321; assert_in_delta(0, (worksheet.output_aa321||0), 0.001); end
  def test_output_ab321; assert_in_delta(0, (worksheet.output_ab321||0), 0.001); end
  def test_output_am321; assert_equal("", worksheet.output_am321); end
  def test_output_an321; assert_equal("", worksheet.output_an321); end
  def test_output_ak321; assert_in_delta(0, (worksheet.output_ak321||0), 0.001); end
  def test_output_ao321; assert_equal("", worksheet.output_ao321); end
  def test_output_c322; assert_equal("IX", worksheet.output_c322); end
  def test_output_e322; assert_equal("Heating", worksheet.output_e322); end
  def test_output_f322; assert_equal("Mt CO2e", worksheet.output_f322); end
  def test_output_h322; assert_in_epsilon(25.806224263755844, worksheet.output_h322, 0.001); end
  def test_output_x322; assert_in_delta(0, (worksheet.output_x322||0), 0.001); end
  def test_output_y322; assert_in_delta(0, (worksheet.output_y322||0), 0.001); end
  def test_output_z322; assert_in_delta(0, (worksheet.output_z322||0), 0.001); end
  def test_output_aa322; assert_in_delta(0, (worksheet.output_aa322||0), 0.001); end
  def test_output_ab322; assert_in_epsilon(31.47100519970225, worksheet.output_ab322, 0.001); end
  def test_output_am322; assert_in_delta(-0.03225204932435499, worksheet.output_am322, 0.001); end
  def test_output_an322; assert_in_delta(-0.7305424151891293, worksheet.output_an322, 0.001); end
  def test_output_ak322; assert_in_epsilon(6.473131438488017, worksheet.output_ak322, 0.001); end
  def test_output_ao322; assert_in_delta(-0.7491639469482811, worksheet.output_ao322, 0.001); end
  def test_output_c323; assert_equal("X", worksheet.output_c323); end
  def test_output_e323; assert_equal("Lighting and appliances", worksheet.output_e323); end
  def test_output_f323; assert_equal("Mt CO2e", worksheet.output_f323); end
  def test_output_ab323; assert_equal("incl. Above", worksheet.output_ab323); end
  def test_output_am323; assert_in_delta(-0.06280556441448792, worksheet.output_am323, 0.001); end
  def test_output_an323; assert_in_delta(-0.9253227948729535, worksheet.output_an323, 0.001); end
  def test_output_ak323; assert_in_delta(0.00429429324842828, worksheet.output_ak323, 0.001); end
  def test_output_ao323; assert_equal("", worksheet.output_ao323); end
  def test_output_c324; assert_equal("XI", worksheet.output_c324); end
  def test_output_e324; assert_equal("Industry", worksheet.output_e324); end
  def test_output_f324; assert_equal("Mt CO2e", worksheet.output_f324); end
  def test_output_g324; assert_equal("ok", worksheet.output_g324); end
  def test_output_h324; assert_in_epsilon(54.71655160941479, worksheet.output_h324, 0.001); end
  def test_output_i324; assert_in_delta(0, (worksheet.output_i324||0), 0.001); end
  def test_output_j324; assert_in_delta(0, (worksheet.output_j324||0), 0.001); end
  def test_output_k324; assert_in_delta(0, (worksheet.output_k324||0), 0.001); end
  def test_output_l324; assert_in_delta(0, (worksheet.output_l324||0), 0.001); end
  def test_output_m324; assert_in_epsilon(57.402834513345, worksheet.output_m324, 0.001); end
  def test_output_n324; assert_in_delta(0.141046429926288, worksheet.output_n324, 0.001); end
  def test_output_o324; assert_in_delta(0, (worksheet.output_o324||0), 0.001); end
  def test_output_p324; assert_in_delta(0, (worksheet.output_p324||0), 0.001); end
  def test_output_q324; assert_in_delta(0, (worksheet.output_q324||0), 0.001); end
  def test_output_r324; assert_in_epsilon(55.37486514951098, worksheet.output_r324, 0.001); end
  def test_output_s324; assert_in_delta(0, (worksheet.output_s324||0), 0.001); end
  def test_output_t324; assert_in_delta(0, (worksheet.output_t324||0), 0.001); end
  def test_output_u324; assert_in_delta(0, (worksheet.output_u324||0), 0.001); end
  def test_output_v324; assert_in_delta(0, (worksheet.output_v324||0), 0.001); end
  def test_output_w324; assert_in_epsilon(51.44861742029085, worksheet.output_w324, 0.001); end
  def test_output_x324; assert_in_delta(0, (worksheet.output_x324||0), 0.001); end
  def test_output_y324; assert_in_delta(0, (worksheet.output_y324||0), 0.001); end
  def test_output_z324; assert_in_delta(0, (worksheet.output_z324||0), 0.001); end
  def test_output_aa324; assert_in_delta(0, (worksheet.output_aa324||0), 0.001); end
  def test_output_ab324; assert_in_epsilon(45.90771252911647, worksheet.output_ab324, 0.001); end
  def test_output_am324; assert_in_delta(-0.025254412177670105, worksheet.output_am324, 0.001); end
  def test_output_an324; assert_in_delta(-0.6405395436189864, worksheet.output_an324, 0.001); end
  def test_output_ak324; assert_in_epsilon(18.70259688834414, worksheet.output_ak324, 0.001); end
  def test_output_ao324; assert_in_delta(-0.6581912357735995, worksheet.output_ao324, 0.001); end
  def test_output_c325; assert_equal("XI.a", worksheet.output_c325); end
  def test_output_e325; assert_equal("Steel Industry", worksheet.output_e325); end
  def test_output_f325; assert_equal("Mt CO2e", worksheet.output_f325); end
  def test_output_ad325; assert_in_epsilon(8.314010574458463, worksheet.output_ad325, 0.001); end
  def test_output_ae325; assert_in_epsilon(8.09125226023477, worksheet.output_ae325, 0.001); end
  def test_output_af325; assert_in_epsilon(7.87327537110591, worksheet.output_af325, 0.001); end
  def test_output_ag325; assert_in_epsilon(7.0038695965216125, worksheet.output_ag325, 0.001); end
  def test_output_ah325; assert_in_epsilon(6.858800587076233, worksheet.output_ah325, 0.001); end
  def test_output_ai325; assert_in_epsilon(6.71629376391062, worksheet.output_ai325, 0.001); end
  def test_output_aj325; assert_in_epsilon(6.576314018349263, worksheet.output_aj325, 0.001); end
  def test_output_am325; assert_in_delta(-0.026169122469196893, worksheet.output_am325, 0.001); end
  def test_output_an325; assert_in_delta(-0.6537883888428628, worksheet.output_an325, 0.001); end
  def test_output_ak325; assert_in_epsilon(3.1958032428482817, worksheet.output_ak325, 0.001); end
  def test_output_ao325; assert_equal("", worksheet.output_ao325); end
  def test_output_c326; assert_equal("XI.b", worksheet.output_c326); end
  def test_output_e326; assert_equal("Cement Industry", worksheet.output_e326); end
  def test_output_f326; assert_equal("Mt CO2e", worksheet.output_f326); end
  def test_output_ad326; assert_in_epsilon(4.130654779981342, worksheet.output_ad326, 0.001); end
  def test_output_ae326; assert_in_epsilon(3.8132488466304437, worksheet.output_ae326, 0.001); end
  def test_output_af326; assert_in_epsilon(3.5269256474190462, worksheet.output_af326, 0.001); end
  def test_output_ag326; assert_in_epsilon(2.769937241938435, worksheet.output_ag326, 0.001); end
  def test_output_ah326; assert_in_epsilon(2.1168880160425, worksheet.output_ah326, 0.001); end
  def test_output_ai326; assert_in_epsilon(1.538519594199033, worksheet.output_ai326, 0.001); end
  def test_output_aj326; assert_in_epsilon(1.0376686493404856, worksheet.output_aj326, 0.001); end
  def test_output_am326; assert_in_delta(-0.03508687060287985, worksheet.output_am326, 0.001); end
  def test_output_an326; assert_in_delta(-0.7603769275840786, worksheet.output_an326, 0.001); end
  def test_output_ak326; assert_in_epsilon(1.0203183705321373, worksheet.output_ak326, 0.001); end
  def test_output_ao326; assert_equal("", worksheet.output_ao326); end
  def test_output_c327; assert_equal("XI.c", worksheet.output_c327); end
  def test_output_e327; assert_equal("Lime Industry", worksheet.output_e327); end
  def test_output_f327; assert_equal("Mt CO2e", worksheet.output_f327); end
  def test_output_ad327; assert_in_epsilon(2.5692836074611556, worksheet.output_ad327, 0.001); end
  def test_output_ae327; assert_in_epsilon(2.5037512411560248, worksheet.output_ae327, 0.001); end
  def test_output_af327; assert_in_epsilon(2.467230956124154, worksheet.output_af327, 0.001); end
  def test_output_ag327; assert_in_epsilon(2.2656555770918887, worksheet.output_ag327, 0.001); end
  def test_output_ah327; assert_in_epsilon(2.0691971658350594, worksheet.output_ah327, 0.001); end
  def test_output_ai327; assert_in_epsilon(1.8777827649655272, worksheet.output_ai327, 0.001); end
  def test_output_aj327; assert_in_epsilon(1.6913494823297948, worksheet.output_aj327, 0.001); end
  def test_output_am327; assert_in_delta(-0.014635686379576018, worksheet.output_am327, 0.001); end
  def test_output_an327; assert_in_delta(-0.4455362152883049, worksheet.output_an327, 0.001); end
  def test_output_ak327; assert_in_epsilon(1.4632001133780714, worksheet.output_ak327, 0.001); end
  def test_output_ao327; assert_equal("", worksheet.output_ao327); end
  def test_output_c328; assert_equal("XI.d", worksheet.output_c328); end
  def test_output_e328; assert_equal("Glass Industry", worksheet.output_e328); end
  def test_output_f328; assert_equal("Mt CO2e", worksheet.output_f328); end
  def test_output_ad328; assert_in_epsilon(1.0793834894561858, worksheet.output_ad328, 0.001); end
  def test_output_ae328; assert_in_epsilon(1.0466323653598835, worksheet.output_ae328, 0.001); end
  def test_output_af328; assert_in_epsilon(1.074082959257907, worksheet.output_af328, 0.001); end
  def test_output_ag328; assert_in_epsilon(1.102678852235222, worksheet.output_ag328, 0.001); end
  def test_output_ah328; assert_in_epsilon(1.156195398496787, worksheet.output_ah328, 0.001); end
  def test_output_ai328; assert_in_epsilon(1.2124566284155238, worksheet.output_ai328, 0.001); end
  def test_output_aj328; assert_in_epsilon(1.2715614644703623, worksheet.output_aj328, 0.001); end
  def test_output_am328; assert_in_delta(0.007178422664208428, worksheet.output_am328, 0.001); end
  def test_output_an328; assert_in_delta(0.3312405038061992, worksheet.output_an328, 0.001); end
  def test_output_ak328; assert_in_epsilon(1.333609558114846, worksheet.output_ak328, 0.001); end
  def test_output_ao328; assert_equal("", worksheet.output_ao328); end
  def test_output_c329; assert_equal("XI.e", worksheet.output_c329); end
  def test_output_e329; assert_equal("Chemicals Industry", worksheet.output_e329); end
  def test_output_f329; assert_equal("Mt CO2e", worksheet.output_f329); end
  def test_output_ad329; assert_in_epsilon(12.83109278302363, worksheet.output_ad329, 0.001); end
  def test_output_ae329; assert_in_epsilon(12.184067325637592, worksheet.output_ae329, 0.001); end
  def test_output_af329; assert_in_epsilon(11.548015466963474, worksheet.output_af329, 0.001); end
  def test_output_ag329; assert_in_epsilon(8.596802477510243, worksheet.output_ag329, 0.001); end
  def test_output_ah329; assert_in_epsilon(7.982697816259963, worksheet.output_ah329, 0.001); end
  def test_output_ai329; assert_in_epsilon(7.379566753721604, worksheet.output_ai329, 0.001); end
  def test_output_aj329; assert_in_epsilon(6.787409289895162, worksheet.output_aj329, 0.001); end
  def test_output_am329; assert_in_delta(-0.019178558957901992, worksheet.output_am329, 0.001); end
  def test_output_an329; assert_in_delta(-0.5391091955800815, worksheet.output_an329, 0.001); end
  def test_output_ak329; assert_in_epsilon(6.206225424780644, worksheet.output_ak329, 0.001); end
  def test_output_ao329; assert_equal("", worksheet.output_ao329); end
  def test_output_c330; assert_equal("XI.f", worksheet.output_c330); end
  def test_output_e330; assert_equal("Pulp & Paper Industry", worksheet.output_e330); end
  def test_output_f330; assert_equal("Mt CO2e", worksheet.output_f330); end
  def test_output_ad330; assert_in_epsilon(3.1822052046545974, worksheet.output_ad330, 0.001); end
  def test_output_ae330; assert_in_epsilon(3.0919530265834263, worksheet.output_ae330, 0.001); end
  def test_output_af330; assert_in_epsilon(3.0014787385891744, worksheet.output_af330, 0.001); end
  def test_output_ag330; assert_in_epsilon(2.920357691600278, worksheet.output_ag330, 0.001); end
  def test_output_ah330; assert_in_epsilon(2.8392366446113813, worksheet.output_ah330, 0.001); end
  def test_output_ai330; assert_in_epsilon(2.758115597622485, worksheet.output_ai330, 0.001); end
  def test_output_aj330; assert_in_epsilon(2.676994550633588, worksheet.output_aj330, 0.001); end
  def test_output_am330; assert_in_delta(-0.005773866041817954, worksheet.output_am330, 0.001); end
  def test_output_an330; assert_in_delta(-0.2067556490196878, worksheet.output_an330, 0.001); end
  def test_output_ak330; assert_in_epsilon(2.595873503644692, worksheet.output_ak330, 0.001); end
  def test_output_ao330; assert_equal("", worksheet.output_ao330); end
  def test_output_c331; assert_equal("XI.g", worksheet.output_c331); end
  def test_output_e331; assert_equal("Oil & Gas Industry", worksheet.output_e331); end
  def test_output_f331; assert_equal("Mt CO2e", worksheet.output_f331); end
  def test_output_ad331; assert_in_epsilon(11.427458814513876, worksheet.output_ad331, 0.001); end
  def test_output_ae331; assert_in_epsilon(9.837226524334612, worksheet.output_ae331, 0.001); end
  def test_output_af331; assert_in_epsilon(8.340570053333641, worksheet.output_af331, 0.001); end
  def test_output_ag331; assert_in_epsilon(4.873227230911131, worksheet.output_ag331, 0.001); end
  def test_output_ah331; assert_in_epsilon(3.160511214578544, worksheet.output_ah331, 0.001); end
  def test_output_ai331; assert_in_epsilon(1.9142183434743285, worksheet.output_ai331, 0.001); end
  def test_output_aj331; assert_in_delta(0.9991097180295077, worksheet.output_aj331, 0.001); end
  def test_output_am331; assert_in_delta(-0.08332835873368405, worksheet.output_am331, 0.001); end
  def test_output_an331; assert_in_delta(-0.9691999204660536, worksheet.output_an331, 0.001); end
  def test_output_ak331; assert_in_delta(0.3632937885305547, worksheet.output_ak331, 0.001); end
  def test_output_ao331; assert_equal("", worksheet.output_ao331); end
  def test_output_c332; assert_equal("XI.h", worksheet.output_c332); end
  def test_output_e332; assert_equal("Food, drinks and tobacco Industry", worksheet.output_e332); end
  def test_output_f332; assert_equal("Mt CO2e", worksheet.output_f332); end
  def test_output_ad332; assert_in_epsilon(2.2760904705229383, worksheet.output_ad332, 0.001); end
  def test_output_ae332; assert_in_epsilon(2.153174795942117, worksheet.output_ae332, 0.001); end
  def test_output_af332; assert_in_epsilon(2.037685615825147, worksheet.output_af332, 0.001); end
  def test_output_ag332; assert_in_epsilon(1.9460647688403638, worksheet.output_ag332, 0.001); end
  def test_output_ah332; assert_in_epsilon(1.868282365737238, worksheet.output_ah332, 0.001); end
  def test_output_ai332; assert_in_epsilon(1.7898146855667445, worksheet.output_ai332, 0.001); end
  def test_output_aj332; assert_in_epsilon(1.7104683378580139, worksheet.output_aj332, 0.001); end
  def test_output_am332; assert_in_delta(-0.009705359452034212, worksheet.output_am332, 0.001); end
  def test_output_an332; assert_in_delta(-0.32301796099709146, worksheet.output_an332, 0.001); end
  def test_output_ak332; assert_in_epsilon(1.630307172102161, worksheet.output_ak332, 0.001); end
  def test_output_ao332; assert_equal("", worksheet.output_ao332); end
  def test_output_c333; assert_equal("XI.i", worksheet.output_c333); end
  def test_output_e333; assert_equal("Machines Industry", worksheet.output_e333); end
  def test_output_f333; assert_equal("Mt CO2e", worksheet.output_f333); end
  def test_output_ad333; assert_in_delta(0, (worksheet.output_ad333||0), 0.001); end
  def test_output_ae333; assert_in_delta(0, (worksheet.output_ae333||0), 0.001); end
  def test_output_af333; assert_in_delta(0, (worksheet.output_af333||0), 0.001); end
  def test_output_ag333; assert_in_delta(0, (worksheet.output_ag333||0), 0.001); end
  def test_output_ah333; assert_in_delta(0, (worksheet.output_ah333||0), 0.001); end
  def test_output_ai333; assert_in_delta(0, (worksheet.output_ai333||0), 0.001); end
  def test_output_aj333; assert_in_delta(0, (worksheet.output_aj333||0), 0.001); end
  def test_output_am333; assert_equal("", worksheet.output_am333); end
  def test_output_an333; assert_equal("", worksheet.output_an333); end
  def test_output_ak333; assert_in_delta(0, (worksheet.output_ak333||0), 0.001); end
  def test_output_ao333; assert_equal("", worksheet.output_ao333); end
  def test_output_c334; assert_equal("XI.j", worksheet.output_c334); end
  def test_output_e334; assert_equal("Non-Ferrous metals Industry", worksheet.output_e334); end
  def test_output_f334; assert_equal("Mt CO2e", worksheet.output_f334); end
  def test_output_ad334; assert_in_delta(0.42016565143785933, worksheet.output_ad334, 0.001); end
  def test_output_ae334; assert_in_delta(0.41747737633857107, worksheet.output_ae334, 0.001); end
  def test_output_af334; assert_in_delta(0.41486915888701015, worksheet.output_af334, 0.001); end
  def test_output_ag334; assert_in_delta(0.4138025876445125, worksheet.output_ag334, 0.001); end
  def test_output_ah334; assert_in_delta(0.4121723436949359, worksheet.output_ah334, 0.001); end
  def test_output_ai334; assert_in_delta(0.4099784270382803, worksheet.output_ai334, 0.001); end
  def test_output_aj334; assert_in_delta(0.40722083767454564, worksheet.output_aj334, 0.001); end
  def test_output_am334; assert_in_delta(-0.0011563123519853225, worksheet.output_am334, 0.001); end
  def test_output_an334; assert_in_delta(-0.0452247016540801, worksheet.output_an334, 0.001); end
  def test_output_ak334; assert_in_delta(0.4038995756037322, worksheet.output_ak334, 0.001); end
  def test_output_ao334; assert_equal("", worksheet.output_ao334); end
  def test_output_c335; assert_equal("XI.k", worksheet.output_c335); end
  def test_output_e335; assert_equal("Construction industry", worksheet.output_e335); end
  def test_output_f335; assert_equal("Mt CO2e", worksheet.output_f335); end
  def test_output_ad335; assert_in_delta(0.5912142972219835, worksheet.output_ad335, 0.001); end
  def test_output_ae335; assert_in_delta(0.6538532240504362, worksheet.output_ae335, 0.001); end
  def test_output_af335; assert_in_delta(0.7244695512616335, worksheet.output_af335, 0.001); end
  def test_output_ag335; assert_in_delta(0.673421696994176, worksheet.output_ag335, 0.001); end
  def test_output_ah335; assert_in_delta(0.6244574286151863, worksheet.output_ah335, 0.001); end
  def test_output_ai335; assert_in_delta(0.5775767461246641, worksheet.output_ai335, 0.001); end
  def test_output_aj335; assert_in_delta(0.5327796495226098, worksheet.output_aj335, 0.001); end
  def test_output_am335; assert_in_delta(-0.00208373402360551, worksheet.output_am335, 0.001); end
  def test_output_an335; assert_in_delta(-0.08005033345743373, worksheet.output_an335, 0.001); end
  def test_output_ak335; assert_in_delta(0.49006613880902306, worksheet.output_ak335, 0.001); end
  def test_output_ao335; assert_equal("", worksheet.output_ao335); end
  def test_output_c336; assert_equal("XI.l", worksheet.output_c336); end
  def test_output_e336; assert_equal("Other Industry", worksheet.output_e336); end
  def test_output_f336; assert_equal("Mt CO2e", worksheet.output_f336); end
  def test_output_ad336; assert_in_delta(0, (worksheet.output_ad336||0), 0.001); end
  def test_output_ae336; assert_in_delta(0, (worksheet.output_ae336||0), 0.001); end
  def test_output_af336; assert_in_delta(0, (worksheet.output_af336||0), 0.001); end
  def test_output_ag336; assert_in_delta(0, (worksheet.output_ag336||0), 0.001); end
  def test_output_ah336; assert_in_delta(0, (worksheet.output_ah336||0), 0.001); end
  def test_output_ai336; assert_in_delta(0, (worksheet.output_ai336||0), 0.001); end
  def test_output_aj336; assert_in_delta(0, (worksheet.output_aj336||0), 0.001); end
  def test_output_am336; assert_in_delta(-1, worksheet.output_am336, 0.001); end
  def test_output_an336; assert_in_delta(-1, worksheet.output_an336, 0.001); end
  def test_output_ak336; assert_in_delta(0, (worksheet.output_ak336||0), 0.001); end
  def test_output_ao336; assert_equal("", worksheet.output_ao336); end
  def test_output_c337; assert_equal("XII", worksheet.output_c337); end
  def test_output_e337; assert_equal("Transport", worksheet.output_e337); end
  def test_output_f337; assert_equal("Mt CO2e", worksheet.output_f337); end
  def test_output_g337; assert_equal("Scope OK = all domestic", worksheet.output_g337); end
  def test_output_x337; assert_in_delta(0, (worksheet.output_x337||0), 0.001); end
  def test_output_y337; assert_in_delta(0, (worksheet.output_y337||0), 0.001); end
  def test_output_z337; assert_in_delta(0, (worksheet.output_z337||0), 0.001); end
  def test_output_aa337; assert_in_delta(0, (worksheet.output_aa337||0), 0.001); end
  def test_output_ab337; assert_in_epsilon(25.3644527403487, worksheet.output_ab337, 0.001); end
  def test_output_am337; assert_in_delta(-0.02701316584095348, worksheet.output_am337, 0.001); end
  def test_output_an337; assert_in_delta(-0.6655905447234626, worksheet.output_an337, 0.001); end
  def test_output_ak338; assert_in_epsilon(2.0822338670924014, worksheet.output_ak338, 0.001); end
  def test_output_ak339; assert_in_epsilon(5.836353556558248, worksheet.output_ak339, 0.001); end
  def test_output_ak337; assert_in_epsilon(7.918587423650649, worksheet.output_ak337, 0.001); end
  def test_output_ao337; assert_equal("", worksheet.output_ao337); end
  def test_output_c338; assert_equal("XII.a", worksheet.output_c338); end
  def test_output_e338; assert_equal("Domestic passenger transport", worksheet.output_e338); end
  def test_output_f338; assert_equal("Mt CO2e", worksheet.output_f338); end
  def test_output_g338; assert_equal("Energy breakdown available", worksheet.output_g338); end
  def test_output_am338; assert_in_delta(-0.04847751976835579, worksheet.output_am338, 0.001); end
  def test_output_an338; assert_in_delta(-0.8629868890141424, worksheet.output_an338, 0.001); end
  def test_output_ao338; assert_equal("", worksheet.output_ao338); end
  def test_output_c339; assert_equal("XII.b", worksheet.output_c339); end
  def test_output_e339; assert_equal("Domestic freight", worksheet.output_e339); end
  def test_output_f339; assert_equal("Mt CO2e", worksheet.output_f339); end
  def test_output_g339; assert_equal("Energy breakdown available", worksheet.output_g339); end
  def test_output_am339; assert_in_delta(-0.009302416120727353, worksheet.output_am339, 0.001); end
  def test_output_an339; assert_in_delta(-0.3119117316847715, worksheet.output_an339, 0.001); end
  def test_output_ao339; assert_equal("", worksheet.output_ao339); end
  def test_output_c340; assert_equal("XII.c", worksheet.output_c340); end
  def test_output_e340; assert_equal("International aviation", worksheet.output_e340); end
  def test_output_f340; assert_equal("Mt CO2e", worksheet.output_f340); end
  def test_output_g340; assert_equal("Energy breakdown available", worksheet.output_g340); end
  def test_output_ac340; assert_in_epsilon(4.4020670492089, worksheet.output_ac340, 0.001); end
  def test_output_ad340; assert_in_epsilon(4.2117127013694535, worksheet.output_ad340, 0.001); end
  def test_output_ae340; assert_in_epsilon(4.029589663352491, worksheet.output_ae340, 0.001); end
  def test_output_af340; assert_in_epsilon(3.8553419965510765, worksheet.output_af340, 0.001); end
  def test_output_ag340; assert_in_epsilon(3.68862915386882, worksheet.output_ag340, 0.001); end
  def test_output_ah340; assert_in_epsilon(3.529125314159597, worksheet.output_ah340, 0.001); end
  def test_output_ai340; assert_in_epsilon(3.3765187454474606, worksheet.output_ai340, 0.001); end
  def test_output_aj340; assert_in_epsilon(3.230511195682215, worksheet.output_aj340, 0.001); end
  def test_output_am340; assert_in_delta(-0.008801999999999977, worksheet.output_am340, 0.001); end
  def test_output_an340; assert_in_delta(-0.2978713692251872, worksheet.output_an340, 0.001); end
  def test_output_ak340; assert_in_epsilon(3.090817309839965, worksheet.output_ak340, 0.001); end
  def test_output_ao340; assert_equal("", worksheet.output_ao340); end
  def test_output_c341; assert_equal("XII.d", worksheet.output_c341); end
  def test_output_e341; assert_equal("Domestic aviation [UNUSED - see XII.a]", worksheet.output_e341); end
  def test_output_f341; assert_equal("Mt CO2e", worksheet.output_f341); end
  def test_output_g341; assert_equal("Energy breakdown available", worksheet.output_g341); end
  def test_output_ac341; assert_in_delta(0, (worksheet.output_ac341||0), 0.001); end
  def test_output_ad341; assert_in_delta(0, (worksheet.output_ad341||0), 0.001); end
  def test_output_ae341; assert_in_delta(0, (worksheet.output_ae341||0), 0.001); end
  def test_output_af341; assert_in_delta(0, (worksheet.output_af341||0), 0.001); end
  def test_output_ag341; assert_in_delta(0, (worksheet.output_ag341||0), 0.001); end
  def test_output_ah341; assert_in_delta(0, (worksheet.output_ah341||0), 0.001); end
  def test_output_ai341; assert_in_delta(0, (worksheet.output_ai341||0), 0.001); end
  def test_output_aj341; assert_in_delta(0, (worksheet.output_aj341||0), 0.001); end
  def test_output_am341; assert_equal("", worksheet.output_am341); end
  def test_output_an341; assert_equal("", worksheet.output_an341); end
  def test_output_ak341; assert_in_delta(0, (worksheet.output_ak341||0), 0.001); end
  def test_output_ao341; assert_equal("", worksheet.output_ao341); end
  def test_output_c342; assert_equal("XII.e", worksheet.output_c342); end
  def test_output_e342; assert_equal("International shipping [UNUSED]", worksheet.output_e342); end
  def test_output_f342; assert_equal("Mt CO2e", worksheet.output_f342); end
  def test_output_g342; assert_equal("Energy breakdown available", worksheet.output_g342); end
  def test_output_ac342; assert_in_delta(0, (worksheet.output_ac342||0), 0.001); end
  def test_output_ad342; assert_in_delta(0, (worksheet.output_ad342||0), 0.001); end
  def test_output_ae342; assert_in_delta(0, (worksheet.output_ae342||0), 0.001); end
  def test_output_af342; assert_in_delta(0, (worksheet.output_af342||0), 0.001); end
  def test_output_ag342; assert_in_delta(0, (worksheet.output_ag342||0), 0.001); end
  def test_output_ah342; assert_in_delta(0, (worksheet.output_ah342||0), 0.001); end
  def test_output_ai342; assert_in_delta(0, (worksheet.output_ai342||0), 0.001); end
  def test_output_aj342; assert_in_delta(0, (worksheet.output_aj342||0), 0.001); end
  def test_output_am342; assert_equal("", worksheet.output_am342); end
  def test_output_an342; assert_equal("", worksheet.output_an342); end
  def test_output_ak342; assert_in_delta(0, (worksheet.output_ak342||0), 0.001); end
  def test_output_ao342; assert_equal("", worksheet.output_ao342); end
  def test_output_c343; assert_equal("XII.f", worksheet.output_c343); end
  def test_output_e343; assert_equal("National navigation [UNUSED - see XII.a]", worksheet.output_e343); end
  def test_output_f343; assert_equal("Mt CO2e", worksheet.output_f343); end
  def test_output_g343; assert_equal("Energy breakdown available", worksheet.output_g343); end
  def test_output_ac343; assert_in_delta(0, (worksheet.output_ac343||0), 0.001); end
  def test_output_ad343; assert_in_delta(0, (worksheet.output_ad343||0), 0.001); end
  def test_output_ae343; assert_in_delta(0, (worksheet.output_ae343||0), 0.001); end
  def test_output_af343; assert_in_delta(0, (worksheet.output_af343||0), 0.001); end
  def test_output_ag343; assert_in_delta(0, (worksheet.output_ag343||0), 0.001); end
  def test_output_ah343; assert_in_delta(0, (worksheet.output_ah343||0), 0.001); end
  def test_output_ai343; assert_in_delta(0, (worksheet.output_ai343||0), 0.001); end
  def test_output_aj343; assert_in_delta(0, (worksheet.output_aj343||0), 0.001); end
  def test_output_am343; assert_equal("", worksheet.output_am343); end
  def test_output_an343; assert_equal("", worksheet.output_an343); end
  def test_output_ak343; assert_in_delta(0, (worksheet.output_ak343||0), 0.001); end
  def test_output_ao343; assert_equal("", worksheet.output_ao343); end
  def test_output_c344; assert_equal("XIII", worksheet.output_c344); end
  def test_output_e344; assert_equal("Food consumption [UNUSED]", worksheet.output_e344); end
  def test_output_f344; assert_equal("Mt CO2e", worksheet.output_f344); end
  def test_output_g344; assert_equal("Ok", worksheet.output_g344); end
  def test_output_ab344; assert_in_delta(0, (worksheet.output_ab344||0), 0.001); end
  def test_output_am344; assert_equal("", worksheet.output_am344); end
  def test_output_an344; assert_equal("", worksheet.output_an344); end
  def test_output_ak344; assert_in_delta(0, (worksheet.output_ak344||0), 0.001); end
  def test_output_ao344; assert_equal("", worksheet.output_ao344); end
  def test_output_c345; assert_equal("XIV", worksheet.output_c345); end
  def test_output_e345; assert_equal("Geosequestration", worksheet.output_e345); end
  def test_output_f345; assert_equal("Mt CO2e", worksheet.output_f345); end
  def test_output_g345; assert_equal("Ok", worksheet.output_g345); end
  def test_output_ab345; assert_in_delta(0, (worksheet.output_ab345||0), 0.001); end
  def test_output_am345; assert_equal("", worksheet.output_am345); end
  def test_output_an345; assert_equal("", worksheet.output_an345); end
  def test_output_ak345; assert_in_delta(0, (worksheet.output_ak345||0), 0.001); end
  def test_output_ao345; assert_equal("", worksheet.output_ao345); end
  def test_output_c346; assert_equal("XV", worksheet.output_c346); end
  def test_output_e346; assert_equal("Fossil fuel production", worksheet.output_e346); end
  def test_output_f346; assert_equal("Mt CO2e", worksheet.output_f346); end
  def test_output_g346; assert_equal("Ok", worksheet.output_g346); end
  def test_output_ab346; assert_in_delta(0, (worksheet.output_ab346||0), 0.001); end
  def test_output_am346; assert_equal("", worksheet.output_am346); end
  def test_output_an346; assert_equal("", worksheet.output_an346); end
  def test_output_ak346; assert_in_delta(0, (worksheet.output_ak346||0), 0.001); end
  def test_output_ao346; assert_equal("", worksheet.output_ao346); end
  def test_output_c347; assert_equal("XVI", worksheet.output_c347); end
  def test_output_e347; assert_equal("Transfers", worksheet.output_e347); end
  def test_output_f347; assert_equal("Mt CO2e", worksheet.output_f347); end
  def test_output_g347; assert_equal("Ok", worksheet.output_g347); end
  def test_output_ab347; assert_in_delta(0, (worksheet.output_ab347||0), 0.001); end
  def test_output_am347; assert_equal("", worksheet.output_am347); end
  def test_output_an347; assert_equal("", worksheet.output_an347); end
  def test_output_ak347; assert_in_delta(0, (worksheet.output_ak347||0), 0.001); end
  def test_output_ao347; assert_equal("", worksheet.output_ao347); end
  def test_output_c348; assert_equal("XVII", worksheet.output_c348); end
  def test_output_e348; assert_equal("District heating", worksheet.output_e348); end
  def test_output_f348; assert_equal("Mt CO2e", worksheet.output_f348); end
  def test_output_g348; assert_equal("??? What is this ??", worksheet.output_g348); end
  def test_output_ab348; assert_in_delta(0, (worksheet.output_ab348||0), 0.001); end
  def test_output_am348; assert_equal("", worksheet.output_am348); end
  def test_output_an348; assert_equal("", worksheet.output_an348); end
  def test_output_ak348; assert_in_delta(0, (worksheet.output_ak348||0), 0.001); end
  def test_output_ao348; assert_equal("", worksheet.output_ao348); end
  def test_output_e349; assert_equal("Total gross of biomass excl. int'l aviation", worksheet.output_e349); end
  def test_output_f349; assert_equal("Mt CO2e", worksheet.output_f349); end
  def test_output_h349; assert_in_epsilon(98.51162965907099, worksheet.output_h349, 0.001); end
  def test_output_i349; assert_in_delta(0, (worksheet.output_i349||0), 0.001); end
  def test_output_j349; assert_in_delta(0, (worksheet.output_j349||0), 0.001); end
  def test_output_k349; assert_in_delta(0, (worksheet.output_k349||0), 0.001); end
  def test_output_l349; assert_in_delta(0, (worksheet.output_l349||0), 0.001); end
  def test_output_m349; assert_in_epsilon(75.14977883052916, worksheet.output_m349, 0.001); end
  def test_output_n349; assert_in_delta(0.141046429926288, worksheet.output_n349, 0.001); end
  def test_output_o349; assert_in_delta(0, (worksheet.output_o349||0), 0.001); end
  def test_output_p349; assert_in_delta(0, (worksheet.output_p349||0), 0.001); end
  def test_output_q349; assert_in_delta(0, (worksheet.output_q349||0), 0.001); end
  def test_output_r349; assert_in_epsilon(71.25892882008753, worksheet.output_r349, 0.001); end
  def test_output_s349; assert_in_delta(0, (worksheet.output_s349||0), 0.001); end
  def test_output_t349; assert_in_delta(0, (worksheet.output_t349||0), 0.001); end
  def test_output_u349; assert_in_delta(0, (worksheet.output_u349||0), 0.001); end
  def test_output_v349; assert_in_delta(0, (worksheet.output_v349||0), 0.001); end
  def test_output_w349; assert_in_epsilon(65.47430104754773, worksheet.output_w349, 0.001); end
  def test_output_x349; assert_in_delta(0, (worksheet.output_x349||0), 0.001); end
  def test_output_y349; assert_in_delta(0, (worksheet.output_y349||0), 0.001); end
  def test_output_z349; assert_in_delta(0, (worksheet.output_z349||0), 0.001); end
  def test_output_aa349; assert_in_delta(0, (worksheet.output_aa349||0), 0.001); end
  def test_output_ab349; assert_in_epsilon(141.97362652499643, worksheet.output_ab349, 0.001); end
  def test_output_ac349; assert_in_epsilon(137.44723079653966, worksheet.output_ac349, 0.001); end
  def test_output_ad312; assert_in_epsilon(15.13302713590322, worksheet.output_ad312, 0.001); end
  def test_output_ad313; assert_in_delta(0, (worksheet.output_ad313||0), 0.001); end
  def test_output_ad314; assert_in_delta(0, (worksheet.output_ad314||0), 0.001); end
  def test_output_ad315; assert_in_delta(0, (worksheet.output_ad315||0), 0.001); end
  def test_output_ad316; assert_in_epsilon(13.00628128829377, worksheet.output_ad316, 0.001); end
  def test_output_ad320; assert_in_delta(0, (worksheet.output_ad320||0), 0.001); end
  def test_output_ad321; assert_in_delta(0, (worksheet.output_ad321||0), 0.001); end
  def test_output_ad322; assert_in_epsilon(22.652676770591373, worksheet.output_ad322, 0.001); end
  def test_output_ad323; assert_in_delta(0.05445447205160222, worksheet.output_ad323, 0.001); end
  def test_output_ad324; assert_in_epsilon(46.821559672732036, worksheet.output_ad324, 0.001); end
  def test_output_ad344; assert_in_delta(0, (worksheet.output_ad344||0), 0.001); end
  def test_output_ad345; assert_in_delta(0, (worksheet.output_ad345||0), 0.001); end
  def test_output_ad346; assert_in_delta(0, (worksheet.output_ad346||0), 0.001); end
  def test_output_ad347; assert_in_delta(0, (worksheet.output_ad347||0), 0.001); end
  def test_output_ad348; assert_in_delta(0, (worksheet.output_ad348||0), 0.001); end
  def test_output_ad338; assert_in_epsilon(14.20977918998194, worksheet.output_ad338, 0.001); end
  def test_output_ad339; assert_in_epsilon(8.361270547165384, worksheet.output_ad339, 0.001); end
  def test_output_ad337; assert_in_epsilon(22.571049737147327, worksheet.output_ad337, 0.001); end
  def test_output_ad349; assert_in_epsilon(120.23904907671934, worksheet.output_ad349, 0.001); end
  def test_output_ae312; assert_in_epsilon(17.505147108335343, worksheet.output_ae312, 0.001); end
  def test_output_ae313; assert_in_delta(0, (worksheet.output_ae313||0), 0.001); end
  def test_output_ae314; assert_in_delta(0, (worksheet.output_ae314||0), 0.001); end
  def test_output_ae315; assert_in_delta(0, (worksheet.output_ae315||0), 0.001); end
  def test_output_ae316; assert_in_epsilon(12.372184255741121, worksheet.output_ae316, 0.001); end
  def test_output_ae320; assert_in_delta(0.06080096897005206, worksheet.output_ae320, 0.001); end
  def test_output_ae321; assert_in_delta(0.025459923887303632, worksheet.output_ae321, 0.001); end
  def test_output_ae322; assert_in_epsilon(20.19456959684334, worksheet.output_ae322, 0.001); end
  def test_output_ae323; assert_in_delta(0.05009164651012404, worksheet.output_ae323, 0.001); end
  def test_output_ae324; assert_in_epsilon(43.79263698626787, worksheet.output_ae324, 0.001); end
  def test_output_ae344; assert_in_delta(0, (worksheet.output_ae344||0), 0.001); end
  def test_output_ae345; assert_in_delta(0, (worksheet.output_ae345||0), 0.001); end
  def test_output_ae346; assert_in_delta(0, (worksheet.output_ae346||0), 0.001); end
  def test_output_ae347; assert_in_delta(0, (worksheet.output_ae347||0), 0.001); end
  def test_output_ae348; assert_in_delta(0, (worksheet.output_ae348||0), 0.001); end
  def test_output_ae338; assert_in_epsilon(12.070096495130533, worksheet.output_ae338, 0.001); end
  def test_output_ae339; assert_in_epsilon(8.009259860646882, worksheet.output_ae339, 0.001); end
  def test_output_ae337; assert_in_epsilon(20.079356355777414, worksheet.output_ae337, 0.001); end
  def test_output_ae349; assert_in_epsilon(114.08024684233257, worksheet.output_ae349, 0.001); end
  def test_output_af312; assert_in_epsilon(24.575025977609272, worksheet.output_af312, 0.001); end
  def test_output_af313; assert_in_delta(0, (worksheet.output_af313||0), 0.001); end
  def test_output_af314; assert_in_delta(0, (worksheet.output_af314||0), 0.001); end
  def test_output_af315; assert_in_delta(0, (worksheet.output_af315||0), 0.001); end
  def test_output_af316; assert_in_epsilon(11.74206892180811, worksheet.output_af316, 0.001); end
  def test_output_af320; assert_in_delta(0.30197948859642026, worksheet.output_af320, 0.001); end
  def test_output_af321; assert_in_delta(0.045241374155416916, worksheet.output_af321, 0.001); end
  def test_output_af322; assert_in_epsilon(17.79306539736401, worksheet.output_af322, 0.001); end
  def test_output_af323; assert_in_delta(0.04397302279820515, worksheet.output_af323, 0.001); end
  def test_output_af324; assert_in_epsilon(41.008603518767096, worksheet.output_af324, 0.001); end
  def test_output_af344; assert_in_delta(0, (worksheet.output_af344||0), 0.001); end
  def test_output_af345; assert_in_delta(0, (worksheet.output_af345||0), 0.001); end
  def test_output_af346; assert_in_delta(0, (worksheet.output_af346||0), 0.001); end
  def test_output_af347; assert_in_delta(0, (worksheet.output_af347||0), 0.001); end
  def test_output_af348; assert_in_delta(0, (worksheet.output_af348||0), 0.001); end
  def test_output_af338; assert_in_epsilon(9.965714245078091, worksheet.output_af338, 0.001); end
  def test_output_af339; assert_in_epsilon(7.652087878520195, worksheet.output_af339, 0.001); end
  def test_output_af337; assert_in_epsilon(17.61780212359829, worksheet.output_af337, 0.001); end
  def test_output_af349; assert_in_epsilon(113.12775982469682, worksheet.output_af349, 0.001); end
  def test_output_ag312; assert_in_epsilon(22.104451638693494, worksheet.output_ag312, 0.001); end
  def test_output_ag313; assert_in_delta(0, (worksheet.output_ag313||0), 0.001); end
  def test_output_ag314; assert_in_delta(0, (worksheet.output_ag314||0), 0.001); end
  def test_output_ag315; assert_in_delta(0, (worksheet.output_ag315||0), 0.001); end
  def test_output_ag316; assert_in_epsilon(11.170599659965362, worksheet.output_ag316, 0.001); end
  def test_output_ag320; assert_in_delta(0.577721503352341, worksheet.output_ag320, 0.001); end
  def test_output_ag321; assert_in_delta(0.0579175069738669, worksheet.output_ag321, 0.001); end
  def test_output_ag322; assert_in_epsilon(15.176568137656458, worksheet.output_ag322, 0.001); end
  def test_output_ag323; assert_in_delta(0.03730267924927018, worksheet.output_ag323, 0.001); end
  def test_output_ag324; assert_in_epsilon(32.56581772128786, worksheet.output_ag324, 0.001); end
  def test_output_ag344; assert_in_delta(0, (worksheet.output_ag344||0), 0.001); end
  def test_output_ag345; assert_in_delta(0, (worksheet.output_ag345||0), 0.001); end
  def test_output_ag346; assert_in_delta(0, (worksheet.output_ag346||0), 0.001); end
  def test_output_ag347; assert_in_delta(0, (worksheet.output_ag347||0), 0.001); end
  def test_output_ag348; assert_in_delta(0, (worksheet.output_ag348||0), 0.001); end
  def test_output_ag338; assert_in_epsilon(7.6752773259972695, worksheet.output_ag338, 0.001); end
  def test_output_ag339; assert_in_epsilon(7.29115585819353, worksheet.output_ag339, 0.001); end
  def test_output_ag337; assert_in_epsilon(14.9664331841908, worksheet.output_ag337, 0.001); end
  def test_output_ag349; assert_in_epsilon(96.65681203136945, worksheet.output_ag349, 0.001); end
  def test_output_ah312; assert_in_epsilon(20.06549624688346, worksheet.output_ah312, 0.001); end
  def test_output_ah313; assert_in_delta(0, (worksheet.output_ah313||0), 0.001); end
  def test_output_ah314; assert_in_delta(0, (worksheet.output_ah314||0), 0.001); end
  def test_output_ah315; assert_in_delta(0, (worksheet.output_ah315||0), 0.001); end
  def test_output_ah316; assert_in_epsilon(10.772068290554705, worksheet.output_ah316, 0.001); end
  def test_output_ah320; assert_in_delta(0.8410871934796008, worksheet.output_ah320, 0.001); end
  def test_output_ah321; assert_in_delta(0.06143736519260377, worksheet.output_ah321, 0.001); end
  def test_output_ah322; assert_in_epsilon(12.77321539958414, worksheet.output_ah322, 0.001); end
  def test_output_ah323; assert_in_delta(0.029860178079429558, worksheet.output_ah323, 0.001); end
  def test_output_ah324; assert_in_epsilon(29.088438980947835, worksheet.output_ah324, 0.001); end
  def test_output_ah344; assert_in_delta(0, (worksheet.output_ah344||0), 0.001); end
  def test_output_ah345; assert_in_delta(0, (worksheet.output_ah345||0), 0.001); end
  def test_output_ah346; assert_in_delta(0, (worksheet.output_ah346||0), 0.001); end
  def test_output_ah347; assert_in_delta(0, (worksheet.output_ah347||0), 0.001); end
  def test_output_ah348; assert_in_delta(0, (worksheet.output_ah348||0), 0.001); end
  def test_output_ah338; assert_in_epsilon(5.727144370983785, worksheet.output_ah338, 0.001); end
  def test_output_ah339; assert_in_epsilon(6.927822228889581, worksheet.output_ah339, 0.001); end
  def test_output_ah337; assert_in_epsilon(12.654966599873365, worksheet.output_ah337, 0.001); end
  def test_output_ah349; assert_in_epsilon(86.28657025459513, worksheet.output_ah349, 0.001); end
  def test_output_ai312; assert_in_epsilon(18.552180665415904, worksheet.output_ai312, 0.001); end
  def test_output_ai313; assert_in_delta(0, (worksheet.output_ai313||0), 0.001); end
  def test_output_ai314; assert_in_delta(0, (worksheet.output_ai314||0), 0.001); end
  def test_output_ai315; assert_in_delta(0, (worksheet.output_ai315||0), 0.001); end
  def test_output_ai316; assert_in_epsilon(10.418357707949136, worksheet.output_ai316, 0.001); end
  def test_output_ai320; assert_in_epsilon(1.0545771320521649, worksheet.output_ai320, 0.001); end
  def test_output_ai321; assert_in_delta(0.05501985812615842, worksheet.output_ai321, 0.001); end
  def test_output_ai322; assert_in_epsilon(10.573567063504093, worksheet.output_ai322, 0.001); end
  def test_output_ai323; assert_in_delta(0.02190541520298238, worksheet.output_ai323, 0.001); end
  def test_output_ai324; assert_in_epsilon(26.174323305038808, worksheet.output_ai324, 0.001); end
  def test_output_ai344; assert_in_delta(0, (worksheet.output_ai344||0), 0.001); end
  def test_output_ai345; assert_in_delta(0, (worksheet.output_ai345||0), 0.001); end
  def test_output_ai346; assert_in_delta(0, (worksheet.output_ai346||0), 0.001); end
  def test_output_ai347; assert_in_delta(0, (worksheet.output_ai347||0), 0.001); end
  def test_output_ai348; assert_in_delta(0, (worksheet.output_ai348||0), 0.001); end
  def test_output_ai338; assert_in_epsilon(4.333305984166864, worksheet.output_ai338, 0.001); end
  def test_output_ai339; assert_in_epsilon(6.5634025916455245, worksheet.output_ai339, 0.001); end
  def test_output_ai337; assert_in_epsilon(10.896708575812388, worksheet.output_ai337, 0.001); end
  def test_output_ai349; assert_in_epsilon(77.74663972310162, worksheet.output_ai349, 0.001); end
  def test_output_aj312; assert_in_epsilon(15.933494308290888, worksheet.output_aj312, 0.001); end
  def test_output_aj313; assert_in_delta(0, (worksheet.output_aj313||0), 0.001); end
  def test_output_aj314; assert_in_delta(0, (worksheet.output_aj314||0), 0.001); end
  def test_output_aj315; assert_in_delta(0, (worksheet.output_aj315||0), 0.001); end
  def test_output_aj316; assert_in_epsilon(10.092015695627904, worksheet.output_aj316, 0.001); end
  def test_output_aj320; assert_in_epsilon(1.2986591757616555, worksheet.output_aj320, 0.001); end
  def test_output_aj321; assert_in_delta(0.035541117929853386, worksheet.output_aj321, 0.001); end
  def test_output_aj322; assert_in_epsilon(8.533450314911507, worksheet.output_aj322, 0.001); end
  def test_output_aj323; assert_in_delta(0.013353740839439741, worksheet.output_aj323, 0.001); end
  def test_output_aj324; assert_in_epsilon(23.690875998103337, worksheet.output_aj324, 0.001); end
  def test_output_aj344; assert_in_delta(0, (worksheet.output_aj344||0), 0.001); end
  def test_output_aj345; assert_in_delta(0, (worksheet.output_aj345||0), 0.001); end
  def test_output_aj346; assert_in_delta(0, (worksheet.output_aj346||0), 0.001); end
  def test_output_aj347; assert_in_delta(0, (worksheet.output_aj347||0), 0.001); end
  def test_output_aj348; assert_in_delta(0, (worksheet.output_aj348||0), 0.001); end
  def test_output_aj338; assert_in_epsilon(3.111727524075571, worksheet.output_aj338, 0.001); end
  def test_output_aj339; assert_in_epsilon(6.199169719313029, worksheet.output_aj339, 0.001); end
  def test_output_aj337; assert_in_epsilon(9.3108972433886, worksheet.output_aj337, 0.001); end
  def test_output_aj349; assert_in_epsilon(68.90828759485318, worksheet.output_aj349, 0.001); end
  def test_output_am349; assert_in_delta(-0.02176861777194261, worksheet.output_am349, 0.001); end
  def test_output_an349; assert_in_delta(-0.585367208982394, worksheet.output_an349, 0.001); end
  def test_output_ak316; assert_in_epsilon(9.791207687744663, worksheet.output_ak316, 0.001); end
  def test_output_ak349; assert_in_epsilon(56.99012892281028, worksheet.output_ak349, 0.001); end
  def test_output_ao349; assert_in_delta(-0.42148831442499024, worksheet.output_ao349, 0.001); end
  def test_output_b350; assert_equal("REF", worksheet.output_b350); end
  def test_output_e350; assert_equal("Reference scenario", worksheet.output_e350); end
  def test_output_f350; assert_equal("Mt CO2e", worksheet.output_f350); end
  def test_output_g350; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g350); end
  def test_output_ac350; assert_in_epsilon(133.45335556636047, worksheet.output_ac350, 0.001); end
  def test_output_ad350; assert_in_epsilon(126.81846243997214, worksheet.output_ad350, 0.001); end
  def test_output_ae350; assert_in_epsilon(130.33089453125237, worksheet.output_ae350, 0.001); end
  def test_output_af350; assert_in_epsilon(138.15505486826828, worksheet.output_af350, 0.001); end
  def test_output_ag350; assert_in_epsilon(138.3365846370469, worksheet.output_ag350, 0.001); end
  def test_output_ah350; assert_in_epsilon(138.32641356318643, worksheet.output_ah350, 0.001); end
  def test_output_ai350; assert_in_epsilon(139.90388082416078, worksheet.output_ai350, 0.001); end
  def test_output_aj350; assert_in_epsilon(141.27674183426484, worksheet.output_aj350, 0.001); end
  def test_output_ak350; assert_in_epsilon(142.77120830837623, worksheet.output_ak350, 0.001); end
  def test_output_am350; assert_in_delta(0.0016887089358665897, worksheet.output_am350, 0.001); end
  def test_output_an350; assert_in_delta(0.06982104498213526, worksheet.output_an350, 0.001); end
  def test_output_ao350; assert_equal("", worksheet.output_ao350); end
  def test_output_am351; assert_equal("", worksheet.output_am351); end
  def test_output_an351; assert_equal("", worksheet.output_an351); end
  def test_output_ao351; assert_equal("", worksheet.output_ao351); end
  def test_output_c352; assert_equal("Biomass emissions allocation across sectors", worksheet.output_c352); end
  def test_output_am352; assert_equal("", worksheet.output_am352); end
  def test_output_an352; assert_equal("", worksheet.output_an352); end
  def test_output_ao352; assert_equal("", worksheet.output_ao352); end
  def test_output_c353; assert_equal("I", worksheet.output_c353); end
  def test_output_e353; assert_equal("Hydrocarbon fuel power generation", worksheet.output_e353); end
  def test_output_f353; assert_equal("Mt CO2e", worksheet.output_f353); end
  def test_output_g353; assert_equal("NIR", worksheet.output_g353); end
  def test_output_ab353; assert_in_epsilon(4.113, worksheet.output_ab353, 0.001); end
  def test_output_ac353; assert_in_epsilon(4.002297818189104, worksheet.output_ac353, 0.001); end
  def test_output_ad353; assert_in_epsilon(5.3366257531894, worksheet.output_ad353, 0.001); end
  def test_output_ae353; assert_in_epsilon(6.827102952031498, worksheet.output_ae353, 0.001); end
  def test_output_af353; assert_in_epsilon(7.927869753395144, worksheet.output_af353, 0.001); end
  def test_output_ag353; assert_in_epsilon(8.846184382878041, worksheet.output_ag353, 0.001); end
  def test_output_ah353; assert_in_epsilon(9.758643146225186, worksheet.output_ah353, 0.001); end
  def test_output_ai353; assert_in_epsilon(10.665246043436579, worksheet.output_ai353, 0.001); end
  def test_output_aj353; assert_in_epsilon(11.56306514144434, worksheet.output_aj353, 0.001); end
  def test_output_ak353; assert_in_epsilon(12.4608842394521, worksheet.output_ak353, 0.001); end
  def test_output_am353; assert_in_delta(0.028800073207081667, worksheet.output_am353, 0.001); end
  def test_output_an353; assert_in_epsilon(2.1134325343860105, worksheet.output_an353, 0.001); end
  def test_output_ao353; assert_equal("", worksheet.output_ao353); end
  def test_output_c354; assert_equal("IX", worksheet.output_c354); end
  def test_output_e354; assert_equal("Heating", worksheet.output_e354); end
  def test_output_f354; assert_equal("Mt CO2e", worksheet.output_f354); end
  def test_output_g354; assert_equal("NIR", worksheet.output_g354); end
  def test_output_ab354; assert_in_epsilon(1.157, worksheet.output_ab354, 0.001); end
  def test_output_am354; assert_in_delta(-0.04334368046165937, worksheet.output_am354, 0.001); end
  def test_output_an354; assert_in_delta(-0.830082625212716, worksheet.output_an354, 0.001); end
  def test_output_ak451; assert_in_epsilon(20.976, worksheet.output_ak451, 0.001); end
  def test_output_ak455; assert_in_epsilon(43.41404890028301, worksheet.output_ak455, 0.001); end
  def test_output_ak459; assert_in_epsilon(64.390048900283, worksheet.output_ak459, 0.001); end
  def test_output_ak463; assert_in_epsilon(19.70434279850128, worksheet.output_ak463, 0.001); end
  def test_output_ak453; assert_in_epsilon(12.155000000000001, worksheet.output_ak453, 0.001); end
  def test_output_ak457; assert_in_delta(0, (worksheet.output_ak457||0), 0.001); end
  def test_output_ak461; assert_in_epsilon(12.155000000000001, worksheet.output_ak461, 0.001); end
  def test_output_ak465; assert_in_epsilon(2.4430780185003598, worksheet.output_ak465, 0.001); end
  def test_control_h42; assert_in_epsilon(20, worksheet.control_h42, 0.001); end
  def test_control_h43; assert_in_epsilon(30, worksheet.control_h43, 0.001); end
  def test_xi_b_f139; assert_in_epsilon(1150.0000000000005, worksheet.xi_b_f139, 0.001); end
  def test_xi_b_f161; assert_in_epsilon(5451.000000000002, worksheet.xi_b_f161, 0.001); end
  def test_xi_b_g139; assert_in_epsilon(1163.7827777614602, worksheet.xi_b_g139, 0.001); end
  def test_xi_b_g161; assert_in_epsilon(5516.330366589321, worksheet.xi_b_g161, 0.001); end
  def test_xi_b_h139; assert_in_epsilon(1177.7307424471128, worksheet.xi_b_h139, 0.001); end
  def test_xi_b_h161; assert_in_epsilon(5582.443719199314, worksheet.xi_b_h161, 0.001); end
  def test_xi_b_i139; assert_in_epsilon(1191.8458738262325, worksheet.xi_b_i139, 0.001); end
  def test_xi_b_i161; assert_in_epsilon(5649.3494419363415, worksheet.xi_b_i161, 0.001); end
  def test_xi_b_j139; assert_in_epsilon(1206.130175395676, worksheet.xi_b_j139, 0.001); end
  def test_xi_b_j161; assert_in_epsilon(5717.057031375503, worksheet.xi_b_j161, 0.001); end
  def test_xi_b_k139; assert_in_epsilon(1220.5856746642578, worksheet.xi_b_k139, 0.001); end
  def test_xi_b_k161; assert_in_epsilon(5785.576097908582, worksheet.xi_b_k161, 0.001); end
  def test_xi_b_l139; assert_in_epsilon(1235.214423440535, worksheet.xi_b_l139, 0.001); end
  def test_xi_b_l161; assert_in_epsilon(5854.916367108136, worksheet.xi_b_l161, 0.001); end
  def test_xi_b_m139; assert_in_epsilon(1250.01849812404, worksheet.xi_b_m139, 0.001); end
  def test_xi_b_m161; assert_in_epsilon(5925.08768110795, worksheet.xi_b_m161, 0.001); end
  def test_xi_b_y173; assert_in_delta(0.0005821511902512752, worksheet.xi_b_y173, 0.001); end
  def test_xi_b_y185; assert_in_delta(0.0003783982736633289, worksheet.xi_b_y185, 0.001); end
  def test_xi_b_y196; assert_in_delta(0.0003783982736633289, worksheet.xi_b_y196, 0.001); end
  def test_xi_b_y222; assert_in_delta(0.00043754476142913106, worksheet.xi_b_y222, 0.001); end
  def test_control_h38; assert_in_epsilon(20, worksheet.control_h38, 0.001); end
  def test_control_h48; assert_in_epsilon(40, worksheet.control_h48, 0.001); end
  def test_control_h50; assert_in_epsilon(20, worksheet.control_h50, 0.001); end
  def test_control_h40; assert_in_epsilon(10, worksheet.control_h40, 0.001); end
  def test_xi_f_f153; assert_in_epsilon(1000, worksheet.xi_f_f153, 0.001); end
  def test_xi_f_f175; assert_in_epsilon(2472, worksheet.xi_f_f175, 0.001); end
  def test_xi_f_g153; assert_in_epsilon(1000, worksheet.xi_f_g153, 0.001); end
  def test_xi_f_g175; assert_in_epsilon(2472, worksheet.xi_f_g175, 0.001); end
  def test_xi_f_h153; assert_in_epsilon(1000, worksheet.xi_f_h153, 0.001); end
  def test_xi_f_h175; assert_in_epsilon(2472, worksheet.xi_f_h175, 0.001); end
  def test_xi_f_i153; assert_in_epsilon(1000, worksheet.xi_f_i153, 0.001); end
  def test_xi_f_i175; assert_in_epsilon(2472, worksheet.xi_f_i175, 0.001); end
  def test_xi_f_j153; assert_in_epsilon(1000, worksheet.xi_f_j153, 0.001); end
  def test_xi_f_j175; assert_in_epsilon(2472, worksheet.xi_f_j175, 0.001); end
  def test_xi_f_k153; assert_in_epsilon(1000, worksheet.xi_f_k153, 0.001); end
  def test_xi_f_k175; assert_in_epsilon(2472, worksheet.xi_f_k175, 0.001); end
  def test_xi_f_l153; assert_in_epsilon(1000, worksheet.xi_f_l153, 0.001); end
  def test_xi_f_l175; assert_in_epsilon(2472, worksheet.xi_f_l175, 0.001); end
  def test_xi_f_m153; assert_in_epsilon(1000, worksheet.xi_f_m153, 0.001); end
  def test_xi_f_m175; assert_in_epsilon(2472, worksheet.xi_f_m175, 0.001); end
  def test_xi_f_y188; assert_in_delta(0.004952356310679612, worksheet.xi_f_y188, 0.001); end
  def test_xi_f_y233; assert_in_delta(0.004952356310679612, worksheet.xi_f_y233, 0.001); end
  def test_control_h52; assert_in_epsilon(10, worksheet.control_h52, 0.001); end
  def test_output_ak354; assert_in_delta(0.43263433602165513, worksheet.output_ak354, 0.001); end
  def test_output_ao354; assert_equal("", worksheet.output_ao354); end
  def test_output_c355; assert_equal("XI", worksheet.output_c355); end
  def test_output_e355; assert_equal("Industry", worksheet.output_e355); end
  def test_output_f355; assert_equal("Mt CO2e", worksheet.output_f355); end
  def test_output_g355; assert_equal("NIR", worksheet.output_g355); end
  def test_output_h355; assert_in_delta(0.6169922999999999, worksheet.output_h355, 0.001); end
  def test_output_m355; assert_in_delta(0.5321606000000001, worksheet.output_m355, 0.001); end
  def test_output_n355; assert_in_delta(0.141046429926288, worksheet.output_n355, 0.001); end
  def test_output_r355; assert_in_delta(0.85466233, worksheet.output_r355, 0.001); end
  def test_output_w355; assert_in_epsilon(1.7981648780000001, worksheet.output_w355, 0.001); end
  def test_output_ab355; assert_in_epsilon(3.201552, worksheet.output_ab355, 0.001); end
  def test_output_ac355; assert_in_epsilon(2.704720873797583, worksheet.output_ac355, 0.001); end
  def test_xi_b_r173; assert_in_delta(0.0012277135190345739, worksheet.xi_b_r173, 0.001); end
  def test_xi_b_r185; assert_in_delta(0.0009261127094482155, worksheet.xi_b_r185, 0.001); end
  def test_xi_b_r196; assert_in_delta(0.0009261127094482155, worksheet.xi_b_r196, 0.001); end
  def test_xi_b_r222; assert_in_delta(0.0009261127094482155, worksheet.xi_b_r222, 0.001); end
  def test_xi_f_r188; assert_in_delta(0.006035684253640776, worksheet.xi_f_r188, 0.001); end
  def test_xi_f_r233; assert_in_delta(0.006035684253640776, worksheet.xi_f_r233, 0.001); end
  def test_output_ad355; assert_in_epsilon(3.659942937639157, worksheet.output_ad355, 0.001); end
  def test_xi_b_s173; assert_in_delta(0.0011354903292083885, worksheet.xi_b_s173, 0.001); end
  def test_xi_b_s185; assert_in_delta(0.00081146379932101, worksheet.xi_b_s185, 0.001); end
  def test_xi_b_s196; assert_in_delta(0.00081146379932101, worksheet.xi_b_s196, 0.001); end
  def test_xi_b_s222; assert_in_delta(0.00081146379932101, worksheet.xi_b_s222, 0.001); end
  def test_xi_f_s188; assert_in_delta(0.005880923118932038, worksheet.xi_f_s188, 0.001); end
  def test_xi_f_s233; assert_in_delta(0.005880923118932038, worksheet.xi_f_s233, 0.001); end
  def test_output_ae355; assert_in_epsilon(4.619310870441939, worksheet.output_ae355, 0.001); end
  def test_xi_b_t173; assert_in_delta(0.001043267139382203, worksheet.xi_b_t173, 0.001); end
  def test_xi_b_t185; assert_in_delta(0.0007248477282815313, worksheet.xi_b_t185, 0.001); end
  def test_xi_b_t196; assert_in_delta(0.0007248477282815313, worksheet.xi_b_t196, 0.001); end
  def test_xi_b_t222; assert_in_delta(0.0007248477282815313, worksheet.xi_b_t222, 0.001); end
  def test_xi_f_t188; assert_in_delta(0.0057261619842233005, worksheet.xi_f_t188, 0.001); end
  def test_xi_f_t233; assert_in_delta(0.0057261619842233005, worksheet.xi_f_t233, 0.001); end
  def test_output_af355; assert_in_epsilon(5.570977658580926, worksheet.output_af355, 0.001); end
  def test_xi_b_u173; assert_in_delta(0.0009510439495560173, worksheet.xi_b_u173, 0.001); end
  def test_xi_b_u185; assert_in_delta(0.0006324535046914041, worksheet.xi_b_u185, 0.001); end
  def test_xi_b_u196; assert_in_delta(0.0006324535046914041, worksheet.xi_b_u196, 0.001); end
  def test_xi_b_u222; assert_in_delta(0.0006587934588493356, worksheet.xi_b_u222, 0.001); end
  def test_xi_f_u188; assert_in_delta(0.005571400849514563, worksheet.xi_f_u188, 0.001); end
  def test_xi_f_u233; assert_in_delta(0.005571400849514563, worksheet.xi_f_u233, 0.001); end
  def test_output_ag355; assert_in_epsilon(6.23830665290312, worksheet.output_ag355, 0.001); end
  def test_xi_b_v173; assert_in_delta(0.0008588207597298318, worksheet.xi_b_v173, 0.001); end
  def test_xi_b_v185; assert_in_delta(0.0005625999421935271, worksheet.xi_b_v185, 0.001); end
  def test_xi_b_v196; assert_in_delta(0.0005625999421935271, worksheet.xi_b_v196, 0.001); end
  def test_xi_b_v222; assert_in_delta(0.0006101186732296522, worksheet.xi_b_v222, 0.001); end
  def test_xi_f_v188; assert_in_delta(0.005416639714805825, worksheet.xi_f_v188, 0.001); end
  def test_xi_f_v233; assert_in_delta(0.005416639714805825, worksheet.xi_f_v233, 0.001); end
  def test_output_ah355; assert_in_epsilon(7.051895377161268, worksheet.output_ah355, 0.001); end
  def test_xi_b_w173; assert_in_delta(0.0007665975699036462, worksheet.xi_b_w173, 0.001); end
  def test_xi_b_w185; assert_in_delta(0.0004945771056941425, worksheet.xi_b_w185, 0.001); end
  def test_xi_b_w196; assert_in_delta(0.0004945771056941425, worksheet.xi_b_w196, 0.001); end
  def test_xi_b_w222; assert_in_delta(0.0005581236089968423, worksheet.xi_b_w222, 0.001); end
  def test_xi_f_w188; assert_in_delta(0.005261878580097087, worksheet.xi_f_w188, 0.001); end
  def test_xi_f_w233; assert_in_delta(0.005261878580097087, worksheet.xi_f_w233, 0.001); end
  def test_output_ai355; assert_in_epsilon(7.827467541009245, worksheet.output_ai355, 0.001); end
  def test_xi_b_x173; assert_in_delta(0.0006743743800774607, worksheet.xi_b_x173, 0.001); end
  def test_xi_b_x185; assert_in_delta(0.00042838499519325, worksheet.xi_b_x185, 0.001); end
  def test_xi_b_x196; assert_in_delta(0.00042838499519325, worksheet.xi_b_x196, 0.001); end
  def test_xi_b_x222; assert_in_delta(0.0005028217258648215, worksheet.xi_b_x222, 0.001); end
  def test_xi_f_x188; assert_in_delta(0.005107117445388349, worksheet.xi_f_x188, 0.001); end
  def test_xi_f_x233; assert_in_delta(0.005107117445388349, worksheet.xi_f_x233, 0.001); end
  def test_output_aj355; assert_in_epsilon(8.56427414644957, worksheet.output_aj355, 0.001); end
  def test_output_ak355; assert_in_epsilon(9.253902241527882, worksheet.output_ak355, 0.001); end
  def test_output_am355; assert_in_delta(0.03122886634246802, worksheet.output_am355, 0.001); end
  def test_output_an355; assert_in_epsilon(2.4213889984643306, worksheet.output_an355, 0.001); end
  def test_output_ao355; assert_in_epsilon(13.998407989091408, worksheet.output_ao355, 0.001); end
  def test_output_c356; assert_equal("XII", worksheet.output_c356); end
  def test_output_e356; assert_equal("Transport", worksheet.output_e356); end
  def test_output_f356; assert_equal("Mt CO2e", worksheet.output_f356); end
  def test_output_g356; assert_equal("NIR", worksheet.output_g356); end
  def test_output_ab356; assert_in_epsilon(1.107, worksheet.output_ab356, 0.001); end
  def test_output_ac356; assert_in_epsilon(1.1450529425392655, worksheet.output_ac356, 0.001); end
  def test_output_ad464; assert_in_epsilon(1.160330888925345, worksheet.output_ad464, 0.001); end
  def test_output_ad356; assert_in_epsilon(1.160330888925345, worksheet.output_ad356, 0.001); end
  def test_output_ae464; assert_in_epsilon(2.137591199299846, worksheet.output_ae464, 0.001); end
  def test_output_ae356; assert_in_epsilon(2.137591199299846, worksheet.output_ae356, 0.001); end
  def test_output_af464; assert_in_epsilon(2.3776260412960384, worksheet.output_af464, 0.001); end
  def test_output_af356; assert_in_epsilon(2.3776260412960384, worksheet.output_af356, 0.001); end
  def test_output_ag464; assert_in_epsilon(2.616727086908701, worksheet.output_ag464, 0.001); end
  def test_output_ag356; assert_in_epsilon(2.616727086908701, worksheet.output_ag356, 0.001); end
  def test_output_ah464; assert_in_epsilon(2.855828132521364, worksheet.output_ah464, 0.001); end
  def test_output_ah356; assert_in_epsilon(2.855828132521364, worksheet.output_ah356, 0.001); end
  def test_output_ai464; assert_in_epsilon(3.0879775828344185, worksheet.output_ai464, 0.001); end
  def test_output_ai356; assert_in_epsilon(3.0879775828344185, worksheet.output_ai356, 0.001); end
  def test_output_aj464; assert_in_epsilon(3.3201270331474726, worksheet.output_aj464, 0.001); end
  def test_output_aj356; assert_in_epsilon(3.3201270331474726, worksheet.output_aj356, 0.001); end
  def test_output_ak452; assert_in_delta(0.27, worksheet.output_ak452, 0.001); end
  def test_output_ak456; assert_in_epsilon(13.424843507662956, worksheet.output_ak456, 0.001); end
  def test_output_ak460; assert_in_epsilon(13.694843507662956, worksheet.output_ak460, 0.001); end
  def test_output_ak464; assert_in_epsilon(3.552276483460527, worksheet.output_ak464, 0.001); end
  def test_output_ak356; assert_in_epsilon(3.552276483460527, worksheet.output_ak356, 0.001); end
  def test_output_am356; assert_in_delta(0.028707792965810608, worksheet.output_am356, 0.001); end
  def test_output_an356; assert_in_epsilon(2.1022814330165476, worksheet.output_an356, 0.001); end
  def test_output_ao356; assert_equal("", worksheet.output_ao356); end
  def test_output_c357; assert_in_epsilon(4, worksheet.output_c357, 0.001); end
  def test_output_e357; assert_equal("Agriculture", worksheet.output_e357); end
  def test_output_f357; assert_equal("Mt CO2e", worksheet.output_f357); end
  def test_output_g357; assert_equal("NIR", worksheet.output_g357); end
  def test_output_ab357; assert_in_delta(0.394, worksheet.output_ab357, 0.001); end
  def test_output_am357; assert_equal("", worksheet.output_am357); end
  def test_output_an357; assert_equal("", worksheet.output_an357); end
  def test_output_ao357; assert_equal("", worksheet.output_ao357); end
  def test_output_am358; assert_equal("", worksheet.output_am358); end
  def test_output_an358; assert_equal("", worksheet.output_an358); end
  def test_output_ao358; assert_equal("", worksheet.output_ao358); end
  def test_output_c359; assert_equal("V", worksheet.output_c359); end
  def test_output_e359; assert_equal("Bioenergy", worksheet.output_e359); end
  def test_output_f359; assert_equal("Mt CO2e", worksheet.output_f359); end
  def test_output_g359; assert_equal("Total of the above maximum allocation", worksheet.output_g359); end
  def test_output_ab359; assert_in_epsilon(9.972552, worksheet.output_ab359, 0.001); end
  def test_output_ac359; assert_in_epsilon(-10.398216998196155, worksheet.output_ac359, 0.001); end
  def test_output_ad359; assert_in_epsilon(-12.140676316877526, worksheet.output_ad359, 0.001); end
  def test_output_ae359; assert_in_epsilon(-14.836936358931485, worksheet.output_ae359, 0.001); end
  def test_output_af359; assert_in_epsilon(-17.263143158747184, worksheet.output_af359, 0.001); end
  def test_output_ag359; assert_in_epsilon(-19.21503180818932, worksheet.output_ag359, 0.001); end
  def test_output_ah359; assert_in_epsilon(-21.15703546742867, worksheet.output_ah359, 0.001); end
  def test_output_ai359; assert_in_epsilon(-23.081571067401043, worksheet.output_ai359, 0.001); end
  def test_output_aj359; assert_in_epsilon(-24.534274736070778, worksheet.output_aj359, 0.001); end
  def test_output_am359; assert_in_delta(0.022878919410198817, worksheet.output_am359, 0.001); end
  def test_output_an359; assert_in_epsilon(1.4715484688308065, worksheet.output_an359, 0.001); end
  def test_output_ak359; assert_in_epsilon(-25.69969730046217, worksheet.output_ak359, 0.001); end
  def test_output_ao359; assert_equal("", worksheet.output_ao359); end
  def test_output_e360; assert_equal("Bioenergy actually used", worksheet.output_e360); end
  def test_output_g360; assert_equal("Total actually used w/o going below 0 in sectors not using CCS (industry is the only exception)", worksheet.output_g360); end
  def test_output_aq360; assert_equal("ratio energy buildings", worksheet.output_aq360); end
  def test_output_as360; assert_in_epsilon(1.2829349638688161, worksheet.output_as360, 0.001); end
  def test_output_am361; assert_equal("", worksheet.output_am361); end
  def test_output_an361; assert_equal("", worksheet.output_an361); end
  def test_output_ao361; assert_equal("", worksheet.output_ao361); end
  def test_output_aq361; assert_equal("ratio emissions buildings", worksheet.output_aq361); end
  def test_output_as361; assert_in_epsilon(1.4114849583350761, worksheet.output_as361, 0.001); end
  def test_output_c362; assert_equal("Total emissions allocation across sectors - NET OF BIOMASS IMPACT ABOVE (Biomass does not emit)", worksheet.output_c362); end
  def test_output_am362; assert_equal("", worksheet.output_am362); end
  def test_output_an362; assert_equal("", worksheet.output_an362); end
  def test_output_ao362; assert_equal("", worksheet.output_ao362); end
  def test_output_aw362; assert_in_epsilon(2010, worksheet.output_aw362, 0.001); end
  def test_output_c363; assert_equal("I", worksheet.output_c363); end
  def test_output_e363; assert_equal("Hydrocarbon fuel power generation", worksheet.output_e363); end
  def test_output_f363; assert_equal("Mt CO2e", worksheet.output_f363); end
  def test_output_g363; assert_equal("Energy - Refining (incl emissions from biomass)", worksheet.output_g363); end
  def test_output_h363; assert_in_epsilon(25.6221067252624, worksheet.output_h363, 0.001); end
  def test_output_i363; assert_in_delta(0, (worksheet.output_i363||0), 0.001); end
  def test_output_j363; assert_in_delta(0, (worksheet.output_j363||0), 0.001); end
  def test_output_k363; assert_in_delta(0, (worksheet.output_k363||0), 0.001); end
  def test_output_l363; assert_in_delta(0, (worksheet.output_l363||0), 0.001); end
  def test_output_m363; assert_in_epsilon(25.2708918337287, worksheet.output_m363, 0.001); end
  def test_output_n363; assert_in_delta(0, (worksheet.output_n363||0), 0.001); end
  def test_output_o363; assert_in_delta(0, (worksheet.output_o363||0), 0.001); end
  def test_output_p363; assert_in_delta(0, (worksheet.output_p363||0), 0.001); end
  def test_output_q363; assert_in_delta(0, (worksheet.output_q363||0), 0.001); end
  def test_output_r363; assert_in_epsilon(23.8022579669393, worksheet.output_r363, 0.001); end
  def test_output_s363; assert_in_delta(0, (worksheet.output_s363||0), 0.001); end
  def test_output_t363; assert_in_delta(0, (worksheet.output_t363||0), 0.001); end
  def test_output_u363; assert_in_delta(0, (worksheet.output_u363||0), 0.001); end
  def test_output_v363; assert_in_delta(0, (worksheet.output_v363||0), 0.001); end
  def test_output_w363; assert_in_epsilon(25.0471976894731, worksheet.output_w363, 0.001); end
  def test_output_x363; assert_in_delta(0, (worksheet.output_x363||0), 0.001); end
  def test_output_y363; assert_in_delta(0, (worksheet.output_y363||0), 0.001); end
  def test_output_z363; assert_in_delta(0, (worksheet.output_z363||0), 0.001); end
  def test_output_aa363; assert_in_delta(0, (worksheet.output_aa363||0), 0.001); end
  def test_output_ab363; assert_in_epsilon(21.6536478159777, worksheet.output_ab363, 0.001); end
  def test_output_ak363; assert_in_delta(0.06787961498142359, worksheet.output_ak363, 0.001); end
  def test_output_am363; assert_in_delta(-0.1324634682414082, worksheet.output_am363, 0.001); end
  def test_output_an363; assert_in_delta(-0.9968652110924545, worksheet.output_an363, 0.001); end
  def test_output_ao363; assert_in_delta(-0.9973507402919957, worksheet.output_ao363, 0.001); end
  def test_output_aq363; assert_equal("Emissions by sector", worksheet.output_aq363); end
  def test_output_av363; assert_in_epsilon(1990, worksheet.output_av363, 0.001); end
  def test_output_aw363; assert_equal("Share BE", worksheet.output_aw363); end
  def test_output_ax363; assert_equal("Share RW ", worksheet.output_ax363); end
  def test_output_ay363; assert_in_epsilon(2010, worksheet.output_ay363, 0.001); end
  def test_output_az363; assert_equal("Share BE", worksheet.output_az363); end
  def test_output_ba363; assert_equal("Share RW 2010", worksheet.output_ba363); end
  def test_output_bb363; assert_in_epsilon(2050, worksheet.output_bb363, 0.001); end
  def test_output_c364; assert_equal("II", worksheet.output_c364); end
  def test_output_e364; assert_equal("Nuclear power generation", worksheet.output_e364); end
  def test_output_f364; assert_equal("Mt CO2e", worksheet.output_f364); end
  def test_output_g364; assert_equal("OK", worksheet.output_g364); end
  def test_output_h364; assert_in_delta(0, (worksheet.output_h364||0), 0.001); end
  def test_output_m364; assert_in_delta(0, (worksheet.output_m364||0), 0.001); end
  def test_output_r364; assert_in_delta(0, (worksheet.output_r364||0), 0.001); end
  def test_output_w364; assert_in_delta(0, (worksheet.output_w364||0), 0.001); end
  def test_output_ab364; assert_in_delta(0, (worksheet.output_ab364||0), 0.001); end
  def test_output_ac364; assert_in_delta(0, (worksheet.output_ac364||0), 0.001); end
  def test_output_ad364; assert_in_delta(0, (worksheet.output_ad364||0), 0.001); end
  def test_output_ae364; assert_in_delta(0, (worksheet.output_ae364||0), 0.001); end
  def test_output_af364; assert_in_delta(0, (worksheet.output_af364||0), 0.001); end
  def test_output_ag364; assert_in_delta(0, (worksheet.output_ag364||0), 0.001); end
  def test_output_ah364; assert_in_delta(0, (worksheet.output_ah364||0), 0.001); end
  def test_output_ai364; assert_in_delta(0, (worksheet.output_ai364||0), 0.001); end
  def test_output_aj364; assert_in_delta(0, (worksheet.output_aj364||0), 0.001); end
  def test_output_ak364; assert_in_delta(0, (worksheet.output_ak364||0), 0.001); end
  def test_output_am364; assert_equal("", worksheet.output_am364); end
  def test_output_an364; assert_equal("", worksheet.output_an364); end
  def test_output_ao364; assert_equal("", worksheet.output_ao364); end
  def test_output_aq364; assert_equal("I", worksheet.output_aq364); end
  def test_output_ar364; assert_equal("Hydrocarbon fuel power generation", worksheet.output_ar364); end
  def test_output_av364; assert_in_epsilon(6.902735735087841, worksheet.output_av364, 0.001); end
  def test_output_aw364; assert_in_delta(0.15712930754471527, worksheet.output_aw364, 0.001); end
  def test_output_ax364; assert_in_delta(0.09242131537677116, worksheet.output_ax364, 0.001); end
  def test_output_ay364; assert_in_epsilon(3.7504437698388275, worksheet.output_ay364, 0.001); end
  def test_output_ak370; assert_in_epsilon(6.040497102466362, worksheet.output_ak370, 0.001); end
  def test_output_ak372; assert_in_epsilon(9.448694646816257, worksheet.output_ak372, 0.001); end
  def test_output_ak373; assert_in_epsilon(4.366310940190122, worksheet.output_ak373, 0.001); end
  def test_output_ak379; assert_in_epsilon(31.290431622348112, worksheet.output_ak379, 0.001); end
  def test_output_az364; assert_in_delta(0.0021693409602232174, worksheet.output_az364, 0.001); end
  def test_output_ba364; assert_in_delta(0.4281277781321722, worksheet.output_ba364, 0.001); end
  def test_output_bb364; assert_in_epsilon(3.5977069263407304, worksheet.output_bb364, 0.001); end
  def test_output_bd364; assert_in_delta(-0.04072500559171455, worksheet.output_bd364, 0.001); end
  def test_output_c365; assert_equal("III", worksheet.output_c365); end
  def test_output_e365; assert_equal("National renewable power generation", worksheet.output_e365); end
  def test_output_f365; assert_equal("Mt CO2e", worksheet.output_f365); end
  def test_output_g365; assert_equal("OK", worksheet.output_g365); end
  def test_output_h365; assert_in_delta(0, (worksheet.output_h365||0), 0.001); end
  def test_output_m365; assert_in_delta(0, (worksheet.output_m365||0), 0.001); end
  def test_output_r365; assert_in_delta(0, (worksheet.output_r365||0), 0.001); end
  def test_output_w365; assert_in_delta(0, (worksheet.output_w365||0), 0.001); end
  def test_output_ab365; assert_in_delta(0, (worksheet.output_ab365||0), 0.001); end
  def test_output_ac365; assert_in_delta(0, (worksheet.output_ac365||0), 0.001); end
  def test_output_ad365; assert_in_delta(0, (worksheet.output_ad365||0), 0.001); end
  def test_output_ae365; assert_in_delta(0, (worksheet.output_ae365||0), 0.001); end
  def test_output_af365; assert_in_delta(0, (worksheet.output_af365||0), 0.001); end
  def test_output_ag365; assert_in_delta(0, (worksheet.output_ag365||0), 0.001); end
  def test_output_ah365; assert_in_delta(0, (worksheet.output_ah365||0), 0.001); end
  def test_output_ai365; assert_in_delta(0, (worksheet.output_ai365||0), 0.001); end
  def test_output_aj365; assert_in_delta(0, (worksheet.output_aj365||0), 0.001); end
  def test_output_ak365; assert_in_delta(0, (worksheet.output_ak365||0), 0.001); end
  def test_output_am365; assert_equal("", worksheet.output_am365); end
  def test_output_an365; assert_equal("", worksheet.output_an365); end
  def test_output_ao365; assert_equal("", worksheet.output_ao365); end
  def test_output_aq365; assert_equal("II", worksheet.output_aq365); end
  def test_output_ar365; assert_equal("Nuclear power generation", worksheet.output_ar365); end
  def test_output_av365; assert_in_delta(0, (worksheet.output_av365||0), 0.001); end
  def test_output_ax365; assert_in_delta(0, (worksheet.output_ax365||0), 0.001); end
  def test_output_ay365; assert_in_delta(0, (worksheet.output_ay365||0), 0.001); end
  def test_output_ba365; assert_in_delta(0, (worksheet.output_ba365||0), 0.001); end
  def test_output_bb365; assert_in_delta(0, (worksheet.output_bb365||0), 0.001); end
  def test_output_bd365; assert_equal(:div0, worksheet.output_bd365); end
  def test_output_c366; assert_equal("IV", worksheet.output_c366); end
  def test_output_e366; assert_equal("Distributed renewable power generation", worksheet.output_e366); end
  def test_output_f366; assert_equal("Mt CO2e", worksheet.output_f366); end
  def test_output_g366; assert_equal("OK", worksheet.output_g366); end
  def test_output_h366; assert_in_delta(0, (worksheet.output_h366||0), 0.001); end
  def test_output_m366; assert_in_delta(0, (worksheet.output_m366||0), 0.001); end
  def test_output_r366; assert_in_delta(0, (worksheet.output_r366||0), 0.001); end
  def test_output_w366; assert_in_delta(0, (worksheet.output_w366||0), 0.001); end
  def test_output_ab366; assert_in_delta(0, (worksheet.output_ab366||0), 0.001); end
  def test_output_ac366; assert_in_delta(0, (worksheet.output_ac366||0), 0.001); end
  def test_output_ad366; assert_in_delta(0, (worksheet.output_ad366||0), 0.001); end
  def test_output_ae366; assert_in_delta(0, (worksheet.output_ae366||0), 0.001); end
  def test_output_af366; assert_in_delta(0, (worksheet.output_af366||0), 0.001); end
  def test_output_ag366; assert_in_delta(0, (worksheet.output_ag366||0), 0.001); end
  def test_output_ah366; assert_in_delta(0, (worksheet.output_ah366||0), 0.001); end
  def test_output_ai366; assert_in_delta(0, (worksheet.output_ai366||0), 0.001); end
  def test_output_aj366; assert_in_delta(0, (worksheet.output_aj366||0), 0.001); end
  def test_output_ak366; assert_in_delta(0, (worksheet.output_ak366||0), 0.001); end
  def test_output_am366; assert_equal("", worksheet.output_am366); end
  def test_output_an366; assert_equal("", worksheet.output_an366); end
  def test_output_ao366; assert_equal("", worksheet.output_ao366); end
  def test_output_aq366; assert_equal("III", worksheet.output_aq366); end
  def test_output_ar366; assert_equal("National renewable power generation", worksheet.output_ar366); end
  def test_output_av366; assert_in_delta(0, (worksheet.output_av366||0), 0.001); end
  def test_output_ax366; assert_in_delta(0, (worksheet.output_ax366||0), 0.001); end
  def test_output_ay366; assert_in_delta(0, (worksheet.output_ay366||0), 0.001); end
  def test_output_ba366; assert_in_delta(0, (worksheet.output_ba366||0), 0.001); end
  def test_output_bb366; assert_in_delta(0, (worksheet.output_bb366||0), 0.001); end
  def test_output_bd366; assert_equal(:div0, worksheet.output_bd366); end
  def test_output_c367; assert_equal("VI", worksheet.output_c367); end
  def test_output_e367; assert_equal("Agriculture and waste", worksheet.output_e367); end
  def test_output_f367; assert_equal("Mt CO2e", worksheet.output_f367); end
  def test_output_g367; assert_equal("Historic nb ok, fix model", worksheet.output_g367); end
  def test_output_h367; assert_in_epsilon(17.988853785900357, worksheet.output_h367, 0.001); end
  def test_output_i367; assert_in_delta(0, (worksheet.output_i367||0), 0.001); end
  def test_output_j367; assert_in_delta(0, (worksheet.output_j367||0), 0.001); end
  def test_output_k367; assert_in_delta(0, (worksheet.output_k367||0), 0.001); end
  def test_output_l367; assert_in_delta(0, (worksheet.output_l367||0), 0.001); end
  def test_output_m367; assert_in_epsilon(17.746944317184152, worksheet.output_m367, 0.001); end
  def test_output_n367; assert_in_delta(0, (worksheet.output_n367||0), 0.001); end
  def test_output_o367; assert_in_delta(0, (worksheet.output_o367||0), 0.001); end
  def test_output_p367; assert_in_delta(0, (worksheet.output_p367||0), 0.001); end
  def test_output_q367; assert_in_delta(0, (worksheet.output_q367||0), 0.001); end
  def test_output_r367; assert_in_epsilon(15.88406367057655, worksheet.output_r367, 0.001); end
  def test_output_s367; assert_in_delta(0, (worksheet.output_s367||0), 0.001); end
  def test_output_t367; assert_in_delta(0, (worksheet.output_t367||0), 0.001); end
  def test_output_u367; assert_in_delta(0, (worksheet.output_u367||0), 0.001); end
  def test_output_v367; assert_in_delta(0, (worksheet.output_v367||0), 0.001); end
  def test_output_w367; assert_in_epsilon(14.02568362725688, worksheet.output_w367, 0.001); end
  def test_output_x367; assert_in_delta(0, (worksheet.output_x367||0), 0.001); end
  def test_output_y367; assert_in_delta(0, (worksheet.output_y367||0), 0.001); end
  def test_output_z367; assert_in_delta(0, (worksheet.output_z367||0), 0.001); end
  def test_output_aa367; assert_in_delta(0, (worksheet.output_aa367||0), 0.001); end
  def test_output_ab367; assert_in_epsilon(13.463808239851314, worksheet.output_ab367, 0.001); end
  def test_output_ac367; assert_in_epsilon(13.692529969967014, worksheet.output_ac367, 0.001); end
  def test_output_ad367; assert_in_epsilon(13.00628128829377, worksheet.output_ad367, 0.001); end
  def test_output_ae367; assert_in_epsilon(12.372184255741121, worksheet.output_ae367, 0.001); end
  def test_output_af367; assert_in_epsilon(11.74206892180811, worksheet.output_af367, 0.001); end
  def test_output_ag367; assert_in_epsilon(11.170599659965362, worksheet.output_ag367, 0.001); end
  def test_output_ah367; assert_in_epsilon(10.772068290554705, worksheet.output_ah367, 0.001); end
  def test_output_ai367; assert_in_epsilon(10.418357707949136, worksheet.output_ai367, 0.001); end
  def test_output_aj367; assert_in_epsilon(10.092015695627904, worksheet.output_aj367, 0.001); end
  def test_output_ak367; assert_in_epsilon(9.791207687744663, worksheet.output_ak367, 0.001); end
  def test_output_am367; assert_in_delta(-0.008349091569554323, worksheet.output_am367, 0.001); end
  def test_output_an367; assert_in_delta(-0.2727757620044067, worksheet.output_an367, 0.001); end
  def test_output_ao367; assert_in_delta(-0.45570697253545966, worksheet.output_ao367, 0.001); end
  def test_output_aq367; assert_equal("IV", worksheet.output_aq367); end
  def test_output_ar367; assert_equal("Distributed renewable power generation", worksheet.output_ar367); end
  def test_output_av367; assert_in_delta(0, (worksheet.output_av367||0), 0.001); end
  def test_output_ax367; assert_in_delta(0, (worksheet.output_ax367||0), 0.001); end
  def test_output_ay367; assert_in_delta(0, (worksheet.output_ay367||0), 0.001); end
  def test_output_ba367; assert_in_delta(0, (worksheet.output_ba367||0), 0.001); end
  def test_output_bb367; assert_in_delta(0, (worksheet.output_bb367||0), 0.001); end
  def test_output_bd367; assert_equal(:div0, worksheet.output_bd367); end
  def test_output_c368; assert_equal("VII", worksheet.output_c368); end
  def test_output_e368; assert_equal("Electricity distribution, storage, and balancing", worksheet.output_e368); end
  def test_output_f368; assert_equal("Mt CO2e", worksheet.output_f368); end
  def test_output_g368; assert_equal("Check ?? Mais 2010 = 0", worksheet.output_g368); end
  def test_output_h368; assert_in_delta(0, (worksheet.output_h368||0), 0.001); end
  def test_output_i368; assert_in_delta(0, (worksheet.output_i368||0), 0.001); end
  def test_output_j368; assert_in_delta(0, (worksheet.output_j368||0), 0.001); end
  def test_output_k368; assert_in_delta(0, (worksheet.output_k368||0), 0.001); end
  def test_output_l368; assert_in_delta(0, (worksheet.output_l368||0), 0.001); end
  def test_output_m368; assert_in_delta(0, (worksheet.output_m368||0), 0.001); end
  def test_output_n368; assert_in_delta(0, (worksheet.output_n368||0), 0.001); end
  def test_output_o368; assert_in_delta(0, (worksheet.output_o368||0), 0.001); end
  def test_output_p368; assert_in_delta(0, (worksheet.output_p368||0), 0.001); end
  def test_output_q368; assert_in_delta(0, (worksheet.output_q368||0), 0.001); end
  def test_output_r368; assert_in_delta(0, (worksheet.output_r368||0), 0.001); end
  def test_output_s368; assert_in_delta(0, (worksheet.output_s368||0), 0.001); end
  def test_output_t368; assert_in_delta(0, (worksheet.output_t368||0), 0.001); end
  def test_output_u368; assert_in_delta(0, (worksheet.output_u368||0), 0.001); end
  def test_output_v368; assert_in_delta(0, (worksheet.output_v368||0), 0.001); end
  def test_output_w368; assert_in_delta(0, (worksheet.output_w368||0), 0.001); end
  def test_output_x368; assert_in_delta(0, (worksheet.output_x368||0), 0.001); end
  def test_output_y368; assert_in_delta(0, (worksheet.output_y368||0), 0.001); end
  def test_output_z368; assert_in_delta(0, (worksheet.output_z368||0), 0.001); end
  def test_output_aa368; assert_in_delta(0, (worksheet.output_aa368||0), 0.001); end
  def test_output_ab368; assert_in_delta(0, (worksheet.output_ab368||0), 0.001); end
  def test_output_ac368; assert_in_delta(0, (worksheet.output_ac368||0), 0.001); end
  def test_output_ad368; assert_in_delta(0, (worksheet.output_ad368||0), 0.001); end
  def test_output_ae368; assert_in_delta(0.06080096897005206, worksheet.output_ae368, 0.001); end
  def test_output_af368; assert_in_delta(0.30197948859642026, worksheet.output_af368, 0.001); end
  def test_output_ag368; assert_in_delta(0.577721503352341, worksheet.output_ag368, 0.001); end
  def test_output_ah368; assert_in_delta(0.8410871934796008, worksheet.output_ah368, 0.001); end
  def test_output_ai368; assert_in_epsilon(1.0545771320521649, worksheet.output_ai368, 0.001); end
  def test_output_aj368; assert_in_epsilon(1.2986591757616555, worksheet.output_aj368, 0.001); end
  def test_output_ak368; assert_in_epsilon(1.571547336900856, worksheet.output_ak368, 0.001); end
  def test_output_am368; assert_equal("", worksheet.output_am368); end
  def test_output_an368; assert_equal("", worksheet.output_an368); end
  def test_output_ao368; assert_equal("", worksheet.output_ao368); end
  def test_output_aq368; assert_equal("V", worksheet.output_aq368); end
  def test_output_ar368; assert_equal("Bioenergy", worksheet.output_ar368); end
  def test_output_av368; assert_in_epsilon(1.07460815808904, worksheet.output_av368, 0.001); end
  def test_output_ax368; assert_in_delta(-0.0826708987605654, worksheet.output_ax368, 0.001); end
  def test_output_ay368; assert_in_epsilon(-3.354773257008485, worksheet.output_ay368, 0.001); end
  def test_output_az368; assert_in_delta(-0.8213276700889944, worksheet.output_az368, 0.001); end
  def test_output_ba368; assert_in_epsilon(-1.0242628130359255, worksheet.output_ba368, 0.001); end
  def test_output_bb368; assert_in_epsilon(-8.607237383496646, worksheet.output_bb368, 0.001); end
  def test_output_bd368; assert_in_epsilon(1.5656688914862409, worksheet.output_bd368, 0.001); end
  def test_output_c369; assert_equal("VIII", worksheet.output_c369); end
  def test_output_e369; assert_equal("H2 Production", worksheet.output_e369); end
  def test_output_f369; assert_equal("Mt CO2e", worksheet.output_f369); end
  def test_output_g369; assert_equal("Check ?? Mais 2010 = 0", worksheet.output_g369); end
  def test_output_h369; assert_in_delta(0, (worksheet.output_h369||0), 0.001); end
  def test_output_i369; assert_in_delta(0, (worksheet.output_i369||0), 0.001); end
  def test_output_j369; assert_in_delta(0, (worksheet.output_j369||0), 0.001); end
  def test_output_k369; assert_in_delta(0, (worksheet.output_k369||0), 0.001); end
  def test_output_l369; assert_in_delta(0, (worksheet.output_l369||0), 0.001); end
  def test_output_m369; assert_in_delta(0, (worksheet.output_m369||0), 0.001); end
  def test_output_n369; assert_in_delta(0, (worksheet.output_n369||0), 0.001); end
  def test_output_o369; assert_in_delta(0, (worksheet.output_o369||0), 0.001); end
  def test_output_p369; assert_in_delta(0, (worksheet.output_p369||0), 0.001); end
  def test_output_q369; assert_in_delta(0, (worksheet.output_q369||0), 0.001); end
  def test_output_r369; assert_in_delta(0, (worksheet.output_r369||0), 0.001); end
  def test_output_s369; assert_in_delta(0, (worksheet.output_s369||0), 0.001); end
  def test_output_t369; assert_in_delta(0, (worksheet.output_t369||0), 0.001); end
  def test_output_u369; assert_in_delta(0, (worksheet.output_u369||0), 0.001); end
  def test_output_v369; assert_in_delta(0, (worksheet.output_v369||0), 0.001); end
  def test_output_w369; assert_in_delta(0, (worksheet.output_w369||0), 0.001); end
  def test_output_x369; assert_in_delta(0, (worksheet.output_x369||0), 0.001); end
  def test_output_y369; assert_in_delta(0, (worksheet.output_y369||0), 0.001); end
  def test_output_z369; assert_in_delta(0, (worksheet.output_z369||0), 0.001); end
  def test_output_aa369; assert_in_delta(0, (worksheet.output_aa369||0), 0.001); end
  def test_output_ab369; assert_in_delta(0, (worksheet.output_ab369||0), 0.001); end
  def test_output_ac369; assert_in_delta(0, (worksheet.output_ac369||0), 0.001); end
  def test_output_ad369; assert_in_delta(0, (worksheet.output_ad369||0), 0.001); end
  def test_output_ae369; assert_in_delta(0.025459923887303632, worksheet.output_ae369, 0.001); end
  def test_output_af369; assert_in_delta(0.045241374155416916, worksheet.output_af369, 0.001); end
  def test_output_ag369; assert_in_delta(0.0579175069738669, worksheet.output_ag369, 0.001); end
  def test_output_ah369; assert_in_delta(0.06143736519260377, worksheet.output_ah369, 0.001); end
  def test_output_ai369; assert_in_delta(0.05501985812615842, worksheet.output_ai369, 0.001); end
  def test_output_aj369; assert_in_delta(0.035541117929853386, worksheet.output_aj369, 0.001); end
  def test_output_ak369; assert_in_delta(0, (worksheet.output_ak369||0), 0.001); end
  def test_output_am369; assert_equal("", worksheet.output_am369); end
  def test_output_an369; assert_equal("", worksheet.output_an369); end
  def test_output_ao369; assert_equal("", worksheet.output_ao369); end
  def test_output_aq369; assert_equal("VI", worksheet.output_aq369); end
  def test_output_ar369; assert_equal("Agriculture and waste", worksheet.output_ar369); end
  def test_output_av369; assert_in_epsilon(6.336005481092559, worksheet.output_av369, 0.001); end
  def test_output_aw369; assert_in_delta(0.10777360296318601, worksheet.output_aw369, 0.001); end
  def test_output_ax369; assert_in_delta(0.11834731451539807, worksheet.output_ax369, 0.001); end
  def test_output_ay369; assert_in_epsilon(4.802517109737954, worksheet.output_ay369, 0.001); end
  def test_output_az369; assert_in_delta(0.3129137944122072, worksheet.output_az369, 0.001); end
  def test_output_ba369; assert_in_delta(0.4116942582923946, worksheet.output_ba369, 0.001); end
  def test_output_bb369; assert_in_epsilon(3.4596103318855276, worksheet.output_bb369, 0.001); end
  def test_output_bd369; assert_in_delta(-0.2796256103136926, worksheet.output_bd369, 0.001); end
  def test_output_c370; assert_equal("IX", worksheet.output_c370); end
  def test_output_e370; assert_equal("Heating", worksheet.output_e370); end
  def test_output_f370; assert_equal("Mt CO2e", worksheet.output_f370); end
  def test_output_g370; assert_equal("Ok, but no split ", worksheet.output_g370); end
  def test_output_h370; assert_in_epsilon(24.90969851232879, worksheet.output_h370, 0.001); end
  def test_output_i370; assert_in_delta(0, (worksheet.output_i370||0), 0.001); end
  def test_output_j370; assert_in_delta(0, (worksheet.output_j370||0), 0.001); end
  def test_output_k370; assert_in_delta(0, (worksheet.output_k370||0), 0.001); end
  def test_output_l370; assert_in_delta(0, (worksheet.output_l370||0), 0.001); end
  def test_output_m370; assert_in_epsilon(28.02274488807022, worksheet.output_m370, 0.001); end
  def test_output_n370; assert_in_delta(0, (worksheet.output_n370||0), 0.001); end
  def test_output_o370; assert_in_delta(0, (worksheet.output_o370||0), 0.001); end
  def test_output_p370; assert_in_delta(0, (worksheet.output_p370||0), 0.001); end
  def test_output_q370; assert_in_delta(0, (worksheet.output_q370||0), 0.001); end
  def test_output_r370; assert_in_epsilon(27.19468761043284, worksheet.output_r370, 0.001); end
  def test_output_s370; assert_in_delta(0, (worksheet.output_s370||0), 0.001); end
  def test_output_t370; assert_in_delta(0, (worksheet.output_t370||0), 0.001); end
  def test_output_u370; assert_in_delta(0, (worksheet.output_u370||0), 0.001); end
  def test_output_v370; assert_in_delta(0, (worksheet.output_v370||0), 0.001); end
  def test_output_w370; assert_in_epsilon(28.554665409330354, worksheet.output_w370, 0.001); end
  def test_output_x370; assert_in_delta(0, (worksheet.output_x370||0), 0.001); end
  def test_output_y370; assert_in_delta(0, (worksheet.output_y370||0), 0.001); end
  def test_output_z370; assert_in_delta(0, (worksheet.output_z370||0), 0.001); end
  def test_output_aa370; assert_in_delta(0, (worksheet.output_aa370||0), 0.001); end
  def test_output_ab370; assert_in_epsilon(30.31400519970225, worksheet.output_ab370, 0.001); end
  def test_output_am370; assert_in_delta(-0.031214476945626957, worksheet.output_am370, 0.001); end
  def test_output_an370; assert_in_delta(-0.8007357634640212, worksheet.output_an370, 0.001); end
  def test_output_ao370; assert_in_delta(-0.7575042066656615, worksheet.output_ao370, 0.001); end
  def test_output_aq370; assert_equal("VII", worksheet.output_aq370); end
  def test_output_ar370; assert_equal("Electricity distribution, storage, and balancing", worksheet.output_ar370); end
  def test_output_av370; assert_in_delta(0, (worksheet.output_av370||0), 0.001); end
  def test_output_aw370; assert_in_delta(0, (worksheet.output_aw370||0), 0.001); end
  def test_output_ax370; assert_in_delta(0, (worksheet.output_ax370||0), 0.001); end
  def test_output_ay370; assert_in_delta(0, (worksheet.output_ay370||0), 0.001); end
  def test_output_az370; assert_in_delta(0.05022453368071894, worksheet.output_az370, 0.001); end
  def test_output_ba370; assert_in_delta(0.02073542881602462, worksheet.output_ba370, 0.001); end
  def test_output_bb370; assert_in_delta(0.1742470348397397, worksheet.output_bb370, 0.001); end
  def test_output_bd370; assert_equal(:div0, worksheet.output_bd370); end
  def test_output_c371; assert_equal("X", worksheet.output_c371); end
  def test_output_e371; assert_equal("Lighting and appliances", worksheet.output_e371); end
  def test_output_f371; assert_equal("Mt CO2e", worksheet.output_f371); end
  def test_output_g371; assert_equal("Ok, but no split ", worksheet.output_g371); end
  def test_output_h371; assert_equal("incl. Above", worksheet.output_h371); end
  def test_output_i371; assert_equal("incl. Above", worksheet.output_i371); end
  def test_output_j371; assert_equal("incl. Above", worksheet.output_j371); end
  def test_output_k371; assert_equal("incl. Above", worksheet.output_k371); end
  def test_output_l371; assert_equal("incl. Above", worksheet.output_l371); end
  def test_output_m371; assert_equal("incl. Above", worksheet.output_m371); end
  def test_output_n371; assert_equal("incl. Above", worksheet.output_n371); end
  def test_output_o371; assert_equal("incl. Above", worksheet.output_o371); end
  def test_output_p371; assert_equal("incl. Above", worksheet.output_p371); end
  def test_output_q371; assert_equal("incl. Above", worksheet.output_q371); end
  def test_output_r371; assert_equal("incl. Above", worksheet.output_r371); end
  def test_output_s371; assert_equal("incl. Above", worksheet.output_s371); end
  def test_output_t371; assert_equal("incl. Above", worksheet.output_t371); end
  def test_output_u371; assert_equal("incl. Above", worksheet.output_u371); end
  def test_output_v371; assert_equal("incl. Above", worksheet.output_v371); end
  def test_output_w371; assert_equal("incl. Above", worksheet.output_w371); end
  def test_output_x371; assert_equal("incl. Above", worksheet.output_x371); end
  def test_output_y371; assert_equal("incl. Above", worksheet.output_y371); end
  def test_output_z371; assert_equal("incl. Above", worksheet.output_z371); end
  def test_output_aa371; assert_equal("incl. Above", worksheet.output_aa371); end
  def test_output_ab371; assert_equal("incl. Above", worksheet.output_ab371); end
  def test_output_ac371; assert_in_delta(0.05750473978133632, worksheet.output_ac371, 0.001); end
  def test_output_ad371; assert_in_delta(0.05445447205160222, worksheet.output_ad371, 0.001); end
  def test_output_ae371; assert_in_delta(0.05009164651012404, worksheet.output_ae371, 0.001); end
  def test_output_af371; assert_in_delta(0.04397302279820515, worksheet.output_af371, 0.001); end
  def test_output_ag371; assert_in_delta(0.03730267924927018, worksheet.output_ag371, 0.001); end
  def test_output_ah371; assert_in_delta(0.029860178079429558, worksheet.output_ah371, 0.001); end
  def test_output_ai371; assert_in_delta(0.02190541520298238, worksheet.output_ai371, 0.001); end
  def test_output_aj371; assert_in_delta(0.013353740839439741, worksheet.output_aj371, 0.001); end
  def test_output_ak371; assert_in_delta(0.00429429324842828, worksheet.output_ak371, 0.001); end
  def test_output_am371; assert_in_delta(-0.06280556441448792, worksheet.output_am371, 0.001); end
  def test_output_an371; assert_equal("", worksheet.output_an371); end
  def test_output_ao371; assert_equal("", worksheet.output_ao371); end
  def test_output_aq371; assert_equal("VIII", worksheet.output_aq371); end
  def test_output_ar371; assert_equal("H2 Production", worksheet.output_ar371); end
  def test_output_av371; assert_in_delta(0, (worksheet.output_av371||0), 0.001); end
  def test_output_aw371; assert_in_delta(0, (worksheet.output_aw371||0), 0.001); end
  def test_output_ax371; assert_in_delta(0, (worksheet.output_ax371||0), 0.001); end
  def test_output_ay371; assert_in_delta(0, (worksheet.output_ay371||0), 0.001); end
  def test_output_az371; assert_in_delta(0, (worksheet.output_az371||0), 0.001); end
  def test_output_ba371; assert_in_delta(0, (worksheet.output_ba371||0), 0.001); end
  def test_output_bb371; assert_in_delta(0, (worksheet.output_bb371||0), 0.001); end
  def test_output_bd371; assert_equal(:div0, worksheet.output_bd371); end
  def test_output_c372; assert_equal("XI", worksheet.output_c372); end
  def test_output_e372; assert_equal("Industry", worksheet.output_e372); end
  def test_output_f372; assert_equal("Mt CO2e", worksheet.output_f372); end
  def test_output_h372; assert_in_epsilon(54.09955930941479, worksheet.output_h372, 0.001); end
  def test_output_i372; assert_in_delta(0, (worksheet.output_i372||0), 0.001); end
  def test_output_j372; assert_in_delta(0, (worksheet.output_j372||0), 0.001); end
  def test_output_k372; assert_in_delta(0, (worksheet.output_k372||0), 0.001); end
  def test_output_l372; assert_in_delta(0, (worksheet.output_l372||0), 0.001); end
  def test_output_m372; assert_in_epsilon(56.870673913345, worksheet.output_m372, 0.001); end
  def test_output_n372; assert_in_delta(0, (worksheet.output_n372||0), 0.001); end
  def test_output_o372; assert_in_delta(0, (worksheet.output_o372||0), 0.001); end
  def test_output_p372; assert_in_delta(0, (worksheet.output_p372||0), 0.001); end
  def test_output_q372; assert_in_delta(0, (worksheet.output_q372||0), 0.001); end
  def test_output_r372; assert_in_epsilon(54.52020281951098, worksheet.output_r372, 0.001); end
  def test_output_s372; assert_in_delta(0, (worksheet.output_s372||0), 0.001); end
  def test_output_t372; assert_in_delta(0, (worksheet.output_t372||0), 0.001); end
  def test_output_u372; assert_in_delta(0, (worksheet.output_u372||0), 0.001); end
  def test_output_v372; assert_in_delta(0, (worksheet.output_v372||0), 0.001); end
  def test_output_w372; assert_in_epsilon(49.65045254229085, worksheet.output_w372, 0.001); end
  def test_output_x372; assert_in_delta(0, (worksheet.output_x372||0), 0.001); end
  def test_output_y372; assert_in_delta(0, (worksheet.output_y372||0), 0.001); end
  def test_output_z372; assert_in_delta(0, (worksheet.output_z372||0), 0.001); end
  def test_output_aa372; assert_in_delta(0, (worksheet.output_aa372||0), 0.001); end
  def test_output_ab372; assert_in_epsilon(42.706160529116474, worksheet.output_ab372, 0.001); end
  def test_output_am372; assert_in_delta(-0.040472034988721206, worksheet.output_am372, 0.001); end
  def test_output_an372; assert_in_delta(-0.778751015550221, worksheet.output_an372, 0.001); end
  def test_output_ao372; assert_in_delta(-0.825346180866728, worksheet.output_ao372, 0.001); end
  def test_output_aq372; assert_equal("IX", worksheet.output_aq372); end
  def test_output_ar372; assert_equal("Heating", worksheet.output_ar372); end
  def test_output_av372; assert_in_epsilon(8.12872851, worksheet.output_av372, 0.001); end
  def test_output_aw372; assert_in_delta(0.16904244596619808, worksheet.output_aw372, 0.001); end
  def test_output_ax372; assert_in_delta(0.23291362811396576, worksheet.output_ax372, 0.001); end
  def test_output_ay372; assert_in_epsilon(9.451601742622788, worksheet.output_ay372, 0.001); end
  def test_output_az372; assert_in_delta(0.19304614188038702, worksheet.output_az372, 0.001); end
  def test_output_ba372; assert_in_delta(0.1590441299263065, worksheet.output_ba372, 0.001); end
  def test_output_bb372; assert_in_epsilon(1.3365032521974303, worksheet.output_bb372, 0.001); end
  def test_output_bd372; assert_in_delta(-0.8585950520777492, worksheet.output_bd372, 0.001); end
  def test_output_c373; assert_equal("XII", worksheet.output_c373); end
  def test_output_e373; assert_equal("Transport", worksheet.output_e373); end
  def test_output_f373; assert_equal("Mt CO2e", worksheet.output_f373); end
  def test_output_g373; assert_equal("Scope OK = all domestic", worksheet.output_g373); end
  def test_output_h373; assert_in_epsilon(20.4724552687413, worksheet.output_h373, 0.001); end
  def test_output_i373; assert_in_delta(0, (worksheet.output_i373||0), 0.001); end
  def test_output_j373; assert_in_delta(0, (worksheet.output_j373||0), 0.001); end
  def test_output_k373; assert_in_delta(0, (worksheet.output_k373||0), 0.001); end
  def test_output_l373; assert_in_delta(0, (worksheet.output_l373||0), 0.001); end
  def test_output_m373; assert_in_epsilon(22.5119304822935, worksheet.output_m373, 0.001); end
  def test_output_n373; assert_in_delta(0, (worksheet.output_n373||0), 0.001); end
  def test_output_o373; assert_in_delta(0, (worksheet.output_o373||0), 0.001); end
  def test_output_p373; assert_in_delta(0, (worksheet.output_p373||0), 0.001); end
  def test_output_q373; assert_in_delta(0, (worksheet.output_q373||0), 0.001); end
  def test_output_r373; assert_in_epsilon(24.6590970868922, worksheet.output_r373, 0.001); end
  def test_output_s373; assert_in_delta(0, (worksheet.output_s373||0), 0.001); end
  def test_output_t373; assert_in_delta(0, (worksheet.output_t373||0), 0.001); end
  def test_output_u373; assert_in_delta(0, (worksheet.output_u373||0), 0.001); end
  def test_output_v373; assert_in_delta(0, (worksheet.output_v373||0), 0.001); end
  def test_output_w373; assert_in_epsilon(26.255467159611, worksheet.output_w373, 0.001); end
  def test_output_x373; assert_in_delta(0, (worksheet.output_x373||0), 0.001); end
  def test_output_y373; assert_in_delta(0, (worksheet.output_y373||0), 0.001); end
  def test_output_z373; assert_in_delta(0, (worksheet.output_z373||0), 0.001); end
  def test_output_aa373; assert_in_delta(0, (worksheet.output_aa373||0), 0.001); end
  def test_output_ab373; assert_in_epsilon(24.2574527403487, worksheet.output_ab373, 0.001); end
  def test_output_am373; assert_in_delta(-0.04019770922709898, worksheet.output_am373, 0.001); end
  def test_output_an373; assert_in_delta(-0.8200012595334296, worksheet.output_an373, 0.001); end
  def test_output_ao373; assert_in_delta(-0.7867226532981174, worksheet.output_ao373, 0.001); end
  def test_output_aq373; assert_equal("X", worksheet.output_aq373); end
  def test_output_ar373; assert_equal("Lighting and appliances", worksheet.output_ar373); end
  def test_output_av373; assert_in_delta(0, (worksheet.output_av373||0), 0.001); end
  def test_output_aw373; assert_in_delta(0.00045261854509638145, worksheet.output_aw373, 0.001); end
  def test_output_ax373; assert_in_delta(0.0030872911757230653, worksheet.output_ax373, 0.001); end
  def test_output_ay373; assert_in_delta(0.12528183469869886, worksheet.output_ay373, 0.001); end
  def test_output_az373; assert_in_delta(0.00013723982143350267, worksheet.output_az373, 0.001); end
  def test_output_ba373; assert_in_delta(0, (worksheet.output_ba373||0), 0.001); end
  def test_output_bb373; assert_in_delta(0, (worksheet.output_bb373||0), 0.001); end
  def test_output_bd373; assert_in_delta(-1, worksheet.output_bd373, 0.001); end
  def test_output_c374; assert_equal("XIII", worksheet.output_c374); end
  def test_output_e374; assert_equal("Food consumption [UNUSED]", worksheet.output_e374); end
  def test_output_f374; assert_equal("Mt CO2e", worksheet.output_f374); end
  def test_output_g374; assert_equal("Ok", worksheet.output_g374); end
  def test_output_h374; assert_in_delta(0, (worksheet.output_h374||0), 0.001); end
  def test_output_m374; assert_in_delta(0, (worksheet.output_m374||0), 0.001); end
  def test_output_r374; assert_in_delta(0, (worksheet.output_r374||0), 0.001); end
  def test_output_w374; assert_in_delta(0, (worksheet.output_w374||0), 0.001); end
  def test_output_ab374; assert_in_delta(0, (worksheet.output_ab374||0), 0.001); end
  def test_output_ac374; assert_in_delta(0, (worksheet.output_ac374||0), 0.001); end
  def test_output_ad374; assert_in_delta(0, (worksheet.output_ad374||0), 0.001); end
  def test_output_ae374; assert_in_delta(0, (worksheet.output_ae374||0), 0.001); end
  def test_output_af374; assert_in_delta(0, (worksheet.output_af374||0), 0.001); end
  def test_output_ag374; assert_in_delta(0, (worksheet.output_ag374||0), 0.001); end
  def test_output_ah374; assert_in_delta(0, (worksheet.output_ah374||0), 0.001); end
  def test_output_ai374; assert_in_delta(0, (worksheet.output_ai374||0), 0.001); end
  def test_output_aj374; assert_in_delta(0, (worksheet.output_aj374||0), 0.001); end
  def test_output_ak374; assert_in_delta(0, (worksheet.output_ak374||0), 0.001); end
  def test_output_am374; assert_equal("", worksheet.output_am374); end
  def test_output_an374; assert_equal("", worksheet.output_an374); end
  def test_output_ao374; assert_equal("", worksheet.output_ao374); end
  def test_output_aq374; assert_equal("XI", worksheet.output_aq374); end
  def test_output_ar374; assert_equal("Industry", worksheet.output_ar374); end
  def test_output_av374; assert_in_epsilon(26.04972370564, worksheet.output_av374, 0.001); end
  def test_output_aw374; assert_in_delta(0.3882353287934675, worksheet.output_aw374, 0.001); end
  def test_output_ax374; assert_in_delta(0.3909029523146196, worksheet.output_ax374, 0.001); end
  def test_output_ay374; assert_in_epsilon(15.862785940054295, worksheet.output_ay374, 0.001); end
  def test_output_az374; assert_in_delta(0.3019675394975329, worksheet.output_az374, 0.001); end
  def test_output_ba374; assert_in_delta(0.6831039456401904, worksheet.output_ba374, 0.001); end
  def test_output_bb374; assert_in_epsilon(5.740360523585739, worksheet.output_bb374, 0.001); end
  def test_output_bd374; assert_in_delta(-0.6381240631198928, worksheet.output_bd374, 0.001); end
  def test_output_c375; assert_equal("XIV", worksheet.output_c375); end
  def test_output_e375; assert_equal("Geosequestration", worksheet.output_e375); end
  def test_output_f375; assert_equal("Mt CO2e", worksheet.output_f375); end
  def test_output_g375; assert_equal("Ok", worksheet.output_g375); end
  def test_output_h375; assert_in_delta(0, (worksheet.output_h375||0), 0.001); end
  def test_output_m375; assert_in_delta(0, (worksheet.output_m375||0), 0.001); end
  def test_output_r375; assert_in_delta(0, (worksheet.output_r375||0), 0.001); end
  def test_output_w375; assert_in_delta(0, (worksheet.output_w375||0), 0.001); end
  def test_output_ab375; assert_in_delta(0, (worksheet.output_ab375||0), 0.001); end
  def test_output_ac375; assert_in_delta(0, (worksheet.output_ac375||0), 0.001); end
  def test_output_ad375; assert_in_delta(0, (worksheet.output_ad375||0), 0.001); end
  def test_output_ae375; assert_in_delta(0, (worksheet.output_ae375||0), 0.001); end
  def test_output_af375; assert_in_delta(0, (worksheet.output_af375||0), 0.001); end
  def test_output_ag375; assert_in_delta(0, (worksheet.output_ag375||0), 0.001); end
  def test_output_ah375; assert_in_delta(0, (worksheet.output_ah375||0), 0.001); end
  def test_output_ai375; assert_in_delta(0, (worksheet.output_ai375||0), 0.001); end
  def test_output_aj375; assert_in_delta(0, (worksheet.output_aj375||0), 0.001); end
  def test_output_ak375; assert_in_delta(0, (worksheet.output_ak375||0), 0.001); end
  def test_output_am375; assert_equal("", worksheet.output_am375); end
  def test_output_an375; assert_equal("", worksheet.output_an375); end
  def test_output_ao375; assert_equal("", worksheet.output_ao375); end
  def test_output_aq375; assert_equal("XII", worksheet.output_aq375); end
  def test_output_ar375; assert_equal("Transport (excl. Int'l aviation)", worksheet.output_ar375); end
  def test_output_av375; assert_in_epsilon(7.287946509648742, worksheet.output_av375, 0.001); end
  def test_output_aw375; assert_in_delta(0.17736669618733675, worksheet.output_aw375, 0.001); end
  def test_output_ax375; assert_in_delta(0.24499839726408779, worksheet.output_ax375, 0.001); end
  def test_output_ay375; assert_in_epsilon(9.941999947671565, worksheet.output_ay375, 0.001); end
  def test_output_az375; assert_in_delta(0.1395414097474972, worksheet.output_az375, 0.001); end
  def test_output_ba375; assert_in_delta(0.32155727222883723, worksheet.output_ba375, 0.001); end
  def test_output_bb375; assert_in_epsilon(2.702157824376837, worksheet.output_bb375, 0.001); end
  def test_output_bd375; assert_in_delta(-0.7282078215047982, worksheet.output_bd375, 0.001); end
  def test_output_c376; assert_equal("XV", worksheet.output_c376); end
  def test_output_e376; assert_equal("Fossil fuel production", worksheet.output_e376); end
  def test_output_f376; assert_equal("Mt CO2e", worksheet.output_f376); end
  def test_output_g376; assert_equal("Ok", worksheet.output_g376); end
  def test_output_h376; assert_in_delta(0, (worksheet.output_h376||0), 0.001); end
  def test_output_m376; assert_in_delta(0, (worksheet.output_m376||0), 0.001); end
  def test_output_r376; assert_in_delta(0, (worksheet.output_r376||0), 0.001); end
  def test_output_w376; assert_in_delta(0, (worksheet.output_w376||0), 0.001); end
  def test_output_ab376; assert_in_delta(0, (worksheet.output_ab376||0), 0.001); end
  def test_output_ac376; assert_in_delta(0, (worksheet.output_ac376||0), 0.001); end
  def test_output_ad376; assert_in_delta(0, (worksheet.output_ad376||0), 0.001); end
  def test_output_ae376; assert_in_delta(0, (worksheet.output_ae376||0), 0.001); end
  def test_output_af376; assert_in_delta(0, (worksheet.output_af376||0), 0.001); end
  def test_output_ag376; assert_in_delta(0, (worksheet.output_ag376||0), 0.001); end
  def test_output_ah376; assert_in_delta(0, (worksheet.output_ah376||0), 0.001); end
  def test_output_ai376; assert_in_delta(0, (worksheet.output_ai376||0), 0.001); end
  def test_output_aj376; assert_in_delta(0, (worksheet.output_aj376||0), 0.001); end
  def test_output_ak376; assert_in_delta(0, (worksheet.output_ak376||0), 0.001); end
  def test_output_am376; assert_equal("", worksheet.output_am376); end
  def test_output_an376; assert_equal("", worksheet.output_an376); end
  def test_output_ao376; assert_equal("", worksheet.output_ao376); end
  def test_output_aq376; assert_equal("XIII", worksheet.output_aq376); end
  def test_output_ar376; assert_equal("Food consumption [UNUSED]", worksheet.output_ar376); end
  def test_output_av376; assert_in_delta(0, (worksheet.output_av376||0), 0.001); end
  def test_output_ax376; assert_in_delta(0, (worksheet.output_ax376||0), 0.001); end
  def test_output_ay376; assert_in_delta(0, (worksheet.output_ay376||0), 0.001); end
  def test_output_ba376; assert_in_delta(0, (worksheet.output_ba376||0), 0.001); end
  def test_output_bb376; assert_in_delta(0, (worksheet.output_bb376||0), 0.001); end
  def test_output_bd376; assert_equal(:div0, worksheet.output_bd376); end
  def test_output_c377; assert_equal("XVI", worksheet.output_c377); end
  def test_output_e377; assert_equal("Transfers", worksheet.output_e377); end
  def test_output_f377; assert_equal("Mt CO2e", worksheet.output_f377); end
  def test_output_g377; assert_equal("Ok", worksheet.output_g377); end
  def test_output_h377; assert_in_delta(0, (worksheet.output_h377||0), 0.001); end
  def test_output_m377; assert_in_delta(0, (worksheet.output_m377||0), 0.001); end
  def test_output_r377; assert_in_delta(0, (worksheet.output_r377||0), 0.001); end
  def test_output_w377; assert_in_delta(0, (worksheet.output_w377||0), 0.001); end
  def test_output_ab377; assert_in_delta(0, (worksheet.output_ab377||0), 0.001); end
  def test_output_ac377; assert_in_delta(0, (worksheet.output_ac377||0), 0.001); end
  def test_output_ad377; assert_in_delta(0, (worksheet.output_ad377||0), 0.001); end
  def test_output_ae377; assert_in_delta(0, (worksheet.output_ae377||0), 0.001); end
  def test_output_af377; assert_in_delta(0, (worksheet.output_af377||0), 0.001); end
  def test_output_ag377; assert_in_delta(0, (worksheet.output_ag377||0), 0.001); end
  def test_output_ah377; assert_in_delta(0, (worksheet.output_ah377||0), 0.001); end
  def test_output_ai377; assert_in_delta(0, (worksheet.output_ai377||0), 0.001); end
  def test_output_aj377; assert_in_delta(0, (worksheet.output_aj377||0), 0.001); end
  def test_output_ak377; assert_in_delta(0, (worksheet.output_ak377||0), 0.001); end
  def test_output_am377; assert_equal("", worksheet.output_am377); end
  def test_output_an377; assert_equal("", worksheet.output_an377); end
  def test_output_ao377; assert_equal("", worksheet.output_ao377); end
  def test_output_aq377; assert_equal("XIV", worksheet.output_aq377); end
  def test_output_ar377; assert_equal("Geosequestration", worksheet.output_ar377); end
  def test_output_av377; assert_in_delta(0, (worksheet.output_av377||0), 0.001); end
  def test_output_ax377; assert_in_delta(0, (worksheet.output_ax377||0), 0.001); end
  def test_output_ay377; assert_in_delta(0, (worksheet.output_ay377||0), 0.001); end
  def test_output_ba377; assert_in_delta(0, (worksheet.output_ba377||0), 0.001); end
  def test_output_bb377; assert_in_delta(0, (worksheet.output_bb377||0), 0.001); end
  def test_output_bd377; assert_equal(:div0, worksheet.output_bd377); end
  def test_output_c378; assert_equal("XVII", worksheet.output_c378); end
  def test_output_e378; assert_equal("District heating", worksheet.output_e378); end
  def test_output_f378; assert_equal("Mt CO2e", worksheet.output_f378); end
  def test_output_g378; assert_equal("??? What is this ??", worksheet.output_g378); end
  def test_output_h378; assert_in_delta(0, (worksheet.output_h378||0), 0.001); end
  def test_output_m378; assert_in_delta(0, (worksheet.output_m378||0), 0.001); end
  def test_output_r378; assert_in_delta(0, (worksheet.output_r378||0), 0.001); end
  def test_output_w378; assert_in_delta(0, (worksheet.output_w378||0), 0.001); end
  def test_output_ab378; assert_in_delta(0, (worksheet.output_ab378||0), 0.001); end
  def test_output_ac378; assert_in_delta(0, (worksheet.output_ac378||0), 0.001); end
  def test_output_ad378; assert_in_delta(0, (worksheet.output_ad378||0), 0.001); end
  def test_output_ae378; assert_in_delta(0, (worksheet.output_ae378||0), 0.001); end
  def test_output_af378; assert_in_delta(0, (worksheet.output_af378||0), 0.001); end
  def test_output_ag378; assert_in_delta(0, (worksheet.output_ag378||0), 0.001); end
  def test_output_ah378; assert_in_delta(0, (worksheet.output_ah378||0), 0.001); end
  def test_output_ai378; assert_in_delta(0, (worksheet.output_ai378||0), 0.001); end
  def test_output_aj378; assert_in_delta(0, (worksheet.output_aj378||0), 0.001); end
  def test_output_ak378; assert_in_delta(0, (worksheet.output_ak378||0), 0.001); end
  def test_output_am378; assert_equal("", worksheet.output_am378); end
  def test_output_an378; assert_equal("", worksheet.output_an378); end
  def test_output_ao378; assert_equal("", worksheet.output_ao378); end
  def test_output_aq378; assert_equal("XV", worksheet.output_aq378); end
  def test_output_ar378; assert_equal("Fossil fuel production", worksheet.output_ar378); end
  def test_output_av378; assert_in_delta(0, (worksheet.output_av378||0), 0.001); end
  def test_output_ax378; assert_in_delta(0, (worksheet.output_ax378||0), 0.001); end
  def test_output_ay378; assert_in_delta(0, (worksheet.output_ay378||0), 0.001); end
  def test_output_ba378; assert_in_delta(0, (worksheet.output_ba378||0), 0.001); end
  def test_output_bb378; assert_in_delta(0, (worksheet.output_bb378||0), 0.001); end
  def test_output_bd378; assert_equal(:div0, worksheet.output_bd378); end
  def test_output_e379; assert_equal("Total net of biomass excl. Int'l aviation", worksheet.output_e379); end
  def test_output_h379; assert_in_epsilon(143.09267360164765, worksheet.output_h379, 0.001); end
  def test_output_i379; assert_in_delta(0, (worksheet.output_i379||0), 0.001); end
  def test_output_j379; assert_in_delta(0, (worksheet.output_j379||0), 0.001); end
  def test_output_k379; assert_in_delta(0, (worksheet.output_k379||0), 0.001); end
  def test_output_l379; assert_in_delta(0, (worksheet.output_l379||0), 0.001); end
  def test_output_m379; assert_in_epsilon(150.4231854346216, worksheet.output_m379, 0.001); end
  def test_output_n379; assert_in_delta(0, (worksheet.output_n379||0), 0.001); end
  def test_output_o379; assert_in_delta(0, (worksheet.output_o379||0), 0.001); end
  def test_output_p379; assert_in_delta(0, (worksheet.output_p379||0), 0.001); end
  def test_output_q379; assert_in_delta(0, (worksheet.output_q379||0), 0.001); end
  def test_output_r379; assert_in_epsilon(146.06030915435187, worksheet.output_r379, 0.001); end
  def test_output_s379; assert_in_delta(0, (worksheet.output_s379||0), 0.001); end
  def test_output_t379; assert_in_delta(0, (worksheet.output_t379||0), 0.001); end
  def test_output_u379; assert_in_delta(0, (worksheet.output_u379||0), 0.001); end
  def test_output_v379; assert_in_delta(0, (worksheet.output_v379||0), 0.001); end
  def test_output_w379; assert_in_epsilon(143.5334664279622, worksheet.output_w379, 0.001); end
  def test_output_x379; assert_in_delta(0, (worksheet.output_x379||0), 0.001); end
  def test_output_y379; assert_in_delta(0, (worksheet.output_y379||0), 0.001); end
  def test_output_z379; assert_in_delta(0, (worksheet.output_z379||0), 0.001); end
  def test_output_aa379; assert_in_delta(0, (worksheet.output_aa379||0), 0.001); end
  def test_output_ab379; assert_in_epsilon(132.39507452499643, worksheet.output_ab379, 0.001); end
  def test_output_ad363; assert_in_epsilon(9.79640138271382, worksheet.output_ad363, 0.001); end
  def test_output_ad354; assert_in_epsilon(1.9837767371236232, worksheet.output_ad354, 0.001); end
  def test_output_ad370; assert_in_epsilon(20.66890003346775, worksheet.output_ad370, 0.001); end
  def test_output_ad372; assert_in_epsilon(43.16161673509288, worksheet.output_ad372, 0.001); end
  def test_output_ad373; assert_in_epsilon(21.410718848221983, worksheet.output_ad373, 0.001); end
  def test_output_ad379; assert_in_epsilon(108.0983727598418, worksheet.output_ad379, 0.001); end
  def test_output_ae363; assert_in_epsilon(10.678044156303844, worksheet.output_ae363, 0.001); end
  def test_output_ae354; assert_in_epsilon(1.2529313371582012, worksheet.output_ae354, 0.001); end
  def test_output_ae370; assert_in_epsilon(18.94163825968514, worksheet.output_ae370, 0.001); end
  def test_output_ae372; assert_in_epsilon(39.17332611582593, worksheet.output_ae372, 0.001); end
  def test_output_ae373; assert_in_epsilon(17.94176515647757, worksheet.output_ae373, 0.001); end
  def test_output_ae379; assert_in_epsilon(99.24331048340109, worksheet.output_ae379, 0.001); end
  def test_output_af363; assert_in_epsilon(16.64715622421413, worksheet.output_af363, 0.001); end
  def test_output_af354; assert_in_epsilon(1.3866697054750796, worksheet.output_af354, 0.001); end
  def test_output_af370; assert_in_epsilon(16.40639569188893, worksheet.output_af370, 0.001); end
  def test_output_af372; assert_in_epsilon(35.437625860186174, worksheet.output_af372, 0.001); end
  def test_output_af373; assert_in_epsilon(15.24017608230225, worksheet.output_af373, 0.001); end
  def test_output_af379; assert_in_epsilon(95.86461666594964, worksheet.output_af379, 0.001); end
  def test_output_ag363; assert_in_epsilon(13.258267255815452, worksheet.output_ag363, 0.001); end
  def test_output_ag354; assert_in_epsilon(1.5138136854994553, worksheet.output_ag354, 0.001); end
  def test_output_ag370; assert_in_epsilon(13.662754452157003, worksheet.output_ag370, 0.001); end
  def test_output_ag372; assert_in_epsilon(26.327511068384737, worksheet.output_ag372, 0.001); end
  def test_output_ag373; assert_in_epsilon(12.349706097282098, worksheet.output_ag373, 0.001); end
  def test_output_ag379; assert_in_epsilon(77.44178022318012, worksheet.output_ag379, 0.001); end
  def test_output_ah363; assert_in_epsilon(10.306853100658273, worksheet.output_ah363, 0.001); end
  def test_output_ah354; assert_in_epsilon(1.49066881152085, worksheet.output_ah354, 0.001); end
  def test_output_ah370; assert_in_epsilon(11.28254658806329, worksheet.output_ah370, 0.001); end
  def test_output_ah372; assert_in_epsilon(22.03654360378657, worksheet.output_ah372, 0.001); end
  def test_output_ah373; assert_in_epsilon(9.799138467352002, worksheet.output_ah373, 0.001); end
  def test_output_ah379; assert_in_epsilon(65.12953478716648, worksheet.output_ah379, 0.001); end
  def test_output_ai363; assert_in_epsilon(7.886934621979325, worksheet.output_ai363, 0.001); end
  def test_output_ai354; assert_in_epsilon(1.5008799001208004, worksheet.output_ai354, 0.001); end
  def test_output_ai370; assert_in_epsilon(9.072687163383293, worksheet.output_ai370, 0.001); end
  def test_output_ai372; assert_in_epsilon(18.346855764029563, worksheet.output_ai372, 0.001); end
  def test_output_ai373; assert_in_epsilon(7.80873099297797, worksheet.output_ai373, 0.001); end
  def test_output_ai379; assert_in_epsilon(54.665068655700594, worksheet.output_ai379, 0.001); end
  def test_output_aj363; assert_in_epsilon(4.370429166846547, worksheet.output_aj363, 0.001); end
  def test_output_aj354; assert_in_epsilon(1.0868084150293917, worksheet.output_aj354, 0.001); end
  def test_output_aj370; assert_in_epsilon(7.446641899882115, worksheet.output_aj370, 0.001); end
  def test_output_aj372; assert_in_epsilon(15.126601851653767, worksheet.output_aj372, 0.001); end
  def test_output_aj373; assert_in_epsilon(5.990770210241128, worksheet.output_aj373, 0.001); end
  def test_output_aj379; assert_in_epsilon(44.374012858782415, worksheet.output_aj379, 0.001); end
  def test_output_am379; assert_in_delta(-0.034425014210932026, worksheet.output_am379, 0.001); end
  def test_output_an379; assert_in_delta(-0.7636586426299384, worksheet.output_an379, 0.001); end
  def test_output_ao379; assert_in_delta(-0.7813275073086074, worksheet.output_ao379, 0.001); end
  def test_output_aq379; assert_equal("XVI", worksheet.output_aq379); end
  def test_output_ar379; assert_equal("Transfers", worksheet.output_ar379); end
  def test_output_av379; assert_in_delta(0, (worksheet.output_av379||0), 0.001); end
  def test_output_ax379; assert_in_delta(0, (worksheet.output_ax379||0), 0.001); end
  def test_output_ay379; assert_in_delta(0, (worksheet.output_ay379||0), 0.001); end
  def test_output_ba379; assert_in_delta(0, (worksheet.output_ba379||0), 0.001); end
  def test_output_bb379; assert_in_delta(0, (worksheet.output_bb379||0), 0.001); end
  def test_output_bd379; assert_equal(:div0, worksheet.output_bd379); end
  def test_output_b380; assert_equal("REF", worksheet.output_b380); end
  def test_output_e380; assert_equal("Reference scenario", worksheet.output_e380); end
  def test_output_f380; assert_equal("Mt CO2e", worksheet.output_f380); end
  def test_output_g380; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g380); end
  def test_output_i380; assert_in_delta(0, (worksheet.output_i380||0), 0.001); end
  def test_output_j380; assert_in_delta(0, (worksheet.output_j380||0), 0.001); end
  def test_output_k380; assert_in_delta(0, (worksheet.output_k380||0), 0.001); end
  def test_output_l380; assert_in_delta(0, (worksheet.output_l380||0), 0.001); end
  def test_output_m380; assert_in_epsilon(144.34915672233566, worksheet.output_m380, 0.001); end
  def test_output_n380; assert_in_delta(0, (worksheet.output_n380||0), 0.001); end
  def test_output_o380; assert_in_delta(0, (worksheet.output_o380||0), 0.001); end
  def test_output_p380; assert_in_delta(0, (worksheet.output_p380||0), 0.001); end
  def test_output_q380; assert_in_delta(0, (worksheet.output_q380||0), 0.001); end
  def test_output_r380; assert_in_epsilon(140.16245166007295, worksheet.output_r380, 0.001); end
  def test_output_s380; assert_in_delta(0, (worksheet.output_s380||0), 0.001); end
  def test_output_t380; assert_in_delta(0, (worksheet.output_t380||0), 0.001); end
  def test_output_u380; assert_in_delta(0, (worksheet.output_u380||0), 0.001); end
  def test_output_v380; assert_in_delta(0, (worksheet.output_v380||0), 0.001); end
  def test_output_w380; assert_in_epsilon(137.73764184321897, worksheet.output_w380, 0.001); end
  def test_output_ab380; assert_in_epsilon(127.0490137983435, worksheet.output_ab380, 0.001); end
  def test_output_ac380; assert_in_epsilon(123.05922787051014, worksheet.output_ac380, 0.001); end
  def test_output_ad380; assert_in_epsilon(115.80572626782956, worksheet.output_ad380, 0.001); end
  def test_output_ae380; assert_in_epsilon(117.16450903080455, worksheet.output_ae380, 0.001); end
  def test_output_af380; assert_in_epsilon(123.70806528955326, worksheet.output_af380, 0.001); end
  def test_output_ag380; assert_in_epsilon(122.92932228726765, worksheet.output_ag380, 0.001); end
  def test_output_ah380; assert_in_epsilon(121.95887844234089, worksheet.output_ah380, 0.001); end
  def test_output_ai380; assert_in_epsilon(122.58302452754658, worksheet.output_ai380, 0.001); end
  def test_output_aj380; assert_in_epsilon(123.04185829633691, worksheet.output_aj380, 0.001); end
  def test_output_ak380; assert_in_epsilon(123.6222975291326, worksheet.output_ak380, 0.001); end
  def test_output_aq380; assert_equal("XVII", worksheet.output_aq380); end
  def test_output_ar380; assert_equal("District heating", worksheet.output_ar380); end
  def test_output_av380; assert_in_delta(0, (worksheet.output_av380||0), 0.001); end
  def test_output_ax380; assert_in_delta(0, (worksheet.output_ax380||0), 0.001); end
  def test_output_ay380; assert_in_delta(0, (worksheet.output_ay380||0), 0.001); end
  def test_output_ba380; assert_in_delta(0, (worksheet.output_ba380||0), 0.001); end
  def test_output_bb380; assert_in_delta(0, (worksheet.output_bb380||0), 0.001); end
  def test_output_bd380; assert_equal(:div0, worksheet.output_bd380); end
  def test_output_r381; assert_equal("adjustment factor including buildings", worksheet.output_r381); end
  def test_output_ac381; assert_in_delta(0.9596203956541934, worksheet.output_ac381, 0.001); end
  def test_output_ar381; assert_equal("Total net biomass excluding int'l aviation", worksheet.output_ar381); end
  def test_output_av381; assert_in_epsilon(54.70513994146914, worksheet.output_av381, 0.001); end
  def test_output_aw381; assert_in_delta(1, worksheet.output_aw381, 0.001); end
  def test_output_ax381; assert_in_delta(1, worksheet.output_ax381, 0.001); end
  def test_output_ay381; assert_in_epsilon(40.57985708761564, worksheet.output_ay381, 0.001); end
  def test_output_ba381; assert_in_delta(1, worksheet.output_ba381, 0.001); end
  def test_output_bb381; assert_in_epsilon(8.403348509729359, worksheet.output_bb381, 0.001); end
  def test_output_bd381; assert_in_delta(-0.7929182330143313, worksheet.output_bd381, 0.001); end
  def test_output_r382; assert_equal("adjustment factor excluding buildings ", worksheet.output_r382); end
  def test_output_b383; assert_equal("IPCC Sectors Emissions", worksheet.output_b383); end
  def test_output_h383; assert_in_delta(0, (worksheet.output_h383||0), 0.001); end
  def test_output_m383; assert_in_delta(0, (worksheet.output_m383||0), 0.001); end
  def test_output_r383; assert_in_delta(0, (worksheet.output_r383||0), 0.001); end
  def test_output_w383; assert_in_delta(0, (worksheet.output_w383||0), 0.001); end
  def test_output_ab383; assert_in_delta(0, (worksheet.output_ab383||0), 0.001); end
  def test_output_am383; assert_equal("", worksheet.output_am383); end
  def test_output_an383; assert_equal("", worksheet.output_an383); end
  def test_output_ao383; assert_equal("", worksheet.output_ao383); end
  def test_output_c384; assert_equal("1A", worksheet.output_c384); end
  def test_output_e384; assert_equal("Fuel Combustion", worksheet.output_e384); end
  def test_output_f384; assert_equal("Mt CO2e", worksheet.output_f384); end
  def test_output_g384; assert_equal("All in CRF NIR (see NIR data pack for how the data is extracted)", worksheet.output_g384); end
  def test_output_h384; assert_in_epsilon(111.1504979340617, worksheet.output_h384, 0.001); end
  def test_output_m384; assert_in_epsilon(115.52208987103579, worksheet.output_m384, 0.001); end
  def test_output_r384; assert_in_epsilon(116.19584271106409, worksheet.output_r384, 0.001); end
  def test_output_w384; assert_in_epsilon(115.5978095289216, worksheet.output_w384, 0.001); end
  def test_output_ab384; assert_in_epsilon(107.06076842136285, worksheet.output_ab384, 0.001); end
  def test_output_am384; assert_in_delta(-0.019475505713194008, worksheet.output_am384, 0.001); end
  def test_output_an384; assert_in_delta(-0.5446578157237667, worksheet.output_an384, 0.001); end
  def test_output_ar384; assert_in_epsilon(1990, worksheet.output_ar384, 0.001); end
  def test_output_as384; assert_in_epsilon(2010, worksheet.output_as384, 0.001); end
  def test_output_at384; assert_in_epsilon(2015, worksheet.output_at384, 0.001); end
  def test_output_au384; assert_in_epsilon(2020, worksheet.output_au384, 0.001); end
  def test_output_av384; assert_in_epsilon(2025, worksheet.output_av384, 0.001); end
  def test_output_aw384; assert_in_epsilon(2030, worksheet.output_aw384, 0.001); end
  def test_output_ax384; assert_in_epsilon(2035, worksheet.output_ax384, 0.001); end
  def test_output_ay384; assert_in_epsilon(2040, worksheet.output_ay384, 0.001); end
  def test_output_az384; assert_in_epsilon(2045, worksheet.output_az384, 0.001); end
  def test_output_ba384; assert_in_epsilon(2050, worksheet.output_ba384, 0.001); end
  def test_output_bb384; assert_equal("% to 2010", worksheet.output_bb384); end
  def test_output_bc384; assert_equal("% to 1990", worksheet.output_bc384); end
  def test_output_c385; assert_equal("1A", worksheet.output_c385); end
  def test_output_d385; assert_equal("E", worksheet.output_d385); end
  def test_output_e385; assert_equal("Fuel Combustion Energy (-petroleum refining)", worksheet.output_e385); end
  def test_output_f385; assert_equal("Mt CO2e", worksheet.output_f385); end
  def test_output_g385; assert_equal("Energy - Refining (incl emissions from biomass)", worksheet.output_g385); end
  def test_output_h385; assert_in_epsilon(25.6221067252624, worksheet.output_h385, 0.001); end
  def test_output_m385; assert_in_epsilon(25.2708918337287, worksheet.output_m385, 0.001); end
  def test_output_r385; assert_in_epsilon(23.8022579669393, worksheet.output_r385, 0.001); end
  def test_output_w385; assert_in_epsilon(25.0471976894731, worksheet.output_w385, 0.001); end
  def test_output_ab385; assert_in_epsilon(21.6536478159777, worksheet.output_ab385, 0.001); end
  def test_output_am385; assert_in_delta(-0.011826107269627517, worksheet.output_am385, 0.001); end
  def test_output_an385; assert_in_delta(-0.3786518196882901, worksheet.output_an385, 0.001); end
  def test_output_aq385; assert_equal("Total", worksheet.output_aq385); end
  def test_output_ar385; assert_in_epsilon(99.48171309048487, worksheet.output_ar385, 0.001); end
  def test_output_as385; assert_in_epsilon(97.27761846916742, worksheet.output_as385, 0.001); end
  def test_output_at385; assert_in_epsilon(85.29569008883422, worksheet.output_at385, 0.001); end
  def test_output_au385; assert_in_epsilon(76.10682117849876, worksheet.output_au385, 0.001); end
  def test_output_av385; assert_in_epsilon(67.12817065717556, worksheet.output_av385, 0.001); end
  def test_output_aw385; assert_in_epsilon(52.37727429707311, worksheet.output_aw385, 0.001); end
  def test_output_ax385; assert_in_epsilon(43.14808883728129, worksheet.output_ax385, 0.001); end
  def test_output_ay385; assert_in_epsilon(35.250179335593806, worksheet.output_ay385, 0.001); end
  def test_output_az385; assert_in_epsilon(28.57736770261645, worksheet.output_az385, 0.001); end
  def test_output_ba385; assert_in_epsilon(19.859796982721168, worksheet.output_ba385, 0.001); end
  def test_output_bb385; assert_in_delta(-0.7636586426299384, worksheet.output_bb385, 0.001); end
  def test_output_bc385; assert_in_delta(0.7813275073086074, worksheet.output_bc385, 0.001); end
  def test_output_c386; assert_equal("X3", worksheet.output_c386); end
  def test_output_d386; assert_equal("E", worksheet.output_d386); end
  def test_output_e386; assert_equal("Including CCS", worksheet.output_e386); end
  def test_output_ac385; assert_in_epsilon(26.49882423338907, worksheet.output_ac385, 0.001); end
  def test_output_ac386; assert_in_epsilon(26.49882423338907, worksheet.output_ac386, 0.001); end
  def test_output_ad385; assert_in_epsilon(17.65690695319256, worksheet.output_ad385, 0.001); end
  def test_output_ad386; assert_in_epsilon(17.65690695319256, worksheet.output_ad386, 0.001); end
  def test_output_ae385; assert_in_epsilon(20.105890023682743, worksheet.output_ae385, 0.001); end
  def test_output_ae386; assert_in_epsilon(20.105890023682743, worksheet.output_ae386, 0.001); end
  def test_output_af385; assert_in_epsilon(27.427454661706157, worksheet.output_af385, 0.001); end
  def test_output_af386; assert_in_epsilon(27.427454661706157, worksheet.output_af386, 0.001); end
  def test_output_ag385; assert_in_epsilon(25.23614623745111, worksheet.output_ag385, 0.001); end
  def test_output_ag386; assert_in_epsilon(25.23614623745111, worksheet.output_ag386, 0.001); end
  def test_output_ah385; assert_in_epsilon(23.417081643154837, worksheet.output_ah385, 0.001); end
  def test_output_ah386; assert_in_epsilon(23.417081643154837, worksheet.output_ah386, 0.001); end
  def test_output_ai385; assert_in_epsilon(22.08137737440668, worksheet.output_ai385, 0.001); end
  def test_output_ai386; assert_in_epsilon(22.08137737440668, worksheet.output_ai386, 0.001); end
  def test_output_aj385; assert_in_epsilon(19.659189875181415, worksheet.output_aj385, 0.001); end
  def test_output_aj386; assert_in_epsilon(19.659189875181415, worksheet.output_aj386, 0.001); end
  def test_output_ak385; assert_in_epsilon(16.46499621781614, worksheet.output_ak385, 0.001); end
  def test_output_ak386; assert_in_epsilon(16.46499621781614, worksheet.output_ak386, 0.001); end
  def test_output_am386; assert_in_delta(-0.011826107269627517, worksheet.output_am386, 0.001); end
  def test_output_an386; assert_in_delta(-0.3786518196882901, worksheet.output_an386, 0.001); end
  def test_output_c387; assert_equal("1A", worksheet.output_c387); end
  def test_output_d387; assert_equal("XI", worksheet.output_d387); end
  def test_output_e387; assert_equal("Fuel Combustion Industry and Construction (+ petroleum refining)", worksheet.output_e387); end
  def test_output_f387; assert_equal("Mt CO2e", worksheet.output_f387); end
  def test_output_g387; assert_equal("Public CHP emissions of gaz combustion still to add here", worksheet.output_g387); end
  def test_output_h387; assert_in_epsilon(37.1522, worksheet.output_h387, 0.001); end
  def test_output_m387; assert_in_epsilon(36.812356670604906, worksheet.output_m387, 0.001); end
  def test_output_r387; assert_in_epsilon(38.02177403973981, worksheet.output_r387, 0.001); end
  def test_output_w387; assert_in_epsilon(33.18409861172254, worksheet.output_w387, 0.001); end
  def test_output_ab387; assert_in_epsilon(28.4845139912342, worksheet.output_ab387, 0.001); end
  def test_output_am387; assert_in_delta(-0.015612804996547602, worksheet.output_am387, 0.001); end
  def test_output_an387; assert_in_delta(-0.467109191975837, worksheet.output_an387, 0.001); end
  def test_output_aq387; assert_equal("Agriculture, Waste & others", worksheet.output_aq387); end
  def test_output_ar387; assert_in_epsilon(17.988853785900357, worksheet.output_ar387, 0.001); end
  def test_output_as387; assert_in_epsilon(13.463808239851314, worksheet.output_as387, 0.001); end
  def test_output_at387; assert_in_epsilon(13.00628128829377, worksheet.output_at387, 0.001); end
  def test_output_au387; assert_in_epsilon(12.372184255741121, worksheet.output_au387, 0.001); end
  def test_output_av387; assert_in_epsilon(11.74206892180811, worksheet.output_av387, 0.001); end
  def test_output_aw387; assert_in_epsilon(11.170599659965362, worksheet.output_aw387, 0.001); end
  def test_output_ax387; assert_in_epsilon(10.772068290554705, worksheet.output_ax387, 0.001); end
  def test_output_ay387; assert_in_epsilon(10.418357707949136, worksheet.output_ay387, 0.001); end
  def test_output_az387; assert_in_epsilon(10.092015695627904, worksheet.output_az387, 0.001); end
  def test_output_ba387; assert_in_epsilon(9.791207687744663, worksheet.output_ba387, 0.001); end
  def test_output_bb387; assert_in_delta(-0.2727757620044067, worksheet.output_bb387, 0.001); end
  def test_output_bc387; assert_in_delta(0.45570697253545966, worksheet.output_bc387, 0.001); end
  def test_output_c388; assert_equal("X3", worksheet.output_c388); end
  def test_output_d388; assert_equal("XI", worksheet.output_d388); end
  def test_output_e388; assert_equal("Including CCS", worksheet.output_e388); end
  def test_output_ac387; assert_in_epsilon(38.06648167423138, worksheet.output_ac387, 0.001); end
  def test_output_ac388; assert_in_epsilon(38.06648167423138, worksheet.output_ac388, 0.001); end
  def test_output_ad387; assert_in_epsilon(35.732617936680015, worksheet.output_ad387, 0.001); end
  def test_output_ad388; assert_in_epsilon(35.737946161848356, worksheet.output_ad388, 0.001); end
  def test_output_ae387; assert_in_epsilon(33.13037229197913, worksheet.output_ae387, 0.001); end
  def test_output_ae388; assert_in_epsilon(33.13199282055124, worksheet.output_ae388, 0.001); end
  def test_output_af387; assert_in_epsilon(30.78096896643223, worksheet.output_af387, 0.001); end
  def test_output_af388; assert_in_epsilon(30.769908437439778, worksheet.output_af388, 0.001); end
  def test_output_ag387; assert_in_epsilon(26.719747637484396, worksheet.output_ag387, 0.001); end
  def test_output_ag388; assert_in_epsilon(22.78934086893983, worksheet.output_ag388, 0.001); end
  def test_output_ah387; assert_in_epsilon(24.855333615702833, worksheet.output_ah387, 0.001); end
  def test_output_ah388; assert_in_epsilon(19.778989878003447, worksheet.output_ah388, 0.001); end
  def test_output_ai387; assert_in_epsilon(23.211490631137767, worksheet.output_ai387, 0.001); end
  def test_output_ai388; assert_in_epsilon(17.336800004501125, worksheet.output_ai388, 0.001); end
  def test_output_aj387; assert_in_epsilon(21.68487381227183, worksheet.output_aj387, 0.001); end
  def test_output_aj388; assert_in_epsilon(15.330266516840886, worksheet.output_aj388, 0.001); end
  def test_output_ak387; assert_in_epsilon(20.285278178018153, worksheet.output_ak387, 0.001); end
  def test_output_ak388; assert_in_epsilon(10.823980659968887, worksheet.output_ak388, 0.001); end
  def test_output_am388; assert_in_delta(-0.03095017664172961, worksheet.output_am388, 0.001); end
  def test_output_an388; assert_in_delta(-0.7156558687876835, worksheet.output_an388, 0.001); end
  def test_output_aq388; assert_equal("Building", worksheet.output_aq388); end
  def test_output_ar388; assert_in_epsilon(24.90969851232879, worksheet.output_ar388, 0.001); end
  def test_output_as388; assert_in_epsilon(30.31400519970225, worksheet.output_as388, 0.001); end
  def test_output_at388; assert_in_epsilon(20.723354505519353, worksheet.output_at388, 0.001); end
  def test_output_au388; assert_in_epsilon(18.991729906195264, worksheet.output_au388, 0.001); end
  def test_output_av388; assert_in_epsilon(16.450368714687137, worksheet.output_av388, 0.001); end
  def test_output_aw388; assert_in_epsilon(13.700057131406274, worksheet.output_aw388, 0.001); end
  def test_output_ax388; assert_in_epsilon(11.31240676614272, worksheet.output_ax388, 0.001); end
  def test_output_ay388; assert_in_epsilon(9.094592578586274, worksheet.output_ay388, 0.001); end
  def test_output_az388; assert_in_epsilon(7.459995640721555, worksheet.output_az388, 0.001); end
  def test_output_ba388; assert_in_epsilon(6.04479139571479, worksheet.output_ba388, 0.001); end
  def test_output_bb388; assert_in_delta(-0.8007357634640212, worksheet.output_bb388, 0.001); end
  def test_output_bc388; assert_in_delta(0.7575042066656615, worksheet.output_bc388, 0.001); end
  def test_output_c389; assert_equal("1A", worksheet.output_c389); end
  def test_output_d389; assert_equal("XII", worksheet.output_d389); end
  def test_output_e389; assert_equal("Fuel Combustion Transport", worksheet.output_e389); end
  def test_output_f389; assert_equal("Mt CO2e", worksheet.output_f389); end
  def test_output_h389; assert_in_epsilon(20.4724552687413, worksheet.output_h389, 0.001); end
  def test_output_m389; assert_in_epsilon(22.5119304822935, worksheet.output_m389, 0.001); end
  def test_output_r389; assert_in_epsilon(24.6590970868922, worksheet.output_r389, 0.001); end
  def test_output_w389; assert_in_epsilon(26.255467159611, worksheet.output_w389, 0.001); end
  def test_output_ab389; assert_in_epsilon(24.2574527403487, worksheet.output_ab389, 0.001); end
  def test_output_am389; assert_in_delta(-0.02701316584095348, worksheet.output_am389, 0.001); end
  def test_output_an389; assert_in_delta(-0.6655905447234626, worksheet.output_an389, 0.001); end
  def test_output_h380; assert_in_epsilon(137.31464805682947, worksheet.output_h380, 0.001); end
  def test_output_ao389; assert_in_delta(-0.7721260472560935, worksheet.output_ao389, 0.001); end
  def test_output_aq389; assert_equal("Transport", worksheet.output_aq389); end
  def test_output_ar389; assert_in_epsilon(20.4724552687413, worksheet.output_ar389, 0.001); end
  def test_output_as389; assert_in_epsilon(24.2574527403487, worksheet.output_as389, 0.001); end
  def test_output_at389; assert_in_epsilon(21.410718848221983, worksheet.output_at389, 0.001); end
  def test_output_au389; assert_in_epsilon(17.94176515647757, worksheet.output_au389, 0.001); end
  def test_output_av389; assert_in_epsilon(15.24017608230225, worksheet.output_av389, 0.001); end
  def test_output_aw389; assert_in_epsilon(12.349706097282098, worksheet.output_aw389, 0.001); end
  def test_output_ax389; assert_in_epsilon(9.799138467352002, worksheet.output_ax389, 0.001); end
  def test_output_ay389; assert_in_epsilon(7.80873099297797, worksheet.output_ay389, 0.001); end
  def test_output_az389; assert_in_epsilon(5.990770210241128, worksheet.output_az389, 0.001); end
  def test_output_ba389; assert_in_epsilon(4.366310940190122, worksheet.output_ba389, 0.001); end
  def test_output_bb389; assert_in_delta(-0.8200012595334296, worksheet.output_bb389, 0.001); end
  def test_output_bc389; assert_in_delta(0.7867226532981174, worksheet.output_bc389, 0.001); end
  def test_output_c390; assert_equal("X3", worksheet.output_c390); end
  def test_output_d390; assert_equal("XII", worksheet.output_d390); end
  def test_output_e390; assert_equal("Including CCS", worksheet.output_e390); end
  def test_output_ac389; assert_in_epsilon(23.67931677381081, worksheet.output_ac389, 0.001); end
  def test_output_ac390; assert_in_epsilon(23.67931677381081, worksheet.output_ac390, 0.001); end
  def test_output_ad389; assert_in_epsilon(22.571049737147327, worksheet.output_ad389, 0.001); end
  def test_output_ad390; assert_in_epsilon(22.571049737147327, worksheet.output_ad390, 0.001); end
  def test_output_ae389; assert_in_epsilon(20.079356355777414, worksheet.output_ae389, 0.001); end
  def test_output_ae390; assert_in_epsilon(20.079356355777414, worksheet.output_ae390, 0.001); end
  def test_output_af389; assert_in_epsilon(17.61780212359829, worksheet.output_af389, 0.001); end
  def test_output_af390; assert_in_epsilon(17.61780212359829, worksheet.output_af390, 0.001); end
  def test_output_ag389; assert_in_epsilon(14.9664331841908, worksheet.output_ag389, 0.001); end
  def test_output_ag390; assert_in_epsilon(14.9664331841908, worksheet.output_ag390, 0.001); end
  def test_output_ah389; assert_in_epsilon(12.654966599873365, worksheet.output_ah389, 0.001); end
  def test_output_ah390; assert_in_epsilon(12.654966599873365, worksheet.output_ah390, 0.001); end
  def test_output_ai389; assert_in_epsilon(10.896708575812388, worksheet.output_ai389, 0.001); end
  def test_output_ai390; assert_in_epsilon(10.896708575812388, worksheet.output_ai390, 0.001); end
  def test_output_aj389; assert_in_epsilon(9.3108972433886, worksheet.output_aj389, 0.001); end
  def test_output_aj390; assert_in_epsilon(9.3108972433886, worksheet.output_aj390, 0.001); end
  def test_output_ak389; assert_in_epsilon(7.918587423650649, worksheet.output_ak389, 0.001); end
  def test_output_ak390; assert_in_epsilon(7.918587423650649, worksheet.output_ak390, 0.001); end
  def test_output_am390; assert_in_delta(-0.02701316584095348, worksheet.output_am390, 0.001); end
  def test_output_an390; assert_in_delta(-0.6655905447234626, worksheet.output_an390, 0.001); end
  def test_output_ao390; assert_in_delta(-0.07475993569336759, worksheet.output_ao390, 0.001); end
  def test_output_aq390; assert_equal("Industry", worksheet.output_aq390); end
  def test_output_ar390; assert_in_epsilon(54.09955930941479, worksheet.output_ar390, 0.001); end
  def test_output_as390; assert_in_epsilon(42.706160529116474, worksheet.output_as390, 0.001); end
  def test_output_at390; assert_in_epsilon(43.16161673509288, worksheet.output_at390, 0.001); end
  def test_output_au390; assert_in_epsilon(39.17332611582593, worksheet.output_au390, 0.001); end
  def test_output_av390; assert_in_epsilon(35.437625860186174, worksheet.output_av390, 0.001); end
  def test_output_aw390; assert_in_epsilon(26.327511068384737, worksheet.output_aw390, 0.001); end
  def test_output_ax390; assert_in_epsilon(22.03654360378657, worksheet.output_ax390, 0.001); end
  def test_output_ay390; assert_in_epsilon(18.346855764029563, worksheet.output_ay390, 0.001); end
  def test_output_az390; assert_in_epsilon(15.126601851653767, worksheet.output_az390, 0.001); end
  def test_output_ba390; assert_in_epsilon(9.448694646816257, worksheet.output_ba390, 0.001); end
  def test_output_bb390; assert_in_delta(-0.778751015550221, worksheet.output_bb390, 0.001); end
  def test_output_bc390; assert_in_delta(0.825346180866728, worksheet.output_bc390, 0.001); end
  def test_output_c391; assert_equal("1A", worksheet.output_c391); end
  def test_output_d391; assert_equal("BR", worksheet.output_d391); end
  def test_output_e391; assert_equal("Fuel combustion Building Residential", worksheet.output_e391); end
  def test_output_f391; assert_equal("Mt CO2e", worksheet.output_f391); end
  def test_output_h391; assert_in_epsilon(20.529262677925356, worksheet.output_h391, 0.001); end
  def test_output_m391; assert_in_epsilon(22.3681085149058, worksheet.output_m391, 0.001); end
  def test_output_r391; assert_in_epsilon(21.089326200227, worksheet.output_r391, 0.001); end
  def test_output_w391; assert_in_epsilon(22.1740260239385, worksheet.output_w391, 0.001); end
  def test_output_ab391; assert_in_epsilon(23.419691425965595, worksheet.output_ab391, 0.001); end
  def test_output_am391; assert_in_delta(-0.028499136468273734, worksheet.output_am391, 0.001); end
  def test_output_an391; assert_in_delta(-0.6854225131247313, worksheet.output_an391, 0.001); end
  def test_output_aq391; assert_equal("Energy", worksheet.output_aq391); end
  def test_output_ar391; assert_in_epsilon(25.6221067252624, worksheet.output_ar391, 0.001); end
  def test_output_as391; assert_in_epsilon(21.6536478159777, worksheet.output_as391, 0.001); end
  def test_output_at391; assert_in_epsilon(9.79640138271382, worksheet.output_at391, 0.001); end
  def test_output_au391; assert_in_epsilon(10.738845125273896, worksheet.output_au391, 0.001); end
  def test_output_av391; assert_in_epsilon(16.94913571281055, worksheet.output_av391, 0.001); end
  def test_output_aw391; assert_in_epsilon(13.835988759167794, worksheet.output_aw391, 0.001); end
  def test_output_ax391; assert_in_epsilon(11.147940294137873, worksheet.output_ax391, 0.001); end
  def test_output_ay391; assert_in_epsilon(8.94151175403149, worksheet.output_ay391, 0.001); end
  def test_output_az391; assert_in_epsilon(5.669088342608203, worksheet.output_az391, 0.001); end
  def test_output_ba391; assert_in_epsilon(1.6394269518822795, worksheet.output_ba391, 0.001); end
  def test_output_bb391; assert_in_delta(-0.98, worksheet.output_bb391, 0.001); end
  def test_output_bc391; assert_in_delta(0.98, worksheet.output_bc391, 0.001); end
  def test_output_c392; assert_equal("X3", worksheet.output_c392); end
  def test_output_d392; assert_equal("BR", worksheet.output_d392); end
  def test_output_e392; assert_equal("Including CCS", worksheet.output_e392); end
  def test_output_ac391; assert_in_epsilon(17.916009493182973, worksheet.output_ac391, 0.001); end
  def test_output_ac392; assert_in_epsilon(17.916009493182973, worksheet.output_ac392, 0.001); end
  def test_output_ad391; assert_in_epsilon(16.834191000536116, worksheet.output_ad391, 0.001); end
  def test_output_ad392; assert_in_epsilon(16.834191000536116, worksheet.output_ad392, 0.001); end
  def test_output_ae391; assert_in_epsilon(15.305446660152377, worksheet.output_ae391, 0.001); end
  def test_output_ae392; assert_in_epsilon(15.305446660152377, worksheet.output_ae392, 0.001); end
  def test_output_af391; assert_in_epsilon(13.788165458858426, worksheet.output_af391, 0.001); end
  def test_output_af392; assert_in_epsilon(13.788165458858426, worksheet.output_af392, 0.001); end
  def test_output_ag391; assert_in_epsilon(11.93817608584774, worksheet.output_ag391, 0.001); end
  def test_output_ag392; assert_in_epsilon(11.93817608584774, worksheet.output_ag392, 0.001); end
  def test_output_ah391; assert_in_epsilon(10.211884057825348, worksheet.output_ah391, 0.001); end
  def test_output_ah392; assert_in_epsilon(10.211884057825348, worksheet.output_ah392, 0.001); end
  def test_output_ai391; assert_in_epsilon(8.59171525807458, worksheet.output_ai391, 0.001); end
  def test_output_ai392; assert_in_epsilon(8.59171525807458, worksheet.output_ai392, 0.001); end
  def test_output_aj391; assert_in_epsilon(7.047088413464676, worksheet.output_aj391, 0.001); end
  def test_output_aj392; assert_in_epsilon(7.047088413464676, worksheet.output_aj392, 0.001); end
  def test_output_ak391; assert_in_epsilon(5.635973241198955, worksheet.output_ak391, 0.001); end
  def test_output_ak392; assert_in_epsilon(5.635973241198955, worksheet.output_ak392, 0.001); end
  def test_output_am392; assert_in_delta(-0.028499136468273734, worksheet.output_am392, 0.001); end
  def test_output_an392; assert_in_delta(-0.6854225131247313, worksheet.output_an392, 0.001); end
  def test_output_c393; assert_equal("1A", worksheet.output_c393); end
  def test_output_d393; assert_equal("BC", worksheet.output_d393); end
  def test_output_e393; assert_equal("Fuel combustion Building Commercial", worksheet.output_e393); end
  def test_output_f393; assert_equal("Mt CO2e", worksheet.output_f393); end
  def test_output_h393; assert_in_epsilon(4.3804358344034355, worksheet.output_h393, 0.001); end
  def test_output_m393; assert_in_epsilon(5.654636373164421, worksheet.output_m393, 0.001); end
  def test_output_r393; assert_in_epsilon(6.105361410205841, worksheet.output_r393, 0.001); end
  def test_output_w393; assert_in_epsilon(6.380639385391856, worksheet.output_w393, 0.001); end
  def test_output_ab393; assert_in_epsilon(6.8943137737366555, worksheet.output_ab393, 0.001); end
  def test_output_am393; assert_in_delta(-0.048566110869300405, worksheet.output_am393, 0.001); end
  def test_output_an393; assert_in_delta(-0.8634962256316137, worksheet.output_an393, 0.001); end
  def test_output_aq393; assert_equal("Energy demand (wrt 2010 (1990))", worksheet.output_aq393); end
  def test_output_ar393; assert_in_epsilon(328.53220102671514, worksheet.output_ar393, 0.001); end
  def test_output_as393; assert_in_epsilon(419.7287442489851, worksheet.output_as393, 0.001); end
  def test_output_at393; assert_in_epsilon(408.4373158145511, worksheet.output_at393, 0.001); end
  def test_output_au393; assert_in_epsilon(391.29348706135636, worksheet.output_au393, 0.001); end
  def test_output_av393; assert_in_epsilon(374.0543743138278, worksheet.output_av393, 0.001); end
  def test_output_aw393; assert_in_epsilon(344.28273844133594, worksheet.output_aw393, 0.001); end
  def test_output_ax393; assert_in_epsilon(326.7189929878058, worksheet.output_ax393, 0.001); end
  def test_output_ay393; assert_in_epsilon(312.6610105673934, worksheet.output_ay393, 0.001); end
  def test_output_az393; assert_in_epsilon(299.92954550842967, worksheet.output_az393, 0.001); end
  def test_output_ba393; assert_in_epsilon(289.72964808010494, worksheet.output_ba393, 0.001); end
  def test_output_bb393; assert_in_delta(-0.30972169037764086, worksheet.output_bb393, 0.001); end
  def test_output_bc393; assert_in_delta(0.11810882715711302, worksheet.output_bc393, 0.001); end
  def test_output_c394; assert_equal("X3", worksheet.output_c394); end
  def test_output_d394; assert_equal("BC", worksheet.output_d394); end
  def test_output_e394; assert_equal("Including CCS", worksheet.output_e394); end
  def test_output_ac393; assert_in_epsilon(6.164316660333802, worksheet.output_ac393, 0.001); end
  def test_output_ac394; assert_in_epsilon(6.164316660333802, worksheet.output_ac394, 0.001); end
  def test_output_ad393; assert_in_epsilon(5.872940242106859, worksheet.output_ad393, 0.001); end
  def test_output_ad394; assert_in_epsilon(5.872940242106859, worksheet.output_ad394, 0.001); end
  def test_output_ae393; assert_in_epsilon(4.939214583201087, worksheet.output_ae393, 0.001); end
  def test_output_ae394; assert_in_epsilon(4.939214583201087, worksheet.output_ae394, 0.001); end
  def test_output_af393; assert_in_epsilon(4.04887296130379, worksheet.output_af393, 0.001); end
  def test_output_af394; assert_in_epsilon(4.04887296130379, worksheet.output_af394, 0.001); end
  def test_output_ag393; assert_in_epsilon(3.275694731057988, worksheet.output_ag393, 0.001); end
  def test_output_ag394; assert_in_epsilon(3.275694731057988, worksheet.output_ag394, 0.001); end
  def test_output_ah393; assert_in_epsilon(2.5911915198382216, worksheet.output_ah393, 0.001); end
  def test_output_ah394; assert_in_epsilon(2.5911915198382216, worksheet.output_ah394, 0.001); end
  def test_output_ai393; assert_in_epsilon(2.0037572206324943, worksheet.output_ai393, 0.001); end
  def test_output_ai394; assert_in_epsilon(2.0037572206324943, worksheet.output_ai394, 0.001); end
  def test_output_aj393; assert_in_epsilon(1.4997156422862707, worksheet.output_aj393, 0.001); end
  def test_output_aj394; assert_in_epsilon(1.4997156422862707, worksheet.output_aj394, 0.001); end
  def test_output_ak393; assert_in_delta(0.8414524905374898, worksheet.output_ak393, 0.001); end
  def test_output_ak394; assert_in_delta(0.8414524905374898, worksheet.output_ak394, 0.001); end
  def test_output_am394; assert_in_delta(-0.048566110869300405, worksheet.output_am394, 0.001); end
  def test_output_an394; assert_in_delta(-0.8634962256316137, worksheet.output_an394, 0.001); end
  def test_output_aq394; assert_equal("Biomass use ", worksheet.output_aq394); end
  def test_output_ar394; assert_in_epsilon(5.813220292196417, worksheet.output_ar394, 0.001); end
  def test_output_as394; assert_in_epsilon(39.17302801717402, worksheet.output_as394, 0.001); end
  def test_output_at394; assert_in_epsilon(45.94885646545613, worksheet.output_at394, 0.001); end
  def test_output_au394; assert_in_epsilon(56.3834319661047, worksheet.output_au394, 0.001); end
  def test_output_av394; assert_in_epsilon(63.37188705406878, worksheet.output_av394, 0.001); end
  def test_output_aw394; assert_in_epsilon(70.31936886976811, worksheet.output_aw394, 0.001); end
  def test_output_ax394; assert_in_epsilon(77.23197661063465, worksheet.output_ax394, 0.001); end
  def test_output_ay394; assert_in_epsilon(84.10601408901113, worksheet.output_ay394, 0.001); end
  def test_output_az394; assert_in_epsilon(89.43237764063457, worksheet.output_az394, 0.001); end
  def test_output_ba394; assert_in_epsilon(93.81889240794595, worksheet.output_ba394, 0.001); end
  def test_output_bb394; assert_in_epsilon(93.81889240794595, worksheet.output_bb394, 0.001); end
  def test_output_c395; assert_equal("1A", worksheet.output_c395); end
  def test_output_e395; assert_equal("Fuel combustion Agriculture", worksheet.output_e395); end
  def test_output_h395; assert_in_epsilon(2.806, worksheet.output_h395, 0.001); end
  def test_output_m395; assert_in_epsilon(2.798, worksheet.output_m395, 0.001); end
  def test_output_r395; assert_in_epsilon(2.424, worksheet.output_r395, 0.001); end
  def test_output_w395; assert_in_epsilon(2.4673, worksheet.output_w395, 0.001); end
  def test_output_ab395; assert_in_epsilon(2.287, worksheet.output_ab395, 0.001); end
  def test_output_ac395; assert_in_epsilon(2.533402852827276, worksheet.output_ac395, 0.001); end
  def test_output_ad395; assert_in_epsilon(2.523879817289343, worksheet.output_ad395, 0.001); end
  def test_output_ae395; assert_in_epsilon(2.5144820224900464, worksheet.output_ae395, 0.001); end
  def test_output_af395; assert_in_epsilon(2.5052078213450533, worksheet.output_af395, 0.001); end
  def test_output_ag395; assert_in_epsilon(2.49605558843141, worksheet.output_ag395, 0.001); end
  def test_output_ah395; assert_in_epsilon(2.4490608375991756, worksheet.output_ah395, 0.001); end
  def test_output_ai395; assert_in_epsilon(2.419599718812456, worksheet.output_ai395, 0.001); end
  def test_output_aj395; assert_in_epsilon(2.3914952731990198, worksheet.output_aj395, 0.001); end
  def test_output_ak395; assert_in_epsilon(2.364685026481757, worksheet.output_ak395, 0.001); end
  def test_output_am395; assert_in_delta(-0.001721480756028626, worksheet.output_am395, 0.001); end
  def test_output_an395; assert_in_delta(-0.06659731442128525, worksheet.output_an395, 0.001); end
  def test_output_aq395; assert_equal("CCS", worksheet.output_aq395); end
  def test_output_ar395; assert_in_delta(0, (worksheet.output_ar395||0), 0.001); end
  def test_output_ac405; assert_in_delta(0, (worksheet.output_ac405||0), 0.001); end
  def test_output_as395; assert_in_delta(0, (worksheet.output_as395||0), 0.001); end
  def test_output_ad405; assert_in_delta(0.00532822516834236, worksheet.output_ad405, 0.001); end
  def test_output_at395; assert_in_delta(0.00532822516834236, worksheet.output_at395, 0.001); end
  def test_output_ae405; assert_in_delta(0.0016205285721146434, worksheet.output_ae405, 0.001); end
  def test_output_au395; assert_in_delta(0.0016205285721146434, worksheet.output_au395, 0.001); end
  def test_output_af405; assert_in_delta(-0.011060528992453356, worksheet.output_af405, 0.001); end
  def test_output_av395; assert_in_delta(-0.011060528992453356, worksheet.output_av395, 0.001); end
  def test_output_ag405; assert_in_epsilon(-3.9304067685445636, worksheet.output_ag405, 0.001); end
  def test_output_aw395; assert_in_epsilon(-3.9304067685445636, worksheet.output_aw395, 0.001); end
  def test_output_ah405; assert_in_epsilon(-5.0763437376993865, worksheet.output_ah405, 0.001); end
  def test_output_ax395; assert_in_epsilon(-5.0763437376993865, worksheet.output_ax395, 0.001); end
  def test_output_ai405; assert_in_epsilon(-5.874690626636641, worksheet.output_ai405, 0.001); end
  def test_output_ay395; assert_in_epsilon(-5.874690626636641, worksheet.output_ay395, 0.001); end
  def test_output_aj405; assert_in_epsilon(-6.354607295430945, worksheet.output_aj405, 0.001); end
  def test_output_az395; assert_in_epsilon(-6.354607295430945, worksheet.output_az395, 0.001); end
  def test_output_ak405; assert_in_epsilon(-9.461297518049266, worksheet.output_ak405, 0.001); end
  def test_output_ba395; assert_in_epsilon(-9.461297518049266, worksheet.output_ba395, 0.001); end
  def test_output_bb395; assert_in_epsilon(-9.461297518049266, worksheet.output_bb395, 0.001); end
  def test_output_c396; assert_equal("X3", worksheet.output_c396); end
  def test_output_e396; assert_equal("Including CCS", worksheet.output_e396); end
  def test_output_am396; assert_equal("", worksheet.output_am396); end
  def test_output_an396; assert_equal("", worksheet.output_an396); end
  def test_output_aq396; assert_equal("Electricity", worksheet.output_aq396); end
  def test_output_e397; assert_equal("Fuel Combustion Others", worksheet.output_e397); end
  def test_output_f397; assert_equal("Mt CO2e", worksheet.output_f397); end
  def test_output_h397; assert_in_delta(0.162957381997088, worksheet.output_h397, 0.001); end
  def test_output_m397; assert_in_delta(0.10488090628675, worksheet.output_m397, 0.001); end
  def test_output_r397; assert_in_delta(0.0936700427184255, worksheet.output_r397, 0.001); end
  def test_output_w397; assert_in_delta(0.0932368128021564, worksheet.output_w397, 0.001); end
  def test_output_ab397; assert_in_delta(0.0598968715282414, worksheet.output_ab397, 0.001); end
  def test_output_ac384; assert_in_epsilon(112.32494883494805, worksheet.output_ac384, 0.001); end
  def test_output_ac397; assert_in_delta(0, (worksheet.output_ac397||0), 0.001); end
  def test_output_ad384; assert_in_epsilon(98.66770586966288, worksheet.output_ad384, 0.001); end
  def test_output_ad397; assert_in_delta(0, (worksheet.output_ad397||0), 0.001); end
  def test_output_ae384; assert_in_epsilon(93.56027991479276, worksheet.output_ae384, 0.001); end
  def test_output_ae397; assert_in_delta(0, (worksheet.output_ae397||0), 0.001); end
  def test_output_af384; assert_in_epsilon(93.66326417189887, worksheet.output_af384, 0.001); end
  def test_output_af397; assert_in_delta(0, (worksheet.output_af397||0), 0.001); end
  def test_output_ag384; assert_in_epsilon(82.13619787603204, worksheet.output_ag384, 0.001); end
  def test_output_ag397; assert_in_delta(0, (worksheet.output_ag397||0), 0.001); end
  def test_output_ah384; assert_in_epsilon(73.73045743639462, worksheet.output_ah384, 0.001); end
  def test_output_ah397; assert_in_delta(0, (worksheet.output_ah397||0), 0.001); end
  def test_output_ai384; assert_in_epsilon(66.78504906006391, worksheet.output_ai384, 0.001); end
  def test_output_ai397; assert_in_delta(0, (worksheet.output_ai397||0), 0.001); end
  def test_output_aj384; assert_in_epsilon(59.2017649865928, worksheet.output_aj384, 0.001); end
  def test_output_aj397; assert_in_delta(0, (worksheet.output_aj397||0), 0.001); end
  def test_output_ak384; assert_in_epsilon(51.146287551221384, worksheet.output_ak384, 0.001); end
  def test_output_ak397; assert_in_delta(0, (worksheet.output_ak397||0), 0.001); end
  def test_output_am397; assert_equal("", worksheet.output_am397); end
  def test_output_an397; assert_equal("", worksheet.output_an397); end
  def test_output_aq397; assert_equal("Consumption in 2050", worksheet.output_aq397); end
  def test_output_ar397; assert_in_epsilon(59.108000000000004, worksheet.output_ar397, 0.001); end
  def test_output_ac91; assert_in_delta(0.30549824652607716, worksheet.output_ac91, 0.001); end
  def test_output_ac93; assert_in_delta(0, (worksheet.output_ac93||0), 0.001); end
  def test_output_ac94; assert_in_epsilon(5.12218764955876, worksheet.output_ac94, 0.001); end
  def test_output_ac97; assert_in_epsilon(34.451353359295624, worksheet.output_ac97, 0.001); end
  def test_output_ac110; assert_in_epsilon(20.891124873555672, worksheet.output_ac110, 0.001); end
  def test_output_ac113; assert_in_delta(0.3, worksheet.output_ac113, 0.001); end
  def test_output_ac118; assert_in_delta(0, (worksheet.output_ac118||0), 0.001); end
  def test_output_ac120; assert_in_epsilon(1.954808675691079, worksheet.output_ac120, 0.001); end
  def test_output_ac124; assert_in_delta(0, (worksheet.output_ac124||0), 0.001); end
  def test_output_ac125; assert_in_epsilon(4.6358569884618746, worksheet.output_ac125, 0.001); end
  def test_output_ac126; assert_in_epsilon(78.64377921350086, worksheet.output_ac126, 0.001); end
  def test_output_as397; assert_in_epsilon(78.64377921350086, worksheet.output_as397, 0.001); end
  def test_output_at397; assert_in_epsilon(82.4765507242275, worksheet.output_at397, 0.001); end
  def test_output_au397; assert_in_epsilon(87.84540719670835, worksheet.output_au397, 0.001); end
  def test_output_av397; assert_in_epsilon(92.03636617092512, worksheet.output_av397, 0.001); end
  def test_output_aw397; assert_in_epsilon(95.01672075300011, worksheet.output_aw397, 0.001); end
  def test_output_ax397; assert_in_epsilon(97.7820014429507, worksheet.output_ax397, 0.001); end
  def test_output_ay397; assert_in_epsilon(100.42412536837375, worksheet.output_ay397, 0.001); end
  def test_output_az397; assert_in_epsilon(102.73838232491322, worksheet.output_az397, 0.001); end
  def test_output_ba397; assert_in_epsilon(104.73402069570585, worksheet.output_ba397, 0.001); end
  def test_output_bb397; assert_in_epsilon(104.73402069570585, worksheet.output_bb397, 0.001); end
  def test_output_c398; assert_equal("1B", worksheet.output_c398); end
  def test_output_e398; assert_equal("Fugitive Emissions from Fuels", worksheet.output_e398); end
  def test_output_f398; assert_equal("Mt CO2e", worksheet.output_f398); end
  def test_output_g398; assert_equal("assumed in the oxygen steel sectorin the model", worksheet.output_g398); end
  def test_output_h398; assert_in_delta(0.942497044154996, worksheet.output_h398, 0.001); end
  def test_output_m398; assert_in_delta(0.624198474011319, worksheet.output_m398, 0.001); end
  def test_output_r398; assert_in_delta(0.631207171178402, worksheet.output_r398, 0.001); end
  def test_output_w398; assert_in_delta(0.530428575760333, worksheet.output_w398, 0.001); end
  def test_output_ab398; assert_in_delta(0.547604979315071, worksheet.output_ab398, 0.001); end
  def test_output_am398; assert_in_delta(-0.00618591252062628, worksheet.output_am398, 0.001); end
  def test_output_an398; assert_in_delta(-0.2198000000000001, worksheet.output_an398, 0.001); end
  def test_output_aq398; assert_equal("Consumption wrt 2010 (1990)", worksheet.output_aq398); end
  def test_output_bb398; assert_in_delta(0.3317521327577051, worksheet.output_bb398, 0.001); end
  def test_output_bc398; assert_in_delta(0.771909397978376, worksheet.output_bc398, 0.001); end
  def test_output_c399; assert_in_delta(1, worksheet.output_c399, 0.001); end
  def test_output_e399; assert_equal("Fuel Combustion", worksheet.output_e399); end
  def test_output_f399; assert_equal("Mt CO2e", worksheet.output_f399); end
  def test_output_h399; assert_in_epsilon(112.0929949782167, worksheet.output_h399, 0.001); end
  def test_output_m399; assert_in_epsilon(116.14628834504711, worksheet.output_m399, 0.001); end
  def test_output_r399; assert_in_epsilon(116.82704988224249, worksheet.output_r399, 0.001); end
  def test_output_w399; assert_in_epsilon(116.12823810468194, worksheet.output_w399, 0.001); end
  def test_output_ab399; assert_in_epsilon(107.60837340067793, worksheet.output_ab399, 0.001); end
  def test_output_am399; assert_in_delta(-0.019390802250972006, worksheet.output_am399, 0.001); end
  def test_output_an399; assert_in_delta(-0.543081757138679, worksheet.output_an399, 0.001); end
  def test_output_aq399; assert_equal("Costs (in 2050)", worksheet.output_aq399); end
  def test_output_ar399; assert_equal("Total", worksheet.output_ar399); end
  def test_output_ba399; assert_in_epsilon(55929.40463990972, worksheet.output_ba399, 0.001); end
  def test_output_bb399; assert_in_delta(0.7997936998212994, worksheet.output_bb399, 0.001); end
  def test_output_c400; assert_in_epsilon(2, worksheet.output_c400, 0.001); end
  def test_output_e400; assert_equal("Industrial Processes", worksheet.output_e400); end
  def test_output_f400; assert_equal("Mt CO2e", worksheet.output_f400); end
  def test_output_h400; assert_in_epsilon(15.79145017425979, worksheet.output_h400, 0.001); end
  def test_output_m400; assert_in_epsilon(19.23047130572877, worksheet.output_m400, 0.001); end
  def test_output_r400; assert_in_epsilon(15.650006251592766, worksheet.output_r400, 0.001); end
  def test_output_w400; assert_in_epsilon(15.721018536807973, worksheet.output_w400, 0.001); end
  def test_output_ab400; assert_in_epsilon(13.4600670965672, worksheet.output_ab400, 0.001); end
  def test_output_am400; assert_in_delta(-0.014883094742882186, worksheet.output_am400, 0.001); end
  def test_output_an400; assert_in_delta(-0.45107769722924196, worksheet.output_an400, 0.001); end
  def test_output_ar400; assert_equal("Investments", worksheet.output_ar400); end
  def test_costs_n63; assert_in_epsilon(20543.037631991727, worksheet.costs_n63, 0.001); end
  def test_costs_n132; assert_in_epsilon(31806.535392631784, worksheet.costs_n132, 0.001); end
  def test_output_ak489; assert_in_epsilon(26174.786512311755, worksheet.output_ak489, 0.001); end
  def test_costs_n64; assert_in_epsilon(6621.560032596003, worksheet.costs_n64, 0.001); end
  def test_costs_n133; assert_in_epsilon(8707.874173156237, worksheet.costs_n133, 0.001); end
  def test_output_ak494; assert_in_epsilon(7664.71710287612, worksheet.output_ak494, 0.001); end
  def test_costs_n65; assert_in_epsilon(1507.497350895906, worksheet.costs_n65, 0.001); end
  def test_costs_n134; assert_in_epsilon(2039.5552394474023, worksheet.costs_n134, 0.001); end
  def test_output_ak499; assert_in_epsilon(1773.526295171654, worksheet.output_ak499, 0.001); end
  def test_costs_n69; assert_in_delta(0, (worksheet.costs_n69||0), 0.001); end
  def test_costs_n138; assert_in_delta(0, (worksheet.costs_n138||0), 0.001); end
  def test_output_ak504; assert_in_delta(0, (worksheet.output_ak504||0), 0.001); end
  def test_output_ak509; assert_in_epsilon(35613.02991035953, worksheet.output_ak509, 0.001); end
  def test_output_ba400; assert_in_epsilon(35613.02991035953, worksheet.output_ba400, 0.001); end
  def test_output_bb400; assert_in_epsilon(1.1131724138622434, worksheet.output_bb400, 0.001); end
  def test_output_c401; assert_in_epsilon(3, worksheet.output_c401, 0.001); end
  def test_output_e401; assert_equal("Solvent and Other Product Use", worksheet.output_e401); end
  def test_output_f401; assert_equal("Mt CO2e", worksheet.output_f401); end
  def test_output_g401; assert_equal("assumed in the chemical sector in the model", worksheet.output_g401); end
  def test_output_h401; assert_in_delta(0.213412091, worksheet.output_h401, 0.001); end
  def test_output_m401; assert_in_delta(0.203647463, worksheet.output_m401, 0.001); end
  def test_output_r401; assert_in_delta(0.217215357, worksheet.output_r401, 0.001); end
  def test_output_w401; assert_in_delta(0.214906818, worksheet.output_w401, 0.001); end
  def test_output_ab401; assert_in_delta(0.213974462, worksheet.output_ab401, 0.001); end
  def test_output_am401; assert_in_delta(0, (worksheet.output_am401||0), 0.001); end
  def test_output_an401; assert_in_delta(0, (worksheet.output_an401||0), 0.001); end
  def test_output_ar401; assert_equal("O&M", worksheet.output_ar401); end
  def test_costs_x63; assert_in_epsilon(388.6506898159953, worksheet.costs_x63, 0.001); end
  def test_costs_x132; assert_in_epsilon(974.4885341654015, worksheet.costs_x132, 0.001); end
  def test_output_ak490; assert_in_epsilon(1363.1392239813968, worksheet.output_ak490, 0.001); end
  def test_costs_x64; assert_in_epsilon(2657.2128495788425, worksheet.costs_x64, 0.001); end
  def test_costs_x133; assert_in_epsilon(13331.581555140143, worksheet.costs_x133, 0.001); end
  def test_output_ak495; assert_in_epsilon(7994.397202359492, worksheet.output_ak495, 0.001); end
  def test_costs_x65; assert_in_delta(0, (worksheet.costs_x65||0), 0.001); end
  def test_costs_x134; assert_in_delta(0, (worksheet.costs_x134||0), 0.001); end
  def test_output_ak500; assert_in_delta(0, (worksheet.output_ak500||0), 0.001); end
  def test_costs_x69; assert_in_delta(0, (worksheet.costs_x69||0), 0.001); end
  def test_costs_x138; assert_in_delta(0, (worksheet.costs_x138||0), 0.001); end
  def test_output_ak505; assert_in_delta(0, (worksheet.output_ak505||0), 0.001); end
  def test_output_ak510; assert_in_epsilon(9357.536426340888, worksheet.output_ak510, 0.001); end
  def test_output_ba401; assert_in_epsilon(9357.536426340888, worksheet.output_ba401, 0.001); end
  def test_output_bb401; assert_in_delta(0.8768283765140787, worksheet.output_bb401, 0.001); end
  def test_output_c402; assert_in_epsilon(4, worksheet.output_c402, 0.001); end
  def test_output_e402; assert_equal("Agriculture", worksheet.output_e402); end
  def test_output_f402; assert_equal("Mt CO2e", worksheet.output_f402); end
  def test_output_h402; assert_in_epsilon(11.85618007516327, worksheet.output_h402, 0.001); end
  def test_output_m402; assert_in_epsilon(11.982718812493207, worksheet.output_m402, 0.001); end
  def test_output_r402; assert_in_epsilon(11.0506551688113, worksheet.output_r402, 0.001); end
  def test_output_w402; assert_in_epsilon(9.983700195609668, worksheet.output_w402, 0.001); end
  def test_output_ab402; assert_in_epsilon(10.0418232537418, worksheet.output_ab402, 0.001); end
  def test_output_am402; assert_in_delta(-0.007514205339859137, worksheet.output_am402, 0.001); end
  def test_output_an402; assert_in_delta(-0.26044244358255053, worksheet.output_an402, 0.001); end
  def test_output_ar402; assert_equal("Fuel", worksheet.output_ar402); end
  def test_costs_ah63; assert_in_epsilon(3071.3979989893633, worksheet.costs_ah63, 0.001); end
  def test_costs_ah132; assert_in_epsilon(4374.8366206695055, worksheet.costs_ah132, 0.001); end
  def test_output_ak491; assert_in_epsilon(3723.1173098294344, worksheet.output_ak491, 0.001); end
  def test_costs_ah64; assert_in_epsilon(2160.1056703529707, worksheet.costs_ah64, 0.001); end
  def test_costs_ah133; assert_in_epsilon(2972.77306275377, worksheet.costs_ah133, 0.001); end
  def test_output_ak496; assert_in_epsilon(2566.4393665533703, worksheet.output_ak496, 0.001); end
  def test_costs_ah65; assert_in_epsilon(3788.1581328025263, worksheet.costs_ah65, 0.001); end
  def test_costs_ah134; assert_in_epsilon(5125.155120850475, worksheet.costs_ah134, 0.001); end
  def test_output_ak501; assert_in_epsilon(4456.6566268265005, worksheet.output_ak501, 0.001); end
  def test_costs_ah69; assert_in_epsilon(183.75, worksheet.costs_ah69, 0.001); end
  def test_costs_ah138; assert_in_epsilon(241.5, worksheet.costs_ah138, 0.001); end
  def test_output_ak506; assert_in_epsilon(212.625, worksheet.output_ak506, 0.001); end
  def test_output_ak511; assert_in_epsilon(10958.838303209304, worksheet.output_ak511, 0.001); end
  def test_output_ba402; assert_in_epsilon(10958.838303209304, worksheet.output_ba402, 0.001); end
  def test_output_bb402; assert_in_delta(0.401932262468835, worksheet.output_bb402, 0.001); end
  def test_output_c403; assert_in_epsilon(6, worksheet.output_c403, 0.001); end
  def test_output_e403; assert_equal("Waste", worksheet.output_e403); end
  def test_output_f403; assert_equal("Mt CO2e", worksheet.output_f403); end
  def test_output_h403; assert_in_epsilon(3.3266737107370887, worksheet.output_h403, 0.001); end
  def test_output_m403; assert_in_epsilon(2.9662255046909474, worksheet.output_m403, 0.001); end
  def test_output_r403; assert_in_epsilon(2.409408501765251, worksheet.output_r403, 0.001); end
  def test_output_w403; assert_in_epsilon(1.5746834316472123, worksheet.output_w403, 0.001); end
  def test_output_ab403; assert_in_epsilon(1.1349849861095138, worksheet.output_ab403, 0.001); end
  def test_output_am403; assert_in_delta(-1, worksheet.output_am403, 0.001); end
  def test_output_an403; assert_in_delta(-1, worksheet.output_an403, 0.001); end
  def test_output_c404; assert_in_epsilon(7, worksheet.output_c404, 0.001); end
  def test_output_e404; assert_equal("Other", worksheet.output_e404); end
  def test_output_f404; assert_equal("Mt CO2e", worksheet.output_f404); end
  def test_output_h404; assert_in_delta(0, (worksheet.output_h404||0), 0.001); end
  def test_output_m404; assert_in_delta(0, (worksheet.output_m404||0), 0.001); end
  def test_output_r404; assert_in_delta(0, (worksheet.output_r404||0), 0.001); end
  def test_output_w404; assert_in_delta(0, (worksheet.output_w404||0), 0.001); end
  def test_output_ab404; assert_in_delta(0, (worksheet.output_ab404||0), 0.001); end
  def test_output_am404; assert_equal("", worksheet.output_am404); end
  def test_output_an404; assert_equal("", worksheet.output_an404); end
  def test_output_b405; assert_equal("CCS", worksheet.output_b405); end
  def test_output_c405; assert_equal("X3", worksheet.output_c405); end
  def test_output_e405; assert_equal("Carbon capture", worksheet.output_e405); end
  def test_output_f405; assert_equal("Mt CO2e", worksheet.output_f405); end
  def test_output_h405; assert_in_delta(0, (worksheet.output_h405||0), 0.001); end
  def test_output_m405; assert_in_delta(0, (worksheet.output_m405||0), 0.001); end
  def test_output_r405; assert_in_delta(0, (worksheet.output_r405||0), 0.001); end
  def test_output_w405; assert_in_delta(0, (worksheet.output_w405||0), 0.001); end
  def test_output_ab405; assert_in_delta(0, (worksheet.output_ab405||0), 0.001); end
  def test_output_am405; assert_equal("", worksheet.output_am405); end
  def test_output_an405; assert_equal("", worksheet.output_an405); end
  def test_output_c406; assert_equal("X2", worksheet.output_c406); end
  def test_output_e406; assert_equal("Bioenergy credit", worksheet.output_e406); end
  def test_output_f406; assert_equal("Mt CO2e", worksheet.output_f406); end
  def test_output_h406; assert_in_epsilon(-2.07672194675723, worksheet.output_h406, 0.001); end
  def test_output_m406; assert_in_epsilon(-2.37413202653096, worksheet.output_m406, 0.001); end
  def test_output_r406; assert_in_epsilon(-2.711964937349, worksheet.output_r406, 0.001); end
  def test_output_w406; assert_in_epsilon(-4.48237361596347, worksheet.output_w406, 0.001); end
  def test_output_ab406; assert_in_epsilon(-9.91524520252488, worksheet.output_ab406, 0.001); end
  def test_output_ac360; assert_in_epsilon(-10.398216998196155, worksheet.output_ac360, 0.001); end
  def test_output_ac406; assert_in_epsilon(-10.398216998196155, worksheet.output_ac406, 0.001); end
  def test_output_ad360; assert_in_epsilon(-12.140676316877524, worksheet.output_ad360, 0.001); end
  def test_output_ad406; assert_in_epsilon(-12.140676316877524, worksheet.output_ad406, 0.001); end
  def test_output_ae360; assert_in_epsilon(-14.836936358931485, worksheet.output_ae360, 0.001); end
  def test_output_ae406; assert_in_epsilon(-14.836936358931485, worksheet.output_ae406, 0.001); end
  def test_output_af360; assert_in_epsilon(-17.263143158747187, worksheet.output_af360, 0.001); end
  def test_output_af406; assert_in_epsilon(-17.263143158747187, worksheet.output_af406, 0.001); end
  def test_output_ag360; assert_in_epsilon(-19.215031808189316, worksheet.output_ag360, 0.001); end
  def test_output_ag406; assert_in_epsilon(-19.215031808189316, worksheet.output_ag406, 0.001); end
  def test_output_ah360; assert_in_epsilon(-21.157035467428667, worksheet.output_ah360, 0.001); end
  def test_output_ah406; assert_in_epsilon(-21.157035467428667, worksheet.output_ah406, 0.001); end
  def test_output_ai360; assert_in_epsilon(-23.081571067401043, worksheet.output_ai360, 0.001); end
  def test_output_ai406; assert_in_epsilon(-23.081571067401043, worksheet.output_ai406, 0.001); end
  def test_output_aj360; assert_in_epsilon(-24.534274736070774, worksheet.output_aj360, 0.001); end
  def test_output_aj406; assert_in_epsilon(-24.534274736070774, worksheet.output_aj406, 0.001); end
  def test_output_ak360; assert_in_epsilon(-25.699697300462166, worksheet.output_ak360, 0.001); end
  def test_output_ak406; assert_in_epsilon(-25.699697300462166, worksheet.output_ak406, 0.001); end
  def test_output_am406; assert_in_delta(0.022878919410198817, worksheet.output_am406, 0.001); end
  def test_output_an406; assert_in_epsilon(1.471548468830806, worksheet.output_an406, 0.001); end
  def test_output_e407; assert_equal("Total net of biomass excl. Int'l aviation", worksheet.output_e407); end
  def test_output_h407; assert_in_epsilon(143.28071102937685, worksheet.output_h407, 0.001); end
  def test_output_i407; assert_in_delta(0, (worksheet.output_i407||0), 0.001); end
  def test_output_j407; assert_in_delta(0, (worksheet.output_j407||0), 0.001); end
  def test_output_k407; assert_in_delta(0, (worksheet.output_k407||0), 0.001); end
  def test_output_l407; assert_in_delta(0, (worksheet.output_l407||0), 0.001); end
  def test_output_m407; assert_in_epsilon(150.52935143096005, worksheet.output_m407, 0.001); end
  def test_output_n407; assert_in_delta(0, (worksheet.output_n407||0), 0.001); end
  def test_output_o407; assert_in_delta(0, (worksheet.output_o407||0), 0.001); end
  def test_output_p407; assert_in_delta(0, (worksheet.output_p407||0), 0.001); end
  def test_output_q407; assert_in_delta(0, (worksheet.output_q407||0), 0.001); end
  def test_output_r407; assert_in_epsilon(146.15433516141178, worksheet.output_r407, 0.001); end
  def test_output_s407; assert_in_delta(0, (worksheet.output_s407||0), 0.001); end
  def test_output_t407; assert_in_delta(0, (worksheet.output_t407||0), 0.001); end
  def test_output_u407; assert_in_delta(0, (worksheet.output_u407||0), 0.001); end
  def test_output_v407; assert_in_delta(0, (worksheet.output_v407||0), 0.001); end
  def test_output_w407; assert_in_epsilon(143.62254708674678, worksheet.output_w407, 0.001); end
  def test_output_x407; assert_in_delta(0, (worksheet.output_x407||0), 0.001); end
  def test_output_y407; assert_in_delta(0, (worksheet.output_y407||0), 0.001); end
  def test_output_z407; assert_in_delta(0, (worksheet.output_z407||0), 0.001); end
  def test_output_aa407; assert_in_delta(0, (worksheet.output_aa407||0), 0.001); end
  def test_output_ab407; assert_in_epsilon(132.45922319909644, worksheet.output_ab407, 0.001); end
  def test_output_am407; assert_in_delta(-0.034425014210932026, worksheet.output_am407, 0.001); end
  def test_output_an407; assert_in_delta(-0.7537136992498552, worksheet.output_an407, 0.001); end
  def test_output_r408; assert_equal("adjustment factor excluding buildings ", worksheet.output_r408); end
  def test_output_ac408; assert_in_epsilon(1.0342009389797702, worksheet.output_ac408, 0.001); end
  def test_output_am408; assert_in_delta(-1, worksheet.output_am408, 0.001); end
  def test_output_an408; assert_in_delta(-1, worksheet.output_an408, 0.001); end
  def test_output_e409; assert_equal("TARGETS", worksheet.output_e409); end
  def test_output_f409; assert_equal("Mt CO2e", worksheet.output_f409); end
  def test_output_h409; assert_in_epsilon(143.28071102937685, worksheet.output_h409, 0.001); end
  def test_output_i409; assert_in_delta(0, (worksheet.output_i409||0), 0.001); end
  def test_output_j409; assert_in_delta(0, (worksheet.output_j409||0), 0.001); end
  def test_output_k409; assert_in_delta(0, (worksheet.output_k409||0), 0.001); end
  def test_output_l409; assert_in_delta(0, (worksheet.output_l409||0), 0.001); end
  def test_output_m409; assert_in_epsilon(140.59419769757602, worksheet.output_m409, 0.001); end
  def test_output_n409; assert_in_delta(0, (worksheet.output_n409||0), 0.001); end
  def test_output_o409; assert_in_delta(0, (worksheet.output_o409||0), 0.001); end
  def test_output_p409; assert_in_delta(0, (worksheet.output_p409||0), 0.001); end
  def test_output_q409; assert_in_delta(0, (worksheet.output_q409||0), 0.001); end
  def test_output_r409; assert_in_epsilon(137.9076843657752, worksheet.output_r409, 0.001); end
  def test_output_s409; assert_in_delta(0, (worksheet.output_s409||0), 0.001); end
  def test_output_t409; assert_in_delta(0, (worksheet.output_t409||0), 0.001); end
  def test_output_u409; assert_in_delta(0, (worksheet.output_u409||0), 0.001); end
  def test_output_v409; assert_in_delta(0, (worksheet.output_v409||0), 0.001); end
  def test_output_w409; assert_in_epsilon(135.22117103397437, worksheet.output_w409, 0.001); end
  def test_output_x409; assert_in_delta(0, (worksheet.output_x409||0), 0.001); end
  def test_output_y409; assert_in_delta(0, (worksheet.output_y409||0), 0.001); end
  def test_output_z409; assert_in_delta(0, (worksheet.output_z409||0), 0.001); end
  def test_output_aa409; assert_in_delta(0, (worksheet.output_aa409||0), 0.001); end
  def test_output_ab409; assert_in_epsilon(132.53465770217358, worksheet.output_ab409, 0.001); end
  def test_output_ac409; assert_in_epsilon(132.53465770217358, worksheet.output_ac409, 0.001); end
  def test_output_ad409; assert_in_epsilon(111.04255104776706, worksheet.output_ad409, 0.001); end
  def test_output_ae409; assert_in_epsilon(100.29649772056379, worksheet.output_ae409, 0.001); end
  def test_output_af409; assert_in_epsilon(88.35643846811571, worksheet.output_af409, 0.001); end
  def test_output_ag409; assert_in_epsilon(76.41637921566763, worksheet.output_ag409, 0.001); end
  def test_output_ah409; assert_in_epsilon(64.47631996321957, worksheet.output_ah409, 0.001); end
  def test_output_ai409; assert_in_epsilon(52.5362607107715, worksheet.output_ai409, 0.001); end
  def test_output_aj409; assert_in_epsilon(40.59620145832343, worksheet.output_aj409, 0.001); end
  def test_output_ak409; assert_in_epsilon(28.65614220587537, worksheet.output_ak409, 0.001); end
  def test_output_am409; assert_in_delta(-0.03756323075984913, worksheet.output_am409, 0.001); end
  def test_output_an409; assert_in_delta(-0.7837837837837838, worksheet.output_an409, 0.001); end
  def test_output_am410; assert_equal("", worksheet.output_am410); end
  def test_output_an410; assert_equal("", worksheet.output_an410); end
  def test_output_c411; assert_in_epsilon(5, worksheet.output_c411, 0.001); end
  def test_output_e411; assert_equal("Land Use, Land-Use Change and Forestry", worksheet.output_e411); end
  def test_output_f411; assert_equal("Mt CO2e", worksheet.output_f411); end
  def test_output_h411; assert_in_epsilon(-1.2432528504407998, worksheet.output_h411, 0.001); end
  def test_output_m411; assert_in_delta(-0.9972413291829679, worksheet.output_m411, 0.001); end
  def test_output_r411; assert_in_delta(-0.955865268483653, worksheet.output_r411, 0.001); end
  def test_output_w411; assert_in_delta(-0.9564070760049957, worksheet.output_w411, 0.001); end
  def test_output_ab411; assert_in_epsilon(-1.0423849055794432, worksheet.output_ab411, 0.001); end
  def test_output_ad411; assert_in_delta(0, (worksheet.output_ad411||0), 0.001); end
  def test_output_ae411; assert_in_delta(0, (worksheet.output_ae411||0), 0.001); end
  def test_output_af411; assert_in_delta(0, (worksheet.output_af411||0), 0.001); end
  def test_output_ag411; assert_in_delta(0, (worksheet.output_ag411||0), 0.001); end
  def test_output_ah411; assert_in_delta(0, (worksheet.output_ah411||0), 0.001); end
  def test_output_ai411; assert_in_delta(0, (worksheet.output_ai411||0), 0.001); end
  def test_output_aj411; assert_in_delta(0, (worksheet.output_aj411||0), 0.001); end
  def test_output_am411; assert_equal("", worksheet.output_am411); end
  def test_output_an411; assert_equal("", worksheet.output_an411); end
  def test_output_c412; assert_equal("X1", worksheet.output_c412); end
  def test_output_e412; assert_equal("International Aviation and Shipping", worksheet.output_e412); end
  def test_output_f412; assert_equal("Mt CO2e", worksheet.output_f412); end
  def test_output_h412; assert_in_epsilon(16.41538462935098, worksheet.output_h412, 0.001); end
  def test_output_m412; assert_in_epsilon(15.855608543299883, worksheet.output_m412, 0.001); end
  def test_output_r412; assert_in_epsilon(20.725912520878488, worksheet.output_r412, 0.001); end
  def test_output_w412; assert_in_epsilon(28.516041922993377, worksheet.output_w412, 0.001); end
  def test_output_ab412; assert_in_epsilon(25.202775861980037, worksheet.output_ab412, 0.001); end
  def test_output_ad412; assert_in_epsilon(4.2117127013694535, worksheet.output_ad412, 0.001); end
  def test_output_ae412; assert_in_epsilon(4.029589663352491, worksheet.output_ae412, 0.001); end
  def test_output_af412; assert_in_epsilon(3.8553419965510765, worksheet.output_af412, 0.001); end
  def test_output_ag412; assert_in_epsilon(3.68862915386882, worksheet.output_ag412, 0.001); end
  def test_output_ah412; assert_in_epsilon(3.529125314159597, worksheet.output_ah412, 0.001); end
  def test_output_ai412; assert_in_epsilon(3.3765187454474606, worksheet.output_ai412, 0.001); end
  def test_output_aj412; assert_in_epsilon(3.230511195682215, worksheet.output_aj412, 0.001); end
  def test_output_am412; assert_in_delta(-0.008801999999999977, worksheet.output_am412, 0.001); end
  def test_output_an412; assert_in_delta(-0.2978713692251872, worksheet.output_an412, 0.001); end
  def test_output_b413; assert_equal("IPCC Sectors Emissions as % of base year", worksheet.output_b413); end
  def test_output_am413; assert_equal("", worksheet.output_am413); end
  def test_output_an413; assert_equal("", worksheet.output_an413); end
  def test_output_c414; assert_equal("1A", worksheet.output_c414); end
  def test_output_e414; assert_equal("Fuel Combustion", worksheet.output_e414); end
  def test_output_f414; assert_equal("%", worksheet.output_f414); end
  def test_output_g414; assert_equal("NIR", worksheet.output_g414); end
  def test_output_h414; assert_in_delta(0.7757533944068195, worksheet.output_h414, 0.001); end
  def test_output_m414; assert_in_delta(0.8062640744946491, worksheet.output_m414, 0.001); end
  def test_output_r414; assert_in_delta(0.810966402080741, worksheet.output_r414, 0.001); end
  def test_output_w414; assert_in_delta(0.8067925451962656, worksheet.output_w414, 0.001); end
  def test_output_ab414; assert_in_delta(0.747209918573144, worksheet.output_ab414, 0.001); end
  def test_output_ac414; assert_in_delta(0.7580250778002593, worksheet.output_ac414, 0.001); end
  def test_output_ad414; assert_in_delta(0.6658591541236815, worksheet.output_ad414, 0.001); end
  def test_output_ae414; assert_in_delta(0.6313916827653065, worksheet.output_ae414, 0.001); end
  def test_output_af414; assert_in_delta(0.6320866721716207, worksheet.output_af414, 0.001); end
  def test_output_ag414; assert_in_delta(0.5542962487940624, worksheet.output_ag414, 0.001); end
  def test_output_ah414; assert_in_delta(0.49757009741973396, worksheet.output_ah414, 0.001); end
  def test_output_ai414; assert_in_delta(0.45069899906242405, worksheet.output_ai414, 0.001); end
  def test_output_aj414; assert_in_delta(0.39952319565101035, worksheet.output_aj414, 0.001); end
  def test_output_ak414; assert_in_delta(0.3451607946617317, worksheet.output_ak414, 0.001); end
  def test_output_am414; assert_in_delta(-0.019475505713194008, worksheet.output_am414, 0.001); end
  def test_output_an414; assert_in_delta(-0.5446578157237667, worksheet.output_an414, 0.001); end
  def test_output_c415; assert_equal("1B", worksheet.output_c415); end
  def test_output_e415; assert_equal("Fugitive Emissions from Fuels", worksheet.output_e415); end
  def test_output_f415; assert_equal("%", worksheet.output_f415); end
  def test_output_g415; assert_equal("NIR", worksheet.output_g415); end
  def test_output_h415; assert_in_delta(0.00657797576089468, worksheet.output_h415, 0.001); end
  def test_output_m415; assert_in_delta(0.004356472476489453, worksheet.output_m415, 0.001); end
  def test_output_r415; assert_in_delta(0.004405388322291237, worksheet.output_r415, 0.001); end
  def test_output_w415; assert_in_delta(0.0037020236146900415, worksheet.output_w415, 0.001); end
  def test_output_ab415; assert_in_delta(0.00382190299992855, worksheet.output_ab415, 0.001); end
  def test_output_ac398; assert_in_delta(0.547604979315071, worksheet.output_ac398, 0.001); end
  def test_output_ac415; assert_in_delta(0.0036955129858021814, worksheet.output_ac415, 0.001); end
  def test_output_ad398; assert_in_delta(0.4511032918352726, worksheet.output_ad398, 0.001); end
  def test_output_ad415; assert_in_delta(0.0030442712098791916, worksheet.output_ad415, 0.001); end
  def test_output_ae398; assert_in_delta(0.4476944508390363, worksheet.output_ae398, 0.001); end
  def test_output_ae415; assert_in_delta(0.0030212666415425733, worksheet.output_ae415, 0.001); end
  def test_output_af398; assert_in_delta(0.44428560984279997, worksheet.output_af398, 0.001); end
  def test_output_af415; assert_in_delta(0.002998262073205954, worksheet.output_af415, 0.001); end
  def test_output_ag398; assert_in_delta(0.4408767688465637, worksheet.output_ag398, 0.001); end
  def test_output_ag415; assert_in_delta(0.0029752575048693363, worksheet.output_ag415, 0.001); end
  def test_output_ah398; assert_in_delta(0.4374679278503274, worksheet.output_ah398, 0.001); end
  def test_output_ah415; assert_in_delta(0.0029522529365327175, worksheet.output_ah415, 0.001); end
  def test_output_ai398; assert_in_delta(0.43405908685409095, worksheet.output_ai398, 0.001); end
  def test_output_ai415; assert_in_delta(0.0029292483681960984, worksheet.output_ai415, 0.001); end
  def test_output_aj398; assert_in_delta(0.4306502458578548, worksheet.output_aj398, 0.001); end
  def test_output_aj415; assert_in_delta(0.0029062437998594805, worksheet.output_aj415, 0.001); end
  def test_output_ak398; assert_in_delta(0.4272414048616183, worksheet.output_ak398, 0.001); end
  def test_output_ak415; assert_in_delta(0.0028832392315228613, worksheet.output_ak415, 0.001); end
  def test_output_am415; assert_in_delta(-0.00618591252062628, worksheet.output_am415, 0.001); end
  def test_output_an415; assert_in_delta(-0.2198000000000001, worksheet.output_an415, 0.001); end
  def test_output_c416; assert_in_delta(1, worksheet.output_c416, 0.001); end
  def test_output_e416; assert_equal("Fuel Combustion", worksheet.output_e416); end
  def test_output_f416; assert_equal("%", worksheet.output_f416); end
  def test_output_g416; assert_equal("NIR", worksheet.output_g416); end
  def test_output_h416; assert_in_delta(0.7823313701677141, worksheet.output_h416, 0.001); end
  def test_output_m416; assert_in_delta(0.8106205469711386, worksheet.output_m416, 0.001); end
  def test_output_r416; assert_in_delta(0.8153717904030323, worksheet.output_r416, 0.001); end
  def test_output_w416; assert_in_delta(0.8104945688109557, worksheet.output_w416, 0.001); end
  def test_output_ab416; assert_in_delta(0.7510318215730727, worksheet.output_ab416, 0.001); end
  def test_output_ac399; assert_in_epsilon(112.87255381426311, worksheet.output_ac399, 0.001); end
  def test_output_ac416; assert_in_delta(0.7617205907860614, worksheet.output_ac416, 0.001); end
  def test_output_ad399; assert_in_epsilon(99.11880916149815, worksheet.output_ad399, 0.001); end
  def test_output_ad416; assert_in_delta(0.6689034253335605, worksheet.output_ad416, 0.001); end
  def test_output_ae399; assert_in_epsilon(94.0079743656318, worksheet.output_ae399, 0.001); end
  def test_output_ae416; assert_in_delta(0.6344129494068492, worksheet.output_ae416, 0.001); end
  def test_output_af399; assert_in_epsilon(94.10754978174167, worksheet.output_af399, 0.001); end
  def test_output_af416; assert_in_delta(0.6350849342448267, worksheet.output_af416, 0.001); end
  def test_output_ag399; assert_in_epsilon(82.5770746448786, worksheet.output_ag399, 0.001); end
  def test_output_ag416; assert_in_delta(0.5572715062989316, worksheet.output_ag416, 0.001); end
  def test_output_ah399; assert_in_epsilon(74.16792536424494, worksheet.output_ah399, 0.001); end
  def test_output_ah416; assert_in_delta(0.5005223503562667, worksheet.output_ah416, 0.001); end
  def test_output_ai399; assert_in_epsilon(67.219108146918, worksheet.output_ai399, 0.001); end
  def test_output_ai416; assert_in_delta(0.45362824743062014, worksheet.output_ai416, 0.001); end
  def test_output_aj399; assert_in_epsilon(59.632415232450654, worksheet.output_aj399, 0.001); end
  def test_output_aj416; assert_in_delta(0.4024294394508698, worksheet.output_aj416, 0.001); end
  def test_output_ak399; assert_in_epsilon(51.573528956083, worksheet.output_ak399, 0.001); end
  def test_output_ak416; assert_in_delta(0.34804403389325456, worksheet.output_ak416, 0.001); end
  def test_output_am416; assert_in_delta(-0.019390802250972006, worksheet.output_am416, 0.001); end
  def test_output_an416; assert_in_delta(-0.5430817571386789, worksheet.output_an416, 0.001); end
  def test_output_c417; assert_in_epsilon(2, worksheet.output_c417, 0.001); end
  def test_output_e417; assert_equal("Industrial Processes", worksheet.output_e417); end
  def test_output_f417; assert_equal("%", worksheet.output_f417); end
  def test_output_g417; assert_equal("NIR", worksheet.output_g417); end
  def test_output_h417; assert_in_delta(0.11021337108678969, worksheet.output_h417, 0.001); end
  def test_output_m417; assert_in_delta(0.134215353675806, worksheet.output_m417, 0.001); end
  def test_output_r417; assert_in_delta(0.10922619059577422, worksheet.output_r417, 0.001); end
  def test_output_w417; assert_in_delta(0.10972180710064101, worksheet.output_w417, 0.001); end
  def test_output_ab417; assert_in_delta(0.09394193398305709, worksheet.output_ab417, 0.001); end
  def test_output_ac400; assert_in_epsilon(13.222057038639447, worksheet.output_ac400, 0.001); end
  def test_output_ac417; assert_in_delta(0.08922907082843692, worksheet.output_ac417, 0.001); end
  def test_output_ad400; assert_in_epsilon(10.439017392551047, worksheet.output_ad400, 0.001); end
  def test_output_ad417; assert_in_delta(0.070447723797981, worksheet.output_ad417, 0.001); end
  def test_output_ae400; assert_in_epsilon(10.019456888380235, worksheet.output_ae400, 0.001); end
  def test_output_ae417; assert_in_delta(0.0676163191357512, worksheet.output_ae417, 0.001); end
  def test_output_af400; assert_in_epsilon(9.600916644987162, worksheet.output_af400, 0.001); end
  def test_output_af417; assert_in_delta(0.0647917997048386, worksheet.output_af417, 0.001); end
  def test_output_ag400; assert_in_epsilon(9.142107257004112, worksheet.output_ag400, 0.001); end
  def test_output_ag417; assert_in_delta(0.06169552389408895, worksheet.output_ag417, 0.001); end
  def test_output_ah400; assert_in_epsilon(8.678488348596694, worksheet.output_ah400, 0.001); end
  def test_output_ah417; assert_in_delta(0.05856679102787944, worksheet.output_ah417, 0.001); end
  def test_output_ai400; assert_in_epsilon(8.20997138718623, worksheet.output_ai400, 0.001); end
  def test_output_ai417; assert_in_delta(0.05540500364397626, worksheet.output_ai417, 0.001); end
  def test_output_aj400; assert_in_epsilon(7.73646640890723, worksheet.output_aj400, 0.001); end
  def test_output_aj417; assert_in_delta(0.05220955462110457, worksheet.output_aj417, 0.001); end
  def test_output_ak400; assert_in_epsilon(7.257881997016275, worksheet.output_ak400, 0.001); end
  def test_output_ak417; assert_in_delta(0.048979827033240664, worksheet.output_ak417, 0.001); end
  def test_output_am417; assert_in_delta(-0.014883094742882186, worksheet.output_am417, 0.001); end
  def test_output_an417; assert_in_delta(-0.45107769722924196, worksheet.output_an417, 0.001); end
  def test_output_c418; assert_in_epsilon(3, worksheet.output_c418, 0.001); end
  def test_output_e418; assert_equal("Solvent and Other Product Use", worksheet.output_e418); end
  def test_output_f418; assert_equal("%", worksheet.output_f418); end
  def test_output_g418; assert_equal("NIR", worksheet.output_g418); end
  def test_output_h418; assert_in_delta(0.0014894683971539205, worksheet.output_h418, 0.001); end
  def test_output_m418; assert_in_delta(0.0014213180653343223, worksheet.output_m418, 0.001); end
  def test_output_r418; assert_in_delta(0.0015160125563270295, worksheet.output_r418, 0.001); end
  def test_output_w418; assert_in_delta(0.001499900555043572, worksheet.output_w418, 0.001); end
  def test_output_ab418; assert_in_delta(0.00149339335673822, worksheet.output_ab418, 0.001); end
  def test_output_ac401; assert_in_delta(0.19349282649736, worksheet.output_ac401, 0.001); end
  def test_output_ac418; assert_in_delta(0.001305786616248328, worksheet.output_ac418, 0.001); end
  def test_output_ad401; assert_in_delta(0.19349282649736, worksheet.output_ad401, 0.001); end
  def test_output_ad418; assert_in_delta(0.001305786616248328, worksheet.output_ad418, 0.001); end
  def test_output_ae401; assert_in_delta(0.19349282649736, worksheet.output_ae401, 0.001); end
  def test_output_ae418; assert_in_delta(0.001305786616248328, worksheet.output_ae418, 0.001); end
  def test_output_af401; assert_in_delta(0.19349282649736, worksheet.output_af401, 0.001); end
  def test_output_af418; assert_in_delta(0.001305786616248328, worksheet.output_af418, 0.001); end
  def test_output_ag401; assert_in_delta(0.19349282649736, worksheet.output_ag401, 0.001); end
  def test_output_ag418; assert_in_delta(0.001305786616248328, worksheet.output_ag418, 0.001); end
  def test_output_ah401; assert_in_delta(0.19349282649736, worksheet.output_ah401, 0.001); end
  def test_output_ah418; assert_in_delta(0.001305786616248328, worksheet.output_ah418, 0.001); end
  def test_output_ai401; assert_in_delta(0.19349282649736, worksheet.output_ai401, 0.001); end
  def test_output_ai418; assert_in_delta(0.001305786616248328, worksheet.output_ai418, 0.001); end
  def test_output_aj401; assert_in_delta(0.19349282649736, worksheet.output_aj401, 0.001); end
  def test_output_aj418; assert_in_delta(0.001305786616248328, worksheet.output_aj418, 0.001); end
  def test_output_ak401; assert_in_delta(0.19349282649736, worksheet.output_ak401, 0.001); end
  def test_output_ak418; assert_in_delta(0.001305786616248328, worksheet.output_ak418, 0.001); end
  def test_output_am418; assert_in_delta(0, (worksheet.output_am418||0), 0.001); end
  def test_output_an418; assert_in_delta(0, (worksheet.output_an418||0), 0.001); end
  def test_output_c419; assert_in_epsilon(4, worksheet.output_c419, 0.001); end
  def test_output_e419; assert_equal("Agriculture", worksheet.output_e419); end
  def test_output_f419; assert_equal("%", worksheet.output_f419); end
  def test_output_g419; assert_equal("NIR", worksheet.output_g419); end
  def test_output_h419; assert_in_delta(0.08274791484481395, worksheet.output_h419, 0.001); end
  def test_output_m419; assert_in_delta(0.08363106747869495, worksheet.output_m419, 0.001); end
  def test_output_r419; assert_in_delta(0.07712590961769854, worksheet.output_r419, 0.001); end
  def test_output_w419; assert_in_delta(0.06967930382173153, worksheet.output_w419, 0.001); end
  def test_output_ab419; assert_in_delta(0.07008496246004059, worksheet.output_ab419, 0.001); end
  def test_output_ac402; assert_in_epsilon(10.041845420711166, worksheet.output_ac402, 0.001); end
  def test_output_ac419; assert_in_delta(0.0677674081781947, worksheet.output_ac419, 0.001); end
  def test_output_ad402; assert_in_epsilon(9.504779986629426, worksheet.output_ad402, 0.001); end
  def test_output_ad419; assert_in_delta(0.06414302132846773, worksheet.output_ad419, 0.001); end
  def test_output_ae402; assert_in_epsilon(9.019740960929646, worksheet.output_ae402, 0.001); end
  def test_output_ae419; assert_in_delta(0.060869734770087, worksheet.output_ae419, 0.001); end
  def test_output_af402; assert_in_epsilon(8.580293946445199, worksheet.output_af402, 0.001); end
  def test_output_af419; assert_in_delta(0.057904125964574484, worksheet.output_af419, 0.001); end
  def test_output_ag402; assert_in_epsilon(8.180858910819666, worksheet.output_ag402, 0.001); end
  def test_output_ag419; assert_in_delta(0.05520853805559527, worksheet.output_ag419, 0.001); end
  def test_output_ah402; assert_in_epsilon(7.977783926169814, worksheet.output_ah402, 0.001); end
  def test_output_ah419; assert_in_delta(0.05383808623135553, worksheet.output_ah419, 0.001); end
  def test_output_ai402; assert_in_epsilon(7.785302533779535, worksheet.output_ai402, 0.001); end
  def test_output_ai419; assert_in_delta(0.05253912527962486, worksheet.output_ai419, 0.001); end
  def test_output_aj402; assert_in_epsilon(7.601684835375312, worksheet.output_aj402, 0.001); end
  def test_output_aj419; assert_in_delta(0.05129998097943124, worksheet.output_aj419, 0.001); end
  def test_output_ak402; assert_in_epsilon(7.426522661262904, worksheet.output_ak402, 0.001); end
  def test_output_ak419; assert_in_delta(0.05011789879700954, worksheet.output_ak419, 0.001); end
  def test_output_am419; assert_in_delta(-0.007514205339859137, worksheet.output_am419, 0.001); end
  def test_output_an419; assert_in_delta(-0.26044244358255064, worksheet.output_an419, 0.001); end
  def test_output_c420; assert_in_epsilon(6, worksheet.output_c420, 0.001); end
  def test_output_e420; assert_equal("Waste", worksheet.output_e420); end
  def test_output_f420; assert_equal("%", worksheet.output_f420); end
  def test_output_g420; assert_equal("NIR", worksheet.output_g420); end
  def test_output_h420; assert_in_delta(0.023217875503528322, worksheet.output_h420, 0.001); end
  def test_output_m420; assert_in_delta(0.02070219699065272, worksheet.output_m420, 0.001); end
  def test_output_r420; assert_in_delta(0.016816000454319704, worksheet.output_r420, 0.001); end
  def test_output_w420; assert_in_delta(0.01099019833398478, worksheet.output_w420, 0.001); end
  def test_output_ab420; assert_in_delta(0.007921408108288964, worksheet.output_ab420, 0.001); end
  def test_output_ac403; assert_in_epsilon(1.117281696428572, worksheet.output_ac403, 0.001); end
  def test_output_ac420; assert_in_delta(0.007539977125692368, worksheet.output_ac420, 0.001); end
  def test_output_ad403; assert_in_delta(0.9776214843750003, worksheet.output_ad403, 0.001); end
  def test_output_ad420; assert_in_delta(0.006597479984980822, worksheet.output_ad420, 0.001); end
  def test_output_ae403; assert_in_delta(0.8379612723214289, worksheet.output_ae403, 0.001); end
  def test_output_ae420; assert_in_delta(0.005654982844269275, worksheet.output_ae420, 0.001); end
  def test_output_af403; assert_in_delta(0.6565671540178576, worksheet.output_af403, 0.001); end
  def test_output_af420; assert_in_delta(0.004430844377563891, worksheet.output_af420, 0.001); end
  def test_output_ag403; assert_in_delta(0.4936851607142859, worksheet.output_ag403, 0.001); end
  def test_output_ag420; assert_in_delta(0.0033316350128872346, worksheet.output_ag420, 0.001); end
  def test_output_ah403; assert_in_delta(0.34522352678571444, worksheet.output_ah403, 0.001); end
  def test_output_ah420; assert_in_delta(0.002329741464069122, worksheet.output_ah420, 0.001); end
  def test_output_ai403; assert_in_delta(0.21345545535714294, worksheet.output_ai403, 0.001); end
  def test_output_ai420; assert_in_delta(0.0014405044456485452, worksheet.output_ai420, 0.001); end
  def test_output_aj403; assert_in_delta(0.09883558705357151, worksheet.output_aj403, 0.001); end
  def test_output_aj420; assert_in_delta(0.0006669921005333035, worksheet.output_aj420, 0.001); end
  def test_output_ak403; assert_in_delta(0, (worksheet.output_ak403||0), 0.001); end
  def test_output_ak420; assert_in_delta(0, (worksheet.output_ak420||0), 0.001); end
  def test_output_am420; assert_in_delta(-1, worksheet.output_am420, 0.001); end
  def test_output_an420; assert_in_delta(-1, worksheet.output_an420, 0.001); end
  def test_output_c421; assert_in_epsilon(7, worksheet.output_c421, 0.001); end
  def test_output_e421; assert_equal("Other", worksheet.output_e421); end
  def test_output_f421; assert_equal("%", worksheet.output_f421); end
  def test_output_g421; assert_equal("NIR", worksheet.output_g421); end
  def test_output_h421; assert_in_delta(0, (worksheet.output_h421||0), 0.001); end
  def test_output_m421; assert_in_delta(0, (worksheet.output_m421||0), 0.001); end
  def test_output_r421; assert_in_delta(0, (worksheet.output_r421||0), 0.001); end
  def test_output_w421; assert_in_delta(0, (worksheet.output_w421||0), 0.001); end
  def test_output_ab421; assert_in_delta(0, (worksheet.output_ab421||0), 0.001); end
  def test_output_ac404; assert_in_delta(0, (worksheet.output_ac404||0), 0.001); end
  def test_output_ac421; assert_in_delta(0, (worksheet.output_ac421||0), 0.001); end
  def test_output_ad404; assert_in_delta(0, (worksheet.output_ad404||0), 0.001); end
  def test_output_ad421; assert_in_delta(0, (worksheet.output_ad421||0), 0.001); end
  def test_output_ae404; assert_in_delta(0, (worksheet.output_ae404||0), 0.001); end
  def test_output_ae421; assert_in_delta(0, (worksheet.output_ae421||0), 0.001); end
  def test_output_af404; assert_in_delta(0, (worksheet.output_af404||0), 0.001); end
  def test_output_af421; assert_in_delta(0, (worksheet.output_af421||0), 0.001); end
  def test_output_ag404; assert_in_delta(0, (worksheet.output_ag404||0), 0.001); end
  def test_output_ag421; assert_in_delta(0, (worksheet.output_ag421||0), 0.001); end
  def test_output_ah404; assert_in_delta(0, (worksheet.output_ah404||0), 0.001); end
  def test_output_ah421; assert_in_delta(0, (worksheet.output_ah421||0), 0.001); end
  def test_output_ai404; assert_in_delta(0, (worksheet.output_ai404||0), 0.001); end
  def test_output_ai421; assert_in_delta(0, (worksheet.output_ai421||0), 0.001); end
  def test_output_aj404; assert_in_delta(0, (worksheet.output_aj404||0), 0.001); end
  def test_output_aj421; assert_in_delta(0, (worksheet.output_aj421||0), 0.001); end
  def test_output_ak404; assert_in_delta(0, (worksheet.output_ak404||0), 0.001); end
  def test_output_ak421; assert_in_delta(0, (worksheet.output_ak421||0), 0.001); end
  def test_output_am421; assert_equal("", worksheet.output_am421); end
  def test_output_an421; assert_equal("", worksheet.output_an421); end
  def test_output_c422; assert_equal("X3", worksheet.output_c422); end
  def test_output_e422; assert_equal("Carbon capture", worksheet.output_e422); end
  def test_output_f422; assert_equal("%", worksheet.output_f422); end
  def test_output_g422; assert_equal("NIR", worksheet.output_g422); end
  def test_output_h422; assert_in_delta(0, (worksheet.output_h422||0), 0.001); end
  def test_output_m422; assert_in_delta(0, (worksheet.output_m422||0), 0.001); end
  def test_output_r422; assert_in_delta(0, (worksheet.output_r422||0), 0.001); end
  def test_output_w422; assert_in_delta(0, (worksheet.output_w422||0), 0.001); end
  def test_output_ab422; assert_in_delta(0, (worksheet.output_ab422||0), 0.001); end
  def test_output_ac422; assert_in_delta(0, (worksheet.output_ac422||0), 0.001); end
  def test_output_ad422; assert_in_delta(3.595753516616222e-05, worksheet.output_ad422, 0.001); end
  def test_output_ae422; assert_in_delta(1.0936139385736795e-05, worksheet.output_ae422, 0.001); end
  def test_output_af422; assert_in_delta(-7.464199571847823e-05, worksheet.output_af422, 0.001); end
  def test_output_ag422; assert_in_delta(-0.02652435569670773, worksheet.output_ag422, 0.001); end
  def test_output_ah422; assert_in_delta(-0.034257712971360786, worksheet.output_ah422, 0.001); end
  def test_output_ai422; assert_in_delta(-0.03964535809272647, worksheet.output_ai422, 0.001); end
  def test_output_aj422; assert_in_delta(-0.0428840764182073, worksheet.output_aj422, 0.001); end
  def test_output_ak422; assert_in_delta(-0.06384957982708891, worksheet.output_ak422, 0.001); end
  def test_output_am422; assert_equal("", worksheet.output_am422); end
  def test_output_an422; assert_equal("", worksheet.output_an422); end
  def test_output_c423; assert_equal("X2", worksheet.output_c423); end
  def test_output_e423; assert_equal("Bioenergy credit", worksheet.output_e423); end
  def test_output_f423; assert_equal("%", worksheet.output_f423); end
  def test_output_g423; assert_equal("NIR", worksheet.output_g423); end
  def test_output_h423; assert_in_delta(-0.014494079013409137, worksheet.output_h423, 0.001); end
  def test_output_m423; assert_in_delta(-0.016569795120881217, worksheet.output_m423, 0.001); end
  def test_output_r423; assert_in_delta(-0.01892763455642655, worksheet.output_r423, 0.001); end
  def test_output_w423; assert_in_delta(-0.03128385938177295, worksheet.output_w423, 0.001); end
  def test_output_ab423; assert_in_delta(-0.06920153544249202, worksheet.output_ab423, 0.001); end
  def test_output_ac423; assert_in_delta(-0.0701723822783459, worksheet.output_ac423, 0.001); end
  def test_output_ad423; assert_in_delta(-0.08193137148160898, worksheet.output_ad423, 0.001); end
  def test_output_ae423; assert_in_delta(-0.1001270862301723, worksheet.output_ae423, 0.001); end
  def test_output_af423; assert_in_delta(-0.1165003462874037, worksheet.output_af423, 0.001); end
  def test_output_ag423; assert_in_delta(-0.12967266962872062, worksheet.output_ag423, 0.001); end
  def test_output_ah423; assert_in_delta(-0.14277828409952179, worksheet.output_ah423, 0.001); end
  def test_output_ai423; assert_in_delta(-0.15576601534738624, worksheet.output_ai423, 0.001); end
  def test_output_aj423; assert_in_delta(-0.1655695881322908, worksheet.output_aj423, 0.001); end
  def test_output_ak423; assert_in_delta(-0.1734344439742558, worksheet.output_ak423, 0.001); end
  def test_output_am423; assert_in_delta(0.022878919410198817, worksheet.output_am423, 0.001); end
  def test_output_an423; assert_in_epsilon(1.4715484688308065, worksheet.output_an423, 0.001); end
  def test_output_b424; assert_equal("REF", worksheet.output_b424); end
  def test_output_e424; assert_equal("Total emissions net biomass excluding int'l aviation", worksheet.output_e424); end
  def test_output_f424; assert_equal("%", worksheet.output_f424); end
  def test_output_g424; assert_equal("NIR", worksheet.output_g424); end
  def test_output_h424; assert_in_delta(1, worksheet.output_h424, 0.001); end
  def test_output_m424; assert_in_epsilon(1.0505904831816266, worksheet.output_m424, 0.001); end
  def test_output_n424; assert_equal(:ref, worksheet.output_n424); end
  def test_output_o424; assert_equal(:ref, worksheet.output_o424); end
  def test_output_p424; assert_equal(:ref, worksheet.output_p424); end
  def test_output_q424; assert_equal(:ref, worksheet.output_q424); end
  def test_output_r424; assert_in_epsilon(1.0200559036271515, worksheet.output_r424, 0.001); end
  def test_output_s424; assert_equal(:ref, worksheet.output_s424); end
  def test_output_t424; assert_equal(:ref, worksheet.output_t424); end
  def test_output_u424; assert_equal(:ref, worksheet.output_u424); end
  def test_output_v424; assert_equal(:ref, worksheet.output_v424); end
  def test_output_w424; assert_in_epsilon(1.0023857786223564, worksheet.output_w424, 0.001); end
  def test_output_x424; assert_equal(:ref, worksheet.output_x424); end
  def test_output_y424; assert_equal(:ref, worksheet.output_y424); end
  def test_output_z424; assert_equal(:ref, worksheet.output_z424); end
  def test_output_aa424; assert_equal(:ref, worksheet.output_aa424); end
  def test_output_ab424; assert_in_delta(0.9244735194811975, worksheet.output_ab424, 0.001); end
  def test_output_ad424; assert_in_delta(0.7295020231147958, worksheet.output_ad424, 0.001); end
  def test_output_ae424; assert_in_delta(0.6697436226824184, worksheet.output_ae424, 0.001); end
  def test_output_af424; assert_in_delta(0.6469425026249298, worksheet.output_af424, 0.001); end
  def test_output_ag424; assert_in_delta(0.5226159645523232, worksheet.output_ag424, 0.001); end
  def test_output_ah424; assert_in_delta(0.4395267586249366, worksheet.output_ah424, 0.001); end
  def test_output_ai424; assert_in_delta(0.3689072939760055, worksheet.output_ai424, 0.001); end
  def test_output_aj424; assert_in_delta(0.29945808921768924, worksheet.output_aj424, 0.001); end
  def test_output_am424; assert_in_delta(-0.034425014210932026, worksheet.output_am424, 0.001); end
  def test_output_an424; assert_in_delta(-0.7537136992498552, worksheet.output_an424, 0.001); end
  def test_output_b425; assert_equal("REF", worksheet.output_b425); end
  def test_output_e425; assert_equal("Reference scenario", worksheet.output_e425); end
  def test_output_f425; assert_equal("%", worksheet.output_f425); end
  def test_output_g425; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g425); end
  def test_output_ac425; assert_in_delta(0.8631012314385033, worksheet.output_ac425, 0.001); end
  def test_output_ad425; assert_in_delta(0.8122273045185132, worksheet.output_ad425, 0.001); end
  def test_output_ae425; assert_in_delta(0.8217574071875723, worksheet.output_ae425, 0.001); end
  def test_output_af425; assert_in_delta(0.8676519862666482, worksheet.output_af425, 0.001); end
  def test_output_ag425; assert_in_delta(0.8621901118840615, worksheet.output_ag425, 0.001); end
  def test_output_ah425; assert_in_delta(0.8553837041721625, worksheet.output_ah425, 0.001); end
  def test_output_ai425; assert_in_delta(0.8597612812467186, worksheet.output_ai425, 0.001); end
  def test_output_aj425; assert_in_delta(0.862979406353803, worksheet.output_aj425, 0.001); end
  def test_output_ak425; assert_in_delta(0.8670504364201408, worksheet.output_ak425, 0.001); end
  def test_output_am425; assert_in_delta(0.00011413557788575446, worksheet.output_am425, 0.001); end
  def test_output_an425; assert_in_delta(0.004575598826403571, worksheet.output_an425, 0.001); end
  def test_output_ap425; assert_in_epsilon(1990, worksheet.output_ap425, 0.001); end
  def test_output_aq425; assert_in_epsilon(2010, worksheet.output_aq425, 0.001); end
  def test_output_ar425; assert_in_epsilon(2020, worksheet.output_ar425, 0.001); end
  def test_output_as425; assert_in_epsilon(2030, worksheet.output_as425, 0.001); end
  def test_output_at425; assert_in_epsilon(2040, worksheet.output_at425, 0.001); end
  def test_output_au425; assert_in_epsilon(2050, worksheet.output_au425, 0.001); end
  def test_output_h426; assert_in_delta(0, (worksheet.output_h426||0), 0.001); end
  def test_output_ad426; assert_in_delta(-0.27049797688520416, worksheet.output_ad426, 0.001); end
  def test_output_ae426; assert_in_delta(-0.3302563773175816, worksheet.output_ae426, 0.001); end
  def test_output_af426; assert_in_delta(-0.3530574973750702, worksheet.output_af426, 0.001); end
  def test_output_ag426; assert_in_delta(-0.4773840354476768, worksheet.output_ag426, 0.001); end
  def test_output_ah426; assert_in_delta(-0.5604732413750634, worksheet.output_ah426, 0.001); end
  def test_output_ai426; assert_in_delta(-0.6310927060239945, worksheet.output_ai426, 0.001); end
  def test_output_aj426; assert_in_delta(-0.7005419107823108, worksheet.output_aj426, 0.001); end
  def test_output_am426; assert_in_delta(0.043688647351598275, worksheet.output_am426, 0.001); end
  def test_output_an426; assert_in_epsilon(4.531442209940887, worksheet.output_an426, 0.001); end
  def test_output_ap426; assert_in_delta(0, (worksheet.output_ap426||0), 0.001); end
  def test_output_ac424; assert_in_delta(0.8573904512562879, worksheet.output_ac424, 0.001); end
  def test_output_ac426; assert_in_delta(-0.14260954874371212, worksheet.output_ac426, 0.001); end
  def test_output_aq426; assert_in_delta(-0.14260954874371212, worksheet.output_aq426, 0.001); end
  def test_output_ar426; assert_in_delta(-0.3302563773175816, worksheet.output_ar426, 0.001); end
  def test_output_as426; assert_in_delta(-0.4773840354476768, worksheet.output_as426, 0.001); end
  def test_output_at426; assert_in_delta(-0.6310927060239945, worksheet.output_at426, 0.001); end
  def test_output_ak426; assert_in_delta(-0.7888364774615916, worksheet.output_ak426, 0.001); end
  def test_output_au426; assert_in_delta(-0.7888364774615916, worksheet.output_au426, 0.001); end
  def test_output_e427; assert_equal("TARGETS", worksheet.output_e427); end
  def test_output_f427; assert_equal("%", worksheet.output_f427); end
  def test_output_h427; assert_in_delta(1, worksheet.output_h427, 0.001); end
  def test_output_m427; assert_in_delta(0.98125, worksheet.output_m427, 0.001); end
  def test_output_r427; assert_in_delta(0.9624999999999999, worksheet.output_r427, 0.001); end
  def test_output_w427; assert_in_delta(0.9437499999999999, worksheet.output_w427, 0.001); end
  def test_output_ab427; assert_in_delta(0.925, worksheet.output_ab427, 0.001); end
  def test_output_ac427; assert_in_delta(0.925, worksheet.output_ac427, 0.001); end
  def test_output_ad427; assert_in_delta(0.775, worksheet.output_ad427, 0.001); end
  def test_output_ae427; assert_in_delta(0.7, worksheet.output_ae427, 0.001); end
  def test_output_af427; assert_in_delta(0.6166666666666666, worksheet.output_af427, 0.001); end
  def test_output_ag427; assert_in_delta(0.5333333333333332, worksheet.output_ag427, 0.001); end
  def test_output_ah427; assert_in_delta(0.4499999999999999, worksheet.output_ah427, 0.001); end
  def test_output_ai427; assert_in_delta(0.3666666666666666, worksheet.output_ai427, 0.001); end
  def test_output_aj427; assert_in_delta(0.28333333333333327, worksheet.output_aj427, 0.001); end
  def test_output_ak427; assert_in_delta(0.2, worksheet.output_ak427, 0.001); end
  def test_output_am427; assert_in_delta(-0.03756323075984913, worksheet.output_am427, 0.001); end
  def test_output_an427; assert_in_delta(-0.7837837837837838, worksheet.output_an427, 0.001); end
  def test_output_am428; assert_equal("", worksheet.output_am428); end
  def test_output_an428; assert_equal("", worksheet.output_an428); end
  def test_output_c429; assert_in_epsilon(5, worksheet.output_c429, 0.001); end
  def test_output_e429; assert_equal("Land Use, Land-Use Change and Forestry", worksheet.output_e429); end
  def test_output_f429; assert_equal("%", worksheet.output_f429); end
  def test_output_g429; assert_equal("NIR", worksheet.output_g429); end
  def test_output_h429; assert_in_delta(-0.008677042719210793, worksheet.output_h429, 0.001); end
  def test_output_m429; assert_in_delta(-0.006960052906064261, worksheet.output_m429, 0.001); end
  def test_output_r429; assert_in_delta(-0.006671276696049282, worksheet.output_r429, 0.001); end
  def test_output_w429; assert_in_delta(-0.006675058136813012, worksheet.output_w429, 0.001); end
  def test_output_ab429; assert_in_delta(-0.007275123762930818, worksheet.output_ab429, 0.001); end
  def test_output_ac411; assert_in_delta(0, (worksheet.output_ac411||0), 0.001); end
  def test_output_ac429; assert_in_delta(0, (worksheet.output_ac429||0), 0.001); end
  def test_output_ad429; assert_in_delta(0, (worksheet.output_ad429||0), 0.001); end
  def test_output_ae429; assert_in_delta(0, (worksheet.output_ae429||0), 0.001); end
  def test_output_af429; assert_in_delta(0, (worksheet.output_af429||0), 0.001); end
  def test_output_ag429; assert_in_delta(0, (worksheet.output_ag429||0), 0.001); end
  def test_output_ah429; assert_in_delta(0, (worksheet.output_ah429||0), 0.001); end
  def test_output_ai429; assert_in_delta(0, (worksheet.output_ai429||0), 0.001); end
  def test_output_aj429; assert_in_delta(0, (worksheet.output_aj429||0), 0.001); end
  def test_output_ak411; assert_in_delta(0, (worksheet.output_ak411||0), 0.001); end
  def test_output_ak429; assert_in_delta(0, (worksheet.output_ak429||0), 0.001); end
  def test_output_am429; assert_equal("", worksheet.output_am429); end
  def test_output_an429; assert_equal("", worksheet.output_an429); end
  def test_output_c430; assert_equal("X1", worksheet.output_c430); end
  def test_output_e430; assert_equal("International Aviation and Shipping", worksheet.output_e430); end
  def test_output_f430; assert_equal("%", worksheet.output_f430); end
  def test_output_g430; assert_equal("NIR", worksheet.output_g430); end
  def test_output_h430; assert_in_delta(0.11456800089430974, worksheet.output_h430, 0.001); end
  def test_output_m430; assert_in_delta(0.11066115200984038, worksheet.output_m430, 0.001); end
  def test_output_r430; assert_in_delta(0.1446524962919053, worksheet.output_r430, 0.001); end
  def test_output_w430; assert_in_delta(0.19902219718289038, worksheet.output_w430, 0.001); end
  def test_output_ab430; assert_in_delta(0.1758978977764335, worksheet.output_ab430, 0.001); end
  def test_output_ac412; assert_in_epsilon(4.4020670492089, worksheet.output_ac412, 0.001); end
  def test_output_ac430; assert_in_delta(0.029707355775089567, worksheet.output_ac430, 0.001); end
  def test_output_ad430; assert_in_delta(0.02842274918655116, worksheet.output_ad430, 0.001); end
  def test_output_ae430; assert_in_delta(0.027193691604117838, worksheet.output_ae430, 0.001); end
  def test_output_af430; assert_in_delta(0.026017780975591827, worksheet.output_af430, 0.001); end
  def test_output_ag430; assert_in_delta(0.024892719118406265, worksheet.output_ag430, 0.001); end
  def test_output_ah430; assert_in_delta(0.02381630722809072, worksheet.output_ah430, 0.001); end
  def test_output_ai430; assert_in_delta(0.022786441580959826, worksheet.output_ai430, 0.001); end
  def test_output_aj430; assert_in_delta(0.02180110942262645, worksheet.output_aj430, 0.001); end
  def test_output_ak412; assert_in_epsilon(3.090817309839965, worksheet.output_ak412, 0.001); end
  def test_output_ak430; assert_in_delta(0.020858385034303865, worksheet.output_ak430, 0.001); end
  def test_output_am430; assert_in_delta(-0.008801999999999977, worksheet.output_am430, 0.001); end
  def test_output_an430; assert_in_delta(-0.2978713692251872, worksheet.output_an430, 0.001); end
  def test_output_b431; assert_equal("Electricity Generation Emissions", worksheet.output_b431); end
  def test_output_am431; assert_equal("", worksheet.output_am431); end
  def test_output_an431; assert_equal("", worksheet.output_an431); end
  def test_output_c432; assert_equal("Emissions from Electricity Generation, exlcuding CHP", worksheet.output_c432); end
  def test_output_g432; assert_equal("Note: Emissions from CHP are excluded, while emissions from district heating are included.", worksheet.output_g432); end
  def test_output_am432; assert_equal("", worksheet.output_am432); end
  def test_output_an432; assert_equal("", worksheet.output_an432); end
  def test_output_e433; assert_equal("Power Generation", worksheet.output_e433); end
  def test_output_am433; assert_in_delta(-0.1324634682414082, worksheet.output_am433, 0.001); end
  def test_output_an433; assert_in_delta(-0.996599749795199, worksheet.output_an433, 0.001); end
  def test_output_e434; assert_equal("CCS in Power", worksheet.output_e434); end
  def test_output_ac434; assert_in_delta(0, (worksheet.output_ac434||0), 0.001); end
  def test_output_ad434; assert_in_delta(0, (worksheet.output_ad434||0), 0.001); end
  def test_output_ae434; assert_in_delta(0, (worksheet.output_ae434||0), 0.001); end
  def test_output_af434; assert_in_delta(0, (worksheet.output_af434||0), 0.001); end
  def test_output_ag434; assert_in_delta(0, (worksheet.output_ag434||0), 0.001); end
  def test_output_ah434; assert_in_delta(0, (worksheet.output_ah434||0), 0.001); end
  def test_output_ai434; assert_in_delta(0, (worksheet.output_ai434||0), 0.001); end
  def test_output_aj434; assert_in_delta(0, (worksheet.output_aj434||0), 0.001); end
  def test_output_ak434; assert_in_delta(0, (worksheet.output_ak434||0), 0.001); end
  def test_output_am434; assert_equal("", worksheet.output_am434); end
  def test_output_an434; assert_equal("", worksheet.output_an434); end
  def test_output_e435; assert_equal("Bioenergy in Gas Power", worksheet.output_e435); end
  def test_output_am435; assert_in_delta(-1, worksheet.output_am435, 0.001); end
  def test_output_an435; assert_in_delta(-1, worksheet.output_an435, 0.001); end
  def test_output_e436; assert_equal("Bioenergy in Solid BM Power", worksheet.output_e436); end
  def test_output_am436; assert_in_delta(0.032741196998497646, worksheet.output_am436, 0.001); end
  def test_output_an436; assert_in_epsilon(2.6279397911586835, worksheet.output_an436, 0.001); end
  def test_output_e437; assert_equal("Bioenergy in Solid HC CCS Power", worksheet.output_e437); end
  def test_output_am437; assert_equal("", worksheet.output_am437); end
  def test_output_an437; assert_equal("", worksheet.output_an437); end
  def test_output_e438; assert_equal("Bioenergy in Gas CCS Power", worksheet.output_e438); end
  def test_output_am438; assert_equal("", worksheet.output_am438); end
  def test_output_an438; assert_equal("", worksheet.output_an438); end
  def test_output_e439; assert_equal("Total Emissions from Power", worksheet.output_e439); end
  def test_output_am439; assert_equal("", worksheet.output_am439); end
  def test_output_an439; assert_in_epsilon(-1.6225392727883734, worksheet.output_an439, 0.001); end
  def test_output_c440; assert_equal("Emissions reclassified", worksheet.output_c440); end
  def test_output_am440; assert_equal("", worksheet.output_am440); end
  def test_output_an440; assert_equal("", worksheet.output_an440); end
  def test_output_c441; assert_in_delta(1, worksheet.output_c441, 0.001); end
  def test_output_e441; assert_equal("Fuel Combustion", worksheet.output_e441); end
  def test_output_ac433; assert_in_epsilon(19.96312356237269, worksheet.output_ac433, 0.001); end
  def test_output_ac441; assert_in_epsilon(19.96312356237269, worksheet.output_ac441, 0.001); end
  def test_output_ad433; assert_in_epsilon(9.79640138271382, worksheet.output_ad433, 0.001); end
  def test_output_ad441; assert_in_epsilon(9.79640138271382, worksheet.output_ad441, 0.001); end
  def test_output_ae433; assert_in_epsilon(10.678044156303844, worksheet.output_ae433, 0.001); end
  def test_output_ae441; assert_in_epsilon(10.678044156303844, worksheet.output_ae441, 0.001); end
  def test_output_af433; assert_in_epsilon(16.64715622421413, worksheet.output_af433, 0.001); end
  def test_output_af441; assert_in_epsilon(16.64715622421413, worksheet.output_af441, 0.001); end
  def test_output_ag433; assert_in_epsilon(13.258267255815452, worksheet.output_ag433, 0.001); end
  def test_output_ag441; assert_in_epsilon(13.258267255815452, worksheet.output_ag441, 0.001); end
  def test_output_ah433; assert_in_epsilon(10.306853100658273, worksheet.output_ah433, 0.001); end
  def test_output_ah441; assert_in_epsilon(10.306853100658273, worksheet.output_ah441, 0.001); end
  def test_output_ai433; assert_in_epsilon(7.886934621979325, worksheet.output_ai433, 0.001); end
  def test_output_ai441; assert_in_epsilon(7.886934621979325, worksheet.output_ai441, 0.001); end
  def test_output_aj433; assert_in_epsilon(4.370429166846547, worksheet.output_aj433, 0.001); end
  def test_output_aj441; assert_in_epsilon(4.370429166846547, worksheet.output_aj441, 0.001); end
  def test_output_ak433; assert_in_delta(0.06787961498142359, worksheet.output_ak433, 0.001); end
  def test_output_ak441; assert_in_delta(0.06787961498142359, worksheet.output_ak441, 0.001); end
  def test_output_am441; assert_in_delta(-0.1324634682414082, worksheet.output_am441, 0.001); end
  def test_output_an441; assert_in_delta(-0.996599749795199, worksheet.output_an441, 0.001); end
  def test_output_c442; assert_equal("X2", worksheet.output_c442); end
  def test_output_e442; assert_equal("Bioenergy credit", worksheet.output_e442); end
  def test_output_ac435; assert_in_delta(-0.2744157206192551, worksheet.output_ac435, 0.001); end
  def test_output_ac471; assert_in_epsilon(25.570105738754286, worksheet.output_ac471, 0.001); end
  def test_output_ac436; assert_in_epsilon(-2.899643379371053, worksheet.output_ac436, 0.001); end
  def test_output_ac437; assert_in_delta(0, (worksheet.output_ac437||0), 0.001); end
  def test_output_ac438; assert_in_delta(0, (worksheet.output_ac438||0), 0.001); end
  def test_output_ac442; assert_in_epsilon(-3.174059099990308, worksheet.output_ac442, 0.001); end
  def test_output_ad435; assert_in_delta(-0.06224826886233337, worksheet.output_ad435, 0.001); end
  def test_output_ad436; assert_in_epsilon(-4.093351066754966, worksheet.output_ad436, 0.001); end
  def test_output_ad437; assert_in_delta(0, (worksheet.output_ad437||0), 0.001); end
  def test_output_ad438; assert_in_delta(0, (worksheet.output_ad438||0), 0.001); end
  def test_output_ad442; assert_in_epsilon(-4.1555993356173, worksheet.output_ad442, 0.001); end
  def test_output_ae435; assert_in_delta(-0.119706223072479, worksheet.output_ae435, 0.001); end
  def test_output_ae436; assert_in_epsilon(-5.155811144025034, worksheet.output_ae436, 0.001); end
  def test_output_ae437; assert_in_delta(0, (worksheet.output_ae437||0), 0.001); end
  def test_output_ae438; assert_in_delta(0, (worksheet.output_ae438||0), 0.001); end
  def test_output_ae442; assert_in_epsilon(-5.275517367097512, worksheet.output_ae442, 0.001); end
  def test_output_af435; assert_in_delta(-0.6945767761493652, worksheet.output_af435, 0.001); end
  def test_output_af436; assert_in_epsilon(-4.604277316152644, worksheet.output_af436, 0.001); end
  def test_output_af437; assert_in_delta(0, (worksheet.output_af437||0), 0.001); end
  def test_output_af438; assert_in_delta(0, (worksheet.output_af438||0), 0.001); end
  def test_output_af442; assert_in_epsilon(-5.298854092302009, worksheet.output_af442, 0.001); end
  def test_output_ag435; assert_in_delta(-0.6962207822002537, worksheet.output_ag435, 0.001); end
  def test_output_ag436; assert_in_epsilon(-6.491836207321783, worksheet.output_ag436, 0.001); end
  def test_output_ag437; assert_in_delta(0, (worksheet.output_ag437||0), 0.001); end
  def test_output_ag438; assert_in_delta(0, (worksheet.output_ag438||0), 0.001); end
  def test_output_ag442; assert_in_epsilon(-7.188056989522037, worksheet.output_ag442, 0.001); end
  def test_output_ah435; assert_in_delta(-0.6804190505183272, worksheet.output_ah435, 0.001); end
  def test_output_ah436; assert_in_epsilon(-7.613800815526957, worksheet.output_ah436, 0.001); end
  def test_output_ah437; assert_in_delta(0, (worksheet.output_ah437||0), 0.001); end
  def test_output_ah438; assert_in_delta(0, (worksheet.output_ah438||0), 0.001); end
  def test_output_ah442; assert_in_epsilon(-8.294219866045285, worksheet.output_ah442, 0.001); end
  def test_output_ai435; assert_in_delta(-0.6459308385510628, worksheet.output_ai435, 0.001); end
  def test_output_ai436; assert_in_epsilon(-8.783260827159431, worksheet.output_ai436, 0.001); end
  def test_output_ai437; assert_in_delta(0, (worksheet.output_ai437||0), 0.001); end
  def test_output_ai438; assert_in_delta(0, (worksheet.output_ai438||0), 0.001); end
  def test_output_ai442; assert_in_epsilon(-9.429191665710494, worksheet.output_ai442, 0.001); end
  def test_output_aj435; assert_in_delta(-0.46940955127857814, worksheet.output_aj435, 0.001); end
  def test_output_aj436; assert_in_epsilon(-9.761774476014601, worksheet.output_aj436, 0.001); end
  def test_output_aj437; assert_in_delta(0, (worksheet.output_aj437||0), 0.001); end
  def test_output_aj438; assert_in_delta(0, (worksheet.output_aj438||0), 0.001); end
  def test_output_aj442; assert_in_epsilon(-10.23118402729318, worksheet.output_aj442, 0.001); end
  def test_output_ak484; assert_in_delta(0, (worksheet.output_ak484||0), 0.001); end
  def test_output_ak435; assert_in_delta(0, (worksheet.output_ak435||0), 0.001); end
  def test_output_ak471; assert_in_epsilon(34.154666666666664, worksheet.output_ak471, 0.001); end
  def test_output_ak436; assert_in_epsilon(-10.519731596190077, worksheet.output_ak436, 0.001); end
  def test_output_ak470; assert_in_delta(0, (worksheet.output_ak470||0), 0.001); end
  def test_output_ak437; assert_in_delta(0, (worksheet.output_ak437||0), 0.001); end
  def test_output_ak485; assert_in_delta(0, (worksheet.output_ak485||0), 0.001); end
  def test_output_ak438; assert_in_delta(0, (worksheet.output_ak438||0), 0.001); end
  def test_output_ak442; assert_in_epsilon(-10.519731596190077, worksheet.output_ak442, 0.001); end
  def test_output_am442; assert_in_delta(0.030409232338555192, worksheet.output_am442, 0.001); end
  def test_output_an442; assert_in_epsilon(2.314283466310441, worksheet.output_an442, 0.001); end
  def test_output_c443; assert_equal("X3", worksheet.output_c443); end
  def test_output_e443; assert_equal("Carbon capture", worksheet.output_e443); end
  def test_output_ac443; assert_in_delta(0, (worksheet.output_ac443||0), 0.001); end
  def test_output_ad443; assert_in_delta(0, (worksheet.output_ad443||0), 0.001); end
  def test_output_ae443; assert_in_delta(0, (worksheet.output_ae443||0), 0.001); end
  def test_output_af443; assert_in_delta(0, (worksheet.output_af443||0), 0.001); end
  def test_output_ag443; assert_in_delta(0, (worksheet.output_ag443||0), 0.001); end
  def test_output_ah443; assert_in_delta(0, (worksheet.output_ah443||0), 0.001); end
  def test_output_ai443; assert_in_delta(0, (worksheet.output_ai443||0), 0.001); end
  def test_output_aj443; assert_in_delta(0, (worksheet.output_aj443||0), 0.001); end
  def test_output_ak443; assert_in_delta(0, (worksheet.output_ak443||0), 0.001); end
  def test_output_am443; assert_equal("", worksheet.output_am443); end
  def test_output_an443; assert_equal("", worksheet.output_an443); end
  def test_output_e444; assert_equal("Total", worksheet.output_e444); end
  def test_output_ac439; assert_in_epsilon(16.78906446238238, worksheet.output_ac439, 0.001); end
  def test_output_ac444; assert_in_epsilon(16.78906446238238, worksheet.output_ac444, 0.001); end
  def test_output_ad439; assert_in_epsilon(5.6408020470965194, worksheet.output_ad439, 0.001); end
  def test_output_ad444; assert_in_epsilon(5.6408020470965194, worksheet.output_ad444, 0.001); end
  def test_output_ae439; assert_in_epsilon(5.402526789206332, worksheet.output_ae439, 0.001); end
  def test_output_ae444; assert_in_epsilon(5.402526789206332, worksheet.output_ae444, 0.001); end
  def test_output_af439; assert_in_epsilon(11.34830213191212, worksheet.output_af439, 0.001); end
  def test_output_af444; assert_in_epsilon(11.34830213191212, worksheet.output_af444, 0.001); end
  def test_output_ag439; assert_in_epsilon(6.070210266293416, worksheet.output_ag439, 0.001); end
  def test_output_ag444; assert_in_epsilon(6.070210266293416, worksheet.output_ag444, 0.001); end
  def test_output_ah439; assert_in_epsilon(2.012633234612988, worksheet.output_ah439, 0.001); end
  def test_output_ah444; assert_in_epsilon(2.012633234612988, worksheet.output_ah444, 0.001); end
  def test_output_ai439; assert_in_epsilon(-1.5422570437311691, worksheet.output_ai439, 0.001); end
  def test_output_ai444; assert_in_epsilon(-1.5422570437311691, worksheet.output_ai444, 0.001); end
  def test_output_aj439; assert_in_epsilon(-5.860754860446632, worksheet.output_aj439, 0.001); end
  def test_output_aj444; assert_in_epsilon(-5.860754860446632, worksheet.output_aj444, 0.001); end
  def test_output_ak439; assert_in_epsilon(-10.451851981208653, worksheet.output_ak439, 0.001); end
  def test_output_ak444; assert_in_epsilon(-10.451851981208653, worksheet.output_ak444, 0.001); end
  def test_output_am444; assert_equal("", worksheet.output_am444); end
  def test_output_an444; assert_in_epsilon(-1.6225392727883734, worksheet.output_an444, 0.001); end
  def test_output_am445; assert_equal("", worksheet.output_am445); end
  def test_output_an445; assert_equal("", worksheet.output_an445); end
  def test_output_e446; assert_equal("Emissions intensity of electricity production", worksheet.output_e446); end
  def test_output_f446; assert_equal("MtCO2e/TWh", worksheet.output_f446); end
  def test_output_ad446; assert_in_delta(0.06892926547625185, worksheet.output_ad446, 0.001); end
  def test_output_ae446; assert_in_delta(0.06199609729773106, worksheet.output_ae446, 0.001); end
  def test_output_af446; assert_in_delta(0.12434255361165578, worksheet.output_af446, 0.001); end
  def test_output_ag446; assert_in_delta(0.06445989039326513, worksheet.output_ag446, 0.001); end
  def test_output_ah446; assert_in_delta(0.020778654025729218, worksheet.output_ah446, 0.001); end
  def test_output_ai446; assert_in_delta(-0.015513424435483206, worksheet.output_ai446, 0.001); end
  def test_output_aj446; assert_in_delta(-0.057666399023988325, worksheet.output_aj446, 0.001); end
  def test_output_am446; assert_equal("", worksheet.output_am446); end
  def test_output_an446; assert_in_epsilon(-1.6013820976880595, worksheet.output_an446, 0.001); end
  def test_output_e447; assert_equal("Emissions intensity of electricity production", worksheet.output_e447); end
  def test_output_f447; assert_equal("gCO2e/KWh", worksheet.output_f447); end
  def test_output_ac446; assert_in_delta(0.16586301096177192, worksheet.output_ac446, 0.001); end
  def test_output_ac447; assert_in_epsilon(165.86301096177192, worksheet.output_ac447, 0.001); end
  def test_output_ad447; assert_in_epsilon(68.92926547625184, worksheet.output_ad447, 0.001); end
  def test_output_ae447; assert_in_epsilon(61.99609729773106, worksheet.output_ae447, 0.001); end
  def test_output_af447; assert_in_epsilon(124.34255361165577, worksheet.output_af447, 0.001); end
  def test_output_ag447; assert_in_epsilon(64.45989039326514, worksheet.output_ag447, 0.001); end
  def test_output_ah447; assert_in_epsilon(20.778654025729217, worksheet.output_ah447, 0.001); end
  def test_output_ai447; assert_in_epsilon(-15.513424435483206, worksheet.output_ai447, 0.001); end
  def test_output_aj447; assert_in_epsilon(-57.666399023988326, worksheet.output_aj447, 0.001); end
  def test_output_ak446; assert_in_delta(-0.09974704546104798, worksheet.output_ak446, 0.001); end
  def test_output_ak447; assert_in_epsilon(-99.74704546104799, worksheet.output_ak447, 0.001); end
  def test_output_am447; assert_equal("", worksheet.output_am447); end
  def test_output_an447; assert_in_epsilon(-1.6013820976880595, worksheet.output_an447, 0.001); end
  def test_output_am448; assert_equal("", worksheet.output_am448); end
  def test_output_an448; assert_equal("", worksheet.output_an448); end
  def test_output_b449; assert_equal("Bio-energy - Production", worksheet.output_b449); end
  def test_output_am449; assert_equal("", worksheet.output_am449); end
  def test_output_an449; assert_equal("", worksheet.output_an449); end
  def test_output_c450; assert_equal("Domestic", worksheet.output_c450); end
  def test_output_am450; assert_equal("", worksheet.output_am450); end
  def test_output_an450; assert_equal("", worksheet.output_an450); end
  def test_output_c451; assert_equal("V.a", worksheet.output_c451); end
  def test_output_d451; assert_equal("V.03", worksheet.output_d451); end
  def test_output_e451; assert_equal("Solid hydrocarbons / Types of fuel from Biomass", worksheet.output_e451); end
  def test_output_f451; assert_equal("TWh/yr", worksheet.output_f451); end
  def test_output_ad451; assert_in_epsilon(15.505393182977814, worksheet.output_ad451, 0.001); end
  def test_output_ae451; assert_in_epsilon(17.425502258883757, worksheet.output_ae451, 0.001); end
  def test_output_af451; assert_in_epsilon(18.904241293639117, worksheet.output_af451, 0.001); end
  def test_output_ag451; assert_in_epsilon(19.382795591348835, worksheet.output_ag451, 0.001); end
  def test_output_ah451; assert_in_epsilon(19.82924861083978, worksheet.output_ah451, 0.001); end
  def test_output_ai451; assert_in_epsilon(20.243600352111955, worksheet.output_ai451, 0.001); end
  def test_output_aj451; assert_in_epsilon(20.609800176055977, worksheet.output_aj451, 0.001); end
  def test_output_am451; assert_in_delta(0.010967861540540191, worksheet.output_am451, 0.001); end
  def test_output_an451; assert_in_delta(0.5470130852272788, worksheet.output_an451, 0.001); end
  def test_output_c452; assert_equal("V.a", worksheet.output_c452); end
  def test_output_d452; assert_equal("V.04", worksheet.output_d452); end
  def test_output_e452; assert_equal("Liquid hydrocarbons / Types of fuel from Biomass", worksheet.output_e452); end
  def test_output_f452; assert_equal("TWh/yr", worksheet.output_f452); end
  def test_output_ad452; assert_in_delta(0.1271, worksheet.output_ad452, 0.001); end
  def test_output_ae452; assert_in_delta(0.186, worksheet.output_ae452, 0.001); end
  def test_output_af452; assert_in_delta(0.21639999999999998, worksheet.output_af452, 0.001); end
  def test_output_ag452; assert_in_delta(0.24320000000000003, worksheet.output_ag452, 0.001); end
  def test_output_ah452; assert_in_delta(0.27, worksheet.output_ah452, 0.001); end
  def test_output_ai452; assert_in_delta(0.27, worksheet.output_ai452, 0.001); end
  def test_output_aj452; assert_in_delta(0.27, worksheet.output_aj452, 0.001); end
  def test_output_am452; assert_in_delta(0.03499793842321841, worksheet.output_am452, 0.001); end
  def test_output_an452; assert_in_epsilon(2.958944281524927, worksheet.output_an452, 0.001); end
  def test_output_c453; assert_equal("V.a", worksheet.output_c453); end
  def test_output_d453; assert_equal("V.05", worksheet.output_d453); end
  def test_output_e453; assert_equal("Gaseous hydrocarbons / Types of fuel from Biomass", worksheet.output_e453); end
  def test_output_f453; assert_equal("TWh/yr", worksheet.output_f453); end
  def test_output_ad453; assert_in_epsilon(5.140442741403772, worksheet.output_ad453, 0.001); end
  def test_output_ae453; assert_in_epsilon(6.202022822502082, worksheet.output_ae453, 0.001); end
  def test_output_af453; assert_in_epsilon(7.891554856638246, worksheet.output_af453, 0.001); end
  def test_output_ag453; assert_in_epsilon(8.748660262813067, worksheet.output_ag453, 0.001); end
  def test_output_ah453; assert_in_epsilon(9.605459656417695, worksheet.output_ah453, 0.001); end
  def test_output_ai453; assert_in_epsilon(10.458811277937944, worksheet.output_ai453, 0.001); end
  def test_output_aj453; assert_in_epsilon(11.307933917161323, worksheet.output_aj453, 0.001); end
  def test_output_am453; assert_in_delta(0.027678707964417404, worksheet.output_am453, 0.001); end
  def test_output_an453; assert_in_epsilon(1.980535825741819, worksheet.output_an453, 0.001); end
  def test_output_c454; assert_equal("Imports", worksheet.output_c454); end
  def test_output_am454; assert_equal("", worksheet.output_am454); end
  def test_output_an454; assert_equal("", worksheet.output_an454); end
  def test_output_c455; assert_equal("V.b", worksheet.output_c455); end
  def test_output_d455; assert_equal("V.03", worksheet.output_d455); end
  def test_output_e455; assert_equal("Solid hydrocarbons / Bioenergy imports", worksheet.output_e455); end
  def test_output_f455; assert_equal("TWh/yr", worksheet.output_f455); end
  def test_output_ad455; assert_in_epsilon(17, worksheet.output_ad455, 0.001); end
  def test_output_ae455; assert_in_epsilon(20, worksheet.output_ae455, 0.001); end
  def test_output_af455; assert_in_epsilon(24.555555555555554, worksheet.output_af455, 0.001); end
  def test_output_ag455; assert_in_epsilon(29.111111111111107, worksheet.output_ag455, 0.001); end
  def test_output_ah455; assert_in_epsilon(33.666666666666664, worksheet.output_ah455, 0.001); end
  def test_output_ai455; assert_in_epsilon(38.22222222222222, worksheet.output_ai455, 0.001); end
  def test_output_aj455; assert_in_epsilon(41.28685021479799, worksheet.output_aj455, 0.001); end
  def test_output_am455; assert_in_delta(0.02869719680390781, worksheet.output_am455, 0.001); end
  def test_output_an455; assert_in_epsilon(2.1010034928773575, worksheet.output_an455, 0.001); end
  def test_output_c456; assert_equal("V.b", worksheet.output_c456); end
  def test_output_d456; assert_equal("V.04", worksheet.output_d456); end
  def test_output_e456; assert_equal("Liquid hydrocarbons / Bioenergy imports", worksheet.output_e456); end
  def test_output_f456; assert_equal("TWh/yr", worksheet.output_f456); end
  def test_output_ad456; assert_in_epsilon(4.346242662072274, worksheet.output_ad456, 0.001); end
  def test_output_ae456; assert_in_epsilon(8.054906104597773, worksheet.output_ae456, 0.001); end
  def test_output_af456; assert_in_epsilon(8.949895671775304, worksheet.output_af456, 0.001); end
  def test_output_ag456; assert_in_epsilon(9.844885238952834, worksheet.output_ag456, 0.001); end
  def test_output_ah456; assert_in_epsilon(10.739874806130365, worksheet.output_ah456, 0.001); end
  def test_output_ai456; assert_in_epsilon(11.634864373307895, worksheet.output_ai456, 0.001); end
  def test_output_aj456; assert_in_epsilon(12.529853940485426, worksheet.output_aj456, 0.001); end
  def test_output_am456; assert_in_delta(0.02859611943874829, worksheet.output_am456, 0.001); end
  def test_output_an456; assert_in_epsilon(2.088838923978082, worksheet.output_an456, 0.001); end
  def test_output_c457; assert_equal("V.b", worksheet.output_c457); end
  def test_output_d457; assert_equal("V.05", worksheet.output_d457); end
  def test_output_e457; assert_equal("Gaseous hydrocarbons / Bioenergy imports", worksheet.output_e457); end
  def test_output_f457; assert_equal("TWh/yr", worksheet.output_f457); end
  def test_output_ad457; assert_in_delta(0, (worksheet.output_ad457||0), 0.001); end
  def test_output_ae457; assert_in_delta(0, (worksheet.output_ae457||0), 0.001); end
  def test_output_af457; assert_in_delta(0, (worksheet.output_af457||0), 0.001); end
  def test_output_ag457; assert_in_delta(0, (worksheet.output_ag457||0), 0.001); end
  def test_output_ah457; assert_in_delta(0, (worksheet.output_ah457||0), 0.001); end
  def test_output_ai457; assert_in_delta(0, (worksheet.output_ai457||0), 0.001); end
  def test_output_aj457; assert_in_delta(0, (worksheet.output_aj457||0), 0.001); end
  def test_output_am457; assert_equal("", worksheet.output_am457); end
  def test_output_an457; assert_equal("", worksheet.output_an457); end
  def test_output_c458; assert_equal("Total", worksheet.output_c458); end
  def test_output_am458; assert_equal("", worksheet.output_am458); end
  def test_output_an458; assert_equal("", worksheet.output_an458); end
  def test_output_d459; assert_equal("V.03", worksheet.output_d459); end
  def test_output_e459; assert_equal("Solid hydrocarbons", worksheet.output_e459); end
  def test_output_f459; assert_equal("TWh/yr", worksheet.output_f459); end
  def test_output_ad459; assert_in_epsilon(32.50539318297781, worksheet.output_ad459, 0.001); end
  def test_output_ae459; assert_in_epsilon(37.42550225888375, worksheet.output_ae459, 0.001); end
  def test_output_af459; assert_in_epsilon(43.459796849194674, worksheet.output_af459, 0.001); end
  def test_output_ag459; assert_in_epsilon(48.49390670245994, worksheet.output_ag459, 0.001); end
  def test_output_ah459; assert_in_epsilon(53.49591527750644, worksheet.output_ah459, 0.001); end
  def test_output_ai459; assert_in_epsilon(58.465822574334176, worksheet.output_ai459, 0.001); end
  def test_output_aj459; assert_in_epsilon(61.896650390853964, worksheet.output_aj459, 0.001); end
  def test_output_am459; assert_in_delta(0.021442372837183532, worksheet.output_am459, 0.001); end
  def test_output_an459; assert_in_epsilon(1.336440873179253, worksheet.output_an459, 0.001); end
  def test_output_d460; assert_equal("V.04", worksheet.output_d460); end
  def test_output_e460; assert_equal("Liquid hydrocarbons", worksheet.output_e460); end
  def test_output_f460; assert_equal("TWh/yr", worksheet.output_f460); end
  def test_output_ad460; assert_in_epsilon(4.473342662072273, worksheet.output_ad460, 0.001); end
  def test_output_ae460; assert_in_epsilon(8.240906104597773, worksheet.output_ae460, 0.001); end
  def test_output_af460; assert_in_epsilon(9.166295671775304, worksheet.output_af460, 0.001); end
  def test_output_ag460; assert_in_epsilon(10.088085238952834, worksheet.output_ag460, 0.001); end
  def test_output_ah460; assert_in_epsilon(11.009874806130364, worksheet.output_ah460, 0.001); end
  def test_output_ai460; assert_in_epsilon(11.904864373307895, worksheet.output_ai460, 0.001); end
  def test_output_aj460; assert_in_epsilon(12.799853940485425, worksheet.output_aj460, 0.001); end
  def test_output_am460; assert_in_delta(0.028707792965810608, worksheet.output_am460, 0.001); end
  def test_output_an460; assert_in_epsilon(2.1022814330165476, worksheet.output_an460, 0.001); end
  def test_output_d461; assert_equal("V.05", worksheet.output_d461); end
  def test_output_e461; assert_equal("Gaseous hydrocarbons", worksheet.output_e461); end
  def test_output_f461; assert_equal("TWh/yr", worksheet.output_f461); end
  def test_output_ad461; assert_in_epsilon(5.140442741403772, worksheet.output_ad461, 0.001); end
  def test_output_ae461; assert_in_epsilon(6.202022822502082, worksheet.output_ae461, 0.001); end
  def test_output_af461; assert_in_epsilon(7.891554856638246, worksheet.output_af461, 0.001); end
  def test_output_ag461; assert_in_epsilon(8.748660262813067, worksheet.output_ag461, 0.001); end
  def test_output_ah461; assert_in_epsilon(9.605459656417695, worksheet.output_ah461, 0.001); end
  def test_output_ai461; assert_in_epsilon(10.458811277937944, worksheet.output_ai461, 0.001); end
  def test_output_aj461; assert_in_epsilon(11.307933917161323, worksheet.output_aj461, 0.001); end
  def test_output_am461; assert_in_delta(0.027678707964417404, worksheet.output_am461, 0.001); end
  def test_output_an461; assert_in_epsilon(1.980535825741819, worksheet.output_an461, 0.001); end
  def test_output_c462; assert_equal("Emissions by type of bioenergy", worksheet.output_c462); end
  def test_output_am462; assert_equal("", worksheet.output_am462); end
  def test_output_an462; assert_equal("", worksheet.output_an462); end
  def test_output_d463; assert_equal("V.03", worksheet.output_d463); end
  def test_output_e463; assert_equal("Solid hydrocarbons", worksheet.output_e463); end
  def test_output_f463; assert_equal("MtCO2e", worksheet.output_f463); end
  def test_output_ad463; assert_in_epsilon(9.947148992996748, worksheet.output_ad463, 0.001); end
  def test_output_ae463; assert_in_epsilon(11.452777851701372, worksheet.output_ae463, 0.001); end
  def test_output_af463; assert_in_epsilon(13.299364571005846, worksheet.output_af463, 0.001); end
  def test_output_ag463; assert_in_epsilon(14.839879416516636, worksheet.output_ag463, 0.001); end
  def test_output_ah463; assert_in_epsilon(16.370570778413178, worksheet.output_ah463, 0.001); end
  def test_output_ai463; assert_in_epsilon(17.891438656695474, worksheet.output_ai463, 0.001); end
  def test_output_aj463; assert_in_epsilon(18.9413246023333, worksheet.output_aj463, 0.001); end
  def test_output_am463; assert_in_delta(0.021442372837183532, worksheet.output_am463, 0.001); end
  def test_output_an463; assert_in_epsilon(1.336440873179253, worksheet.output_an463, 0.001); end
  def test_output_d464; assert_equal("V.04", worksheet.output_d464); end
  def test_output_e464; assert_equal("Liquid hydrocarbons", worksheet.output_e464); end
  def test_output_f464; assert_equal("MtCO2e", worksheet.output_f464); end
  def test_output_am464; assert_in_delta(0.028707792965810608, worksheet.output_am464, 0.001); end
  def test_output_an464; assert_in_epsilon(2.1022814330165476, worksheet.output_an464, 0.001); end
  def test_output_d465; assert_equal("V.05", worksheet.output_d465); end
  def test_output_e465; assert_equal("Gaseous hydrocarbons", worksheet.output_e465); end
  def test_output_f465; assert_equal("MtCO2e", worksheet.output_f465); end
  def test_output_ad465; assert_in_epsilon(1.0331964349554326, worksheet.output_ad465, 0.001); end
  def test_output_ae465; assert_in_epsilon(1.2465673079302668, worksheet.output_ae465, 0.001); end
  def test_output_af465; assert_in_epsilon(1.5861525464453028, worksheet.output_af465, 0.001); end
  def test_output_ag465; assert_in_epsilon(1.7584253047639804, worksheet.output_ag465, 0.001); end
  def test_output_ah465; assert_in_epsilon(1.9306365564941248, worksheet.output_ah465, 0.001); end
  def test_output_ai465; assert_in_epsilon(2.1021548278711513, worksheet.output_ai465, 0.001); end
  def test_output_aj465; assert_in_epsilon(2.2728231005900037, worksheet.output_aj465, 0.001); end
  def test_output_am465; assert_in_delta(0.027678707964417404, worksheet.output_am465, 0.001); end
  def test_output_an465; assert_in_epsilon(1.980535825741819, worksheet.output_an465, 0.001); end
  def test_output_am466; assert_equal("", worksheet.output_am466); end
  def test_output_an466; assert_equal("", worksheet.output_an466); end
  def test_output_b467; assert_equal("Hydro-carbon use by sector and Bio-energy share", worksheet.output_b467); end
  def test_output_am467; assert_equal("", worksheet.output_am467); end
  def test_output_an467; assert_equal("", worksheet.output_an467); end
  def test_output_c468; assert_equal("Solid Hydrocarbon consumption", worksheet.output_c468); end
  def test_output_ad468; assert_in_epsilon(73.68274615348217, worksheet.output_ad468, 0.001); end
  def test_output_ae468; assert_in_epsilon(76.48728116194309, worksheet.output_ae468, 0.001); end
  def test_output_af468; assert_in_epsilon(63.174021348247955, worksheet.output_af468, 0.001); end
  def test_output_ag468; assert_in_epsilon(55.786794001601194, worksheet.output_ag468, 0.001); end
  def test_output_ah468; assert_in_epsilon(57.884774546082056, worksheet.output_ah468, 0.001); end
  def test_output_ai468; assert_in_epsilon(59.93395828465307, worksheet.output_ai468, 0.001); end
  def test_output_aj468; assert_in_epsilon(61.896650390853964, worksheet.output_aj468, 0.001); end
  def test_output_am468; assert_in_delta(-0.0037569463325037855, worksheet.output_am468, 0.001); end
  def test_output_an468; assert_in_delta(-0.1397746208184415, worksheet.output_an468, 0.001); end
  def test_output_c469; assert_equal("V", worksheet.output_c469); end
  def test_output_e469; assert_equal("Share of solid biomass to total solid hydrocarbon consumption", worksheet.output_e469); end
  def test_output_ac468; assert_in_epsilon(74.85253336927286, worksheet.output_ac468, 0.001); end
  def test_output_ac469; assert_in_delta(0.3681776795879403, worksheet.output_ac469, 0.001); end
  def test_output_ad469; assert_in_delta(0.441153389088792, worksheet.output_ad469, 0.001); end
  def test_output_ae469; assert_in_delta(0.4893036030349205, worksheet.output_ae469, 0.001); end
  def test_output_af469; assert_in_delta(0.6879377934423668, worksheet.output_af469, 0.001); end
  def test_output_ag469; assert_in_delta(0.8692721560781583, worksheet.output_ag469, 0.001); end
  def test_output_ah469; assert_in_delta(0.9241793839054924, worksheet.output_ah469, 0.001); end
  def test_output_ai469; assert_in_delta(0.9755041089836572, worksheet.output_ai469, 0.001); end
  def test_output_aj469; assert_in_delta(1, worksheet.output_aj469, 0.001); end
  def test_output_ak468; assert_in_epsilon(64.390048900283, worksheet.output_ak468, 0.001); end
  def test_output_ak469; assert_in_delta(1, worksheet.output_ak469, 0.001); end
  def test_output_am469; assert_in_delta(0.025294348680194645, worksheet.output_am469, 0.001); end
  def test_output_an469; assert_in_epsilon(1.7160799131527664, worksheet.output_an469, 0.001); end
  def test_output_c470; assert_equal("I.b", worksheet.output_c470); end
  def test_output_e470; assert_equal("Carbon Capture Storage (CCS)", worksheet.output_e470); end
  def test_output_ac470; assert_in_delta(0, (worksheet.output_ac470||0), 0.001); end
  def test_output_ad470; assert_in_delta(0, (worksheet.output_ad470||0), 0.001); end
  def test_output_ae470; assert_in_delta(0, (worksheet.output_ae470||0), 0.001); end
  def test_output_af470; assert_in_delta(0, (worksheet.output_af470||0), 0.001); end
  def test_output_ag470; assert_in_delta(0, (worksheet.output_ag470||0), 0.001); end
  def test_output_ah470; assert_in_delta(0, (worksheet.output_ah470||0), 0.001); end
  def test_output_ai470; assert_in_delta(0, (worksheet.output_ai470||0), 0.001); end
  def test_output_aj470; assert_in_delta(0, (worksheet.output_aj470||0), 0.001); end
  def test_output_am470; assert_equal("", worksheet.output_am470); end
  def test_output_an470; assert_equal("", worksheet.output_an470); end
  def test_output_c471; assert_equal("I.a", worksheet.output_c471); end
  def test_output_e471; assert_equal("Biomass and gas power stations", worksheet.output_e471); end
  def test_output_ad471; assert_in_epsilon(30.125534809052343, worksheet.output_ad471, 0.001); end
  def test_output_ae471; assert_in_epsilon(34.2108590061542, worksheet.output_ae471, 0.001); end
  def test_output_af471; assert_in_epsilon(21.729898424597337, worksheet.output_af471, 0.001); end
  def test_output_ag471; assert_in_epsilon(24.24695335122997, worksheet.output_ag471, 0.001); end
  def test_output_ah471; assert_in_epsilon(26.74795763875322, worksheet.output_ah471, 0.001); end
  def test_output_ai471; assert_in_epsilon(29.23291128716709, worksheet.output_ai471, 0.001); end
  def test_output_aj471; assert_in_epsilon(31.69378897691688, worksheet.output_aj471, 0.001); end
  def test_output_am471; assert_in_delta(0.007263132121901439, worksheet.output_am471, 0.001); end
  def test_output_an471; assert_in_delta(0.33572645399356094, worksheet.output_an471, 0.001); end
  def test_output_c472; assert_equal("XI", worksheet.output_c472); end
  def test_output_e472; assert_equal("Industry", worksheet.output_e472); end
  def test_output_ac472; assert_in_epsilon(46.22254257821306, worksheet.output_ac472, 0.001); end
  def test_output_ad472; assert_in_epsilon(40.28254225509218, worksheet.output_ad472, 0.001); end
  def test_output_ae472; assert_in_epsilon(38.72612608764173, worksheet.output_ae472, 0.001); end
  def test_output_af472; assert_in_epsilon(37.640729539809286, worksheet.output_af472, 0.001); end
  def test_output_ag472; assert_in_epsilon(27.60116702659421, worksheet.output_ag472, 0.001); end
  def test_output_ah472; assert_in_epsilon(27.075636565569624, worksheet.output_ah472, 0.001); end
  def test_output_ai472; assert_in_epsilon(26.52290622406896, worksheet.output_ai472, 0.001); end
  def test_output_aj472; assert_in_epsilon(25.914571590104504, worksheet.output_aj472, 0.001); end
  def test_output_ak472; assert_in_epsilon(25.716607196987994, worksheet.output_ak472, 0.001); end
  def test_output_am472; assert_in_delta(-0.014551356527446435, worksheet.output_am472, 0.001); end
  def test_output_an472; assert_in_delta(-0.4436349503389394, worksheet.output_an472, 0.001); end
  def test_output_c473; assert_equal("IX", worksheet.output_c473); end
  def test_output_e473; assert_equal("Heating", worksheet.output_e473); end
  def test_output_ac473; assert_in_epsilon(3.059885052305508, worksheet.output_ac473, 0.001); end
  def test_output_ad473; assert_in_epsilon(3.274669089337651, worksheet.output_ad473, 0.001); end
  def test_output_ae473; assert_in_epsilon(3.5502960681471576, worksheet.output_ae473, 0.001); end
  def test_output_af473; assert_in_epsilon(3.8033933838413296, worksheet.output_af473, 0.001); end
  def test_output_ag473; assert_in_epsilon(3.93867362377701, worksheet.output_ag473, 0.001); end
  def test_output_ah473; assert_in_epsilon(4.061180341759214, worksheet.output_ah473, 0.001); end
  def test_output_ai473; assert_in_epsilon(4.178140773417016, worksheet.output_ai473, 0.001); end
  def test_output_aj473; assert_in_epsilon(4.288289823832574, worksheet.output_aj473, 0.001); end
  def test_output_ak473; assert_in_epsilon(4.5187750366283534, worksheet.output_ak473, 0.001); end
  def test_output_am473; assert_in_delta(0.009794242620484228, worksheet.output_am473, 0.001); end
  def test_output_an473; assert_in_delta(0.47677934281342593, worksheet.output_an473, 0.001); end
  def test_output_c474; assert_equal("Liquid Hydrocarbon consumption", worksheet.output_c474); end
  def test_output_ad474; assert_in_epsilon(166.35732538077042, worksheet.output_ad474, 0.001); end
  def test_output_ae474; assert_in_epsilon(147.83937790653326, worksheet.output_ae474, 0.001); end
  def test_output_af474; assert_in_epsilon(128.1735015614872, worksheet.output_af474, 0.001); end
  def test_output_ag474; assert_in_epsilon(109.12094112455475, worksheet.output_ag474, 0.001); end
  def test_output_ah474; assert_in_epsilon(92.61020009073277, worksheet.output_ah474, 0.001); end
  def test_output_ai474; assert_in_epsilon(78.9054400124431, worksheet.output_ai474, 0.001); end
  def test_output_aj474; assert_in_epsilon(66.2779736519404, worksheet.output_aj474, 0.001); end
  def test_output_am474; assert_in_delta(-0.0289124458523925, worksheet.output_am474, 0.001); end
  def test_output_an474; assert_in_delta(-0.6907316177944871, worksheet.output_an474, 0.001); end
  def test_output_c475; assert_equal("V", worksheet.output_c475); end
  def test_output_e475; assert_equal("Share of Bioliquids to total liquid hydrocarbon consumption", worksheet.output_e475); end
  def test_output_ac474; assert_in_epsilon(176.40977327432108, worksheet.output_ac474, 0.001); end
  def test_output_ac475; assert_in_delta(0.02502379873935736, worksheet.output_ac475, 0.001); end
  def test_output_ad475; assert_in_delta(0.026889965030595257, worksheet.output_ad475, 0.001); end
  def test_output_ae475; assert_in_delta(0.05574229424725951, worksheet.output_ae475, 0.001); end
  def test_output_af475; assert_in_delta(0.07151474805717203, worksheet.output_af475, 0.001); end
  def test_output_ag475; assert_in_delta(0.09244866416096902, worksheet.output_ag475, 0.001); end
  def test_output_ah475; assert_in_delta(0.11888404080051318, worksheet.output_ah475, 0.001); end
  def test_output_ai475; assert_in_delta(0.15087507745258807, worksheet.output_ai475, 0.001); end
  def test_output_aj475; assert_in_delta(0.19312379717135011, worksheet.output_aj475, 0.001); end
  def test_output_ak474; assert_in_epsilon(54.557965185790614, worksheet.output_ak474, 0.001); end
  def test_output_ak475; assert_in_delta(0.2510145578381966, worksheet.output_ak475, 0.001); end
  def test_output_am475; assert_in_delta(0.05933578138459472, worksheet.output_am475, 0.001); end
  def test_output_an475; assert_in_epsilon(9.031033275671355, worksheet.output_an475, 0.001); end
  def test_output_c476; assert_equal("XII", worksheet.output_c476); end
  def test_output_e476; assert_equal("Transport", worksheet.output_e476); end
  def test_output_ac476; assert_in_epsilon(114.28616266127325, worksheet.output_ac476, 0.001); end
  def test_output_ad476; assert_in_epsilon(109.04475171054011, worksheet.output_ad476, 0.001); end
  def test_output_ae476; assert_in_epsilon(96.82543046974374, worksheet.output_ae476, 0.001); end
  def test_output_af476; assert_in_epsilon(84.80528569037756, worksheet.output_af476, 0.001); end
  def test_output_ag476; assert_in_epsilon(72.07939569400533, worksheet.output_ag476, 0.001); end
  def test_output_ah476; assert_in_epsilon(60.84156324471134, worksheet.output_ah476, 0.001); end
  def test_output_ai476; assert_in_epsilon(51.977454572667526, worksheet.output_ai476, 0.001); end
  def test_output_aj476; assert_in_epsilon(43.91684637537794, worksheet.output_aj476, 0.001); end
  def test_output_ak476; assert_in_epsilon(36.750308996068114, worksheet.output_ak476, 0.001); end
  def test_output_am476; assert_in_delta(-0.02796549064985787, worksheet.output_am476, 0.001); end
  def test_output_an476; assert_in_delta(-0.6784360578717616, worksheet.output_an476, 0.001); end
  def test_output_c477; assert_equal("XI", worksheet.output_c477); end
  def test_output_e477; assert_equal("Industry", worksheet.output_e477); end
  def test_output_ac477; assert_in_epsilon(9.967839011753194, worksheet.output_ac477, 0.001); end
  def test_output_ad477; assert_in_epsilon(8.33085490521796, worksheet.output_ad477, 0.001); end
  def test_output_ae477; assert_in_epsilon(7.020175393604117, worksheet.output_ae477, 0.001); end
  def test_output_af477; assert_in_epsilon(5.862034377078839, worksheet.output_af477, 0.001); end
  def test_output_ag477; assert_in_epsilon(4.78344244745555, worksheet.output_ag477, 0.001); end
  def test_output_ah477; assert_in_epsilon(4.526369472716938, worksheet.output_ah477, 0.001); end
  def test_output_ai477; assert_in_epsilon(4.301737331835381, worksheet.output_ai477, 0.001); end
  def test_output_aj477; assert_in_epsilon(4.099338441794132, worksheet.output_aj477, 0.001); end
  def test_output_ak477; assert_in_epsilon(4.045189776734745, worksheet.output_ak477, 0.001); end
  def test_output_am477; assert_in_delta(-0.02229362456380868, worksheet.output_am477, 0.001); end
  def test_output_an477; assert_in_delta(-0.594175851760345, worksheet.output_an477, 0.001); end
  def test_output_c478; assert_equal("XV.a", worksheet.output_c478); end
  def test_output_e478; assert_equal("Petroleum refineries [UNUSED]", worksheet.output_e478); end
  def test_output_ac478; assert_in_delta(0, (worksheet.output_ac478||0), 0.001); end
  def test_output_ad478; assert_in_delta(0, (worksheet.output_ad478||0), 0.001); end
  def test_output_ae478; assert_in_delta(0, (worksheet.output_ae478||0), 0.001); end
  def test_output_af478; assert_in_delta(0, (worksheet.output_af478||0), 0.001); end
  def test_output_ag478; assert_in_delta(0, (worksheet.output_ag478||0), 0.001); end
  def test_output_ah478; assert_in_delta(0, (worksheet.output_ah478||0), 0.001); end
  def test_output_ai478; assert_in_delta(0, (worksheet.output_ai478||0), 0.001); end
  def test_output_aj478; assert_in_delta(0, (worksheet.output_aj478||0), 0.001); end
  def test_output_ak478; assert_in_delta(0, (worksheet.output_ak478||0), 0.001); end
  def test_output_am478; assert_equal("", worksheet.output_am478); end
  def test_output_an478; assert_equal("", worksheet.output_an478); end
  def test_output_c479; assert_equal("Gaseous Hydrocarbon consumption", worksheet.output_c479); end
  def test_output_ad479; assert_in_epsilon(124.46983562341916, worksheet.output_ad479, 0.001); end
  def test_output_ae479; assert_in_epsilon(123.19699786050326, worksheet.output_ae479, 0.001); end
  def test_output_af479; assert_in_epsilon(188.0122012638031, worksheet.output_af479, 0.001); end
  def test_output_ag479; assert_in_epsilon(165.43665551745295, worksheet.output_ag479, 0.001); end
  def test_output_ah479; assert_in_epsilon(144.26261676396507, worksheet.output_ah479, 0.001); end
  def test_output_ai479; assert_in_epsilon(126.33547358229126, worksheet.output_ai479, 0.001); end
  def test_output_aj479; assert_in_epsilon(103.41472667511735, worksheet.output_aj479, 0.001); end
  def test_output_am479; assert_in_delta(-0.021010930372989622, worksheet.output_am479, 0.001); end
  def test_output_an479; assert_in_delta(-0.5723251438249202, worksheet.output_an479, 0.001); end
  def test_output_c480; assert_equal("V", worksheet.output_c480); end
  def test_output_e480; assert_equal("Share of Biogas to total gaseous hydrocarbon consumption", worksheet.output_e480); end
  def test_output_ac479; assert_in_epsilon(179.80053078683258, worksheet.output_ac479, 0.001); end
  def test_output_ac480; assert_in_delta(0.022681389013629063, worksheet.output_ac480, 0.001); end
  def test_output_ad480; assert_in_delta(0.041298702739160614, worksheet.output_ad480, 0.001); end
  def test_output_ae480; assert_in_delta(0.05034232108094608, worksheet.output_ae480, 0.001); end
  def test_output_af480; assert_in_delta(0.04197363151748578, worksheet.output_af480, 0.001); end
  def test_output_ag480; assert_in_delta(0.05288223601625044, worksheet.output_ag480, 0.001); end
  def test_output_ah480; assert_in_delta(0.06658315142122817, worksheet.output_ah480, 0.001); end
  def test_output_ai480; assert_in_delta(0.08278602186206535, worksheet.output_ai480, 0.001); end
  def test_output_aj480; assert_in_delta(0.10934548957118821, worksheet.output_aj480, 0.001); end
  def test_output_ak479; assert_in_epsilon(76.89616614446165, worksheet.output_ak479, 0.001); end
  def test_output_ak480; assert_in_delta(0.15807029933280295, worksheet.output_ak480, 0.001); end
  def test_output_am480; assert_in_delta(0.04973460873874469, worksheet.output_am480, 0.001); end
  def test_output_an480; assert_in_epsilon(5.9691630983366935, worksheet.output_an480, 0.001); end
  def test_output_c481; assert_equal("IX.a", worksheet.output_c481); end
  def test_output_e481; assert_equal("Domestic space heating and hot water", worksheet.output_e481); end
  def test_output_ac481; assert_in_epsilon(31.498232239201204, worksheet.output_ac481, 0.001); end
  def test_output_ad481; assert_in_epsilon(30.009290260844267, worksheet.output_ad481, 0.001); end
  def test_output_ae481; assert_in_epsilon(27.74493093191741, worksheet.output_ae481, 0.001); end
  def test_output_af481; assert_in_epsilon(25.504835628321132, worksheet.output_af481, 0.001); end
  def test_output_ag481; assert_in_epsilon(22.654717004773463, worksheet.output_ag481, 0.001); end
  def test_output_ah481; assert_in_epsilon(20.025574407660528, worksheet.output_ah481, 0.001); end
  def test_output_ai481; assert_in_epsilon(17.601097923662085, worksheet.output_ai481, 0.001); end
  def test_output_aj481; assert_in_epsilon(15.338212801389618, worksheet.output_aj481, 0.001); end
  def test_output_ak481; assert_in_epsilon(13.390826551855309, worksheet.output_ak481, 0.001); end
  def test_output_am481; assert_in_delta(-0.021157020963511797, worksheet.output_am481, 0.001); end
  def test_output_an481; assert_in_delta(-0.5748705371728855, worksheet.output_an481, 0.001); end
  def test_output_c482; assert_equal("IX.c", worksheet.output_c482); end
  def test_output_e482; assert_equal("Commercial heating and cooling", worksheet.output_e482); end
  def test_output_ac482; assert_in_epsilon(16.923565202435206, worksheet.output_ac482, 0.001); end
  def test_output_ad482; assert_in_epsilon(16.112842870550306, worksheet.output_ad482, 0.001); end
  def test_output_ae482; assert_in_epsilon(13.473501706703638, worksheet.output_ae482, 0.001); end
  def test_output_af482; assert_in_epsilon(10.967979689122263, worksheet.output_af482, 0.001); end
  def test_output_ag482; assert_in_epsilon(8.799373353623425, worksheet.output_ag482, 0.001); end
  def test_output_ah482; assert_in_epsilon(6.887983569161122, worksheet.output_ah482, 0.001); end
  def test_output_ai482; assert_in_epsilon(5.255693844451907, worksheet.output_ai482, 0.001); end
  def test_output_aj482; assert_in_epsilon(3.864308368241181, worksheet.output_aj482, 0.001); end
  def test_output_ak482; assert_in_epsilon(2.04250154821168, worksheet.output_ak482, 0.001); end
  def test_output_am482; assert_in_delta(-0.05149032883870319, worksheet.output_am482, 0.001); end
  def test_output_an482; assert_in_delta(-0.8793102089435756, worksheet.output_an482, 0.001); end
  def test_output_c483; assert_equal("XI", worksheet.output_c483); end
  def test_output_e483; assert_equal("Industry", worksheet.output_e483); end
  def test_output_ac483; assert_in_epsilon(71.00307133201794, worksheet.output_ac483, 0.001); end
  def test_output_ad483; assert_in_epsilon(70.5911719690194, worksheet.output_ad483, 0.001); end
  def test_output_ae483; assert_in_epsilon(68.07159123415337, worksheet.output_ae483, 0.001); end
  def test_output_af483; assert_in_epsilon(65.5264546641308, worksheet.output_af483, 0.001); end
  def test_output_ag483; assert_in_epsilon(63.1483053837083, worksheet.output_ag483, 0.001); end
  def test_output_ah483; assert_in_epsilon(59.65412717701519, worksheet.output_ah483, 0.001); end
  def test_output_ai483; assert_in_epsilon(56.428131722490065, worksheet.output_ai483, 0.001); end
  def test_output_aj483; assert_in_epsilon(53.39262981842156, worksheet.output_aj483, 0.001); end
  def test_output_ak483; assert_in_epsilon(50.94490186191095, worksheet.output_ak483, 0.001); end
  def test_output_am483; assert_in_delta(-0.008265115586015948, worksheet.output_am483, 0.001); end
  def test_output_an483; assert_in_delta(-0.2824972088364016, worksheet.output_an483, 0.001); end
  def test_output_c484; assert_equal("I.a", worksheet.output_c484); end
  def test_output_e484; assert_equal("Biomass and gas power stations", worksheet.output_e484); end
  def test_output_ac484; assert_in_epsilon(60.09005628517823, worksheet.output_ac484, 0.001); end
  def test_output_ad484; assert_in_epsilon(7.486074397261593, worksheet.output_ad484, 0.001); end
  def test_output_ae484; assert_in_epsilon(11.80991478035843, worksheet.output_ae484, 0.001); end
  def test_output_af484; assert_in_epsilon(82.18772957592493, worksheet.output_af484, 0.001); end
  def test_output_ag484; assert_in_epsilon(65.38835976411197, worksheet.output_ag484, 0.001); end
  def test_output_ah484; assert_in_epsilon(50.75459756086255, worksheet.output_ah484, 0.001); end
  def test_output_ai484; assert_in_epsilon(38.75183536116286, worksheet.output_ai484, 0.001); end
  def test_output_aj484; assert_in_epsilon(21.32133134808807, worksheet.output_aj484, 0.001); end
  def test_output_am484; assert_in_delta(-1, worksheet.output_am484, 0.001); end
  def test_output_an484; assert_in_delta(-1, worksheet.output_an484, 0.001); end
  def test_output_c485; assert_equal("I.b", worksheet.output_c485); end
  def test_output_e485; assert_equal("Carbon Capture Storage (CCS)", worksheet.output_e485); end
  def test_output_ac485; assert_in_delta(0, (worksheet.output_ac485||0), 0.001); end
  def test_output_ad485; assert_in_delta(0, (worksheet.output_ad485||0), 0.001); end
  def test_output_ae485; assert_in_delta(0, (worksheet.output_ae485||0), 0.001); end
  def test_output_af485; assert_in_delta(0, (worksheet.output_af485||0), 0.001); end
  def test_output_ag485; assert_in_delta(0, (worksheet.output_ag485||0), 0.001); end
  def test_output_ah485; assert_in_delta(0, (worksheet.output_ah485||0), 0.001); end
  def test_output_ai485; assert_in_delta(0, (worksheet.output_ai485||0), 0.001); end
  def test_output_aj485; assert_in_delta(0, (worksheet.output_aj485||0), 0.001); end
  def test_output_am485; assert_equal("", worksheet.output_am485); end
  def test_output_an485; assert_equal("", worksheet.output_an485); end
  def test_output_am486; assert_equal("", worksheet.output_am486); end
  def test_output_an486; assert_equal("", worksheet.output_an486); end
  def test_output_b487; assert_equal("Costs", worksheet.output_b487); end
  def test_output_am487; assert_equal("", worksheet.output_am487); end
  def test_output_an487; assert_equal("", worksheet.output_an487); end
  def test_output_c488; assert_equal("Building", worksheet.output_c488); end
  def test_output_am488; assert_equal("", worksheet.output_am488); end
  def test_output_an488; assert_equal("", worksheet.output_an488); end
  def test_output_ap488; assert_equal("Modeled", worksheet.output_ap488); end
  def test_output_aq488; assert_equal("REF", worksheet.output_aq488); end
  def test_output_e489; assert_equal("Average INVESTMENTS for Building", worksheet.output_e489); end
  def test_output_f489; assert_equal("MEUR", worksheet.output_f489); end
  def test_output_am489; assert_in_delta(0.0022332916593912344, worksheet.output_am489, 0.001); end
  def test_output_an489; assert_in_delta(0.09333434913153682, worksheet.output_an489, 0.001); end
  def test_output_ao489; assert_equal("Transport", worksheet.output_ao489); end
  def test_output_aq489; assert_in_epsilon(13032.641608248498, worksheet.output_aq489, 0.001); end
  def test_output_ar489; assert_in_epsilon(-3877.725317591181, worksheet.output_ar489, 0.001); end
  def test_costs_f64; assert_in_epsilon(6182.807283762385, worksheet.costs_f64, 0.001); end
  def test_costs_f133; assert_in_epsilon(7315.648249666244, worksheet.costs_f133, 0.001); end
  def test_output_ac494; assert_in_epsilon(6749.227766714314, worksheet.output_ac494, 0.001); end
  def test_costs_g64; assert_in_epsilon(7376.378886720753, worksheet.costs_g64, 0.001); end
  def test_costs_g133; assert_in_epsilon(9131.903949612293, worksheet.costs_g133, 0.001); end
  def test_output_ad494; assert_in_epsilon(8254.141418166524, worksheet.output_ad494, 0.001); end
  def test_costs_h64; assert_in_epsilon(9273.591222610874, worksheet.costs_h64, 0.001); end
  def test_costs_h133; assert_in_epsilon(11068.925835703, worksheet.costs_h133, 0.001); end
  def test_output_ae494; assert_in_epsilon(10171.258529156938, worksheet.output_ae494, 0.001); end
  def test_costs_i64; assert_in_epsilon(9396.223313661103, worksheet.costs_i64, 0.001); end
  def test_costs_i133; assert_in_epsilon(11211.059319209227, worksheet.costs_i133, 0.001); end
  def test_output_af494; assert_in_epsilon(10303.641316435165, worksheet.output_af494, 0.001); end
  def test_costs_j64; assert_in_epsilon(9437.071976997968, worksheet.costs_j64, 0.001); end
  def test_costs_j133; assert_in_epsilon(11322.29762879848, worksheet.costs_j133, 0.001); end
  def test_output_ag494; assert_in_epsilon(10379.684802898224, worksheet.output_ag494, 0.001); end
  def test_costs_k64; assert_in_epsilon(9123.018361157956, worksheet.costs_k64, 0.001); end
  def test_costs_k133; assert_in_epsilon(11042.786315380366, worksheet.costs_k133, 0.001); end
  def test_output_ah494; assert_in_epsilon(10082.902338269161, worksheet.output_ah494, 0.001); end
  def test_costs_l64; assert_in_epsilon(8708.323490777675, worksheet.costs_l64, 0.001); end
  def test_costs_l133; assert_in_epsilon(10681.306711654881, worksheet.costs_l133, 0.001); end
  def test_output_ai494; assert_in_epsilon(9694.815101216278, worksheet.output_ai494, 0.001); end
  def test_costs_m64; assert_in_epsilon(8081.785045328369, worksheet.costs_m64, 0.001); end
  def test_costs_m133; assert_in_epsilon(10105.931435037883, worksheet.costs_m133, 0.001); end
  def test_output_aj494; assert_in_epsilon(9093.858240183126, worksheet.output_aj494, 0.001); end
  def test_output_ap489; assert_in_epsilon(9154.916290657316, worksheet.output_ap489, 0.001); end
  def test_output_as489; assert_in_delta(-0.42356753404162073, worksheet.output_as489, 0.001); end
  def test_output_e490; assert_equal("Average O&M COSTS for Building", worksheet.output_e490); end
  def test_output_f490; assert_equal("MEUR", worksheet.output_f490); end
  def test_output_am490; assert_in_delta(0.012749521255855933, worksheet.output_am490, 0.001); end
  def test_output_an490; assert_in_delta(0.6598997605626253, worksheet.output_an490, 0.001); end
  def test_output_ao490; assert_equal("Buildings", worksheet.output_ao490); end
  def test_output_aq490; assert_in_epsilon(43292.84967069035, worksheet.output_aq490, 0.001); end
  def test_output_ar490; assert_in_epsilon(-19204.642654778356, worksheet.output_ar490, 0.001); end
  def test_costs_f63; assert_in_epsilon(19813.514467694695, worksheet.costs_f63, 0.001); end
  def test_costs_f132; assert_in_epsilon(28067.148081877724, worksheet.costs_f132, 0.001); end
  def test_output_ac489; assert_in_epsilon(23940.331274786207, worksheet.output_ac489, 0.001); end
  def test_costs_g63; assert_in_epsilon(20215.568462369272, worksheet.costs_g63, 0.001); end
  def test_costs_g132; assert_in_epsilon(29384.734979471086, worksheet.costs_g132, 0.001); end
  def test_output_ad489; assert_in_epsilon(24800.151720920177, worksheet.output_ad489, 0.001); end
  def test_costs_h63; assert_in_epsilon(20372.693231205132, worksheet.costs_h63, 0.001); end
  def test_costs_h132; assert_in_epsilon(30179.02212777494, worksheet.costs_h132, 0.001); end
  def test_output_ae489; assert_in_epsilon(25275.857679490036, worksheet.output_ae489, 0.001); end
  def test_costs_i63; assert_in_epsilon(17728.987264995263, worksheet.costs_i63, 0.001); end
  def test_costs_i132; assert_in_epsilon(27336.09446450736, worksheet.costs_i132, 0.001); end
  def test_output_af489; assert_in_epsilon(22532.54086475131, worksheet.output_af489, 0.001); end
  def test_costs_j63; assert_in_epsilon(18392.647949161128, worksheet.costs_j63, 0.001); end
  def test_costs_j132; assert_in_epsilon(28355.776484594033, worksheet.costs_j132, 0.001); end
  def test_output_ag489; assert_in_epsilon(23374.212216877582, worksheet.output_ag489, 0.001); end
  def test_costs_k63; assert_in_epsilon(17877.55167843317, worksheet.costs_k63, 0.001); end
  def test_costs_k132; assert_in_epsilon(27906.711401106888, worksheet.costs_k132, 0.001); end
  def test_output_ah489; assert_in_epsilon(22892.13153977003, worksheet.output_ah489, 0.001); end
  def test_costs_l63; assert_in_epsilon(18605.14478593006, worksheet.costs_l63, 0.001); end
  def test_costs_l132; assert_in_epsilon(29035.97604968004, worksheet.costs_l132, 0.001); end
  def test_output_ai489; assert_in_epsilon(23820.56041780505, worksheet.output_ai489, 0.001); end
  def test_costs_m63; assert_in_epsilon(18668.694269881016, worksheet.costs_m63, 0.001); end
  def test_costs_m132; assert_in_epsilon(29297.887563110642, worksheet.costs_m132, 0.001); end
  def test_output_aj489; assert_in_epsilon(23983.29091649583, worksheet.output_aj489, 0.001); end
  def test_output_ap490; assert_in_epsilon(24088.207015911998, worksheet.output_ap490, 0.001); end
  def test_output_as490; assert_in_delta(-0.7972632683741179, worksheet.output_as490, 0.001); end
  def test_output_e491; assert_equal("Average FUEL COSTS for Building", worksheet.output_e491); end
  def test_output_f491; assert_equal("MEUR", worksheet.output_f491); end
  def test_output_am491; assert_in_delta(-8.696792704054879e-05, worksheet.output_am491, 0.001); end
  def test_output_an491; assert_in_delta(-0.0034728241073530564, worksheet.output_an491, 0.001); end
  def test_output_ao491; assert_equal("Industry", worksheet.output_ao491); end
  def test_output_aq491; assert_in_epsilon(3762.7629364158265, worksheet.output_aq491, 0.001); end
  def test_output_ar491; assert_in_epsilon(-2781.581643211353, worksheet.output_ar491, 0.001); end
  def test_costs_f65; assert_in_epsilon(5.532938618668466, worksheet.costs_f65, 0.001); end
  def test_costs_f134; assert_in_epsilon(5.532938618668466, worksheet.costs_f134, 0.001); end
  def test_output_ac499; assert_in_epsilon(5.532938618668466, worksheet.output_ac499, 0.001); end
  def test_costs_g65; assert_in_epsilon(217.82815524196792, worksheet.costs_g65, 0.001); end
  def test_costs_g134; assert_in_epsilon(294.70868062148605, worksheet.costs_g134, 0.001); end
  def test_output_ad499; assert_in_epsilon(256.26841793172696, worksheet.output_ad499, 0.001); end
  def test_costs_h65; assert_in_epsilon(334.01306296536154, worksheet.costs_h65, 0.001); end
  def test_costs_h134; assert_in_epsilon(451.90002636490084, worksheet.costs_h134, 0.001); end
  def test_output_ae499; assert_in_epsilon(392.9565446651312, worksheet.output_ae499, 0.001); end
  def test_costs_i65; assert_in_epsilon(478.4606767147417, worksheet.costs_i65, 0.001); end
  def test_costs_i134; assert_in_epsilon(647.3291508493563, worksheet.costs_i134, 0.001); end
  def test_output_af499; assert_in_epsilon(562.894913782049, worksheet.output_af499, 0.001); end
  def test_costs_j65; assert_in_epsilon(1106.8056366597075, worksheet.costs_j65, 0.001); end
  def test_costs_j134; assert_in_epsilon(1497.442920186663, worksheet.costs_j134, 0.001); end
  def test_output_ag499; assert_in_epsilon(1302.1242784231854, worksheet.output_ag499, 0.001); end
  def test_costs_k65; assert_in_epsilon(1207.5645169239513, worksheet.costs_k65, 0.001); end
  def test_costs_k134; assert_in_epsilon(1633.7637581912281, worksheet.costs_k134, 0.001); end
  def test_output_ah499; assert_in_epsilon(1420.6641375575896, worksheet.output_ah499, 0.001); end
  def test_costs_l65; assert_in_epsilon(1291.642560822481, worksheet.costs_l65, 0.001); end
  def test_costs_l134; assert_in_epsilon(1747.5164058186508, worksheet.costs_l134, 0.001); end
  def test_output_ai499; assert_in_epsilon(1519.579483320566, worksheet.output_ai499, 0.001); end
  def test_costs_m65; assert_in_epsilon(1357.5219349642375, worksheet.costs_m65, 0.001); end
  def test_costs_m134; assert_in_epsilon(1836.6473237751445, worksheet.costs_m134, 0.001); end
  def test_output_aj499; assert_in_epsilon(1597.084629369691, worksheet.output_aj499, 0.001); end
  def test_output_ap491; assert_in_epsilon(981.1812932044735, worksheet.output_ap491, 0.001); end
  def test_output_as491; assert_in_epsilon(-2.834931385745126, worksheet.output_as491, 0.001); end
  def test_output_e492; assert_equal("Average TOTAL COSTS for Building", worksheet.output_e492); end
  def test_output_f492; assert_equal("MEUR", worksheet.output_f492); end
  def test_output_am492; assert_in_delta(0.002316463196733176, worksheet.output_am492, 0.001); end
  def test_output_an492; assert_in_delta(0.09696949503636554, worksheet.output_an492, 0.001); end
  def test_output_ao492; assert_equal("Energy", worksheet.output_ao492); end
  def test_output_aq492; assert_in_epsilon(2014.1669556241297, worksheet.output_aq492, 0.001); end
  def test_output_ar492; assert_in_epsilon(-2014.1669556241297, worksheet.output_ar492, 0.001); end
  def test_costs_f69; assert_in_delta(0, (worksheet.costs_f69||0), 0.001); end
  def test_costs_f138; assert_in_delta(0, (worksheet.costs_f138||0), 0.001); end
  def test_output_ac504; assert_in_delta(0, (worksheet.output_ac504||0), 0.001); end
  def test_costs_g69; assert_in_delta(0, (worksheet.costs_g69||0), 0.001); end
  def test_costs_g138; assert_in_delta(0, (worksheet.costs_g138||0), 0.001); end
  def test_output_ad504; assert_in_delta(0, (worksheet.output_ad504||0), 0.001); end
  def test_costs_h69; assert_in_delta(0, (worksheet.costs_h69||0), 0.001); end
  def test_costs_h138; assert_in_delta(0, (worksheet.costs_h138||0), 0.001); end
  def test_output_ae504; assert_in_delta(0, (worksheet.output_ae504||0), 0.001); end
  def test_costs_i69; assert_in_delta(0, (worksheet.costs_i69||0), 0.001); end
  def test_costs_i138; assert_in_delta(0, (worksheet.costs_i138||0), 0.001); end
  def test_output_af504; assert_in_delta(0, (worksheet.output_af504||0), 0.001); end
  def test_costs_j69; assert_in_delta(0, (worksheet.costs_j69||0), 0.001); end
  def test_costs_j138; assert_in_delta(0, (worksheet.costs_j138||0), 0.001); end
  def test_output_ag504; assert_in_delta(0, (worksheet.output_ag504||0), 0.001); end
  def test_costs_k69; assert_in_delta(0, (worksheet.costs_k69||0), 0.001); end
  def test_costs_k138; assert_in_delta(0, (worksheet.costs_k138||0), 0.001); end
  def test_output_ah504; assert_in_delta(0, (worksheet.output_ah504||0), 0.001); end
  def test_costs_l69; assert_in_delta(0, (worksheet.costs_l69||0), 0.001); end
  def test_costs_l138; assert_in_delta(0, (worksheet.costs_l138||0), 0.001); end
  def test_output_ai504; assert_in_delta(0, (worksheet.output_ai504||0), 0.001); end
  def test_costs_m69; assert_in_delta(0, (worksheet.costs_m69||0), 0.001); end
  def test_costs_m138; assert_in_delta(0, (worksheet.costs_m138||0), 0.001); end
  def test_output_aj504; assert_in_delta(0, (worksheet.output_aj504||0), 0.001); end
  def test_output_ap492; assert_in_delta(0, (worksheet.output_ap492||0), 0.001); end
  def test_output_as492; assert_equal(:div0, worksheet.output_as492); end
  def test_output_c493; assert_equal("Transport", worksheet.output_c493); end
  def test_output_am493; assert_equal("", worksheet.output_am493); end
  def test_output_an493; assert_equal("", worksheet.output_an493); end
  def test_output_e494; assert_equal("Average INVESTMENTS for Transport", worksheet.output_e494); end
  def test_output_f494; assert_equal("MEUR", worksheet.output_f494); end
  def test_output_am494; assert_in_delta(0.003185049289513575, worksheet.output_am494, 0.001); end
  def test_output_an494; assert_in_delta(0.13564356809482647, worksheet.output_an494, 0.001); end
  def test_output_e495; assert_equal("Average O&M COSTS for Transport", worksheet.output_e495); end
  def test_output_f495; assert_equal("MEUR", worksheet.output_f495); end
  def test_output_am495; assert_in_delta(0.0015199426726881793, worksheet.output_am495, 0.001); end
  def test_output_an495; assert_in_delta(0.06263486885999958, worksheet.output_an495, 0.001); end
  def test_output_e496; assert_equal("Average FUEL COSTS for Transport", worksheet.output_e496); end
  def test_output_f496; assert_equal("MEUR", worksheet.output_f496); end
  def test_output_am496; assert_in_delta(-0.014995603559098902, worksheet.output_am496, 0.001); end
  def test_output_an496; assert_in_delta(-0.45357978632509377, worksheet.output_an496, 0.001); end
  def test_output_ap496; assert_equal("Modeled", worksheet.output_ap496); end
  def test_output_aq496; assert_equal("REF", worksheet.output_aq496); end
  def test_output_e497; assert_equal("Average TOTAL COSTS for Transport", worksheet.output_e497); end
  def test_output_f497; assert_equal("MEUR", worksheet.output_f497); end
  def test_output_am497; assert_in_delta(-0.0009993452625048915, worksheet.output_am497, 0.001); end
  def test_output_an497; assert_in_delta(-0.03920460166376516, worksheet.output_an497, 0.001); end
  def test_output_ao497; assert_equal("Transport", worksheet.output_ao497); end
  def test_output_aq497; assert_in_epsilon(27260.131927672737, worksheet.output_aq497, 0.001); end
  def test_output_ar497; assert_in_epsilon(-5916.288881100714, worksheet.output_ar497, 0.001); end
  def test_costs_p64; assert_in_epsilon(7511.912661772789, worksheet.costs_p64, 0.001); end
  def test_costs_p133; assert_in_epsilon(7534.454508421662, worksheet.costs_p133, 0.001); end
  def test_output_ac495; assert_in_epsilon(7523.183585097226, worksheet.output_ac495, 0.001); end
  def test_costs_z64; assert_in_epsilon(4692.344207263488, worksheet.costs_z64, 0.001); end
  def test_costs_z133; assert_in_epsilon(4701.30303463843, worksheet.costs_z133, 0.001); end
  def test_output_ac496; assert_in_epsilon(4696.82362095096, worksheet.output_ac496, 0.001); end
  def test_output_ac497; assert_in_epsilon(18969.2349727625, worksheet.output_ac497, 0.001); end
  def test_costs_q64; assert_in_epsilon(7819.425542250589, worksheet.costs_q64, 0.001); end
  def test_costs_q133; assert_in_epsilon(8804.810176258143, worksheet.costs_q133, 0.001); end
  def test_output_ad495; assert_in_epsilon(8312.117859254366, worksheet.output_ad495, 0.001); end
  def test_costs_aa64; assert_in_epsilon(3823.51878271245, worksheet.costs_aa64, 0.001); end
  def test_costs_aa133; assert_in_epsilon(5167.986468929426, worksheet.costs_aa133, 0.001); end
  def test_output_ad496; assert_in_epsilon(4495.752625820938, worksheet.output_ad496, 0.001); end
  def test_output_ad497; assert_in_epsilon(21062.01190324183, worksheet.output_ad497, 0.001); end
  def test_costs_r64; assert_in_epsilon(7648.504961295535, worksheet.costs_r64, 0.001); end
  def test_costs_r133; assert_in_epsilon(9729.333946971707, worksheet.costs_r133, 0.001); end
  def test_output_ae495; assert_in_epsilon(8688.919454133622, worksheet.output_ae495, 0.001); end
  def test_costs_ab64; assert_in_epsilon(3724.5676670830485, worksheet.costs_ab64, 0.001); end
  def test_costs_ab133; assert_in_epsilon(5031.562859774012, worksheet.costs_ab133, 0.001); end
  def test_output_ae496; assert_in_epsilon(4378.065263428531, worksheet.output_ae496, 0.001); end
  def test_output_ae497; assert_in_epsilon(23238.24324671909, worksheet.output_ae497, 0.001); end
  def test_costs_s64; assert_in_epsilon(7203.717773223354, worksheet.costs_s64, 0.001); end
  def test_costs_s133; assert_in_epsilon(10514.723634437383, worksheet.costs_s133, 0.001); end
  def test_output_af495; assert_in_epsilon(8859.220703830368, worksheet.output_af495, 0.001); end
  def test_costs_ac64; assert_in_epsilon(3599.073038019887, worksheet.costs_ac64, 0.001); end
  def test_costs_ac133; assert_in_epsilon(4866.048782393851, worksheet.costs_ac133, 0.001); end
  def test_output_af496; assert_in_epsilon(4232.560910206869, worksheet.output_af496, 0.001); end
  def test_output_af497; assert_in_epsilon(23395.422930472403, worksheet.output_af497, 0.001); end
  def test_costs_t64; assert_in_epsilon(6588.002122819578, worksheet.costs_t64, 0.001); end
  def test_costs_t133; assert_in_epsilon(11254.251358677428, worksheet.costs_t133, 0.001); end
  def test_output_ag495; assert_in_epsilon(8921.126740748503, worksheet.output_ag495, 0.001); end
  def test_costs_ad64; assert_in_epsilon(3294.6340567898696, worksheet.costs_ad64, 0.001); end
  def test_costs_ad133; assert_in_epsilon(4478.579576649871, worksheet.costs_ad133, 0.001); end
  def test_output_ag496; assert_in_epsilon(3886.6068167198705, worksheet.output_ag496, 0.001); end
  def test_output_ag497; assert_in_epsilon(23187.4183603666, worksheet.output_ag497, 0.001); end
  def test_costs_u64; assert_in_epsilon(5782.28552771615, worksheet.costs_u64, 0.001); end
  def test_costs_u133; assert_in_epsilon(11871.274700295673, worksheet.costs_u133, 0.001); end
  def test_output_ah495; assert_in_epsilon(8826.780114005911, worksheet.output_ah495, 0.001); end
  def test_costs_ae64; assert_in_epsilon(2903.6193620421814, worksheet.costs_ae64, 0.001); end
  def test_costs_ae133; assert_in_epsilon(3952.183208495794, worksheet.costs_ae133, 0.001); end
  def test_output_ah496; assert_in_epsilon(3427.9012852689875, worksheet.output_ah496, 0.001); end
  def test_output_ah497; assert_in_epsilon(22337.58373754406, worksheet.output_ah497, 0.001); end
  def test_costs_v64; assert_in_epsilon(4849.159257478583, worksheet.costs_v64, 0.001); end
  def test_costs_v133; assert_in_epsilon(12435.004356365329, worksheet.costs_v133, 0.001); end
  def test_output_ai495; assert_in_epsilon(8642.081806921957, worksheet.output_ai495, 0.001); end
  def test_costs_af64; assert_in_epsilon(2617.6189209954114, worksheet.costs_af64, 0.001); end
  def test_costs_af133; assert_in_epsilon(3569.451574818573, worksheet.costs_af133, 0.001); end
  def test_output_ai496; assert_in_epsilon(3093.5352479069925, worksheet.output_ai496, 0.001); end
  def test_output_ai497; assert_in_epsilon(21430.432156045226, worksheet.output_ai497, 0.001); end
  def test_costs_w64; assert_in_epsilon(3796.9472803534127, worksheet.costs_w64, 0.001); end
  def test_costs_w133; assert_in_epsilon(12910.29768005167, worksheet.costs_w133, 0.001); end
  def test_output_aj495; assert_in_epsilon(8353.62248020254, worksheet.output_aj495, 0.001); end
  def test_costs_ag64; assert_in_epsilon(2365.271688022671, worksheet.costs_ag64, 0.001); end
  def test_costs_ag133; assert_in_epsilon(3237.13975162106, worksheet.costs_ag133, 0.001); end
  def test_output_aj496; assert_in_epsilon(2801.2057198218654, worksheet.output_aj496, 0.001); end
  def test_output_aj497; assert_in_epsilon(20248.686440207533, worksheet.output_aj497, 0.001); end
  def test_output_ak497; assert_in_epsilon(18225.553671788985, worksheet.output_ak497, 0.001); end
  def test_output_ap497; assert_in_epsilon(21343.843046572023, worksheet.output_ap497, 0.001); end
  def test_output_as497; assert_in_delta(-0.277189485894899, worksheet.output_as497, 0.001); end
  def test_output_c498; assert_equal("Industry", worksheet.output_c498); end
  def test_output_am498; assert_equal("", worksheet.output_am498); end
  def test_output_an498; assert_equal("", worksheet.output_an498); end
  def test_output_ao498; assert_equal("Buildings", worksheet.output_ao498); end
  def test_output_aq498; assert_in_epsilon(49856.63810312902, worksheet.output_aq498, 0.001); end
  def test_output_ar498; assert_in_epsilon(-20434.352524602866, worksheet.output_ar498, 0.001); end
  def test_costs_p63; assert_in_epsilon(144.40927586254617, worksheet.costs_p63, 0.001); end
  def test_costs_p132; assert_in_epsilon(676.8085207587142, worksheet.costs_p132, 0.001); end
  def test_output_ac490; assert_in_epsilon(821.2177966212603, worksheet.output_ac490, 0.001); end
  def test_costs_z63; assert_in_epsilon(3290.5689375044926, worksheet.costs_z63, 0.001); end
  def test_costs_z132; assert_in_epsilon(4181.615263582494, worksheet.costs_z132, 0.001); end
  def test_output_ac491; assert_in_epsilon(3736.092100543493, worksheet.output_ac491, 0.001); end
  def test_output_ac492; assert_in_epsilon(28497.641171950963, worksheet.output_ac492, 0.001); end
  def test_costs_q63; assert_in_epsilon(164.7669178969745, worksheet.costs_q63, 0.001); end
  def test_costs_q132; assert_in_epsilon(732.1374608311768, worksheet.costs_q132, 0.001); end
  def test_output_ad490; assert_in_epsilon(896.9043787281513, worksheet.output_ad490, 0.001); end
  def test_costs_aa63; assert_in_epsilon(3641.2975986217843, worksheet.costs_aa63, 0.001); end
  def test_costs_aa132; assert_in_epsilon(4849.739576322715, worksheet.costs_aa132, 0.001); end
  def test_output_ad491; assert_in_epsilon(4245.51858747225, worksheet.output_ad491, 0.001); end
  def test_output_ad492; assert_in_epsilon(29942.574687120577, worksheet.output_ad492, 0.001); end
  def test_costs_r63; assert_in_epsilon(194.57724083172232, worksheet.costs_r63, 0.001); end
  def test_costs_r132; assert_in_epsilon(772.6708300852699, worksheet.costs_r132, 0.001); end
  def test_output_ae490; assert_in_epsilon(967.2480709169922, worksheet.output_ae490, 0.001); end
  def test_costs_ab63; assert_in_epsilon(3777.597893759202, worksheet.costs_ab63, 0.001); end
  def test_costs_ab132; assert_in_epsilon(5047.015903243142, worksheet.costs_ab132, 0.001); end
  def test_output_ae491; assert_in_epsilon(4412.306898501172, worksheet.output_ae491, 0.001); end
  def test_output_ae492; assert_in_epsilon(30655.412648908197, worksheet.output_ae492, 0.001); end
  def test_costs_s63; assert_in_epsilon(223.57493602940838, worksheet.costs_s63, 0.001); end
  def test_costs_s132; assert_in_epsilon(810.5472400580979, worksheet.costs_s132, 0.001); end
  def test_output_af490; assert_in_epsilon(1034.1221760875064, worksheet.output_af490, 0.001); end
  def test_costs_ac63; assert_in_epsilon(4204.765352944322, worksheet.costs_ac63, 0.001); end
  def test_costs_ac132; assert_in_epsilon(5666.774127218245, worksheet.costs_ac132, 0.001); end
  def test_output_af491; assert_in_epsilon(4935.769740081283, worksheet.output_af491, 0.001); end
  def test_output_af492; assert_in_epsilon(28502.4327809201, worksheet.output_af492, 0.001); end
  def test_costs_t63; assert_in_epsilon(253.10670347485905, worksheet.costs_t63, 0.001); end
  def test_costs_t132; assert_in_epsilon(846.8031996795766, worksheet.costs_t132, 0.001); end
  def test_output_ag490; assert_in_epsilon(1099.9099031544356, worksheet.output_ag490, 0.001); end
  def test_costs_ad63; assert_in_epsilon(3941.9882938614433, worksheet.costs_ad63, 0.001); end
  def test_costs_ad132; assert_in_epsilon(5449.947225860498, worksheet.costs_ad132, 0.001); end
  def test_output_ag491; assert_in_epsilon(4695.967759860971, worksheet.output_ag491, 0.001); end
  def test_output_ag492; assert_in_epsilon(29170.08987989299, worksheet.output_ag492, 0.001); end
  def test_costs_u63; assert_in_epsilon(283.6282058442026, worksheet.costs_u63, 0.001); end
  def test_costs_u132; assert_in_epsilon(884.9576057118428, worksheet.costs_u132, 0.001); end
  def test_output_ah490; assert_in_epsilon(1168.5858115560454, worksheet.output_ah490, 0.001); end
  def test_costs_ae63; assert_in_epsilon(3658.8105024982433, worksheet.costs_ae63, 0.001); end
  def test_costs_ae132; assert_in_epsilon(5070.469808810319, worksheet.costs_ae132, 0.001); end
  def test_output_ah491; assert_in_epsilon(4364.6401556542805, worksheet.output_ah491, 0.001); end
  def test_output_ah492; assert_in_epsilon(28425.357506980356, worksheet.output_ah492, 0.001); end
  def test_costs_v63; assert_in_epsilon(315.2684324982225, worksheet.costs_v63, 0.001); end
  def test_costs_v132; assert_in_epsilon(924.6191398621279, worksheet.costs_v132, 0.001); end
  def test_output_ai490; assert_in_epsilon(1239.8875723603505, worksheet.output_ai490, 0.001); end
  def test_costs_af63; assert_in_epsilon(3435.2184094266777, worksheet.costs_af63, 0.001); end
  def test_costs_af132; assert_in_epsilon(4779.596151478523, worksheet.costs_af132, 0.001); end
  def test_output_ai491; assert_in_epsilon(4107.4072804526, worksheet.output_ai491, 0.001); end
  def test_output_ai492; assert_in_epsilon(29167.855270617998, worksheet.output_ai492, 0.001); end
  def test_costs_w63; assert_in_epsilon(347.2642536473662, worksheet.costs_w63, 0.001); end
  def test_costs_w132; assert_in_epsilon(964.8752776663655, worksheet.costs_w132, 0.001); end
  def test_output_aj490; assert_in_epsilon(1312.1395313137318, worksheet.output_aj490, 0.001); end
  def test_costs_ag63; assert_in_epsilon(3229.475711553826, worksheet.costs_ag63, 0.001); end
  def test_costs_ag132; assert_in_epsilon(4535.989821270347, worksheet.costs_ag132, 0.001); end
  def test_output_aj491; assert_in_epsilon(3882.7327664120867, worksheet.output_aj491, 0.001); end
  def test_output_aj492; assert_in_epsilon(29178.163214221648, worksheet.output_aj492, 0.001); end
  def test_output_ak492; assert_in_epsilon(31261.043046122588, worksheet.output_ak492, 0.001); end
  def test_output_ap498; assert_in_epsilon(29422.285578526156, worksheet.output_ap498, 0.001); end
  def test_output_as498; assert_in_delta(-0.6945195494777221, worksheet.output_as498, 0.001); end
  def test_output_e499; assert_equal("Average INVESTMENTS for Industry", worksheet.output_e499); end
  def test_output_f499; assert_equal("MEUR", worksheet.output_f499); end
  def test_output_am499; assert_in_delta(0.15517303980599118, worksheet.output_am499, 0.001); end
  def test_output_an499; assert_in_epsilon(319.53966570091166, worksheet.output_an499, 0.001); end
  def test_output_ao499; assert_equal("Industry", worksheet.output_ao499); end
  def test_output_aq499; assert_in_epsilon(7609.626037291043, worksheet.output_aq499, 0.001); end
  def test_output_ar499; assert_in_epsilon(-1126.2261222448742, worksheet.output_ar499, 0.001); end
  def test_costs_p65; assert_in_delta(0, (worksheet.costs_p65||0), 0.001); end
  def test_costs_p134; assert_in_delta(0, (worksheet.costs_p134||0), 0.001); end
  def test_output_ac500; assert_in_delta(0, (worksheet.output_ac500||0), 0.001); end
  def test_costs_z65; assert_in_epsilon(5256.312363604597, worksheet.costs_z65, 0.001); end
  def test_costs_z134; assert_in_epsilon(5256.312363604597, worksheet.costs_z134, 0.001); end
  def test_output_ac501; assert_in_epsilon(5256.312363604597, worksheet.output_ac501, 0.001); end
  def test_output_ac502; assert_in_epsilon(5261.845302223265, worksheet.output_ac502, 0.001); end
  def test_costs_q65; assert_in_delta(0, (worksheet.costs_q65||0), 0.001); end
  def test_costs_q134; assert_in_delta(0, (worksheet.costs_q134||0), 0.001); end
  def test_output_ad500; assert_in_delta(0, (worksheet.output_ad500||0), 0.001); end
  def test_costs_aa65; assert_in_epsilon(5088.659550000973, worksheet.costs_aa65, 0.001); end
  def test_costs_aa134; assert_in_epsilon(6884.65703823661, worksheet.costs_aa134, 0.001); end
  def test_output_ad501; assert_in_epsilon(5986.658294118792, worksheet.output_ad501, 0.001); end
  def test_output_ad502; assert_in_epsilon(6242.926712050518, worksheet.output_ad502, 0.001); end
  def test_costs_r65; assert_in_delta(0, (worksheet.costs_r65||0), 0.001); end
  def test_costs_r134; assert_in_delta(0, (worksheet.costs_r134||0), 0.001); end
  def test_output_ae500; assert_in_delta(0, (worksheet.output_ae500||0), 0.001); end
  def test_costs_ab65; assert_in_epsilon(5121.616581378746, worksheet.costs_ab65, 0.001); end
  def test_costs_ab134; assert_in_epsilon(6929.2459630418325, worksheet.costs_ab134, 0.001); end
  def test_output_ae501; assert_in_epsilon(6025.4312722102895, worksheet.output_ae501, 0.001); end
  def test_output_ae502; assert_in_epsilon(6418.387816875421, worksheet.output_ae502, 0.001); end
  def test_costs_s65; assert_in_delta(0, (worksheet.costs_s65||0), 0.001); end
  def test_costs_s134; assert_in_delta(0, (worksheet.costs_s134||0), 0.001); end
  def test_output_af500; assert_in_delta(0, (worksheet.output_af500||0), 0.001); end
  def test_costs_ac65; assert_in_epsilon(5413.367232801102, worksheet.costs_ac65, 0.001); end
  def test_costs_ac134; assert_in_epsilon(7323.9674326132545, worksheet.costs_ac134, 0.001); end
  def test_output_af501; assert_in_epsilon(6368.6673327071785, worksheet.output_af501, 0.001); end
  def test_output_af502; assert_in_epsilon(6931.562246489228, worksheet.output_af502, 0.001); end
  def test_costs_t65; assert_in_delta(0, (worksheet.costs_t65||0), 0.001); end
  def test_costs_t134; assert_in_delta(0, (worksheet.costs_t134||0), 0.001); end
  def test_output_ag500; assert_in_delta(0, (worksheet.output_ag500||0), 0.001); end
  def test_costs_ad65; assert_in_epsilon(5082.201286856713, worksheet.costs_ad65, 0.001); end
  def test_costs_ad134; assert_in_epsilon(6875.919388100259, worksheet.costs_ad134, 0.001); end
  def test_output_ag501; assert_in_epsilon(5979.060337478486, worksheet.output_ag501, 0.001); end
  def test_output_ag502; assert_in_epsilon(7281.184615901671, worksheet.output_ag502, 0.001); end
  def test_costs_u65; assert_in_delta(0, (worksheet.costs_u65||0), 0.001); end
  def test_costs_u134; assert_in_delta(0, (worksheet.costs_u134||0), 0.001); end
  def test_output_ah500; assert_in_delta(0, (worksheet.output_ah500||0), 0.001); end
  def test_costs_ae65; assert_in_epsilon(4701.160169441708, worksheet.costs_ae65, 0.001); end
  def test_costs_ae134; assert_in_epsilon(6360.393170421133, worksheet.costs_ae134, 0.001); end
  def test_output_ah501; assert_in_epsilon(5530.77666993142, worksheet.output_ah501, 0.001); end
  def test_output_ah502; assert_in_epsilon(6951.440807489009, worksheet.output_ah502, 0.001); end
  def test_costs_v65; assert_in_delta(0, (worksheet.costs_v65||0), 0.001); end
  def test_costs_v134; assert_in_delta(0, (worksheet.costs_v134||0), 0.001); end
  def test_output_ai500; assert_in_delta(0, (worksheet.output_ai500||0), 0.001); end
  def test_costs_af65; assert_in_epsilon(4368.761639025471, worksheet.costs_af65, 0.001); end
  def test_costs_af134; assert_in_epsilon(5910.677511622695, worksheet.costs_af134, 0.001); end
  def test_output_ai501; assert_in_epsilon(5139.719575324083, worksheet.output_ai501, 0.001); end
  def test_output_ai502; assert_in_epsilon(6659.2990586446485, worksheet.output_ai502, 0.001); end
  def test_costs_w65; assert_in_delta(0, (worksheet.costs_w65||0), 0.001); end
  def test_costs_w134; assert_in_delta(0, (worksheet.costs_w134||0), 0.001); end
  def test_output_aj500; assert_in_delta(0, (worksheet.output_aj500||0), 0.001); end
  def test_costs_ag65; assert_in_epsilon(4060.1823557178245, worksheet.costs_ag65, 0.001); end
  def test_costs_ag134; assert_in_epsilon(5493.187893029997, worksheet.costs_ag134, 0.001); end
  def test_output_aj501; assert_in_epsilon(4776.685124373911, worksheet.output_aj501, 0.001); end
  def test_output_aj502; assert_in_epsilon(6373.7697537436015, worksheet.output_aj502, 0.001); end
  def test_output_ak502; assert_in_epsilon(6230.182921998155, worksheet.output_ak502, 0.001); end
  def test_output_ap499; assert_in_epsilon(6483.399915046169, worksheet.output_ap499, 0.001); end
  def test_output_as499; assert_in_delta(-0.17370918607553676, worksheet.output_as499, 0.001); end
  def test_output_e500; assert_equal("Average O&M COSTS for Industry", worksheet.output_e500); end
  def test_output_f500; assert_equal("MEUR", worksheet.output_f500); end
  def test_output_am500; assert_equal("", worksheet.output_am500); end
  def test_output_an500; assert_equal("", worksheet.output_an500); end
  def test_output_ao500; assert_equal("Energy", worksheet.output_ao500); end
  def test_output_aq500; assert_in_epsilon(19502.676280373937, worksheet.output_aq500, 0.001); end
  def test_output_ar500; assert_in_epsilon(-19393.61117620727, worksheet.output_ar500, 0.001); end
  def test_costs_p69; assert_in_delta(0, (worksheet.costs_p69||0), 0.001); end
  def test_costs_p138; assert_in_delta(0, (worksheet.costs_p138||0), 0.001); end
  def test_output_ac505; assert_in_delta(0, (worksheet.output_ac505||0), 0.001); end
  def test_costs_z69; assert_in_delta(0, (worksheet.costs_z69||0), 0.001); end
  def test_costs_z138; assert_in_delta(0, (worksheet.costs_z138||0), 0.001); end
  def test_output_ac506; assert_in_delta(0, (worksheet.output_ac506||0), 0.001); end
  def test_output_ac507; assert_in_delta(0, (worksheet.output_ac507||0), 0.001); end
  def test_costs_q69; assert_in_delta(0, (worksheet.costs_q69||0), 0.001); end
  def test_costs_q138; assert_in_delta(0, (worksheet.costs_q138||0), 0.001); end
  def test_output_ad505; assert_in_delta(0, (worksheet.output_ad505||0), 0.001); end
  def test_costs_aa69; assert_in_epsilon(23.4609375, worksheet.costs_aa69, 0.001); end
  def test_costs_aa138; assert_in_epsilon(27.7265625, worksheet.costs_aa138, 0.001); end
  def test_output_ad506; assert_in_epsilon(25.59375, worksheet.output_ad506, 0.001); end
  def test_output_ad507; assert_in_epsilon(25.59375, worksheet.output_ad507, 0.001); end
  def test_costs_r69; assert_in_delta(0, (worksheet.costs_r69||0), 0.001); end
  def test_costs_r138; assert_in_delta(0, (worksheet.costs_r138||0), 0.001); end
  def test_output_ae505; assert_in_delta(0, (worksheet.output_ae505||0), 0.001); end
  def test_costs_ab69; assert_in_epsilon(46.59375, worksheet.costs_ab69, 0.001); end
  def test_costs_ab138; assert_in_epsilon(63.65625, worksheet.costs_ab138, 0.001); end
  def test_output_ae506; assert_in_epsilon(55.125, worksheet.output_ae506, 0.001); end
  def test_output_ae507; assert_in_epsilon(55.125, worksheet.output_ae507, 0.001); end
  def test_costs_s69; assert_in_delta(0, (worksheet.costs_s69||0), 0.001); end
  def test_costs_s138; assert_in_delta(0, (worksheet.costs_s138||0), 0.001); end
  def test_output_af505; assert_in_delta(0, (worksheet.output_af505||0), 0.001); end
  def test_costs_ac69; assert_in_epsilon(71.85937500000001, worksheet.costs_ac69, 0.001); end
  def test_costs_ac138; assert_in_epsilon(95.97656250000001, worksheet.costs_ac138, 0.001); end
  def test_output_af506; assert_in_epsilon(83.91796875000001, worksheet.output_af506, 0.001); end
  def test_output_af507; assert_in_epsilon(83.91796875000001, worksheet.output_af507, 0.001); end
  def test_costs_t69; assert_in_delta(0, (worksheet.costs_t69||0), 0.001); end
  def test_costs_t138; assert_in_delta(0, (worksheet.costs_t138||0), 0.001); end
  def test_output_ag505; assert_in_delta(0, (worksheet.output_ag505||0), 0.001); end
  def test_costs_ad69; assert_in_epsilon(98.4375, worksheet.costs_ad69, 0.001); end
  def test_costs_ad138; assert_in_epsilon(128.625, worksheet.costs_ad138, 0.001); end
  def test_output_ag506; assert_in_epsilon(113.53125, worksheet.output_ag506, 0.001); end
  def test_output_ag507; assert_in_epsilon(113.53125, worksheet.output_ag507, 0.001); end
  def test_costs_u69; assert_in_delta(0, (worksheet.costs_u69||0), 0.001); end
  def test_costs_u138; assert_in_delta(0, (worksheet.costs_u138||0), 0.001); end
  def test_output_ah505; assert_in_delta(0, (worksheet.output_ah505||0), 0.001); end
  def test_costs_ae69; assert_in_epsilon(120.5859375, worksheet.costs_ae69, 0.001); end
  def test_costs_ae138; assert_in_epsilon(157.5, worksheet.costs_ae138, 0.001); end
  def test_output_ah506; assert_in_epsilon(139.04296875, worksheet.output_ah506, 0.001); end
  def test_output_ah507; assert_in_epsilon(139.04296875, worksheet.output_ah507, 0.001); end
  def test_costs_v69; assert_in_delta(0, (worksheet.costs_v69||0), 0.001); end
  def test_costs_v138; assert_in_delta(0, (worksheet.costs_v138||0), 0.001); end
  def test_output_ai505; assert_in_delta(0, (worksheet.output_ai505||0), 0.001); end
  def test_costs_af69; assert_in_epsilon(141.75, worksheet.costs_af69, 0.001); end
  def test_costs_af138; assert_in_epsilon(185.0625, worksheet.costs_af138, 0.001); end
  def test_output_ai506; assert_in_epsilon(163.40625, worksheet.output_ai506, 0.001); end
  def test_output_ai507; assert_in_epsilon(163.40625, worksheet.output_ai507, 0.001); end
  def test_costs_w69; assert_in_delta(0, (worksheet.costs_w69||0), 0.001); end
  def test_costs_w138; assert_in_delta(0, (worksheet.costs_w138||0), 0.001); end
  def test_output_aj505; assert_in_delta(0, (worksheet.output_aj505||0), 0.001); end
  def test_costs_ag69; assert_in_epsilon(163.078125, worksheet.costs_ag69, 0.001); end
  def test_costs_ag138; assert_in_epsilon(213.609375, worksheet.costs_ag138, 0.001); end
  def test_output_aj506; assert_in_epsilon(188.34375, worksheet.output_aj506, 0.001); end
  def test_output_aj507; assert_in_epsilon(188.34375, worksheet.output_aj507, 0.001); end
  def test_output_ak507; assert_in_epsilon(212.625, worksheet.output_ak507, 0.001); end
  def test_output_ap500; assert_in_epsilon(109.06510416666667, worksheet.output_ap500, 0.001); end
  def test_output_as500; assert_in_epsilon(-177.8168308221769, worksheet.output_as500, 0.001); end
  def test_output_e501; assert_equal("Average FUEL COSTS for Industry", worksheet.output_e501); end
  def test_output_f501; assert_equal("MEUR", worksheet.output_f501); end
  def test_output_am501; assert_in_delta(-0.004117272188837284, worksheet.output_am501, 0.001); end
  def test_output_an501; assert_in_delta(-0.15213246121273505, worksheet.output_an501, 0.001); end
  def test_output_e502; assert_equal("Average TOTAL COSTS for Industry", worksheet.output_e502); end
  def test_output_f502; assert_equal("MEUR", worksheet.output_f502); end
  def test_output_am502; assert_in_delta(0.004232027611090761, worksheet.output_am502, 0.001); end
  def test_output_an502; assert_in_delta(0.18403004348412555, worksheet.output_an502, 0.001); end
  def test_output_c503; assert_equal("Energy ", worksheet.output_c503); end
  def test_output_am503; assert_equal("", worksheet.output_am503); end
  def test_output_an503; assert_equal("", worksheet.output_an503); end
  def test_output_e504; assert_equal("Average INVESTMENTS for Energy ", worksheet.output_e504); end
  def test_output_f504; assert_equal("MEUR", worksheet.output_f504); end
  def test_output_am504; assert_equal("", worksheet.output_am504); end
  def test_output_an504; assert_equal("", worksheet.output_an504); end
  def test_output_e505; assert_equal("Average O&M COSTS for Energy ", worksheet.output_e505); end
  def test_output_f505; assert_equal("MEUR", worksheet.output_f505); end
  def test_output_am505; assert_equal("", worksheet.output_am505); end
  def test_output_an505; assert_equal("", worksheet.output_an505); end
  def test_output_e506; assert_equal("Average FUEL COSTS for Energy ", worksheet.output_e506); end
  def test_output_f506; assert_equal("MEUR", worksheet.output_f506); end
  def test_output_am506; assert_equal("", worksheet.output_am506); end
  def test_output_an506; assert_equal("", worksheet.output_an506); end
  def test_output_e507; assert_equal("Average TOTAL COSTS for Energy ", worksheet.output_e507); end
  def test_output_f507; assert_equal("MEUR", worksheet.output_f507); end
  def test_output_am507; assert_equal("", worksheet.output_am507); end
  def test_output_an507; assert_equal("", worksheet.output_an507); end
  def test_output_c508; assert_equal("TOTAL", worksheet.output_c508); end
  def test_output_am508; assert_equal("", worksheet.output_am508); end
  def test_output_an508; assert_equal("", worksheet.output_an508); end
  def test_output_b509; assert_equal("INV", worksheet.output_b509); end
  def test_output_e509; assert_equal("Total average INVESTMENTS", worksheet.output_e509); end
  def test_output_f509; assert_equal("MEUR", worksheet.output_f509); end
  def test_output_am509; assert_in_delta(0.003722130189128592, worksheet.output_am509, 0.001); end
  def test_output_an509; assert_in_delta(0.16021903219660083, worksheet.output_an509, 0.001); end
  def test_output_ao509; assert_equal("Capital", worksheet.output_ao509); end
  def test_output_ap509; assert_in_epsilon(34224.304599773786, worksheet.output_ap509, 0.001); end
  def test_output_b510; assert_equal("O&M", worksheet.output_b510); end
  def test_output_e510; assert_equal("Total average O&M COSTS", worksheet.output_e510); end
  def test_output_f510; assert_equal("MEUR", worksheet.output_f510); end
  def test_output_am510; assert_in_delta(0.002868888224840882, worksheet.output_am510, 0.001); end
  def test_output_an510; assert_in_delta(0.12141494617481507, worksheet.output_an510, 0.001); end
  def test_output_ao510; assert_equal("O&M", worksheet.output_ao510); end
  def test_output_ap510; assert_in_epsilon(9558.289379030428, worksheet.output_ap510, 0.001); end
  def test_output_b511; assert_equal("FUEL", worksheet.output_b511); end
  def test_output_e511; assert_equal("Total average FUEL COSTS", worksheet.output_e511); end
  def test_output_f511; assert_equal("MEUR", worksheet.output_f511); end
  def test_output_am511; assert_in_delta(-0.005546137345221802, worksheet.output_am511, 0.001); end
  def test_output_an511; assert_in_delta(-0.19945535021524108, worksheet.output_an511, 0.001); end
  def test_output_ao511; assert_equal("Fuel", worksheet.output_ao511); end
  def test_output_ap511; assert_in_epsilon(13575.999665506799, worksheet.output_ap511, 0.001); end
  def test_output_b512; assert_equal("TOTAL COSTS", worksheet.output_b512); end
  def test_output_e512; assert_equal("Total average COSTS", worksheet.output_e512); end
  def test_output_f512; assert_equal("MEUR", worksheet.output_f512); end
  def test_output_am512; assert_in_delta(0.00147433471332592, worksheet.output_am512, 0.001); end
  def test_output_an512; assert_in_delta(0.06070094447850383, worksheet.output_an512, 0.001); end
  def test_output_ac512; assert_in_epsilon(52728.721446936725, worksheet.output_ac512, 0.001); end
  def test_output_ad512; assert_in_epsilon(57273.107052412925, worksheet.output_ad512, 0.001); end
  def test_output_ae512; assert_in_epsilon(60367.16871250271, worksheet.output_ae512, 0.001); end
  def test_output_af512; assert_in_epsilon(58913.335926631735, worksheet.output_af512, 0.001); end
  def test_output_ag512; assert_in_epsilon(59752.22410616126, worksheet.output_ag512, 0.001); end
  def test_output_ah512; assert_in_epsilon(57853.425020763425, worksheet.output_ah512, 0.001); end
  def test_output_ai512; assert_in_epsilon(57420.992735307875, worksheet.output_ai512, 0.001); end
  def test_output_aj512; assert_in_epsilon(55988.96315817279, worksheet.output_aj512, 0.001); end
  def test_output_ak512; assert_in_epsilon(55929.40463990972, worksheet.output_ak512, 0.001); end
  def test_output_ap512; assert_in_epsilon(57358.59364431102, worksheet.output_ap512, 0.001); end
  def test_output_b513; assert_equal("REF", worksheet.output_b513); end
  def test_output_e513; assert_equal("Total average INVESTMENTS", worksheet.output_e513); end
  def test_output_f513; assert_equal("MEUR", worksheet.output_f513); end
  def test_output_ac513; assert_in_epsilon(26712.608496250334, worksheet.output_ac513, 0.001); end
  def test_output_ad513; assert_in_epsilon(29213.654785075996, worksheet.output_ad513, 0.001); end
  def test_output_ae513; assert_in_epsilon(30019.527055723473, worksheet.output_ae513, 0.001); end
  def test_output_af513; assert_in_epsilon(27383.68688846735, worksheet.output_af513, 0.001); end
  def test_output_ag513; assert_in_epsilon(28803.850911083133, worksheet.output_ag513, 0.001); end
  def test_output_ah513; assert_in_epsilon(28724.84579625379, worksheet.output_ah513, 0.001); end
  def test_output_ai513; assert_in_epsilon(30013.84585483641, worksheet.output_ai513, 0.001); end
  def test_output_aj513; assert_in_epsilon(30391.09215443937, worksheet.output_aj513, 0.001); end
  def test_output_ak513; assert_in_epsilon(31992.375544770453, worksheet.output_ak513, 0.001); end
  def test_output_am513; assert_in_delta(0.004519229252334833, worksheet.output_am513, 0.001); end
  def test_output_an513; assert_in_delta(0.19765074793280646, worksheet.output_an513, 0.001); end
  def test_output_b514; assert_equal("REF", worksheet.output_b514); end
  def test_output_e514; assert_equal("Total average O&M COSTS", worksheet.output_e514); end
  def test_output_f514; assert_equal("MEUR", worksheet.output_f514); end
  def test_output_ac514; assert_in_epsilon(8319.723982726187, worksheet.output_ac514, 0.001); end
  def test_output_ad514; assert_in_epsilon(9706.666442106727, worksheet.output_ad514, 0.001); end
  def test_output_ae514; assert_in_epsilon(10060.396101637005, worksheet.output_ae514, 0.001); end
  def test_output_af514; assert_in_epsilon(10319.852315572212, worksheet.output_af514, 0.001); end
  def test_output_ag514; assert_in_epsilon(10538.30740427043, worksheet.output_ag514, 0.001); end
  def test_output_ah514; assert_in_epsilon(10655.506560587142, worksheet.output_ah514, 0.001); end
  def test_output_ai514; assert_in_epsilon(10727.086381070789, worksheet.output_ai514, 0.001); end
  def test_output_aj514; assert_in_epsilon(10724.411303005989, worksheet.output_aj514, 0.001); end
  def test_output_ak514; assert_in_epsilon(10672.027362461438, worksheet.output_ak514, 0.001); end
  def test_output_ao514; assert_equal("Fuel", worksheet.output_ao514); end
  def test_output_ap514; assert_in_epsilon(13.5759996655068, worksheet.output_ap514, 0.001); end
  def test_output_b515; assert_equal("REF", worksheet.output_b515); end
  def test_output_e515; assert_equal("Total average FUEL COSTS", worksheet.output_e515); end
  def test_output_f515; assert_equal("MEUR", worksheet.output_f515); end
  def test_output_ac515; assert_in_epsilon(13583.399367224058, worksheet.output_ac515, 0.001); end
  def test_output_ad515; assert_in_epsilon(15054.409851515189, worksheet.output_ad515, 0.001); end
  def test_output_ae515; assert_in_epsilon(17510.250623183172, worksheet.output_ae515, 0.001); end
  def test_output_af515; assert_in_epsilon(21315.327407772475, worksheet.output_af515, 0.001); end
  def test_output_ag515; assert_in_epsilon(23669.30302242987, worksheet.output_ag515, 0.001); end
  def test_output_ah515; assert_in_epsilon(24434.110575386567, worksheet.output_ah515, 0.001); end
  def test_output_ai515; assert_in_epsilon(25369.880894167327, worksheet.output_ai515, 0.001); end
  def test_output_aj515; assert_in_epsilon(26261.57487389438, worksheet.output_aj515, 0.001); end
  def test_output_ak515; assert_in_epsilon(27265.3860526039, worksheet.output_ak515, 0.001); end
  def test_output_ao515; assert_equal("O&M", worksheet.output_ao515); end
  def test_output_ap515; assert_in_epsilon(9.558289379030429, worksheet.output_ap515, 0.001); end
  def test_output_b516; assert_equal("REF", worksheet.output_b516); end
  def test_output_e516; assert_equal("Total average COSTS", worksheet.output_e516); end
  def test_output_f516; assert_equal("MEUR", worksheet.output_f516); end
  def test_output_ac516; assert_in_epsilon(48615.73184620058, worksheet.output_ac516, 0.001); end
  def test_output_ad516; assert_in_epsilon(53974.73107869791, worksheet.output_ad516, 0.001); end
  def test_output_ae516; assert_in_epsilon(57590.17378054365, worksheet.output_ae516, 0.001); end
  def test_output_af516; assert_in_epsilon(59018.86661181204, worksheet.output_af516, 0.001); end
  def test_output_ag516; assert_in_epsilon(63011.46133778344, worksheet.output_ag516, 0.001); end
  def test_output_ah516; assert_in_epsilon(63814.4629322275, worksheet.output_ah516, 0.001); end
  def test_output_ai516; assert_in_epsilon(66110.81313007453, worksheet.output_ai516, 0.001); end
  def test_output_aj516; assert_in_epsilon(67377.07833133974, worksheet.output_aj516, 0.001); end
  def test_output_ak516; assert_in_epsilon(69929.78895983579, worksheet.output_ak516, 0.001); end
  def test_output_ao516; assert_equal("Capital", worksheet.output_ao516); end
  def test_output_ap516; assert_in_epsilon(34.22430459977379, worksheet.output_ap516, 0.001); end
  def test_output_am517; assert_equal("", worksheet.output_am517); end
  def test_output_an517; assert_equal("", worksheet.output_an517); end
  def test_output_ao517; assert_equal("Total", worksheet.output_ao517); end
  def test_output_ac511; assert_in_epsilon(13689.22808509905, worksheet.output_ac511, 0.001); end
  def test_output_ad511; assert_in_epsilon(14753.52325741198, worksheet.output_ad511, 0.001); end
  def test_output_ae511; assert_in_epsilon(14870.928434139993, worksheet.output_ae511, 0.001); end
  def test_output_af511; assert_in_epsilon(15620.915951745332, worksheet.output_af511, 0.001); end
  def test_output_ag511; assert_in_epsilon(14675.166164059327, worksheet.output_ag511, 0.001); end
  def test_output_ah511; assert_in_epsilon(13462.361079604689, worksheet.output_ah511, 0.001); end
  def test_output_ai511; assert_in_epsilon(12504.068353683677, worksheet.output_ai511, 0.001); end
  def test_output_aj511; assert_in_epsilon(11648.967360607863, worksheet.output_aj511, 0.001); end
  def test_output_ac510; assert_in_epsilon(8344.401381718486, worksheet.output_ac510, 0.001); end
  def test_output_ad510; assert_in_epsilon(9209.022237982517, worksheet.output_ad510, 0.001); end
  def test_output_ae510; assert_in_epsilon(9656.167525050614, worksheet.output_ae510, 0.001); end
  def test_output_af510; assert_in_epsilon(9893.342879917875, worksheet.output_af510, 0.001); end
  def test_output_ag510; assert_in_epsilon(10021.036643902939, worksheet.output_ag510, 0.001); end
  def test_output_ah510; assert_in_epsilon(9995.365925561957, worksheet.output_ah510, 0.001); end
  def test_output_ai510; assert_in_epsilon(9881.969379282307, worksheet.output_ai510, 0.001); end
  def test_output_aj510; assert_in_epsilon(9665.762011516272, worksheet.output_aj510, 0.001); end
  def test_output_ac509; assert_in_epsilon(30695.09198011919, worksheet.output_ac509, 0.001); end
  def test_output_ad509; assert_in_epsilon(33310.56155701843, worksheet.output_ad509, 0.001); end
  def test_output_ae509; assert_in_epsilon(35840.0727533121, worksheet.output_ae509, 0.001); end
  def test_output_af509; assert_in_epsilon(33399.077094968525, worksheet.output_af509, 0.001); end
  def test_output_ag509; assert_in_epsilon(35056.02129819899, worksheet.output_ag509, 0.001); end
  def test_output_ah509; assert_in_epsilon(34395.69801559678, worksheet.output_ah509, 0.001); end
  def test_output_ai509; assert_in_epsilon(35034.95500234189, worksheet.output_ai509, 0.001); end
  def test_output_aj509; assert_in_epsilon(34674.233786048644, worksheet.output_aj509, 0.001); end
  def test_output_ap517; assert_in_epsilon(57.358593644311014, worksheet.output_ap517, 0.001); end
  def test_output_e518; assert_equal("Average costs per person (€)", worksheet.output_e518); end
  def test_output_f518; assert_equal("KEUR", worksheet.output_f518); end
  def test_output_ac518; assert_in_epsilon(4864.315826285998, worksheet.output_ac518, 0.001); end
  def test_output_ad518; assert_in_epsilon(5100.956820824822, worksheet.output_ad518, 0.001); end
  def test_output_ae518; assert_in_epsilon(5196.932134929835, worksheet.output_ae518, 0.001); end
  def test_output_af518; assert_in_epsilon(4972.379655487175, worksheet.output_af518, 0.001); end
  def test_output_ag518; assert_in_epsilon(4946.2492358359395, worksheet.output_ag518, 0.001); end
  def test_output_ah518; assert_in_epsilon(4732.626717025876, worksheet.output_ah518, 0.001); end
  def test_output_ai518; assert_in_epsilon(4642.537858652114, worksheet.output_ai518, 0.001); end
  def test_output_aj518; assert_in_epsilon(4488.570520799089, worksheet.output_aj518, 0.001); end
  def test_output_ak518; assert_in_epsilon(4446.288112035706, worksheet.output_ak518, 0.001); end
  def test_output_am518; assert_in_delta(-0.002243890155542494, worksheet.output_am518, 0.001); end
  def test_output_an518; assert_in_delta(-0.08593761778199838, worksheet.output_an518, 0.001); end
  def test_output_am519; assert_equal("", worksheet.output_am519); end
  def test_output_an519; assert_equal("", worksheet.output_an519); end
  def test_output_e520; assert_equal("Cost of Electricity production", worksheet.output_e520); end
  def test_output_f520; assert_equal("EUR/MWh", worksheet.output_f520); end
  def test_costs_p180; assert_in_epsilon(86.66232520779187, worksheet.costs_p180, 0.001); end
  def test_costs_p181; assert_in_delta(0, (worksheet.costs_p181||0), 0.001); end
  def test_costs_p182; assert_in_epsilon(27.675089425073754, worksheet.costs_p182, 0.001); end
  def test_costs_p187; assert_in_delta(0, (worksheet.costs_p187||0), 0.001); end
  def test_costs_p192; assert_in_epsilon(72, worksheet.costs_p192, 0.001); end
  def test_costs_f193; assert_in_epsilon(92.25983949924583, worksheet.costs_f193, 0.001); end
  def test_costs_p193; assert_in_epsilon(59.23370111893029, worksheet.costs_p193, 0.001); end
  def test_costs_z180; assert_in_epsilon(92.25893833449824, worksheet.costs_z180, 0.001); end
  def test_costs_z181; assert_in_delta(0, (worksheet.costs_z181||0), 0.001); end
  def test_costs_z182; assert_in_epsilon(34.417701889904954, worksheet.costs_z182, 0.001); end
  def test_costs_z187; assert_in_delta(0, (worksheet.costs_z187||0), 0.001); end
  def test_costs_z192; assert_in_epsilon(72, worksheet.costs_z192, 0.001); end
  def test_costs_z193; assert_in_epsilon(65.80468903401166, worksheet.costs_z193, 0.001); end
  def test_costs_aj193; assert_in_epsilon(62.51919507647098, worksheet.costs_aj193, 0.001); end
  def test_output_ac520; assert_in_epsilon(62.51919507647098, worksheet.output_ac520, 0.001); end
  def test_output_ad520; assert_in_epsilon(68.19582116426872, worksheet.output_ad520, 0.001); end
  def test_output_ae520; assert_in_epsilon(75.74196055351227, worksheet.output_ae520, 0.001); end
  def test_output_af520; assert_in_epsilon(97.28706468235157, worksheet.output_af520, 0.001); end
  def test_output_ag520; assert_in_epsilon(93.1851479380366, worksheet.output_ag520, 0.001); end
  def test_output_ah520; assert_in_epsilon(89.02450255218142, worksheet.output_ah520, 0.001); end
  def test_output_ai520; assert_in_epsilon(86.25109814628419, worksheet.output_ai520, 0.001); end
  def test_output_aj520; assert_in_epsilon(83.80479841208917, worksheet.output_aj520, 0.001); end
  def test_costs_x180; assert_in_epsilon(163.11882420127873, worksheet.costs_x180, 0.001); end
  def test_costs_x181; assert_in_delta(0, (worksheet.costs_x181||0), 0.001); end
  def test_costs_x182; assert_in_delta(0, (worksheet.costs_x182||0), 0.001); end
  def test_costs_x187; assert_in_epsilon(54.789784533054366, worksheet.costs_x187, 0.001); end
  def test_costs_x192; assert_in_epsilon(70, worksheet.costs_x192, 0.001); end
  def test_costs_n193; assert_in_epsilon(94.47588772639163, worksheet.costs_n193, 0.001); end
  def test_costs_x193; assert_in_epsilon(66.6971785190528, worksheet.costs_x193, 0.001); end
  def test_costs_ah180; assert_in_epsilon(232.16648818247126, worksheet.costs_ah180, 0.001); end
  def test_costs_ah181; assert_in_delta(0, (worksheet.costs_ah181||0), 0.001); end
  def test_costs_ah182; assert_in_delta(0, (worksheet.costs_ah182||0), 0.001); end
  def test_costs_ah187; assert_in_epsilon(66.96529220706644, worksheet.costs_ah187, 0.001); end
  def test_costs_ah192; assert_in_epsilon(92, worksheet.costs_ah192, 0.001); end
  def test_costs_ah193; assert_in_epsilon(95.84320085465369, worksheet.costs_ah193, 0.001); end
  def test_costs_ar193; assert_in_epsilon(81.27018968685324, worksheet.costs_ar193, 0.001); end
  def test_output_ak520; assert_in_epsilon(81.27018968685324, worksheet.output_ak520, 0.001); end
  def test_output_am520; assert_in_delta(0.006579189605073532, worksheet.output_am520, 0.001); end
  def test_output_an520; assert_in_delta(0.29992380080144665, worksheet.output_an520, 0.001); end
  def test_output_am521; assert_equal("", worksheet.output_am521); end
  def test_output_an521; assert_equal("", worksheet.output_an521); end
  def test_output_b522; assert_equal("Other info", worksheet.output_b522); end
  def test_output_am522; assert_equal("", worksheet.output_am522); end
  def test_output_an522; assert_equal("", worksheet.output_an522); end
  def test_output_e523; assert_equal("Population", worksheet.output_e523); end
  def test_output_f523; assert_equal("people", worksheet.output_f523); end
  def test_output_ac523; assert_in_epsilon(10839905, worksheet.output_ac523, 0.001); end
  def test_output_ad523; assert_in_epsilon(11227914.5, worksheet.output_ad523, 0.001); end
  def test_output_ae523; assert_in_epsilon(11615924, worksheet.output_ae523, 0.001); end
  def test_output_af523; assert_in_epsilon(11848117, worksheet.output_af523, 0.001); end
  def test_output_ag523; assert_in_epsilon(12080310, worksheet.output_ag523, 0.001); end
  def test_output_ah523; assert_in_epsilon(12224379.5, worksheet.output_ah523, 0.001); end
  def test_output_ai523; assert_in_epsilon(12368449, worksheet.output_ai523, 0.001); end
  def test_output_aj523; assert_in_epsilon(12473673.5, worksheet.output_aj523, 0.001); end
  def test_output_ak523; assert_in_epsilon(12578898, worksheet.output_ak523, 0.001); end
  def test_output_am523; assert_in_delta(0.0037265869205733715, worksheet.output_am523, 0.001); end
  def test_output_an523; assert_in_delta(0.1604251144267408, worksheet.output_an523, 0.001); end
  def test_output_e524; assert_equal("Households", worksheet.output_e524); end
  def test_output_f524; assert_equal("hh", worksheet.output_f524); end
  def test_output_ac524; assert_in_epsilon(4606544, worksheet.output_ac524, 0.001); end
  def test_output_ad524; assert_in_epsilon(4947368.153846154, worksheet.output_ad524, 0.001); end
  def test_output_ae524; assert_in_epsilon(5256074.208144796, worksheet.output_ae524, 0.001); end
  def test_output_af524; assert_in_epsilon(5459961.751152074, worksheet.output_af524, 0.001); end
  def test_output_ag524; assert_in_epsilon(5671507.042253521, worksheet.output_ag524, 0.001); end
  def test_output_ah524; assert_in_epsilon(5854142.996926513, worksheet.output_ah524, 0.001); end
  def test_output_ai524; assert_in_epsilon(6044247.714748655, worksheet.output_ai524, 0.001); end
  def test_output_aj524; assert_in_epsilon(6217810.62386229, worksheet.output_aj524, 0.001); end
  def test_output_ak524; assert_in_epsilon(6398471.260594608, worksheet.output_ak524, 0.001); end
  def test_output_am524; assert_in_delta(0.008248361701082674, worksheet.output_am524, 0.001); end
  def test_output_an524; assert_in_delta(0.38899601536305917, worksheet.output_an524, 0.001); end
  def test_output_e525; assert_equal("Gross Domestic Product", worksheet.output_e525); end
  def test_output_f525; assert_equal("MEUR", worksheet.output_f525); end
  def test_output_ac525; assert_in_epsilon(80777.83559999999, worksheet.output_ac525, 0.001); end
  def test_output_ad525; assert_in_epsilon(89358.06912997126, worksheet.output_ad525, 0.001); end
  def test_output_ae525; assert_in_epsilon(97695.07392935293, worksheet.output_ae525, 0.001); end
  def test_output_af525; assert_in_epsilon(106809.91166202926, worksheet.output_af525, 0.001); end
  def test_output_ag525; assert_in_epsilon(116775.15324365605, worksheet.output_ag525, 0.001); end
  def test_output_ah525; assert_in_epsilon(126420.93139305901, worksheet.output_ah525, 0.001); end
  def test_output_ai525; assert_in_epsilon(136863.4632483926, worksheet.output_ai525, 0.001); end
  def test_output_aj525; assert_in_epsilon(148168.56169256594, worksheet.output_aj525, 0.001); end
  def test_output_ak525; assert_in_epsilon(160407.47583743144, worksheet.output_ak525, 0.001); end
  def test_output_am525; assert_in_delta(0.017298279062856192, worksheet.output_am525, 0.001); end
  def test_output_an525; assert_in_delta(0.9857857622200445, worksheet.output_an525, 0.001); end
  def test_output_b527; assert_equal("REF", worksheet.output_b527); end
  def test_output_c527; assert_equal("CRTL+SHIFT+R to reset Reference scenario Values", worksheet.output_c527); end
  def test_output_b530; assert_equal("Summary indicators", worksheet.output_b530); end
  def test_output_am530; assert_equal("", worksheet.output_am530); end
  def test_output_an530; assert_equal("", worksheet.output_an530); end
  def test_output_c531; assert_equal("Indicators", worksheet.output_c531); end
  def test_output_f531; assert_equal("Units", worksheet.output_f531); end
  def test_output_ak531; assert_equal("Current", worksheet.output_ak531); end
  def test_output_al531; assert_equal("REF", worksheet.output_al531); end
  def test_output_am531; assert_equal("CORE", worksheet.output_am531); end
  def test_output_an531; assert_equal("BEHA", worksheet.output_an531); end
  def test_output_ao531; assert_equal("TECH", worksheet.output_ao531); end
  def test_output_ap531; assert_in_delta(0.95, worksheet.output_ap531, 0.001); end
  def test_output_c532; assert_equal("GHG (wrt 2010 (1990))", worksheet.output_c532); end
  def test_output_f532; assert_equal("%", worksheet.output_f532); end
  def test_output_i532; assert_equal("(-80%)", worksheet.output_i532); end
  def test_output_j532; assert_equal("(-95%)", worksheet.output_j532); end
  def test_output_ac407; assert_in_epsilon(127.04901379834351, worksheet.output_ac407, 0.001); end
  def test_output_ac532; assert_equal("0% (-11%)", worksheet.output_ac532); end
  def test_output_ad407; assert_in_epsilon(108.09837275984182, worksheet.output_ad407, 0.001); end
  def test_output_ad532; assert_equal("-15% (-25%)", worksheet.output_ad532); end
  def test_output_ae407; assert_in_epsilon(99.24331048340109, worksheet.output_ae407, 0.001); end
  def test_output_ae532; assert_equal("-22% (-31%)", worksheet.output_ae532); end
  def test_output_af407; assert_in_epsilon(95.86461666594961, worksheet.output_af407, 0.001); end
  def test_output_af532; assert_equal("-25% (-33%)", worksheet.output_af532); end
  def test_output_ag407; assert_in_epsilon(77.44178022318016, worksheet.output_ag407, 0.001); end
  def test_output_ag532; assert_equal("-39% (-46%)", worksheet.output_ag532); end
  def test_output_ah407; assert_in_epsilon(65.12953478716648, worksheet.output_ah407, 0.001); end
  def test_output_ah532; assert_equal("-49% (-55%)", worksheet.output_ah532); end
  def test_output_ai407; assert_in_epsilon(54.665068655700594, worksheet.output_ai407, 0.001); end
  def test_output_ai532; assert_equal("-57% (-62%)", worksheet.output_ai532); end
  def test_output_aj407; assert_in_epsilon(44.37401285878242, worksheet.output_aj407, 0.001); end
  def test_output_aj532; assert_equal("-65% (-69%)", worksheet.output_aj532); end
  def test_output_ak407; assert_in_epsilon(31.29043162234812, worksheet.output_ak407, 0.001); end
  def test_output_ak532; assert_equal("-75% (-78%)", worksheet.output_ak532); end
  def test_output_al532; assert_equal("1% (-6%)", worksheet.output_al532); end
  def test_output_am532; assert_equal("-79% (-80%)", worksheet.output_am532); end
  def test_output_an532; assert_equal("-80% (-82%)", worksheet.output_an532); end
  def test_output_ao532; assert_equal("-78% (-80%)", worksheet.output_ao532); end
  def test_output_ap532; assert_equal("-93% (-94%)", worksheet.output_ap532); end
  def test_output_d533; assert_equal("Buildings", worksheet.output_d533); end
  def test_output_f533; assert_equal("%", worksheet.output_f533); end
  def test_output_ac533; assert_equal("0% (-14%)", worksheet.output_ac533); end
  def test_output_ad533; assert_equal("-4% (-17%)", worksheet.output_ad533); end
  def test_output_ae533; assert_equal("-12% (-24%)", worksheet.output_ae533); end
  def test_output_af533; assert_equal("-24% (-34%)", worksheet.output_af533); end
  def test_output_ag533; assert_equal("-36% (-45%)", worksheet.output_ag533); end
  def test_output_ah533; assert_equal("-47% (-55%)", worksheet.output_ah533); end
  def test_output_ai533; assert_equal("-58% (-63%)", worksheet.output_ai533); end
  def test_output_aj533; assert_equal("-65% (-70%)", worksheet.output_aj533); end
  def test_output_ak533; assert_equal("-72% (-76%)", worksheet.output_ak533); end
  def test_output_al533; assert_equal("-27% (-12%)", worksheet.output_al533); end
  def test_output_am533; assert_equal("-91% (-90%)", worksheet.output_am533); end
  def test_output_an533; assert_equal("-100% (-100%)", worksheet.output_an533); end
  def test_output_ao533; assert_equal("-100% (-100%)", worksheet.output_ao533); end
  def test_output_ap533; assert_equal("-100% (-100%)", worksheet.output_ap533); end
  def test_output_d534; assert_equal("Transport", worksheet.output_d534); end
  def test_output_f534; assert_equal("%", worksheet.output_f534); end
  def test_output_i534; assert_equal("-79% ()", worksheet.output_i534); end
  def test_output_ac534; assert_equal("0% (10%)", worksheet.output_ac534); end
  def test_output_ad534; assert_equal("-5% (5%)", worksheet.output_ad534); end
  def test_output_ae534; assert_equal("-20% (-12%)", worksheet.output_ae534); end
  def test_output_af534; assert_equal("-32% (-26%)", worksheet.output_af534); end
  def test_output_ag534; assert_equal("-45% (-40%)", worksheet.output_ag534); end
  def test_output_ah534; assert_equal("-57% (-52%)", worksheet.output_ah534); end
  def test_output_ai534; assert_equal("-65% (-62%)", worksheet.output_ai534); end
  def test_output_aj534; assert_equal("-73% (-71%)", worksheet.output_aj534); end
  def test_output_ak534; assert_equal("-81% (-79%)", worksheet.output_ak534); end
  def test_output_al534; assert_equal("10% (24%)", worksheet.output_al534); end
  def test_output_am534; assert_equal("-84% (-81%)", worksheet.output_am534); end
  def test_output_an534; assert_equal("-95% (-95%)", worksheet.output_an534); end
  def test_output_ao534; assert_equal("-76% (-73%)", worksheet.output_ao534); end
  def test_output_ap534; assert_equal("-96% (-96%)", worksheet.output_ap534); end
  def test_output_e535; assert_equal("Passenger", worksheet.output_e535); end
  def test_output_i535; assert_equal("-77% ()", worksheet.output_i535); end
  def test_output_ac535; assert_equal("0% (N/A)", worksheet.output_ac535); end
  def test_output_ad535; assert_equal("-6% (N/A)", worksheet.output_ad535); end
  def test_output_ae535; assert_equal("-21% (N/A)", worksheet.output_ae535); end
  def test_output_af535; assert_equal("-34% (N/A)", worksheet.output_af535); end
  def test_output_ag535; assert_equal("-49% (N/A)", worksheet.output_ag535); end
  def test_output_ah535; assert_equal("-62% (N/A)", worksheet.output_ah535); end
  def test_output_ai535; assert_equal("-71% (N/A)", worksheet.output_ai535); end
  def test_output_aj535; assert_equal("-80% (N/A)", worksheet.output_aj535); end
  def test_output_ak535; assert_equal("-86% (N/A)", worksheet.output_ak535); end
  def test_output_al535; assert_equal("11% (N/A)", worksheet.output_al535); end
  def test_output_am535; assert_equal("-85% (N/A)", worksheet.output_am535); end
  def test_output_an535; assert_equal("-98% (N/A)", worksheet.output_an535); end
  def test_output_ao535; assert_equal("-77% (N/A)", worksheet.output_ao535); end
  def test_output_ap535; assert_equal("-97% (N/A)", worksheet.output_ap535); end
  def test_output_e536; assert_equal("Freight", worksheet.output_e536); end
  def test_output_i536; assert_equal("-61% ()", worksheet.output_i536); end
  def test_output_ac536; assert_equal("0% (N/A)", worksheet.output_ac536); end
  def test_output_ad536; assert_equal("-1% (N/A)", worksheet.output_ad536); end
  def test_output_ae536; assert_equal("-6% (N/A)", worksheet.output_ae536); end
  def test_output_af536; assert_equal("-10% (N/A)", worksheet.output_af536); end
  def test_output_ag536; assert_equal("-14% (N/A)", worksheet.output_ag536); end
  def test_output_ah536; assert_equal("-18% (N/A)", worksheet.output_ah536); end
  def test_output_ai536; assert_equal("-23% (N/A)", worksheet.output_ai536); end
  def test_output_aj536; assert_equal("-27% (N/A)", worksheet.output_aj536); end
  def test_output_ak536; assert_equal("-31% (N/A)", worksheet.output_ak536); end
  def test_output_al536; assert_equal("95% (N/A)", worksheet.output_al536); end
  def test_output_am536; assert_equal("-24% (N/A)", worksheet.output_am536); end
  def test_output_an536; assert_equal("-27% (N/A)", worksheet.output_an536); end
  def test_output_ao536; assert_equal("-22% (N/A)", worksheet.output_ao536); end
  def test_output_ap536; assert_equal("-53% (N/A)", worksheet.output_ap536); end
  def test_output_d537; assert_equal("Industry", worksheet.output_d537); end
  def test_output_f537; assert_equal("%", worksheet.output_f537); end
  def test_output_i537; assert_equal("-84% ()", worksheet.output_i537); end
  def test_output_ac537; assert_equal("0% (-9%)", worksheet.output_ac537); end
  def test_output_ad537; assert_equal("-12% (-20%)", worksheet.output_ad537); end
  def test_output_ae537; assert_equal("-21% (-28%)", worksheet.output_ae537); end
  def test_output_af537; assert_equal("-28% (-34%)", worksheet.output_af537); end
  def test_output_ag537; assert_equal("-47% (-51%)", worksheet.output_ag537); end
  def test_output_ah537; assert_equal("-55% (-59%)", worksheet.output_ah537); end
  def test_output_ai537; assert_equal("-63% (-66%)", worksheet.output_ai537); end
  def test_output_aj537; assert_equal("-69% (-72%)", worksheet.output_aj537); end
  def test_output_ak537; assert_equal("-81% (-83%)", worksheet.output_ak537); end
  def test_output_al537; assert_equal("-6% (-22%)", worksheet.output_al537); end
  def test_output_am537; assert_equal("-76% (-80%)", worksheet.output_am537); end
  def test_output_an537; assert_equal("-62% (-68%)", worksheet.output_an537); end
  def test_output_ao537; assert_equal("-78% (-81%)", worksheet.output_ao537); end
  def test_output_ap537; assert_equal("-98% (-99%)", worksheet.output_ap537); end
  def test_output_d538; assert_equal("Power", worksheet.output_d538); end
  def test_output_f538; assert_equal("%", worksheet.output_f538); end
  def test_output_i538; assert_equal("-62% ()", worksheet.output_i538); end
  def test_output_ac538; assert_equal("0% (-22%)", worksheet.output_ac538); end
  def test_output_ad538; assert_equal("-51% (-62%)", worksheet.output_ad538); end
  def test_output_ae538; assert_equal("-47% (-58%)", worksheet.output_ae538); end
  def test_output_af538; assert_equal("-17% (-35%)", worksheet.output_af538); end
  def test_output_ag538; assert_equal("-34% (-48%)", worksheet.output_ag538); end
  def test_output_ah538; assert_equal("-48% (-60%)", worksheet.output_ah538); end
  def test_output_ai538; assert_equal("-60% (-69%)", worksheet.output_ai538); end
  def test_output_aj538; assert_equal("-78% (-83%)", worksheet.output_aj538); end
  def test_output_ak538; assert_equal("-100% (-100%)", worksheet.output_ak538); end
  def test_output_al538; assert_equal("49% (16%)", worksheet.output_al538); end
  def test_output_am538; assert_equal("-98% (-98%)", worksheet.output_am538); end
  def test_output_an538; assert_equal("-95% (-96%)", worksheet.output_an538); end
  def test_output_ao538; assert_equal("-82% (-86%)", worksheet.output_ao538); end
  def test_output_ap538; assert_equal("-88% (-91%)", worksheet.output_ap538); end
  def test_output_d539; assert_equal("Agriculture (non-CO2) and waste", worksheet.output_d539); end
  def test_output_f539; assert_equal("%", worksheet.output_f539); end
  def test_output_i539; assert_equal("-18% ()", worksheet.output_i539); end
  def test_output_ac539; assert_equal("0% (-24%)", worksheet.output_ac539); end
  def test_output_ad539; assert_equal("-5% (-28%)", worksheet.output_ad539); end
  def test_output_ae539; assert_equal("-10% (-31%)", worksheet.output_ae539); end
  def test_output_af539; assert_equal("-14% (-35%)", worksheet.output_af539); end
  def test_output_ag539; assert_equal("-18% (-38%)", worksheet.output_ag539); end
  def test_output_ah539; assert_equal("-21% (-40%)", worksheet.output_ah539); end
  def test_output_ai539; assert_equal("-24% (-42%)", worksheet.output_ai539); end
  def test_output_aj539; assert_equal("-26% (-44%)", worksheet.output_aj539); end
  def test_output_ak539; assert_equal("-28% (-46%)", worksheet.output_ak539); end
  def test_output_al539; assert_equal("5% (-20%)", worksheet.output_al539); end
  def test_output_am539; assert_equal("-29% (-46%)", worksheet.output_am539); end
  def test_output_an539; assert_equal("-37% (-52%)", worksheet.output_an539); end
  def test_output_ao539; assert_equal("-18% (-37%)", worksheet.output_ao539); end
  def test_output_ap539; assert_equal("-37% (-52%)", worksheet.output_ap539); end
  def test_output_c540; assert_equal("Energy demand (%wrt 2010(1990)", worksheet.output_c540); end
  def test_output_f540; assert_equal("%", worksheet.output_f540); end
  def test_output_ac540; assert_equal("0% (28%)", worksheet.output_ac540); end
  def test_output_ad540; assert_equal("-3% (24%)", worksheet.output_ad540); end
  def test_output_ae540; assert_equal("-7% (19%)", worksheet.output_ae540); end
  def test_output_af540; assert_equal("-11% (14%)", worksheet.output_af540); end
  def test_output_ag540; assert_equal("-18% (5%)", worksheet.output_ag540); end
  def test_output_ah540; assert_equal("-22% (-1%)", worksheet.output_ah540); end
  def test_output_ai540; assert_equal("-26% (-5%)", worksheet.output_ai540); end
  def test_output_aj540; assert_equal("-29% (-9%)", worksheet.output_aj540); end
  def test_output_ak540; assert_equal("-31% (-12%)", worksheet.output_ak540); end
  def test_output_al540; assert_equal("13% (58%)", worksheet.output_al540); end
  def test_output_am540; assert_equal("-42% (-19%)", worksheet.output_am540); end
  def test_output_an540; assert_equal("-57% (-39%)", worksheet.output_an540); end
  def test_output_ao540; assert_equal("-33% (-6%)", worksheet.output_ao540); end
  def test_output_ap540; assert_equal("-62% (-46%)", worksheet.output_ap540); end
  def test_output_c541; assert_equal("RES share of supply (in 2050)", worksheet.output_c541); end
  def test_output_k541; assert_equal("~100%", worksheet.output_k541); end
  def test_output_ac58; assert_in_delta(0.07657224678073961, worksheet.output_ac58, 0.001); end
  def test_output_ac541; assert_in_delta(0.07657224678073961, worksheet.output_ac541, 0.001); end
  def test_output_ad541; assert_in_delta(0.11307914462855059, worksheet.output_ad541, 0.001); end
  def test_output_ae541; assert_in_delta(0.16366903246754697, worksheet.output_ae541, 0.001); end
  def test_output_af541; assert_in_delta(0.2432146701707347, worksheet.output_af541, 0.001); end
  def test_output_ag541; assert_in_delta(0.32183443375816567, worksheet.output_ag541, 0.001); end
  def test_output_ah541; assert_in_delta(0.3979199465023906, worksheet.output_ah541, 0.001); end
  def test_output_ai541; assert_in_delta(0.4723409773537262, worksheet.output_ai541, 0.001); end
  def test_output_aj541; assert_in_delta(0.5599204451211576, worksheet.output_aj541, 0.001); end
  def test_output_ak541; assert_in_delta(0.6620808838639178, worksheet.output_ak541, 0.001); end
  def test_output_al541; assert_in_delta(0.17235160940022934, worksheet.output_al541, 0.001); end
  def test_output_am541; assert_in_delta(0.6685397688050082, worksheet.output_am541, 0.001); end
  def test_output_an541; assert_in_delta(0.6923244164676855, worksheet.output_an541, 0.001); end
  def test_output_ao541; assert_in_delta(0.6458277834571076, worksheet.output_ao541, 0.001); end
  def test_output_ap541; assert_in_delta(0.7919080656180693, worksheet.output_ap541, 0.001); end
  def test_output_c542; assert_equal("Biomass use ", worksheet.output_c542); end
  def test_output_f542; assert_equal("(TWh)", worksheet.output_f542); end
  def test_output_ac542; assert_in_epsilon(39.17302801717402, worksheet.output_ac542, 0.001); end
  def test_output_ad542; assert_in_epsilon(45.94885646545613, worksheet.output_ad542, 0.001); end
  def test_output_ae542; assert_in_epsilon(56.3834319661047, worksheet.output_ae542, 0.001); end
  def test_output_af542; assert_in_epsilon(63.37188705406878, worksheet.output_af542, 0.001); end
  def test_output_ag542; assert_in_epsilon(70.31936886976811, worksheet.output_ag542, 0.001); end
  def test_output_ah542; assert_in_epsilon(77.23197661063465, worksheet.output_ah542, 0.001); end
  def test_output_ai542; assert_in_epsilon(84.10601408901113, worksheet.output_ai542, 0.001); end
  def test_output_aj542; assert_in_epsilon(89.43237764063457, worksheet.output_aj542, 0.001); end
  def test_output_ak542; assert_in_epsilon(93.81889240794595, worksheet.output_ak542, 0.001); end
  def test_output_al542; assert_in_epsilon(51.777474205044065, worksheet.output_al542, 0.001); end
  def test_output_am542; assert_in_epsilon(77.28221795315878, worksheet.output_am542, 0.001); end
  def test_output_an542; assert_in_epsilon(76.29334882963192, worksheet.output_an542, 0.001); end
  def test_output_ao542; assert_in_epsilon(77.87596365472629, worksheet.output_ao542, 0.001); end
  def test_output_ap542; assert_in_epsilon(80.80588475264626, worksheet.output_ap542, 0.001); end
  def test_output_c543; assert_equal("CCS", worksheet.output_c543); end
  def test_output_f543; assert_equal("(Mt)", worksheet.output_f543); end
  def test_output_ac543; assert_in_delta(0, (worksheet.output_ac543||0), 0.001); end
  def test_output_ad543; assert_in_delta(0.00532822516834236, worksheet.output_ad543, 0.001); end
  def test_output_ae543; assert_in_delta(0.0016205285721146434, worksheet.output_ae543, 0.001); end
  def test_output_af543; assert_in_delta(-0.011060528992453356, worksheet.output_af543, 0.001); end
  def test_output_ag543; assert_in_epsilon(-3.9304067685445636, worksheet.output_ag543, 0.001); end
  def test_output_ah543; assert_in_epsilon(-5.0763437376993865, worksheet.output_ah543, 0.001); end
  def test_output_ai543; assert_in_epsilon(-5.874690626636641, worksheet.output_ai543, 0.001); end
  def test_output_aj543; assert_in_epsilon(-6.354607295430945, worksheet.output_aj543, 0.001); end
  def test_output_ak543; assert_in_epsilon(-9.461297518049266, worksheet.output_ak543, 0.001); end
  def test_output_al543; assert_in_delta(0, (worksheet.output_al543||0), 0.001); end
  def test_output_am543; assert_in_epsilon(-6.743016137957559, worksheet.output_am543, 0.001); end
  def test_output_an543; assert_in_delta(0.3462729519303583, worksheet.output_an543, 0.001); end
  def test_output_ao543; assert_in_epsilon(-14.78535952560561, worksheet.output_ao543, 0.001); end
  def test_output_ap543; assert_in_epsilon(-10.297735071705665, worksheet.output_ap543, 0.001); end
  def test_output_c544; assert_equal("Electricity", worksheet.output_c544); end
  def test_output_d545; assert_equal("Electricity prodution", worksheet.output_d545); end
  def test_output_f545; assert_equal("(TWh)", worksheet.output_f545); end
  def test_output_ac545; assert_in_epsilon(101.2224748907514, worksheet.output_ac545, 0.001); end
  def test_output_ad545; assert_in_epsilon(81.83464611326725, worksheet.output_ad545, 0.001); end
  def test_output_ae545; assert_in_epsilon(87.14301423299518, worksheet.output_ae545, 0.001); end
  def test_output_af545; assert_in_epsilon(91.26643938289152, worksheet.output_af545, 0.001); end
  def test_output_ag545; assert_in_epsilon(94.1703473161295, worksheet.output_ag545, 0.001); end
  def test_output_ah545; assert_in_epsilon(96.86061629020051, worksheet.output_ah545, 0.001); end
  def test_output_ai545; assert_in_epsilon(99.4143523981481, worksheet.output_ai545, 0.001); end
  def test_output_aj545; assert_in_epsilon(101.63205887034232, worksheet.output_aj545, 0.001); end
  def test_output_ak545; assert_in_epsilon(104.78357462016442, worksheet.output_ak545, 0.001); end
  def test_output_al545; assert_in_epsilon(142.85510362824758, worksheet.output_al545, 0.001); end
  def test_output_am545; assert_in_epsilon(123.30891474699033, worksheet.output_am545, 0.001); end
  def test_output_an545; assert_in_epsilon(97.59946767377578, worksheet.output_an545, 0.001); end
  def test_output_ao545; assert_in_epsilon(151.95354622112384, worksheet.output_ao545, 0.001); end
  def test_output_ap545; assert_in_epsilon(101.45972091215951, worksheet.output_ap545, 0.001); end
  def test_output_d546; assert_equal("Electricity prodution (%wrt 2010(1990))", worksheet.output_d546); end
  def test_output_f546; assert_equal("%", worksheet.output_f546); end
  def test_output_ac546; assert_equal("0% (43%)", worksheet.output_ac546); end
  def test_output_ad546; assert_equal("-19% (15%)", worksheet.output_ad546); end
  def test_output_ae546; assert_equal("-14% (23%)", worksheet.output_ae546); end
  def test_output_af546; assert_equal("-10% (29%)", worksheet.output_af546); end
  def test_output_ag546; assert_equal("-7% (33%)", worksheet.output_ag546); end
  def test_output_ah546; assert_equal("-4% (37%)", worksheet.output_ah546); end
  def test_output_ai546; assert_equal("-2% (40%)", worksheet.output_ai546); end
  def test_output_aj546; assert_equal("0% (43%)", worksheet.output_aj546); end
  def test_output_ak546; assert_equal("4% (48%)", worksheet.output_ak546); end
  def test_output_al546; assert_equal("38% (101%)", worksheet.output_al546); end
  def test_output_am546; assert_equal("19% (74%)", worksheet.output_am546); end
  def test_output_an546; assert_equal("-5% (38%)", worksheet.output_an546); end
  def test_output_ao546; assert_equal("47% (114%)", worksheet.output_ao546); end
  def test_output_ap546; assert_equal("-2% (43%)", worksheet.output_ap546); end
  def test_output_c547; assert_equal("Costs (in 2050), wrt BAU (index=100)", worksheet.output_c547); end
  def test_output_ac547; assert_in_epsilon(108.46020299303092, worksheet.output_ac547, 0.001); end
  def test_output_ad547; assert_in_epsilon(106.11096323741904, worksheet.output_ad547, 0.001); end
  def test_output_ae547; assert_in_epsilon(104.82199436060262, worksheet.output_ae547, 0.001); end
  def test_output_af547; assert_in_epsilon(99.82119161000766, worksheet.output_af547, 0.001); end
  def test_output_ag547; assert_in_epsilon(94.82754857223435, worksheet.output_ag547, 0.001); end
  def test_output_ah547; assert_in_epsilon(90.65879796278338, worksheet.output_ah547, 0.001); end
  def test_output_ai547; assert_in_epsilon(86.85567461155071, worksheet.output_ai547, 0.001); end
  def test_output_aj547; assert_in_epsilon(83.09793856426408, worksheet.output_aj547, 0.001); end
  def test_output_ak547; assert_in_epsilon(79.97936998212994, worksheet.output_ak547, 0.001); end
  def test_output_al547; assert_in_epsilon(100, worksheet.output_al547, 0.001); end
  def test_output_am547; assert_in_epsilon(93.61303954806654, worksheet.output_am547, 0.001); end
  def test_output_an547; assert_in_epsilon(77.97444106551848, worksheet.output_an547, 0.001); end
  def test_output_ao547; assert_in_epsilon(99.77102824128117, worksheet.output_ao547, 0.001); end
  def test_output_ap547; assert_in_epsilon(85.73659897799698, worksheet.output_ap547, 0.001); end
  def test_output_d548; assert_equal("Investments", worksheet.output_d548); end
  def test_output_f548; assert_equal("MEUR", worksheet.output_f548); end
  def test_output_ac548; assert_in_epsilon(114.90862820240066, worksheet.output_ac548, 0.001); end
  def test_output_ad548; assert_in_epsilon(114.02394463165686, worksheet.output_ad548, 0.001); end
  def test_output_ae548; assert_in_epsilon(119.38919852662666, worksheet.output_ae548, 0.001); end
  def test_output_af548; assert_in_epsilon(121.96705736156572, worksheet.output_af548, 0.001); end
  def test_output_ag548; assert_in_epsilon(121.70602259543757, worksheet.output_ag548, 0.001); end
  def test_output_ah548; assert_in_epsilon(119.74197619568272, worksheet.output_ah548, 0.001); end
  def test_output_ai548; assert_in_epsilon(116.7293094386849, worksheet.output_ai548, 0.001); end
  def test_output_aj548; assert_in_epsilon(114.09341135173258, worksheet.output_aj548, 0.001); end
  def test_output_ak548; assert_in_epsilon(111.31724138622434, worksheet.output_ak548, 0.001); end
  def test_output_al548; assert_in_epsilon(100, worksheet.output_al548, 0.001); end
  def test_output_am548; assert_in_epsilon(123.78085911162577, worksheet.output_am548, 0.001); end
  def test_output_an548; assert_in_epsilon(105.05502398285161, worksheet.output_an548, 0.001); end
  def test_output_ao548; assert_in_epsilon(123.67167624601862, worksheet.output_ao548, 0.001); end
  def test_output_ap548; assert_in_epsilon(118.92428106083858, worksheet.output_ap548, 0.001); end
  def test_output_d549; assert_equal("O&M", worksheet.output_d549); end
  def test_output_f549; assert_equal("MEUR", worksheet.output_f549); end
  def test_output_ac549; assert_in_epsilon(100.29661319346093, worksheet.output_ac549, 0.001); end
  def test_output_ad549; assert_in_epsilon(94.8731708553879, worksheet.output_ad549, 0.001); end
  def test_output_ae549; assert_in_epsilon(95.9819814995096, worksheet.output_ae549, 0.001); end
  def test_output_af549; assert_in_epsilon(95.86709748732787, worksheet.output_af549, 0.001); end
  def test_output_ag549; assert_in_epsilon(95.09151953417226, worksheet.output_ag549, 0.001); end
  def test_output_ah549; assert_in_epsilon(93.80469965203785, worksheet.output_ah549, 0.001); end
  def test_output_ai549; assert_in_epsilon(92.1216538045243, worksheet.output_ai549, 0.001); end
  def test_output_aj549; assert_in_epsilon(90.12860229266865, worksheet.output_aj549, 0.001); end
  def test_output_ak549; assert_in_epsilon(87.68283765140788, worksheet.output_ak549, 0.001); end
  def test_output_al549; assert_in_epsilon(100, worksheet.output_al549, 0.001); end
  def test_output_am549; assert_in_epsilon(80.31620381561902, worksheet.output_am549, 0.001); end
  def test_output_an549; assert_in_epsilon(61.62462913431725, worksheet.output_an549, 0.001); end
  def test_output_ao549; assert_in_epsilon(101.19231544363095, worksheet.output_ao549, 0.001); end
  def test_output_ap549; assert_in_epsilon(66.14051314039011, worksheet.output_ap549, 0.001); end
  def test_output_d550; assert_equal("Fuel", worksheet.output_d550); end
  def test_output_f550; assert_equal("MEUR", worksheet.output_f550); end
  def test_output_ac550; assert_in_epsilon(100.77910333793432, worksheet.output_ac550, 0.001); end
  def test_output_ad550; assert_in_epsilon(98.00133916194046, worksheet.output_ad550, 0.001); end
  def test_output_ae550; assert_in_epsilon(84.92698793500547, worksheet.output_ae550, 0.001); end
  def test_output_af550; assert_in_epsilon(73.28489801216604, worksheet.output_af550, 0.001); end
  def test_output_ag550; assert_in_epsilon(62.00083775239439, worksheet.output_ag550, 0.001); end
  def test_output_ah550; assert_in_epsilon(55.096587363265236, worksheet.output_ah550, 0.001); end
  def test_output_ai550; assert_in_epsilon(49.28705974555218, worksheet.output_ai550, 0.001); end
  def test_output_aj550; assert_in_epsilon(44.357459202447345, worksheet.output_aj550, 0.001); end
  def test_output_ak550; assert_in_epsilon(40.1932262468835, worksheet.output_ak550, 0.001); end
  def test_output_al550; assert_in_epsilon(100, worksheet.output_al550, 0.001); end
  def test_output_am550; assert_in_epsilon(43.896351772431046, worksheet.output_am550, 0.001); end
  def test_output_an550; assert_in_epsilon(36.059323580799415, worksheet.output_an550, 0.001); end
  def test_output_ao550; assert_in_epsilon(53.031592123861515, worksheet.output_ao550, 0.001); end
  def test_output_ap550; assert_in_epsilon(34.09789144744621, worksheet.output_ap550, 0.001); end
  def test_output_c553; assert_equal("THINKCELL CHARTS", worksheet.output_c553); end
  def test_output_f555; assert_equal("Emissions", worksheet.output_f555); end
  def test_output_ab555; assert_in_epsilon(1990, worksheet.output_ab555, 0.001); end
  def test_output_ac555; assert_in_epsilon(2010, worksheet.output_ac555, 0.001); end
  def test_output_ad555; assert_in_epsilon(2050, worksheet.output_ad555, 0.001); end
  def test_output_af555; assert_equal("CAGR 2010-50", worksheet.output_af555); end
  def test_output_ah555; assert_equal("Delta 2010-50", worksheet.output_ah555); end
  def test_output_g557; assert_equal("Agriculture, Waste & others", worksheet.output_g557); end
  def test_output_ab557; assert_in_epsilon(17.988853785900357, worksheet.output_ab557, 0.001); end
  def test_output_ac557; assert_in_epsilon(13.692529969967014, worksheet.output_ac557, 0.001); end
  def test_output_af557; assert_in_delta(-0.008345688980386567, worksheet.output_af557, 0.001); end
  def test_output_ag557; assert_equal("Agriculture, Waste & others", worksheet.output_ag557); end
  def test_output_ah557; assert_in_delta(-0.2848252560148764, worksheet.output_ah557, 0.001); end
  def test_output_ak557; assert_in_epsilon(9.791207687744663, worksheet.output_ak557, 0.001); end
  def test_output_al557; assert_in_delta(0.0013439280351290024, worksheet.output_al557, 0.001); end
  def test_output_g558; assert_equal("Building", worksheet.output_g558); end
  def test_output_ab558; assert_in_epsilon(24.90969851232879, worksheet.output_ab558, 0.001); end
  def test_output_ac558; assert_in_epsilon(21.476676050065233, worksheet.output_ac558, 0.001); end
  def test_output_af558; assert_in_delta(-0.031211152813012677, worksheet.output_af558, 0.001); end
  def test_output_ag558; assert_equal("Building", worksheet.output_ag558); end
  def test_output_ah558; assert_in_delta(-0.7187029222346208, worksheet.output_ah558, 0.001); end
  def test_output_ak558; assert_in_epsilon(6.040497102466362, worksheet.output_ak558, 0.001); end
  def test_output_al558; assert_in_delta(0.0008291105306938877, worksheet.output_al558, 0.001); end
  def test_output_g559; assert_equal("Transport", worksheet.output_g559); end
  def test_output_ab559; assert_in_epsilon(20.4724552687413, worksheet.output_ab559, 0.001); end
  def test_output_ac559; assert_in_epsilon(22.534263831271545, worksheet.output_ac559, 0.001); end
  def test_output_af559; assert_in_delta(-0.04019441591808259, worksheet.output_af559, 0.001); end
  def test_output_ag559; assert_equal("Transport", worksheet.output_ag559); end
  def test_output_ah559; assert_in_delta(-0.8062102100662585, worksheet.output_ah559, 0.001); end
  def test_output_ak559; assert_in_epsilon(4.366310940190122, worksheet.output_ak559, 0.001); end
  def test_output_al559; assert_in_delta(0.000599313983499377, worksheet.output_al559, 0.001); end
  def test_output_g560; assert_equal("Industry", worksheet.output_g560); end
  def test_output_ab560; assert_in_epsilon(54.09955930941479, worksheet.output_ab560, 0.001); end
  def test_output_ac560; assert_in_epsilon(49.32491564488568, worksheet.output_ac560, 0.001); end
  def test_output_af560; assert_in_delta(-0.040468742620981546, worksheet.output_af560, 0.001); end
  def test_output_ag560; assert_equal("Industry", worksheet.output_ag560); end
  def test_output_ah560; assert_in_delta(-0.8084134267961874, worksheet.output_ah560, 0.001); end
  def test_output_g561; assert_equal("Energy", worksheet.output_g561); end
  def test_output_ab561; assert_in_epsilon(25.6221067252624, worksheet.output_ab561, 0.001); end
  def test_output_ac561; assert_in_epsilon(19.96312356237269, worksheet.output_ac561, 0.001); end
  def test_output_af561; assert_in_delta(-0.060572910219453435, worksheet.output_af561, 0.001); end
  def test_output_ag561; assert_equal("Energy", worksheet.output_ag561); end
  def test_output_ah561; assert_in_delta(-0.9178659605895864, worksheet.output_ah561, 0.001); end
  def test_output_ak561; assert_in_epsilon(1.6394269518822795, worksheet.output_ak561, 0.001); end
  def test_output_al561; assert_in_delta(0.0002250255445953256, worksheet.output_al561, 0.001); end
  def test_output_g562; assert_equal("TOTAL", worksheet.output_g562); end
  def test_output_ab562; assert_in_epsilon(143.09267360164765, worksheet.output_ab562, 0.001); end
  def test_output_ac562; assert_in_epsilon(127.0490137983435, worksheet.output_ac562, 0.001); end
  def test_output_ak560; assert_in_epsilon(9.448694646816257, worksheet.output_ak560, 0.001); end
  def test_output_ak562; assert_in_epsilon(31.28613732909968, worksheet.output_ak562, 0.001); end
  def test_output_al562; assert_in_delta(0.004294293248431558, worksheet.output_al562, 0.001); end
  def test_output_ad557; assert_in_epsilon(9.792551615779791, worksheet.output_ad557, 0.001); end
  def test_output_ad558; assert_in_epsilon(6.041326212997055, worksheet.output_ad558, 0.001); end
  def test_output_ad559; assert_in_epsilon(4.366910254173621, worksheet.output_ad559, 0.001); end
  def test_output_al560; assert_in_delta(0.0012969151545139655, worksheet.output_al560, 0.001); end
  def test_output_ad560; assert_in_epsilon(9.449991561970771, worksheet.output_ad560, 0.001); end
  def test_output_ad561; assert_in_epsilon(1.6396519774268747, worksheet.output_ad561, 0.001); end
  def test_output_ad562; assert_in_epsilon(31.290431622348112, worksheet.output_ad562, 0.001); end
  def test_output_af562; assert_in_delta(-0.034425014210932026, worksheet.output_af562, 0.001); end
  def test_output_ag562; assert_equal("TOTAL", worksheet.output_ag562); end
  def test_output_ah562; assert_in_delta(-0.7537136992498553, worksheet.output_ah562, 0.001); end
  def test_output_af564; assert_equal("CAGR 2010-50", worksheet.output_af564); end
  def test_output_ah564; assert_equal("Delta 2010-50", worksheet.output_ah564); end
  def test_output_g565; assert_equal("Steel Industry", worksheet.output_g565); end
  def test_output_ac325; assert_in_epsilon(9.230780077441663, worksheet.output_ac325, 0.001); end
  def test_output_ac565; assert_in_epsilon(9.230780077441663, worksheet.output_ac565, 0.001); end
  def test_output_ad565; assert_in_epsilon(3.1958032428482817, worksheet.output_ad565, 0.001); end
  def test_output_af565; assert_in_delta(-0.026169122469196893, worksheet.output_af565, 0.001); end
  def test_output_ag565; assert_equal("Steel Industry", worksheet.output_ag565); end
  def test_output_ah565; assert_in_delta(-0.6537883888428628, worksheet.output_ah565, 0.001); end
  def test_output_g566; assert_equal("Cement Industry", worksheet.output_g566); end
  def test_output_ac326; assert_in_epsilon(4.258013889251608, worksheet.output_ac326, 0.001); end
  def test_output_ac566; assert_in_epsilon(4.258013889251608, worksheet.output_ac566, 0.001); end
  def test_output_ad566; assert_in_epsilon(1.0203183705321373, worksheet.output_ad566, 0.001); end
  def test_output_af566; assert_in_delta(-0.03508687060287985, worksheet.output_af566, 0.001); end
  def test_output_ag566; assert_equal("Cement Industry", worksheet.output_ag566); end
  def test_output_ah566; assert_in_delta(-0.7603769275840786, worksheet.output_ah566, 0.001); end
  def test_output_g567; assert_equal("Lime Industry", worksheet.output_g567); end
  def test_output_ac327; assert_in_epsilon(2.6389462282715046, worksheet.output_ac327, 0.001); end
  def test_output_ac567; assert_in_epsilon(2.6389462282715046, worksheet.output_ac567, 0.001); end
  def test_output_ad567; assert_in_epsilon(1.4632001133780714, worksheet.output_ad567, 0.001); end
  def test_output_af567; assert_in_delta(-0.014635686379576018, worksheet.output_af567, 0.001); end
  def test_output_ag567; assert_equal("Lime Industry", worksheet.output_ag567); end
  def test_output_ah567; assert_in_delta(-0.4455362152883049, worksheet.output_ah567, 0.001); end
  def test_output_g568; assert_equal("Glass Industry", worksheet.output_g568); end
  def test_output_ac328; assert_in_epsilon(1.0017795840059502, worksheet.output_ac328, 0.001); end
  def test_output_ac568; assert_in_epsilon(1.0017795840059502, worksheet.output_ac568, 0.001); end
  def test_output_ad568; assert_in_epsilon(1.333609558114846, worksheet.output_ad568, 0.001); end
  def test_output_af568; assert_in_delta(0.007178422664208428, worksheet.output_af568, 0.001); end
  def test_output_ag568; assert_equal("Glass Industry", worksheet.output_ag568); end
  def test_output_ah568; assert_in_delta(0.3312405038061992, worksheet.output_ah568, 0.001); end
  def test_output_g569; assert_equal("Chemicals Industry", worksheet.output_g569); end
  def test_output_ac329; assert_in_epsilon(13.465717617412347, worksheet.output_ac329, 0.001); end
  def test_output_ac569; assert_in_epsilon(13.465717617412347, worksheet.output_ac569, 0.001); end
  def test_output_ad569; assert_in_epsilon(6.206225424780644, worksheet.output_ad569, 0.001); end
  def test_output_af569; assert_in_delta(-0.019178558957901992, worksheet.output_af569, 0.001); end
  def test_output_ag569; assert_equal("Chemicals Industry", worksheet.output_ag569); end
  def test_output_ah569; assert_in_delta(-0.5391091955800815, worksheet.output_ah569, 0.001); end
  def test_output_g570; assert_equal("Pulp & Paper Industry", worksheet.output_g570); end
  def test_output_ac330; assert_in_epsilon(3.272476507946944, worksheet.output_ac330, 0.001); end
  def test_output_ac570; assert_in_epsilon(3.272476507946944, worksheet.output_ac570, 0.001); end
  def test_output_ad570; assert_in_epsilon(2.595873503644692, worksheet.output_ad570, 0.001); end
  def test_output_af570; assert_in_delta(-0.005773866041817954, worksheet.output_af570, 0.001); end
  def test_output_ag570; assert_equal("Pulp & Paper Industry", worksheet.output_ag570); end
  def test_output_ah570; assert_in_delta(-0.2067556490196878, worksheet.output_ah570, 0.001); end
  def test_output_g571; assert_equal("Oil & Gas Industry", worksheet.output_g571); end
  def test_output_ac331; assert_in_epsilon(11.795222415908047, worksheet.output_ac331, 0.001); end
  def test_output_ac571; assert_in_epsilon(11.795222415908047, worksheet.output_ac571, 0.001); end
  def test_output_ad571; assert_in_delta(0.3632937885305547, worksheet.output_ad571, 0.001); end
  def test_output_af571; assert_in_delta(-0.08332835873368405, worksheet.output_af571, 0.001); end
  def test_output_ag571; assert_equal("Oil & Gas Industry", worksheet.output_ag571); end
  def test_output_ah571; assert_in_delta(-0.9691999204660536, worksheet.output_ah571, 0.001); end
  def test_output_g572; assert_equal("Food, drinks and tobacco Industry", worksheet.output_g572); end
  def test_output_ac332; assert_in_epsilon(2.4081985609298515, worksheet.output_ac332, 0.001); end
  def test_output_ac572; assert_in_epsilon(2.4081985609298515, worksheet.output_ac572, 0.001); end
  def test_output_ad572; assert_in_epsilon(1.630307172102161, worksheet.output_ad572, 0.001); end
  def test_output_af572; assert_in_delta(-0.009705359452034212, worksheet.output_af572, 0.001); end
  def test_output_ag572; assert_equal("Food, drinks and tobacco Industry", worksheet.output_ag572); end
  def test_output_ah572; assert_in_delta(-0.32301796099709146, worksheet.output_ah572, 0.001); end
  def test_output_g573; assert_equal("Machines Industry", worksheet.output_g573); end
  def test_output_ac333; assert_in_delta(0, (worksheet.output_ac333||0), 0.001); end
  def test_output_ac573; assert_in_delta(0, (worksheet.output_ac573||0), 0.001); end
  def test_output_ad573; assert_in_delta(0, (worksheet.output_ad573||0), 0.001); end
  def test_output_af573; assert_equal(:div0, worksheet.output_af573); end
  def test_output_ag573; assert_equal("Machines Industry", worksheet.output_ag573); end
  def test_output_ah573; assert_equal(:div0, worksheet.output_ah573); end
  def test_output_g574; assert_equal("Non-Ferrous metals Industry", worksheet.output_g574); end
  def test_output_ac334; assert_in_delta(0.42303102761818345, worksheet.output_ac334, 0.001); end
  def test_output_ac574; assert_in_delta(0.42303102761818345, worksheet.output_ac574, 0.001); end
  def test_output_ad574; assert_in_delta(0.4038995756037322, worksheet.output_ad574, 0.001); end
  def test_output_af574; assert_in_delta(-0.0011563123519853225, worksheet.output_af574, 0.001); end
  def test_output_ag574; assert_equal("Non-Ferrous metals Industry", worksheet.output_ag574); end
  def test_output_ah574; assert_in_delta(-0.0452247016540801, worksheet.output_ah574, 0.001); end
  def test_output_g575; assert_equal("Construction industry", worksheet.output_g575); end
  def test_output_ac335; assert_in_delta(0.532709730360392, worksheet.output_ac335, 0.001); end
  def test_output_ac575; assert_in_delta(0.532709730360392, worksheet.output_ac575, 0.001); end
  def test_output_ad575; assert_in_delta(0.49006613880902306, worksheet.output_ad575, 0.001); end
  def test_output_af575; assert_in_delta(-0.00208373402360551, worksheet.output_af575, 0.001); end
  def test_output_ag575; assert_equal("Construction industry", worksheet.output_ag575); end
  def test_output_ah575; assert_in_delta(-0.08005033345743373, worksheet.output_ah575, 0.001); end
  def test_output_g576; assert_equal("Other Industry", worksheet.output_g576); end
  def test_output_ac336; assert_in_epsilon(3.0027608795367637, worksheet.output_ac336, 0.001); end
  def test_output_ac576; assert_in_epsilon(3.0027608795367637, worksheet.output_ac576, 0.001); end
  def test_output_ad576; assert_in_delta(0, (worksheet.output_ad576||0), 0.001); end
  def test_output_af576; assert_in_delta(-1, worksheet.output_af576, 0.001); end
  def test_output_ag576; assert_equal("Other Industry", worksheet.output_ag576); end
  def test_output_g577; assert_equal("Biomass allocated to industry", worksheet.output_g577); end
  def test_output_af577; assert_in_delta(0.03122525298106349, worksheet.output_af577, 0.001); end
  def test_output_ag577; assert_equal("Biomass allocated to industry", worksheet.output_ag577); end
  def test_output_ah577; assert_in_epsilon(2.4209094979113983, worksheet.output_ah577, 0.001); end
  def test_output_g578; assert_equal("TOTAL Industry", worksheet.output_g578); end
  def test_output_ab578; assert_in_epsilon(54.09955930941479, worksheet.output_ab578, 0.001); end
  def test_output_ac577; assert_in_epsilon(-2.704720873797583, worksheet.output_ac577, 0.001); end
  def test_output_ac578; assert_in_epsilon(49.32491564488568, worksheet.output_ac578, 0.001); end
  def test_output_ad577; assert_in_epsilon(-9.252605326373368, worksheet.output_ad577, 0.001); end
  def test_output_ad578; assert_in_epsilon(9.449991561970771, worksheet.output_ad578, 0.001); end
  def test_output_af578; assert_in_delta(-0.040468742620981546, worksheet.output_af578, 0.001); end
  def test_output_ag578; assert_equal("TOTAL Industry", worksheet.output_ag578); end
  def test_output_ah578; assert_in_delta(-0.8084134267961874, worksheet.output_ah578, 0.001); end
  def test_control_aa17; assert_in_epsilon(30, worksheet.control_aa17, 0.001); end
  def test_control_aa15; assert_in_epsilon(10, worksheet.control_aa15, 0.001); end
  def test_control_aa16; assert_in_epsilon(10, worksheet.control_aa16, 0.001); end
  def test_control_aa13; assert_in_epsilon(10, worksheet.control_aa13, 0.001); end
  def test_control_aa5; assert_in_epsilon(15, worksheet.control_aa5, 0.001); end
  def test_control_aa6; assert_in_epsilon(15, worksheet.control_aa6, 0.001); end
  def test_control_aa11; assert_in_epsilon(10, worksheet.control_aa11, 0.001); end
  def test_control_aa9; assert_in_epsilon(30, worksheet.control_aa9, 0.001); end
  def test_control_aa7; assert_in_epsilon(15, worksheet.control_aa7, 0.001); end
  def test_control_aa32; assert_in_epsilon(20, worksheet.control_aa32, 0.001); end
  def test_control_h4; assert_in_epsilon(20, worksheet.control_h4, 0.001); end
  def test_control_aa4; assert_in_epsilon(10, worksheet.control_aa4, 0.001); end
  def test_control_aa29; assert_in_epsilon(30, worksheet.control_aa29, 0.001); end
  def test_costs_as1; assert_equal("Discounted ", worksheet.costs_as1); end
  def test_costs_b2; assert_equal("Code", worksheet.costs_b2); end
  def test_costs_c2; assert_equal("Description", worksheet.costs_c2); end
  def test_costs_d2; assert_equal("Group", worksheet.costs_d2); end
  def test_costs_e2; assert_equal("Units", worksheet.costs_e2); end
  def test_costs_f2; assert_in_epsilon(2010, worksheet.costs_f2, 0.001); end
  def test_costs_g2; assert_in_epsilon(2015, worksheet.costs_g2, 0.001); end
  def test_costs_h2; assert_in_epsilon(2020, worksheet.costs_h2, 0.001); end
  def test_costs_i2; assert_in_epsilon(2025, worksheet.costs_i2, 0.001); end
  def test_costs_j2; assert_in_epsilon(2030, worksheet.costs_j2, 0.001); end
  def test_costs_k2; assert_in_epsilon(2035, worksheet.costs_k2, 0.001); end
  def test_costs_l2; assert_in_epsilon(2040, worksheet.costs_l2, 0.001); end
  def test_costs_m2; assert_in_epsilon(2045, worksheet.costs_m2, 0.001); end
  def test_costs_n2; assert_in_epsilon(2050, worksheet.costs_n2, 0.001); end
  def test_costs_p2; assert_in_epsilon(2010, worksheet.costs_p2, 0.001); end
  def test_costs_q2; assert_in_epsilon(2015, worksheet.costs_q2, 0.001); end
  def test_costs_r2; assert_in_epsilon(2020, worksheet.costs_r2, 0.001); end
  def test_costs_s2; assert_in_epsilon(2025, worksheet.costs_s2, 0.001); end
  def test_costs_t2; assert_in_epsilon(2030, worksheet.costs_t2, 0.001); end
  def test_costs_u2; assert_in_epsilon(2035, worksheet.costs_u2, 0.001); end
  def test_costs_v2; assert_in_epsilon(2040, worksheet.costs_v2, 0.001); end
  def test_costs_w2; assert_in_epsilon(2045, worksheet.costs_w2, 0.001); end
  def test_costs_x2; assert_in_epsilon(2050, worksheet.costs_x2, 0.001); end
  def test_costs_z2; assert_in_epsilon(2010, worksheet.costs_z2, 0.001); end
  def test_costs_aa2; assert_in_epsilon(2015, worksheet.costs_aa2, 0.001); end
  def test_costs_ab2; assert_in_epsilon(2020, worksheet.costs_ab2, 0.001); end
  def test_costs_ac2; assert_in_epsilon(2025, worksheet.costs_ac2, 0.001); end
  def test_costs_ad2; assert_in_epsilon(2030, worksheet.costs_ad2, 0.001); end
  def test_costs_ae2; assert_in_epsilon(2035, worksheet.costs_ae2, 0.001); end
  def test_costs_af2; assert_in_epsilon(2040, worksheet.costs_af2, 0.001); end
  def test_costs_ag2; assert_in_epsilon(2045, worksheet.costs_ag2, 0.001); end
  def test_costs_ah2; assert_in_epsilon(2050, worksheet.costs_ah2, 0.001); end
  def test_costs_aj2; assert_in_epsilon(2010, worksheet.costs_aj2, 0.001); end
  def test_costs_ak2; assert_in_epsilon(2015, worksheet.costs_ak2, 0.001); end
  def test_costs_al2; assert_in_epsilon(2020, worksheet.costs_al2, 0.001); end
  def test_costs_am2; assert_in_epsilon(2025, worksheet.costs_am2, 0.001); end
  def test_costs_an2; assert_in_epsilon(2030, worksheet.costs_an2, 0.001); end
  def test_costs_ao2; assert_in_epsilon(2035, worksheet.costs_ao2, 0.001); end
  def test_costs_ap2; assert_in_epsilon(2040, worksheet.costs_ap2, 0.001); end
  def test_costs_aq2; assert_in_epsilon(2045, worksheet.costs_aq2, 0.001); end
  def test_costs_ar2; assert_in_epsilon(2050, worksheet.costs_ar2, 0.001); end
  def test_costs_at2; assert_in_epsilon(2010, worksheet.costs_at2, 0.001); end
  def test_costs_au2; assert_in_epsilon(2015, worksheet.costs_au2, 0.001); end
  def test_costs_av2; assert_in_epsilon(2020, worksheet.costs_av2, 0.001); end
  def test_costs_aw2; assert_in_epsilon(2025, worksheet.costs_aw2, 0.001); end
  def test_costs_ax2; assert_in_epsilon(2030, worksheet.costs_ax2, 0.001); end
  def test_costs_ay2; assert_in_epsilon(2035, worksheet.costs_ay2, 0.001); end
  def test_costs_az2; assert_in_epsilon(2040, worksheet.costs_az2, 0.001); end
  def test_costs_ba2; assert_in_epsilon(2045, worksheet.costs_ba2, 0.001); end
  def test_costs_bb2; assert_in_epsilon(2050, worksheet.costs_bb2, 0.001); end
  def test_costs_bd2; assert_in_epsilon(2010, worksheet.costs_bd2, 0.001); end
  def test_costs_be2; assert_in_epsilon(2015, worksheet.costs_be2, 0.001); end
  def test_costs_bf2; assert_in_epsilon(2020, worksheet.costs_bf2, 0.001); end
  def test_costs_bg2; assert_in_epsilon(2025, worksheet.costs_bg2, 0.001); end
  def test_costs_bh2; assert_in_epsilon(2030, worksheet.costs_bh2, 0.001); end
  def test_costs_bi2; assert_in_epsilon(2035, worksheet.costs_bi2, 0.001); end
  def test_costs_bj2; assert_in_epsilon(2040, worksheet.costs_bj2, 0.001); end
  def test_costs_bk2; assert_in_epsilon(2045, worksheet.costs_bk2, 0.001); end
  def test_costs_bl2; assert_in_epsilon(2050, worksheet.costs_bl2, 0.001); end
  def test_costs_bn2; assert_in_epsilon(2010, worksheet.costs_bn2, 0.001); end
  def test_costs_bo2; assert_in_epsilon(2015, worksheet.costs_bo2, 0.001); end
  def test_costs_bp2; assert_in_epsilon(2020, worksheet.costs_bp2, 0.001); end
  def test_costs_bq2; assert_in_epsilon(2025, worksheet.costs_bq2, 0.001); end
  def test_costs_br2; assert_in_epsilon(2030, worksheet.costs_br2, 0.001); end
  def test_costs_bs2; assert_in_epsilon(2035, worksheet.costs_bs2, 0.001); end
  def test_costs_bt2; assert_in_epsilon(2040, worksheet.costs_bt2, 0.001); end
  def test_costs_bu2; assert_in_epsilon(2045, worksheet.costs_bu2, 0.001); end
  def test_costs_bv2; assert_in_epsilon(2050, worksheet.costs_bv2, 0.001); end
  def test_costs_bx2; assert_in_epsilon(2010, worksheet.costs_bx2, 0.001); end
  def test_costs_by2; assert_in_epsilon(2015, worksheet.costs_by2, 0.001); end
  def test_costs_bz2; assert_in_epsilon(2020, worksheet.costs_bz2, 0.001); end
  def test_costs_ca2; assert_in_epsilon(2025, worksheet.costs_ca2, 0.001); end
  def test_costs_cb2; assert_in_epsilon(2030, worksheet.costs_cb2, 0.001); end
  def test_costs_cc2; assert_in_epsilon(2035, worksheet.costs_cc2, 0.001); end
  def test_costs_cd2; assert_in_epsilon(2040, worksheet.costs_cd2, 0.001); end
  def test_costs_ce2; assert_in_epsilon(2045, worksheet.costs_ce2, 0.001); end
  def test_costs_cf2; assert_in_epsilon(2050, worksheet.costs_cf2, 0.001); end
  def test_costs_c3; assert_equal("LOW", worksheet.costs_c3); end
  def test_costs_f3; assert_equal("C1.Low", worksheet.costs_f3); end
  def test_costs_g3; assert_equal("Low estimate of capital costs in that year", worksheet.costs_g3); end
  def test_costs_p3; assert_equal("C2.Low", worksheet.costs_p3); end
  def test_costs_q3; assert_equal("Low estimate of O&M costs in that year", worksheet.costs_q3); end
  def test_costs_z3; assert_equal("C3.Low", worksheet.costs_z3); end
  def test_costs_aa3; assert_equal("Low estimate of fuel costs in that year", worksheet.costs_aa3); end
  def test_costs_aj3; assert_equal("Low estimate of total Cash Flows", worksheet.costs_aj3); end
  def test_costs_b4; assert_equal("I.a", worksheet.costs_b4); end
  def test_costs_c4; assert_equal("Biomass and gas power stations", worksheet.costs_c4); end
  def test_costs_d4; assert_equal("Electricity", worksheet.costs_d4); end
  def test_costs_e4; assert_equal("MEUR", worksheet.costs_e4); end
  def test_costs_f4; assert_in_delta(0, (worksheet.costs_f4||0), 0.001); end
  def test_costs_b5; assert_equal("I.b", worksheet.costs_b5); end
  def test_costs_c5; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c5); end
  def test_costs_d5; assert_equal("Electricity", worksheet.costs_d5); end
  def test_costs_e5; assert_equal("MEUR", worksheet.costs_e5); end
  def test_costs_f5; assert_in_delta(0, (worksheet.costs_f5||0), 0.001); end
  def test_costs_p5; assert_in_delta(0, (worksheet.costs_p5||0), 0.001); end
  def test_costs_b6; assert_equal("II.a", worksheet.costs_b6); end
  def test_costs_c6; assert_equal("Nuclear power", worksheet.costs_c6); end
  def test_costs_d6; assert_equal("Electricity", worksheet.costs_d6); end
  def test_costs_e6; assert_equal("MEUR", worksheet.costs_e6); end
  def test_costs_f6; assert_in_delta(0, (worksheet.costs_f6||0), 0.001); end
  def test_costs_b7; assert_equal("III.a.1", worksheet.costs_b7); end
  def test_costs_c7; assert_equal("Onshore wind", worksheet.costs_c7); end
  def test_costs_d7; assert_equal("Electricity", worksheet.costs_d7); end
  def test_costs_e7; assert_equal("MEUR", worksheet.costs_e7); end
  def test_costs_p7; assert_in_epsilon(19.174999999999994, worksheet.costs_p7, 0.001); end
  def test_costs_z7; assert_in_delta(0, (worksheet.costs_z7||0), 0.001); end
  def test_costs_b8; assert_equal("III.a.2", worksheet.costs_b8); end
  def test_costs_c8; assert_equal("Offshore wind", worksheet.costs_c8); end
  def test_costs_d8; assert_equal("Electricity", worksheet.costs_d8); end
  def test_costs_e8; assert_equal("MEUR", worksheet.costs_e8); end
  def test_costs_p8; assert_in_epsilon(18.9, worksheet.costs_p8, 0.001); end
  def test_costs_z8; assert_in_delta(0, (worksheet.costs_z8||0), 0.001); end
  def test_costs_b9; assert_equal("III.b", worksheet.costs_b9); end
  def test_costs_c9; assert_equal("Hydroelectric power stations", worksheet.costs_c9); end
  def test_costs_d9; assert_equal("Electricity", worksheet.costs_d9); end
  def test_costs_e9; assert_equal("MEUR", worksheet.costs_e9); end
  def test_costs_f9; assert_in_delta(0, (worksheet.costs_f9||0), 0.001); end
  def test_costs_b10; assert_equal("III.c", worksheet.costs_b10); end
  def test_costs_c10; assert_equal("Tidal and Wave [UNUSED]", worksheet.costs_c10); end
  def test_costs_d10; assert_equal("Electricity", worksheet.costs_d10); end
  def test_costs_e10; assert_equal("MEUR", worksheet.costs_e10); end
  def test_costs_z10; assert_in_delta(0, (worksheet.costs_z10||0), 0.001); end
  def test_costs_aa10; assert_in_delta(0, (worksheet.costs_aa10||0), 0.001); end
  def test_costs_ab10; assert_in_delta(0, (worksheet.costs_ab10||0), 0.001); end
  def test_costs_ac10; assert_in_delta(0, (worksheet.costs_ac10||0), 0.001); end
  def test_costs_ad10; assert_in_delta(0, (worksheet.costs_ad10||0), 0.001); end
  def test_costs_ae10; assert_in_delta(0, (worksheet.costs_ae10||0), 0.001); end
  def test_costs_af10; assert_in_delta(0, (worksheet.costs_af10||0), 0.001); end
  def test_costs_ag10; assert_in_delta(0, (worksheet.costs_ag10||0), 0.001); end
  def test_costs_ah10; assert_in_delta(0, (worksheet.costs_ah10||0), 0.001); end
  def test_costs_b11; assert_equal("III.d", worksheet.costs_b11); end
  def test_costs_c11; assert_equal("Geothermal electricity", worksheet.costs_c11); end
  def test_costs_d11; assert_equal("Electricity", worksheet.costs_d11); end
  def test_costs_e11; assert_equal("MEUR", worksheet.costs_e11); end
  def test_costs_f11; assert_in_delta(0, (worksheet.costs_f11||0), 0.001); end
  def test_costs_z11; assert_in_delta(0, (worksheet.costs_z11||0), 0.001); end
  def test_costs_aa11; assert_in_delta(0, (worksheet.costs_aa11||0), 0.001); end
  def test_costs_ab11; assert_in_delta(0, (worksheet.costs_ab11||0), 0.001); end
  def test_costs_ac11; assert_in_delta(0, (worksheet.costs_ac11||0), 0.001); end
  def test_costs_ad11; assert_in_delta(0, (worksheet.costs_ad11||0), 0.001); end
  def test_costs_ae11; assert_in_delta(0, (worksheet.costs_ae11||0), 0.001); end
  def test_costs_af11; assert_in_delta(0, (worksheet.costs_af11||0), 0.001); end
  def test_costs_ag11; assert_in_delta(0, (worksheet.costs_ag11||0), 0.001); end
  def test_costs_ah11; assert_in_delta(0, (worksheet.costs_ah11||0), 0.001); end
  def test_costs_b12; assert_equal("III.e", worksheet.costs_b12); end
  def test_costs_c12; assert_equal("Tidal [UNUSED]", worksheet.costs_c12); end
  def test_costs_d12; assert_equal("Electricity", worksheet.costs_d12); end
  def test_costs_e12; assert_equal("MEUR", worksheet.costs_e12); end
  def test_costs_f12; assert_in_delta(0, (worksheet.costs_f12||0), 0.001); end
  def test_costs_g12; assert_in_delta(0, (worksheet.costs_g12||0), 0.001); end
  def test_costs_h12; assert_in_delta(0, (worksheet.costs_h12||0), 0.001); end
  def test_costs_i12; assert_in_delta(0, (worksheet.costs_i12||0), 0.001); end
  def test_costs_j12; assert_in_delta(0, (worksheet.costs_j12||0), 0.001); end
  def test_costs_k12; assert_in_delta(0, (worksheet.costs_k12||0), 0.001); end
  def test_costs_l12; assert_in_delta(0, (worksheet.costs_l12||0), 0.001); end
  def test_costs_m12; assert_in_delta(0, (worksheet.costs_m12||0), 0.001); end
  def test_costs_n12; assert_in_delta(0, (worksheet.costs_n12||0), 0.001); end
  def test_costs_p12; assert_in_delta(0, (worksheet.costs_p12||0), 0.001); end
  def test_costs_q12; assert_in_delta(0, (worksheet.costs_q12||0), 0.001); end
  def test_costs_r12; assert_in_delta(0, (worksheet.costs_r12||0), 0.001); end
  def test_costs_s12; assert_in_delta(0, (worksheet.costs_s12||0), 0.001); end
  def test_costs_t12; assert_in_delta(0, (worksheet.costs_t12||0), 0.001); end
  def test_costs_u12; assert_in_delta(0, (worksheet.costs_u12||0), 0.001); end
  def test_costs_v12; assert_in_delta(0, (worksheet.costs_v12||0), 0.001); end
  def test_costs_w12; assert_in_delta(0, (worksheet.costs_w12||0), 0.001); end
  def test_costs_x12; assert_in_delta(0, (worksheet.costs_x12||0), 0.001); end
  def test_costs_z12; assert_in_delta(0, (worksheet.costs_z12||0), 0.001); end
  def test_costs_aa12; assert_in_delta(0, (worksheet.costs_aa12||0), 0.001); end
  def test_costs_ab12; assert_in_delta(0, (worksheet.costs_ab12||0), 0.001); end
  def test_costs_ac12; assert_in_delta(0, (worksheet.costs_ac12||0), 0.001); end
  def test_costs_ad12; assert_in_delta(0, (worksheet.costs_ad12||0), 0.001); end
  def test_costs_ae12; assert_in_delta(0, (worksheet.costs_ae12||0), 0.001); end
  def test_costs_af12; assert_in_delta(0, (worksheet.costs_af12||0), 0.001); end
  def test_costs_ag12; assert_in_delta(0, (worksheet.costs_ag12||0), 0.001); end
  def test_costs_ah12; assert_in_delta(0, (worksheet.costs_ah12||0), 0.001); end
  def test_costs_aj12; assert_in_delta(0, (worksheet.costs_aj12||0), 0.001); end
  def test_costs_ak12; assert_in_delta(0, (worksheet.costs_ak12||0), 0.001); end
  def test_costs_al12; assert_in_delta(0, (worksheet.costs_al12||0), 0.001); end
  def test_costs_am12; assert_in_delta(0, (worksheet.costs_am12||0), 0.001); end
  def test_costs_an12; assert_in_delta(0, (worksheet.costs_an12||0), 0.001); end
  def test_costs_ao12; assert_in_delta(0, (worksheet.costs_ao12||0), 0.001); end
  def test_costs_ap12; assert_in_delta(0, (worksheet.costs_ap12||0), 0.001); end
  def test_costs_aq12; assert_in_delta(0, (worksheet.costs_aq12||0), 0.001); end
  def test_costs_ar12; assert_in_delta(0, (worksheet.costs_ar12||0), 0.001); end
  def test_costs_b13; assert_equal("IV.a", worksheet.costs_b13); end
  def test_costs_c13; assert_equal("Solar PV", worksheet.costs_c13); end
  def test_costs_d13; assert_equal("Electricity", worksheet.costs_d13); end
  def test_costs_e13; assert_equal("MEUR", worksheet.costs_e13); end
  def test_costs_p13; assert_in_epsilon(25.6255, worksheet.costs_p13, 0.001); end
  def test_costs_z13; assert_in_delta(0, (worksheet.costs_z13||0), 0.001); end
  def test_costs_b14; assert_equal("IV.b", worksheet.costs_b14); end
  def test_costs_c14; assert_equal("Solar thermal", worksheet.costs_c14); end
  def test_costs_d14; assert_equal("Buildings", worksheet.costs_d14); end
  def test_costs_e14; assert_equal("MEUR", worksheet.costs_e14); end
  def test_costs_f14; assert_in_delta(0, (worksheet.costs_f14||0), 0.001); end
  def test_costs_p14; assert_in_delta(0, (worksheet.costs_p14||0), 0.001); end
  def test_costs_z14; assert_in_delta(0, (worksheet.costs_z14||0), 0.001); end
  def test_costs_aj14; assert_in_delta(0, (worksheet.costs_aj14||0), 0.001); end
  def test_costs_g14; assert_in_epsilon(29.23028982752723, worksheet.costs_g14, 0.001); end
  def test_costs_q14; assert_in_epsilon(2.9230289827527227, worksheet.costs_q14, 0.001); end
  def test_costs_q180; assert_in_epsilon(115.47368963398165, worksheet.costs_q180, 0.001); end
  def test_costs_q181; assert_in_delta(0, (worksheet.costs_q181||0), 0.001); end
  def test_costs_q182; assert_in_epsilon(27.675089425073754, worksheet.costs_q182, 0.001); end
  def test_costs_q187; assert_in_epsilon(50.757956589699305, worksheet.costs_q187, 0.001); end
  def test_costs_q192; assert_in_epsilon(71.5, worksheet.costs_q192, 0.001); end
  def test_costs_g193; assert_in_epsilon(72.84244279671998, worksheet.costs_g193, 0.001); end
  def test_costs_q193; assert_in_epsilon(59.49758276060521, worksheet.costs_q193, 0.001); end
  def test_costs_aa14; assert_in_epsilon(3.1361359969442693, worksheet.costs_aa14, 0.001); end
  def test_costs_ak14; assert_in_epsilon(35.289454807224224, worksheet.costs_ak14, 0.001); end
  def test_costs_h14; assert_in_epsilon(32.300020650495064, worksheet.costs_h14, 0.001); end
  def test_costs_r14; assert_in_epsilon(5.946152403548077, worksheet.costs_r14, 0.001); end
  def test_costs_r180; assert_in_epsilon(113.32170070571547, worksheet.costs_r180, 0.001); end
  def test_costs_r181; assert_in_delta(0, (worksheet.costs_r181||0), 0.001); end
  def test_costs_r182; assert_in_epsilon(27.675089425073754, worksheet.costs_r182, 0.001); end
  def test_costs_r187; assert_in_epsilon(62.12973174811074, worksheet.costs_r187, 0.001); end
  def test_costs_r192; assert_in_epsilon(71, worksheet.costs_r192, 0.001); end
  def test_costs_h193; assert_in_epsilon(77.92237985739668, worksheet.costs_h193, 0.001); end
  def test_costs_r193; assert_in_epsilon(65.46825062905985, worksheet.costs_r193, 0.001); end
  def test_costs_ab14; assert_in_epsilon(7.554548849220688, worksheet.costs_ab14, 0.001); end
  def test_costs_al14; assert_in_epsilon(45.80072190326383, worksheet.costs_al14, 0.001); end
  def test_costs_i14; assert_in_epsilon(33.18011124657851, worksheet.costs_i14, 0.001); end
  def test_costs_s14; assert_in_epsilon(8.811268145229967, worksheet.costs_s14, 0.001); end
  def test_costs_s180; assert_in_epsilon(84.15531453135912, worksheet.costs_s180, 0.001); end
  def test_costs_s181; assert_in_delta(0, (worksheet.costs_s181||0), 0.001); end
  def test_costs_s182; assert_in_delta(0, (worksheet.costs_s182||0), 0.001); end
  def test_costs_s187; assert_in_epsilon(59.70901930964397, worksheet.costs_s187, 0.001); end
  def test_costs_s192; assert_in_epsilon(73, worksheet.costs_s192, 0.001); end
  def test_costs_i193; assert_in_epsilon(81.83001994339958, worksheet.costs_i193, 0.001); end
  def test_costs_s193; assert_in_epsilon(83.01855158638644, worksheet.costs_s193, 0.001); end
  def test_costs_ac14; assert_in_epsilon(15.366021905434044, worksheet.costs_ac14, 0.001); end
  def test_costs_am14; assert_in_epsilon(57.357401297242525, worksheet.costs_am14, 0.001); end
  def test_costs_j14; assert_in_epsilon(34.325249971754644, worksheet.costs_j14, 0.001); end
  def test_costs_t14; assert_in_epsilon(11.517342032218309, worksheet.costs_t14, 0.001); end
  def test_costs_t180; assert_in_epsilon(89.23231489907658, worksheet.costs_t180, 0.001); end
  def test_costs_t181; assert_in_delta(0, (worksheet.costs_t181||0), 0.001); end
  def test_costs_t182; assert_in_delta(0, (worksheet.costs_t182||0), 0.001); end
  def test_costs_t187; assert_in_epsilon(58.747369132779696, worksheet.costs_t187, 0.001); end
  def test_costs_t192; assert_in_epsilon(75, worksheet.costs_t192, 0.001); end
  def test_costs_j193; assert_in_epsilon(84.40356206374922, worksheet.costs_j193, 0.001); end
  def test_costs_t193; assert_in_epsilon(77.55772075105845, worksheet.costs_t193, 0.001); end
  def test_costs_ad14; assert_in_epsilon(20.45000421946907, worksheet.costs_ad14, 0.001); end
  def test_costs_an14; assert_in_epsilon(66.29259622344202, worksheet.costs_an14, 0.001); end
  def test_costs_k14; assert_in_epsilon(55.1377643810424, worksheet.costs_k14, 0.001); end
  def test_costs_u14; assert_in_epsilon(13.900727719278338, worksheet.costs_u14, 0.001); end
  def test_costs_u180; assert_in_epsilon(92.65260592168869, worksheet.costs_u180, 0.001); end
  def test_costs_u181; assert_in_delta(0, (worksheet.costs_u181||0), 0.001); end
  def test_costs_u182; assert_in_delta(0, (worksheet.costs_u182||0), 0.001); end
  def test_costs_u187; assert_in_epsilon(57.68954821622186, worksheet.costs_u187, 0.001); end
  def test_costs_u192; assert_in_epsilon(73.5, worksheet.costs_u192, 0.001); end
  def test_costs_k193; assert_in_epsilon(86.9322523208289, worksheet.costs_k193, 0.001); end
  def test_costs_u193; assert_in_epsilon(74.09003548423753, worksheet.costs_u193, 0.001); end
  def test_costs_ae14; assert_in_epsilon(25.906112925200194, worksheet.costs_ae14, 0.001); end
  def test_costs_ao14; assert_in_epsilon(94.94460502552093, worksheet.costs_ao14, 0.001); end
  def test_costs_l14; assert_in_epsilon(75.47977882923325, worksheet.costs_l14, 0.001); end
  def test_costs_v14; assert_in_epsilon(15.94179212253789, worksheet.costs_v14, 0.001); end
  def test_costs_v180; assert_in_epsilon(97.67748163469714, worksheet.costs_v180, 0.001); end
  def test_costs_v181; assert_in_delta(0, (worksheet.costs_v181||0), 0.001); end
  def test_costs_v182; assert_in_delta(0, (worksheet.costs_v182||0), 0.001); end
  def test_costs_v187; assert_in_epsilon(56.7956264143367, worksheet.costs_v187, 0.001); end
  def test_costs_v192; assert_in_epsilon(72, worksheet.costs_v192, 0.001); end
  def test_costs_l193; assert_in_epsilon(89.35026774384792, worksheet.costs_l193, 0.001); end
  def test_costs_v193; assert_in_epsilon(71.68820964402435, worksheet.costs_v193, 0.001); end
  def test_costs_af14; assert_in_epsilon(31.895706977823533, worksheet.costs_af14, 0.001); end
  def test_costs_ap14; assert_in_epsilon(123.31727792959468, worksheet.costs_ap14, 0.001); end
  def test_costs_m14; assert_in_epsilon(91.95301001821727, worksheet.costs_m14, 0.001); end
  def test_costs_w14; assert_in_epsilon(17.48538675702381, worksheet.costs_w14, 0.001); end
  def test_costs_w180; assert_in_epsilon(112.10272924636483, worksheet.costs_w180, 0.001); end
  def test_costs_w181; assert_in_delta(0, (worksheet.costs_w181||0), 0.001); end
  def test_costs_w182; assert_in_delta(0, (worksheet.costs_w182||0), 0.001); end
  def test_costs_w187; assert_in_epsilon(55.81194634823515, worksheet.costs_w187, 0.001); end
  def test_costs_w192; assert_in_epsilon(71, worksheet.costs_w192, 0.001); end
  def test_costs_m193; assert_in_epsilon(91.44539445437277, worksheet.costs_m193, 0.001); end
  def test_costs_w193; assert_in_epsilon(69.29260519383638, worksheet.costs_w193, 0.001); end
  def test_costs_ag14; assert_in_epsilon(37.97470632554243, worksheet.costs_ag14, 0.001); end
  def test_costs_aq14; assert_in_epsilon(147.4131031007835, worksheet.costs_aq14, 0.001); end
  def test_costs_n14; assert_in_epsilon(90.38777266593968, worksheet.costs_n14, 0.001); end
  def test_costs_x14; assert_in_epsilon(16.99539067107331, worksheet.costs_x14, 0.001); end
  def test_costs_ah14; assert_in_epsilon(40.511464500157444, worksheet.costs_ah14, 0.001); end
  def test_costs_ar14; assert_in_epsilon(147.89462783717045, worksheet.costs_ar14, 0.001); end
  def test_costs_b15; assert_equal("IV.c", worksheet.costs_b15); end
  def test_costs_c15; assert_equal("Small-scale wind  [UNUSED]", worksheet.costs_c15); end
  def test_costs_d15; assert_equal("Electricity", worksheet.costs_d15); end
  def test_costs_e15; assert_equal("MEUR", worksheet.costs_e15); end
  def test_costs_z15; assert_in_delta(0, (worksheet.costs_z15||0), 0.001); end
  def test_costs_aa15; assert_in_delta(0, (worksheet.costs_aa15||0), 0.001); end
  def test_costs_ab15; assert_in_delta(0, (worksheet.costs_ab15||0), 0.001); end
  def test_costs_ac15; assert_in_delta(0, (worksheet.costs_ac15||0), 0.001); end
  def test_costs_ad15; assert_in_delta(0, (worksheet.costs_ad15||0), 0.001); end
  def test_costs_ae15; assert_in_delta(0, (worksheet.costs_ae15||0), 0.001); end
  def test_costs_af15; assert_in_delta(0, (worksheet.costs_af15||0), 0.001); end
  def test_costs_ag15; assert_in_delta(0, (worksheet.costs_ag15||0), 0.001); end
  def test_costs_ah15; assert_in_delta(0, (worksheet.costs_ah15||0), 0.001); end
  def test_control_aa10; assert_in_epsilon(10, worksheet.control_aa10, 0.001); end
  def test_costs_f15; assert_in_delta(0, (worksheet.costs_f15||0), 0.001); end
  def test_costs_p15; assert_in_delta(0, (worksheet.costs_p15||0), 0.001); end
  def test_costs_aj15; assert_in_delta(0, (worksheet.costs_aj15||0), 0.001); end
  def test_costs_g15; assert_in_delta(0, (worksheet.costs_g15||0), 0.001); end
  def test_costs_q15; assert_in_delta(0, (worksheet.costs_q15||0), 0.001); end
  def test_costs_ak15; assert_in_delta(0, (worksheet.costs_ak15||0), 0.001); end
  def test_costs_h15; assert_in_delta(0, (worksheet.costs_h15||0), 0.001); end
  def test_costs_r15; assert_in_delta(0, (worksheet.costs_r15||0), 0.001); end
  def test_costs_al15; assert_in_delta(0, (worksheet.costs_al15||0), 0.001); end
  def test_costs_i15; assert_in_delta(0, (worksheet.costs_i15||0), 0.001); end
  def test_costs_s15; assert_in_delta(0, (worksheet.costs_s15||0), 0.001); end
  def test_costs_am15; assert_in_delta(0, (worksheet.costs_am15||0), 0.001); end
  def test_costs_j15; assert_in_delta(0, (worksheet.costs_j15||0), 0.001); end
  def test_costs_t15; assert_in_delta(0, (worksheet.costs_t15||0), 0.001); end
  def test_costs_an15; assert_in_delta(0, (worksheet.costs_an15||0), 0.001); end
  def test_costs_k15; assert_in_delta(0, (worksheet.costs_k15||0), 0.001); end
  def test_costs_u15; assert_in_delta(0, (worksheet.costs_u15||0), 0.001); end
  def test_costs_ao15; assert_in_delta(0, (worksheet.costs_ao15||0), 0.001); end
  def test_costs_l15; assert_in_delta(0, (worksheet.costs_l15||0), 0.001); end
  def test_costs_v15; assert_in_delta(0, (worksheet.costs_v15||0), 0.001); end
  def test_costs_ap15; assert_in_delta(0, (worksheet.costs_ap15||0), 0.001); end
  def test_costs_m15; assert_in_delta(0, (worksheet.costs_m15||0), 0.001); end
  def test_costs_w15; assert_in_delta(0, (worksheet.costs_w15||0), 0.001); end
  def test_costs_aq15; assert_in_delta(0, (worksheet.costs_aq15||0), 0.001); end
  def test_costs_n15; assert_in_delta(0, (worksheet.costs_n15||0), 0.001); end
  def test_costs_x15; assert_in_delta(0, (worksheet.costs_x15||0), 0.001); end
  def test_costs_ar15; assert_in_delta(0, (worksheet.costs_ar15||0), 0.001); end
  def test_costs_b16; assert_equal("V.a", worksheet.costs_b16); end
  def test_costs_c16; assert_equal("Types of fuel from Biomass", worksheet.costs_c16); end
  def test_costs_d16; assert_equal("Bioenergy", worksheet.costs_d16); end
  def test_costs_e16; assert_equal("MEUR", worksheet.costs_e16); end
  def test_costs_z16; assert_in_delta(0, (worksheet.costs_z16||0), 0.001); end
  def test_costs_aa16; assert_in_delta(0, (worksheet.costs_aa16||0), 0.001); end
  def test_costs_ab16; assert_in_delta(0, (worksheet.costs_ab16||0), 0.001); end
  def test_costs_ac16; assert_in_delta(0, (worksheet.costs_ac16||0), 0.001); end
  def test_costs_ad16; assert_in_delta(0, (worksheet.costs_ad16||0), 0.001); end
  def test_costs_ae16; assert_in_delta(0, (worksheet.costs_ae16||0), 0.001); end
  def test_costs_af16; assert_in_delta(0, (worksheet.costs_af16||0), 0.001); end
  def test_costs_ag16; assert_in_delta(0, (worksheet.costs_ag16||0), 0.001); end
  def test_costs_ah16; assert_in_delta(0, (worksheet.costs_ah16||0), 0.001); end
  def test_costs_f16; assert_in_epsilon(4.850460048814782, worksheet.costs_f16, 0.001); end
  def test_costs_p16; assert_in_epsilon(13.438303834062845, worksheet.costs_p16, 0.001); end
  def test_costs_aj16; assert_in_epsilon(18.288763882877628, worksheet.costs_aj16, 0.001); end
  def test_costs_g16; assert_in_epsilon(5.34628523482145, worksheet.costs_g16, 0.001); end
  def test_costs_q16; assert_in_epsilon(15.837509168623143, worksheet.costs_q16, 0.001); end
  def test_costs_ak16; assert_in_epsilon(21.183794403444594, worksheet.costs_ak16, 0.001); end
  def test_costs_h16; assert_in_epsilon(7.751815786809762, worksheet.costs_h16, 0.001); end
  def test_costs_r16; assert_in_epsilon(18.216386606154664, worksheet.costs_r16, 0.001); end
  def test_costs_al16; assert_in_epsilon(25.968202392964425, worksheet.costs_al16, 0.001); end
  def test_costs_i16; assert_in_epsilon(6.29223453565358, worksheet.costs_i16, 0.001); end
  def test_costs_s16; assert_in_epsilon(20.739185800185115, worksheet.costs_s16, 0.001); end
  def test_costs_am16; assert_in_epsilon(27.031420335838696, worksheet.costs_am16, 0.001); end
  def test_costs_j16; assert_in_epsilon(6.711674002478879, worksheet.costs_j16, 0.001); end
  def test_costs_t16; assert_in_epsilon(21.87353941775082, worksheet.costs_t16, 0.001); end
  def test_costs_an16; assert_in_epsilon(28.5852134202297, worksheet.costs_an16, 0.001); end
  def test_costs_k16; assert_in_epsilon(6.810634171835393, worksheet.costs_k16, 0.001); end
  def test_costs_u16; assert_in_epsilon(22.983484029246217, worksheet.costs_u16, 0.001); end
  def test_costs_ao16; assert_in_epsilon(29.79411820108161, worksheet.costs_ao16, 0.001); end
  def test_costs_l16; assert_in_epsilon(7.184810483654651, worksheet.costs_l16, 0.001); end
  def test_costs_v16; assert_in_epsilon(23.938309102046517, worksheet.costs_v16, 0.001); end
  def test_costs_ap16; assert_in_epsilon(31.12311958570117, worksheet.costs_ap16, 0.001); end
  def test_costs_m16; assert_in_epsilon(7.562966166900721, worksheet.costs_m16, 0.001); end
  def test_costs_w16; assert_in_epsilon(24.85368117495066, worksheet.costs_w16, 0.001); end
  def test_costs_aq16; assert_in_epsilon(32.41664734185138, worksheet.costs_aq16, 0.001); end
  def test_costs_n16; assert_in_epsilon(5.731619138317198, worksheet.costs_n16, 0.001); end
  def test_costs_x16; assert_in_epsilon(25.76750421788383, worksheet.costs_x16, 0.001); end
  def test_costs_ar16; assert_in_epsilon(31.499123356201025, worksheet.costs_ar16, 0.001); end
  def test_costs_b17; assert_equal("V.b", worksheet.costs_b17); end
  def test_costs_c17; assert_equal("Bioenergy imports", worksheet.costs_c17); end
  def test_costs_d17; assert_equal("Bioenergy", worksheet.costs_d17); end
  def test_costs_e17; assert_equal("MEUR", worksheet.costs_e17); end
  def test_costs_f17; assert_in_delta(0, (worksheet.costs_f17||0), 0.001); end
  def test_costs_g17; assert_in_delta(0, (worksheet.costs_g17||0), 0.001); end
  def test_costs_h17; assert_in_delta(0, (worksheet.costs_h17||0), 0.001); end
  def test_costs_i17; assert_in_delta(0, (worksheet.costs_i17||0), 0.001); end
  def test_costs_j17; assert_in_delta(0, (worksheet.costs_j17||0), 0.001); end
  def test_costs_k17; assert_in_delta(0, (worksheet.costs_k17||0), 0.001); end
  def test_costs_l17; assert_in_delta(0, (worksheet.costs_l17||0), 0.001); end
  def test_costs_m17; assert_in_delta(0, (worksheet.costs_m17||0), 0.001); end
  def test_costs_n17; assert_in_delta(0, (worksheet.costs_n17||0), 0.001); end
  def test_costs_p17; assert_in_delta(0, (worksheet.costs_p17||0), 0.001); end
  def test_costs_q17; assert_in_delta(0, (worksheet.costs_q17||0), 0.001); end
  def test_costs_r17; assert_in_delta(0, (worksheet.costs_r17||0), 0.001); end
  def test_costs_s17; assert_in_delta(0, (worksheet.costs_s17||0), 0.001); end
  def test_costs_t17; assert_in_delta(0, (worksheet.costs_t17||0), 0.001); end
  def test_costs_u17; assert_in_delta(0, (worksheet.costs_u17||0), 0.001); end
  def test_costs_v17; assert_in_delta(0, (worksheet.costs_v17||0), 0.001); end
  def test_costs_w17; assert_in_delta(0, (worksheet.costs_w17||0), 0.001); end
  def test_costs_x17; assert_in_delta(0, (worksheet.costs_x17||0), 0.001); end
  def test_costs_z17; assert_in_epsilon(480.3872798621682, worksheet.costs_z17, 0.001); end
  def test_costs_aj17; assert_in_epsilon(480.3872798621682, worksheet.costs_aj17, 0.001); end
  def test_costs_aa17; assert_in_epsilon(621.2460584881229, worksheet.costs_aa17, 0.001); end
  def test_costs_ak17; assert_in_epsilon(621.2460584881229, worksheet.costs_ak17, 0.001); end
  def test_costs_ab17; assert_in_epsilon(868.8736462422579, worksheet.costs_ab17, 0.001); end
  def test_costs_al17; assert_in_epsilon(868.8736462422579, worksheet.costs_al17, 0.001); end
  def test_costs_ac17; assert_in_epsilon(1099.6680604275016, worksheet.costs_ac17, 0.001); end
  def test_costs_am17; assert_in_epsilon(1099.6680604275016, worksheet.costs_am17, 0.001); end
  def test_costs_ad17; assert_in_epsilon(1353.1243349463616, worksheet.costs_ad17, 0.001); end
  def test_costs_an17; assert_in_epsilon(1353.1243349463616, worksheet.costs_an17, 0.001); end
  def test_costs_ae17; assert_in_epsilon(1560.5224210286951, worksheet.costs_ae17, 0.001); end
  def test_costs_ao17; assert_in_epsilon(1560.5224210286951, worksheet.costs_ao17, 0.001); end
  def test_costs_af17; assert_in_epsilon(1771.9848624969459, worksheet.costs_af17, 0.001); end
  def test_costs_ap17; assert_in_epsilon(1771.9848624969459, worksheet.costs_ap17, 0.001); end
  def test_costs_ag17; assert_in_epsilon(1931.3422437925808, worksheet.costs_ag17, 0.001); end
  def test_costs_aq17; assert_in_epsilon(1931.3422437925808, worksheet.costs_aq17, 0.001); end
  def test_costs_ah17; assert_in_epsilon(2057.6987914572796, worksheet.costs_ah17, 0.001); end
  def test_costs_ar17; assert_in_epsilon(2057.6987914572796, worksheet.costs_ar17, 0.001); end
  def test_costs_b18; assert_equal("VI.a", worksheet.costs_b18); end
  def test_costs_c18; assert_equal("Agriculture and land use", worksheet.costs_c18); end
  def test_costs_d18; assert_equal("Bioenergy", worksheet.costs_d18); end
  def test_costs_e18; assert_equal("MEUR", worksheet.costs_e18); end
  def test_costs_f18; assert_in_delta(0, (worksheet.costs_f18||0), 0.001); end
  def test_costs_g18; assert_in_delta(0, (worksheet.costs_g18||0), 0.001); end
  def test_costs_h18; assert_in_delta(0, (worksheet.costs_h18||0), 0.001); end
  def test_costs_i18; assert_in_delta(0, (worksheet.costs_i18||0), 0.001); end
  def test_costs_j18; assert_in_delta(0, (worksheet.costs_j18||0), 0.001); end
  def test_costs_k18; assert_in_delta(0, (worksheet.costs_k18||0), 0.001); end
  def test_costs_l18; assert_in_delta(0, (worksheet.costs_l18||0), 0.001); end
  def test_costs_m18; assert_in_delta(0, (worksheet.costs_m18||0), 0.001); end
  def test_costs_n18; assert_in_delta(0, (worksheet.costs_n18||0), 0.001); end
  def test_costs_p18; assert_in_delta(0, (worksheet.costs_p18||0), 0.001); end
  def test_costs_z18; assert_in_epsilon(22.355845426666665, worksheet.costs_z18, 0.001); end
  def test_costs_aj18; assert_in_epsilon(22.355845426666665, worksheet.costs_aj18, 0.001); end
  def test_costs_q18; assert_in_delta(0, (worksheet.costs_q18||0), 0.001); end
  def test_costs_aa18; assert_in_epsilon(143.04830968656194, worksheet.costs_aa18, 0.001); end
  def test_costs_ak18; assert_in_epsilon(143.04830968656194, worksheet.costs_ak18, 0.001); end
  def test_costs_r18; assert_in_delta(0, (worksheet.costs_r18||0), 0.001); end
  def test_costs_ab18; assert_in_epsilon(261.0149756998217, worksheet.costs_ab18, 0.001); end
  def test_costs_al18; assert_in_epsilon(261.0149756998217, worksheet.costs_al18, 0.001); end
  def test_costs_s18; assert_in_delta(0, (worksheet.costs_s18||0), 0.001); end
  def test_costs_ac18; assert_in_epsilon(271.5979830359434, worksheet.costs_ac18, 0.001); end
  def test_costs_am18; assert_in_epsilon(271.5979830359434, worksheet.costs_am18, 0.001); end
  def test_costs_t18; assert_in_delta(0, (worksheet.costs_t18||0), 0.001); end
  def test_costs_ad18; assert_in_epsilon(281.2653317327034, worksheet.costs_ad18, 0.001); end
  def test_costs_an18; assert_in_epsilon(281.2653317327034, worksheet.costs_an18, 0.001); end
  def test_costs_u18; assert_in_delta(0, (worksheet.costs_u18||0), 0.001); end
  def test_costs_ae18; assert_in_epsilon(289.940552448636, worksheet.costs_ae18, 0.001); end
  def test_costs_ao18; assert_in_epsilon(289.940552448636, worksheet.costs_ao18, 0.001); end
  def test_costs_v18; assert_in_delta(0, (worksheet.costs_v18||0), 0.001); end
  def test_costs_af18; assert_in_epsilon(297.8508687923462, worksheet.costs_af18, 0.001); end
  def test_costs_ap18; assert_in_epsilon(297.8508687923462, worksheet.costs_ap18, 0.001); end
  def test_costs_w18; assert_in_delta(0, (worksheet.costs_w18||0), 0.001); end
  def test_costs_ag18; assert_in_epsilon(304.97550562003187, worksheet.costs_ag18, 0.001); end
  def test_costs_aq18; assert_in_epsilon(304.97550562003187, worksheet.costs_aq18, 0.001); end
  def test_costs_x18; assert_in_delta(0, (worksheet.costs_x18||0), 0.001); end
  def test_costs_ah18; assert_in_epsilon(256.35894329241523, worksheet.costs_ah18, 0.001); end
  def test_costs_ar18; assert_in_epsilon(256.35894329241523, worksheet.costs_ar18, 0.001); end
  def test_costs_b19; assert_equal("VI.b", worksheet.costs_b19); end
  def test_costs_c19; assert_equal("Volume of Waste & Recycling", worksheet.costs_c19); end
  def test_costs_d19; assert_equal("Bioenergy", worksheet.costs_d19); end
  def test_costs_e19; assert_equal("MEUR", worksheet.costs_e19); end
  def test_costs_z19; assert_in_delta(0, (worksheet.costs_z19||0), 0.001); end
  def test_costs_aa19; assert_in_delta(0, (worksheet.costs_aa19||0), 0.001); end
  def test_costs_ab19; assert_in_delta(0, (worksheet.costs_ab19||0), 0.001); end
  def test_costs_ac19; assert_in_delta(0, (worksheet.costs_ac19||0), 0.001); end
  def test_costs_ad19; assert_in_delta(0, (worksheet.costs_ad19||0), 0.001); end
  def test_costs_ae19; assert_in_delta(0, (worksheet.costs_ae19||0), 0.001); end
  def test_costs_af19; assert_in_delta(0, (worksheet.costs_af19||0), 0.001); end
  def test_costs_ag19; assert_in_delta(0, (worksheet.costs_ag19||0), 0.001); end
  def test_costs_ah19; assert_in_delta(0, (worksheet.costs_ah19||0), 0.001); end
  def test_control_aa27; assert_in_epsilon(3, worksheet.control_aa27, 0.001); end
  def test_costs_f19; assert_in_delta(0.4633257172420699, worksheet.costs_f19, 0.001); end
  def test_costs_p19; assert_in_epsilon(1.035089368306752, worksheet.costs_p19, 0.001); end
  def test_costs_aj19; assert_in_epsilon(1.4984150855488219, worksheet.costs_aj19, 0.001); end
  def test_costs_g19; assert_in_delta(0, (worksheet.costs_g19||0), 0.001); end
  def test_costs_q19; assert_in_delta(0.6392561618520184, worksheet.costs_q19, 0.001); end
  def test_costs_ak19; assert_in_delta(0.6392561618520184, worksheet.costs_ak19, 0.001); end
  def test_costs_h19; assert_in_delta(0.06620042389902178, worksheet.costs_h19, 0.001); end
  def test_costs_r19; assert_in_delta(0.3943279774454938, worksheet.costs_r19, 0.001); end
  def test_costs_al19; assert_in_delta(0.46052840134451556, worksheet.costs_al19, 0.001); end
  def test_costs_i19; assert_in_delta(0.3025661732903045, worksheet.costs_i19, 0.001); end
  def test_costs_s19; assert_in_delta(0.27461342343885997, worksheet.costs_s19, 0.001); end
  def test_costs_am19; assert_in_delta(0.5771795967291644, worksheet.costs_am19, 0.001); end
  def test_costs_j19; assert_in_delta(0, (worksheet.costs_j19||0), 0.001); end
  def test_costs_t19; assert_in_delta(0.1686719671058577, worksheet.costs_t19, 0.001); end
  def test_costs_an19; assert_in_delta(0.1686719671058577, worksheet.costs_an19, 0.001); end
  def test_costs_k19; assert_in_delta(0, (worksheet.costs_k19||0), 0.001); end
  def test_costs_u19; assert_in_delta(0.08823989659547062, worksheet.costs_u19, 0.001); end
  def test_costs_ao19; assert_in_delta(0.08823989659547062, worksheet.costs_ao19, 0.001); end
  def test_costs_l19; assert_in_delta(0.04474025599033816, worksheet.costs_l19, 0.001); end
  def test_costs_v19; assert_in_delta(0.033317211907698624, worksheet.costs_v19, 0.001); end
  def test_costs_ap19; assert_in_delta(0.07805746789803678, worksheet.costs_ap19, 0.001); end
  def test_costs_m19; assert_in_delta(0, (worksheet.costs_m19||0), 0.001); end
  def test_costs_w19; assert_in_delta(0.00880170994634877, worksheet.costs_w19, 0.001); end
  def test_costs_aq19; assert_in_delta(0.00880170994634877, worksheet.costs_aq19, 0.001); end
  def test_costs_n19; assert_in_delta(0, (worksheet.costs_n19||0), 0.001); end
  def test_costs_x19; assert_in_delta(0, (worksheet.costs_x19||0), 0.001); end
  def test_costs_ar19; assert_in_delta(0, (worksheet.costs_ar19||0), 0.001); end
  def test_costs_b20; assert_equal("VI.c", worksheet.costs_b20); end
  def test_costs_c20; assert_equal("Marine algae  [UNUSED]", worksheet.costs_c20); end
  def test_costs_d20; assert_equal("Bioenergy", worksheet.costs_d20); end
  def test_costs_e20; assert_equal("MEUR", worksheet.costs_e20); end
  def test_costs_f20; assert_in_delta(0, (worksheet.costs_f20||0), 0.001); end
  def test_costs_g20; assert_in_delta(0, (worksheet.costs_g20||0), 0.001); end
  def test_costs_h20; assert_in_delta(0, (worksheet.costs_h20||0), 0.001); end
  def test_costs_i20; assert_in_delta(0, (worksheet.costs_i20||0), 0.001); end
  def test_costs_j20; assert_in_delta(0, (worksheet.costs_j20||0), 0.001); end
  def test_costs_k20; assert_in_delta(0, (worksheet.costs_k20||0), 0.001); end
  def test_costs_l20; assert_in_delta(0, (worksheet.costs_l20||0), 0.001); end
  def test_costs_m20; assert_in_delta(0, (worksheet.costs_m20||0), 0.001); end
  def test_costs_n20; assert_in_delta(0, (worksheet.costs_n20||0), 0.001); end
  def test_costs_p20; assert_in_delta(0, (worksheet.costs_p20||0), 0.001); end
  def test_costs_q20; assert_in_delta(0, (worksheet.costs_q20||0), 0.001); end
  def test_costs_r20; assert_in_delta(0, (worksheet.costs_r20||0), 0.001); end
  def test_costs_s20; assert_in_delta(0, (worksheet.costs_s20||0), 0.001); end
  def test_costs_t20; assert_in_delta(0, (worksheet.costs_t20||0), 0.001); end
  def test_costs_u20; assert_in_delta(0, (worksheet.costs_u20||0), 0.001); end
  def test_costs_v20; assert_in_delta(0, (worksheet.costs_v20||0), 0.001); end
  def test_costs_w20; assert_in_delta(0, (worksheet.costs_w20||0), 0.001); end
  def test_costs_x20; assert_in_delta(0, (worksheet.costs_x20||0), 0.001); end
  def test_costs_z20; assert_in_delta(0, (worksheet.costs_z20||0), 0.001); end
  def test_costs_aj20; assert_in_delta(0, (worksheet.costs_aj20||0), 0.001); end
  def test_costs_aa20; assert_in_delta(0, (worksheet.costs_aa20||0), 0.001); end
  def test_costs_ak20; assert_in_delta(0, (worksheet.costs_ak20||0), 0.001); end
  def test_costs_ab20; assert_in_delta(0, (worksheet.costs_ab20||0), 0.001); end
  def test_costs_al20; assert_in_delta(0, (worksheet.costs_al20||0), 0.001); end
  def test_costs_ac20; assert_in_delta(0, (worksheet.costs_ac20||0), 0.001); end
  def test_costs_am20; assert_in_delta(0, (worksheet.costs_am20||0), 0.001); end
  def test_costs_ad20; assert_in_delta(0, (worksheet.costs_ad20||0), 0.001); end
  def test_costs_an20; assert_in_delta(0, (worksheet.costs_an20||0), 0.001); end
  def test_costs_ae20; assert_in_delta(0, (worksheet.costs_ae20||0), 0.001); end
  def test_costs_ao20; assert_in_delta(0, (worksheet.costs_ao20||0), 0.001); end
  def test_costs_af20; assert_in_delta(0, (worksheet.costs_af20||0), 0.001); end
  def test_costs_ap20; assert_in_delta(0, (worksheet.costs_ap20||0), 0.001); end
  def test_costs_ag20; assert_in_delta(0, (worksheet.costs_ag20||0), 0.001); end
  def test_costs_aq20; assert_in_delta(0, (worksheet.costs_aq20||0), 0.001); end
  def test_costs_ah20; assert_in_delta(0, (worksheet.costs_ah20||0), 0.001); end
  def test_costs_ar20; assert_in_delta(0, (worksheet.costs_ar20||0), 0.001); end
  def test_costs_b21; assert_equal("VII.a.Imports", worksheet.costs_b21); end
  def test_costs_c21; assert_equal("Electricity imports", worksheet.costs_c21); end
  def test_costs_d21; assert_equal("Electricity (ex/im)ports", worksheet.costs_d21); end
  def test_costs_e21; assert_equal("MEUR", worksheet.costs_e21); end
  def test_costs_f21; assert_in_delta(0, (worksheet.costs_f21||0), 0.001); end
  def test_costs_g21; assert_in_delta(0, (worksheet.costs_g21||0), 0.001); end
  def test_costs_h21; assert_in_delta(0, (worksheet.costs_h21||0), 0.001); end
  def test_costs_i21; assert_in_delta(0, (worksheet.costs_i21||0), 0.001); end
  def test_costs_j21; assert_in_delta(0, (worksheet.costs_j21||0), 0.001); end
  def test_costs_k21; assert_in_delta(0, (worksheet.costs_k21||0), 0.001); end
  def test_costs_l21; assert_in_delta(0, (worksheet.costs_l21||0), 0.001); end
  def test_costs_m21; assert_in_delta(0, (worksheet.costs_m21||0), 0.001); end
  def test_costs_n21; assert_in_delta(0, (worksheet.costs_n21||0), 0.001); end
  def test_costs_p21; assert_in_delta(0, (worksheet.costs_p21||0), 0.001); end
  def test_costs_q21; assert_in_delta(0, (worksheet.costs_q21||0), 0.001); end
  def test_costs_r21; assert_in_delta(0, (worksheet.costs_r21||0), 0.001); end
  def test_costs_s21; assert_in_delta(0, (worksheet.costs_s21||0), 0.001); end
  def test_costs_t21; assert_in_delta(0, (worksheet.costs_t21||0), 0.001); end
  def test_costs_u21; assert_in_delta(0, (worksheet.costs_u21||0), 0.001); end
  def test_costs_v21; assert_in_delta(0, (worksheet.costs_v21||0), 0.001); end
  def test_costs_w21; assert_in_delta(0, (worksheet.costs_w21||0), 0.001); end
  def test_costs_x21; assert_in_delta(0, (worksheet.costs_x21||0), 0.001); end
  def test_costs_b22; assert_equal("VII.a.Exports", worksheet.costs_b22); end
  def test_costs_c22; assert_equal("Electricity exports", worksheet.costs_c22); end
  def test_costs_d22; assert_equal("Electricity (ex/im)ports", worksheet.costs_d22); end
  def test_costs_e22; assert_equal("MEUR", worksheet.costs_e22); end
  def test_costs_f22; assert_in_delta(0, (worksheet.costs_f22||0), 0.001); end
  def test_costs_b23; assert_equal("VII.b", worksheet.costs_b23); end
  def test_costs_c23; assert_equal("Electricity grid distribution", worksheet.costs_c23); end
  def test_costs_d23; assert_equal("Electricity", worksheet.costs_d23); end
  def test_costs_e23; assert_equal("MEUR", worksheet.costs_e23); end
  def test_costs_z23; assert_in_delta(0, (worksheet.costs_z23||0), 0.001); end
  def test_costs_aa23; assert_in_delta(0, (worksheet.costs_aa23||0), 0.001); end
  def test_costs_ab23; assert_in_delta(0, (worksheet.costs_ab23||0), 0.001); end
  def test_costs_ac23; assert_in_delta(0, (worksheet.costs_ac23||0), 0.001); end
  def test_costs_ad23; assert_in_delta(0, (worksheet.costs_ad23||0), 0.001); end
  def test_costs_ae23; assert_in_delta(0, (worksheet.costs_ae23||0), 0.001); end
  def test_costs_af23; assert_in_delta(0, (worksheet.costs_af23||0), 0.001); end
  def test_costs_ag23; assert_in_delta(0, (worksheet.costs_ag23||0), 0.001); end
  def test_costs_ah23; assert_in_delta(0, (worksheet.costs_ah23||0), 0.001); end
  def test_costs_b24; assert_equal("VII.c", worksheet.costs_b24); end
  def test_costs_c24; assert_equal("EU transmission integration", worksheet.costs_c24); end
  def test_costs_d24; assert_equal("Electricity", worksheet.costs_d24); end
  def test_costs_e24; assert_equal("MEUR", worksheet.costs_e24); end
  def test_costs_f24; assert_in_delta(0, (worksheet.costs_f24||0), 0.001); end
  def test_costs_b25; assert_equal("VIII.a", worksheet.costs_b25); end
  def test_costs_c25; assert_equal("H2 Production for Transport", worksheet.costs_c25); end
  def test_costs_d25; assert_equal("Transport", worksheet.costs_d25); end
  def test_costs_e25; assert_equal("MEUR", worksheet.costs_e25); end
  def test_costs_f25; assert_in_delta(0, (worksheet.costs_f25||0), 0.001); end
  def test_costs_p25; assert_in_delta(0, (worksheet.costs_p25||0), 0.001); end
  def test_costs_z25; assert_in_delta(0, (worksheet.costs_z25||0), 0.001); end
  def test_costs_aj25; assert_in_delta(0, (worksheet.costs_aj25||0), 0.001); end
  def test_costs_g25; assert_in_delta(0, (worksheet.costs_g25||0), 0.001); end
  def test_costs_q25; assert_in_delta(0, (worksheet.costs_q25||0), 0.001); end
  def test_costs_aa25; assert_in_delta(0, (worksheet.costs_aa25||0), 0.001); end
  def test_costs_ak25; assert_in_delta(0, (worksheet.costs_ak25||0), 0.001); end
  def test_costs_h25; assert_in_epsilon(25.620332485323186, worksheet.costs_h25, 0.001); end
  def test_costs_r25; assert_in_epsilon(3.4324652019246145, worksheet.costs_r25, 0.001); end
  def test_costs_ab25; assert_in_epsilon(6.826600642441904, worksheet.costs_ab25, 0.001); end
  def test_costs_al25; assert_in_epsilon(35.87939832968971, worksheet.costs_al25, 0.001); end
  def test_costs_i25; assert_in_epsilon(31.051250295101944, worksheet.costs_i25, 0.001); end
  def test_costs_s25; assert_in_epsilon(6.7004376581720235, worksheet.costs_s25, 0.001); end
  def test_costs_ac25; assert_in_epsilon(16.81656452800625, worksheet.costs_ac25, 0.001); end
  def test_costs_am25; assert_in_epsilon(54.56825248128021, worksheet.costs_am25, 0.001); end
  def test_costs_j25; assert_in_epsilon(36.084584559873065, worksheet.costs_j25, 0.001); end
  def test_costs_t25; assert_in_epsilon(9.690965954165474, worksheet.costs_t25, 0.001); end
  def test_costs_ad25; assert_in_epsilon(25.676488632885203, worksheet.costs_ad25, 0.001); end
  def test_costs_an25; assert_in_epsilon(71.45203914692374, worksheet.costs_an25, 0.001); end
  def test_costs_k25; assert_in_epsilon(39.40436818658657, worksheet.costs_k25, 0.001); end
  def test_costs_u25; assert_in_epsilon(12.155081013194817, worksheet.costs_u25, 0.001); end
  def test_costs_ae25; assert_in_epsilon(34.76081298797082, worksheet.costs_ae25, 0.001); end
  def test_costs_ao25; assert_in_epsilon(86.3202621877522, worksheet.costs_ao25, 0.001); end
  def test_costs_l25; assert_in_epsilon(43.52570444858742, worksheet.costs_l25, 0.001); end
  def test_costs_v25; assert_in_epsilon(14.122212313688928, worksheet.costs_v25, 0.001); end
  def test_costs_af25; assert_in_epsilon(44.979831009903556, worksheet.costs_af25, 0.001); end
  def test_costs_ap25; assert_in_epsilon(102.6277477721799, worksheet.costs_ap25, 0.001); end
  def test_costs_m25; assert_in_epsilon(49.684182167374814, worksheet.costs_m25, 0.001); end
  def test_costs_w25; assert_in_epsilon(15.450331231669704, worksheet.costs_w25, 0.001); end
  def test_costs_ag25; assert_in_epsilon(56.10806609145854, worksheet.costs_ag25, 0.001); end
  def test_costs_aq25; assert_in_epsilon(121.24257949050306, worksheet.costs_aq25, 0.001); end
  def test_costs_n25; assert_in_epsilon(60.67665679814363, worksheet.costs_n25, 0.001); end
  def test_costs_x25; assert_in_epsilon(16.058860347055443, worksheet.costs_x25, 0.001); end
  def test_costs_ah25; assert_in_epsilon(68.48122164502985, worksheet.costs_ah25, 0.001); end
  def test_costs_ar25; assert_in_epsilon(145.21673879022893, worksheet.costs_ar25, 0.001); end
  def test_costs_b26; assert_equal("IX.a", worksheet.costs_b26); end
  def test_costs_c26; assert_equal("Domestic space heating and hot water", worksheet.costs_c26); end
  def test_costs_d26; assert_equal("Buildings", worksheet.costs_d26); end
  def test_costs_e26; assert_equal("MEUR", worksheet.costs_e26); end
  def test_costs_p26; assert_in_epsilon(73.96375664907417, worksheet.costs_p26, 0.001); end
  def test_costs_f26; assert_in_epsilon(14737.203953516291, worksheet.costs_f26, 0.001); end
  def test_costs_z26; assert_in_epsilon(2475.4681588926887, worksheet.costs_z26, 0.001); end
  def test_costs_aj26; assert_in_epsilon(17286.635869058053, worksheet.costs_aj26, 0.001); end
  def test_costs_g26; assert_in_epsilon(14815.175173477524, worksheet.costs_g26, 0.001); end
  def test_costs_q26; assert_in_epsilon(90.13626223717218, worksheet.costs_q26, 0.001); end
  def test_costs_aa26; assert_in_epsilon(2156.7781586980936, worksheet.costs_aa26, 0.001); end
  def test_costs_ak26; assert_in_epsilon(17062.08959441279, worksheet.costs_ak26, 0.001); end
  def test_costs_h26; assert_in_epsilon(14470.327801343974, worksheet.costs_h26, 0.001); end
  def test_costs_r26; assert_in_epsilon(107.12840905324329, worksheet.costs_r26, 0.001); end
  def test_costs_ab26; assert_in_epsilon(2207.3298828165466, worksheet.costs_ab26, 0.001); end
  def test_costs_al26; assert_in_epsilon(16784.786093213763, worksheet.costs_al26, 0.001); end
  def test_costs_i26; assert_in_epsilon(11681.323113207776, worksheet.costs_i26, 0.001); end
  def test_costs_s26; assert_in_epsilon(123.09279868370193, worksheet.costs_s26, 0.001); end
  def test_costs_ac26; assert_in_epsilon(2381.3414908243717, worksheet.costs_ac26, 0.001); end
  def test_costs_am26; assert_in_epsilon(14185.75740271585, worksheet.costs_am26, 0.001); end
  def test_costs_j26; assert_in_epsilon(12190.112756632616, worksheet.costs_j26, 0.001); end
  def test_costs_t26; assert_in_epsilon(140.12832623970692, worksheet.costs_t26, 0.001); end
  def test_costs_ad26; assert_in_epsilon(2233.95569076475, worksheet.costs_ad26, 0.001); end
  def test_costs_an26; assert_in_epsilon(14564.196773637072, worksheet.costs_an26, 0.001); end
  def test_costs_k26; assert_in_epsilon(11486.19273398996, worksheet.costs_k26, 0.001); end
  def test_costs_u26; assert_in_epsilon(157.30211256286077, worksheet.costs_u26, 0.001); end
  def test_costs_ae26; assert_in_epsilon(2057.810245374896, worksheet.costs_ae26, 0.001); end
  def test_costs_ao26; assert_in_epsilon(13701.305091927716, worksheet.costs_ao26, 0.001); end
  def test_costs_l26; assert_in_epsilon(12018.684885577897, worksheet.costs_l26, 0.001); end
  def test_costs_v26; assert_in_epsilon(175.48274857674645, worksheet.costs_v26, 0.001); end
  def test_costs_af26; assert_in_epsilon(1913.8704908937302, worksheet.costs_af26, 0.001); end
  def test_costs_ap26; assert_in_epsilon(14108.038125048375, worksheet.costs_ap26, 0.001); end
  def test_costs_m26; assert_in_epsilon(11837.36767068672, worksheet.costs_m26, 0.001); end
  def test_costs_w26; assert_in_epsilon(193.96966519574727, worksheet.costs_w26, 0.001); end
  def test_costs_ag26; assert_in_epsilon(1785.0286668134602, worksheet.costs_ag26, 0.001); end
  def test_costs_aq26; assert_in_epsilon(13816.366002695928, worksheet.costs_aq26, 0.001); end
  def test_costs_n26; assert_in_epsilon(12516.926615045671, worksheet.costs_n26, 0.001); end
  def test_costs_x26; assert_in_epsilon(213.44411480137782, worksheet.costs_x26, 0.001); end
  def test_costs_ah26; assert_in_epsilon(1699.0600321997013, worksheet.costs_ah26, 0.001); end
  def test_costs_ar26; assert_in_epsilon(14429.43076204675, worksheet.costs_ar26, 0.001); end
  def test_costs_b27; assert_equal("IX.b", worksheet.costs_b27); end
  def test_costs_c27; assert_equal("Domestic hot water [UNUSED - See IX.a]", worksheet.costs_c27); end
  def test_costs_d27; assert_equal("Buildings", worksheet.costs_d27); end
  def test_costs_e27; assert_equal("MEUR", worksheet.costs_e27); end
  def test_costs_f27; assert_in_delta(0, (worksheet.costs_f27||0), 0.001); end
  def test_costs_g27; assert_in_delta(0, (worksheet.costs_g27||0), 0.001); end
  def test_costs_h27; assert_in_delta(0, (worksheet.costs_h27||0), 0.001); end
  def test_costs_i27; assert_in_delta(0, (worksheet.costs_i27||0), 0.001); end
  def test_costs_j27; assert_in_delta(0, (worksheet.costs_j27||0), 0.001); end
  def test_costs_k27; assert_in_delta(0, (worksheet.costs_k27||0), 0.001); end
  def test_costs_l27; assert_in_delta(0, (worksheet.costs_l27||0), 0.001); end
  def test_costs_m27; assert_in_delta(0, (worksheet.costs_m27||0), 0.001); end
  def test_costs_n27; assert_in_delta(0, (worksheet.costs_n27||0), 0.001); end
  def test_costs_p27; assert_in_delta(0, (worksheet.costs_p27||0), 0.001); end
  def test_costs_q27; assert_in_delta(0, (worksheet.costs_q27||0), 0.001); end
  def test_costs_r27; assert_in_delta(0, (worksheet.costs_r27||0), 0.001); end
  def test_costs_s27; assert_in_delta(0, (worksheet.costs_s27||0), 0.001); end
  def test_costs_t27; assert_in_delta(0, (worksheet.costs_t27||0), 0.001); end
  def test_costs_u27; assert_in_delta(0, (worksheet.costs_u27||0), 0.001); end
  def test_costs_v27; assert_in_delta(0, (worksheet.costs_v27||0), 0.001); end
  def test_costs_w27; assert_in_delta(0, (worksheet.costs_w27||0), 0.001); end
  def test_costs_x27; assert_in_delta(0, (worksheet.costs_x27||0), 0.001); end
  def test_costs_z27; assert_in_delta(0, (worksheet.costs_z27||0), 0.001); end
  def test_costs_aa27; assert_in_delta(0, (worksheet.costs_aa27||0), 0.001); end
  def test_costs_ab27; assert_in_delta(0, (worksheet.costs_ab27||0), 0.001); end
  def test_costs_ac27; assert_in_delta(0, (worksheet.costs_ac27||0), 0.001); end
  def test_costs_ad27; assert_in_delta(0, (worksheet.costs_ad27||0), 0.001); end
  def test_costs_ae27; assert_in_delta(0, (worksheet.costs_ae27||0), 0.001); end
  def test_costs_af27; assert_in_delta(0, (worksheet.costs_af27||0), 0.001); end
  def test_costs_ag27; assert_in_delta(0, (worksheet.costs_ag27||0), 0.001); end
  def test_costs_ah27; assert_in_delta(0, (worksheet.costs_ah27||0), 0.001); end
  def test_costs_aj27; assert_in_delta(0, (worksheet.costs_aj27||0), 0.001); end
  def test_costs_ak27; assert_in_delta(0, (worksheet.costs_ak27||0), 0.001); end
  def test_costs_al27; assert_in_delta(0, (worksheet.costs_al27||0), 0.001); end
  def test_costs_am27; assert_in_delta(0, (worksheet.costs_am27||0), 0.001); end
  def test_costs_an27; assert_in_delta(0, (worksheet.costs_an27||0), 0.001); end
  def test_costs_ao27; assert_in_delta(0, (worksheet.costs_ao27||0), 0.001); end
  def test_costs_ap27; assert_in_delta(0, (worksheet.costs_ap27||0), 0.001); end
  def test_costs_aq27; assert_in_delta(0, (worksheet.costs_aq27||0), 0.001); end
  def test_costs_ar27; assert_in_delta(0, (worksheet.costs_ar27||0), 0.001); end
  def test_costs_b28; assert_equal("IX.c", worksheet.costs_b28); end
  def test_costs_c28; assert_equal("Commercial heating and cooling", worksheet.costs_c28); end
  def test_costs_d28; assert_equal("Buildings", worksheet.costs_d28); end
  def test_costs_e28; assert_equal("MEUR", worksheet.costs_e28); end
  def test_costs_p28; assert_in_epsilon(62.219719549372456, worksheet.costs_p28, 0.001); end
  def test_costs_q28; assert_in_epsilon(63.60138090823205, worksheet.costs_q28, 0.001); end
  def test_costs_f28; assert_in_epsilon(3853.0366313981613, worksheet.costs_f28, 0.001); end
  def test_costs_z28; assert_in_epsilon(812.9468575590747, worksheet.costs_z28, 0.001); end
  def test_costs_aj28; assert_in_epsilon(4728.2032085066085, worksheet.costs_aj28, 0.001); end
  def test_costs_g28; assert_in_epsilon(4886.979251827343, worksheet.costs_g28, 0.001); end
  def test_costs_aa28; assert_in_epsilon(663.2405416272643, worksheet.costs_aa28, 0.001); end
  def test_costs_ak28; assert_in_epsilon(5613.82117436284, worksheet.costs_ak28, 0.001); end
  def test_costs_h28; assert_in_epsilon(5367.053317615077, worksheet.costs_h28, 0.001); end
  def test_costs_r28; assert_in_epsilon(74.32006361648669, worksheet.costs_r28, 0.001); end
  def test_costs_ab28; assert_in_epsilon(625.9561511846196, worksheet.costs_ab28, 0.001); end
  def test_costs_al28; assert_in_epsilon(6067.329532416183, worksheet.costs_al28, 0.001); end
  def test_costs_i28; assert_in_epsilon(5515.939935533181, worksheet.costs_i28, 0.001); end
  def test_costs_s28; assert_in_epsilon(85.36075108587318, worksheet.costs_s28, 0.001); end
  def test_costs_ac28; assert_in_epsilon(601.0613657506608, worksheet.costs_ac28, 0.001); end
  def test_costs_am28; assert_in_epsilon(6202.362052369715, worksheet.costs_am28, 0.001); end
  def test_costs_j28; assert_in_epsilon(5655.184534691235, worksheet.costs_j28, 0.001); end
  def test_costs_t28; assert_in_epsilon(96.48670645275567, worksheet.costs_t28, 0.001); end
  def test_costs_ad28; assert_in_epsilon(539.8650253790098, worksheet.costs_ad28, 0.001); end
  def test_costs_an28; assert_in_epsilon(6291.536266523, worksheet.costs_an28, 0.001); end
  def test_costs_k28; assert_in_epsilon(5818.490269565795, worksheet.costs_k28, 0.001); end
  def test_costs_u28; assert_in_epsilon(108.10435844279958, worksheet.costs_u28, 0.001); end
  def test_costs_ae28; assert_in_epsilon(467.0544680908459, worksheet.costs_ae28, 0.001); end
  def test_costs_ao28; assert_in_epsilon(6393.649096099441, worksheet.costs_ao28, 0.001); end
  def test_costs_l28; assert_in_epsilon(5979.769482703688, worksheet.costs_l28, 0.001); end
  def test_costs_v28; assert_in_epsilon(120.07165286447837, worksheet.costs_v28, 0.001); end
  def test_costs_af28; assert_in_epsilon(406.2226479854355, worksheet.costs_af28, 0.001); end
  def test_costs_ap28; assert_in_epsilon(6506.063783553601, worksheet.costs_ap28, 0.001); end
  def test_costs_m28; assert_in_epsilon(6191.175630845126, worksheet.costs_m28, 0.001); end
  def test_costs_w28; assert_in_epsilon(132.532597403745, worksheet.costs_w28, 0.001); end
  def test_costs_ag28; assert_in_epsilon(352.89189775264805, worksheet.costs_ag28, 0.001); end
  def test_costs_aq28; assert_in_epsilon(6676.600126001519, worksheet.costs_aq28, 0.001); end
  def test_costs_n28; assert_in_epsilon(7353.313296752368, worksheet.costs_n28, 0.001); end
  def test_costs_x28; assert_in_epsilon(155.42391803016986, worksheet.costs_x28, 0.001); end
  def test_costs_ah28; assert_in_epsilon(311.47254824703936, worksheet.costs_ah28, 0.001); end
  def test_costs_ar28; assert_in_epsilon(7820.2097630295775, worksheet.costs_ar28, 0.001); end
  def test_costs_b29; assert_equal("IX.d", worksheet.costs_b29); end
  def test_costs_c29; assert_equal("Commercial hot water [UNUSED - See IX.c]", worksheet.costs_c29); end
  def test_costs_d29; assert_equal("Buildings", worksheet.costs_d29); end
  def test_costs_e29; assert_equal("MEUR", worksheet.costs_e29); end
  def test_costs_f29; assert_in_delta(0, (worksheet.costs_f29||0), 0.001); end
  def test_costs_g29; assert_in_delta(0, (worksheet.costs_g29||0), 0.001); end
  def test_costs_h29; assert_in_delta(0, (worksheet.costs_h29||0), 0.001); end
  def test_costs_i29; assert_in_delta(0, (worksheet.costs_i29||0), 0.001); end
  def test_costs_j29; assert_in_delta(0, (worksheet.costs_j29||0), 0.001); end
  def test_costs_k29; assert_in_delta(0, (worksheet.costs_k29||0), 0.001); end
  def test_costs_l29; assert_in_delta(0, (worksheet.costs_l29||0), 0.001); end
  def test_costs_m29; assert_in_delta(0, (worksheet.costs_m29||0), 0.001); end
  def test_costs_n29; assert_in_delta(0, (worksheet.costs_n29||0), 0.001); end
  def test_costs_p29; assert_in_delta(0, (worksheet.costs_p29||0), 0.001); end
  def test_costs_q29; assert_in_delta(0, (worksheet.costs_q29||0), 0.001); end
  def test_costs_r29; assert_in_delta(0, (worksheet.costs_r29||0), 0.001); end
  def test_costs_s29; assert_in_delta(0, (worksheet.costs_s29||0), 0.001); end
  def test_costs_t29; assert_in_delta(0, (worksheet.costs_t29||0), 0.001); end
  def test_costs_u29; assert_in_delta(0, (worksheet.costs_u29||0), 0.001); end
  def test_costs_v29; assert_in_delta(0, (worksheet.costs_v29||0), 0.001); end
  def test_costs_w29; assert_in_delta(0, (worksheet.costs_w29||0), 0.001); end
  def test_costs_x29; assert_in_delta(0, (worksheet.costs_x29||0), 0.001); end
  def test_costs_z29; assert_in_delta(0, (worksheet.costs_z29||0), 0.001); end
  def test_costs_aa29; assert_in_delta(0, (worksheet.costs_aa29||0), 0.001); end
  def test_costs_ab29; assert_in_delta(0, (worksheet.costs_ab29||0), 0.001); end
  def test_costs_ac29; assert_in_delta(0, (worksheet.costs_ac29||0), 0.001); end
  def test_costs_ad29; assert_in_delta(0, (worksheet.costs_ad29||0), 0.001); end
  def test_costs_ae29; assert_in_delta(0, (worksheet.costs_ae29||0), 0.001); end
  def test_costs_af29; assert_in_delta(0, (worksheet.costs_af29||0), 0.001); end
  def test_costs_ag29; assert_in_delta(0, (worksheet.costs_ag29||0), 0.001); end
  def test_costs_ah29; assert_in_delta(0, (worksheet.costs_ah29||0), 0.001); end
  def test_costs_aj29; assert_in_delta(0, (worksheet.costs_aj29||0), 0.001); end
  def test_costs_ak29; assert_in_delta(0, (worksheet.costs_ak29||0), 0.001); end
  def test_costs_al29; assert_in_delta(0, (worksheet.costs_al29||0), 0.001); end
  def test_costs_am29; assert_in_delta(0, (worksheet.costs_am29||0), 0.001); end
  def test_costs_an29; assert_in_delta(0, (worksheet.costs_an29||0), 0.001); end
  def test_costs_ao29; assert_in_delta(0, (worksheet.costs_ao29||0), 0.001); end
  def test_costs_ap29; assert_in_delta(0, (worksheet.costs_ap29||0), 0.001); end
  def test_costs_aq29; assert_in_delta(0, (worksheet.costs_aq29||0), 0.001); end
  def test_costs_ar29; assert_in_delta(0, (worksheet.costs_ar29||0), 0.001); end
  def test_costs_b30; assert_equal("X.a", worksheet.costs_b30); end
  def test_costs_c30; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costs_c30); end
  def test_costs_d30; assert_equal("Buildings", worksheet.costs_d30); end
  def test_costs_e30; assert_equal("MEUR", worksheet.costs_e30); end
  def test_costs_p30; assert_in_delta(0, (worksheet.costs_p30||0), 0.001); end
  def test_costs_q30; assert_in_delta(0, (worksheet.costs_q30||0), 0.001); end
  def test_costs_r30; assert_in_delta(0, (worksheet.costs_r30||0), 0.001); end
  def test_costs_s30; assert_in_delta(0, (worksheet.costs_s30||0), 0.001); end
  def test_costs_t30; assert_in_delta(0, (worksheet.costs_t30||0), 0.001); end
  def test_costs_u30; assert_in_delta(0, (worksheet.costs_u30||0), 0.001); end
  def test_costs_v30; assert_in_delta(0, (worksheet.costs_v30||0), 0.001); end
  def test_costs_w30; assert_in_delta(0, (worksheet.costs_w30||0), 0.001); end
  def test_costs_x30; assert_in_delta(0, (worksheet.costs_x30||0), 0.001); end
  def test_costs_z30; assert_in_delta(0, (worksheet.costs_z30||0), 0.001); end
  def test_costs_f30; assert_in_epsilon(1223.273882780243, worksheet.costs_f30, 0.001); end
  def test_costs_aj30; assert_in_epsilon(1223.273882780243, worksheet.costs_aj30, 0.001); end
  def test_costs_g30; assert_in_epsilon(450.7309243531487, worksheet.costs_g30, 0.001); end
  def test_costs_aa30; assert_in_epsilon(815.8569667559353, worksheet.costs_aa30, 0.001); end
  def test_costs_ak30; assert_in_epsilon(1266.587891109084, worksheet.costs_ak30, 0.001); end
  def test_costs_h30; assert_in_epsilon(468.99795842386004, worksheet.costs_h30, 0.001); end
  def test_costs_ab30; assert_in_epsilon(934.3443899250409, worksheet.costs_ab30, 0.001); end
  def test_costs_al30; assert_in_epsilon(1403.342348348901, worksheet.costs_al30, 0.001); end
  def test_costs_i30; assert_in_epsilon(467.02488410145645, worksheet.costs_i30, 0.001); end
  def test_costs_ac30; assert_in_epsilon(1204.5098613932673, worksheet.costs_ac30, 0.001); end
  def test_costs_am30; assert_in_epsilon(1671.5347454947237, worksheet.costs_am30, 0.001); end
  def test_costs_j30; assert_in_epsilon(483.8992217620995, worksheet.costs_j30, 0.001); end
  def test_costs_ad30; assert_in_epsilon(1145.1803655188196, worksheet.costs_ad30, 0.001); end
  def test_costs_an30; assert_in_epsilon(1629.079587280919, worksheet.costs_an30, 0.001); end
  def test_costs_k30; assert_in_epsilon(492.4848726769116, worksheet.costs_k30, 0.001); end
  def test_costs_ae30; assert_in_epsilon(1105.459758768346, worksheet.costs_ae30, 0.001); end
  def test_costs_ao30; assert_in_epsilon(1597.9446314452578, worksheet.costs_ao30, 0.001); end
  def test_costs_l30; assert_in_epsilon(507.481462417536, worksheet.costs_l30, 0.001); end
  def test_costs_af30; assert_in_epsilon(1080.608320180523, worksheet.costs_af30, 0.001); end
  def test_costs_ap30; assert_in_epsilon(1588.089782598059, worksheet.costs_ap30, 0.001); end
  def test_costs_m30; assert_in_epsilon(525.6026746670819, worksheet.costs_m30, 0.001); end
  def test_costs_ag30; assert_in_epsilon(1050.919422957606, worksheet.costs_ag30, 0.001); end
  def test_costs_aq30; assert_in_epsilon(1576.5220976246878, worksheet.costs_aq30, 0.001); end
  def test_costs_n30; assert_in_epsilon(560.7215170280468, worksheet.costs_n30, 0.001); end
  def test_costs_ah30; assert_in_epsilon(1017.6543236599113, worksheet.costs_ah30, 0.001); end
  def test_costs_ar30; assert_in_epsilon(1578.375840687958, worksheet.costs_ar30, 0.001); end
  def test_costs_b31; assert_equal("X.b", worksheet.costs_b31); end
  def test_costs_c31; assert_equal("Commercial lighting, appliances, and catering", worksheet.costs_c31); end
  def test_costs_d31; assert_equal("Buildings", worksheet.costs_d31); end
  def test_costs_e31; assert_equal("MEUR", worksheet.costs_e31); end
  def test_costs_f31; assert_in_delta(0, (worksheet.costs_f31||0), 0.001); end
  def test_costs_p31; assert_in_delta(0, (worksheet.costs_p31||0), 0.001); end
  def test_costs_q31; assert_in_delta(0, (worksheet.costs_q31||0), 0.001); end
  def test_costs_r31; assert_in_delta(0, (worksheet.costs_r31||0), 0.001); end
  def test_costs_s31; assert_in_delta(0, (worksheet.costs_s31||0), 0.001); end
  def test_costs_t31; assert_in_delta(0, (worksheet.costs_t31||0), 0.001); end
  def test_costs_u31; assert_in_delta(0, (worksheet.costs_u31||0), 0.001); end
  def test_costs_v31; assert_in_delta(0, (worksheet.costs_v31||0), 0.001); end
  def test_costs_w31; assert_in_delta(0, (worksheet.costs_w31||0), 0.001); end
  def test_costs_x31; assert_in_delta(0, (worksheet.costs_x31||0), 0.001); end
  def test_costs_z31; assert_in_epsilon(2.153921052729563, worksheet.costs_z31, 0.001); end
  def test_costs_aj31; assert_in_epsilon(2.153921052729563, worksheet.costs_aj31, 0.001); end
  def test_costs_g31; assert_in_epsilon(6.033490670066293, worksheet.costs_g31, 0.001); end
  def test_costs_aa31; assert_in_epsilon(2.2857955435471524, worksheet.costs_aa31, 0.001); end
  def test_costs_ak31; assert_in_epsilon(8.319286213613445, worksheet.costs_ak31, 0.001); end
  def test_costs_h31; assert_in_epsilon(6.993313942338512, worksheet.costs_h31, 0.001); end
  def test_costs_ab31; assert_in_epsilon(2.4129209837742196, worksheet.costs_ab31, 0.001); end
  def test_costs_al31; assert_in_epsilon(9.406234926112731, worksheet.costs_al31, 0.001); end
  def test_costs_i31; assert_in_epsilon(7.577168378120018, worksheet.costs_i31, 0.001); end
  def test_costs_ac31; assert_in_epsilon(2.486613070587419, worksheet.costs_ac31, 0.001); end
  def test_costs_am31; assert_in_epsilon(10.063781448707438, worksheet.costs_am31, 0.001); end
  def test_costs_j31; assert_in_epsilon(8.09245905474651, worksheet.costs_j31, 0.001); end
  def test_costs_ad31; assert_in_epsilon(2.537207979394484, worksheet.costs_ad31, 0.001); end
  def test_costs_an31; assert_in_epsilon(10.629667034140994, worksheet.costs_an31, 0.001); end
  def test_costs_k31; assert_in_epsilon(8.66494198553298, worksheet.costs_k31, 0.001); end
  def test_costs_ae31; assert_in_epsilon(2.579917338955194, worksheet.costs_ae31, 0.001); end
  def test_costs_ao31; assert_in_epsilon(11.244859324488175, worksheet.costs_ao31, 0.001); end
  def test_costs_l31; assert_in_epsilon(9.325819337493375, worksheet.costs_l31, 0.001); end
  def test_costs_af31; assert_in_epsilon(2.6212433891653255, worksheet.costs_af31, 0.001); end
  def test_costs_ap31; assert_in_epsilon(11.9470627266587, worksheet.costs_ap31, 0.001); end
  def test_costs_m31; assert_in_epsilon(10.021153882336671, worksheet.costs_m31, 0.001); end
  def test_costs_ag31; assert_in_epsilon(2.661017704569014, worksheet.costs_ag31, 0.001); end
  def test_costs_aq31; assert_in_epsilon(12.682171586905685, worksheet.costs_aq31, 0.001); end
  def test_costs_n31; assert_in_epsilon(10.766416196867208, worksheet.costs_n31, 0.001); end
  def test_costs_ah31; assert_in_epsilon(2.699630382553881, worksheet.costs_ah31, 0.001); end
  def test_costs_ar31; assert_in_epsilon(13.46604657942109, worksheet.costs_ar31, 0.001); end
  def test_costs_b32; assert_equal("XI.a", worksheet.costs_b32); end
  def test_costs_c32; assert_equal("Steel Industry", worksheet.costs_c32); end
  def test_costs_d32; assert_equal("Industry", worksheet.costs_d32); end
  def test_costs_e32; assert_equal("MEUR", worksheet.costs_e32); end
  def test_costs_p32; assert_in_delta(0, (worksheet.costs_p32||0), 0.001); end
  def test_costs_q32; assert_in_delta(0, (worksheet.costs_q32||0), 0.001); end
  def test_costs_r32; assert_in_delta(0, (worksheet.costs_r32||0), 0.001); end
  def test_costs_s32; assert_in_delta(0, (worksheet.costs_s32||0), 0.001); end
  def test_costs_t32; assert_in_delta(0, (worksheet.costs_t32||0), 0.001); end
  def test_costs_u32; assert_in_delta(0, (worksheet.costs_u32||0), 0.001); end
  def test_costs_v32; assert_in_delta(0, (worksheet.costs_v32||0), 0.001); end
  def test_costs_w32; assert_in_delta(0, (worksheet.costs_w32||0), 0.001); end
  def test_costs_x32; assert_in_delta(0, (worksheet.costs_x32||0), 0.001); end
  def test_costs_f32; assert_in_delta(-3.623767952376511e-13, worksheet.costs_f32, 0.001); end
  def test_xi_a_f492; assert_in_epsilon(674.3926080965056, worksheet.xi_a_f492, 0.001); end
  def test_costs_z32; assert_in_epsilon(674.3926080965056, worksheet.costs_z32, 0.001); end
  def test_costs_aj32; assert_in_epsilon(674.3926080965052, worksheet.costs_aj32, 0.001); end
  def test_costs_g32; assert_in_epsilon(74.87129775590321, worksheet.costs_g32, 0.001); end
  def test_costs_aa32; assert_in_epsilon(542.0001130624742, worksheet.costs_aa32, 0.001); end
  def test_costs_ak32; assert_in_epsilon(616.8714108183774, worksheet.costs_ak32, 0.001); end
  def test_costs_h32; assert_in_epsilon(62.35298449965776, worksheet.costs_h32, 0.001); end
  def test_costs_ab32; assert_in_epsilon(537.8962578348769, worksheet.costs_ab32, 0.001); end
  def test_costs_al32; assert_in_epsilon(600.2492423345346, worksheet.costs_al32, 0.001); end
  def test_costs_i32; assert_in_epsilon(50.37059028202531, worksheet.costs_i32, 0.001); end
  def test_costs_ac32; assert_in_epsilon(561.1432927396543, worksheet.costs_ac32, 0.001); end
  def test_costs_am32; assert_in_epsilon(611.5138830216796, worksheet.costs_am32, 0.001); end
  def test_costs_j32; assert_in_epsilon(425.15544211986054, worksheet.costs_j32, 0.001); end
  def test_costs_ad32; assert_in_epsilon(569.6459786224633, worksheet.costs_ad32, 0.001); end
  def test_costs_an32; assert_in_epsilon(994.8014207423239, worksheet.costs_an32, 0.001); end
  def test_costs_k32; assert_in_epsilon(407.6214382197061, worksheet.costs_k32, 0.001); end
  def test_costs_ae32; assert_in_epsilon(543.4512298717676, worksheet.costs_ae32, 0.001); end
  def test_costs_ao32; assert_in_epsilon(951.0726680914737, worksheet.costs_ao32, 0.001); end
  def test_costs_l32; assert_in_epsilon(389.6555486863474, worksheet.costs_l32, 0.001); end
  def test_costs_af32; assert_in_epsilon(520.5489835656347, worksheet.costs_af32, 0.001); end
  def test_costs_ap32; assert_in_epsilon(910.2045322519821, worksheet.costs_ap32, 0.001); end
  def test_costs_m32; assert_in_epsilon(370.9851448853659, worksheet.costs_m32, 0.001); end
  def test_costs_ag32; assert_in_epsilon(498.391271345111, worksheet.costs_ag32, 0.001); end
  def test_costs_aq32; assert_in_epsilon(869.3764162304769, worksheet.costs_aq32, 0.001); end
  def test_xi_a_cg382; assert_in_epsilon(627.31300603997, worksheet.xi_a_cg382, 0.001); end
  def test_xi_a_cg383; assert_in_epsilon(-107.61359398266495, worksheet.xi_a_cg383, 0.001); end
  def test_xi_a_cg384; assert_in_epsilon(519.699412057305, worksheet.xi_a_cg384, 0.001); end
  def test_xi_a_cg410; assert_in_epsilon(519.699412057305, worksheet.xi_a_cg410, 0.001); end
  def test_xi_a_cg437; assert_in_epsilon(550.1953038513359, worksheet.xi_a_cg437, 0.001); end
  def test_xi_a_n488; assert_in_epsilon(467.6660082736355, worksheet.xi_a_n488, 0.001); end
  def test_costs_n32; assert_in_epsilon(467.6660082736355, worksheet.costs_n32, 0.001); end
  def test_xi_a_n492; assert_in_epsilon(496.96078999349936, worksheet.xi_a_n492, 0.001); end
  def test_costs_ah32; assert_in_epsilon(496.96078999349936, worksheet.costs_ah32, 0.001); end
  def test_costs_ar32; assert_in_epsilon(964.6267982671349, worksheet.costs_ar32, 0.001); end
  def test_costs_b33; assert_equal("XI.b", worksheet.costs_b33); end
  def test_costs_c33; assert_equal("Cement Industry", worksheet.costs_c33); end
  def test_costs_d33; assert_equal("Industry", worksheet.costs_d33); end
  def test_costs_e33; assert_equal("MEUR", worksheet.costs_e33); end
  def test_costs_p33; assert_in_delta(0, (worksheet.costs_p33||0), 0.001); end
  def test_costs_q33; assert_in_delta(0, (worksheet.costs_q33||0), 0.001); end
  def test_costs_r33; assert_in_delta(0, (worksheet.costs_r33||0), 0.001); end
  def test_costs_s33; assert_in_delta(0, (worksheet.costs_s33||0), 0.001); end
  def test_costs_t33; assert_in_delta(0, (worksheet.costs_t33||0), 0.001); end
  def test_costs_u33; assert_in_delta(0, (worksheet.costs_u33||0), 0.001); end
  def test_costs_v33; assert_in_delta(0, (worksheet.costs_v33||0), 0.001); end
  def test_costs_w33; assert_in_delta(0, (worksheet.costs_w33||0), 0.001); end
  def test_costs_x33; assert_in_delta(0, (worksheet.costs_x33||0), 0.001); end
  def test_costs_f33; assert_in_delta(0.07999993371521077, worksheet.costs_f33, 0.001); end
  def test_xi_b_f280; assert_in_epsilon(124.87011075684646, worksheet.xi_b_f280, 0.001); end
  def test_costs_z33; assert_in_epsilon(124.87011075684646, worksheet.costs_z33, 0.001); end
  def test_costs_aj33; assert_in_epsilon(124.95011069056167, worksheet.costs_aj33, 0.001); end
  def test_costs_g33; assert_in_epsilon(44.10049623147146, worksheet.costs_g33, 0.001); end
  def test_costs_aa33; assert_in_epsilon(108.6872867240204, worksheet.costs_aa33, 0.001); end
  def test_costs_ak33; assert_in_epsilon(152.78778295549185, worksheet.costs_ak33, 0.001); end
  def test_costs_h33; assert_in_epsilon(59.578475429983, worksheet.costs_h33, 0.001); end
  def test_costs_ab33; assert_in_epsilon(105.66746571753906, worksheet.costs_ab33, 0.001); end
  def test_costs_al33; assert_in_epsilon(165.24594114752205, worksheet.costs_al33, 0.001); end
  def test_costs_i33; assert_in_epsilon(77.05921801530909, worksheet.costs_i33, 0.001); end
  def test_costs_ac33; assert_in_epsilon(109.17224842505698, worksheet.costs_ac33, 0.001); end
  def test_costs_am33; assert_in_epsilon(186.23146644036606, worksheet.costs_am33, 0.001); end
  def test_costs_j33; assert_in_epsilon(104.72640792351099, worksheet.costs_j33, 0.001); end
  def test_costs_ad33; assert_in_epsilon(106.66197141562263, worksheet.costs_ad33, 0.001); end
  def test_costs_an33; assert_in_epsilon(211.38837933913362, worksheet.costs_an33, 0.001); end
  def test_costs_k33; assert_in_epsilon(126.48257878928628, worksheet.costs_k33, 0.001); end
  def test_costs_ae33; assert_in_epsilon(104.99095843912134, worksheet.costs_ae33, 0.001); end
  def test_costs_ao33; assert_in_epsilon(231.47353722840762, worksheet.costs_ao33, 0.001); end
  def test_costs_l33; assert_in_epsilon(144.8278779941799, worksheet.costs_l33, 0.001); end
  def test_costs_af33; assert_in_epsilon(102.61736542848655, worksheet.costs_af33, 0.001); end
  def test_costs_ap33; assert_in_epsilon(247.44524342266644, worksheet.costs_ap33, 0.001); end
  def test_costs_m33; assert_in_epsilon(159.3743525746603, worksheet.costs_m33, 0.001); end
  def test_costs_ag33; assert_in_epsilon(98.9741264538711, worksheet.costs_ag33, 0.001); end
  def test_costs_aq33; assert_in_epsilon(258.3484790285314, worksheet.costs_aq33, 0.001); end
  def test_costs_n33; assert_in_epsilon(154.30486787864194, worksheet.costs_n33, 0.001); end
  def test_costs_ah33; assert_in_epsilon(92.28946465413601, worksheet.costs_ah33, 0.001); end
  def test_costs_ar33; assert_in_epsilon(246.59433253277797, worksheet.costs_ar33, 0.001); end
  def test_costs_b34; assert_equal("XI.c", worksheet.costs_b34); end
  def test_costs_c34; assert_equal("Lime Industry", worksheet.costs_c34); end
  def test_costs_d34; assert_equal("Industry", worksheet.costs_d34); end
  def test_costs_e34; assert_equal("MEUR", worksheet.costs_e34); end
  def test_costs_p34; assert_in_delta(0, (worksheet.costs_p34||0), 0.001); end
  def test_costs_q34; assert_in_delta(0, (worksheet.costs_q34||0), 0.001); end
  def test_costs_r34; assert_in_delta(0, (worksheet.costs_r34||0), 0.001); end
  def test_costs_s34; assert_in_delta(0, (worksheet.costs_s34||0), 0.001); end
  def test_costs_t34; assert_in_delta(0, (worksheet.costs_t34||0), 0.001); end
  def test_costs_u34; assert_in_delta(0, (worksheet.costs_u34||0), 0.001); end
  def test_costs_v34; assert_in_delta(0, (worksheet.costs_v34||0), 0.001); end
  def test_costs_w34; assert_in_delta(0, (worksheet.costs_w34||0), 0.001); end
  def test_costs_x34; assert_in_delta(0, (worksheet.costs_x34||0), 0.001); end
  def test_costs_f34; assert_in_delta(0, (worksheet.costs_f34||0), 0.001); end
  def test_costs_z34; assert_in_epsilon(81.11525953945034, worksheet.costs_z34, 0.001); end
  def test_costs_aj34; assert_in_epsilon(81.11525953945034, worksheet.costs_aj34, 0.001); end
  def test_costs_g34; assert_in_epsilon(-1.2319720897716535, worksheet.costs_g34, 0.001); end
  def test_costs_aa34; assert_in_epsilon(81.99982147762506, worksheet.costs_aa34, 0.001); end
  def test_costs_ak34; assert_in_epsilon(80.7678493878534, worksheet.costs_ak34, 0.001); end
  def test_costs_h34; assert_in_epsilon(-2.775780632286155, worksheet.costs_h34, 0.001); end
  def test_costs_ab34; assert_in_epsilon(87.27628777035359, worksheet.costs_ab34, 0.001); end
  def test_costs_al34; assert_in_epsilon(84.50050713806743, worksheet.costs_al34, 0.001); end
  def test_costs_i34; assert_in_delta(0.016812327288857707, worksheet.costs_i34, 0.001); end
  def test_costs_ac34; assert_in_epsilon(90.91958855245616, worksheet.costs_ac34, 0.001); end
  def test_costs_am34; assert_in_epsilon(90.93640087974502, worksheet.costs_am34, 0.001); end
  def test_costs_j34; assert_in_epsilon(8.520205278812355, worksheet.costs_j34, 0.001); end
  def test_costs_ad34; assert_in_epsilon(88.75985663203569, worksheet.costs_ad34, 0.001); end
  def test_costs_an34; assert_in_epsilon(97.28006191084805, worksheet.costs_an34, 0.001); end
  def test_costs_k34; assert_in_epsilon(18.260351134785118, worksheet.costs_k34, 0.001); end
  def test_costs_ae34; assert_in_epsilon(85.02135431490738, worksheet.costs_ae34, 0.001); end
  def test_costs_ao34; assert_in_epsilon(103.28170544969251, worksheet.costs_ao34, 0.001); end
  def test_costs_l34; assert_in_epsilon(27.739341093115332, worksheet.costs_l34, 0.001); end
  def test_costs_af34; assert_in_epsilon(81.61159039900075, worksheet.costs_af34, 0.001); end
  def test_costs_ap34; assert_in_epsilon(109.35093149211608, worksheet.costs_ap34, 0.001); end
  def test_costs_m34; assert_in_epsilon(36.883916578753585, worksheet.costs_m34, 0.001); end
  def test_costs_ag34; assert_in_epsilon(78.27509355878472, worksheet.costs_ag34, 0.001); end
  def test_costs_aq34; assert_in_epsilon(115.1590101375383, worksheet.costs_aq34, 0.001); end
  def test_costs_n34; assert_in_epsilon(47.24811226387251, worksheet.costs_n34, 0.001); end
  def test_costs_ah34; assert_in_epsilon(75.54133298874602, worksheet.costs_ah34, 0.001); end
  def test_costs_ar34; assert_in_epsilon(122.78944525261852, worksheet.costs_ar34, 0.001); end
  def test_costs_b35; assert_equal("XI.d", worksheet.costs_b35); end
  def test_costs_c35; assert_equal("Glass Industry", worksheet.costs_c35); end
  def test_costs_d35; assert_equal("Industry", worksheet.costs_d35); end
  def test_costs_e35; assert_equal("MEUR", worksheet.costs_e35); end
  def test_costs_p35; assert_in_delta(0, (worksheet.costs_p35||0), 0.001); end
  def test_costs_q35; assert_in_delta(0, (worksheet.costs_q35||0), 0.001); end
  def test_costs_r35; assert_in_delta(0, (worksheet.costs_r35||0), 0.001); end
  def test_costs_s35; assert_in_delta(0, (worksheet.costs_s35||0), 0.001); end
  def test_costs_t35; assert_in_delta(0, (worksheet.costs_t35||0), 0.001); end
  def test_costs_u35; assert_in_delta(0, (worksheet.costs_u35||0), 0.001); end
  def test_costs_v35; assert_in_delta(0, (worksheet.costs_v35||0), 0.001); end
  def test_costs_w35; assert_in_delta(0, (worksheet.costs_w35||0), 0.001); end
  def test_costs_x35; assert_in_delta(0, (worksheet.costs_x35||0), 0.001); end
  def test_costs_f35; assert_in_delta(0.1786385784065416, worksheet.costs_f35, 0.001); end
  def test_costs_z35; assert_in_epsilon(153.31621962328768, worksheet.costs_z35, 0.001); end
  def test_costs_aj35; assert_in_epsilon(153.49485820169423, worksheet.costs_aj35, 0.001); end
  def test_costs_g35; assert_in_epsilon(14.891997839216872, worksheet.costs_g35, 0.001); end
  def test_costs_aa35; assert_in_epsilon(154.30552908623605, worksheet.costs_aa35, 0.001); end
  def test_costs_ak35; assert_in_epsilon(169.19752692545293, worksheet.costs_ak35, 0.001); end
  def test_costs_h35; assert_in_epsilon(32.66908536149584, worksheet.costs_h35, 0.001); end
  def test_costs_ab35; assert_in_epsilon(153.0269355227858, worksheet.costs_ab35, 0.001); end
  def test_costs_al35; assert_in_epsilon(185.69602088428164, worksheet.costs_al35, 0.001); end
  def test_costs_i35; assert_in_epsilon(44.39376810482208, worksheet.costs_i35, 0.001); end
  def test_costs_ac35; assert_in_epsilon(168.98908691591043, worksheet.costs_ac35, 0.001); end
  def test_costs_am35; assert_in_epsilon(213.3828550207325, worksheet.costs_am35, 0.001); end
  def test_costs_j35; assert_in_epsilon(53.359568898922966, worksheet.costs_j35, 0.001); end
  def test_costs_ad35; assert_in_epsilon(167.84496810930034, worksheet.costs_ad35, 0.001); end
  def test_costs_an35; assert_in_epsilon(221.2045370082233, worksheet.costs_an35, 0.001); end
  def test_costs_k35; assert_in_epsilon(60.86664729149001, worksheet.costs_k35, 0.001); end
  def test_costs_ae35; assert_in_epsilon(165.88708983372504, worksheet.costs_ae35, 0.001); end
  def test_costs_ao35; assert_in_epsilon(226.75373712521505, worksheet.costs_ao35, 0.001); end
  def test_costs_l35; assert_in_epsilon(68.64910390929333, worksheet.costs_l35, 0.001); end
  def test_costs_af35; assert_in_epsilon(164.48373321422065, worksheet.costs_af35, 0.001); end
  def test_costs_ap35; assert_in_epsilon(233.13283712351398, worksheet.costs_ap35, 0.001); end
  def test_costs_m35; assert_in_epsilon(76.4523334816826, worksheet.costs_m35, 0.001); end
  def test_costs_ag35; assert_in_epsilon(162.93911625971867, worksheet.costs_ag35, 0.001); end
  def test_costs_aq35; assert_in_epsilon(239.3914497414013, worksheet.costs_aq35, 0.001); end
  def test_costs_n35; assert_in_epsilon(84.05562485751534, worksheet.costs_n35, 0.001); end
  def test_costs_ah35; assert_in_epsilon(160.94418042012956, worksheet.costs_ah35, 0.001); end
  def test_costs_ar35; assert_in_epsilon(244.9998052776449, worksheet.costs_ar35, 0.001); end
  def test_costs_b36; assert_equal("XI.e", worksheet.costs_b36); end
  def test_costs_c36; assert_equal("Chemicals Industry", worksheet.costs_c36); end
  def test_costs_d36; assert_equal("Industry", worksheet.costs_d36); end
  def test_costs_e36; assert_equal("MEUR", worksheet.costs_e36); end
  def test_costs_p36; assert_in_delta(0, (worksheet.costs_p36||0), 0.001); end
  def test_costs_q36; assert_in_delta(0, (worksheet.costs_q36||0), 0.001); end
  def test_costs_r36; assert_in_delta(0, (worksheet.costs_r36||0), 0.001); end
  def test_costs_s36; assert_in_delta(0, (worksheet.costs_s36||0), 0.001); end
  def test_costs_t36; assert_in_delta(0, (worksheet.costs_t36||0), 0.001); end
  def test_costs_u36; assert_in_delta(0, (worksheet.costs_u36||0), 0.001); end
  def test_costs_v36; assert_in_delta(0, (worksheet.costs_v36||0), 0.001); end
  def test_costs_w36; assert_in_delta(0, (worksheet.costs_w36||0), 0.001); end
  def test_costs_x36; assert_in_delta(0, (worksheet.costs_x36||0), 0.001); end
  def test_costs_f36; assert_in_epsilon(5.274300106547076, worksheet.costs_f36, 0.001); end
  def test_costs_z36; assert_in_epsilon(2126.400044028941, worksheet.costs_z36, 0.001); end
  def test_costs_aj36; assert_in_epsilon(2131.674344135488, worksheet.costs_aj36, 0.001); end
  def test_costs_g36; assert_in_epsilon(44.26449073454873, worksheet.costs_g36, 0.001); end
  def test_costs_aa36; assert_in_epsilon(2035.5616156759042, worksheet.costs_aa36, 0.001); end
  def test_costs_ak36; assert_in_epsilon(2079.826106410453, worksheet.costs_ak36, 0.001); end
  def test_costs_h36; assert_in_epsilon(92.79570161901047, worksheet.costs_h36, 0.001); end
  def test_costs_ab36; assert_in_epsilon(2085.435697970788, worksheet.costs_ab36, 0.001); end
  def test_costs_al36; assert_in_epsilon(2178.2313995897985, worksheet.costs_al36, 0.001); end
  def test_costs_i36; assert_in_epsilon(152.10730124046285, worksheet.costs_i36, 0.001); end
  def test_costs_ac36; assert_in_epsilon(2252.85462441008, worksheet.costs_ac36, 0.001); end
  def test_costs_am36; assert_in_epsilon(2404.9619256505425, worksheet.costs_am36, 0.001); end
  def test_costs_j36; assert_in_epsilon(239.1895711359734, worksheet.costs_j36, 0.001); end
  def test_costs_ad36; assert_in_epsilon(2141.3733802259744, worksheet.costs_ad36, 0.001); end
  def test_costs_an36; assert_in_epsilon(2380.562951361948, worksheet.costs_an36, 0.001); end
  def test_costs_k36; assert_in_epsilon(272.0609734493508, worksheet.costs_k36, 0.001); end
  def test_costs_ae36; assert_in_epsilon(1966.5569124076055, worksheet.costs_ae36, 0.001); end
  def test_costs_ao36; assert_in_epsilon(2238.6178858569565, worksheet.costs_ao36, 0.001); end
  def test_costs_l36; assert_in_epsilon(300.2582135413009, worksheet.costs_l36, 0.001); end
  def test_costs_af36; assert_in_epsilon(1812.9624058188742, worksheet.costs_af36, 0.001); end
  def test_costs_ap36; assert_in_epsilon(2113.220619360175, worksheet.costs_ap36, 0.001); end
  def test_costs_m36; assert_in_epsilon(323.32353172790147, worksheet.costs_m36, 0.001); end
  def test_costs_ag36; assert_in_epsilon(1669.8969387428388, worksheet.costs_ag36, 0.001); end
  def test_costs_aq36; assert_in_epsilon(1993.22047047074, worksheet.costs_aq36, 0.001); end
  def test_costs_n36; assert_in_epsilon(341.0316313700093, worksheet.costs_n36, 0.001); end
  def test_costs_ah36; assert_in_epsilon(1533.4313400814267, worksheet.costs_ah36, 0.001); end
  def test_costs_ar36; assert_in_epsilon(1874.462971451436, worksheet.costs_ar36, 0.001); end
  def test_costs_b37; assert_equal("XI.f", worksheet.costs_b37); end
  def test_costs_c37; assert_equal("Pulp & Paper Industry", worksheet.costs_c37); end
  def test_costs_d37; assert_equal("Industry", worksheet.costs_d37); end
  def test_costs_e37; assert_equal("MEUR", worksheet.costs_e37); end
  def test_costs_p37; assert_in_delta(0, (worksheet.costs_p37||0), 0.001); end
  def test_costs_q37; assert_in_delta(0, (worksheet.costs_q37||0), 0.001); end
  def test_costs_r37; assert_in_delta(0, (worksheet.costs_r37||0), 0.001); end
  def test_costs_s37; assert_in_delta(0, (worksheet.costs_s37||0), 0.001); end
  def test_costs_t37; assert_in_delta(0, (worksheet.costs_t37||0), 0.001); end
  def test_costs_u37; assert_in_delta(0, (worksheet.costs_u37||0), 0.001); end
  def test_costs_v37; assert_in_delta(0, (worksheet.costs_v37||0), 0.001); end
  def test_costs_w37; assert_in_delta(0, (worksheet.costs_w37||0), 0.001); end
  def test_costs_x37; assert_in_delta(0, (worksheet.costs_x37||0), 0.001); end
  def test_costs_f37; assert_in_delta(0, (worksheet.costs_f37||0), 0.001); end
  def test_xi_f_f291; assert_in_epsilon(524.7237281815229, worksheet.xi_f_f291, 0.001); end
  def test_costs_z37; assert_in_epsilon(524.7237281815229, worksheet.costs_z37, 0.001); end
  def test_costs_aj37; assert_in_epsilon(524.7237281815229, worksheet.costs_aj37, 0.001); end
  def test_xi_f_f91; assert_in_delta(0, (worksheet.xi_f_f91||0), 0.001); end
  def test_xi_f_bw222; assert_in_delta(0, (worksheet.xi_f_bw222||0), 0.001); end
  def test_xi_f_bw223; assert_in_epsilon(16.805167176292116, worksheet.xi_f_bw223, 0.001); end
  def test_xi_f_g287; assert_in_epsilon(14.284392099848299, worksheet.xi_f_g287, 0.001); end
  def test_costs_g37; assert_in_epsilon(14.284392099848299, worksheet.costs_g37, 0.001); end
  def test_xi_f_g291; assert_in_epsilon(555.3774545968312, worksheet.xi_f_g291, 0.001); end
  def test_costs_aa37; assert_in_epsilon(555.3774545968312, worksheet.costs_aa37, 0.001); end
  def test_costs_ak37; assert_in_epsilon(569.6618466966795, worksheet.costs_ak37, 0.001); end
  def test_xi_f_g91; assert_in_delta(0, (worksheet.xi_f_g91||0), 0.001); end
  def test_xi_f_bx222; assert_in_delta(0, (worksheet.xi_f_bx222||0), 0.001); end
  def test_xi_f_bx223; assert_in_epsilon(36.4565054096945, worksheet.xi_f_bx223, 0.001); end
  def test_xi_f_h287; assert_in_epsilon(30.988029598240324, worksheet.xi_f_h287, 0.001); end
  def test_costs_h37; assert_in_epsilon(30.988029598240324, worksheet.costs_h37, 0.001); end
  def test_xi_f_h291; assert_in_epsilon(585.5139225024961, worksheet.xi_f_h291, 0.001); end
  def test_costs_ab37; assert_in_epsilon(585.5139225024961, worksheet.costs_ab37, 0.001); end
  def test_costs_al37; assert_in_epsilon(616.5019521007365, worksheet.costs_al37, 0.001); end
  def test_xi_f_h91; assert_in_delta(0, (worksheet.xi_f_h91||0), 0.001); end
  def test_xi_f_by222; assert_in_delta(0, (worksheet.xi_f_by222||0), 0.001); end
  def test_xi_f_by223; assert_in_epsilon(62.56462721651326, worksheet.xi_f_by223, 0.001); end
  def test_xi_f_i287; assert_in_epsilon(53.17993313403627, worksheet.xi_f_i287, 0.001); end
  def test_costs_i37; assert_in_epsilon(53.17993313403627, worksheet.costs_i37, 0.001); end
  def test_xi_f_i291; assert_in_epsilon(651.2284578526787, worksheet.xi_f_i291, 0.001); end
  def test_costs_ac37; assert_in_epsilon(651.2284578526787, worksheet.costs_ac37, 0.001); end
  def test_costs_am37; assert_in_epsilon(704.408390986715, worksheet.costs_am37, 0.001); end
  def test_xi_f_i91; assert_in_delta(0, (worksheet.xi_f_i91||0), 0.001); end
  def test_xi_f_bz222; assert_in_delta(0, (worksheet.xi_f_bz222||0), 0.001); end
  def test_xi_f_bz223; assert_in_epsilon(84.57547494851372, worksheet.xi_f_bz223, 0.001); end
  def test_xi_f_j287; assert_in_epsilon(71.88915370623666, worksheet.xi_f_j287, 0.001); end
  def test_costs_j37; assert_in_epsilon(71.88915370623666, worksheet.costs_j37, 0.001); end
  def test_xi_f_j291; assert_in_epsilon(642.9762595971995, worksheet.xi_f_j291, 0.001); end
  def test_costs_ad37; assert_in_epsilon(642.9762595971995, worksheet.costs_ad37, 0.001); end
  def test_costs_an37; assert_in_epsilon(714.8654133034362, worksheet.costs_an37, 0.001); end
  def test_xi_f_j91; assert_in_delta(0, (worksheet.xi_f_j91||0), 0.001); end
  def test_xi_f_ca222; assert_in_delta(0, (worksheet.xi_f_ca222||0), 0.001); end
  def test_xi_f_ca223; assert_in_epsilon(103.67142028669161, worksheet.xi_f_ca223, 0.001); end
  def test_xi_f_k287; assert_in_epsilon(88.12070724368787, worksheet.xi_f_k287, 0.001); end
  def test_costs_k37; assert_in_epsilon(88.12070724368787, worksheet.costs_k37, 0.001); end
  def test_xi_f_k291; assert_in_epsilon(613.571547880593, worksheet.xi_f_k291, 0.001); end
  def test_costs_ae37; assert_in_epsilon(613.571547880593, worksheet.costs_ae37, 0.001); end
  def test_costs_ao37; assert_in_epsilon(701.6922551242809, worksheet.costs_ao37, 0.001); end
  def test_xi_f_k91; assert_in_delta(0, (worksheet.xi_f_k91||0), 0.001); end
  def test_xi_f_cb222; assert_in_delta(0, (worksheet.xi_f_cb222||0), 0.001); end
  def test_xi_f_cb223; assert_in_epsilon(122.66334655315711, worksheet.xi_f_cb223, 0.001); end
  def test_xi_f_l287; assert_in_epsilon(104.26384457018354, worksheet.xi_f_l287, 0.001); end
  def test_costs_l37; assert_in_epsilon(104.26384457018354, worksheet.costs_l37, 0.001); end
  def test_xi_f_l291; assert_in_epsilon(588.2887698218005, worksheet.xi_f_l291, 0.001); end
  def test_costs_af37; assert_in_epsilon(588.2887698218005, worksheet.costs_af37, 0.001); end
  def test_costs_ap37; assert_in_epsilon(692.5526143919841, worksheet.costs_ap37, 0.001); end
  def test_xi_f_l91; assert_in_delta(0, (worksheet.xi_f_l91||0), 0.001); end
  def test_xi_f_cc222; assert_in_delta(0, (worksheet.xi_f_cc222||0), 0.001); end
  def test_xi_f_cc223; assert_in_epsilon(141.2459914927574, worksheet.xi_f_cc223, 0.001); end
  def test_xi_f_m287; assert_in_epsilon(120.0590927688438, worksheet.xi_f_m287, 0.001); end
  def test_costs_m37; assert_in_epsilon(120.0590927688438, worksheet.costs_m37, 0.001); end
  def test_xi_f_m291; assert_in_epsilon(564.1665505581325, worksheet.xi_f_m291, 0.001); end
  def test_costs_ag37; assert_in_epsilon(564.1665505581325, worksheet.costs_ag37, 0.001); end
  def test_costs_aq37; assert_in_epsilon(684.2256433269763, worksheet.costs_aq37, 0.001); end
  def test_xi_f_m91; assert_in_delta(0, (worksheet.xi_f_m91||0), 0.001); end
  def test_xi_f_cd222; assert_in_delta(0, (worksheet.xi_f_cd222||0), 0.001); end
  def test_xi_f_cd189; assert_in_epsilon(159.19602008853155, worksheet.xi_f_cd189, 0.001); end
  def test_xi_f_cd200; assert_in_epsilon(159.19602008853155, worksheet.xi_f_cd200, 0.001); end
  def test_xi_f_cd211; assert_in_epsilon(159.19602008853155, worksheet.xi_f_cd211, 0.001); end
  def test_xi_f_cd223; assert_in_epsilon(159.19602008853155, worksheet.xi_f_cd223, 0.001); end
  def test_xi_f_n287; assert_in_epsilon(135.31661707525183, worksheet.xi_f_n287, 0.001); end
  def test_costs_n37; assert_in_epsilon(135.31661707525183, worksheet.costs_n37, 0.001); end
  def test_xi_f_n291; assert_in_epsilon(540.1317912045251, worksheet.xi_f_n291, 0.001); end
  def test_costs_ah37; assert_in_epsilon(540.1317912045251, worksheet.costs_ah37, 0.001); end
  def test_costs_ar37; assert_in_epsilon(675.4484082797769, worksheet.costs_ar37, 0.001); end
  def test_costs_b38; assert_equal("XI.g", worksheet.costs_b38); end
  def test_costs_c38; assert_equal("Oil & Gas Industry", worksheet.costs_c38); end
  def test_costs_d38; assert_equal("Industry", worksheet.costs_d38); end
  def test_costs_e38; assert_equal("MEUR", worksheet.costs_e38); end
  def test_costs_p38; assert_in_delta(0, (worksheet.costs_p38||0), 0.001); end
  def test_costs_q38; assert_in_delta(0, (worksheet.costs_q38||0), 0.001); end
  def test_costs_r38; assert_in_delta(0, (worksheet.costs_r38||0), 0.001); end
  def test_costs_s38; assert_in_delta(0, (worksheet.costs_s38||0), 0.001); end
  def test_costs_t38; assert_in_delta(0, (worksheet.costs_t38||0), 0.001); end
  def test_costs_u38; assert_in_delta(0, (worksheet.costs_u38||0), 0.001); end
  def test_costs_v38; assert_in_delta(0, (worksheet.costs_v38||0), 0.001); end
  def test_costs_w38; assert_in_delta(0, (worksheet.costs_w38||0), 0.001); end
  def test_costs_x38; assert_in_delta(0, (worksheet.costs_x38||0), 0.001); end
  def test_costs_f38; assert_in_delta(0, (worksheet.costs_f38||0), 0.001); end
  def test_costs_z38; assert_in_epsilon(781.9147767460593, worksheet.costs_z38, 0.001); end
  def test_costs_aj38; assert_in_epsilon(781.9147767460593, worksheet.costs_aj38, 0.001); end
  def test_costs_g38; assert_in_delta(-0.9410479334500496, worksheet.costs_g38, 0.001); end
  def test_costs_aa38; assert_in_epsilon(818.0448005729975, worksheet.costs_aa38, 0.001); end
  def test_costs_ak38; assert_in_epsilon(817.1037526395475, worksheet.costs_ak38, 0.001); end
  def test_costs_h38; assert_in_delta(0.5880943558101015, worksheet.costs_h38, 0.001); end
  def test_costs_ab38; assert_in_epsilon(755.6362823724526, worksheet.costs_ab38, 0.001); end
  def test_costs_al38; assert_in_epsilon(756.2243767282627, worksheet.costs_al38, 0.001); end
  def test_costs_i38; assert_in_epsilon(4.296078454500305, worksheet.costs_i38, 0.001); end
  def test_costs_ac38; assert_in_epsilon(692.8154490277194, worksheet.costs_ac38, 0.001); end
  def test_costs_am38; assert_in_epsilon(697.1115274822197, worksheet.costs_am38, 0.001); end
  def test_costs_j38; assert_in_epsilon(79.21306142181339, worksheet.costs_j38, 0.001); end
  def test_costs_ad38; assert_in_epsilon(519.0792367526633, worksheet.costs_ad38, 0.001); end
  def test_costs_an38; assert_in_epsilon(598.2922981744766, worksheet.costs_an38, 0.001); end
  def test_costs_k38; assert_in_epsilon(86.31002326129493, worksheet.costs_k38, 0.001); end
  def test_costs_ae38; assert_in_epsilon(427.25617315742295, worksheet.costs_ae38, 0.001); end
  def test_costs_ao38; assert_in_epsilon(513.5661964187179, worksheet.costs_ao38, 0.001); end
  def test_costs_l38; assert_in_epsilon(88.16677037604394, worksheet.costs_l38, 0.001); end
  def test_costs_af38; assert_in_epsilon(351.94251768930457, worksheet.costs_af38, 0.001); end
  def test_costs_ap38; assert_in_epsilon(440.1092880653485, worksheet.costs_ap38, 0.001); end
  def test_costs_m38; assert_in_epsilon(84.64863786220876, worksheet.costs_m38, 0.001); end
  def test_costs_ag38; assert_in_epsilon(283.8040891559089, worksheet.costs_ag38, 0.001); end
  def test_costs_aq38; assert_in_epsilon(368.4527270181177, worksheet.costs_aq38, 0.001); end
  def test_costs_n38; assert_in_epsilon(76.63387761231486, worksheet.costs_n38, 0.001); end
  def test_costs_ah38; assert_in_epsilon(221.8497193471434, worksheet.costs_ah38, 0.001); end
  def test_costs_ar38; assert_in_epsilon(298.4835969594583, worksheet.costs_ar38, 0.001); end
  def test_costs_b39; assert_equal("XI.h", worksheet.costs_b39); end
  def test_costs_c39; assert_equal("Food, drinks and tobacco Industry", worksheet.costs_c39); end
  def test_costs_d39; assert_equal("Industry", worksheet.costs_d39); end
  def test_costs_e39; assert_equal("MEUR", worksheet.costs_e39); end
  def test_costs_p39; assert_in_delta(0, (worksheet.costs_p39||0), 0.001); end
  def test_costs_q39; assert_in_delta(0, (worksheet.costs_q39||0), 0.001); end
  def test_costs_r39; assert_in_delta(0, (worksheet.costs_r39||0), 0.001); end
  def test_costs_s39; assert_in_delta(0, (worksheet.costs_s39||0), 0.001); end
  def test_costs_t39; assert_in_delta(0, (worksheet.costs_t39||0), 0.001); end
  def test_costs_u39; assert_in_delta(0, (worksheet.costs_u39||0), 0.001); end
  def test_costs_v39; assert_in_delta(0, (worksheet.costs_v39||0), 0.001); end
  def test_costs_w39; assert_in_delta(0, (worksheet.costs_w39||0), 0.001); end
  def test_costs_x39; assert_in_delta(0, (worksheet.costs_x39||0), 0.001); end
  def test_costs_f39; assert_in_delta(0, (worksheet.costs_f39||0), 0.001); end
  def test_costs_z39; assert_in_epsilon(614.2587734585472, worksheet.costs_z39, 0.001); end
  def test_costs_aj39; assert_in_epsilon(614.2587734585472, worksheet.costs_aj39, 0.001); end
  def test_costs_g39; assert_in_epsilon(21.498540625984692, worksheet.costs_g39, 0.001); end
  def test_costs_aa39; assert_in_epsilon(554.2438930041434, worksheet.costs_aa39, 0.001); end
  def test_costs_ak39; assert_in_epsilon(575.7424336301281, worksheet.costs_ak39, 0.001); end
  def test_costs_h39; assert_in_epsilon(44.69453062790239, worksheet.costs_h39, 0.001); end
  def test_costs_ab39; assert_in_epsilon(558.5968064564725, worksheet.costs_ab39, 0.001); end
  def test_costs_al39; assert_in_epsilon(603.2913370843748, worksheet.costs_al39, 0.001); end
  def test_costs_i39; assert_in_epsilon(75.04776800356042, worksheet.costs_i39, 0.001); end
  def test_costs_ac39; assert_in_epsilon(607.2108490664808, worksheet.costs_ac39, 0.001); end
  def test_costs_am39; assert_in_epsilon(682.2586170700413, worksheet.costs_am39, 0.001); end
  def test_costs_j39; assert_in_epsilon(94.99167076944282, worksheet.costs_j39, 0.001); end
  def test_costs_ad39; assert_in_epsilon(563.9458873567845, worksheet.costs_ad39, 0.001); end
  def test_costs_an39; assert_in_epsilon(658.9375581262274, worksheet.costs_an39, 0.001); end
  def test_costs_k39; assert_in_epsilon(110.90338611994117, worksheet.costs_k39, 0.001); end
  def test_costs_ae39; assert_in_epsilon(515.535381381936, worksheet.costs_ae39, 0.001); end
  def test_costs_ao39; assert_in_epsilon(626.4387675018771, worksheet.costs_ao39, 0.001); end
  def test_costs_l39; assert_in_epsilon(125.14683174881075, worksheet.costs_l39, 0.001); end
  def test_costs_af39; assert_in_epsilon(475.7043014480136, worksheet.costs_af39, 0.001); end
  def test_costs_ap39; assert_in_epsilon(600.8511331968243, worksheet.costs_ap39, 0.001); end
  def test_costs_m39; assert_in_epsilon(137.34605626639356, worksheet.costs_m39, 0.001); end
  def test_costs_ag39; assert_in_epsilon(440.3799558293227, worksheet.costs_ag39, 0.001); end
  def test_costs_aq39; assert_in_epsilon(577.7260120957162, worksheet.costs_aq39, 0.001); end
  def test_costs_n39; assert_in_epsilon(147.2864607052407, worksheet.costs_n39, 0.001); end
  def test_costs_ah39; assert_in_epsilon(407.99046234829433, worksheet.costs_ah39, 0.001); end
  def test_costs_ar39; assert_in_epsilon(555.276923053535, worksheet.costs_ar39, 0.001); end
  def test_costs_b40; assert_equal("XI.i", worksheet.costs_b40); end
  def test_costs_c40; assert_equal("Machines Industry", worksheet.costs_c40); end
  def test_costs_d40; assert_equal("Industry", worksheet.costs_d40); end
  def test_costs_e40; assert_equal("MEUR", worksheet.costs_e40); end
  def test_costs_p40; assert_in_delta(0, (worksheet.costs_p40||0), 0.001); end
  def test_costs_q40; assert_in_delta(0, (worksheet.costs_q40||0), 0.001); end
  def test_costs_r40; assert_in_delta(0, (worksheet.costs_r40||0), 0.001); end
  def test_costs_s40; assert_in_delta(0, (worksheet.costs_s40||0), 0.001); end
  def test_costs_t40; assert_in_delta(0, (worksheet.costs_t40||0), 0.001); end
  def test_costs_u40; assert_in_delta(0, (worksheet.costs_u40||0), 0.001); end
  def test_costs_v40; assert_in_delta(0, (worksheet.costs_v40||0), 0.001); end
  def test_costs_w40; assert_in_delta(0, (worksheet.costs_w40||0), 0.001); end
  def test_costs_x40; assert_in_delta(0, (worksheet.costs_x40||0), 0.001); end
  def test_costs_f40; assert_in_delta(0, (worksheet.costs_f40||0), 0.001); end
  def test_costs_z40; assert_in_delta(0, (worksheet.costs_z40||0), 0.001); end
  def test_costs_aj40; assert_in_delta(0, (worksheet.costs_aj40||0), 0.001); end
  def test_costs_g40; assert_in_delta(0, (worksheet.costs_g40||0), 0.001); end
  def test_costs_aa40; assert_in_delta(0, (worksheet.costs_aa40||0), 0.001); end
  def test_costs_ak40; assert_in_delta(0, (worksheet.costs_ak40||0), 0.001); end
  def test_costs_h40; assert_in_delta(0, (worksheet.costs_h40||0), 0.001); end
  def test_costs_ab40; assert_in_delta(0, (worksheet.costs_ab40||0), 0.001); end
  def test_costs_al40; assert_in_delta(0, (worksheet.costs_al40||0), 0.001); end
  def test_costs_i40; assert_in_delta(0, (worksheet.costs_i40||0), 0.001); end
  def test_costs_ac40; assert_in_delta(0, (worksheet.costs_ac40||0), 0.001); end
  def test_costs_am40; assert_in_delta(0, (worksheet.costs_am40||0), 0.001); end
  def test_costs_j40; assert_in_delta(0, (worksheet.costs_j40||0), 0.001); end
  def test_costs_ad40; assert_in_delta(0, (worksheet.costs_ad40||0), 0.001); end
  def test_costs_an40; assert_in_delta(0, (worksheet.costs_an40||0), 0.001); end
  def test_costs_k40; assert_in_delta(0, (worksheet.costs_k40||0), 0.001); end
  def test_costs_ae40; assert_in_delta(0, (worksheet.costs_ae40||0), 0.001); end
  def test_costs_ao40; assert_in_delta(0, (worksheet.costs_ao40||0), 0.001); end
  def test_costs_l40; assert_in_delta(0, (worksheet.costs_l40||0), 0.001); end
  def test_costs_af40; assert_in_delta(0, (worksheet.costs_af40||0), 0.001); end
  def test_costs_ap40; assert_in_delta(0, (worksheet.costs_ap40||0), 0.001); end
  def test_costs_m40; assert_in_delta(0, (worksheet.costs_m40||0), 0.001); end
  def test_costs_ag40; assert_in_delta(0, (worksheet.costs_ag40||0), 0.001); end
  def test_costs_aq40; assert_in_delta(0, (worksheet.costs_aq40||0), 0.001); end
  def test_costs_n40; assert_in_delta(0, (worksheet.costs_n40||0), 0.001); end
  def test_costs_ah40; assert_in_delta(0, (worksheet.costs_ah40||0), 0.001); end
  def test_costs_ar40; assert_in_delta(0, (worksheet.costs_ar40||0), 0.001); end
  def test_costs_b41; assert_equal("XI.j", worksheet.costs_b41); end
  def test_costs_c41; assert_equal("Non-Ferrous metals Industry", worksheet.costs_c41); end
  def test_costs_d41; assert_equal("Industry", worksheet.costs_d41); end
  def test_costs_e41; assert_equal("MEUR", worksheet.costs_e41); end
  def test_costs_p41; assert_in_delta(0, (worksheet.costs_p41||0), 0.001); end
  def test_costs_q41; assert_in_delta(0, (worksheet.costs_q41||0), 0.001); end
  def test_costs_r41; assert_in_delta(0, (worksheet.costs_r41||0), 0.001); end
  def test_costs_s41; assert_in_delta(0, (worksheet.costs_s41||0), 0.001); end
  def test_costs_t41; assert_in_delta(0, (worksheet.costs_t41||0), 0.001); end
  def test_costs_u41; assert_in_delta(0, (worksheet.costs_u41||0), 0.001); end
  def test_costs_v41; assert_in_delta(0, (worksheet.costs_v41||0), 0.001); end
  def test_costs_w41; assert_in_delta(0, (worksheet.costs_w41||0), 0.001); end
  def test_costs_x41; assert_in_delta(0, (worksheet.costs_x41||0), 0.001); end
  def test_costs_f41; assert_in_delta(0, (worksheet.costs_f41||0), 0.001); end
  def test_costs_z41; assert_in_epsilon(112.37980694519494, worksheet.costs_z41, 0.001); end
  def test_costs_aj41; assert_in_epsilon(112.37980694519494, worksheet.costs_aj41, 0.001); end
  def test_costs_g41; assert_in_epsilon(4.275102314680288, worksheet.costs_g41, 0.001); end
  def test_costs_aa41; assert_in_epsilon(166.8227881285009, worksheet.costs_aa41, 0.001); end
  def test_costs_ak41; assert_in_epsilon(171.09789044318117, worksheet.costs_ak41, 0.001); end
  def test_costs_h41; assert_in_epsilon(8.620195227442812, worksheet.costs_h41, 0.001); end
  def test_costs_ab41; assert_in_epsilon(164.37870694079027, worksheet.costs_ab41, 0.001); end
  def test_costs_al41; assert_in_epsilon(172.9989021682331, worksheet.costs_al41, 0.001); end
  def test_costs_i41; assert_in_epsilon(13.502857240051855, worksheet.costs_i41, 0.001); end
  def test_costs_ac41; assert_in_epsilon(168.1708738104967, worksheet.costs_ac41, 0.001); end
  def test_costs_am41; assert_in_epsilon(181.67373105054855, worksheet.costs_am41, 0.001); end
  def test_costs_j41; assert_in_epsilon(18.53885397303587, worksheet.costs_j41, 0.001); end
  def test_costs_ad41; assert_in_epsilon(170.62267292839934, worksheet.costs_ad41, 0.001); end
  def test_costs_an41; assert_in_epsilon(189.1615269014352, worksheet.costs_an41, 0.001); end
  def test_costs_k41; assert_in_epsilon(23.623486244021, worksheet.costs_k41, 0.001); end
  def test_costs_ae41; assert_in_epsilon(171.33269778559756, worksheet.costs_ae41, 0.001); end
  def test_costs_ao41; assert_in_epsilon(194.95618402961856, worksheet.costs_ao41, 0.001); end
  def test_costs_l41; assert_in_epsilon(27.788070749146645, worksheet.costs_l41, 0.001); end
  def test_costs_af41; assert_in_epsilon(165.87429190974188, worksheet.costs_af41, 0.001); end
  def test_costs_ap41; assert_in_epsilon(193.66236265888853, worksheet.costs_ap41, 0.001); end
  def test_costs_m41; assert_in_epsilon(31.759865938830185, worksheet.costs_m41, 0.001); end
  def test_costs_ag41; assert_in_epsilon(160.79719170157196, worksheet.costs_ag41, 0.001); end
  def test_costs_aq41; assert_in_epsilon(192.55705764040215, worksheet.costs_aq41, 0.001); end
  def test_costs_n41; assert_in_epsilon(36.036865576253575, worksheet.costs_n41, 0.001); end
  def test_costs_ah41; assert_in_epsilon(158.0833440376424, worksheet.costs_ah41, 0.001); end
  def test_costs_ar41; assert_in_epsilon(194.12020961389598, worksheet.costs_ar41, 0.001); end
  def test_costs_b42; assert_equal("XI.k", worksheet.costs_b42); end
  def test_costs_c42; assert_equal("Construction industry", worksheet.costs_c42); end
  def test_costs_d42; assert_equal("Industry", worksheet.costs_d42); end
  def test_costs_e42; assert_equal("MEUR", worksheet.costs_e42); end
  def test_costs_p42; assert_in_delta(0, (worksheet.costs_p42||0), 0.001); end
  def test_costs_q42; assert_in_delta(0, (worksheet.costs_q42||0), 0.001); end
  def test_costs_r42; assert_in_delta(0, (worksheet.costs_r42||0), 0.001); end
  def test_costs_s42; assert_in_delta(0, (worksheet.costs_s42||0), 0.001); end
  def test_costs_t42; assert_in_delta(0, (worksheet.costs_t42||0), 0.001); end
  def test_costs_u42; assert_in_delta(0, (worksheet.costs_u42||0), 0.001); end
  def test_costs_v42; assert_in_delta(0, (worksheet.costs_v42||0), 0.001); end
  def test_costs_w42; assert_in_delta(0, (worksheet.costs_w42||0), 0.001); end
  def test_costs_x42; assert_in_delta(0, (worksheet.costs_x42||0), 0.001); end
  def test_costs_f42; assert_in_delta(0, (worksheet.costs_f42||0), 0.001); end
  def test_costs_z42; assert_in_epsilon(62.94103622824142, worksheet.costs_z42, 0.001); end
  def test_costs_aj42; assert_in_epsilon(62.94103622824142, worksheet.costs_aj42, 0.001); end
  def test_costs_g42; assert_in_epsilon(1.8148576635360676, worksheet.costs_g42, 0.001); end
  def test_costs_aa42; assert_in_epsilon(71.61624767223948, worksheet.costs_aa42, 0.001); end
  def test_costs_ak42; assert_in_epsilon(73.43110533577556, worksheet.costs_ak42, 0.001); end
  def test_costs_h42; assert_in_epsilon(4.501746878104993, worksheet.costs_h42, 0.001); end
  def test_costs_ab42; assert_in_epsilon(88.18821829019153, worksheet.costs_ab42, 0.001); end
  def test_costs_al42; assert_in_epsilon(92.68996516829652, worksheet.costs_al42, 0.001); end
  def test_costs_i42; assert_in_epsilon(8.48634991268458, worksheet.costs_i42, 0.001); end
  def test_costs_ac42; assert_in_epsilon(110.86276200056821, worksheet.costs_ac42, 0.001); end
  def test_costs_am42; assert_in_epsilon(119.34911191325278, worksheet.costs_am42, 0.001); end
  def test_costs_j42; assert_in_epsilon(11.221701432098452, worksheet.costs_j42, 0.001); end
  def test_costs_ad42; assert_in_epsilon(111.29107521627047, worksheet.costs_ad42, 0.001); end
  def test_costs_an42; assert_in_epsilon(122.51277664836893, worksheet.costs_an42, 0.001); end
  def test_costs_k42; assert_in_epsilon(13.314925170387934, worksheet.costs_k42, 0.001); end
  def test_costs_ae42; assert_in_epsilon(107.55682436903105, worksheet.costs_ae42, 0.001); end
  def test_costs_ao42; assert_in_epsilon(120.87174953941899, worksheet.costs_ao42, 0.001); end
  def test_costs_l42; assert_in_epsilon(15.14695815405927, worksheet.costs_l42, 0.001); end
  def test_costs_af42; assert_in_epsilon(104.72767973039281, worksheet.costs_af42, 0.001); end
  def test_costs_ap42; assert_in_epsilon(119.87463788445208, worksheet.costs_ap42, 0.001); end
  def test_costs_m42; assert_in_epsilon(16.6890028795973, worksheet.costs_m42, 0.001); end
  def test_costs_ag42; assert_in_epsilon(102.55802211256439, worksheet.costs_ag42, 0.001); end
  def test_costs_aq42; assert_in_epsilon(119.24702499216168, worksheet.costs_aq42, 0.001); end
  def test_costs_n42; assert_in_epsilon(17.91728528317066, worksheet.costs_n42, 0.001); end
  def test_costs_ah42; assert_in_epsilon(100.93570772698313, worksheet.costs_ah42, 0.001); end
  def test_costs_ar42; assert_in_epsilon(118.85299301015378, worksheet.costs_ar42, 0.001); end
  def test_costs_b43; assert_equal("XI.l", worksheet.costs_b43); end
  def test_costs_c43; assert_equal("Other Industry", worksheet.costs_c43); end
  def test_costs_d43; assert_equal("Industry", worksheet.costs_d43); end
  def test_costs_e43; assert_equal("MEUR", worksheet.costs_e43); end
  def test_costs_p43; assert_in_delta(0, (worksheet.costs_p43||0), 0.001); end
  def test_costs_q43; assert_in_delta(0, (worksheet.costs_q43||0), 0.001); end
  def test_costs_r43; assert_in_delta(0, (worksheet.costs_r43||0), 0.001); end
  def test_costs_s43; assert_in_delta(0, (worksheet.costs_s43||0), 0.001); end
  def test_costs_t43; assert_in_delta(0, (worksheet.costs_t43||0), 0.001); end
  def test_costs_u43; assert_in_delta(0, (worksheet.costs_u43||0), 0.001); end
  def test_costs_v43; assert_in_delta(0, (worksheet.costs_v43||0), 0.001); end
  def test_costs_w43; assert_in_delta(0, (worksheet.costs_w43||0), 0.001); end
  def test_costs_x43; assert_in_delta(0, (worksheet.costs_x43||0), 0.001); end
  def test_costs_f43; assert_in_delta(0, (worksheet.costs_f43||0), 0.001); end
  def test_costs_z43; assert_in_delta(0, (worksheet.costs_z43||0), 0.001); end
  def test_costs_aj43; assert_in_delta(0, (worksheet.costs_aj43||0), 0.001); end
  def test_costs_g43; assert_in_delta(0, (worksheet.costs_g43||0), 0.001); end
  def test_costs_aa43; assert_in_delta(0, (worksheet.costs_aa43||0), 0.001); end
  def test_costs_ak43; assert_in_delta(0, (worksheet.costs_ak43||0), 0.001); end
  def test_costs_h43; assert_in_delta(0, (worksheet.costs_h43||0), 0.001); end
  def test_costs_ab43; assert_in_delta(0, (worksheet.costs_ab43||0), 0.001); end
  def test_costs_al43; assert_in_delta(0, (worksheet.costs_al43||0), 0.001); end
  def test_costs_i43; assert_in_delta(0, (worksheet.costs_i43||0), 0.001); end
  def test_costs_ac43; assert_in_delta(0, (worksheet.costs_ac43||0), 0.001); end
  def test_costs_am43; assert_in_delta(0, (worksheet.costs_am43||0), 0.001); end
  def test_costs_j43; assert_in_delta(0, (worksheet.costs_j43||0), 0.001); end
  def test_costs_ad43; assert_in_delta(0, (worksheet.costs_ad43||0), 0.001); end
  def test_costs_an43; assert_in_delta(0, (worksheet.costs_an43||0), 0.001); end
  def test_costs_k43; assert_in_delta(0, (worksheet.costs_k43||0), 0.001); end
  def test_costs_ae43; assert_in_delta(0, (worksheet.costs_ae43||0), 0.001); end
  def test_costs_ao43; assert_in_delta(0, (worksheet.costs_ao43||0), 0.001); end
  def test_costs_l43; assert_in_delta(0, (worksheet.costs_l43||0), 0.001); end
  def test_costs_af43; assert_in_delta(0, (worksheet.costs_af43||0), 0.001); end
  def test_costs_ap43; assert_in_delta(0, (worksheet.costs_ap43||0), 0.001); end
  def test_costs_m43; assert_in_delta(0, (worksheet.costs_m43||0), 0.001); end
  def test_costs_ag43; assert_in_delta(0, (worksheet.costs_ag43||0), 0.001); end
  def test_costs_aq43; assert_in_delta(0, (worksheet.costs_aq43||0), 0.001); end
  def test_costs_n43; assert_in_delta(0, (worksheet.costs_n43||0), 0.001); end
  def test_costs_ah43; assert_in_delta(0, (worksheet.costs_ah43||0), 0.001); end
  def test_costs_ar43; assert_in_delta(0, (worksheet.costs_ar43||0), 0.001); end
  def test_costs_b44; assert_equal("XII.a", worksheet.costs_b44); end
  def test_costs_c44; assert_equal("Domestic passenger transport", worksheet.costs_c44); end
  def test_costs_d44; assert_equal("Transport", worksheet.costs_d44); end
  def test_costs_e44; assert_equal("MEUR", worksheet.costs_e44); end
  def test_costs_f44; assert_in_epsilon(6130.9542789480065, worksheet.costs_f44, 0.001); end
  def test_costs_p44; assert_in_epsilon(7486.845974896208, worksheet.costs_p44, 0.001); end
  def test_costs_z44; assert_in_epsilon(2591.2621353802365, worksheet.costs_z44, 0.001); end
  def test_costs_aj44; assert_in_epsilon(16209.062389224451, worksheet.costs_aj44, 0.001); end
  def test_costs_g44; assert_in_epsilon(6130.9542789480065, worksheet.costs_g44, 0.001); end
  def test_costs_q44; assert_in_epsilon(6730.3053766807, worksheet.costs_q44, 0.001); end
  def test_costs_aa180; assert_in_epsilon(164.1740222671247, worksheet.costs_aa180, 0.001); end
  def test_costs_aa181; assert_in_delta(0, (worksheet.costs_aa181||0), 0.001); end
  def test_costs_aa182; assert_in_epsilon(34.417701889904954, worksheet.costs_aa182, 0.001); end
  def test_costs_aa187; assert_in_epsilon(62.03750249852136, worksheet.costs_aa187, 0.001); end
  def test_costs_aa192; assert_in_epsilon(84.5, worksheet.costs_aa192, 0.001); end
  def test_costs_aa193; assert_in_epsilon(76.89405956793225, worksheet.costs_aa193, 0.001); end
  def test_costs_aa44; assert_in_epsilon(2073.8464517501093, worksheet.costs_aa44, 0.001); end
  def test_costs_ak44; assert_in_epsilon(14935.106107378815, worksheet.costs_ak44, 0.001); end
  def test_costs_h44; assert_in_epsilon(7995.335635945637, worksheet.costs_h44, 0.001); end
  def test_costs_r44; assert_in_epsilon(6551.322669194939, worksheet.costs_r44, 0.001); end
  def test_costs_ab180; assert_in_epsilon(159.7309339378333, worksheet.costs_ab180, 0.001); end
  def test_costs_ab181; assert_in_delta(0, (worksheet.costs_ab181||0), 0.001); end
  def test_costs_ab182; assert_in_epsilon(34.417701889904954, worksheet.costs_ab182, 0.001); end
  def test_costs_ab187; assert_in_epsilon(75.93633880324643, worksheet.costs_ab187, 0.001); end
  def test_costs_ab192; assert_in_epsilon(97, worksheet.costs_ab192, 0.001); end
  def test_costs_ab193; assert_in_epsilon(86.01567047796469, worksheet.costs_ab193, 0.001); end
  def test_costs_ab44; assert_in_epsilon(1951.9698763165425, worksheet.costs_ab44, 0.001); end
  def test_costs_al44; assert_in_epsilon(16498.62818145712, worksheet.costs_al44, 0.001); end
  def test_costs_i44; assert_in_epsilon(8098.189014886191, worksheet.costs_i44, 0.001); end
  def test_costs_s44; assert_in_epsilon(6094.232894016769, worksheet.costs_s44, 0.001); end
  def test_costs_ac180; assert_in_epsilon(113.21015701298957, worksheet.costs_ac180, 0.001); end
  def test_costs_ac181; assert_in_delta(0, (worksheet.costs_ac181||0), 0.001); end
  def test_costs_ac182; assert_in_delta(0, (worksheet.costs_ac182||0), 0.001); end
  def test_costs_ac187; assert_in_epsilon(72.97769026734262, worksheet.costs_ac187, 0.001); end
  def test_costs_ac192; assert_in_epsilon(97.5, worksheet.costs_ac192, 0.001); end
  def test_costs_ac193; assert_in_epsilon(111.55557777831669, worksheet.costs_ac193, 0.001); end
  def test_costs_ac44; assert_in_epsilon(1817.159437418917, worksheet.costs_ac44, 0.001); end
  def test_costs_am44; assert_in_epsilon(16009.581346321878, worksheet.costs_am44, 0.001); end
  def test_costs_j44; assert_in_epsilon(8119.784258243859, worksheet.costs_j44, 0.001); end
  def test_costs_t44; assert_in_epsilon(5466.925864386884, worksheet.costs_t44, 0.001); end
  def test_costs_ad180; assert_in_epsilon(120.9399101506538, worksheet.costs_ad180, 0.001); end
  def test_costs_ad181; assert_in_delta(0, (worksheet.costs_ad181||0), 0.001); end
  def test_costs_ad182; assert_in_delta(0, (worksheet.costs_ad182||0), 0.001); end
  def test_costs_ad187; assert_in_epsilon(71.80234005117518, worksheet.costs_ad187, 0.001); end
  def test_costs_ad192; assert_in_epsilon(98, worksheet.costs_ad192, 0.001); end
  def test_costs_ad193; assert_in_epsilon(108.81257512501473, worksheet.costs_ad193, 0.001); end
  def test_costs_ad44; assert_in_epsilon(1547.1206562583093, worksheet.costs_ad44, 0.001); end
  def test_costs_an44; assert_in_epsilon(15133.830778889052, worksheet.costs_an44, 0.001); end
  def test_costs_k44; assert_in_epsilon(7788.279904576621, worksheet.costs_k44, 0.001); end
  def test_costs_u44; assert_in_epsilon(4650.546762332597, worksheet.costs_u44, 0.001); end
  def test_costs_ae180; assert_in_epsilon(125.35695027941289, worksheet.costs_ae180, 0.001); end
  def test_costs_ae181; assert_in_delta(0, (worksheet.costs_ae181||0), 0.001); end
  def test_costs_ae182; assert_in_delta(0, (worksheet.costs_ae182||0), 0.001); end
  def test_costs_ae187; assert_in_epsilon(70.50944781982672, worksheet.costs_ae187, 0.001); end
  def test_costs_ae192; assert_in_epsilon(96, worksheet.costs_ae192, 0.001); end
  def test_costs_ae193; assert_in_epsilon(103.9589696201253, worksheet.costs_ae193, 0.001); end
  def test_costs_ae44; assert_in_epsilon(1269.9433196463024, worksheet.costs_ae44, 0.001); end
  def test_costs_ao44; assert_in_epsilon(13708.769986555522, worksheet.costs_ao44, 0.001); end
  def test_costs_l44; assert_in_epsilon(7355.38329780561, worksheet.costs_l44, 0.001); end
  def test_costs_v44; assert_in_epsilon(3707.6261230805044, worksheet.costs_v44, 0.001); end
  def test_costs_af180; assert_in_epsilon(132.28962157288765, worksheet.costs_af180, 0.001); end
  def test_costs_af181; assert_in_delta(0, (worksheet.costs_af181||0), 0.001); end
  def test_costs_af182; assert_in_delta(0, (worksheet.costs_af182||0), 0.001); end
  def test_costs_af187; assert_in_epsilon(69.41687672863374, worksheet.costs_af187, 0.001); end
  def test_costs_af192; assert_in_epsilon(94, worksheet.costs_af192, 0.001); end
  def test_costs_af193; assert_in_epsilon(100.81398664854403, worksheet.costs_af193, 0.001); end
  def test_costs_af44; assert_in_epsilon(1094.4844528351077, worksheet.costs_af44, 0.001); end
  def test_costs_ap44; assert_in_epsilon(12157.493873721221, worksheet.costs_ap44, 0.001); end
  def test_costs_m44; assert_in_epsilon(6708.617950765605, worksheet.costs_m44, 0.001); end
  def test_costs_w44; assert_in_epsilon(2646.598638460404, worksheet.costs_w44, 0.001); end
  def test_costs_ag180; assert_in_epsilon(153.82613831500043, worksheet.costs_ag180, 0.001); end
  def test_costs_ag181; assert_in_delta(0, (worksheet.costs_ag181||0), 0.001); end
  def test_costs_ag182; assert_in_delta(0, (worksheet.costs_ag182||0), 0.001); end
  def test_costs_ag187; assert_in_epsilon(68.21460109228741, worksheet.costs_ag187, 0.001); end
  def test_costs_ag192; assert_in_epsilon(93, worksheet.costs_ag192, 0.001); end
  def test_costs_ag193; assert_in_epsilon(98.31699163034196, worksheet.costs_ag193, 0.001); end
  def test_costs_ag44; assert_in_epsilon(950.3818116833262, worksheet.costs_ag44, 0.001); end
  def test_costs_aq44; assert_in_epsilon(10305.598400909335, worksheet.costs_aq44, 0.001); end
  def test_costs_n44; assert_in_epsilon(5223.305437597323, worksheet.costs_n44, 0.001); end
  def test_costs_x44; assert_in_epsilon(1499.0768339085337, worksheet.costs_x44, 0.001); end
  def test_costs_ah44; assert_in_epsilon(850.8758424963249, worksheet.costs_ah44, 0.001); end
  def test_costs_ar44; assert_in_epsilon(7573.258114002182, worksheet.costs_ar44, 0.001); end
  def test_costs_b45; assert_equal("XII.b", worksheet.costs_b45); end
  def test_costs_c45; assert_equal("Domestic freight", worksheet.costs_c45); end
  def test_costs_d45; assert_equal("Transport", worksheet.costs_d45); end
  def test_costs_e45; assert_equal("MEUR", worksheet.costs_e45); end
  def test_costs_f45; assert_in_delta(0, (worksheet.costs_f45||0), 0.001); end
  def test_costs_p45; assert_in_delta(0, (worksheet.costs_p45||0), 0.001); end
  def test_costs_z45; assert_in_epsilon(1425.5601695442965, worksheet.costs_z45, 0.001); end
  def test_costs_aj45; assert_in_epsilon(1425.5601695442965, worksheet.costs_aj45, 0.001); end
  def test_costs_g45; assert_in_epsilon(972.4026856592977, worksheet.costs_g45, 0.001); end
  def test_costs_q45; assert_in_epsilon(957.1363961324357, worksheet.costs_q45, 0.001); end
  def test_costs_aa45; assert_in_epsilon(1200.3080158166417, worksheet.costs_aa45, 0.001); end
  def test_costs_ak45; assert_in_epsilon(3129.8470976083754, worksheet.costs_ak45, 0.001); end
  def test_costs_h45; assert_in_epsilon(978.7853703960093, worksheet.costs_h45, 0.001); end
  def test_costs_r45; assert_in_epsilon(961.3658057108433, worksheet.costs_r45, 0.001); end
  def test_costs_ab45; assert_in_epsilon(1225.9489790660373, worksheet.costs_ab45, 0.001); end
  def test_costs_al45; assert_in_epsilon(3166.10015517289, worksheet.costs_al45, 0.001); end
  def test_costs_i45; assert_in_epsilon(991.472219629833, worksheet.costs_i45, 0.001); end
  def test_costs_s45; assert_in_epsilon(969.5974892664381, worksheet.costs_s45, 0.001); end
  def test_costs_ac45; assert_in_epsilon(1242.8376039895109, worksheet.costs_ac45, 0.001); end
  def test_costs_am45; assert_in_epsilon(3203.9073128857817, worksheet.costs_am45, 0.001); end
  def test_costs_j45; assert_in_epsilon(1004.0212863702703, worksheet.costs_j45, 0.001); end
  def test_costs_t45; assert_in_epsilon(977.3905391918523, worksheet.costs_t45, 0.001); end
  def test_costs_ad45; assert_in_epsilon(1224.111335150229, worksheet.costs_ad45, 0.001); end
  def test_costs_an45; assert_in_epsilon(3205.5231607123515, worksheet.costs_an45, 0.001); end
  def test_costs_k45; assert_in_epsilon(1016.4710865889488, worksheet.costs_k45, 0.001); end
  def test_costs_u45; assert_in_epsilon(984.7762306316101, worksheet.costs_u45, 0.001); end
  def test_costs_ae45; assert_in_epsilon(1148.1795429352, worksheet.costs_ae45, 0.001); end
  def test_costs_ao45; assert_in_epsilon(3149.4268601557587, worksheet.costs_ao45, 0.001); end
  def test_costs_l45; assert_in_epsilon(1028.860136257495, worksheet.costs_l45, 0.001); end
  def test_costs_v45; assert_in_epsilon(991.7858387302355, worksheet.costs_v45, 0.001); end
  def test_costs_af45; assert_in_epsilon(1071.9061480074088, worksheet.costs_af45, 0.001); end
  def test_costs_ap45; assert_in_epsilon(3092.552122995139, worksheet.costs_ap45, 0.001); end
  def test_costs_m45; assert_in_epsilon(1041.2269513475353, worksheet.costs_m45, 0.001); end
  def test_costs_w45; assert_in_epsilon(998.4506386322515, worksheet.costs_w45, 0.001); end
  def test_costs_ag45; assert_in_epsilon(994.6191392936798, worksheet.costs_ag45, 0.001); end
  def test_costs_aq45; assert_in_epsilon(3034.2967292734666, worksheet.costs_aq45, 0.001); end
  def test_costs_n45; assert_in_epsilon(1053.6100478306969, worksheet.costs_n45, 0.001); end
  def test_costs_x45; assert_in_epsilon(1004.8019054821825, worksheet.costs_x45, 0.001); end
  def test_costs_ah45; assert_in_epsilon(916.3687847554663, worksheet.costs_ah45, 0.001); end
  def test_costs_ar45; assert_in_epsilon(2974.780738068346, worksheet.costs_ar45, 0.001); end
  def test_costs_b46; assert_equal("XII.c", worksheet.costs_b46); end
  def test_costs_c46; assert_equal("International aviation", worksheet.costs_c46); end
  def test_costs_d46; assert_equal("Transport", worksheet.costs_d46); end
  def test_costs_e46; assert_equal("MEUR", worksheet.costs_e46); end
  def test_costs_f46; assert_in_epsilon(51.85300481437862, worksheet.costs_f46, 0.001); end
  def test_costs_p46; assert_in_epsilon(25.06668687658108, worksheet.costs_p46, 0.001); end
  def test_costs_z46; assert_in_epsilon(675.5219023389548, worksheet.costs_z46, 0.001); end
  def test_costs_aj46; assert_in_epsilon(752.4415940299144, worksheet.costs_aj46, 0.001); end
  def test_costs_g46; assert_in_epsilon(273.0219221134488, worksheet.costs_g46, 0.001); end
  def test_costs_q46; assert_in_epsilon(131.9837694374538, worksheet.costs_q46, 0.001); end
  def test_costs_aa46; assert_in_epsilon(549.3643151456993, worksheet.costs_aa46, 0.001); end
  def test_costs_ak46; assert_in_epsilon(954.3700066966019, worksheet.costs_ak46, 0.001); end
  def test_costs_h46; assert_in_epsilon(273.8498837839046, worksheet.costs_h46, 0.001); end
  def test_costs_r46; assert_in_epsilon(132.38402118782818, worksheet.costs_r46, 0.001); end
  def test_costs_ab46; assert_in_epsilon(539.8222110580269, worksheet.costs_ab46, 0.001); end
  def test_costs_al46; assert_in_epsilon(946.0561160297598, worksheet.costs_al46, 0.001); end
  def test_costs_i46; assert_in_epsilon(275.51082884997606, worksheet.costs_i46, 0.001); end
  def test_costs_s46; assert_in_epsilon(133.18695228197512, worksheet.costs_s46, 0.001); end
  def test_costs_ac46; assert_in_epsilon(522.2594320834528, worksheet.costs_ac46, 0.001); end
  def test_costs_am46; assert_in_epsilon(930.957213215404, worksheet.costs_am46, 0.001); end
  def test_costs_j46; assert_in_epsilon(277.18184782396554, worksheet.costs_j46, 0.001); end
  def test_costs_t46; assert_in_epsilon(133.9947532866761, worksheet.costs_t46, 0.001); end
  def test_costs_ad46; assert_in_epsilon(497.7255767484461, worksheet.costs_ad46, 0.001); end
  def test_costs_an46; assert_in_epsilon(908.9021778590877, worksheet.costs_an46, 0.001); end
  def test_costs_k46; assert_in_epsilon(278.8630018057986, worksheet.costs_k46, 0.001); end
  def test_costs_u46; assert_in_epsilon(134.80745373874794, worksheet.costs_u46, 0.001); end
  def test_costs_ae46; assert_in_epsilon(450.7356864727079, worksheet.costs_ae46, 0.001); end
  def test_costs_ao46; assert_in_epsilon(864.4061420172545, worksheet.costs_ao46, 0.001); end
  def test_costs_l46; assert_in_epsilon(280.55435226598274, worksheet.costs_l46, 0.001); end
  def test_costs_v46; assert_in_epsilon(135.62508335415336, worksheet.costs_v46, 0.001); end
  def test_costs_af46; assert_in_epsilon(406.2484891429914, worksheet.costs_af46, 0.001); end
  def test_costs_ap46; assert_in_epsilon(822.4279247631275, worksheet.costs_ap46, 0.001); end
  def test_costs_m46; assert_in_epsilon(282.2559610478542, worksheet.costs_m46, 0.001); end
  def test_costs_w46; assert_in_epsilon(136.4476720290875, worksheet.costs_w46, 0.001); end
  def test_costs_ag46; assert_in_epsilon(364.162670954206, worksheet.costs_ag46, 0.001); end
  def test_costs_aq46; assert_in_epsilon(782.8663040311478, worksheet.costs_aq46, 0.001); end
  def test_costs_n46; assert_in_epsilon(283.9678903698386, worksheet.costs_n46, 0.001); end
  def test_costs_x46; assert_in_epsilon(137.27524984107035, worksheet.costs_x46, 0.001); end
  def test_costs_ah46; assert_in_epsilon(324.3798214561495, worksheet.costs_ah46, 0.001); end
  def test_costs_ar46; assert_in_epsilon(745.6229616670585, worksheet.costs_ar46, 0.001); end
  def test_costs_b47; assert_equal("XII.d", worksheet.costs_b47); end
  def test_costs_c47; assert_equal("Domestic aviation [UNUSED - see XII.a]", worksheet.costs_c47); end
  def test_costs_d47; assert_equal("Transport", worksheet.costs_d47); end
  def test_costs_e47; assert_equal("MEUR", worksheet.costs_e47); end
  def test_costs_f47; assert_in_delta(0, (worksheet.costs_f47||0), 0.001); end
  def test_costs_g47; assert_in_delta(0, (worksheet.costs_g47||0), 0.001); end
  def test_costs_h47; assert_in_delta(0, (worksheet.costs_h47||0), 0.001); end
  def test_costs_i47; assert_in_delta(0, (worksheet.costs_i47||0), 0.001); end
  def test_costs_j47; assert_in_delta(0, (worksheet.costs_j47||0), 0.001); end
  def test_costs_k47; assert_in_delta(0, (worksheet.costs_k47||0), 0.001); end
  def test_costs_l47; assert_in_delta(0, (worksheet.costs_l47||0), 0.001); end
  def test_costs_m47; assert_in_delta(0, (worksheet.costs_m47||0), 0.001); end
  def test_costs_n47; assert_in_delta(0, (worksheet.costs_n47||0), 0.001); end
  def test_costs_p47; assert_in_delta(0, (worksheet.costs_p47||0), 0.001); end
  def test_costs_q47; assert_in_delta(0, (worksheet.costs_q47||0), 0.001); end
  def test_costs_r47; assert_in_delta(0, (worksheet.costs_r47||0), 0.001); end
  def test_costs_s47; assert_in_delta(0, (worksheet.costs_s47||0), 0.001); end
  def test_costs_t47; assert_in_delta(0, (worksheet.costs_t47||0), 0.001); end
  def test_costs_u47; assert_in_delta(0, (worksheet.costs_u47||0), 0.001); end
  def test_costs_v47; assert_in_delta(0, (worksheet.costs_v47||0), 0.001); end
  def test_costs_w47; assert_in_delta(0, (worksheet.costs_w47||0), 0.001); end
  def test_costs_x47; assert_in_delta(0, (worksheet.costs_x47||0), 0.001); end
  def test_costs_z47; assert_in_delta(0, (worksheet.costs_z47||0), 0.001); end
  def test_costs_aa47; assert_in_delta(0, (worksheet.costs_aa47||0), 0.001); end
  def test_costs_ab47; assert_in_delta(0, (worksheet.costs_ab47||0), 0.001); end
  def test_costs_ac47; assert_in_delta(0, (worksheet.costs_ac47||0), 0.001); end
  def test_costs_ad47; assert_in_delta(0, (worksheet.costs_ad47||0), 0.001); end
  def test_costs_ae47; assert_in_delta(0, (worksheet.costs_ae47||0), 0.001); end
  def test_costs_af47; assert_in_delta(0, (worksheet.costs_af47||0), 0.001); end
  def test_costs_ag47; assert_in_delta(0, (worksheet.costs_ag47||0), 0.001); end
  def test_costs_ah47; assert_in_delta(0, (worksheet.costs_ah47||0), 0.001); end
  def test_costs_aj47; assert_in_delta(0, (worksheet.costs_aj47||0), 0.001); end
  def test_costs_ak47; assert_in_delta(0, (worksheet.costs_ak47||0), 0.001); end
  def test_costs_al47; assert_in_delta(0, (worksheet.costs_al47||0), 0.001); end
  def test_costs_am47; assert_in_delta(0, (worksheet.costs_am47||0), 0.001); end
  def test_costs_an47; assert_in_delta(0, (worksheet.costs_an47||0), 0.001); end
  def test_costs_ao47; assert_in_delta(0, (worksheet.costs_ao47||0), 0.001); end
  def test_costs_ap47; assert_in_delta(0, (worksheet.costs_ap47||0), 0.001); end
  def test_costs_aq47; assert_in_delta(0, (worksheet.costs_aq47||0), 0.001); end
  def test_costs_ar47; assert_in_delta(0, (worksheet.costs_ar47||0), 0.001); end
  def test_costs_b48; assert_equal("XII.e", worksheet.costs_b48); end
  def test_costs_c48; assert_equal("International shipping [UNUSED]", worksheet.costs_c48); end
  def test_costs_d48; assert_equal("Transport", worksheet.costs_d48); end
  def test_costs_e48; assert_equal("MEUR", worksheet.costs_e48); end
  def test_costs_f48; assert_in_delta(0, (worksheet.costs_f48||0), 0.001); end
  def test_costs_g48; assert_in_delta(0, (worksheet.costs_g48||0), 0.001); end
  def test_costs_h48; assert_in_delta(0, (worksheet.costs_h48||0), 0.001); end
  def test_costs_i48; assert_in_delta(0, (worksheet.costs_i48||0), 0.001); end
  def test_costs_j48; assert_in_delta(0, (worksheet.costs_j48||0), 0.001); end
  def test_costs_k48; assert_in_delta(0, (worksheet.costs_k48||0), 0.001); end
  def test_costs_l48; assert_in_delta(0, (worksheet.costs_l48||0), 0.001); end
  def test_costs_m48; assert_in_delta(0, (worksheet.costs_m48||0), 0.001); end
  def test_costs_n48; assert_in_delta(0, (worksheet.costs_n48||0), 0.001); end
  def test_costs_p48; assert_in_delta(0, (worksheet.costs_p48||0), 0.001); end
  def test_costs_q48; assert_in_delta(0, (worksheet.costs_q48||0), 0.001); end
  def test_costs_r48; assert_in_delta(0, (worksheet.costs_r48||0), 0.001); end
  def test_costs_s48; assert_in_delta(0, (worksheet.costs_s48||0), 0.001); end
  def test_costs_t48; assert_in_delta(0, (worksheet.costs_t48||0), 0.001); end
  def test_costs_u48; assert_in_delta(0, (worksheet.costs_u48||0), 0.001); end
  def test_costs_v48; assert_in_delta(0, (worksheet.costs_v48||0), 0.001); end
  def test_costs_w48; assert_in_delta(0, (worksheet.costs_w48||0), 0.001); end
  def test_costs_x48; assert_in_delta(0, (worksheet.costs_x48||0), 0.001); end
  def test_costs_z48; assert_in_delta(0, (worksheet.costs_z48||0), 0.001); end
  def test_costs_aa48; assert_in_delta(0, (worksheet.costs_aa48||0), 0.001); end
  def test_costs_ab48; assert_in_delta(0, (worksheet.costs_ab48||0), 0.001); end
  def test_costs_ac48; assert_in_delta(0, (worksheet.costs_ac48||0), 0.001); end
  def test_costs_ad48; assert_in_delta(0, (worksheet.costs_ad48||0), 0.001); end
  def test_costs_ae48; assert_in_delta(0, (worksheet.costs_ae48||0), 0.001); end
  def test_costs_af48; assert_in_delta(0, (worksheet.costs_af48||0), 0.001); end
  def test_costs_ag48; assert_in_delta(0, (worksheet.costs_ag48||0), 0.001); end
  def test_costs_ah48; assert_in_delta(0, (worksheet.costs_ah48||0), 0.001); end
  def test_costs_aj48; assert_in_delta(0, (worksheet.costs_aj48||0), 0.001); end
  def test_costs_ak48; assert_in_delta(0, (worksheet.costs_ak48||0), 0.001); end
  def test_costs_al48; assert_in_delta(0, (worksheet.costs_al48||0), 0.001); end
  def test_costs_am48; assert_in_delta(0, (worksheet.costs_am48||0), 0.001); end
  def test_costs_an48; assert_in_delta(0, (worksheet.costs_an48||0), 0.001); end
  def test_costs_ao48; assert_in_delta(0, (worksheet.costs_ao48||0), 0.001); end
  def test_costs_ap48; assert_in_delta(0, (worksheet.costs_ap48||0), 0.001); end
  def test_costs_aq48; assert_in_delta(0, (worksheet.costs_aq48||0), 0.001); end
  def test_costs_ar48; assert_in_delta(0, (worksheet.costs_ar48||0), 0.001); end
  def test_costs_b49; assert_equal("XII.f", worksheet.costs_b49); end
  def test_costs_c49; assert_equal("National navigation [UNUSED - see XII.a]", worksheet.costs_c49); end
  def test_costs_d49; assert_equal("Transport", worksheet.costs_d49); end
  def test_costs_e49; assert_equal("MEUR", worksheet.costs_e49); end
  def test_costs_f49; assert_in_delta(0, (worksheet.costs_f49||0), 0.001); end
  def test_costs_g49; assert_in_delta(0, (worksheet.costs_g49||0), 0.001); end
  def test_costs_h49; assert_in_delta(0, (worksheet.costs_h49||0), 0.001); end
  def test_costs_i49; assert_in_delta(0, (worksheet.costs_i49||0), 0.001); end
  def test_costs_j49; assert_in_delta(0, (worksheet.costs_j49||0), 0.001); end
  def test_costs_k49; assert_in_delta(0, (worksheet.costs_k49||0), 0.001); end
  def test_costs_l49; assert_in_delta(0, (worksheet.costs_l49||0), 0.001); end
  def test_costs_m49; assert_in_delta(0, (worksheet.costs_m49||0), 0.001); end
  def test_costs_n49; assert_in_delta(0, (worksheet.costs_n49||0), 0.001); end
  def test_costs_p49; assert_in_delta(0, (worksheet.costs_p49||0), 0.001); end
  def test_costs_q49; assert_in_delta(0, (worksheet.costs_q49||0), 0.001); end
  def test_costs_r49; assert_in_delta(0, (worksheet.costs_r49||0), 0.001); end
  def test_costs_s49; assert_in_delta(0, (worksheet.costs_s49||0), 0.001); end
  def test_costs_t49; assert_in_delta(0, (worksheet.costs_t49||0), 0.001); end
  def test_costs_u49; assert_in_delta(0, (worksheet.costs_u49||0), 0.001); end
  def test_costs_v49; assert_in_delta(0, (worksheet.costs_v49||0), 0.001); end
  def test_costs_w49; assert_in_delta(0, (worksheet.costs_w49||0), 0.001); end
  def test_costs_x49; assert_in_delta(0, (worksheet.costs_x49||0), 0.001); end
  def test_costs_z49; assert_in_delta(0, (worksheet.costs_z49||0), 0.001); end
  def test_costs_aa49; assert_in_delta(0, (worksheet.costs_aa49||0), 0.001); end
  def test_costs_ab49; assert_in_delta(0, (worksheet.costs_ab49||0), 0.001); end
  def test_costs_ac49; assert_in_delta(0, (worksheet.costs_ac49||0), 0.001); end
  def test_costs_ad49; assert_in_delta(0, (worksheet.costs_ad49||0), 0.001); end
  def test_costs_ae49; assert_in_delta(0, (worksheet.costs_ae49||0), 0.001); end
  def test_costs_af49; assert_in_delta(0, (worksheet.costs_af49||0), 0.001); end
  def test_costs_ag49; assert_in_delta(0, (worksheet.costs_ag49||0), 0.001); end
  def test_costs_ah49; assert_in_delta(0, (worksheet.costs_ah49||0), 0.001); end
  def test_costs_aj49; assert_in_delta(0, (worksheet.costs_aj49||0), 0.001); end
  def test_costs_ak49; assert_in_delta(0, (worksheet.costs_ak49||0), 0.001); end
  def test_costs_al49; assert_in_delta(0, (worksheet.costs_al49||0), 0.001); end
  def test_costs_am49; assert_in_delta(0, (worksheet.costs_am49||0), 0.001); end
  def test_costs_an49; assert_in_delta(0, (worksheet.costs_an49||0), 0.001); end
  def test_costs_ao49; assert_in_delta(0, (worksheet.costs_ao49||0), 0.001); end
  def test_costs_ap49; assert_in_delta(0, (worksheet.costs_ap49||0), 0.001); end
  def test_costs_aq49; assert_in_delta(0, (worksheet.costs_aq49||0), 0.001); end
  def test_costs_ar49; assert_in_delta(0, (worksheet.costs_ar49||0), 0.001); end
  def test_costs_b50; assert_equal("XIII.a", worksheet.costs_b50); end
  def test_costs_c50; assert_equal("Food consumption [UNUSED]", worksheet.costs_c50); end
  def test_costs_e50; assert_equal("MEUR", worksheet.costs_e50); end
  def test_costs_f50; assert_in_delta(0, (worksheet.costs_f50||0), 0.001); end
  def test_costs_g50; assert_in_delta(0, (worksheet.costs_g50||0), 0.001); end
  def test_costs_h50; assert_in_delta(0, (worksheet.costs_h50||0), 0.001); end
  def test_costs_i50; assert_in_delta(0, (worksheet.costs_i50||0), 0.001); end
  def test_costs_j50; assert_in_delta(0, (worksheet.costs_j50||0), 0.001); end
  def test_costs_k50; assert_in_delta(0, (worksheet.costs_k50||0), 0.001); end
  def test_costs_l50; assert_in_delta(0, (worksheet.costs_l50||0), 0.001); end
  def test_costs_m50; assert_in_delta(0, (worksheet.costs_m50||0), 0.001); end
  def test_costs_n50; assert_in_delta(0, (worksheet.costs_n50||0), 0.001); end
  def test_costs_p50; assert_in_delta(0, (worksheet.costs_p50||0), 0.001); end
  def test_costs_q50; assert_in_delta(0, (worksheet.costs_q50||0), 0.001); end
  def test_costs_r50; assert_in_delta(0, (worksheet.costs_r50||0), 0.001); end
  def test_costs_s50; assert_in_delta(0, (worksheet.costs_s50||0), 0.001); end
  def test_costs_t50; assert_in_delta(0, (worksheet.costs_t50||0), 0.001); end
  def test_costs_u50; assert_in_delta(0, (worksheet.costs_u50||0), 0.001); end
  def test_costs_v50; assert_in_delta(0, (worksheet.costs_v50||0), 0.001); end
  def test_costs_w50; assert_in_delta(0, (worksheet.costs_w50||0), 0.001); end
  def test_costs_x50; assert_in_delta(0, (worksheet.costs_x50||0), 0.001); end
  def test_costs_z50; assert_in_delta(0, (worksheet.costs_z50||0), 0.001); end
  def test_costs_aa50; assert_in_delta(0, (worksheet.costs_aa50||0), 0.001); end
  def test_costs_ab50; assert_in_delta(0, (worksheet.costs_ab50||0), 0.001); end
  def test_costs_ac50; assert_in_delta(0, (worksheet.costs_ac50||0), 0.001); end
  def test_costs_ad50; assert_in_delta(0, (worksheet.costs_ad50||0), 0.001); end
  def test_costs_ae50; assert_in_delta(0, (worksheet.costs_ae50||0), 0.001); end
  def test_costs_af50; assert_in_delta(0, (worksheet.costs_af50||0), 0.001); end
  def test_costs_ag50; assert_in_delta(0, (worksheet.costs_ag50||0), 0.001); end
  def test_costs_ah50; assert_in_delta(0, (worksheet.costs_ah50||0), 0.001); end
  def test_costs_aj50; assert_in_delta(0, (worksheet.costs_aj50||0), 0.001); end
  def test_costs_ak50; assert_in_delta(0, (worksheet.costs_ak50||0), 0.001); end
  def test_costs_al50; assert_in_delta(0, (worksheet.costs_al50||0), 0.001); end
  def test_costs_am50; assert_in_delta(0, (worksheet.costs_am50||0), 0.001); end
  def test_costs_an50; assert_in_delta(0, (worksheet.costs_an50||0), 0.001); end
  def test_costs_ao50; assert_in_delta(0, (worksheet.costs_ao50||0), 0.001); end
  def test_costs_ap50; assert_in_delta(0, (worksheet.costs_ap50||0), 0.001); end
  def test_costs_aq50; assert_in_delta(0, (worksheet.costs_aq50||0), 0.001); end
  def test_costs_ar50; assert_in_delta(0, (worksheet.costs_ar50||0), 0.001); end
  def test_costs_b51; assert_equal("XIV.a", worksheet.costs_b51); end
  def test_costs_c51; assert_equal("Geosequestration [UNUSED]", worksheet.costs_c51); end
  def test_costs_e51; assert_equal("MEUR", worksheet.costs_e51); end
  def test_costs_p51; assert_in_delta(0, (worksheet.costs_p51||0), 0.001); end
  def test_costs_q51; assert_in_delta(0, (worksheet.costs_q51||0), 0.001); end
  def test_costs_r51; assert_in_delta(0, (worksheet.costs_r51||0), 0.001); end
  def test_costs_s51; assert_in_delta(0, (worksheet.costs_s51||0), 0.001); end
  def test_costs_t51; assert_in_delta(0, (worksheet.costs_t51||0), 0.001); end
  def test_costs_u51; assert_in_delta(0, (worksheet.costs_u51||0), 0.001); end
  def test_costs_v51; assert_in_delta(0, (worksheet.costs_v51||0), 0.001); end
  def test_costs_w51; assert_in_delta(0, (worksheet.costs_w51||0), 0.001); end
  def test_costs_x51; assert_in_delta(0, (worksheet.costs_x51||0), 0.001); end
  def test_costs_z51; assert_in_delta(0, (worksheet.costs_z51||0), 0.001); end
  def test_costs_aa51; assert_in_delta(0, (worksheet.costs_aa51||0), 0.001); end
  def test_costs_ab51; assert_in_delta(0, (worksheet.costs_ab51||0), 0.001); end
  def test_costs_ac51; assert_in_delta(0, (worksheet.costs_ac51||0), 0.001); end
  def test_costs_ad51; assert_in_delta(0, (worksheet.costs_ad51||0), 0.001); end
  def test_costs_ae51; assert_in_delta(0, (worksheet.costs_ae51||0), 0.001); end
  def test_costs_af51; assert_in_delta(0, (worksheet.costs_af51||0), 0.001); end
  def test_costs_ag51; assert_in_delta(0, (worksheet.costs_ag51||0), 0.001); end
  def test_costs_ah51; assert_in_delta(0, (worksheet.costs_ah51||0), 0.001); end
  def test_costs_f51; assert_in_delta(0, (worksheet.costs_f51||0), 0.001); end
  def test_costs_aj51; assert_in_delta(0, (worksheet.costs_aj51||0), 0.001); end
  def test_costs_g51; assert_in_delta(0, (worksheet.costs_g51||0), 0.001); end
  def test_costs_ak51; assert_in_delta(0, (worksheet.costs_ak51||0), 0.001); end
  def test_costs_h51; assert_in_delta(0, (worksheet.costs_h51||0), 0.001); end
  def test_costs_al51; assert_in_delta(0, (worksheet.costs_al51||0), 0.001); end
  def test_costs_i51; assert_in_delta(0, (worksheet.costs_i51||0), 0.001); end
  def test_costs_am51; assert_in_delta(0, (worksheet.costs_am51||0), 0.001); end
  def test_costs_j51; assert_in_delta(0, (worksheet.costs_j51||0), 0.001); end
  def test_costs_an51; assert_in_delta(0, (worksheet.costs_an51||0), 0.001); end
  def test_costs_k51; assert_in_delta(0, (worksheet.costs_k51||0), 0.001); end
  def test_costs_ao51; assert_in_delta(0, (worksheet.costs_ao51||0), 0.001); end
  def test_costs_l51; assert_in_delta(0, (worksheet.costs_l51||0), 0.001); end
  def test_costs_ap51; assert_in_delta(0, (worksheet.costs_ap51||0), 0.001); end
  def test_costs_m51; assert_in_delta(0, (worksheet.costs_m51||0), 0.001); end
  def test_costs_aq51; assert_in_delta(0, (worksheet.costs_aq51||0), 0.001); end
  def test_costs_n51; assert_in_delta(0, (worksheet.costs_n51||0), 0.001); end
  def test_costs_ar51; assert_in_delta(0, (worksheet.costs_ar51||0), 0.001); end
  def test_costs_b52; assert_equal("XV.a", worksheet.costs_b52); end
  def test_costs_c52; assert_equal("Petroleum refineries [UNUSED]", worksheet.costs_c52); end
  def test_costs_e52; assert_equal("MEUR", worksheet.costs_e52); end
  def test_costs_f52; assert_in_delta(0, (worksheet.costs_f52||0), 0.001); end
  def test_costs_g52; assert_in_delta(0, (worksheet.costs_g52||0), 0.001); end
  def test_costs_h52; assert_in_delta(0, (worksheet.costs_h52||0), 0.001); end
  def test_costs_i52; assert_in_delta(0, (worksheet.costs_i52||0), 0.001); end
  def test_costs_j52; assert_in_delta(0, (worksheet.costs_j52||0), 0.001); end
  def test_costs_k52; assert_in_delta(0, (worksheet.costs_k52||0), 0.001); end
  def test_costs_l52; assert_in_delta(0, (worksheet.costs_l52||0), 0.001); end
  def test_costs_m52; assert_in_delta(0, (worksheet.costs_m52||0), 0.001); end
  def test_costs_n52; assert_in_delta(0, (worksheet.costs_n52||0), 0.001); end
  def test_costs_p52; assert_in_delta(0, (worksheet.costs_p52||0), 0.001); end
  def test_costs_q52; assert_in_delta(0, (worksheet.costs_q52||0), 0.001); end
  def test_costs_r52; assert_in_delta(0, (worksheet.costs_r52||0), 0.001); end
  def test_costs_s52; assert_in_delta(0, (worksheet.costs_s52||0), 0.001); end
  def test_costs_t52; assert_in_delta(0, (worksheet.costs_t52||0), 0.001); end
  def test_costs_u52; assert_in_delta(0, (worksheet.costs_u52||0), 0.001); end
  def test_costs_v52; assert_in_delta(0, (worksheet.costs_v52||0), 0.001); end
  def test_costs_w52; assert_in_delta(0, (worksheet.costs_w52||0), 0.001); end
  def test_costs_x52; assert_in_delta(0, (worksheet.costs_x52||0), 0.001); end
  def test_costs_z52; assert_in_delta(0, (worksheet.costs_z52||0), 0.001); end
  def test_costs_aa52; assert_in_delta(0, (worksheet.costs_aa52||0), 0.001); end
  def test_costs_ab52; assert_in_delta(0, (worksheet.costs_ab52||0), 0.001); end
  def test_costs_ac52; assert_in_delta(0, (worksheet.costs_ac52||0), 0.001); end
  def test_costs_ad52; assert_in_delta(0, (worksheet.costs_ad52||0), 0.001); end
  def test_costs_ae52; assert_in_delta(0, (worksheet.costs_ae52||0), 0.001); end
  def test_costs_af52; assert_in_delta(0, (worksheet.costs_af52||0), 0.001); end
  def test_costs_ag52; assert_in_delta(0, (worksheet.costs_ag52||0), 0.001); end
  def test_costs_ah52; assert_in_delta(0, (worksheet.costs_ah52||0), 0.001); end
  def test_costs_aj52; assert_in_delta(0, (worksheet.costs_aj52||0), 0.001); end
  def test_costs_ak52; assert_in_delta(0, (worksheet.costs_ak52||0), 0.001); end
  def test_costs_al52; assert_in_delta(0, (worksheet.costs_al52||0), 0.001); end
  def test_costs_am52; assert_in_delta(0, (worksheet.costs_am52||0), 0.001); end
  def test_costs_an52; assert_in_delta(0, (worksheet.costs_an52||0), 0.001); end
  def test_costs_ao52; assert_in_delta(0, (worksheet.costs_ao52||0), 0.001); end
  def test_costs_ap52; assert_in_delta(0, (worksheet.costs_ap52||0), 0.001); end
  def test_costs_aq52; assert_in_delta(0, (worksheet.costs_aq52||0), 0.001); end
  def test_costs_ar52; assert_in_delta(0, (worksheet.costs_ar52||0), 0.001); end
  def test_costs_b53; assert_equal("XV.b", worksheet.costs_b53); end
  def test_costs_c53; assert_equal("Indigenous fossil-fuel production [UNUSED]", worksheet.costs_c53); end
  def test_costs_e53; assert_equal("MEUR", worksheet.costs_e53); end
  def test_costs_f53; assert_in_delta(0, (worksheet.costs_f53||0), 0.001); end
  def test_costs_g53; assert_in_delta(0, (worksheet.costs_g53||0), 0.001); end
  def test_costs_h53; assert_in_delta(0, (worksheet.costs_h53||0), 0.001); end
  def test_costs_i53; assert_in_delta(0, (worksheet.costs_i53||0), 0.001); end
  def test_costs_j53; assert_in_delta(0, (worksheet.costs_j53||0), 0.001); end
  def test_costs_k53; assert_in_delta(0, (worksheet.costs_k53||0), 0.001); end
  def test_costs_l53; assert_in_delta(0, (worksheet.costs_l53||0), 0.001); end
  def test_costs_m53; assert_in_delta(0, (worksheet.costs_m53||0), 0.001); end
  def test_costs_n53; assert_in_delta(0, (worksheet.costs_n53||0), 0.001); end
  def test_costs_p53; assert_in_delta(0, (worksheet.costs_p53||0), 0.001); end
  def test_costs_q53; assert_in_delta(0, (worksheet.costs_q53||0), 0.001); end
  def test_costs_r53; assert_in_delta(0, (worksheet.costs_r53||0), 0.001); end
  def test_costs_s53; assert_in_delta(0, (worksheet.costs_s53||0), 0.001); end
  def test_costs_t53; assert_in_delta(0, (worksheet.costs_t53||0), 0.001); end
  def test_costs_u53; assert_in_delta(0, (worksheet.costs_u53||0), 0.001); end
  def test_costs_v53; assert_in_delta(0, (worksheet.costs_v53||0), 0.001); end
  def test_costs_w53; assert_in_delta(0, (worksheet.costs_w53||0), 0.001); end
  def test_costs_x53; assert_in_delta(0, (worksheet.costs_x53||0), 0.001); end
  def test_costs_z53; assert_in_delta(0, (worksheet.costs_z53||0), 0.001); end
  def test_costs_aa53; assert_in_delta(0, (worksheet.costs_aa53||0), 0.001); end
  def test_costs_ab53; assert_in_delta(0, (worksheet.costs_ab53||0), 0.001); end
  def test_costs_ac53; assert_in_delta(0, (worksheet.costs_ac53||0), 0.001); end
  def test_costs_ad53; assert_in_delta(0, (worksheet.costs_ad53||0), 0.001); end
  def test_costs_ae53; assert_in_delta(0, (worksheet.costs_ae53||0), 0.001); end
  def test_costs_af53; assert_in_delta(0, (worksheet.costs_af53||0), 0.001); end
  def test_costs_ag53; assert_in_delta(0, (worksheet.costs_ag53||0), 0.001); end
  def test_costs_ah53; assert_in_delta(0, (worksheet.costs_ah53||0), 0.001); end
  def test_costs_aj53; assert_in_delta(0, (worksheet.costs_aj53||0), 0.001); end
  def test_costs_ak53; assert_in_delta(0, (worksheet.costs_ak53||0), 0.001); end
  def test_costs_al53; assert_in_delta(0, (worksheet.costs_al53||0), 0.001); end
  def test_costs_am53; assert_in_delta(0, (worksheet.costs_am53||0), 0.001); end
  def test_costs_an53; assert_in_delta(0, (worksheet.costs_an53||0), 0.001); end
  def test_costs_ao53; assert_in_delta(0, (worksheet.costs_ao53||0), 0.001); end
  def test_costs_ap53; assert_in_delta(0, (worksheet.costs_ap53||0), 0.001); end
  def test_costs_aq53; assert_in_delta(0, (worksheet.costs_aq53||0), 0.001); end
  def test_costs_ar53; assert_in_delta(0, (worksheet.costs_ar53||0), 0.001); end
  def test_costs_b54; assert_equal("XVI.a", worksheet.costs_b54); end
  def test_costs_c54; assert_equal("Fossil fuel transfers", worksheet.costs_c54); end
  def test_costs_d54; assert_equal("Fossil fuels", worksheet.costs_d54); end
  def test_costs_e54; assert_equal("MEUR", worksheet.costs_e54); end
  def test_costs_n54; assert_in_delta(0, (worksheet.costs_n54||0), 0.001); end
  def test_costs_x54; assert_in_delta(0, (worksheet.costs_x54||0), 0.001); end
  def test_costs_z54; assert_in_delta(0, (worksheet.costs_z54||0), 0.001); end
  def test_costs_aa54; assert_in_delta(0, (worksheet.costs_aa54||0), 0.001); end
  def test_costs_ab54; assert_in_delta(0, (worksheet.costs_ab54||0), 0.001); end
  def test_costs_ac54; assert_in_delta(0, (worksheet.costs_ac54||0), 0.001); end
  def test_costs_ad54; assert_in_delta(0, (worksheet.costs_ad54||0), 0.001); end
  def test_costs_ae54; assert_in_delta(0, (worksheet.costs_ae54||0), 0.001); end
  def test_costs_af54; assert_in_delta(0, (worksheet.costs_af54||0), 0.001); end
  def test_costs_ag54; assert_in_delta(0, (worksheet.costs_ag54||0), 0.001); end
  def test_costs_ah54; assert_in_delta(0, (worksheet.costs_ah54||0), 0.001); end
  def test_costs_f54; assert_in_epsilon(130.68568665531694, worksheet.costs_f54, 0.001); end
  def test_costs_p54; assert_in_delta(0.27820032533886085, worksheet.costs_p54, 0.001); end
  def test_costs_aj54; assert_in_epsilon(130.96388698065581, worksheet.costs_aj54, 0.001); end
  def test_costs_g54; assert_in_epsilon(88.74590378309661, worksheet.costs_g54, 0.001); end
  def test_costs_q54; assert_in_delta(0.27275794615635957, worksheet.costs_q54, 0.001); end
  def test_costs_ak54; assert_in_epsilon(89.01866172925297, worksheet.costs_ak54, 0.001); end
  def test_costs_h54; assert_in_epsilon(368.6911688786952, worksheet.costs_h54, 0.001); end
  def test_costs_r54; assert_in_delta(0.41992690334278404, worksheet.costs_r54, 0.001); end
  def test_costs_al54; assert_in_epsilon(369.111095782038, worksheet.costs_al54, 0.001); end
  def test_costs_i54; assert_in_epsilon(133.95668216634812, worksheet.costs_i54, 0.001); end
  def test_costs_s54; assert_in_delta(0.3652968493658063, worksheet.costs_s54, 0.001); end
  def test_costs_am54; assert_in_epsilon(134.32197901571394, worksheet.costs_am54, 0.001); end
  def test_costs_j54; assert_in_epsilon(116.52969494769222, worksheet.costs_j54, 0.001); end
  def test_costs_t54; assert_in_delta(0.31393493264115796, worksheet.costs_t54, 0.001); end
  def test_costs_an54; assert_in_epsilon(116.84362988033338, worksheet.costs_an54, 0.001); end
  def test_costs_k54; assert_in_epsilon(100.14524351252939, worksheet.costs_k54, 0.001); end
  def test_costs_u54; assert_in_delta(0.27015075140896794, worksheet.costs_u54, 0.001); end
  def test_costs_ao54; assert_in_epsilon(100.41539426393835, worksheet.costs_ao54, 0.001); end
  def test_costs_l54; assert_in_epsilon(86.17808969946077, worksheet.costs_l54, 0.001); end
  def test_costs_v54; assert_in_delta(0.21473451839747285, worksheet.costs_v54, 0.001); end
  def test_costs_ap54; assert_in_epsilon(86.39282421785825, worksheet.costs_ap54, 0.001); end
  def test_costs_m54; assert_in_epsilon(68.50031136879383, worksheet.costs_m54, 0.001); end
  def test_costs_w54; assert_in_delta(0.15093526455811698, worksheet.costs_w54, 0.001); end
  def test_costs_aq54; assert_in_epsilon(68.65124663335195, worksheet.costs_aq54, 0.001); end
  def test_costs_ar54; assert_in_delta(0, (worksheet.costs_ar54||0), 0.001); end
  def test_costs_b55; assert_equal("XVI.b", worksheet.costs_b55); end
  def test_costs_c55; assert_equal("Balancing imports", worksheet.costs_c55); end
  def test_costs_d55; assert_equal("Fossil fuels", worksheet.costs_d55); end
  def test_costs_e55; assert_equal("MEUR", worksheet.costs_e55); end
  def test_costs_b56; assert_equal("XVI.b.Coal", worksheet.costs_b56); end
  def test_costs_c56; assert_equal("Balancing imports - Coal", worksheet.costs_c56); end
  def test_costs_d56; assert_equal("Fossil fuels", worksheet.costs_d56); end
  def test_costs_e56; assert_equal("MEUR", worksheet.costs_e56); end
  def test_costs_f56; assert_in_delta(0, (worksheet.costs_f56||0), 0.001); end
  def test_costs_g56; assert_in_delta(0, (worksheet.costs_g56||0), 0.001); end
  def test_costs_h56; assert_in_delta(0, (worksheet.costs_h56||0), 0.001); end
  def test_costs_i56; assert_in_delta(0, (worksheet.costs_i56||0), 0.001); end
  def test_costs_j56; assert_in_delta(0, (worksheet.costs_j56||0), 0.001); end
  def test_costs_k56; assert_in_delta(0, (worksheet.costs_k56||0), 0.001); end
  def test_costs_l56; assert_in_delta(0, (worksheet.costs_l56||0), 0.001); end
  def test_costs_m56; assert_in_delta(0, (worksheet.costs_m56||0), 0.001); end
  def test_costs_n56; assert_in_delta(0, (worksheet.costs_n56||0), 0.001); end
  def test_costs_p56; assert_in_delta(0, (worksheet.costs_p56||0), 0.001); end
  def test_costs_q56; assert_in_delta(0, (worksheet.costs_q56||0), 0.001); end
  def test_costs_r56; assert_in_delta(0, (worksheet.costs_r56||0), 0.001); end
  def test_costs_s56; assert_in_delta(0, (worksheet.costs_s56||0), 0.001); end
  def test_costs_t56; assert_in_delta(0, (worksheet.costs_t56||0), 0.001); end
  def test_costs_u56; assert_in_delta(0, (worksheet.costs_u56||0), 0.001); end
  def test_costs_v56; assert_in_delta(0, (worksheet.costs_v56||0), 0.001); end
  def test_costs_w56; assert_in_delta(0, (worksheet.costs_w56||0), 0.001); end
  def test_costs_x56; assert_in_delta(0, (worksheet.costs_x56||0), 0.001); end
  def test_costs_z56; assert_in_epsilon(496.4571487082572, worksheet.costs_z56, 0.001); end
  def test_costs_aj56; assert_in_epsilon(496.4571487082572, worksheet.costs_aj56, 0.001); end
  def test_costs_aa56; assert_in_epsilon(367.2350838068587, worksheet.costs_aa56, 0.001); end
  def test_costs_ak56; assert_in_epsilon(367.2350838068587, worksheet.costs_ak56, 0.001); end
  def test_costs_ab56; assert_in_epsilon(321.43134804669705, worksheet.costs_ab56, 0.001); end
  def test_costs_al56; assert_in_epsilon(321.43134804669705, worksheet.costs_al56, 0.001); end
  def test_costs_ac56; assert_in_epsilon(145.22610731220004, worksheet.costs_ac56, 0.001); end
  def test_costs_am56; assert_in_epsilon(145.22610731220004, worksheet.costs_am56, 0.001); end
  def test_costs_ad56; assert_in_epsilon(46.148993720035676, worksheet.costs_ad56, 0.001); end
  def test_costs_an56; assert_in_epsilon(46.148993720035676, worksheet.costs_an56, 0.001); end
  def test_costs_ae56; assert_in_epsilon(26.999566080480587, worksheet.costs_ae56, 0.001); end
  def test_costs_ao56; assert_in_epsilon(26.999566080480587, worksheet.costs_ao56, 0.001); end
  def test_costs_af56; assert_in_epsilon(8.678174094438157, worksheet.costs_af56, 0.001); end
  def test_costs_ap56; assert_in_epsilon(8.678174094438157, worksheet.costs_ap56, 0.001); end
  def test_costs_ag56; assert_in_delta(-0.10407809326042039, worksheet.costs_ag56, 0.001); end
  def test_costs_aq56; assert_in_delta(-0.10407809326042039, worksheet.costs_aq56, 0.001); end
  def test_costs_ah56; assert_in_delta(0, (worksheet.costs_ah56||0), 0.001); end
  def test_costs_ar56; assert_in_delta(0, (worksheet.costs_ar56||0), 0.001); end
  def test_costs_b57; assert_equal("XVI.b.Oil", worksheet.costs_b57); end
  def test_costs_c57; assert_equal("Balancing imports - Oil", worksheet.costs_c57); end
  def test_costs_d57; assert_equal("Fossil fuels", worksheet.costs_d57); end
  def test_costs_e57; assert_equal("MEUR", worksheet.costs_e57); end
  def test_costs_f57; assert_in_delta(0, (worksheet.costs_f57||0), 0.001); end
  def test_costs_g57; assert_in_delta(0, (worksheet.costs_g57||0), 0.001); end
  def test_costs_h57; assert_in_delta(0, (worksheet.costs_h57||0), 0.001); end
  def test_costs_i57; assert_in_delta(0, (worksheet.costs_i57||0), 0.001); end
  def test_costs_j57; assert_in_delta(0, (worksheet.costs_j57||0), 0.001); end
  def test_costs_k57; assert_in_delta(0, (worksheet.costs_k57||0), 0.001); end
  def test_costs_l57; assert_in_delta(0, (worksheet.costs_l57||0), 0.001); end
  def test_costs_m57; assert_in_delta(0, (worksheet.costs_m57||0), 0.001); end
  def test_costs_n57; assert_in_delta(0, (worksheet.costs_n57||0), 0.001); end
  def test_costs_p57; assert_in_delta(0, (worksheet.costs_p57||0), 0.001); end
  def test_costs_q57; assert_in_delta(0, (worksheet.costs_q57||0), 0.001); end
  def test_costs_r57; assert_in_delta(0, (worksheet.costs_r57||0), 0.001); end
  def test_costs_s57; assert_in_delta(0, (worksheet.costs_s57||0), 0.001); end
  def test_costs_t57; assert_in_delta(0, (worksheet.costs_t57||0), 0.001); end
  def test_costs_u57; assert_in_delta(0, (worksheet.costs_u57||0), 0.001); end
  def test_costs_v57; assert_in_delta(0, (worksheet.costs_v57||0), 0.001); end
  def test_costs_w57; assert_in_delta(0, (worksheet.costs_w57||0), 0.001); end
  def test_costs_x57; assert_in_delta(0, (worksheet.costs_x57||0), 0.001); end
  def test_costs_z57; assert_in_epsilon(6922.050219160189, worksheet.costs_z57, 0.001); end
  def test_costs_aj57; assert_in_epsilon(6922.050219160189, worksheet.costs_aj57, 0.001); end
  def test_costs_aa57; assert_in_epsilon(5537.84626569498, worksheet.costs_aa57, 0.001); end
  def test_costs_ak57; assert_in_epsilon(5537.84626569498, worksheet.costs_ak57, 0.001); end
  def test_costs_ab57; assert_in_epsilon(4904.6260162494, worksheet.costs_ab57, 0.001); end
  def test_costs_al57; assert_in_epsilon(4904.6260162494, worksheet.costs_al57, 0.001); end
  def test_costs_ac57; assert_in_epsilon(4227.97050846219, worksheet.costs_ac57, 0.001); end
  def test_costs_am57; assert_in_epsilon(4227.97050846219, worksheet.costs_am57, 0.001); end
  def test_costs_ad57; assert_in_epsilon(3504.6090241666616, worksheet.costs_ad57, 0.001); end
  def test_costs_an57; assert_in_epsilon(3504.6090241666616, worksheet.costs_an57, 0.001); end
  def test_costs_ae57; assert_in_epsilon(2733.267025055835, worksheet.costs_ae57, 0.001); end
  def test_costs_ao57; assert_in_epsilon(2733.267025055835, worksheet.costs_ao57, 0.001); end
  def test_costs_af57; assert_in_epsilon(2114.153104573839, worksheet.costs_af57, 0.001); end
  def test_costs_ap57; assert_in_epsilon(2114.153104573839, worksheet.costs_ap57, 0.001); end
  def test_costs_ag57; assert_in_epsilon(1581.0136222330964, worksheet.costs_ag57, 0.001); end
  def test_costs_aq57; assert_in_epsilon(1581.0136222330964, worksheet.costs_aq57, 0.001); end
  def test_costs_ah57; assert_in_epsilon(1124.7275753496795, worksheet.costs_ah57, 0.001); end
  def test_costs_ar57; assert_in_epsilon(1124.7275753496795, worksheet.costs_ar57, 0.001); end
  def test_costs_b58; assert_equal("XVI.b.Gas", worksheet.costs_b58); end
  def test_costs_c58; assert_equal("Balancing imports - Gas", worksheet.costs_c58); end
  def test_costs_d58; assert_equal("Fossil fuels", worksheet.costs_d58); end
  def test_costs_e58; assert_equal("MEUR", worksheet.costs_e58); end
  def test_costs_f58; assert_in_delta(0, (worksheet.costs_f58||0), 0.001); end
  def test_costs_g58; assert_in_delta(0, (worksheet.costs_g58||0), 0.001); end
  def test_costs_h58; assert_in_delta(0, (worksheet.costs_h58||0), 0.001); end
  def test_costs_i58; assert_in_delta(0, (worksheet.costs_i58||0), 0.001); end
  def test_costs_j58; assert_in_delta(0, (worksheet.costs_j58||0), 0.001); end
  def test_costs_k58; assert_in_delta(0, (worksheet.costs_k58||0), 0.001); end
  def test_costs_l58; assert_in_delta(0, (worksheet.costs_l58||0), 0.001); end
  def test_costs_m58; assert_in_delta(0, (worksheet.costs_m58||0), 0.001); end
  def test_costs_n58; assert_in_delta(0, (worksheet.costs_n58||0), 0.001); end
  def test_costs_p58; assert_in_delta(0, (worksheet.costs_p58||0), 0.001); end
  def test_costs_q58; assert_in_delta(0, (worksheet.costs_q58||0), 0.001); end
  def test_costs_r58; assert_in_delta(0, (worksheet.costs_r58||0), 0.001); end
  def test_costs_s58; assert_in_delta(0, (worksheet.costs_s58||0), 0.001); end
  def test_costs_t58; assert_in_delta(0, (worksheet.costs_t58||0), 0.001); end
  def test_costs_u58; assert_in_delta(0, (worksheet.costs_u58||0), 0.001); end
  def test_costs_v58; assert_in_delta(0, (worksheet.costs_v58||0), 0.001); end
  def test_costs_w58; assert_in_delta(0, (worksheet.costs_w58||0), 0.001); end
  def test_costs_x58; assert_in_delta(0, (worksheet.costs_x58||0), 0.001); end
  def test_costs_z58; assert_in_epsilon(4743.024894495307, worksheet.costs_z58, 0.001); end
  def test_costs_aj58; assert_in_epsilon(4743.024894495307, worksheet.costs_aj58, 0.001); end
  def test_costs_aa58; assert_in_epsilon(2737.755261846031, worksheet.costs_aa58, 0.001); end
  def test_costs_ak58; assert_in_epsilon(2737.755261846031, worksheet.costs_ak58, 0.001); end
  def test_costs_ab58; assert_in_epsilon(2769.409690796128, worksheet.costs_ab58, 0.001); end
  def test_costs_al58; assert_in_epsilon(2769.409690796128, worksheet.costs_al58, 0.001); end
  def test_costs_ac58; assert_in_epsilon(4329.264041756308, worksheet.costs_ac58, 0.001); end
  def test_costs_am58; assert_in_epsilon(4329.264041756308, worksheet.costs_am58, 0.001); end
  def test_costs_ad58; assert_in_epsilon(3766.0519055510795, worksheet.costs_ad58, 0.001); end
  def test_costs_an58; assert_in_epsilon(3766.0519055510795, worksheet.costs_an58, 0.001); end
  def test_costs_ae58; assert_in_epsilon(3067.744505041997, worksheet.costs_ae58, 0.001); end
  def test_costs_ao58; assert_in_epsilon(3067.744505041997, worksheet.costs_ao58, 0.001); end
  def test_costs_af58; assert_in_epsilon(2490.195767888926, worksheet.costs_af58, 0.001); end
  def test_costs_ap58; assert_in_epsilon(2490.195767888926, worksheet.costs_ap58, 0.001); end
  def test_costs_ag58; assert_in_epsilon(1856.8591984321351, worksheet.costs_ag58, 0.001); end
  def test_costs_aq58; assert_in_epsilon(1856.8591984321351, worksheet.costs_aq58, 0.001); end
  def test_costs_ah58; assert_in_epsilon(1216.5693235119325, worksheet.costs_ah58, 0.001); end
  def test_costs_ar58; assert_in_epsilon(1216.5693235119325, worksheet.costs_ar58, 0.001); end
  def test_costs_b59; assert_equal("XVII.a", worksheet.costs_b59); end
  def test_costs_c59; assert_equal("District heating effective demand", worksheet.costs_c59); end
  def test_costs_d59; assert_equal("Buildings", worksheet.costs_d59); end
  def test_costs_e59; assert_equal("MEUR", worksheet.costs_e59); end
  def test_costs_f59; assert_in_delta(0, (worksheet.costs_f59||0), 0.001); end
  def test_costs_z59; assert_in_delta(0, (worksheet.costs_z59||0), 0.001); end
  def test_costs_aa59; assert_in_delta(0, (worksheet.costs_aa59||0), 0.001); end
  def test_costs_ab59; assert_in_delta(0, (worksheet.costs_ab59||0), 0.001); end
  def test_costs_ac59; assert_in_delta(0, (worksheet.costs_ac59||0), 0.001); end
  def test_costs_ad59; assert_in_delta(0, (worksheet.costs_ad59||0), 0.001); end
  def test_costs_ae59; assert_in_delta(0, (worksheet.costs_ae59||0), 0.001); end
  def test_costs_af59; assert_in_delta(0, (worksheet.costs_af59||0), 0.001); end
  def test_costs_ag59; assert_in_delta(0, (worksheet.costs_ag59||0), 0.001); end
  def test_costs_ah59; assert_in_delta(0, (worksheet.costs_ah59||0), 0.001); end
  def test_costs_p59; assert_in_epsilon(8.225799664099554, worksheet.costs_p59, 0.001); end
  def test_costs_aj59; assert_in_epsilon(8.225799664099554, worksheet.costs_aj59, 0.001); end
  def test_costs_g59; assert_in_epsilon(27.419332213665186, worksheet.costs_g59, 0.001); end
  def test_costs_q59; assert_in_epsilon(8.106245768817525, worksheet.costs_q59, 0.001); end
  def test_costs_ak59; assert_in_epsilon(35.52557798248271, worksheet.costs_ak59, 0.001); end
  def test_costs_h59; assert_in_epsilon(27.02081922939175, worksheet.costs_h59, 0.001); end
  def test_costs_r59; assert_in_epsilon(7.182615758444264, worksheet.costs_r59, 0.001); end
  def test_costs_al59; assert_in_epsilon(34.20343498783602, worksheet.costs_al59, 0.001); end
  def test_costs_i59; assert_in_epsilon(23.94205252814755, worksheet.costs_i59, 0.001); end
  def test_costs_s59; assert_in_epsilon(6.3101181146033, worksheet.costs_s59, 0.001); end
  def test_costs_am59; assert_in_epsilon(30.252170642750848, worksheet.costs_am59, 0.001); end
  def test_costs_j59; assert_in_epsilon(21.03372704867767, worksheet.costs_j59, 0.001); end
  def test_costs_t59; assert_in_epsilon(4.974328750178155, worksheet.costs_t59, 0.001); end
  def test_costs_an59; assert_in_epsilon(26.008055798855825, worksheet.costs_an59, 0.001); end
  def test_costs_k59; assert_in_epsilon(16.581095833927186, worksheet.costs_k59, 0.001); end
  def test_costs_u59; assert_in_epsilon(4.321007119263922, worksheet.costs_u59, 0.001); end
  def test_costs_ao59; assert_in_epsilon(20.902102953191108, worksheet.costs_ao59, 0.001); end
  def test_costs_l59; assert_in_epsilon(14.403357064213072, worksheet.costs_l59, 0.001); end
  def test_costs_v59; assert_in_epsilon(3.77223893445981, worksheet.costs_v59, 0.001); end
  def test_costs_ap59; assert_in_epsilon(18.175595998672883, worksheet.costs_ap59, 0.001); end
  def test_costs_m59; assert_in_epsilon(12.574129781532701, worksheet.costs_m59, 0.001); end
  def test_costs_w59; assert_in_epsilon(3.2766042908501762, worksheet.costs_w59, 0.001); end
  def test_costs_aq59; assert_in_epsilon(15.850734072382878, worksheet.costs_aq59, 0.001); end
  def test_costs_n59; assert_in_epsilon(10.92201430283392, worksheet.costs_n59, 0.001); end
  def test_costs_x59; assert_in_epsilon(2.7872663133743165, worksheet.costs_x59, 0.001); end
  def test_costs_ar59; assert_in_epsilon(13.709280616208236, worksheet.costs_ar59, 0.001); end
  def test_costs_b60; assert_equal("XVIII.a", worksheet.costs_b60); end
  def test_costs_c60; assert_equal("Carbone Capture [UNUSED]", worksheet.costs_c60); end
  def test_costs_d60; assert_equal("Industry", worksheet.costs_d60); end
  def test_costs_e60; assert_equal("MEUR", worksheet.costs_e60); end
  def test_costs_f60; assert_in_delta(0, (worksheet.costs_f60||0), 0.001); end
  def test_costs_g60; assert_in_delta(0, (worksheet.costs_g60||0), 0.001); end
  def test_costs_h60; assert_in_delta(0, (worksheet.costs_h60||0), 0.001); end
  def test_costs_i60; assert_in_delta(0, (worksheet.costs_i60||0), 0.001); end
  def test_costs_j60; assert_in_delta(0, (worksheet.costs_j60||0), 0.001); end
  def test_costs_k60; assert_in_delta(0, (worksheet.costs_k60||0), 0.001); end
  def test_costs_l60; assert_in_delta(0, (worksheet.costs_l60||0), 0.001); end
  def test_costs_m60; assert_in_delta(0, (worksheet.costs_m60||0), 0.001); end
  def test_costs_n60; assert_in_delta(0, (worksheet.costs_n60||0), 0.001); end
  def test_costs_p60; assert_in_delta(0, (worksheet.costs_p60||0), 0.001); end
  def test_costs_q60; assert_in_delta(0, (worksheet.costs_q60||0), 0.001); end
  def test_costs_r60; assert_in_delta(0, (worksheet.costs_r60||0), 0.001); end
  def test_costs_s60; assert_in_delta(0, (worksheet.costs_s60||0), 0.001); end
  def test_costs_t60; assert_in_delta(0, (worksheet.costs_t60||0), 0.001); end
  def test_costs_u60; assert_in_delta(0, (worksheet.costs_u60||0), 0.001); end
  def test_costs_v60; assert_in_delta(0, (worksheet.costs_v60||0), 0.001); end
  def test_costs_w60; assert_in_delta(0, (worksheet.costs_w60||0), 0.001); end
  def test_costs_x60; assert_in_delta(0, (worksheet.costs_x60||0), 0.001); end
  def test_costs_z60; assert_in_delta(0, (worksheet.costs_z60||0), 0.001); end
  def test_costs_aa60; assert_in_delta(0, (worksheet.costs_aa60||0), 0.001); end
  def test_costs_ab60; assert_in_delta(0, (worksheet.costs_ab60||0), 0.001); end
  def test_costs_ac60; assert_in_delta(0, (worksheet.costs_ac60||0), 0.001); end
  def test_costs_ad60; assert_in_delta(0, (worksheet.costs_ad60||0), 0.001); end
  def test_costs_ae60; assert_in_delta(0, (worksheet.costs_ae60||0), 0.001); end
  def test_costs_af60; assert_in_delta(0, (worksheet.costs_af60||0), 0.001); end
  def test_costs_ag60; assert_in_delta(0, (worksheet.costs_ag60||0), 0.001); end
  def test_costs_ah60; assert_in_delta(0, (worksheet.costs_ah60||0), 0.001); end
  def test_costs_aj60; assert_in_delta(0, (worksheet.costs_aj60||0), 0.001); end
  def test_costs_ak60; assert_in_delta(0, (worksheet.costs_ak60||0), 0.001); end
  def test_costs_al60; assert_in_delta(0, (worksheet.costs_al60||0), 0.001); end
  def test_costs_am60; assert_in_delta(0, (worksheet.costs_am60||0), 0.001); end
  def test_costs_an60; assert_in_delta(0, (worksheet.costs_an60||0), 0.001); end
  def test_costs_ao60; assert_in_delta(0, (worksheet.costs_ao60||0), 0.001); end
  def test_costs_ap60; assert_in_delta(0, (worksheet.costs_ap60||0), 0.001); end
  def test_costs_aq60; assert_in_delta(0, (worksheet.costs_aq60||0), 0.001); end
  def test_costs_ar60; assert_in_delta(0, (worksheet.costs_ar60||0), 0.001); end
  def test_costs_c61; assert_equal("Total", worksheet.costs_c61); end
  def test_costs_f61; assert_in_epsilon(27420.591212725434, worksheet.costs_f61, 0.001); end
  def test_costs_g61; assert_in_epsilon(29245.66798192377, worksheet.costs_g61, 0.001); end
  def test_costs_h61; assert_in_epsilon(31985.118244764704, worksheet.costs_h61, 0.001); end
  def test_costs_i61; assert_in_epsilon(30308.797500981123, worksheet.costs_i61, 0.001); end
  def test_costs_j61; assert_in_epsilon(30448.732966226577, worksheet.costs_j61, 0.001); end
  def test_costs_k61; assert_in_epsilon(29824.597555088916, worksheet.costs_k61, 0.001); end
  def test_costs_l61; assert_in_epsilon(30421.866211898592, worksheet.costs_l61, 0.001); end
  def test_costs_m61; assert_in_epsilon(30358.93788090109, worksheet.costs_m61, 0.001); end
  def test_costs_n61; assert_in_epsilon(32040.65609527327, worksheet.costs_n61, 0.001); end
  def test_costs_p61; assert_in_epsilon(8399.416242138417, worksheet.costs_p61, 0.001); end
  def test_costs_q61; assert_in_epsilon(8798.830838010372, worksheet.costs_q61, 0.001); end
  def test_costs_r61; assert_in_epsilon(8704.480240714787, worksheet.costs_r61, 0.001); end
  def test_costs_s61; assert_in_epsilon(8076.638435900283, worksheet.costs_s61, 0.001); end
  def test_costs_t61; assert_in_epsilon(7532.0235358412365, worksheet.costs_t61, 0.001); end
  def test_costs_u61; assert_in_epsilon(6823.617259711895, worksheet.costs_u61, 0.001); end
  def test_costs_v61; assert_in_epsilon(5972.840643219758, worksheet.costs_v61, 0.001); end
  def test_costs_w61; assert_in_epsilon(5013.400281113559, worksheet.costs_w61, 0.001); end
  def test_costs_x61; assert_in_epsilon(3989.546521377244, worksheet.costs_x61, 0.001); end
  def test_costs_z61; assert_in_epsilon(28134.922789157616, worksheet.costs_z61, 0.001); end
  def test_costs_aa61; assert_in_epsilon(22913.416641482618, worksheet.costs_aa61, 0.001); end
  def test_costs_ab61; assert_in_epsilon(22975.601538617215, worksheet.costs_ab61, 0.001); end
  def test_costs_ac61; assert_in_epsilon(26201.51490059702, worksheet.costs_ac61, 0.001); end
  def test_costs_ad61; assert_in_epsilon(24065.595284755596, worksheet.costs_ad61, 0.001); end
  def test_costs_ae61; assert_in_epsilon(21558.691173654744, worksheet.costs_ae61, 0.001); end
  def test_costs_af61; assert_in_epsilon(19613.528246062437, worksheet.costs_af61, 0.001); end
  def test_costs_ag61; assert_in_epsilon(17665.503923887773, worksheet.costs_ag61, 0.001); end
  def test_costs_ah61; assert_in_epsilon(15825.763452893812, worksheet.costs_ah61, 0.001); end
  def test_costs_aj61; assert_in_epsilon(63954.93024402148, worksheet.costs_aj61, 0.001); end
  def test_costs_ak61; assert_in_epsilon(60957.915461416764, worksheet.costs_ak61, 0.001); end
  def test_costs_al61; assert_in_epsilon(63665.20002409671, worksheet.costs_al61, 0.001); end
  def test_costs_am61; assert_in_epsilon(64586.95083747843, worksheet.costs_am61, 0.001); end
  def test_costs_an61; assert_in_epsilon(62046.35178682342, worksheet.costs_an61, 0.001); end
  def test_costs_ao61; assert_in_epsilon(58206.905988455546, worksheet.costs_ao61, 0.001); end
  def test_costs_ap61; assert_in_epsilon(56008.23510118078, worksheet.costs_ap61, 0.001); end
  def test_costs_aq61; assert_in_epsilon(53037.84208590242, worksheet.costs_aq61, 0.001); end
  def test_costs_ar61; assert_in_epsilon(51855.966069544316, worksheet.costs_ar61, 0.001); end
  def test_costs_at62; assert_equal("C1.Low", worksheet.costs_at62); end
  def test_costs_au62; assert_equal("Low estimate of capital costs in that year", worksheet.costs_au62); end
  def test_costs_bd62; assert_equal("C2.Low", worksheet.costs_bd62); end
  def test_costs_be62; assert_equal("Low estimate of O&M costs in that year", worksheet.costs_be62); end
  def test_costs_bn62; assert_equal("C3.Low", worksheet.costs_bn62); end
  def test_costs_bo62; assert_equal("Low estimate of fuel costs in that year", worksheet.costs_bo62); end
  def test_costs_bx62; assert_equal("Low estimate of total Cash Flows", worksheet.costs_bx62); end
  def test_costs_c63; assert_equal("Low estimate of costs", worksheet.costs_c63); end
  def test_costs_d63; assert_equal("Buildings", worksheet.costs_d63); end
  def test_costs_e63; assert_equal("MEUR", worksheet.costs_e63); end
  def test_costs_at63; assert_in_epsilon(19813.514467694695, worksheet.costs_at63, 0.001); end
  def test_costs_au63; assert_in_epsilon(12552.277516047256, worksheet.costs_au63, 0.001); end
  def test_costs_av63; assert_in_epsilon(7854.555162897577, worksheet.costs_av63, 0.001); end
  def test_costs_aw63; assert_in_epsilon(4244.178594607015, worksheet.costs_aw63, 0.001); end
  def test_costs_ax63; assert_in_epsilon(2733.949920134132, worksheet.costs_ax63, 0.001); end
  def test_costs_ay63; assert_in_epsilon(1650.026477123036, worksheet.costs_ay63, 0.001); end
  def test_costs_az63; assert_in_epsilon(1066.23393164042, worksheet.costs_az63, 0.001); end
  def test_costs_ba63; assert_in_epsilon(664.3087348906154, worksheet.costs_ba63, 0.001); end
  def test_costs_bb63; assert_in_epsilon(453.8969405063858, worksheet.costs_bb63, 0.001); end
  def test_costs_bd63; assert_in_epsilon(144.40927586254617, worksheet.costs_bd63, 0.001); end
  def test_costs_be63; assert_in_epsilon(102.30729265696856, worksheet.costs_be63, 0.001); end
  def test_costs_bf63; assert_in_epsilon(75.01794947838437, worksheet.costs_bf63, 0.001); end
  def test_costs_bg63; assert_in_epsilon(53.52206212365968, worksheet.costs_bg63, 0.001); end
  def test_costs_bh63; assert_in_epsilon(37.62269868173413, worksheet.costs_bh63, 0.001); end
  def test_costs_bi63; assert_in_epsilon(26.177748369560472, worksheet.costs_bi63, 0.001); end
  def test_costs_bj63; assert_in_epsilon(18.06757776800006, worksheet.costs_bj63, 0.001); end
  def test_costs_bk63; assert_in_epsilon(12.357086879150327, worksheet.costs_bk63, 0.001); end
  def test_costs_bl63; assert_in_epsilon(8.587209067779586, worksheet.costs_bl63, 0.001); end
  def test_costs_bn63; assert_in_epsilon(3290.5689375044926, worksheet.costs_bn63, 0.001); end
  def test_costs_bo63; assert_in_epsilon(2260.959322588362, worksheet.costs_bo63, 0.001); end
  def test_costs_bp63; assert_in_epsilon(1456.4275181019925, worksheet.costs_bp63, 0.001); end
  def test_costs_bq63; assert_in_epsilon(1006.5873949577949, worksheet.costs_bq63, 0.001); end
  def test_costs_br63; assert_in_epsilon(585.9514416282683, worksheet.costs_br63, 0.001); end
  def test_costs_bs63; assert_in_epsilon(337.69356746880067, worksheet.costs_bs63, 0.001); end
  def test_costs_bt63; assert_in_epsilon(196.86739731778218, worksheet.costs_bt63, 0.001); end
  def test_costs_bu63; assert_in_epsilon(114.91799551099324, worksheet.costs_bu63, 0.001); end
  def test_costs_bv63; assert_in_epsilon(67.8623181144192, worksheet.costs_bv63, 0.001); end
  def test_costs_aj63; assert_in_epsilon(23248.492681061733, worksheet.costs_aj63, 0.001); end
  def test_costs_bx63; assert_in_epsilon(23248.492681061733, worksheet.costs_bx63, 0.001); end
  def test_costs_by63; assert_in_epsilon(14915.544131292589, worksheet.costs_by63, 0.001); end
  def test_costs_bz63; assert_in_epsilon(9386.000630477956, worksheet.costs_bz63, 0.001); end
  def test_costs_ca63; assert_in_epsilon(5304.288051688469, worksheet.costs_ca63, 0.001); end
  def test_costs_cb63; assert_in_epsilon(3357.5240604441337, worksheet.costs_cb63, 0.001); end
  def test_costs_cc63; assert_in_epsilon(2013.8977929613973, worksheet.costs_cc63, 0.001); end
  def test_costs_cd63; assert_in_epsilon(1281.1689067262023, worksheet.costs_cd63, 0.001); end
  def test_costs_ce63; assert_in_epsilon(791.5838172807589, worksheet.costs_ce63, 0.001); end
  def test_costs_cf63; assert_in_epsilon(530.3464676885847, worksheet.costs_cf63, 0.001); end
  def test_costs_d64; assert_equal("Transport", worksheet.costs_d64); end
  def test_costs_e64; assert_equal("MEUR", worksheet.costs_e64); end
  def test_costs_at64; assert_in_epsilon(6182.807283762385, worksheet.costs_at64, 0.001); end
  def test_costs_au64; assert_in_epsilon(4580.150937728266, worksheet.costs_au64, 0.001); end
  def test_costs_av64; assert_in_epsilon(3575.3708647902267, worksheet.costs_av64, 0.001); end
  def test_costs_aw64; assert_in_epsilon(2249.3811553876426, worksheet.costs_aw64, 0.001); end
  def test_costs_ax64; assert_in_epsilon(1402.760616585954, worksheet.costs_ax64, 0.001); end
  def test_costs_ay64; assert_in_epsilon(842.0180860307565, worksheet.costs_ay64, 0.001); end
  def test_costs_az64; assert_in_epsilon(499.0614209350455, worksheet.costs_az64, 0.001); end
  def test_costs_ba64; assert_in_epsilon(287.5830693623653, worksheet.costs_ba64, 0.001); end
  def test_costs_bb64; assert_in_epsilon(146.3028931755549, worksheet.costs_bb64, 0.001); end
  def test_costs_bd64; assert_in_epsilon(7511.912661772789, worksheet.costs_bd64, 0.001); end
  def test_costs_be64; assert_in_epsilon(4855.248053256786, worksheet.costs_be64, 0.001); end
  def test_costs_bf64; assert_in_epsilon(2948.829761995972, worksheet.costs_bf64, 0.001); end
  def test_costs_bg64; assert_in_epsilon(1724.512760809005, worksheet.costs_bg64, 0.001); end
  def test_costs_bh64; assert_in_epsilon(979.2645369666609, worksheet.costs_bh64, 0.001); end
  def test_costs_bi64; assert_in_epsilon(533.6818145253536, worksheet.costs_bi64, 0.001); end
  def test_costs_bj64; assert_in_epsilon(277.89830177306345, worksheet.costs_bj64, 0.001); end
  def test_costs_bk64; assert_in_epsilon(135.11096211626023, worksheet.costs_bk64, 0.001); end
  def test_costs_bl64; assert_in_epsilon(58.71092699649383, worksheet.costs_bl64, 0.001); end
  def test_costs_bn64; assert_in_epsilon(4692.344207263488, worksheet.costs_bn64, 0.001); end
  def test_costs_bo64; assert_in_epsilon(2374.104341303344, worksheet.costs_bo64, 0.001); end
  def test_costs_bp64; assert_in_epsilon(1435.9820700700745, worksheet.costs_bp64, 0.001); end
  def test_costs_bq64; assert_in_epsilon(861.5894704008816, worksheet.costs_bq64, 0.001); end
  def test_costs_br64; assert_in_epsilon(489.72635921314816, worksheet.costs_br64, 0.001); end
  def test_costs_bs64; assert_in_epsilon(267.99244734593304, worksheet.costs_bs64, 0.001); end
  def test_costs_bt64; assert_in_epsilon(150.0119534560113, worksheet.costs_bt64, 0.001); end
  def test_costs_bu64; assert_in_epsilon(84.16607075075021, worksheet.costs_bu64, 0.001); end
  def test_costs_bv64; assert_in_epsilon(47.727379587565366, worksheet.costs_bv64, 0.001); end
  def test_costs_aj64; assert_in_epsilon(18387.064152798663, worksheet.costs_aj64, 0.001); end
  def test_costs_bx64; assert_in_epsilon(18387.064152798663, worksheet.costs_bx64, 0.001); end
  def test_costs_by64; assert_in_epsilon(11809.503332288397, worksheet.costs_by64, 0.001); end
  def test_costs_bz64; assert_in_epsilon(7960.182696856274, worksheet.costs_bz64, 0.001); end
  def test_costs_ca64; assert_in_epsilon(4835.483386597529, worksheet.costs_ca64, 0.001); end
  def test_costs_cb64; assert_in_epsilon(2871.751512765763, worksheet.costs_cb64, 0.001); end
  def test_costs_cc64; assert_in_epsilon(1643.6923479020431, worksheet.costs_cc64, 0.001); end
  def test_costs_cd64; assert_in_epsilon(926.9716761641201, worksheet.costs_cd64, 0.001); end
  def test_costs_ce64; assert_in_epsilon(506.8601022293757, worksheet.costs_ce64, 0.001); end
  def test_costs_cf64; assert_in_epsilon(252.74119975961412, worksheet.costs_cf64, 0.001); end
  def test_costs_d65; assert_equal("Industry", worksheet.costs_d65); end
  def test_costs_e65; assert_equal("MEUR", worksheet.costs_e65); end
  def test_costs_at65; assert_in_epsilon(5.532938618668466, worksheet.costs_at65, 0.001); end
  def test_costs_au65; assert_in_epsilon(135.25414635237772, worksheet.costs_au65, 0.001); end
  def test_costs_av65; assert_in_epsilon(128.7764950080987, worksheet.costs_av65, 0.001); end
  def test_costs_aw65; assert_in_epsilon(114.53968194129877, worksheet.costs_aw65, 0.001); end
  def test_costs_ax65; assert_in_epsilon(164.51960535067084, worksheet.costs_ax65, 0.001); end
  def test_costs_ay65; assert_in_epsilon(111.45337245270024, worksheet.costs_ay65, 0.001); end
  def test_costs_az65; assert_in_epsilon(74.02216654295223, worksheet.costs_az65, 0.001); end
  def test_costs_ba65; assert_in_epsilon(48.306200003354625, worksheet.costs_ba65, 0.001); end
  def test_costs_bb65; assert_in_epsilon(33.30804565764663, worksheet.costs_bb65, 0.001); end
  def test_costs_bd65; assert_in_delta(0, (worksheet.costs_bd65||0), 0.001); end
  def test_costs_be65; assert_in_delta(0, (worksheet.costs_be65||0), 0.001); end
  def test_costs_bf65; assert_in_delta(0, (worksheet.costs_bf65||0), 0.001); end
  def test_costs_bg65; assert_in_delta(0, (worksheet.costs_bg65||0), 0.001); end
  def test_costs_bh65; assert_in_delta(0, (worksheet.costs_bh65||0), 0.001); end
  def test_costs_bi65; assert_in_delta(0, (worksheet.costs_bi65||0), 0.001); end
  def test_costs_bj65; assert_in_delta(0, (worksheet.costs_bj65||0), 0.001); end
  def test_costs_bk65; assert_in_delta(0, (worksheet.costs_bk65||0), 0.001); end
  def test_costs_bl65; assert_in_delta(0, (worksheet.costs_bl65||0), 0.001); end
  def test_costs_bn65; assert_in_epsilon(5256.312363604597, worksheet.costs_bn65, 0.001); end
  def test_costs_bo65; assert_in_epsilon(3159.657220384208, worksheet.costs_bo65, 0.001); end
  def test_costs_bp65; assert_in_epsilon(1974.6049039815932, worksheet.costs_bp65, 0.001); end
  def test_costs_bq65; assert_in_epsilon(1295.9170758481328, worksheet.costs_bq65, 0.001); end
  def test_costs_br65; assert_in_epsilon(755.4368376273525, worksheet.costs_br65, 0.001); end
  def test_costs_bs65; assert_in_epsilon(433.898270428878, worksheet.costs_bs65, 0.001); end
  def test_costs_bt65; assert_in_epsilon(250.3674092501891, worksheet.costs_bt65, 0.001); end
  def test_costs_bu65; assert_in_epsilon(144.4779460823693, worksheet.costs_bu65, 0.001); end
  def test_costs_bv65; assert_in_epsilon(83.69908177336792, worksheet.costs_bv65, 0.001); end
  def test_costs_aj65; assert_in_epsilon(5261.845302223266, worksheet.costs_aj65, 0.001); end
  def test_costs_bx65; assert_in_epsilon(5261.845302223266, worksheet.costs_bx65, 0.001); end
  def test_costs_by65; assert_in_epsilon(3294.9113667365855, worksheet.costs_by65, 0.001); end
  def test_costs_bz65; assert_in_epsilon(2103.381398989692, worksheet.costs_bz65, 0.001); end
  def test_costs_ca65; assert_in_epsilon(1410.4567577894315, worksheet.costs_ca65, 0.001); end
  def test_costs_cb65; assert_in_epsilon(919.9564429780236, worksheet.costs_cb65, 0.001); end
  def test_costs_cc65; assert_in_epsilon(545.3516428815782, worksheet.costs_cc65, 0.001); end
  def test_costs_cd65; assert_in_epsilon(324.38957579314126, worksheet.costs_cd65, 0.001); end
  def test_costs_ce65; assert_in_epsilon(192.78414608572396, worksheet.costs_ce65, 0.001); end
  def test_costs_cf65; assert_in_epsilon(117.00712743101454, worksheet.costs_cf65, 0.001); end
  def test_costs_d66; assert_equal("Electricity", worksheet.costs_d66); end
  def test_costs_e66; assert_equal("MEUR", worksheet.costs_e66); end
  def test_costs_f66; assert_in_epsilon(1282.7370502283106, worksheet.costs_f66, 0.001); end
  def test_costs_at66; assert_in_epsilon(1282.7370502283106, worksheet.costs_at66, 0.001); end
  def test_costs_au66; assert_in_epsilon(833.1524104624323, worksheet.costs_au66, 0.001); end
  def test_costs_av66; assert_in_epsilon(627.7845884634004, worksheet.costs_av66, 0.001); end
  def test_costs_aw66; assert_in_epsilon(613.9388082115014, worksheet.costs_aw66, 0.001); end
  def test_costs_ax66; assert_in_epsilon(206.4609505640851, worksheet.costs_ax66, 0.001); end
  def test_costs_ay66; assert_in_epsilon(139.32146647787977, worksheet.costs_ay66, 0.001); end
  def test_costs_az66; assert_in_epsilon(98.76256546633263, worksheet.costs_az66, 0.001); end
  def test_costs_ba66; assert_in_epsilon(77.39091684291324, worksheet.costs_ba66, 0.001); end
  def test_costs_bb66; assert_in_epsilon(74.30147532112491, worksheet.costs_bb66, 0.001); end
  def test_costs_p66; assert_in_epsilon(728.3427109753727, worksheet.costs_p66, 0.001); end
  def test_costs_bd66; assert_in_epsilon(728.3427109753727, worksheet.costs_bd66, 0.001); end
  def test_costs_be66; assert_in_epsilon(495.4262032438017, worksheet.costs_be66, 0.001); end
  def test_costs_bf66; assert_in_epsilon(324.76909718635216, worksheet.costs_bf66, 0.001); end
  def test_costs_bg66; assert_in_epsilon(150.3302186286851, worksheet.costs_bg66, 0.001); end
  def test_costs_bh66; assert_in_epsilon(99.37697038501213, worksheet.costs_bh66, 0.001); end
  def test_costs_bi66; assert_in_epsilon(67.77864164577693, worksheet.costs_bi66, 0.001); end
  def test_costs_bj66; assert_in_epsilon(44.942891471356255, worksheet.costs_bj66, 0.001); end
  def test_costs_bk66; assert_in_epsilon(30.03922163502595, worksheet.costs_bk66, 0.001); end
  def test_costs_bl66; assert_in_epsilon(20.28127653098105, worksheet.costs_bl66, 0.001); end
  def test_costs_z66; assert_in_epsilon(2231.4218931324526, worksheet.costs_z66, 0.001); end
  def test_costs_bn66; assert_in_epsilon(2231.4218931324526, worksheet.costs_bn66, 0.001); end
  def test_costs_bo66; assert_in_epsilon(577.0524822105154, worksheet.costs_bo66, 0.001); end
  def test_costs_bp66; assert_in_epsilon(454.89094908691317, worksheet.costs_bp66, 0.001); end
  def test_costs_bq66; assert_in_epsilon(679.5677646402963, worksheet.costs_bq66, 0.001); end
  def test_costs_br66; assert_in_epsilon(400.91186584120385, worksheet.costs_br66, 0.001); end
  def test_costs_bs66; assert_in_epsilon(230.37460781666329, worksheet.costs_bs66, 0.001); end
  def test_costs_bt66; assert_in_epsilon(135.66748375040214, worksheet.costs_bt66, 0.001); end
  def test_costs_bu66; assert_in_epsilon(77.33882877699877, worksheet.costs_bu66, 0.001); end
  def test_costs_bv66; assert_in_epsilon(43.460657769208545, worksheet.costs_bv66, 0.001); end
  def test_costs_aj66; assert_in_epsilon(4242.501654336136, worksheet.costs_aj66, 0.001); end
  def test_costs_bx66; assert_in_epsilon(4242.501654336136, worksheet.costs_bx66, 0.001); end
  def test_costs_by66; assert_in_epsilon(1905.6310959167497, worksheet.costs_by66, 0.001); end
  def test_costs_bz66; assert_in_epsilon(1407.4446347366659, worksheet.costs_bz66, 0.001); end
  def test_costs_ca66; assert_in_epsilon(1443.8367914804828, worksheet.costs_ca66, 0.001); end
  def test_costs_cb66; assert_in_epsilon(706.749786790301, worksheet.costs_cb66, 0.001); end
  def test_costs_cc66; assert_in_epsilon(437.4747159403199, worksheet.costs_cc66, 0.001); end
  def test_costs_cd66; assert_in_epsilon(279.372940688091, worksheet.costs_cd66, 0.001); end
  def test_costs_ce66; assert_in_epsilon(184.76896725493802, worksheet.costs_ce66, 0.001); end
  def test_costs_cf66; assert_in_epsilon(138.0434096213145, worksheet.costs_cf66, 0.001); end
  def test_costs_d67; assert_equal("Fossil fuels", worksheet.costs_d67); end
  def test_costs_e67; assert_equal("MEUR", worksheet.costs_e67); end
  def test_costs_f67; assert_in_epsilon(130.68568665531694, worksheet.costs_f67, 0.001); end
  def test_costs_at67; assert_in_epsilon(130.68568665531694, worksheet.costs_at67, 0.001); end
  def test_costs_au67; assert_in_epsilon(55.10422399308081, worksheet.costs_au67, 0.001); end
  def test_costs_av67; assert_in_epsilon(142.14640603311105, worksheet.costs_av67, 0.001); end
  def test_costs_aw67; assert_in_epsilon(32.06816467049574, worksheet.costs_aw67, 0.001); end
  def test_costs_ax67; assert_in_epsilon(17.321396629571673, worksheet.costs_ax67, 0.001); end
  def test_costs_ay67; assert_in_epsilon(9.243005212674047, worksheet.costs_ay67, 0.001); end
  def test_costs_az67; assert_in_epsilon(4.938741646934381, worksheet.costs_az67, 0.001); end
  def test_costs_ba67; assert_in_epsilon(2.4375221173573105, worksheet.costs_ba67, 0.001); end
  def test_costs_bb67; assert_in_delta(0, (worksheet.costs_bb67||0), 0.001); end
  def test_costs_p67; assert_in_delta(0.27820032533886085, worksheet.costs_p67, 0.001); end
  def test_costs_bd67; assert_in_delta(0.27820032533886085, worksheet.costs_bd67, 0.001); end
  def test_costs_be67; assert_in_delta(0.16936122480230453, worksheet.costs_be67, 0.001); end
  def test_costs_bf67; assert_in_delta(0.16189999963473387, worksheet.costs_bf67, 0.001); end
  def test_costs_bg67; assert_in_delta(0.08744916139777895, worksheet.costs_bg67, 0.001); end
  def test_costs_bh67; assert_in_delta(0.04666442735129682, worksheet.costs_bh67, 0.001); end
  def test_costs_bi67; assert_in_delta(0.024933833259574587, worksheet.costs_bi67, 0.001); end
  def test_costs_bj67; assert_in_delta(0.012306124593182205, worksheet.costs_bj67, 0.001); end
  def test_costs_bk67; assert_in_delta(0.005370895960878686, worksheet.costs_bk67, 0.001); end
  def test_costs_bl67; assert_in_delta(0, (worksheet.costs_bl67||0), 0.001); end
  def test_costs_z67; assert_in_epsilon(12161.532262363755, worksheet.costs_z67, 0.001); end
  def test_costs_bn67; assert_in_epsilon(12161.532262363755, worksheet.costs_bn67, 0.001); end
  def test_costs_bo67; assert_in_epsilon(5366.5215437022225, worksheet.costs_bo67, 0.001); end
  def test_costs_bp67; assert_in_epsilon(3082.5986689457054, worksheet.costs_bp67, 0.001); end
  def test_costs_bq67; assert_in_epsilon(2083.2998913607908, worksheet.costs_bq67, 0.001); end
  def test_costs_br67; assert_in_epsilon(1087.5971725828465, worksheet.costs_br67, 0.001); end
  def test_costs_bs67; assert_in_epsilon(537.9021015087825, worksheet.costs_bs67, 0.001); end
  def test_costs_bt67; assert_in_epsilon(264.36590637735287, worksheet.costs_bt67, 0.001); end
  def test_costs_bu67; assert_in_epsilon(122.32991612642886, worksheet.costs_bu67, 0.001); end
  def test_costs_bv67; assert_in_epsilon(51.73078676326901, worksheet.costs_bv67, 0.001); end
  def test_costs_aj67; assert_in_epsilon(12292.49614934441, worksheet.costs_aj67, 0.001); end
  def test_costs_bx67; assert_in_epsilon(12292.49614934441, worksheet.costs_bx67, 0.001); end
  def test_costs_by67; assert_in_epsilon(5421.7951289201055, worksheet.costs_by67, 0.001); end
  def test_costs_bz67; assert_in_epsilon(3224.9069749784517, worksheet.costs_bz67, 0.001); end
  def test_costs_ca67; assert_in_epsilon(2115.455505192685, worksheet.costs_ca67, 0.001); end
  def test_costs_cb67; assert_in_epsilon(1104.9652336397696, worksheet.costs_cb67, 0.001); end
  def test_costs_cc67; assert_in_epsilon(547.1700405547161, worksheet.costs_cc67, 0.001); end
  def test_costs_cd67; assert_in_epsilon(269.3169541488805, worksheet.costs_cd67, 0.001); end
  def test_costs_ce67; assert_in_epsilon(124.77280913974704, worksheet.costs_ce67, 0.001); end
  def test_costs_cf67; assert_in_epsilon(51.73078676326901, worksheet.costs_cf67, 0.001); end
  def test_costs_d68; assert_equal("Bioenergy", worksheet.costs_d68); end
  def test_costs_e68; assert_equal("MEUR", worksheet.costs_e68); end
  def test_costs_f68; assert_in_epsilon(5.313785766056852, worksheet.costs_f68, 0.001); end
  def test_costs_at68; assert_in_epsilon(5.313785766056852, worksheet.costs_at68, 0.001); end
  def test_costs_au68; assert_in_epsilon(3.31962250145696, worksheet.costs_au68, 0.001); end
  def test_costs_av68; assert_in_epsilon(3.0141836866900658, worksheet.costs_av68, 0.001); end
  def test_costs_aw68; assert_in_epsilon(1.5787428568952881, worksheet.costs_aw68, 0.001); end
  def test_costs_ax68; assert_in_delta(0.9976475738437846, worksheet.costs_ax68, 0.001); end
  def test_costs_ay68; assert_in_delta(0.6285942791083696, worksheet.costs_ay68, 0.001); end
  def test_costs_az68; assert_in_delta(0.41431509390644317, worksheet.costs_az68, 0.001); end
  def test_costs_ba68; assert_in_delta(0.26912136508979134, worksheet.costs_ba68, 0.001); end
  def test_costs_bb68; assert_in_delta(0.12663971305677796, worksheet.costs_bb68, 0.001); end
  def test_costs_p68; assert_in_epsilon(14.473393202369596, worksheet.costs_p68, 0.001); end
  def test_costs_bd68; assert_in_epsilon(14.473393202369596, worksheet.costs_bd68, 0.001); end
  def test_costs_be68; assert_in_epsilon(10.230774928733851, worksheet.costs_be68, 0.001); end
  def test_costs_bf68; assert_in_epsilon(7.1752361191953575, worksheet.costs_bf68, 0.001); end
  def test_costs_bg68; assert_in_epsilon(5.030536461175478, worksheet.costs_bg68, 0.001); end
  def test_costs_bh68; assert_in_epsilon(3.276434269920176, worksheet.costs_bh68, 0.001); end
  def test_costs_bi68; assert_in_epsilon(2.1294277894012095, worksheet.costs_bi68, 0.001); end
  def test_costs_bj68; assert_in_epsilon(1.3737792243289255, worksheet.costs_bj68, 0.001); end
  def test_costs_bk68; assert_in_delta(0.8847091453070741, worksheet.costs_bk68, 0.001); end
  def test_costs_bl68; assert_in_delta(0.5693311543551366, worksheet.costs_bl68, 0.001); end
  def test_costs_z68; assert_in_epsilon(502.7431252888349, worksheet.costs_z68, 0.001); end
  def test_costs_bn68; assert_in_epsilon(502.7431252888349, worksheet.costs_bn68, 0.001); end
  def test_costs_bo68; assert_in_epsilon(474.56667029368623, worksheet.costs_bo68, 0.001); end
  def test_costs_bp68; assert_in_epsilon(435.6209759925497, worksheet.costs_bp68, 0.001); end
  def test_costs_bq68; assert_in_epsilon(328.27018837505835, worksheet.costs_bq68, 0.001); end
  def test_costs_br68; assert_in_epsilon(242.94160966034676, worksheet.costs_br68, 0.001); end
  def test_costs_bs68; assert_in_epsilon(170.79032722678826, worksheet.costs_bs68, 0.001); end
  def test_costs_bt68; assert_in_epsilon(118.61929133125437, worksheet.costs_bt68, 0.001); end
  def test_costs_bu68; assert_in_epsilon(79.57736055073278, worksheet.costs_bu68, 0.001); end
  def test_costs_bv68; assert_in_epsilon(51.12893938929076, worksheet.costs_bv68, 0.001); end
  def test_costs_aj68; assert_in_epsilon(522.5303042572613, worksheet.costs_aj68, 0.001); end
  def test_costs_bx68; assert_in_epsilon(522.5303042572613, worksheet.costs_bx68, 0.001); end
  def test_costs_by68; assert_in_epsilon(488.117067723877, worksheet.costs_by68, 0.001); end
  def test_costs_bz68; assert_in_epsilon(445.8103957984351, worksheet.costs_bz68, 0.001); end
  def test_costs_ca68; assert_in_epsilon(334.87946769312913, worksheet.costs_ca68, 0.001); end
  def test_costs_cb68; assert_in_epsilon(247.2156915041107, worksheet.costs_cb68, 0.001); end
  def test_costs_cc68; assert_in_epsilon(173.54834929529784, worksheet.costs_cc68, 0.001); end
  def test_costs_cd68; assert_in_epsilon(120.40738564948974, worksheet.costs_cd68, 0.001); end
  def test_costs_ce68; assert_in_epsilon(80.73119106112965, worksheet.costs_ce68, 0.001); end
  def test_costs_cf68; assert_in_epsilon(51.82491025670268, worksheet.costs_cf68, 0.001); end
  def test_costs_d69; assert_equal("Electricity (ex/im)ports", worksheet.costs_d69); end
  def test_costs_e69; assert_equal("MEUR", worksheet.costs_e69); end
  def test_costs_at69; assert_in_delta(0, (worksheet.costs_at69||0), 0.001); end
  def test_costs_au69; assert_in_delta(0, (worksheet.costs_au69||0), 0.001); end
  def test_costs_av69; assert_in_delta(0, (worksheet.costs_av69||0), 0.001); end
  def test_costs_aw69; assert_in_delta(0, (worksheet.costs_aw69||0), 0.001); end
  def test_costs_ax69; assert_in_delta(0, (worksheet.costs_ax69||0), 0.001); end
  def test_costs_ay69; assert_in_delta(0, (worksheet.costs_ay69||0), 0.001); end
  def test_costs_az69; assert_in_delta(0, (worksheet.costs_az69||0), 0.001); end
  def test_costs_ba69; assert_in_delta(0, (worksheet.costs_ba69||0), 0.001); end
  def test_costs_bb69; assert_in_delta(0, (worksheet.costs_bb69||0), 0.001); end
  def test_costs_bd69; assert_in_delta(0, (worksheet.costs_bd69||0), 0.001); end
  def test_costs_be69; assert_in_delta(0, (worksheet.costs_be69||0), 0.001); end
  def test_costs_bf69; assert_in_delta(0, (worksheet.costs_bf69||0), 0.001); end
  def test_costs_bg69; assert_in_delta(0, (worksheet.costs_bg69||0), 0.001); end
  def test_costs_bh69; assert_in_delta(0, (worksheet.costs_bh69||0), 0.001); end
  def test_costs_bi69; assert_in_delta(0, (worksheet.costs_bi69||0), 0.001); end
  def test_costs_bj69; assert_in_delta(0, (worksheet.costs_bj69||0), 0.001); end
  def test_costs_bk69; assert_in_delta(0, (worksheet.costs_bk69||0), 0.001); end
  def test_costs_bl69; assert_in_delta(0, (worksheet.costs_bl69||0), 0.001); end
  def test_costs_bn69; assert_in_delta(0, (worksheet.costs_bn69||0), 0.001); end
  def test_costs_bo69; assert_in_epsilon(14.567396352708142, worksheet.costs_bo69, 0.001); end
  def test_costs_bp69; assert_in_epsilon(17.963907641857233, worksheet.costs_bp69, 0.001); end
  def test_costs_bq69; assert_in_epsilon(17.202563047637227, worksheet.costs_bq69, 0.001); end
  def test_costs_br69; assert_in_epsilon(14.632107133626622, worksheet.costs_br69, 0.001); end
  def test_costs_bs69; assert_in_epsilon(11.12959946767956, worksheet.costs_bs69, 0.001); end
  def test_costs_bt69; assert_in_epsilon(8.123487430440559, worksheet.costs_bt69, 0.001); end
  def test_costs_bu69; assert_in_epsilon(5.802988754380308, worksheet.costs_bu69, 0.001); end
  def test_costs_bv69; assert_in_epsilon(4.059943047963063, worksheet.costs_bv69, 0.001); end
  def test_costs_aj69; assert_in_delta(0, (worksheet.costs_aj69||0), 0.001); end
  def test_costs_bx69; assert_in_delta(0, (worksheet.costs_bx69||0), 0.001); end
  def test_costs_by69; assert_in_epsilon(14.567396352708142, worksheet.costs_by69, 0.001); end
  def test_costs_bz69; assert_in_epsilon(17.963907641857233, worksheet.costs_bz69, 0.001); end
  def test_costs_ca69; assert_in_epsilon(17.202563047637227, worksheet.costs_ca69, 0.001); end
  def test_costs_cb69; assert_in_epsilon(14.632107133626622, worksheet.costs_cb69, 0.001); end
  def test_costs_cc69; assert_in_epsilon(11.12959946767956, worksheet.costs_cc69, 0.001); end
  def test_costs_cd69; assert_in_epsilon(8.123487430440559, worksheet.costs_cd69, 0.001); end
  def test_costs_ce69; assert_in_epsilon(5.802988754380308, worksheet.costs_ce69, 0.001); end
  def test_costs_cf69; assert_in_epsilon(4.059943047963063, worksheet.costs_cf69, 0.001); end
  def test_costs_d70; assert_equal("Total", worksheet.costs_d70); end
  def test_costs_e70; assert_equal("MEUR", worksheet.costs_e70); end
  def test_costs_f70; assert_in_epsilon(27420.591212725434, worksheet.costs_f70, 0.001); end
  def test_costs_at70; assert_in_epsilon(27420.591212725434, worksheet.costs_at70, 0.001); end
  def test_costs_au70; assert_in_epsilon(18159.25885708487, worksheet.costs_au70, 0.001); end
  def test_costs_av70; assert_in_epsilon(12331.647700879104, worksheet.costs_av70, 0.001); end
  def test_costs_aw70; assert_in_epsilon(7255.685147674848, worksheet.costs_aw70, 0.001); end
  def test_costs_ax70; assert_in_epsilon(4526.0101368382575, worksheet.costs_ax70, 0.001); end
  def test_costs_ay70; assert_in_epsilon(2752.6910015761546, worksheet.costs_ay70, 0.001); end
  def test_costs_az70; assert_in_epsilon(1743.4331413255911, worksheet.costs_az70, 0.001); end
  def test_costs_ba70; assert_in_epsilon(1080.2955645816955, worksheet.costs_ba70, 0.001); end
  def test_costs_bb70; assert_in_epsilon(707.9359943737691, worksheet.costs_bb70, 0.001); end
  def test_costs_p70; assert_in_epsilon(8399.416242138417, worksheet.costs_p70, 0.001); end
  def test_costs_bd70; assert_in_epsilon(8399.416242138417, worksheet.costs_bd70, 0.001); end
  def test_costs_be70; assert_in_epsilon(5463.381685311093, worksheet.costs_be70, 0.001); end
  def test_costs_bf70; assert_in_epsilon(3355.953944779539, worksheet.costs_bf70, 0.001); end
  def test_costs_bg70; assert_in_epsilon(1933.4830271839232, worksheet.costs_bg70, 0.001); end
  def test_costs_bh70; assert_in_epsilon(1119.5873047306786, worksheet.costs_bh70, 0.001); end
  def test_costs_bi70; assert_in_epsilon(629.7925661633518, worksheet.costs_bi70, 0.001); end
  def test_costs_bj70; assert_in_epsilon(342.2948563613419, worksheet.costs_bj70, 0.001); end
  def test_costs_bk70; assert_in_epsilon(178.39735067170443, worksheet.costs_bk70, 0.001); end
  def test_costs_bl70; assert_in_epsilon(88.14874374960961, worksheet.costs_bl70, 0.001); end
  def test_costs_z70; assert_in_epsilon(28134.92278915762, worksheet.costs_z70, 0.001); end
  def test_costs_bn70; assert_in_epsilon(28134.92278915762, worksheet.costs_bn70, 0.001); end
  def test_costs_bo70; assert_in_epsilon(14227.428976835045, worksheet.costs_bo70, 0.001); end
  def test_costs_bp70; assert_in_epsilon(8858.088993820686, worksheet.costs_bp70, 0.001); end
  def test_costs_bq70; assert_in_epsilon(6272.434348630592, worksheet.costs_bq70, 0.001); end
  def test_costs_br70; assert_in_epsilon(3577.197393686792, worksheet.costs_br70, 0.001); end
  def test_costs_bs70; assert_in_epsilon(1989.780921263525, worksheet.costs_bs70, 0.001); end
  def test_costs_bt70; assert_in_epsilon(1124.0229289134325, worksheet.costs_bt70, 0.001); end
  def test_costs_bu70; assert_in_epsilon(628.6111065526535, worksheet.costs_bu70, 0.001); end
  def test_costs_bv70; assert_in_epsilon(349.66910644508386, worksheet.costs_bv70, 0.001); end
  def test_costs_aj70; assert_in_epsilon(63954.93024402147, worksheet.costs_aj70, 0.001); end
  def test_costs_bx70; assert_in_epsilon(63954.93024402147, worksheet.costs_bx70, 0.001); end
  def test_costs_by70; assert_in_epsilon(37850.06951923101, worksheet.costs_by70, 0.001); end
  def test_costs_bz70; assert_in_epsilon(24545.690639479333, worksheet.costs_bz70, 0.001); end
  def test_costs_ca70; assert_in_epsilon(15461.602523489362, worksheet.costs_ca70, 0.001); end
  def test_costs_cb70; assert_in_epsilon(9222.794835255729, worksheet.costs_cb70, 0.001); end
  def test_costs_cc70; assert_in_epsilon(5372.264489003033, worksheet.costs_cc70, 0.001); end
  def test_costs_cd70; assert_in_epsilon(3209.7509266003653, worksheet.costs_cd70, 0.001); end
  def test_costs_ce70; assert_in_epsilon(1887.3040218060537, worksheet.costs_ce70, 0.001); end
  def test_costs_cf70; assert_in_epsilon(1145.7538445684625, worksheet.costs_cf70, 0.001); end
  def test_costs_f72; assert_equal("C1.High", worksheet.costs_f72); end
  def test_costs_g72; assert_equal("High estimate of capital costs in that year", worksheet.costs_g72); end
  def test_costs_p72; assert_equal("C2.High", worksheet.costs_p72); end
  def test_costs_q72; assert_equal("High estimate of O&M costs in that year", worksheet.costs_q72); end
  def test_costs_z72; assert_equal("C3.High", worksheet.costs_z72); end
  def test_costs_aa72; assert_equal("High estimate of fuel costs in that year", worksheet.costs_aa72); end
  def test_costs_aj72; assert_equal("High estimate of total cash flows", worksheet.costs_aj72); end
  def test_costs_b73; assert_equal("I.a", worksheet.costs_b73); end
  def test_costs_c73; assert_equal("Biomass and gas power stations", worksheet.costs_c73); end
  def test_costs_d73; assert_equal("Electricity", worksheet.costs_d73); end
  def test_costs_e73; assert_equal("MEUR", worksheet.costs_e73); end
  def test_costs_f73; assert_in_delta(0, (worksheet.costs_f73||0), 0.001); end
  def test_costs_b74; assert_equal("I.b", worksheet.costs_b74); end
  def test_costs_c74; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c74); end
  def test_costs_d74; assert_equal("Electricity", worksheet.costs_d74); end
  def test_costs_e74; assert_equal("MEUR", worksheet.costs_e74); end
  def test_costs_f74; assert_in_delta(0, (worksheet.costs_f74||0), 0.001); end
  def test_costs_p74; assert_in_delta(0, (worksheet.costs_p74||0), 0.001); end
  def test_costs_b75; assert_equal("II.a", worksheet.costs_b75); end
  def test_costs_c75; assert_equal("Nuclear power", worksheet.costs_c75); end
  def test_costs_d75; assert_equal("Electricity", worksheet.costs_d75); end
  def test_costs_e75; assert_equal("MEUR", worksheet.costs_e75); end
  def test_costs_f75; assert_in_delta(0, (worksheet.costs_f75||0), 0.001); end
  def test_costs_b76; assert_equal("III.a.1", worksheet.costs_b76); end
  def test_costs_c76; assert_equal("Onshore wind", worksheet.costs_c76); end
  def test_costs_d76; assert_equal("Electricity", worksheet.costs_d76); end
  def test_costs_e76; assert_equal("MEUR", worksheet.costs_e76); end
  def test_costs_p76; assert_in_epsilon(22.862499999999997, worksheet.costs_p76, 0.001); end
  def test_costs_z76; assert_in_delta(0, (worksheet.costs_z76||0), 0.001); end
  def test_costs_b77; assert_equal("III.a.2", worksheet.costs_b77); end
  def test_costs_c77; assert_equal("Offshore wind", worksheet.costs_c77); end
  def test_costs_d77; assert_equal("Electricity", worksheet.costs_d77); end
  def test_costs_e77; assert_equal("MEUR", worksheet.costs_e77); end
  def test_costs_p77; assert_in_epsilon(19.95, worksheet.costs_p77, 0.001); end
  def test_costs_z77; assert_in_delta(0, (worksheet.costs_z77||0), 0.001); end
  def test_costs_b78; assert_equal("III.b", worksheet.costs_b78); end
  def test_costs_c78; assert_equal("Hydroelectric power stations", worksheet.costs_c78); end
  def test_costs_d78; assert_equal("Electricity", worksheet.costs_d78); end
  def test_costs_e78; assert_equal("MEUR", worksheet.costs_e78); end
  def test_costs_f78; assert_in_delta(0, (worksheet.costs_f78||0), 0.001); end
  def test_costs_b79; assert_equal("III.c", worksheet.costs_b79); end
  def test_costs_c79; assert_equal("Tidal and Wave [UNUSED]", worksheet.costs_c79); end
  def test_costs_d79; assert_equal("Electricity", worksheet.costs_d79); end
  def test_costs_e79; assert_equal("MEUR", worksheet.costs_e79); end
  def test_costs_z79; assert_in_delta(0, (worksheet.costs_z79||0), 0.001); end
  def test_costs_aa79; assert_in_delta(0, (worksheet.costs_aa79||0), 0.001); end
  def test_costs_ab79; assert_in_delta(0, (worksheet.costs_ab79||0), 0.001); end
  def test_costs_ac79; assert_in_delta(0, (worksheet.costs_ac79||0), 0.001); end
  def test_costs_ad79; assert_in_delta(0, (worksheet.costs_ad79||0), 0.001); end
  def test_costs_ae79; assert_in_delta(0, (worksheet.costs_ae79||0), 0.001); end
  def test_costs_af79; assert_in_delta(0, (worksheet.costs_af79||0), 0.001); end
  def test_costs_ag79; assert_in_delta(0, (worksheet.costs_ag79||0), 0.001); end
  def test_costs_ah79; assert_in_delta(0, (worksheet.costs_ah79||0), 0.001); end
  def test_costs_b80; assert_equal("III.d", worksheet.costs_b80); end
  def test_costs_c80; assert_equal("Geothermal electricity", worksheet.costs_c80); end
  def test_costs_d80; assert_equal("Electricity", worksheet.costs_d80); end
  def test_costs_e80; assert_equal("MEUR", worksheet.costs_e80); end
  def test_costs_f80; assert_in_delta(0, (worksheet.costs_f80||0), 0.001); end
  def test_costs_z80; assert_in_delta(0, (worksheet.costs_z80||0), 0.001); end
  def test_costs_aa80; assert_in_delta(0, (worksheet.costs_aa80||0), 0.001); end
  def test_costs_ab80; assert_in_delta(0, (worksheet.costs_ab80||0), 0.001); end
  def test_costs_ac80; assert_in_delta(0, (worksheet.costs_ac80||0), 0.001); end
  def test_costs_ad80; assert_in_delta(0, (worksheet.costs_ad80||0), 0.001); end
  def test_costs_ae80; assert_in_delta(0, (worksheet.costs_ae80||0), 0.001); end
  def test_costs_af80; assert_in_delta(0, (worksheet.costs_af80||0), 0.001); end
  def test_costs_ag80; assert_in_delta(0, (worksheet.costs_ag80||0), 0.001); end
  def test_costs_ah80; assert_in_delta(0, (worksheet.costs_ah80||0), 0.001); end
  def test_costs_b81; assert_equal("III.e", worksheet.costs_b81); end
  def test_costs_c81; assert_equal("Tidal [UNUSED]", worksheet.costs_c81); end
  def test_costs_d81; assert_equal("Electricity", worksheet.costs_d81); end
  def test_costs_e81; assert_equal("MEUR", worksheet.costs_e81); end
  def test_costs_f81; assert_in_delta(0, (worksheet.costs_f81||0), 0.001); end
  def test_costs_g81; assert_in_delta(0, (worksheet.costs_g81||0), 0.001); end
  def test_costs_h81; assert_in_delta(0, (worksheet.costs_h81||0), 0.001); end
  def test_costs_i81; assert_in_delta(0, (worksheet.costs_i81||0), 0.001); end
  def test_costs_j81; assert_in_delta(0, (worksheet.costs_j81||0), 0.001); end
  def test_costs_k81; assert_in_delta(0, (worksheet.costs_k81||0), 0.001); end
  def test_costs_l81; assert_in_delta(0, (worksheet.costs_l81||0), 0.001); end
  def test_costs_m81; assert_in_delta(0, (worksheet.costs_m81||0), 0.001); end
  def test_costs_n81; assert_in_delta(0, (worksheet.costs_n81||0), 0.001); end
  def test_costs_p81; assert_in_delta(0, (worksheet.costs_p81||0), 0.001); end
  def test_costs_q81; assert_in_delta(0, (worksheet.costs_q81||0), 0.001); end
  def test_costs_r81; assert_in_delta(0, (worksheet.costs_r81||0), 0.001); end
  def test_costs_s81; assert_in_delta(0, (worksheet.costs_s81||0), 0.001); end
  def test_costs_t81; assert_in_delta(0, (worksheet.costs_t81||0), 0.001); end
  def test_costs_u81; assert_in_delta(0, (worksheet.costs_u81||0), 0.001); end
  def test_costs_v81; assert_in_delta(0, (worksheet.costs_v81||0), 0.001); end
  def test_costs_w81; assert_in_delta(0, (worksheet.costs_w81||0), 0.001); end
  def test_costs_x81; assert_in_delta(0, (worksheet.costs_x81||0), 0.001); end
  def test_costs_z81; assert_in_delta(0, (worksheet.costs_z81||0), 0.001); end
  def test_costs_aa81; assert_in_delta(0, (worksheet.costs_aa81||0), 0.001); end
  def test_costs_ab81; assert_in_delta(0, (worksheet.costs_ab81||0), 0.001); end
  def test_costs_ac81; assert_in_delta(0, (worksheet.costs_ac81||0), 0.001); end
  def test_costs_ad81; assert_in_delta(0, (worksheet.costs_ad81||0), 0.001); end
  def test_costs_ae81; assert_in_delta(0, (worksheet.costs_ae81||0), 0.001); end
  def test_costs_af81; assert_in_delta(0, (worksheet.costs_af81||0), 0.001); end
  def test_costs_ag81; assert_in_delta(0, (worksheet.costs_ag81||0), 0.001); end
  def test_costs_ah81; assert_in_delta(0, (worksheet.costs_ah81||0), 0.001); end
  def test_costs_aj81; assert_in_delta(0, (worksheet.costs_aj81||0), 0.001); end
  def test_costs_ak81; assert_in_delta(0, (worksheet.costs_ak81||0), 0.001); end
  def test_costs_al81; assert_in_delta(0, (worksheet.costs_al81||0), 0.001); end
  def test_costs_am81; assert_in_delta(0, (worksheet.costs_am81||0), 0.001); end
  def test_costs_an81; assert_in_delta(0, (worksheet.costs_an81||0), 0.001); end
  def test_costs_ao81; assert_in_delta(0, (worksheet.costs_ao81||0), 0.001); end
  def test_costs_ap81; assert_in_delta(0, (worksheet.costs_ap81||0), 0.001); end
  def test_costs_aq81; assert_in_delta(0, (worksheet.costs_aq81||0), 0.001); end
  def test_costs_ar81; assert_in_delta(0, (worksheet.costs_ar81||0), 0.001); end
  def test_costs_b82; assert_equal("IV.a", worksheet.costs_b82); end
  def test_costs_c82; assert_equal("Solar PV", worksheet.costs_c82); end
  def test_costs_d82; assert_equal("Electricity", worksheet.costs_d82); end
  def test_costs_e82; assert_equal("MEUR", worksheet.costs_e82); end
  def test_costs_p82; assert_in_epsilon(26.592499999999998, worksheet.costs_p82, 0.001); end
  def test_costs_z82; assert_in_delta(0, (worksheet.costs_z82||0), 0.001); end
  def test_costs_b83; assert_equal("IV.b", worksheet.costs_b83); end
  def test_costs_c83; assert_equal("Solar thermal", worksheet.costs_c83); end
  def test_costs_d83; assert_equal("Buildings", worksheet.costs_d83); end
  def test_costs_e83; assert_equal("MEUR", worksheet.costs_e83); end
  def test_costs_f83; assert_in_delta(0, (worksheet.costs_f83||0), 0.001); end
  def test_costs_p83; assert_in_delta(0, (worksheet.costs_p83||0), 0.001); end
  def test_costs_z83; assert_in_delta(0, (worksheet.costs_z83||0), 0.001); end
  def test_costs_aj83; assert_in_delta(0, (worksheet.costs_aj83||0), 0.001); end
  def test_costs_g83; assert_in_epsilon(53.987328807015786, worksheet.costs_g83, 0.001); end
  def test_costs_q83; assert_in_epsilon(5.398732880701579, worksheet.costs_q83, 0.001); end
  def test_costs_aa83; assert_in_epsilon(4.053109672244376, worksheet.costs_aa83, 0.001); end
  def test_costs_ak83; assert_in_epsilon(63.43917135996174, worksheet.costs_ak83, 0.001); end
  def test_costs_h83; assert_in_epsilon(62.12986305970402, worksheet.costs_h83, 0.001); end
  def test_costs_r83; assert_in_epsilon(11.437566513100963, worksheet.costs_r83, 0.001); end
  def test_costs_ab83; assert_in_epsilon(9.925568167477786, worksheet.costs_ab83, 0.001); end
  def test_costs_al83; assert_in_epsilon(83.49299774028277, worksheet.costs_al83, 0.001); end
  def test_costs_i83; assert_in_epsilon(66.78182669124949, worksheet.costs_i83, 0.001); end
  def test_costs_s83; assert_in_epsilon(17.734496965122542, worksheet.costs_s83, 0.001); end
  def test_costs_ac83; assert_in_epsilon(20.647980711049385, worksheet.costs_ac83, 0.001); end
  def test_costs_am83; assert_in_epsilon(105.16430436742142, worksheet.costs_am83, 0.001); end
  def test_costs_j83; assert_in_epsilon(72.69799285608364, worksheet.costs_j83, 0.001); end
  def test_costs_t83; assert_in_epsilon(24.392761872623236, worksheet.costs_t83, 0.001); end
  def test_costs_ad83; assert_in_epsilon(28.691116743621915, worksheet.costs_ad83, 0.001); end
  def test_costs_an83; assert_in_epsilon(125.7818714723288, worksheet.costs_an83, 0.001); end
  def test_costs_k83; assert_in_epsilon(123.72356138228783, worksheet.costs_k83, 0.001); end
  def test_costs_u83; assert_in_epsilon(31.19182575755511, worksheet.costs_u83, 0.001); end
  def test_costs_ae83; assert_in_epsilon(36.35000022559563, worksheet.costs_ae83, 0.001); end
  def test_costs_ao83; assert_in_epsilon(191.26538736543858, worksheet.costs_ao83, 0.001); end
  def test_costs_l83; assert_in_epsilon(180.96138193792663, worksheet.costs_l83, 0.001); end
  def test_costs_v83; assert_in_epsilon(38.2201535008249, worksheet.costs_v83, 0.001); end
  def test_costs_af83; assert_in_epsilon(44.85442436594884, worksheet.costs_af83, 0.001); end
  def test_costs_ap83; assert_in_epsilon(264.0359598047004, worksheet.costs_ap83, 0.001); end
  def test_costs_m83; assert_in_epsilon(238.05254595818667, worksheet.costs_m83, 0.001); end
  def test_costs_w83; assert_in_epsilon(45.26704274007384, worksheet.costs_w83, 0.001); end
  def test_costs_ag83; assert_in_epsilon(53.88105806570469, worksheet.costs_ag83, 0.001); end
  def test_costs_aq83; assert_in_epsilon(337.2006467639652, worksheet.costs_aq83, 0.001); end
  def test_costs_n83; assert_in_epsilon(256.1502804146064, worksheet.costs_n83, 0.001); end
  def test_costs_x83; assert_in_epsilon(48.16330746682589, worksheet.costs_x83, 0.001); end
  def test_costs_ah83; assert_in_epsilon(58.21458291366271, worksheet.costs_ah83, 0.001); end
  def test_costs_ar83; assert_in_epsilon(362.528170795095, worksheet.costs_ar83, 0.001); end
  def test_costs_b84; assert_equal("IV.c", worksheet.costs_b84); end
  def test_costs_c84; assert_equal("Small-scale wind  [UNUSED]", worksheet.costs_c84); end
  def test_costs_d84; assert_equal("Electricity", worksheet.costs_d84); end
  def test_costs_e84; assert_equal("MEUR", worksheet.costs_e84); end
  def test_costs_z84; assert_in_delta(0, (worksheet.costs_z84||0), 0.001); end
  def test_costs_aa84; assert_in_delta(0, (worksheet.costs_aa84||0), 0.001); end
  def test_costs_ab84; assert_in_delta(0, (worksheet.costs_ab84||0), 0.001); end
  def test_costs_ac84; assert_in_delta(0, (worksheet.costs_ac84||0), 0.001); end
  def test_costs_ad84; assert_in_delta(0, (worksheet.costs_ad84||0), 0.001); end
  def test_costs_ae84; assert_in_delta(0, (worksheet.costs_ae84||0), 0.001); end
  def test_costs_af84; assert_in_delta(0, (worksheet.costs_af84||0), 0.001); end
  def test_costs_ag84; assert_in_delta(0, (worksheet.costs_ag84||0), 0.001); end
  def test_costs_ah84; assert_in_delta(0, (worksheet.costs_ah84||0), 0.001); end
  def test_costs_f84; assert_in_delta(0, (worksheet.costs_f84||0), 0.001); end
  def test_costs_p84; assert_in_delta(0, (worksheet.costs_p84||0), 0.001); end
  def test_costs_aj84; assert_in_delta(0, (worksheet.costs_aj84||0), 0.001); end
  def test_costs_g84; assert_in_delta(0, (worksheet.costs_g84||0), 0.001); end
  def test_costs_q84; assert_in_delta(0, (worksheet.costs_q84||0), 0.001); end
  def test_costs_ak84; assert_in_delta(0, (worksheet.costs_ak84||0), 0.001); end
  def test_costs_h84; assert_in_delta(0, (worksheet.costs_h84||0), 0.001); end
  def test_costs_r84; assert_in_delta(0, (worksheet.costs_r84||0), 0.001); end
  def test_costs_al84; assert_in_delta(0, (worksheet.costs_al84||0), 0.001); end
  def test_costs_i84; assert_in_delta(0, (worksheet.costs_i84||0), 0.001); end
  def test_costs_s84; assert_in_delta(0, (worksheet.costs_s84||0), 0.001); end
  def test_costs_am84; assert_in_delta(0, (worksheet.costs_am84||0), 0.001); end
  def test_costs_j84; assert_in_delta(0, (worksheet.costs_j84||0), 0.001); end
  def test_costs_t84; assert_in_delta(0, (worksheet.costs_t84||0), 0.001); end
  def test_costs_an84; assert_in_delta(0, (worksheet.costs_an84||0), 0.001); end
  def test_costs_k84; assert_in_delta(0, (worksheet.costs_k84||0), 0.001); end
  def test_costs_u84; assert_in_delta(0, (worksheet.costs_u84||0), 0.001); end
  def test_costs_ao84; assert_in_delta(0, (worksheet.costs_ao84||0), 0.001); end
  def test_costs_l84; assert_in_delta(0, (worksheet.costs_l84||0), 0.001); end
  def test_costs_v84; assert_in_delta(0, (worksheet.costs_v84||0), 0.001); end
  def test_costs_ap84; assert_in_delta(0, (worksheet.costs_ap84||0), 0.001); end
  def test_costs_m84; assert_in_delta(0, (worksheet.costs_m84||0), 0.001); end
  def test_costs_w84; assert_in_delta(0, (worksheet.costs_w84||0), 0.001); end
  def test_costs_aq84; assert_in_delta(0, (worksheet.costs_aq84||0), 0.001); end
  def test_costs_n84; assert_in_delta(0, (worksheet.costs_n84||0), 0.001); end
  def test_costs_x84; assert_in_delta(0, (worksheet.costs_x84||0), 0.001); end
  def test_costs_ar84; assert_in_delta(0, (worksheet.costs_ar84||0), 0.001); end
  def test_costs_b85; assert_equal("V.a", worksheet.costs_b85); end
  def test_costs_c85; assert_equal("Types of fuel from Biomass", worksheet.costs_c85); end
  def test_costs_d85; assert_equal("Bioenergy", worksheet.costs_d85); end
  def test_costs_e85; assert_equal("MEUR", worksheet.costs_e85); end
  def test_costs_z85; assert_in_delta(0, (worksheet.costs_z85||0), 0.001); end
  def test_costs_aa85; assert_in_delta(0, (worksheet.costs_aa85||0), 0.001); end
  def test_costs_ab85; assert_in_delta(0, (worksheet.costs_ab85||0), 0.001); end
  def test_costs_ac85; assert_in_delta(0, (worksheet.costs_ac85||0), 0.001); end
  def test_costs_ad85; assert_in_delta(0, (worksheet.costs_ad85||0), 0.001); end
  def test_costs_ae85; assert_in_delta(0, (worksheet.costs_ae85||0), 0.001); end
  def test_costs_af85; assert_in_delta(0, (worksheet.costs_af85||0), 0.001); end
  def test_costs_ag85; assert_in_delta(0, (worksheet.costs_ag85||0), 0.001); end
  def test_costs_ah85; assert_in_delta(0, (worksheet.costs_ah85||0), 0.001); end
  def test_costs_f85; assert_in_epsilon(304.0528144477293, worksheet.costs_f85, 0.001); end
  def test_costs_p85; assert_in_epsilon(463.11355294507564, worksheet.costs_p85, 0.001); end
  def test_costs_aj85; assert_in_epsilon(767.1663673928049, worksheet.costs_aj85, 0.001); end
  def test_costs_g85; assert_in_epsilon(334.874602295874, worksheet.costs_g85, 0.001); end
  def test_costs_q85; assert_in_epsilon(556.8394253631992, worksheet.costs_q85, 0.001); end
  def test_costs_ak85; assert_in_epsilon(891.7140276590733, worksheet.costs_ak85, 0.001); end
  def test_costs_h85; assert_in_epsilon(477.5008567281716, worksheet.costs_h85, 0.001); end
  def test_costs_r85; assert_in_epsilon(650.0694507211024, worksheet.costs_r85, 0.001); end
  def test_costs_al85; assert_in_epsilon(1127.570307449274, worksheet.costs_al85, 0.001); end
  def test_costs_i85; assert_in_epsilon(382.1654977714695, worksheet.costs_i85, 0.001); end
  def test_costs_s85; assert_in_epsilon(773.3172009839833, worksheet.costs_s85, 0.001); end
  def test_costs_am85; assert_in_epsilon(1155.482698755453, worksheet.costs_am85, 0.001); end
  def test_costs_j85; assert_in_epsilon(407.3552959204061, worksheet.costs_j85, 0.001); end
  def test_costs_t85; assert_in_epsilon(832.793094206336, worksheet.costs_t85, 0.001); end
  def test_costs_an85; assert_in_epsilon(1240.148390126742, worksheet.costs_an85, 0.001); end
  def test_costs_k85; assert_in_epsilon(428.42445566093164, worksheet.costs_k85, 0.001); end
  def test_costs_u85; assert_in_epsilon(891.6958266809164, worksheet.costs_u85, 0.001); end
  def test_costs_ao85; assert_in_epsilon(1320.120282341848, worksheet.costs_ao85, 0.001); end
  def test_costs_l85; assert_in_epsilon(452.41332941045783, worksheet.costs_l85, 0.001); end
  def test_costs_v85; assert_in_epsilon(946.4365138858295, worksheet.costs_v85, 0.001); end
  def test_costs_ap85; assert_in_epsilon(1398.8498432962874, worksheet.costs_ap85, 0.001); end
  def test_costs_m85; assert_in_epsilon(476.657325801163, worksheet.costs_m85, 0.001); end
  def test_costs_w85; assert_in_epsilon(1000.1073359750304, worksheet.costs_w85, 0.001); end
  def test_costs_aq85; assert_in_epsilon(1476.7646617761934, worksheet.costs_aq85, 0.001); end
  def test_costs_n85; assert_in_epsilon(359.12746141199665, worksheet.costs_n85, 0.001); end
  def test_costs_x85; assert_in_epsilon(1053.663533381538, worksheet.costs_x85, 0.001); end
  def test_costs_ar85; assert_in_epsilon(1412.7909947935345, worksheet.costs_ar85, 0.001); end
  def test_costs_b86; assert_equal("V.b", worksheet.costs_b86); end
  def test_costs_c86; assert_equal("Bioenergy imports", worksheet.costs_c86); end
  def test_costs_d86; assert_equal("Bioenergy", worksheet.costs_d86); end
  def test_costs_e86; assert_equal("MEUR", worksheet.costs_e86); end
  def test_costs_f86; assert_in_delta(0, (worksheet.costs_f86||0), 0.001); end
  def test_costs_g86; assert_in_delta(0, (worksheet.costs_g86||0), 0.001); end
  def test_costs_h86; assert_in_delta(0, (worksheet.costs_h86||0), 0.001); end
  def test_costs_i86; assert_in_delta(0, (worksheet.costs_i86||0), 0.001); end
  def test_costs_j86; assert_in_delta(0, (worksheet.costs_j86||0), 0.001); end
  def test_costs_k86; assert_in_delta(0, (worksheet.costs_k86||0), 0.001); end
  def test_costs_l86; assert_in_delta(0, (worksheet.costs_l86||0), 0.001); end
  def test_costs_m86; assert_in_delta(0, (worksheet.costs_m86||0), 0.001); end
  def test_costs_n86; assert_in_delta(0, (worksheet.costs_n86||0), 0.001); end
  def test_costs_p86; assert_in_delta(0, (worksheet.costs_p86||0), 0.001); end
  def test_costs_q86; assert_in_delta(0, (worksheet.costs_q86||0), 0.001); end
  def test_costs_r86; assert_in_delta(0, (worksheet.costs_r86||0), 0.001); end
  def test_costs_s86; assert_in_delta(0, (worksheet.costs_s86||0), 0.001); end
  def test_costs_t86; assert_in_delta(0, (worksheet.costs_t86||0), 0.001); end
  def test_costs_u86; assert_in_delta(0, (worksheet.costs_u86||0), 0.001); end
  def test_costs_v86; assert_in_delta(0, (worksheet.costs_v86||0), 0.001); end
  def test_costs_w86; assert_in_delta(0, (worksheet.costs_w86||0), 0.001); end
  def test_costs_x86; assert_in_delta(0, (worksheet.costs_x86||0), 0.001); end
  def test_costs_z86; assert_in_epsilon(567.3121331036136, worksheet.costs_z86, 0.001); end
  def test_costs_aj86; assert_in_epsilon(567.3121331036136, worksheet.costs_aj86, 0.001); end
  def test_costs_aa86; assert_in_epsilon(881.4151865387289, worksheet.costs_aa86, 0.001); end
  def test_costs_ak86; assert_in_epsilon(881.4151865387289, worksheet.costs_ak86, 0.001); end
  def test_costs_ab86; assert_in_epsilon(1251.3458141357398, worksheet.costs_ab86, 0.001); end
  def test_costs_al86; assert_in_epsilon(1251.3458141357398, worksheet.costs_al86, 0.001); end
  def test_costs_ac86; assert_in_epsilon(1572.020511606858, worksheet.costs_ac86, 0.001); end
  def test_costs_am86; assert_in_epsilon(1572.020511606858, worksheet.costs_am86, 0.001); end
  def test_costs_ad86; assert_in_epsilon(1923.3553730587514, worksheet.costs_ad86, 0.001); end
  def test_costs_an86; assert_in_epsilon(1923.3553730587514, worksheet.costs_an86, 0.001); end
  def test_costs_ae86; assert_in_epsilon(2212.376214861226, worksheet.costs_ae86, 0.001); end
  def test_costs_ao86; assert_in_epsilon(2212.376214861226, worksheet.costs_ao86, 0.001); end
  def test_costs_af86; assert_in_epsilon(2506.8958904211186, worksheet.costs_af86, 0.001); end
  def test_costs_ap86; assert_in_epsilon(2506.8958904211186, worksheet.costs_ap86, 0.001); end
  def test_costs_ag86; assert_in_epsilon(2730.9204845710015, worksheet.costs_ag86, 0.001); end
  def test_costs_aq86; assert_in_epsilon(2730.9204845710015, worksheet.costs_aq86, 0.001); end
  def test_costs_ah86; assert_in_epsilon(2910.296892043735, worksheet.costs_ah86, 0.001); end
  def test_costs_ar86; assert_in_epsilon(2910.296892043735, worksheet.costs_ar86, 0.001); end
  def test_costs_b87; assert_equal("VI.a", worksheet.costs_b87); end
  def test_costs_c87; assert_equal("Agriculture and land use", worksheet.costs_c87); end
  def test_costs_d87; assert_equal("Bioenergy", worksheet.costs_d87); end
  def test_costs_e87; assert_equal("MEUR", worksheet.costs_e87); end
  def test_costs_f87; assert_in_delta(0, (worksheet.costs_f87||0), 0.001); end
  def test_costs_g87; assert_in_delta(0, (worksheet.costs_g87||0), 0.001); end
  def test_costs_h87; assert_in_delta(0, (worksheet.costs_h87||0), 0.001); end
  def test_costs_i87; assert_in_delta(0, (worksheet.costs_i87||0), 0.001); end
  def test_costs_j87; assert_in_delta(0, (worksheet.costs_j87||0), 0.001); end
  def test_costs_k87; assert_in_delta(0, (worksheet.costs_k87||0), 0.001); end
  def test_costs_l87; assert_in_delta(0, (worksheet.costs_l87||0), 0.001); end
  def test_costs_m87; assert_in_delta(0, (worksheet.costs_m87||0), 0.001); end
  def test_costs_n87; assert_in_delta(0, (worksheet.costs_n87||0), 0.001); end
  def test_costs_p87; assert_in_delta(0, (worksheet.costs_p87||0), 0.001); end
  def test_costs_z87; assert_in_epsilon(39.04474669333333, worksheet.costs_z87, 0.001); end
  def test_costs_aj87; assert_in_epsilon(39.04474669333333, worksheet.costs_aj87, 0.001); end
  def test_costs_q87; assert_in_epsilon(3.7156646555340425, worksheet.costs_q87, 0.001); end
  def test_costs_aa87; assert_in_epsilon(310.7909945907155, worksheet.costs_aa87, 0.001); end
  def test_costs_ak87; assert_in_epsilon(314.50665924624957, worksheet.costs_ak87, 0.001); end
  def test_costs_r87; assert_in_epsilon(7.373465122932538, worksheet.costs_r87, 0.001); end
  def test_costs_ab87; assert_in_epsilon(576.421595770839, worksheet.costs_ab87, 0.001); end
  def test_costs_al87; assert_in_epsilon(583.7950608937715, worksheet.costs_al87, 0.001); end
  def test_costs_s87; assert_in_epsilon(10.974302523415819, worksheet.costs_s87, 0.001); end
  def test_costs_ac87; assert_in_epsilon(590.8319560996595, worksheet.costs_ac87, 0.001); end
  def test_costs_am87; assert_in_epsilon(601.8062586230753, worksheet.costs_am87, 0.001); end
  def test_costs_t87; assert_in_epsilon(14.519063945008826, worksheet.costs_t87, 0.001); end
  def test_costs_ad87; assert_in_epsilon(603.8272076221937, worksheet.costs_ad87, 0.001); end
  def test_costs_an87; assert_in_epsilon(618.3462715672025, worksheet.costs_an87, 0.001); end
  def test_costs_u87; assert_in_epsilon(14.519063945008826, worksheet.costs_u87, 0.001); end
  def test_costs_ae87; assert_in_epsilon(615.2891704470857, worksheet.costs_ae87, 0.001); end
  def test_costs_ao87; assert_in_epsilon(629.8082343920945, worksheet.costs_ao87, 0.001); end
  def test_costs_v87; assert_in_epsilon(14.519063945008826, worksheet.costs_v87, 0.001); end
  def test_costs_af87; assert_in_epsilon(625.5690083330883, worksheet.costs_af87, 0.001); end
  def test_costs_ap87; assert_in_epsilon(640.0880722780971, worksheet.costs_ap87, 0.001); end
  def test_costs_w87; assert_in_epsilon(14.519063945008826, worksheet.costs_w87, 0.001); end
  def test_costs_ag87; assert_in_epsilon(634.6346142397804, worksheet.costs_ag87, 0.001); end
  def test_costs_aq87; assert_in_epsilon(649.1536781847892, worksheet.costs_aq87, 0.001); end
  def test_costs_x87; assert_in_epsilon(14.519063945008826, worksheet.costs_x87, 0.001); end
  def test_costs_ah87; assert_in_epsilon(550.1547305428236, worksheet.costs_ah87, 0.001); end
  def test_costs_ar87; assert_in_epsilon(564.6737944878324, worksheet.costs_ar87, 0.001); end
  def test_costs_b88; assert_equal("VI.b", worksheet.costs_b88); end
  def test_costs_c88; assert_equal("Volume of Waste & Recycling", worksheet.costs_c88); end
  def test_costs_d88; assert_equal("Bioenergy", worksheet.costs_d88); end
  def test_costs_e88; assert_equal("MEUR", worksheet.costs_e88); end
  def test_costs_z88; assert_in_delta(0, (worksheet.costs_z88||0), 0.001); end
  def test_costs_aa88; assert_in_delta(0, (worksheet.costs_aa88||0), 0.001); end
  def test_costs_ab88; assert_in_delta(0, (worksheet.costs_ab88||0), 0.001); end
  def test_costs_ac88; assert_in_delta(0, (worksheet.costs_ac88||0), 0.001); end
  def test_costs_ad88; assert_in_delta(0, (worksheet.costs_ad88||0), 0.001); end
  def test_costs_ae88; assert_in_delta(0, (worksheet.costs_ae88||0), 0.001); end
  def test_costs_af88; assert_in_delta(0, (worksheet.costs_af88||0), 0.001); end
  def test_costs_ag88; assert_in_delta(0, (worksheet.costs_ag88||0), 0.001); end
  def test_costs_ah88; assert_in_delta(0, (worksheet.costs_ah88||0), 0.001); end
  def test_costs_f88; assert_in_epsilon(1.4334116506630497, worksheet.costs_f88, 0.001); end
  def test_costs_p88; assert_in_epsilon(3.105268104920256, worksheet.costs_p88, 0.001); end
  def test_costs_aj88; assert_in_epsilon(4.538679755583306, worksheet.costs_aj88, 0.001); end
  def test_costs_g88; assert_in_epsilon(4.714745212546937, worksheet.costs_g88, 0.001); end
  def test_costs_q88; assert_in_epsilon(1.9177684855560553, worksheet.costs_q88, 0.001); end
  def test_costs_ak88; assert_in_epsilon(6.632513698102993, worksheet.costs_ak88, 0.001); end
  def test_costs_h88; assert_in_epsilon(3.9758187190117877, worksheet.costs_h88, 0.001); end
  def test_costs_r88; assert_in_epsilon(1.1829839323364815, worksheet.costs_r88, 0.001); end
  def test_costs_al88; assert_in_epsilon(5.158802651348269, worksheet.costs_al88, 0.001); end
  def test_costs_i88; assert_in_epsilon(4.123022200801271, worksheet.costs_i88, 0.001); end
  def test_costs_s88; assert_in_delta(0.82384027031658, worksheet.costs_s88, 0.001); end
  def test_costs_am88; assert_in_epsilon(4.946862471117852, worksheet.costs_am88, 0.001); end
  def test_costs_j88; assert_in_epsilon(2.0863550722425805, worksheet.costs_j88, 0.001); end
  def test_costs_t88; assert_in_delta(0.5060159013175731, worksheet.costs_t88, 0.001); end
  def test_costs_an88; assert_in_epsilon(2.5923709735601537, worksheet.costs_an88, 0.001); end
  def test_costs_k88; assert_in_epsilon(1.211045879839007, worksheet.costs_k88, 0.001); end
  def test_costs_u88; assert_in_delta(0.26471968978641186, worksheet.costs_u88, 0.001); end
  def test_costs_ao88; assert_in_epsilon(1.4757655696254188, worksheet.costs_ao88, 0.001); end
  def test_costs_l88; assert_in_delta(0.2955893282325185, worksheet.costs_l88, 0.001); end
  def test_costs_v88; assert_in_delta(0.09995163572309589, worksheet.costs_v88, 0.001); end
  def test_costs_ap88; assert_in_delta(0.3955409639556144, worksheet.costs_ap88, 0.001); end
  def test_costs_m88; assert_in_delta(-0.9875000000000004, worksheet.costs_m88, 0.001); end
  def test_costs_w88; assert_in_delta(0.02640512983904631, worksheet.costs_w88, 0.001); end
  def test_costs_aq88; assert_in_delta(-0.9610948701609541, worksheet.costs_aq88, 0.001); end
  def test_costs_n88; assert_in_epsilon(-2.0749999999999993, worksheet.costs_n88, 0.001); end
  def test_costs_x88; assert_in_delta(0, (worksheet.costs_x88||0), 0.001); end
  def test_costs_ar88; assert_in_epsilon(-2.0749999999999993, worksheet.costs_ar88, 0.001); end
  def test_costs_b89; assert_equal("VI.c", worksheet.costs_b89); end
  def test_costs_c89; assert_equal("Marine algae  [UNUSED]", worksheet.costs_c89); end
  def test_costs_d89; assert_equal("Bioenergy", worksheet.costs_d89); end
  def test_costs_e89; assert_equal("MEUR", worksheet.costs_e89); end
  def test_costs_f89; assert_in_delta(0, (worksheet.costs_f89||0), 0.001); end
  def test_costs_g89; assert_in_delta(0, (worksheet.costs_g89||0), 0.001); end
  def test_costs_h89; assert_in_delta(0, (worksheet.costs_h89||0), 0.001); end
  def test_costs_i89; assert_in_delta(0, (worksheet.costs_i89||0), 0.001); end
  def test_costs_j89; assert_in_delta(0, (worksheet.costs_j89||0), 0.001); end
  def test_costs_k89; assert_in_delta(0, (worksheet.costs_k89||0), 0.001); end
  def test_costs_l89; assert_in_delta(0, (worksheet.costs_l89||0), 0.001); end
  def test_costs_m89; assert_in_delta(0, (worksheet.costs_m89||0), 0.001); end
  def test_costs_n89; assert_in_delta(0, (worksheet.costs_n89||0), 0.001); end
  def test_costs_p89; assert_in_delta(0, (worksheet.costs_p89||0), 0.001); end
  def test_costs_q89; assert_in_delta(0, (worksheet.costs_q89||0), 0.001); end
  def test_costs_r89; assert_in_delta(0, (worksheet.costs_r89||0), 0.001); end
  def test_costs_s89; assert_in_delta(0, (worksheet.costs_s89||0), 0.001); end
  def test_costs_t89; assert_in_delta(0, (worksheet.costs_t89||0), 0.001); end
  def test_costs_u89; assert_in_delta(0, (worksheet.costs_u89||0), 0.001); end
  def test_costs_v89; assert_in_delta(0, (worksheet.costs_v89||0), 0.001); end
  def test_costs_w89; assert_in_delta(0, (worksheet.costs_w89||0), 0.001); end
  def test_costs_x89; assert_in_delta(0, (worksheet.costs_x89||0), 0.001); end
  def test_costs_z89; assert_in_delta(0, (worksheet.costs_z89||0), 0.001); end
  def test_costs_aj89; assert_in_delta(0, (worksheet.costs_aj89||0), 0.001); end
  def test_costs_aa89; assert_in_delta(0, (worksheet.costs_aa89||0), 0.001); end
  def test_costs_ak89; assert_in_delta(0, (worksheet.costs_ak89||0), 0.001); end
  def test_costs_ab89; assert_in_delta(0, (worksheet.costs_ab89||0), 0.001); end
  def test_costs_al89; assert_in_delta(0, (worksheet.costs_al89||0), 0.001); end
  def test_costs_ac89; assert_in_delta(0, (worksheet.costs_ac89||0), 0.001); end
  def test_costs_am89; assert_in_delta(0, (worksheet.costs_am89||0), 0.001); end
  def test_costs_ad89; assert_in_delta(0, (worksheet.costs_ad89||0), 0.001); end
  def test_costs_an89; assert_in_delta(0, (worksheet.costs_an89||0), 0.001); end
  def test_costs_ae89; assert_in_delta(0, (worksheet.costs_ae89||0), 0.001); end
  def test_costs_ao89; assert_in_delta(0, (worksheet.costs_ao89||0), 0.001); end
  def test_costs_af89; assert_in_delta(0, (worksheet.costs_af89||0), 0.001); end
  def test_costs_ap89; assert_in_delta(0, (worksheet.costs_ap89||0), 0.001); end
  def test_costs_ag89; assert_in_delta(0, (worksheet.costs_ag89||0), 0.001); end
  def test_costs_aq89; assert_in_delta(0, (worksheet.costs_aq89||0), 0.001); end
  def test_costs_ah89; assert_in_delta(0, (worksheet.costs_ah89||0), 0.001); end
  def test_costs_ar89; assert_in_delta(0, (worksheet.costs_ar89||0), 0.001); end
  def test_costs_b90; assert_equal("VII.a.Imports", worksheet.costs_b90); end
  def test_costs_c90; assert_equal("Electricity imports", worksheet.costs_c90); end
  def test_costs_d90; assert_equal("Electricity (ex/im)ports", worksheet.costs_d90); end
  def test_costs_e90; assert_equal("MEUR", worksheet.costs_e90); end
  def test_costs_f90; assert_in_delta(0, (worksheet.costs_f90||0), 0.001); end
  def test_costs_g90; assert_in_delta(0, (worksheet.costs_g90||0), 0.001); end
  def test_costs_h90; assert_in_delta(0, (worksheet.costs_h90||0), 0.001); end
  def test_costs_i90; assert_in_delta(0, (worksheet.costs_i90||0), 0.001); end
  def test_costs_j90; assert_in_delta(0, (worksheet.costs_j90||0), 0.001); end
  def test_costs_k90; assert_in_delta(0, (worksheet.costs_k90||0), 0.001); end
  def test_costs_l90; assert_in_delta(0, (worksheet.costs_l90||0), 0.001); end
  def test_costs_m90; assert_in_delta(0, (worksheet.costs_m90||0), 0.001); end
  def test_costs_n90; assert_in_delta(0, (worksheet.costs_n90||0), 0.001); end
  def test_costs_p90; assert_in_delta(0, (worksheet.costs_p90||0), 0.001); end
  def test_costs_q90; assert_in_delta(0, (worksheet.costs_q90||0), 0.001); end
  def test_costs_r90; assert_in_delta(0, (worksheet.costs_r90||0), 0.001); end
  def test_costs_s90; assert_in_delta(0, (worksheet.costs_s90||0), 0.001); end
  def test_costs_t90; assert_in_delta(0, (worksheet.costs_t90||0), 0.001); end
  def test_costs_u90; assert_in_delta(0, (worksheet.costs_u90||0), 0.001); end
  def test_costs_v90; assert_in_delta(0, (worksheet.costs_v90||0), 0.001); end
  def test_costs_w90; assert_in_delta(0, (worksheet.costs_w90||0), 0.001); end
  def test_costs_x90; assert_in_delta(0, (worksheet.costs_x90||0), 0.001); end
  def test_costs_b91; assert_equal("VII.a.Exports", worksheet.costs_b91); end
  def test_costs_c91; assert_equal("Electricity exports", worksheet.costs_c91); end
  def test_costs_d91; assert_equal("Electricity (ex/im)ports", worksheet.costs_d91); end
  def test_costs_e91; assert_equal("MEUR", worksheet.costs_e91); end
  def test_costs_f91; assert_in_delta(0, (worksheet.costs_f91||0), 0.001); end
  def test_costs_z91; assert_in_delta(0, (worksheet.costs_z91||0), 0.001); end
  def test_costs_aa91; assert_in_delta(0, (worksheet.costs_aa91||0), 0.001); end
  def test_costs_ab91; assert_in_delta(0, (worksheet.costs_ab91||0), 0.001); end
  def test_costs_ac91; assert_in_delta(0, (worksheet.costs_ac91||0), 0.001); end
  def test_costs_ad91; assert_in_delta(0, (worksheet.costs_ad91||0), 0.001); end
  def test_costs_ae91; assert_in_delta(0, (worksheet.costs_ae91||0), 0.001); end
  def test_costs_af91; assert_in_delta(0, (worksheet.costs_af91||0), 0.001); end
  def test_costs_ag91; assert_in_delta(0, (worksheet.costs_ag91||0), 0.001); end
  def test_costs_ah91; assert_in_delta(0, (worksheet.costs_ah91||0), 0.001); end
  def test_costs_b92; assert_equal("VII.b", worksheet.costs_b92); end
  def test_costs_c92; assert_equal("Electricity grid distribution", worksheet.costs_c92); end
  def test_costs_d92; assert_equal("Electricity", worksheet.costs_d92); end
  def test_costs_e92; assert_equal("MEUR", worksheet.costs_e92); end
  def test_costs_z92; assert_in_delta(0, (worksheet.costs_z92||0), 0.001); end
  def test_costs_aa92; assert_in_delta(0, (worksheet.costs_aa92||0), 0.001); end
  def test_costs_ab92; assert_in_delta(0, (worksheet.costs_ab92||0), 0.001); end
  def test_costs_ac92; assert_in_delta(0, (worksheet.costs_ac92||0), 0.001); end
  def test_costs_ad92; assert_in_delta(0, (worksheet.costs_ad92||0), 0.001); end
  def test_costs_ae92; assert_in_delta(0, (worksheet.costs_ae92||0), 0.001); end
  def test_costs_af92; assert_in_delta(0, (worksheet.costs_af92||0), 0.001); end
  def test_costs_ag92; assert_in_delta(0, (worksheet.costs_ag92||0), 0.001); end
  def test_costs_ah92; assert_in_delta(0, (worksheet.costs_ah92||0), 0.001); end
  def test_costs_b93; assert_equal("VII.c", worksheet.costs_b93); end
  def test_costs_c93; assert_equal("EU transmission integration", worksheet.costs_c93); end
  def test_costs_d93; assert_equal("Electricity", worksheet.costs_d93); end
  def test_costs_e93; assert_equal("MEUR", worksheet.costs_e93); end
  def test_costs_f93; assert_in_delta(0, (worksheet.costs_f93||0), 0.001); end
  def test_costs_b94; assert_equal("VIII.a", worksheet.costs_b94); end
  def test_costs_c94; assert_equal("H2 Production for Transport", worksheet.costs_c94); end
  def test_costs_d94; assert_equal("Transport", worksheet.costs_d94); end
  def test_costs_e94; assert_equal("MEUR", worksheet.costs_e94); end
  def test_costs_f94; assert_in_delta(0, (worksheet.costs_f94||0), 0.001); end
  def test_costs_p94; assert_in_delta(0, (worksheet.costs_p94||0), 0.001); end
  def test_costs_z94; assert_in_delta(0, (worksheet.costs_z94||0), 0.001); end
  def test_costs_aj94; assert_in_delta(0, (worksheet.costs_aj94||0), 0.001); end
  def test_costs_g94; assert_in_delta(0, (worksheet.costs_g94||0), 0.001); end
  def test_costs_q94; assert_in_delta(0, (worksheet.costs_q94||0), 0.001); end
  def test_costs_aa94; assert_in_delta(0, (worksheet.costs_aa94||0), 0.001); end
  def test_costs_ak94; assert_in_delta(0, (worksheet.costs_ak94||0), 0.001); end
  def test_costs_h94; assert_in_epsilon(36.84342732912541, worksheet.costs_h94, 0.001); end
  def test_costs_r94; assert_in_epsilon(26.839363204328308, worksheet.costs_r94, 0.001); end
  def test_costs_ab94; assert_in_epsilon(9.086150472252553, worksheet.costs_ab94, 0.001); end
  def test_costs_al94; assert_in_epsilon(72.76894100570627, worksheet.costs_al94, 0.001); end
  def test_costs_i94; assert_in_epsilon(46.470455069352155, worksheet.costs_i94, 0.001); end
  def test_costs_s94; assert_in_epsilon(52.368792104010495, worksheet.costs_s94, 0.001); end
  def test_costs_ac94; assert_in_epsilon(22.646814691648373, worksheet.costs_ac94, 0.001); end
  def test_costs_am94; assert_in_epsilon(121.48606186501102, worksheet.costs_am94, 0.001); end
  def test_costs_j94; assert_in_epsilon(56.23283338177032, worksheet.costs_j94, 0.001); end
  def test_costs_t94; assert_in_epsilon(76.08509934923254, worksheet.costs_t94, 0.001); end
  def test_costs_ad94; assert_in_epsilon(35.677791921945435, worksheet.costs_ad94, 0.001); end
  def test_costs_an94; assert_in_epsilon(167.9957246529483, worksheet.costs_an94, 0.001); end
  def test_costs_k94; assert_in_epsilon(64.33089300806796, worksheet.costs_k94, 0.001); end
  def test_costs_u94; assert_in_epsilon(96.61723300300343, worksheet.costs_u94, 0.001); end
  def test_costs_ae94; assert_in_epsilon(48.42542838900015, worksheet.costs_ae94, 0.001); end
  def test_costs_ao94; assert_in_epsilon(209.37355440007155, worksheet.costs_ao94, 0.001); end
  def test_costs_l94; assert_in_epsilon(74.77945381060145, worksheet.costs_l94, 0.001); end
  def test_costs_v94; assert_in_epsilon(114.09978603709645, worksheet.costs_v94, 0.001); end
  def test_costs_af94; assert_in_epsilon(62.941165363254605, worksheet.costs_af94, 0.001); end
  def test_costs_ap94; assert_in_epsilon(251.82040521095252, worksheet.costs_ap94, 0.001); end
  def test_costs_m94; assert_in_epsilon(89.48980499619701, worksheet.costs_m94, 0.001); end
  def test_costs_w94; assert_in_epsilon(127.61256510514735, worksheet.costs_w94, 0.001); end
  def test_costs_ag94; assert_in_epsilon(79.37527901729162, worksheet.costs_ag94, 0.001); end
  def test_costs_aq94; assert_in_epsilon(296.477649118636, worksheet.costs_aq94, 0.001); end
  def test_costs_n94; assert_in_epsilon(113.00537033676886, worksheet.costs_n94, 0.001); end
  def test_costs_x94; assert_in_epsilon(136.80782304172342, worksheet.costs_x94, 0.001); end
  def test_costs_ah94; assert_in_epsilon(98.40685358259537, worksheet.costs_ah94, 0.001); end
  def test_costs_ar94; assert_in_epsilon(348.22004696108763, worksheet.costs_ar94, 0.001); end
  def test_costs_b95; assert_equal("IX.a", worksheet.costs_b95); end
  def test_costs_c95; assert_equal("Domestic space heating and hot water", worksheet.costs_c95); end
  def test_costs_d95; assert_equal("Buildings", worksheet.costs_d95); end
  def test_costs_e95; assert_equal("MEUR", worksheet.costs_e95); end
  def test_costs_p95; assert_in_epsilon(76.13647727492359, worksheet.costs_p95, 0.001); end
  def test_costs_f95; assert_in_epsilon(20491.40626589717, worksheet.costs_f95, 0.001); end
  def test_costs_z95; assert_in_epsilon(2507.118566750717, worksheet.costs_z95, 0.001); end
  def test_costs_aj95; assert_in_epsilon(23074.66130992281, worksheet.costs_aj95, 0.001); end
  def test_costs_g95; assert_in_epsilon(20716.72467318672, worksheet.costs_g95, 0.001); end
  def test_costs_q95; assert_in_epsilon(113.33249667520985, worksheet.costs_q95, 0.001); end
  def test_costs_aa95; assert_in_epsilon(2892.476146350883, worksheet.costs_aa95, 0.001); end
  def test_costs_ak95; assert_in_epsilon(23722.533316212815, worksheet.costs_ak95, 0.001); end
  def test_costs_h95; assert_in_epsilon(20746.401514769797, worksheet.costs_h95, 0.001); end
  def test_costs_r95; assert_in_epsilon(153.93659908134256, worksheet.costs_r95, 0.001); end
  def test_costs_ab95; assert_in_epsilon(2962.8331101862973, worksheet.costs_ab95, 0.001); end
  def test_costs_al95; assert_in_epsilon(23863.171224037436, worksheet.costs_al95, 0.001); end
  def test_costs_i95; assert_in_epsilon(17681.189195446463, worksheet.costs_i95, 0.001); end
  def test_costs_s95; assert_in_epsilon(194.74105572254848, worksheet.costs_s95, 0.001); end
  def test_costs_ac95; assert_in_epsilon(3213.188223172593, worksheet.costs_ac95, 0.001); end
  def test_costs_am95; assert_in_epsilon(21089.118474341605, worksheet.costs_am95, 0.001); end
  def test_costs_j95; assert_in_epsilon(18457.646205319645, worksheet.costs_j95, 0.001); end
  def test_costs_t95; assert_in_epsilon(238.46899481462364, worksheet.costs_t95, 0.001); end
  def test_costs_ad95; assert_in_epsilon(3072.9536824252746, worksheet.costs_ad95, 0.001); end
  def test_costs_an95; assert_in_epsilon(21769.068882559543, worksheet.costs_an95, 0.001); end
  def test_costs_k95; assert_in_epsilon(17707.930812246745, worksheet.costs_k95, 0.001); end
  def test_costs_u95; assert_in_epsilon(283.49616056961463, worksheet.costs_u95, 0.001); end
  def test_costs_ae95; assert_in_epsilon(2838.6317468690777, worksheet.costs_ae95, 0.001); end
  def test_costs_ao95; assert_in_epsilon(20830.05871968544, worksheet.costs_ao95, 0.001); end
  def test_costs_l95; assert_in_epsilon(18515.751945763514, worksheet.costs_l95, 0.001); end
  def test_costs_v95; assert_in_epsilon(331.2630009224052, worksheet.costs_v95, 0.001); end
  def test_costs_af95; assert_in_epsilon(2651.479482758456, worksheet.costs_af95, 0.001); end
  def test_costs_ap95; assert_in_epsilon(21498.494429444374, worksheet.costs_ap95, 0.001); end
  def test_costs_m95; assert_in_epsilon(18386.048343047507, worksheet.costs_m95, 0.001); end
  def test_costs_w95; assert_in_epsilon(380.44334978135123, worksheet.costs_w95, 0.001); end
  def test_costs_ag95; assert_in_epsilon(2496.243014931643, worksheet.costs_ag95, 0.001); end
  def test_costs_aq95; assert_in_epsilon(21262.7347077605, worksheet.costs_aq95, 0.001); end
  def test_costs_n95; assert_in_epsilon(19303.416412582723, worksheet.costs_n95, 0.001); end
  def test_costs_x95; assert_in_epsilon(432.3178341219339, worksheet.costs_x95, 0.001); end
  def test_costs_ah95; assert_in_epsilon(2409.042592658726, worksheet.costs_ah95, 0.001); end
  def test_costs_ar95; assert_in_epsilon(22144.776839363385, worksheet.costs_ar95, 0.001); end
  def test_costs_b96; assert_equal("IX.b", worksheet.costs_b96); end
  def test_costs_c96; assert_equal("Domestic hot water [UNUSED - See IX.a]", worksheet.costs_c96); end
  def test_costs_d96; assert_equal("Buildings", worksheet.costs_d96); end
  def test_costs_e96; assert_equal("MEUR", worksheet.costs_e96); end
  def test_costs_f96; assert_in_delta(0, (worksheet.costs_f96||0), 0.001); end
  def test_costs_g96; assert_in_delta(0, (worksheet.costs_g96||0), 0.001); end
  def test_costs_h96; assert_in_delta(0, (worksheet.costs_h96||0), 0.001); end
  def test_costs_i96; assert_in_delta(0, (worksheet.costs_i96||0), 0.001); end
  def test_costs_j96; assert_in_delta(0, (worksheet.costs_j96||0), 0.001); end
  def test_costs_k96; assert_in_delta(0, (worksheet.costs_k96||0), 0.001); end
  def test_costs_l96; assert_in_delta(0, (worksheet.costs_l96||0), 0.001); end
  def test_costs_m96; assert_in_delta(0, (worksheet.costs_m96||0), 0.001); end
  def test_costs_n96; assert_in_delta(0, (worksheet.costs_n96||0), 0.001); end
  def test_costs_p96; assert_in_delta(0, (worksheet.costs_p96||0), 0.001); end
  def test_costs_q96; assert_in_delta(0, (worksheet.costs_q96||0), 0.001); end
  def test_costs_r96; assert_in_delta(0, (worksheet.costs_r96||0), 0.001); end
  def test_costs_s96; assert_in_delta(0, (worksheet.costs_s96||0), 0.001); end
  def test_costs_t96; assert_in_delta(0, (worksheet.costs_t96||0), 0.001); end
  def test_costs_u96; assert_in_delta(0, (worksheet.costs_u96||0), 0.001); end
  def test_costs_v96; assert_in_delta(0, (worksheet.costs_v96||0), 0.001); end
  def test_costs_w96; assert_in_delta(0, (worksheet.costs_w96||0), 0.001); end
  def test_costs_x96; assert_in_delta(0, (worksheet.costs_x96||0), 0.001); end
  def test_costs_z96; assert_in_delta(0, (worksheet.costs_z96||0), 0.001); end
  def test_costs_aa96; assert_in_delta(0, (worksheet.costs_aa96||0), 0.001); end
  def test_costs_ab96; assert_in_delta(0, (worksheet.costs_ab96||0), 0.001); end
  def test_costs_ac96; assert_in_delta(0, (worksheet.costs_ac96||0), 0.001); end
  def test_costs_ad96; assert_in_delta(0, (worksheet.costs_ad96||0), 0.001); end
  def test_costs_ae96; assert_in_delta(0, (worksheet.costs_ae96||0), 0.001); end
  def test_costs_af96; assert_in_delta(0, (worksheet.costs_af96||0), 0.001); end
  def test_costs_ag96; assert_in_delta(0, (worksheet.costs_ag96||0), 0.001); end
  def test_costs_ah96; assert_in_delta(0, (worksheet.costs_ah96||0), 0.001); end
  def test_costs_aj96; assert_in_delta(0, (worksheet.costs_aj96||0), 0.001); end
  def test_costs_ak96; assert_in_delta(0, (worksheet.costs_ak96||0), 0.001); end
  def test_costs_al96; assert_in_delta(0, (worksheet.costs_al96||0), 0.001); end
  def test_costs_am96; assert_in_delta(0, (worksheet.costs_am96||0), 0.001); end
  def test_costs_an96; assert_in_delta(0, (worksheet.costs_an96||0), 0.001); end
  def test_costs_ao96; assert_in_delta(0, (worksheet.costs_ao96||0), 0.001); end
  def test_costs_ap96; assert_in_delta(0, (worksheet.costs_ap96||0), 0.001); end
  def test_costs_aq96; assert_in_delta(0, (worksheet.costs_aq96||0), 0.001); end
  def test_costs_ar96; assert_in_delta(0, (worksheet.costs_ar96||0), 0.001); end
  def test_costs_b97; assert_equal("IX.c", worksheet.costs_b97); end
  def test_costs_c97; assert_equal("Commercial heating and cooling", worksheet.costs_c97); end
  def test_costs_d97; assert_equal("Buildings", worksheet.costs_d97); end
  def test_costs_e97; assert_equal("MEUR", worksheet.costs_e97); end
  def test_costs_p97; assert_in_epsilon(584.2204441555915, worksheet.costs_p97, 0.001); end
  def test_costs_q97; assert_in_epsilon(597.1937397376303, worksheet.costs_q97, 0.001); end
  def test_costs_f97; assert_in_epsilon(6899.645429450829, worksheet.costs_f97, 0.001); end
  def test_costs_z97; assert_in_epsilon(814.954282845076, worksheet.costs_z97, 0.001); end
  def test_costs_aj97; assert_in_epsilon(8298.820156451497, worksheet.costs_aj97, 0.001); end
  def test_costs_g97; assert_in_epsilon(7871.020945180163, worksheet.costs_g97, 0.001); end
  def test_costs_aa97; assert_in_epsilon(896.1437089455939, worksheet.costs_aa97, 0.001); end
  def test_costs_ak97; assert_in_epsilon(9364.358393863387, worksheet.costs_ak97, 0.001); end
  def test_costs_h97; assert_in_epsilon(8598.965545966184, worksheet.costs_h97, 0.001); end
  def test_costs_r97; assert_in_epsilon(592.9314329739378, worksheet.costs_r97, 0.001); end
  def test_costs_ab97; assert_in_epsilon(844.0227460370622, worksheet.costs_ab97, 0.001); end
  def test_costs_al97; assert_in_epsilon(10035.919724977184, worksheet.costs_al97, 0.001); end
  def test_costs_i97; assert_in_epsilon(8824.547674404927, worksheet.costs_i97, 0.001); end
  def test_costs_s97; assert_in_epsilon(585.4514511412203, worksheet.costs_s97, 0.001); end
  def test_costs_ac97; assert_in_epsilon(811.8516175571566, worksheet.costs_ac97, 0.001); end
  def test_costs_am97; assert_in_epsilon(10221.850743103303, worksheet.costs_am97, 0.001); end
  def test_costs_j97; assert_in_epsilon(9041.331081568307, worksheet.costs_j97, 0.001); end
  def test_costs_t97; assert_in_epsilon(573.9927854919735, worksheet.costs_t97, 0.001); end
  def test_costs_ad97; assert_in_epsilon(739.3134199946761, worksheet.costs_ad97, 0.001); end
  def test_costs_an97; assert_in_epsilon(10354.637287054957, worksheet.costs_an97, 0.001); end
  def test_costs_k97; assert_in_epsilon(9285.837642823564, worksheet.costs_k97, 0.001); end
  def test_costs_u97; assert_in_epsilon(561.6276051461451, worksheet.costs_u97, 0.001); end
  def test_costs_ae97; assert_in_epsilon(641.958819797532, worksheet.costs_ae97, 0.001); end
  def test_costs_ao97; assert_in_epsilon(10489.42406776724, worksheet.costs_ao97, 0.001); end
  def test_costs_l97; assert_in_epsilon(9530.582175548881, worksheet.costs_l97, 0.001); end
  def test_costs_v97; assert_in_epsilon(547.5915075699781, worksheet.costs_v97, 0.001); end
  def test_costs_af97; assert_in_epsilon(561.1234610349222, worksheet.costs_af97, 0.001); end
  def test_costs_ap97; assert_in_epsilon(10639.297144153781, worksheet.costs_ap97, 0.001); end
  def test_costs_m97; assert_in_epsilon(9840.192094776587, worksheet.costs_m97, 0.001); end
  def test_costs_w97; assert_in_epsilon(532.61167656324, worksheet.costs_w97, 0.001); end
  def test_costs_ag97; assert_in_epsilon(492.1779772245126, worksheet.costs_ag97, 0.001); end
  def test_costs_aq97; assert_in_epsilon(10864.981748564338, worksheet.costs_aq97, 0.001); end
  def test_costs_n97; assert_in_epsilon(11362.509563092979, worksheet.costs_n97, 0.001); end
  def test_costs_x97; assert_in_epsilon(488.4328599498931, worksheet.costs_x97, 0.001); end
  def test_costs_ah97; assert_in_epsilon(442.5540736221934, worksheet.costs_ah97, 0.001); end
  def test_costs_ar97; assert_in_epsilon(12293.496496665066, worksheet.costs_ar97, 0.001); end
  def test_costs_b98; assert_equal("IX.d", worksheet.costs_b98); end
  def test_costs_c98; assert_equal("Commercial hot water [UNUSED - See IX.c]", worksheet.costs_c98); end
  def test_costs_d98; assert_equal("Buildings", worksheet.costs_d98); end
  def test_costs_e98; assert_equal("MEUR", worksheet.costs_e98); end
  def test_costs_f98; assert_in_delta(0, (worksheet.costs_f98||0), 0.001); end
  def test_costs_g98; assert_in_delta(0, (worksheet.costs_g98||0), 0.001); end
  def test_costs_h98; assert_in_delta(0, (worksheet.costs_h98||0), 0.001); end
  def test_costs_i98; assert_in_delta(0, (worksheet.costs_i98||0), 0.001); end
  def test_costs_j98; assert_in_delta(0, (worksheet.costs_j98||0), 0.001); end
  def test_costs_k98; assert_in_delta(0, (worksheet.costs_k98||0), 0.001); end
  def test_costs_l98; assert_in_delta(0, (worksheet.costs_l98||0), 0.001); end
  def test_costs_m98; assert_in_delta(0, (worksheet.costs_m98||0), 0.001); end
  def test_costs_n98; assert_in_delta(0, (worksheet.costs_n98||0), 0.001); end
  def test_costs_p98; assert_in_delta(0, (worksheet.costs_p98||0), 0.001); end
  def test_costs_q98; assert_in_delta(0, (worksheet.costs_q98||0), 0.001); end
  def test_costs_r98; assert_in_delta(0, (worksheet.costs_r98||0), 0.001); end
  def test_costs_s98; assert_in_delta(0, (worksheet.costs_s98||0), 0.001); end
  def test_costs_t98; assert_in_delta(0, (worksheet.costs_t98||0), 0.001); end
  def test_costs_u98; assert_in_delta(0, (worksheet.costs_u98||0), 0.001); end
  def test_costs_v98; assert_in_delta(0, (worksheet.costs_v98||0), 0.001); end
  def test_costs_w98; assert_in_delta(0, (worksheet.costs_w98||0), 0.001); end
  def test_costs_x98; assert_in_delta(0, (worksheet.costs_x98||0), 0.001); end
  def test_costs_z98; assert_in_delta(0, (worksheet.costs_z98||0), 0.001); end
  def test_costs_aa98; assert_in_delta(0, (worksheet.costs_aa98||0), 0.001); end
  def test_costs_ab98; assert_in_delta(0, (worksheet.costs_ab98||0), 0.001); end
  def test_costs_ac98; assert_in_delta(0, (worksheet.costs_ac98||0), 0.001); end
  def test_costs_ad98; assert_in_delta(0, (worksheet.costs_ad98||0), 0.001); end
  def test_costs_ae98; assert_in_delta(0, (worksheet.costs_ae98||0), 0.001); end
  def test_costs_af98; assert_in_delta(0, (worksheet.costs_af98||0), 0.001); end
  def test_costs_ag98; assert_in_delta(0, (worksheet.costs_ag98||0), 0.001); end
  def test_costs_ah98; assert_in_delta(0, (worksheet.costs_ah98||0), 0.001); end
  def test_costs_aj98; assert_in_delta(0, (worksheet.costs_aj98||0), 0.001); end
  def test_costs_ak98; assert_in_delta(0, (worksheet.costs_ak98||0), 0.001); end
  def test_costs_al98; assert_in_delta(0, (worksheet.costs_al98||0), 0.001); end
  def test_costs_am98; assert_in_delta(0, (worksheet.costs_am98||0), 0.001); end
  def test_costs_an98; assert_in_delta(0, (worksheet.costs_an98||0), 0.001); end
  def test_costs_ao98; assert_in_delta(0, (worksheet.costs_ao98||0), 0.001); end
  def test_costs_ap98; assert_in_delta(0, (worksheet.costs_ap98||0), 0.001); end
  def test_costs_aq98; assert_in_delta(0, (worksheet.costs_aq98||0), 0.001); end
  def test_costs_ar98; assert_in_delta(0, (worksheet.costs_ar98||0), 0.001); end
  def test_costs_b99; assert_equal("X.a", worksheet.costs_b99); end
  def test_costs_c99; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costs_c99); end
  def test_costs_d99; assert_equal("Buildings", worksheet.costs_d99); end
  def test_costs_e99; assert_equal("MEUR", worksheet.costs_e99); end
  def test_costs_p99; assert_in_delta(0, (worksheet.costs_p99||0), 0.001); end
  def test_costs_q99; assert_in_delta(0, (worksheet.costs_q99||0), 0.001); end
  def test_costs_r99; assert_in_delta(0, (worksheet.costs_r99||0), 0.001); end
  def test_costs_s99; assert_in_delta(0, (worksheet.costs_s99||0), 0.001); end
  def test_costs_t99; assert_in_delta(0, (worksheet.costs_t99||0), 0.001); end
  def test_costs_u99; assert_in_delta(0, (worksheet.costs_u99||0), 0.001); end
  def test_costs_v99; assert_in_delta(0, (worksheet.costs_v99||0), 0.001); end
  def test_costs_w99; assert_in_delta(0, (worksheet.costs_w99||0), 0.001); end
  def test_costs_x99; assert_in_delta(0, (worksheet.costs_x99||0), 0.001); end
  def test_costs_f99; assert_in_epsilon(676.096386529723, worksheet.costs_f99, 0.001); end
  def test_costs_z99; assert_in_epsilon(857.3884929339707, worksheet.costs_z99, 0.001); end
  def test_costs_aj99; assert_in_epsilon(1533.4848794636937, worksheet.costs_aj99, 0.001); end
  def test_costs_g99; assert_in_epsilon(676.096386529723, worksheet.costs_g99, 0.001); end
  def test_costs_aa99; assert_in_epsilon(1054.7808158104458, worksheet.costs_aa99, 0.001); end
  def test_costs_ak99; assert_in_epsilon(1730.8772023401689, worksheet.costs_ak99, 0.001); end
  def test_costs_h99; assert_in_epsilon(703.49693763579, worksheet.costs_h99, 0.001); end
  def test_costs_ab99; assert_in_epsilon(1227.8215578685313, worksheet.costs_ab99, 0.001); end
  def test_costs_al99; assert_in_epsilon(1931.3184955043212, worksheet.costs_al99, 0.001); end
  def test_costs_i99; assert_in_epsilon(700.5373261521847, worksheet.costs_i99, 0.001); end
  def test_costs_ac99; assert_in_epsilon(1618.599692706858, worksheet.costs_ac99, 0.001); end
  def test_costs_am99; assert_in_epsilon(2319.1370188590427, worksheet.costs_am99, 0.001); end
  def test_costs_j99; assert_in_epsilon(725.8488326431492, worksheet.costs_j99, 0.001); end
  def test_costs_ad99; assert_in_epsilon(1606.4517987175318, worksheet.costs_ad99, 0.001); end
  def test_costs_an99; assert_in_epsilon(2332.300631360681, worksheet.costs_an99, 0.001); end
  def test_costs_k99; assert_in_epsilon(738.7273090153674, worksheet.costs_k99, 0.001); end
  def test_costs_ae99; assert_in_epsilon(1550.9493245791582, worksheet.costs_ae99, 0.001); end
  def test_costs_ao99; assert_in_epsilon(2289.676633594526, worksheet.costs_ao99, 0.001); end
  def test_costs_l99; assert_in_epsilon(761.222193626304, worksheet.costs_l99, 0.001); end
  def test_costs_af99; assert_in_epsilon(1519.5175399300301, worksheet.costs_af99, 0.001); end
  def test_costs_ap99; assert_in_epsilon(2280.739733556334, worksheet.costs_ap99, 0.001); end
  def test_costs_m99; assert_in_epsilon(788.4040120006229, worksheet.costs_m99, 0.001); end
  def test_costs_ag99; assert_in_epsilon(1491.0267533439185, worksheet.costs_ag99, 0.001); end
  def test_costs_aq99; assert_in_epsilon(2279.430765344541, worksheet.costs_aq99, 0.001); end
  def test_costs_n99; assert_in_epsilon(841.0822755420702, worksheet.costs_n99, 0.001); end
  def test_costs_ah99; assert_in_epsilon(1462.3257410923698, worksheet.costs_ah99, 0.001); end
  def test_costs_ar99; assert_in_epsilon(2303.40801663444, worksheet.costs_ar99, 0.001); end
  def test_costs_b100; assert_equal("X.b", worksheet.costs_b100); end
  def test_costs_c100; assert_equal("Commercial lighting, appliances, and catering", worksheet.costs_c100); end
  def test_costs_d100; assert_equal("Buildings", worksheet.costs_d100); end
  def test_costs_e100; assert_equal("MEUR", worksheet.costs_e100); end
  def test_costs_f100; assert_in_delta(0, (worksheet.costs_f100||0), 0.001); end
  def test_costs_p100; assert_in_delta(0, (worksheet.costs_p100||0), 0.001); end
  def test_costs_q100; assert_in_delta(0, (worksheet.costs_q100||0), 0.001); end
  def test_costs_r100; assert_in_delta(0, (worksheet.costs_r100||0), 0.001); end
  def test_costs_s100; assert_in_delta(0, (worksheet.costs_s100||0), 0.001); end
  def test_costs_t100; assert_in_delta(0, (worksheet.costs_t100||0), 0.001); end
  def test_costs_u100; assert_in_delta(0, (worksheet.costs_u100||0), 0.001); end
  def test_costs_v100; assert_in_delta(0, (worksheet.costs_v100||0), 0.001); end
  def test_costs_w100; assert_in_delta(0, (worksheet.costs_w100||0), 0.001); end
  def test_costs_x100; assert_in_delta(0, (worksheet.costs_x100||0), 0.001); end
  def test_costs_z100; assert_in_epsilon(2.153921052729563, worksheet.costs_z100, 0.001); end
  def test_costs_aj100; assert_in_epsilon(2.153921052729563, worksheet.costs_aj100, 0.001); end
  def test_costs_g100; assert_in_epsilon(12.066981340132585, worksheet.costs_g100, 0.001); end
  def test_costs_aa100; assert_in_epsilon(2.2857955435471524, worksheet.costs_aa100, 0.001); end
  def test_costs_ak100; assert_in_epsilon(14.352776883679738, worksheet.costs_ak100, 0.001); end
  def test_costs_h100; assert_in_epsilon(13.986627884677024, worksheet.costs_h100, 0.001); end
  def test_costs_ab100; assert_in_epsilon(2.4129209837742196, worksheet.costs_ab100, 0.001); end
  def test_costs_al100; assert_in_epsilon(16.399548868451244, worksheet.costs_al100, 0.001); end
  def test_costs_i100; assert_in_epsilon(15.154336756240037, worksheet.costs_i100, 0.001); end
  def test_costs_ac100; assert_in_epsilon(2.486613070587419, worksheet.costs_ac100, 0.001); end
  def test_costs_am100; assert_in_epsilon(17.640949826827455, worksheet.costs_am100, 0.001); end
  def test_costs_j100; assert_in_epsilon(16.18491810949302, worksheet.costs_j100, 0.001); end
  def test_costs_ad100; assert_in_epsilon(2.537207979394484, worksheet.costs_ad100, 0.001); end
  def test_costs_an100; assert_in_epsilon(18.722126088887503, worksheet.costs_an100, 0.001); end
  def test_costs_k100; assert_in_epsilon(17.32988397106596, worksheet.costs_k100, 0.001); end
  def test_costs_ae100; assert_in_epsilon(2.579917338955194, worksheet.costs_ae100, 0.001); end
  def test_costs_ao100; assert_in_epsilon(19.909801310021155, worksheet.costs_ao100, 0.001); end
  def test_costs_l100; assert_in_epsilon(18.65163867498675, worksheet.costs_l100, 0.001); end
  def test_costs_af100; assert_in_epsilon(2.6212433891653255, worksheet.costs_af100, 0.001); end
  def test_costs_ap100; assert_in_epsilon(21.272882064152075, worksheet.costs_ap100, 0.001); end
  def test_costs_m100; assert_in_epsilon(20.042307764673343, worksheet.costs_m100, 0.001); end
  def test_costs_ag100; assert_in_epsilon(2.661017704569014, worksheet.costs_ag100, 0.001); end
  def test_costs_aq100; assert_in_epsilon(22.70332546924236, worksheet.costs_aq100, 0.001); end
  def test_costs_n100; assert_in_epsilon(21.532832393734417, worksheet.costs_n100, 0.001); end
  def test_costs_ah100; assert_in_epsilon(2.699630382553881, worksheet.costs_ah100, 0.001); end
  def test_costs_ar100; assert_in_epsilon(24.232462776288298, worksheet.costs_ar100, 0.001); end
  def test_costs_b101; assert_equal("XI.a", worksheet.costs_b101); end
  def test_costs_c101; assert_equal("Steel Industry", worksheet.costs_c101); end
  def test_costs_d101; assert_equal("Industry", worksheet.costs_d101); end
  def test_costs_e101; assert_equal("MEUR", worksheet.costs_e101); end
  def test_costs_p101; assert_in_delta(0, (worksheet.costs_p101||0), 0.001); end
  def test_costs_q101; assert_in_delta(0, (worksheet.costs_q101||0), 0.001); end
  def test_costs_r101; assert_in_delta(0, (worksheet.costs_r101||0), 0.001); end
  def test_costs_s101; assert_in_delta(0, (worksheet.costs_s101||0), 0.001); end
  def test_costs_t101; assert_in_delta(0, (worksheet.costs_t101||0), 0.001); end
  def test_costs_u101; assert_in_delta(0, (worksheet.costs_u101||0), 0.001); end
  def test_costs_v101; assert_in_delta(0, (worksheet.costs_v101||0), 0.001); end
  def test_costs_w101; assert_in_delta(0, (worksheet.costs_w101||0), 0.001); end
  def test_costs_x101; assert_in_delta(0, (worksheet.costs_x101||0), 0.001); end
  def test_costs_f101; assert_in_delta(-3.623767952376511e-13, worksheet.costs_f101, 0.001); end
  def test_xi_a_f493; assert_in_epsilon(674.3926080965056, worksheet.xi_a_f493, 0.001); end
  def test_costs_z101; assert_in_epsilon(674.3926080965056, worksheet.costs_z101, 0.001); end
  def test_costs_aj101; assert_in_epsilon(674.3926080965052, worksheet.costs_aj101, 0.001); end
  def test_costs_g101; assert_in_epsilon(101.2964616697514, worksheet.costs_g101, 0.001); end
  def test_costs_aa101; assert_in_epsilon(733.2942706139356, worksheet.costs_aa101, 0.001); end
  def test_costs_ak101; assert_in_epsilon(834.590732283687, worksheet.costs_ak101, 0.001); end
  def test_costs_h101; assert_in_epsilon(84.35992020541931, worksheet.costs_h101, 0.001); end
  def test_costs_ab101; assert_in_epsilon(727.7419958942452, worksheet.costs_ab101, 0.001); end
  def test_costs_al101; assert_in_epsilon(812.1019160996645, worksheet.costs_al101, 0.001); end
  def test_costs_i101; assert_in_epsilon(68.1484456756813, worksheet.costs_i101, 0.001); end
  def test_costs_ac101; assert_in_epsilon(759.1938666477675, worksheet.costs_ac101, 0.001); end
  def test_costs_am101; assert_in_epsilon(827.3423123234488, worksheet.costs_am101, 0.001); end
  def test_costs_j101; assert_in_epsilon(575.2103040445172, worksheet.costs_j101, 0.001); end
  def test_costs_ad101; assert_in_epsilon(770.697500489215, worksheet.costs_ad101, 0.001); end
  def test_costs_an101; assert_in_epsilon(1345.9078045337324, worksheet.costs_an101, 0.001); end
  def test_costs_k101; assert_in_epsilon(551.4878281796023, worksheet.costs_k101, 0.001); end
  def test_costs_ae101; assert_in_epsilon(735.2575462970973, worksheet.costs_ae101, 0.001); end
  def test_costs_ao101; assert_in_epsilon(1286.7453744766995, worksheet.costs_ao101, 0.001); end
  def test_costs_l101; assert_in_epsilon(527.1810364579994, worksheet.costs_l101, 0.001); end
  def test_costs_af101; assert_in_epsilon(704.2721542358586, worksheet.costs_af101, 0.001); end
  def test_costs_ap101; assert_in_epsilon(1231.453190693858, worksheet.costs_ap101, 0.001); end
  def test_costs_m101; assert_in_epsilon(501.9210783743186, worksheet.costs_m101, 0.001); end
  def test_costs_ag101; assert_in_epsilon(674.2940729963266, worksheet.costs_ag101, 0.001); end
  def test_costs_aq101; assert_in_epsilon(1176.2151513706451, worksheet.costs_aq101, 0.001); end
  def test_xi_a_n489; assert_in_epsilon(632.7245994290362, worksheet.xi_a_n489, 0.001); end
  def test_costs_n101; assert_in_epsilon(632.7245994290362, worksheet.costs_n101, 0.001); end
  def test_xi_a_n493; assert_in_epsilon(672.3587158735579, worksheet.xi_a_n493, 0.001); end
  def test_costs_ah101; assert_in_epsilon(672.3587158735579, worksheet.costs_ah101, 0.001); end
  def test_costs_ar101; assert_in_epsilon(1305.0833153025942, worksheet.costs_ar101, 0.001); end
  def test_costs_b102; assert_equal("XI.b", worksheet.costs_b102); end
  def test_costs_c102; assert_equal("Cement Industry", worksheet.costs_c102); end
  def test_costs_d102; assert_equal("Industry", worksheet.costs_d102); end
  def test_costs_e102; assert_equal("MEUR", worksheet.costs_e102); end
  def test_costs_p102; assert_in_delta(0, (worksheet.costs_p102||0), 0.001); end
  def test_costs_q102; assert_in_delta(0, (worksheet.costs_q102||0), 0.001); end
  def test_costs_r102; assert_in_delta(0, (worksheet.costs_r102||0), 0.001); end
  def test_costs_s102; assert_in_delta(0, (worksheet.costs_s102||0), 0.001); end
  def test_costs_t102; assert_in_delta(0, (worksheet.costs_t102||0), 0.001); end
  def test_costs_u102; assert_in_delta(0, (worksheet.costs_u102||0), 0.001); end
  def test_costs_v102; assert_in_delta(0, (worksheet.costs_v102||0), 0.001); end
  def test_costs_w102; assert_in_delta(0, (worksheet.costs_w102||0), 0.001); end
  def test_costs_x102; assert_in_delta(0, (worksheet.costs_x102||0), 0.001); end
  def test_costs_f102; assert_in_delta(0.07999993371521077, worksheet.costs_f102, 0.001); end
  def test_xi_b_f281; assert_in_epsilon(124.87011075684646, worksheet.xi_b_f281, 0.001); end
  def test_costs_z102; assert_in_epsilon(124.87011075684646, worksheet.costs_z102, 0.001); end
  def test_costs_aj102; assert_in_epsilon(124.95011069056167, worksheet.costs_aj102, 0.001); end
  def test_costs_g102; assert_in_epsilon(59.66537725434374, worksheet.costs_g102, 0.001); end
  def test_costs_aa102; assert_in_epsilon(147.04750556779229, worksheet.costs_aa102, 0.001); end
  def test_costs_ak102; assert_in_epsilon(206.712882822136, worksheet.costs_ak102, 0.001); end
  def test_costs_h102; assert_in_epsilon(80.60617264056523, worksheet.costs_h102, 0.001); end
  def test_costs_ab102; assert_in_epsilon(142.96186538255284, worksheet.costs_ab102, 0.001); end
  def test_costs_al102; assert_in_epsilon(223.56803802311808, worksheet.costs_al102, 0.001); end
  def test_costs_i102; assert_in_epsilon(104.25658907953581, worksheet.costs_i102, 0.001); end
  def test_costs_ac102; assert_in_epsilon(147.7036302221359, worksheet.costs_ac102, 0.001); end
  def test_costs_am102; assert_in_epsilon(251.9602193016717, worksheet.costs_am102, 0.001); end
  def test_costs_j102; assert_in_epsilon(141.6886695435737, worksheet.costs_j102, 0.001); end
  def test_costs_ad102; assert_in_epsilon(144.30737309172474, worksheet.costs_ad102, 0.001); end
  def test_costs_an102; assert_in_epsilon(285.9960426352984, worksheet.costs_an102, 0.001); end
  def test_costs_k102; assert_in_epsilon(171.12348895021083, worksheet.costs_k102, 0.001); end
  def test_costs_ae102; assert_in_epsilon(142.04659082939946, worksheet.costs_ae102, 0.001); end
  def test_costs_ao102; assert_in_epsilon(313.1700797796103, worksheet.costs_ao102, 0.001); end
  def test_costs_l102; assert_in_epsilon(195.94359963918453, worksheet.costs_l102, 0.001); end
  def test_costs_af102; assert_in_epsilon(138.83525910912886, worksheet.costs_af102, 0.001); end
  def test_costs_ap102; assert_in_epsilon(334.7788587483134, worksheet.costs_ap102, 0.001); end
  def test_costs_m102; assert_in_epsilon(215.6241240715992, worksheet.costs_m102, 0.001); end
  def test_costs_ag102; assert_in_epsilon(133.90617108464912, worksheet.costs_ag102, 0.001); end
  def test_costs_aq102; assert_in_epsilon(349.5302951562483, worksheet.costs_aq102, 0.001); end
  def test_costs_n102; assert_in_epsilon(208.7654094828685, worksheet.costs_n102, 0.001); end
  def test_costs_ah102; assert_in_epsilon(124.86221688500754, worksheet.costs_ah102, 0.001); end
  def test_costs_ar102; assert_in_epsilon(333.627626367876, worksheet.costs_ar102, 0.001); end
  def test_costs_b103; assert_equal("XI.c", worksheet.costs_b103); end
  def test_costs_c103; assert_equal("Lime Industry", worksheet.costs_c103); end
  def test_costs_d103; assert_equal("Industry", worksheet.costs_d103); end
  def test_costs_e103; assert_equal("MEUR", worksheet.costs_e103); end
  def test_costs_p103; assert_in_delta(0, (worksheet.costs_p103||0), 0.001); end
  def test_costs_q103; assert_in_delta(0, (worksheet.costs_q103||0), 0.001); end
  def test_costs_r103; assert_in_delta(0, (worksheet.costs_r103||0), 0.001); end
  def test_costs_s103; assert_in_delta(0, (worksheet.costs_s103||0), 0.001); end
  def test_costs_t103; assert_in_delta(0, (worksheet.costs_t103||0), 0.001); end
  def test_costs_u103; assert_in_delta(0, (worksheet.costs_u103||0), 0.001); end
  def test_costs_v103; assert_in_delta(0, (worksheet.costs_v103||0), 0.001); end
  def test_costs_w103; assert_in_delta(0, (worksheet.costs_w103||0), 0.001); end
  def test_costs_x103; assert_in_delta(0, (worksheet.costs_x103||0), 0.001); end
  def test_costs_f103; assert_in_delta(0, (worksheet.costs_f103||0), 0.001); end
  def test_costs_z103; assert_in_epsilon(81.11525953945034, worksheet.costs_z103, 0.001); end
  def test_costs_aj103; assert_in_epsilon(81.11525953945034, worksheet.costs_aj103, 0.001); end
  def test_costs_g103; assert_in_epsilon(-1.66678576851459, worksheet.costs_g103, 0.001); end
  def test_costs_aa103; assert_in_epsilon(110.94093494031625, worksheet.costs_aa103, 0.001); end
  def test_costs_ak103; assert_in_epsilon(109.27414917180167, worksheet.costs_ak103, 0.001); end
  def test_costs_h103; assert_in_epsilon(-3.7554679142695035, worksheet.costs_h103, 0.001); end
  def test_costs_ab103; assert_in_epsilon(118.0796834540078, worksheet.costs_ab103, 0.001); end
  def test_costs_al103; assert_in_epsilon(114.3242155397383, worksheet.costs_al103, 0.001); end
  def test_costs_i103; assert_in_delta(0.022746089861395723, worksheet.costs_i103, 0.001); end
  def test_costs_ac103; assert_in_epsilon(123.00885510038187, worksheet.costs_ac103, 0.001); end
  def test_costs_am103; assert_in_epsilon(123.03160119024326, worksheet.costs_am103, 0.001); end
  def test_costs_j103; assert_in_epsilon(11.527336553687304, worksheet.costs_j103, 0.001); end
  def test_costs_ad103; assert_in_epsilon(120.08686485510711, worksheet.costs_ad103, 0.001); end
  def test_costs_an103; assert_in_epsilon(131.6142014087944, worksheet.costs_an103, 0.001); end
  def test_costs_k103; assert_in_epsilon(24.705180947062217, worksheet.costs_k103, 0.001); end
  def test_costs_ae103; assert_in_epsilon(115.0288911319335, worksheet.costs_ae103, 0.001); end
  def test_costs_ao103; assert_in_epsilon(139.73407207899572, worksheet.costs_ao103, 0.001); end
  def test_costs_l103; assert_in_epsilon(37.52969677303839, worksheet.costs_l103, 0.001); end
  def test_costs_af103; assert_in_epsilon(110.41568112805982, worksheet.costs_af103, 0.001); end
  def test_costs_ap103; assert_in_epsilon(147.9453779010982, worksheet.costs_ap103, 0.001); end
  def test_costs_m103; assert_in_epsilon(49.901769488901905, worksheet.costs_m103, 0.001); end
  def test_costs_ag103; assert_in_epsilon(105.90159716776755, worksheet.costs_ag103, 0.001); end
  def test_costs_aq103; assert_in_epsilon(155.80336665666945, worksheet.costs_aq103, 0.001); end
  def test_costs_n103; assert_in_epsilon(63.9239165922981, worksheet.costs_n103, 0.001); end
  def test_costs_ah103; assert_in_epsilon(102.20297992595049, worksheet.costs_ah103, 0.001); end
  def test_costs_ar103; assert_in_epsilon(166.1268965182486, worksheet.costs_ar103, 0.001); end
  def test_costs_b104; assert_equal("XI.d", worksheet.costs_b104); end
  def test_costs_c104; assert_equal("Glass Industry", worksheet.costs_c104); end
  def test_costs_d104; assert_equal("Industry", worksheet.costs_d104); end
  def test_costs_e104; assert_equal("MEUR", worksheet.costs_e104); end
  def test_costs_p104; assert_in_delta(0, (worksheet.costs_p104||0), 0.001); end
  def test_costs_q104; assert_in_delta(0, (worksheet.costs_q104||0), 0.001); end
  def test_costs_r104; assert_in_delta(0, (worksheet.costs_r104||0), 0.001); end
  def test_costs_s104; assert_in_delta(0, (worksheet.costs_s104||0), 0.001); end
  def test_costs_t104; assert_in_delta(0, (worksheet.costs_t104||0), 0.001); end
  def test_costs_u104; assert_in_delta(0, (worksheet.costs_u104||0), 0.001); end
  def test_costs_v104; assert_in_delta(0, (worksheet.costs_v104||0), 0.001); end
  def test_costs_w104; assert_in_delta(0, (worksheet.costs_w104||0), 0.001); end
  def test_costs_x104; assert_in_delta(0, (worksheet.costs_x104||0), 0.001); end
  def test_costs_f104; assert_in_delta(0.1786385784065416, worksheet.costs_f104, 0.001); end
  def test_costs_z104; assert_in_epsilon(153.31621962328768, worksheet.costs_z104, 0.001); end
  def test_costs_aj104; assert_in_epsilon(153.49485820169423, worksheet.costs_aj104, 0.001); end
  def test_costs_g104; assert_in_epsilon(20.147997076587533, worksheet.costs_g104, 0.001); end
  def test_costs_aa104; assert_in_epsilon(208.76630405784877, worksheet.costs_aa104, 0.001); end
  def test_costs_ak104; assert_in_epsilon(228.9143011344363, worksheet.costs_ak104, 0.001); end
  def test_costs_h104; assert_in_epsilon(44.19935078320025, worksheet.costs_h104, 0.001); end
  def test_costs_ab104; assert_in_epsilon(207.03644217788667, worksheet.costs_ab104, 0.001); end
  def test_costs_al104; assert_in_epsilon(251.23579296108693, worksheet.costs_al104, 0.001); end
  def test_costs_i104; assert_in_epsilon(60.062156847700464, worksheet.costs_i104, 0.001); end
  def test_costs_ac104; assert_in_epsilon(228.63229406270236, worksheet.costs_ac104, 0.001); end
  def test_costs_am104; assert_in_epsilon(288.6944509104028, worksheet.costs_am104, 0.001); end
  def test_costs_j104; assert_in_epsilon(72.19235792207225, worksheet.costs_j104, 0.001); end
  def test_costs_ad104; assert_in_epsilon(227.08436861846516, worksheet.costs_ad104, 0.001); end
  def test_costs_an104; assert_in_epsilon(299.2767265405374, worksheet.costs_an104, 0.001); end
  def test_costs_k104; assert_in_epsilon(82.34899339436883, worksheet.costs_k104, 0.001); end
  def test_costs_ae104; assert_in_epsilon(224.4354744809221, worksheet.costs_ae104, 0.001); end
  def test_costs_ao104; assert_in_epsilon(306.78446787529094, worksheet.costs_ao104, 0.001); end
  def test_costs_l104; assert_in_epsilon(92.87819940669097, worksheet.costs_l104, 0.001); end
  def test_costs_af104; assert_in_epsilon(222.53681552512202, worksheet.costs_af104, 0.001); end
  def test_costs_ap104; assert_in_epsilon(315.415014931813, worksheet.costs_ap104, 0.001); end
  def test_costs_m104; assert_in_epsilon(103.43551000462939, worksheet.costs_m104, 0.001); end
  def test_costs_ag104; assert_in_epsilon(220.44703964550175, worksheet.costs_ag104, 0.001); end
  def test_costs_aq104; assert_in_epsilon(323.8825496501311, worksheet.costs_aq104, 0.001); end
  def test_costs_n104; assert_in_epsilon(113.72231598369721, worksheet.costs_n104, 0.001); end
  def test_costs_ah104; assert_in_epsilon(217.74800880370466, worksheet.costs_ah104, 0.001); end
  def test_costs_ar104; assert_in_epsilon(331.47032478740186, worksheet.costs_ar104, 0.001); end
  def test_costs_b105; assert_equal("XI.e", worksheet.costs_b105); end
  def test_costs_c105; assert_equal("Chemicals Industry", worksheet.costs_c105); end
  def test_costs_d105; assert_equal("Industry", worksheet.costs_d105); end
  def test_costs_e105; assert_equal("MEUR", worksheet.costs_e105); end
  def test_costs_p105; assert_in_delta(0, (worksheet.costs_p105||0), 0.001); end
  def test_costs_q105; assert_in_delta(0, (worksheet.costs_q105||0), 0.001); end
  def test_costs_r105; assert_in_delta(0, (worksheet.costs_r105||0), 0.001); end
  def test_costs_s105; assert_in_delta(0, (worksheet.costs_s105||0), 0.001); end
  def test_costs_t105; assert_in_delta(0, (worksheet.costs_t105||0), 0.001); end
  def test_costs_u105; assert_in_delta(0, (worksheet.costs_u105||0), 0.001); end
  def test_costs_v105; assert_in_delta(0, (worksheet.costs_v105||0), 0.001); end
  def test_costs_w105; assert_in_delta(0, (worksheet.costs_w105||0), 0.001); end
  def test_costs_x105; assert_in_delta(0, (worksheet.costs_x105||0), 0.001); end
  def test_costs_f105; assert_in_epsilon(5.274300106547076, worksheet.costs_f105, 0.001); end
  def test_costs_z105; assert_in_epsilon(2126.400044028941, worksheet.costs_z105, 0.001); end
  def test_costs_aj105; assert_in_epsilon(2131.674344135488, worksheet.costs_aj105, 0.001); end
  def test_costs_g105; assert_in_epsilon(59.88725217027181, worksheet.costs_g105, 0.001); end
  def test_costs_aa105; assert_in_epsilon(2753.995127090929, worksheet.costs_aa105, 0.001); end
  def test_costs_ak105; assert_in_epsilon(2813.882379261201, worksheet.costs_ak105, 0.001); end
  def test_costs_h105; assert_in_epsilon(125.54712571983768, worksheet.costs_h105, 0.001); end
  def test_costs_ab105; assert_in_epsilon(2821.4718266663604, worksheet.costs_ab105, 0.001); end
  def test_costs_al105; assert_in_epsilon(2947.018952386198, worksheet.costs_al105, 0.001); end
  def test_costs_i105; assert_in_epsilon(205.79223109003797, worksheet.costs_i105, 0.001); end
  def test_costs_ac105; assert_in_epsilon(3047.979785966578, worksheet.costs_ac105, 0.001); end
  def test_costs_am105; assert_in_epsilon(3253.7720170566163, worksheet.costs_am105, 0.001); end
  def test_costs_j105; assert_in_epsilon(323.6094197721993, worksheet.costs_j105, 0.001); end
  def test_costs_ad105; assert_in_epsilon(2897.15222030573, worksheet.costs_ad105, 0.001); end
  def test_costs_an105; assert_in_epsilon(3220.7616400779298, worksheet.costs_an105, 0.001); end
  def test_costs_k105; assert_in_epsilon(368.08249349029813, worksheet.costs_k105, 0.001); end
  def test_costs_ae105; assert_in_epsilon(2660.635822669113, worksheet.costs_ae105, 0.001); end
  def test_costs_ao105; assert_in_epsilon(3028.718316159411, worksheet.costs_ao105, 0.001); end
  def test_costs_l105; assert_in_epsilon(406.23170067352476, worksheet.costs_l105, 0.001); end
  def test_costs_af105; assert_in_epsilon(2452.8314902255356, worksheet.costs_af105, 0.001); end
  def test_costs_ap105; assert_in_epsilon(2859.0631908990604, worksheet.costs_ap105, 0.001); end
  def test_costs_m105; assert_in_epsilon(437.43771939657256, worksheet.costs_m105, 0.001); end
  def test_costs_ag105; assert_in_epsilon(2259.27232888737, worksheet.costs_ag105, 0.001); end
  def test_costs_aq105; assert_in_epsilon(2696.7100482839423, worksheet.costs_aq105, 0.001); end
  def test_costs_n105; assert_in_epsilon(461.3957365594243, worksheet.costs_n105, 0.001); end
  def test_costs_ah105; assert_in_epsilon(2074.642401286636, worksheet.costs_ah105, 0.001); end
  def test_costs_ar105; assert_in_epsilon(2536.03813784606, worksheet.costs_ar105, 0.001); end
  def test_costs_b106; assert_equal("XI.f", worksheet.costs_b106); end
  def test_costs_c106; assert_equal("Pulp & Paper Industry", worksheet.costs_c106); end
  def test_costs_d106; assert_equal("Industry", worksheet.costs_d106); end
  def test_costs_e106; assert_equal("MEUR", worksheet.costs_e106); end
  def test_costs_p106; assert_in_delta(0, (worksheet.costs_p106||0), 0.001); end
  def test_costs_q106; assert_in_delta(0, (worksheet.costs_q106||0), 0.001); end
  def test_costs_r106; assert_in_delta(0, (worksheet.costs_r106||0), 0.001); end
  def test_costs_s106; assert_in_delta(0, (worksheet.costs_s106||0), 0.001); end
  def test_costs_t106; assert_in_delta(0, (worksheet.costs_t106||0), 0.001); end
  def test_costs_u106; assert_in_delta(0, (worksheet.costs_u106||0), 0.001); end
  def test_costs_v106; assert_in_delta(0, (worksheet.costs_v106||0), 0.001); end
  def test_costs_w106; assert_in_delta(0, (worksheet.costs_w106||0), 0.001); end
  def test_costs_x106; assert_in_delta(0, (worksheet.costs_x106||0), 0.001); end
  def test_costs_f106; assert_in_delta(0, (worksheet.costs_f106||0), 0.001); end
  def test_xi_f_f292; assert_in_epsilon(524.7237281815229, worksheet.xi_f_f292, 0.001); end
  def test_costs_z106; assert_in_epsilon(524.7237281815229, worksheet.costs_z106, 0.001); end
  def test_costs_aj106; assert_in_epsilon(524.7237281815229, worksheet.costs_aj106, 0.001); end
  def test_xi_f_g288; assert_in_epsilon(19.32594225273593, worksheet.xi_f_g288, 0.001); end
  def test_costs_g106; assert_in_epsilon(19.32594225273593, worksheet.costs_g106, 0.001); end
  def test_xi_f_g292; assert_in_epsilon(751.3930268074774, worksheet.xi_f_g292, 0.001); end
  def test_costs_aa106; assert_in_epsilon(751.3930268074774, worksheet.costs_aa106, 0.001); end
  def test_costs_ak106; assert_in_epsilon(770.7189690602133, worksheet.costs_ak106, 0.001); end
  def test_xi_f_h288; assert_in_epsilon(41.92498122114867, worksheet.xi_f_h288, 0.001); end
  def test_costs_h106; assert_in_epsilon(41.92498122114867, worksheet.costs_h106, 0.001); end
  def test_xi_f_h292; assert_in_epsilon(792.1658951504359, worksheet.xi_f_h292, 0.001); end
  def test_costs_ab106; assert_in_epsilon(792.1658951504359, worksheet.costs_ab106, 0.001); end
  def test_costs_al106; assert_in_epsilon(834.0908763715845, worksheet.costs_al106, 0.001); end
  def test_xi_f_i288; assert_in_epsilon(71.94932129899024, worksheet.xi_f_i288, 0.001); end
  def test_costs_i106; assert_in_epsilon(71.94932129899024, worksheet.costs_i106, 0.001); end
  def test_xi_f_i292; assert_in_epsilon(881.07379591833, worksheet.xi_f_i292, 0.001); end
  def test_costs_ac106; assert_in_epsilon(881.07379591833, worksheet.costs_ac106, 0.001); end
  def test_costs_am106; assert_in_epsilon(953.0231172173203, worksheet.costs_am106, 0.001); end
  def test_xi_f_j288; assert_in_epsilon(97.26179619079076, worksheet.xi_f_j288, 0.001); end
  def test_costs_j106; assert_in_epsilon(97.26179619079076, worksheet.costs_j106, 0.001); end
  def test_xi_f_j292; assert_in_epsilon(869.9090571020934, worksheet.xi_f_j292, 0.001); end
  def test_costs_ad106; assert_in_epsilon(869.9090571020934, worksheet.costs_ad106, 0.001); end
  def test_costs_an106; assert_in_epsilon(967.1708532928841, worksheet.costs_an106, 0.001); end
  def test_xi_f_k288; assert_in_epsilon(119.22213332969535, worksheet.xi_f_k288, 0.001); end
  def test_costs_k106; assert_in_epsilon(119.22213332969535, worksheet.costs_k106, 0.001); end
  def test_xi_f_k292; assert_in_epsilon(830.1262118384493, worksheet.xi_f_k292, 0.001); end
  def test_costs_ae106; assert_in_epsilon(830.1262118384493, worksheet.costs_ae106, 0.001); end
  def test_costs_ao106; assert_in_epsilon(949.3483451681446, worksheet.costs_ao106, 0.001); end
  def test_xi_f_l288; assert_in_epsilon(141.06284853613067, worksheet.xi_f_l288, 0.001); end
  def test_costs_l106; assert_in_epsilon(141.06284853613067, worksheet.costs_l106, 0.001); end
  def test_xi_f_l292; assert_in_epsilon(795.9201003471419, worksheet.xi_f_l292, 0.001); end
  def test_costs_af106; assert_in_epsilon(795.9201003471419, worksheet.costs_af106, 0.001); end
  def test_costs_ap106; assert_in_epsilon(936.9829488832726, worksheet.costs_ap106, 0.001); end
  def test_xi_f_m288; assert_in_epsilon(162.432890216671, worksheet.xi_f_m288, 0.001); end
  def test_costs_m106; assert_in_epsilon(162.432890216671, worksheet.costs_m106, 0.001); end
  def test_xi_f_m292; assert_in_epsilon(763.2841566374733, worksheet.xi_f_m292, 0.001); end
  def test_costs_ag106; assert_in_epsilon(763.2841566374733, worksheet.costs_ag106, 0.001); end
  def test_costs_aq106; assert_in_epsilon(925.7170468541443, worksheet.costs_aq106, 0.001); end
  def test_xi_f_n288; assert_in_epsilon(183.07542310181128, worksheet.xi_f_n288, 0.001); end
  def test_costs_n106; assert_in_epsilon(183.07542310181128, worksheet.costs_n106, 0.001); end
  def test_xi_f_n292; assert_in_epsilon(730.7665410414163, worksheet.xi_f_n292, 0.001); end
  def test_costs_ah106; assert_in_epsilon(730.7665410414163, worksheet.costs_ah106, 0.001); end
  def test_costs_ar106; assert_in_epsilon(913.8419641432276, worksheet.costs_ar106, 0.001); end
  def test_costs_b107; assert_equal("XI.g", worksheet.costs_b107); end
  def test_costs_c107; assert_equal("Oil & Gas Industry", worksheet.costs_c107); end
  def test_costs_d107; assert_equal("Industry", worksheet.costs_d107); end
  def test_costs_e107; assert_equal("MEUR", worksheet.costs_e107); end
  def test_costs_p107; assert_in_delta(0, (worksheet.costs_p107||0), 0.001); end
  def test_costs_q107; assert_in_delta(0, (worksheet.costs_q107||0), 0.001); end
  def test_costs_r107; assert_in_delta(0, (worksheet.costs_r107||0), 0.001); end
  def test_costs_s107; assert_in_delta(0, (worksheet.costs_s107||0), 0.001); end
  def test_costs_t107; assert_in_delta(0, (worksheet.costs_t107||0), 0.001); end
  def test_costs_u107; assert_in_delta(0, (worksheet.costs_u107||0), 0.001); end
  def test_costs_v107; assert_in_delta(0, (worksheet.costs_v107||0), 0.001); end
  def test_costs_w107; assert_in_delta(0, (worksheet.costs_w107||0), 0.001); end
  def test_costs_x107; assert_in_delta(0, (worksheet.costs_x107||0), 0.001); end
  def test_costs_f107; assert_in_delta(0, (worksheet.costs_f107||0), 0.001); end
  def test_costs_z107; assert_in_epsilon(781.9147767460593, worksheet.costs_z107, 0.001); end
  def test_costs_aj107; assert_in_epsilon(781.9147767460593, worksheet.costs_aj107, 0.001); end
  def test_costs_g107; assert_in_epsilon(-1.2731824981971258, worksheet.costs_g107, 0.001); end
  def test_costs_aa107; assert_in_epsilon(1106.7664948928789, worksheet.costs_aa107, 0.001); end
  def test_costs_ak107; assert_in_epsilon(1105.4933123946817, worksheet.costs_ak107, 0.001); end
  def test_costs_h107; assert_in_delta(0.7956570696254314, worksheet.costs_h107, 0.001); end
  def test_costs_ab107; assert_in_epsilon(1022.3314408568475, worksheet.costs_ab107, 0.001); end
  def test_costs_al107; assert_in_epsilon(1023.127097926473, worksheet.costs_al107, 0.001); end
  def test_costs_i107; assert_in_epsilon(5.812341438441588, worksheet.costs_i107, 0.001); end
  def test_costs_ac107; assert_in_epsilon(937.3385486845616, worksheet.costs_ac107, 0.001); end
  def test_costs_am107; assert_in_epsilon(943.1508901230031, worksheet.costs_am107, 0.001); end
  def test_costs_j107; assert_in_epsilon(107.17061251186517, worksheet.costs_j107, 0.001); end
  def test_costs_ad107; assert_in_epsilon(702.2836732536033, worksheet.costs_ad107, 0.001); end
  def test_costs_an107; assert_in_epsilon(809.4542857654685, worksheet.costs_an107, 0.001); end
  def test_costs_k107; assert_in_epsilon(116.7723844123402, worksheet.costs_k107, 0.001); end
  def test_costs_ae107; assert_in_epsilon(578.0524695659251, worksheet.costs_ae107, 0.001); end
  def test_costs_ao107; assert_in_epsilon(694.8248539782653, worksheet.costs_ao107, 0.001); end
  def test_costs_l107; assert_in_epsilon(119.28445403817709, worksheet.costs_l107, 0.001); end
  def test_costs_af107; assert_in_epsilon(476.1575239325885, worksheet.costs_af107, 0.001); end
  def test_costs_ap107; assert_in_epsilon(595.4419779707656, worksheet.costs_ap107, 0.001); end
  def test_costs_m107; assert_in_epsilon(114.5246276959295, worksheet.costs_m107, 0.001); end
  def test_costs_ag107; assert_in_epsilon(383.9702382697591, worksheet.costs_ag107, 0.001); end
  def test_costs_aq107; assert_in_epsilon(498.4948659656886, worksheet.costs_aq107, 0.001); end
  def test_costs_n107; assert_in_epsilon(103.68112853430833, worksheet.costs_n107, 0.001); end
  def test_costs_ah107; assert_in_epsilon(300.149620293194, worksheet.costs_ah107, 0.001); end
  def test_costs_ar107; assert_in_epsilon(403.83074882750236, worksheet.costs_ar107, 0.001); end
  def test_costs_b108; assert_equal("XI.h", worksheet.costs_b108); end
  def test_costs_c108; assert_equal("Food, drinks and tobacco Industry", worksheet.costs_c108); end
  def test_costs_d108; assert_equal("Industry", worksheet.costs_d108); end
  def test_costs_e108; assert_equal("MEUR", worksheet.costs_e108); end
  def test_costs_p108; assert_in_delta(0, (worksheet.costs_p108||0), 0.001); end
  def test_costs_q108; assert_in_delta(0, (worksheet.costs_q108||0), 0.001); end
  def test_costs_r108; assert_in_delta(0, (worksheet.costs_r108||0), 0.001); end
  def test_costs_s108; assert_in_delta(0, (worksheet.costs_s108||0), 0.001); end
  def test_costs_t108; assert_in_delta(0, (worksheet.costs_t108||0), 0.001); end
  def test_costs_u108; assert_in_delta(0, (worksheet.costs_u108||0), 0.001); end
  def test_costs_v108; assert_in_delta(0, (worksheet.costs_v108||0), 0.001); end
  def test_costs_w108; assert_in_delta(0, (worksheet.costs_w108||0), 0.001); end
  def test_costs_x108; assert_in_delta(0, (worksheet.costs_x108||0), 0.001); end
  def test_costs_f108; assert_in_delta(0, (worksheet.costs_f108||0), 0.001); end
  def test_costs_z108; assert_in_epsilon(614.2587734585472, worksheet.costs_z108, 0.001); end
  def test_costs_aj108; assert_in_epsilon(614.2587734585472, worksheet.costs_aj108, 0.001); end
  def test_costs_g108; assert_in_epsilon(29.086260846920464, worksheet.costs_g108, 0.001); end
  def test_costs_aa108; assert_in_epsilon(749.8593846526645, worksheet.costs_aa108, 0.001); end
  def test_costs_ak108; assert_in_epsilon(778.945645499585, worksheet.costs_ak108, 0.001); end
  def test_costs_h108; assert_in_epsilon(60.46907084951499, worksheet.costs_h108, 0.001); end
  def test_costs_ab108; assert_in_epsilon(755.7486204999333, worksheet.costs_ab108, 0.001); end
  def test_costs_al108; assert_in_epsilon(816.2176913494483, worksheet.costs_al108, 0.001); end
  def test_costs_i108; assert_in_epsilon(101.5352155342288, worksheet.costs_i108, 0.001); end
  def test_costs_ac108; assert_in_epsilon(821.5205605017093, worksheet.costs_ac108, 0.001); end
  def test_costs_am108; assert_in_epsilon(923.055776035938, worksheet.costs_am108, 0.001); end
  def test_costs_j108; assert_in_epsilon(128.51814280571674, worksheet.costs_j108, 0.001); end
  def test_costs_ad108; assert_in_epsilon(762.9856123062378, worksheet.costs_ad108, 0.001); end
  def test_costs_an108; assert_in_epsilon(891.5037551119545, worksheet.costs_an108, 0.001); end
  def test_costs_k108; assert_in_epsilon(150.0457576916851, worksheet.costs_k108, 0.001); end
  def test_costs_ae108; assert_in_epsilon(697.4890453990898, worksheet.costs_ae108, 0.001); end
  def test_costs_ao108; assert_in_epsilon(847.534803090775, worksheet.costs_ao108, 0.001); end
  def test_costs_l108; assert_in_epsilon(169.31630177780278, worksheet.costs_l108, 0.001); end
  def test_costs_af108; assert_in_epsilon(643.5999372531949, worksheet.costs_af108, 0.001); end
  def test_costs_ap108; assert_in_epsilon(812.9162390309976, worksheet.costs_ap108, 0.001); end
  def test_costs_m108; assert_in_epsilon(185.8211349486501, worksheet.costs_m108, 0.001); end
  def test_costs_ag108; assert_in_epsilon(595.8081755337895, worksheet.costs_ag108, 0.001); end
  def test_costs_aq108; assert_in_epsilon(781.6293104824396, worksheet.costs_aq108, 0.001); end
  def test_costs_n108; assert_in_epsilon(199.26991742473743, worksheet.costs_n108, 0.001); end
  def test_costs_ah108; assert_in_epsilon(551.9870961182805, worksheet.costs_ah108, 0.001); end
  def test_costs_ar108; assert_in_epsilon(751.2570135430179, worksheet.costs_ar108, 0.001); end
  def test_costs_b109; assert_equal("XI.i", worksheet.costs_b109); end
  def test_costs_c109; assert_equal("Machines Industry", worksheet.costs_c109); end
  def test_costs_d109; assert_equal("Industry", worksheet.costs_d109); end
  def test_costs_e109; assert_equal("MEUR", worksheet.costs_e109); end
  def test_costs_p109; assert_in_delta(0, (worksheet.costs_p109||0), 0.001); end
  def test_costs_q109; assert_in_delta(0, (worksheet.costs_q109||0), 0.001); end
  def test_costs_r109; assert_in_delta(0, (worksheet.costs_r109||0), 0.001); end
  def test_costs_s109; assert_in_delta(0, (worksheet.costs_s109||0), 0.001); end
  def test_costs_t109; assert_in_delta(0, (worksheet.costs_t109||0), 0.001); end
  def test_costs_u109; assert_in_delta(0, (worksheet.costs_u109||0), 0.001); end
  def test_costs_v109; assert_in_delta(0, (worksheet.costs_v109||0), 0.001); end
  def test_costs_w109; assert_in_delta(0, (worksheet.costs_w109||0), 0.001); end
  def test_costs_x109; assert_in_delta(0, (worksheet.costs_x109||0), 0.001); end
  def test_costs_f109; assert_in_delta(0, (worksheet.costs_f109||0), 0.001); end
  def test_costs_z109; assert_in_delta(0, (worksheet.costs_z109||0), 0.001); end
  def test_costs_aj109; assert_in_delta(0, (worksheet.costs_aj109||0), 0.001); end
  def test_costs_g109; assert_in_delta(0, (worksheet.costs_g109||0), 0.001); end
  def test_costs_aa109; assert_in_delta(0, (worksheet.costs_aa109||0), 0.001); end
  def test_costs_ak109; assert_in_delta(0, (worksheet.costs_ak109||0), 0.001); end
  def test_costs_h109; assert_in_delta(0, (worksheet.costs_h109||0), 0.001); end
  def test_costs_ab109; assert_in_delta(0, (worksheet.costs_ab109||0), 0.001); end
  def test_costs_al109; assert_in_delta(0, (worksheet.costs_al109||0), 0.001); end
  def test_costs_i109; assert_in_delta(0, (worksheet.costs_i109||0), 0.001); end
  def test_costs_ac109; assert_in_delta(0, (worksheet.costs_ac109||0), 0.001); end
  def test_costs_am109; assert_in_delta(0, (worksheet.costs_am109||0), 0.001); end
  def test_costs_j109; assert_in_delta(0, (worksheet.costs_j109||0), 0.001); end
  def test_costs_ad109; assert_in_delta(0, (worksheet.costs_ad109||0), 0.001); end
  def test_costs_an109; assert_in_delta(0, (worksheet.costs_an109||0), 0.001); end
  def test_costs_k109; assert_in_delta(0, (worksheet.costs_k109||0), 0.001); end
  def test_costs_ae109; assert_in_delta(0, (worksheet.costs_ae109||0), 0.001); end
  def test_costs_ao109; assert_in_delta(0, (worksheet.costs_ao109||0), 0.001); end
  def test_costs_l109; assert_in_delta(0, (worksheet.costs_l109||0), 0.001); end
  def test_costs_af109; assert_in_delta(0, (worksheet.costs_af109||0), 0.001); end
  def test_costs_ap109; assert_in_delta(0, (worksheet.costs_ap109||0), 0.001); end
  def test_costs_m109; assert_in_delta(0, (worksheet.costs_m109||0), 0.001); end
  def test_costs_ag109; assert_in_delta(0, (worksheet.costs_ag109||0), 0.001); end
  def test_costs_aq109; assert_in_delta(0, (worksheet.costs_aq109||0), 0.001); end
  def test_costs_n109; assert_in_delta(0, (worksheet.costs_n109||0), 0.001); end
  def test_costs_ah109; assert_in_delta(0, (worksheet.costs_ah109||0), 0.001); end
  def test_costs_ar109; assert_in_delta(0, (worksheet.costs_ar109||0), 0.001); end
  def test_costs_b110; assert_equal("XI.j", worksheet.costs_b110); end
  def test_costs_c110; assert_equal("Non-Ferrous metals Industry", worksheet.costs_c110); end
  def test_costs_d110; assert_equal("Industry", worksheet.costs_d110); end
  def test_costs_e110; assert_equal("MEUR", worksheet.costs_e110); end
  def test_costs_p110; assert_in_delta(0, (worksheet.costs_p110||0), 0.001); end
  def test_costs_q110; assert_in_delta(0, (worksheet.costs_q110||0), 0.001); end
  def test_costs_r110; assert_in_delta(0, (worksheet.costs_r110||0), 0.001); end
  def test_costs_s110; assert_in_delta(0, (worksheet.costs_s110||0), 0.001); end
  def test_costs_t110; assert_in_delta(0, (worksheet.costs_t110||0), 0.001); end
  def test_costs_u110; assert_in_delta(0, (worksheet.costs_u110||0), 0.001); end
  def test_costs_v110; assert_in_delta(0, (worksheet.costs_v110||0), 0.001); end
  def test_costs_w110; assert_in_delta(0, (worksheet.costs_w110||0), 0.001); end
  def test_costs_x110; assert_in_delta(0, (worksheet.costs_x110||0), 0.001); end
  def test_costs_f110; assert_in_delta(0, (worksheet.costs_f110||0), 0.001); end
  def test_costs_z110; assert_in_epsilon(112.37980694519494, worksheet.costs_z110, 0.001); end
  def test_costs_aj110; assert_in_epsilon(112.37980694519494, worksheet.costs_aj110, 0.001); end
  def test_costs_g110; assert_in_epsilon(5.783961955155683, worksheet.costs_g110, 0.001); end
  def test_costs_aa110; assert_in_epsilon(225.70141923267767, worksheet.costs_aa110, 0.001); end
  def test_costs_ak110; assert_in_epsilon(231.48538118783335, worksheet.costs_ak110, 0.001); end
  def test_costs_h110; assert_in_epsilon(11.662617072422627, worksheet.costs_h110, 0.001); end
  def test_costs_ab110; assert_in_epsilon(222.39472115518683, worksheet.costs_ab110, 0.001); end
  def test_costs_al110; assert_in_epsilon(234.05733822760945, worksheet.costs_al110, 0.001); end
  def test_costs_i110; assert_in_epsilon(18.268571560070153, worksheet.costs_i110, 0.001); end
  def test_costs_ac110; assert_in_epsilon(227.5252998612602, worksheet.costs_ac110, 0.001); end
  def test_costs_am110; assert_in_epsilon(245.79387142133035, worksheet.costs_am110, 0.001); end
  def test_costs_j110; assert_in_epsilon(25.081978904695585, worksheet.costs_j110, 0.001); end
  def test_costs_ad110; assert_in_epsilon(230.84243984430498, worksheet.costs_ad110, 0.001); end
  def test_costs_an110; assert_in_epsilon(255.92441874900055, worksheet.costs_an110, 0.001); end
  def test_costs_k110; assert_in_epsilon(31.961187271322526, worksheet.costs_k110, 0.001); end
  def test_costs_ae110; assert_in_epsilon(231.8030617099261, worksheet.costs_ae110, 0.001); end
  def test_costs_ao110; assert_in_epsilon(263.7642489812486, worksheet.costs_ao110, 0.001); end
  def test_costs_l110; assert_in_epsilon(37.595625131198396, worksheet.costs_l110, 0.001); end
  def test_costs_af110; assert_in_epsilon(224.41815964259197, worksheet.costs_af110, 0.001); end
  def test_costs_ap110; assert_in_epsilon(262.01378477379035, worksheet.costs_ap110, 0.001); end
  def test_costs_m110; assert_in_epsilon(42.96923038782907, worksheet.costs_m110, 0.001); end
  def test_costs_ag110; assert_in_epsilon(217.54914171389146, worksheet.costs_ag110, 0.001); end
  def test_costs_aq110; assert_in_epsilon(260.5183721017205, worksheet.costs_aq110, 0.001); end
  def test_costs_n110; assert_in_epsilon(48.75575930904895, worksheet.costs_n110, 0.001); end
  def test_costs_ah110; assert_in_epsilon(213.87746546269264, worksheet.costs_ah110, 0.001); end
  def test_costs_ar110; assert_in_epsilon(262.6332247717416, worksheet.costs_ar110, 0.001); end
  def test_costs_b111; assert_equal("XI.k", worksheet.costs_b111); end
  def test_costs_c111; assert_equal("Construction industry", worksheet.costs_c111); end
  def test_costs_d111; assert_equal("Industry", worksheet.costs_d111); end
  def test_costs_e111; assert_equal("MEUR", worksheet.costs_e111); end
  def test_costs_p111; assert_in_delta(0, (worksheet.costs_p111||0), 0.001); end
  def test_costs_q111; assert_in_delta(0, (worksheet.costs_q111||0), 0.001); end
  def test_costs_r111; assert_in_delta(0, (worksheet.costs_r111||0), 0.001); end
  def test_costs_s111; assert_in_delta(0, (worksheet.costs_s111||0), 0.001); end
  def test_costs_t111; assert_in_delta(0, (worksheet.costs_t111||0), 0.001); end
  def test_costs_u111; assert_in_delta(0, (worksheet.costs_u111||0), 0.001); end
  def test_costs_v111; assert_in_delta(0, (worksheet.costs_v111||0), 0.001); end
  def test_costs_w111; assert_in_delta(0, (worksheet.costs_w111||0), 0.001); end
  def test_costs_x111; assert_in_delta(0, (worksheet.costs_x111||0), 0.001); end
  def test_costs_f111; assert_in_delta(0, (worksheet.costs_f111||0), 0.001); end
  def test_costs_z111; assert_in_epsilon(62.94103622824142, worksheet.costs_z111, 0.001); end
  def test_costs_aj111; assert_in_epsilon(62.94103622824142, worksheet.costs_aj111, 0.001); end
  def test_costs_g111; assert_in_epsilon(2.45539566243115, worksheet.costs_g111, 0.001); end
  def test_costs_aa111; assert_in_epsilon(96.8925703800887, worksheet.costs_aa111, 0.001); end
  def test_costs_ak111; assert_in_epsilon(99.34796604251984, worksheet.costs_ak111, 0.001); end
  def test_costs_h111; assert_in_epsilon(6.090598717436167, worksheet.costs_h111, 0.001); end
  def test_costs_ab111; assert_in_epsilon(119.31347180437677, worksheet.costs_ab111, 0.001); end
  def test_costs_al111; assert_in_epsilon(125.40407052181294, worksheet.costs_al111, 0.001); end
  def test_costs_i111; assert_in_epsilon(11.481532234808547, worksheet.costs_i111, 0.001); end
  def test_costs_ac111; assert_in_epsilon(149.99079564782758, worksheet.costs_ac111, 0.001); end
  def test_costs_am111; assert_in_epsilon(161.47232788263614, worksheet.costs_am111, 0.001); end
  def test_costs_j111; assert_in_epsilon(15.182301937544965, worksheet.costs_j111, 0.001); end
  def test_costs_ad111; assert_in_epsilon(150.57027823377769, worksheet.costs_ad111, 0.001); end
  def test_costs_an111; assert_in_epsilon(165.75258017132265, worksheet.costs_an111, 0.001); end
  def test_costs_k111; assert_in_epsilon(18.014310524642497, worksheet.costs_k111, 0.001); end
  def test_costs_ae111; assert_in_epsilon(145.5180564992773, worksheet.costs_ae111, 0.001); end
  def test_costs_ao111; assert_in_epsilon(163.5323670239198, worksheet.costs_ao111, 0.001); end
  def test_costs_l111; assert_in_epsilon(20.492943384903718, worksheet.costs_l111, 0.001); end
  def test_costs_af111; assert_in_epsilon(141.6903902234726, worksheet.costs_af111, 0.001); end
  def test_costs_ap111; assert_in_epsilon(162.18333360837633, worksheet.costs_ap111, 0.001); end
  def test_costs_m111; assert_in_epsilon(22.579239190043406, worksheet.costs_m111, 0.001); end
  def test_costs_ag111; assert_in_epsilon(138.75497109346946, worksheet.costs_ag111, 0.001); end
  def test_costs_aq111; assert_in_epsilon(161.33421028351287, worksheet.costs_aq111, 0.001); end
  def test_costs_n111; assert_in_epsilon(24.24103303017207, worksheet.costs_n111, 0.001); end
  def test_costs_ah111; assert_in_epsilon(136.56007516003598, worksheet.costs_ah111, 0.001); end
  def test_costs_ar111; assert_in_epsilon(160.80110819020805, worksheet.costs_ar111, 0.001); end
  def test_costs_b112; assert_equal("XI.l", worksheet.costs_b112); end
  def test_costs_c112; assert_equal("Other Industry", worksheet.costs_c112); end
  def test_costs_d112; assert_equal("Industry", worksheet.costs_d112); end
  def test_costs_e112; assert_equal("MEUR", worksheet.costs_e112); end
  def test_costs_p112; assert_in_delta(0, (worksheet.costs_p112||0), 0.001); end
  def test_costs_q112; assert_in_delta(0, (worksheet.costs_q112||0), 0.001); end
  def test_costs_r112; assert_in_delta(0, (worksheet.costs_r112||0), 0.001); end
  def test_costs_s112; assert_in_delta(0, (worksheet.costs_s112||0), 0.001); end
  def test_costs_t112; assert_in_delta(0, (worksheet.costs_t112||0), 0.001); end
  def test_costs_u112; assert_in_delta(0, (worksheet.costs_u112||0), 0.001); end
  def test_costs_v112; assert_in_delta(0, (worksheet.costs_v112||0), 0.001); end
  def test_costs_w112; assert_in_delta(0, (worksheet.costs_w112||0), 0.001); end
  def test_costs_x112; assert_in_delta(0, (worksheet.costs_x112||0), 0.001); end
  def test_costs_f112; assert_in_delta(0, (worksheet.costs_f112||0), 0.001); end
  def test_costs_z112; assert_in_delta(0, (worksheet.costs_z112||0), 0.001); end
  def test_costs_aj112; assert_in_delta(0, (worksheet.costs_aj112||0), 0.001); end
  def test_costs_g112; assert_in_delta(0, (worksheet.costs_g112||0), 0.001); end
  def test_costs_aa112; assert_in_delta(0, (worksheet.costs_aa112||0), 0.001); end
  def test_costs_ak112; assert_in_delta(0, (worksheet.costs_ak112||0), 0.001); end
  def test_costs_h112; assert_in_delta(0, (worksheet.costs_h112||0), 0.001); end
  def test_costs_ab112; assert_in_delta(0, (worksheet.costs_ab112||0), 0.001); end
  def test_costs_al112; assert_in_delta(0, (worksheet.costs_al112||0), 0.001); end
  def test_costs_i112; assert_in_delta(0, (worksheet.costs_i112||0), 0.001); end
  def test_costs_ac112; assert_in_delta(0, (worksheet.costs_ac112||0), 0.001); end
  def test_costs_am112; assert_in_delta(0, (worksheet.costs_am112||0), 0.001); end
  def test_costs_j112; assert_in_delta(0, (worksheet.costs_j112||0), 0.001); end
  def test_costs_ad112; assert_in_delta(0, (worksheet.costs_ad112||0), 0.001); end
  def test_costs_an112; assert_in_delta(0, (worksheet.costs_an112||0), 0.001); end
  def test_costs_k112; assert_in_delta(0, (worksheet.costs_k112||0), 0.001); end
  def test_costs_ae112; assert_in_delta(0, (worksheet.costs_ae112||0), 0.001); end
  def test_costs_ao112; assert_in_delta(0, (worksheet.costs_ao112||0), 0.001); end
  def test_costs_l112; assert_in_delta(0, (worksheet.costs_l112||0), 0.001); end
  def test_costs_af112; assert_in_delta(0, (worksheet.costs_af112||0), 0.001); end
  def test_costs_ap112; assert_in_delta(0, (worksheet.costs_ap112||0), 0.001); end
  def test_costs_m112; assert_in_delta(0, (worksheet.costs_m112||0), 0.001); end
  def test_costs_ag112; assert_in_delta(0, (worksheet.costs_ag112||0), 0.001); end
  def test_costs_aq112; assert_in_delta(0, (worksheet.costs_aq112||0), 0.001); end
  def test_costs_n112; assert_in_delta(0, (worksheet.costs_n112||0), 0.001); end
  def test_costs_ah112; assert_in_delta(0, (worksheet.costs_ah112||0), 0.001); end
  def test_costs_ar112; assert_in_delta(0, (worksheet.costs_ar112||0), 0.001); end
  def test_costs_b113; assert_equal("XII.a", worksheet.costs_b113); end
  def test_costs_c113; assert_equal("Domestic passenger transport", worksheet.costs_c113); end
  def test_costs_d113; assert_equal("Transport", worksheet.costs_d113); end
  def test_costs_e113; assert_equal("MEUR", worksheet.costs_e113); end
  def test_costs_f113; assert_in_epsilon(7255.186780178483, worksheet.costs_f113, 0.001); end
  def test_costs_p113; assert_in_epsilon(7486.845974896208, worksheet.costs_p113, 0.001); end
  def test_costs_z113; assert_in_epsilon(2598.249666380655, worksheet.costs_z113, 0.001); end
  def test_costs_aj113; assert_in_epsilon(17340.282421455348, worksheet.costs_aj113, 0.001); end
  def test_costs_g113; assert_in_epsilon(7255.186780178483, worksheet.costs_g113, 0.001); end
  def test_costs_q113; assert_in_epsilon(7503.353774203745, worksheet.costs_q113, 0.001); end
  def test_costs_aa113; assert_in_epsilon(2801.888956541145, worksheet.costs_aa113, 0.001); end
  def test_costs_ak113; assert_in_epsilon(17560.42951092337, worksheet.costs_ak113, 0.001); end
  def test_costs_h113; assert_in_epsilon(9135.308883382844, worksheet.costs_h113, 0.001); end
  def test_costs_r113; assert_in_epsilon(8391.013122981085, worksheet.costs_r113, 0.001); end
  def test_costs_ab113; assert_in_epsilon(2634.9268398685535, worksheet.costs_ab113, 0.001); end
  def test_costs_al113; assert_in_epsilon(20161.248846232484, worksheet.costs_al113, 0.001); end
  def test_costs_i113; assert_in_epsilon(9227.156713770351, worksheet.costs_i113, 0.001); end
  def test_costs_s113; assert_in_epsilon(9130.722155571602, worksheet.costs_s113, 0.001); end
  def test_costs_ac113; assert_in_epsilon(2455.9453771638437, worksheet.costs_ac113, 0.001); end
  def test_costs_am113; assert_in_epsilon(20813.8242465058, worksheet.costs_am113, 0.001); end
  def test_costs_j113; assert_in_epsilon(9286.83553249622, worksheet.costs_j113, 0.001); end
  def test_costs_t113; assert_in_epsilon(9826.154821468268, worksheet.costs_t113, 0.001); end
  def test_costs_ad113; assert_in_epsilon(2109.307434586628, worksheet.costs_ad113, 0.001); end
  def test_costs_an113; assert_in_epsilon(21222.297788551114, worksheet.costs_an113, 0.001); end
  def test_costs_k113; assert_in_epsilon(8956.197242224267, worksheet.costs_k113, 0.001); end
  def test_costs_u113; assert_in_epsilon(10401.98913684367, worksheet.costs_u113, 0.001); end
  def test_costs_ae113; assert_in_epsilon(1735.79401399629, worksheet.costs_ae113, 0.001); end
  def test_costs_ao113; assert_in_epsilon(21093.980393064223, worksheet.costs_ao113, 0.001); end
  def test_costs_l113; assert_in_epsilon(8539.915037855932, worksheet.costs_l113, 0.001); end
  def test_costs_v113; assert_in_epsilon(10927.250589090758, worksheet.costs_v113, 0.001); end
  def test_costs_af113; assert_in_epsilon(1500.9700952948758, worksheet.costs_af113, 0.001); end
  def test_costs_ap113; assert_in_epsilon(20968.135722241568, worksheet.costs_ap113, 0.001); end
  def test_costs_m113; assert_in_epsilon(7904.05692922931, worksheet.costs_m113, 0.001); end
  def test_costs_w113; assert_in_epsilon(11367.66610767038, worksheet.costs_w113, 0.001); end
  def test_costs_ag113; assert_in_epsilon(1311.6914606756527, worksheet.costs_ag113, 0.001); end
  def test_costs_aq113; assert_in_epsilon(20583.414497575344, worksheet.costs_aq113, 0.001); end
  def test_costs_n113; assert_in_epsilon(6435.199861391066, worksheet.costs_n113, 0.001); end
  def test_costs_x113; assert_in_epsilon(11757.959706138234, worksheet.costs_x113, 0.001); end
  def test_costs_ah113; assert_in_epsilon(1185.1622499587636, worksheet.costs_ah113, 0.001); end
  def test_costs_ar113; assert_in_epsilon(19378.321817488064, worksheet.costs_ar113, 0.001); end
  def test_costs_b114; assert_equal("XII.b", worksheet.costs_b114); end
  def test_costs_c114; assert_equal("Domestic freight", worksheet.costs_c114); end
  def test_costs_d114; assert_equal("Transport", worksheet.costs_d114); end
  def test_costs_e114; assert_equal("MEUR", worksheet.costs_e114); end
  def test_costs_f114; assert_in_delta(0, (worksheet.costs_f114||0), 0.001); end
  def test_costs_p114; assert_in_delta(0, (worksheet.costs_p114||0), 0.001); end
  def test_costs_z114; assert_in_epsilon(1427.531465918821, worksheet.costs_z114, 0.001); end
  def test_costs_aj114; assert_in_epsilon(1427.531465918821, worksheet.costs_aj114, 0.001); end
  def test_costs_g114; assert_in_epsilon(1558.3690491571892, worksheet.costs_g114, 0.001); end
  def test_costs_q114; assert_in_epsilon(1050.7829188367477, worksheet.costs_q114, 0.001); end
  def test_costs_aa114; assert_in_epsilon(1622.8399095441005, worksheet.costs_aa114, 0.001); end
  def test_costs_ak114; assert_in_epsilon(4231.991877538037, worksheet.costs_ak114, 0.001); end
  def test_costs_h114; assert_in_epsilon(1577.4599875808294, worksheet.costs_h114, 0.001); end
  def test_costs_r114; assert_in_epsilon(1060.0477893965835, worksheet.costs_r114, 0.001); end
  def test_costs_ab114; assert_in_epsilon(1657.2021721194048, worksheet.costs_ab114, 0.001); end
  def test_costs_al114; assert_in_epsilon(4294.709949096818, worksheet.costs_al114, 0.001); end
  def test_costs_i114; assert_in_epsilon(1616.1819232767775, worksheet.costs_i114, 0.001); end
  def test_costs_s114; assert_in_epsilon(1078.6740283603126, worksheet.costs_s114, 0.001); end
  def test_costs_ac114; assert_in_epsilon(1680.8703000725109, worksheet.costs_ac114, 0.001); end
  def test_costs_am114; assert_in_epsilon(4375.726251709601, worksheet.costs_am114, 0.001); end
  def test_costs_j114; assert_in_epsilon(1656.0305998003432, worksheet.costs_j114, 0.001); end
  def test_costs_t114; assert_in_epsilon(1097.5185431470027, worksheet.costs_t114, 0.001); end
  def test_costs_ad114; assert_in_epsilon(1660.200922775753, worksheet.costs_ad114, 0.001); end
  def test_costs_an114; assert_in_epsilon(4413.750065723099, worksheet.costs_an114, 0.001); end
  def test_costs_k114; assert_in_epsilon(1697.0992634120958, worksheet.costs_k114, 0.001); end
  def test_costs_u114; assert_in_epsilon(1116.6318940263507, worksheet.costs_u114, 0.001); end
  def test_costs_ae114; assert_in_epsilon(1558.1448961768401, worksheet.costs_ae114, 0.001); end
  def test_costs_ao114; assert_in_epsilon(4371.876053615287, worksheet.costs_ao114, 0.001); end
  def test_costs_l114; assert_in_epsilon(1739.4811603726016, worksheet.costs_l114, 0.001); end
  def test_costs_v114; assert_in_epsilon(1136.0646412680537, worksheet.costs_v114, 0.001); end
  def test_costs_af114; assert_in_epsilon(1455.9100053199252, worksheet.costs_af114, 0.001); end
  def test_costs_ap114; assert_in_epsilon(4331.455806960581, worksheet.costs_ap114, 0.001); end
  def test_costs_m114; assert_in_epsilon(1783.2695369424287, worksheet.costs_m114, 0.001); end
  def test_costs_w114; assert_in_epsilon(1155.8673451418076, worksheet.costs_w114, 0.001); end
  def test_costs_ag114; assert_in_epsilon(1353.3823394606604, worksheet.costs_ag114, 0.001); end
  def test_costs_aq114; assert_in_epsilon(4292.519221544897, worksheet.costs_aq114, 0.001); end
  def test_costs_n114; assert_in_epsilon(1828.5576393821443, worksheet.costs_n114, 0.001); end
  def test_costs_x114; assert_in_epsilon(1176.0905659173093, worksheet.costs_x114, 0.001); end
  def test_costs_ah114; assert_in_epsilon(1250.3371419482085, worksheet.costs_ah114, 0.001); end
  def test_costs_ar114; assert_in_epsilon(4254.985347247662, worksheet.costs_ar114, 0.001); end
  def test_costs_b115; assert_equal("XII.c", worksheet.costs_b115); end
  def test_costs_c115; assert_equal("International aviation", worksheet.costs_c115); end
  def test_costs_d115; assert_equal("Transport", worksheet.costs_d115); end
  def test_costs_e115; assert_equal("MEUR", worksheet.costs_e115); end
  def test_costs_f115; assert_in_epsilon(60.46146948776062, worksheet.costs_f115, 0.001); end
  def test_costs_p115; assert_in_epsilon(47.60853352545351, worksheet.costs_p115, 0.001); end
  def test_costs_z115; assert_in_epsilon(675.5219023389548, worksheet.costs_z115, 0.001); end
  def test_costs_aj115; assert_in_epsilon(783.5919053521689, worksheet.costs_aj115, 0.001); end
  def test_costs_g115; assert_in_epsilon(318.3481202766215, worksheet.costs_g115, 0.001); end
  def test_costs_q115; assert_in_epsilon(250.67348321765039, worksheet.costs_q115, 0.001); end
  def test_costs_aa115; assert_in_epsilon(743.2576028441813, worksheet.costs_aa115, 0.001); end
  def test_costs_ak115; assert_in_epsilon(1312.2792063384532, worksheet.costs_ak115, 0.001); end
  def test_costs_h115; assert_in_epsilon(319.31353741019944, worksheet.costs_h115, 0.001); end
  def test_costs_r115; assert_in_epsilon(251.4336713897109, worksheet.costs_r115, 0.001); end
  def test_costs_ab115; assert_in_epsilon(730.3476973138011, worksheet.costs_ab115, 0.001); end
  def test_costs_al115; assert_in_epsilon(1301.0949061137114, worksheet.costs_al115, 0.001); end
  def test_costs_i115; assert_in_epsilon(321.2502270927476, worksheet.costs_i115, 0.001); end
  def test_costs_s115; assert_in_epsilon(252.95865840145822, worksheet.costs_s115, 0.001); end
  def test_costs_ac115; assert_in_epsilon(706.5862904658479, worksheet.costs_ac115, 0.001); end
  def test_costs_am115; assert_in_epsilon(1280.7951759600537, worksheet.costs_am115, 0.001); end
  def test_costs_j115; assert_in_epsilon(323.19866312014864, worksheet.costs_j115, 0.001); end
  def test_costs_t115; assert_in_epsilon(254.49289471292434, worksheet.costs_t115, 0.001); end
  def test_costs_ad115; assert_in_epsilon(673.3934273655447, worksheet.costs_ad115, 0.001); end
  def test_costs_an115; assert_in_epsilon(1251.0849851986177, worksheet.costs_an115, 0.001); end
  def test_costs_k115; assert_in_epsilon(325.1589167359361, worksheet.costs_k115, 0.001); end
  def test_costs_u115; assert_in_epsilon(256.0364364226491, worksheet.costs_u115, 0.001); end
  def test_costs_ae115; assert_in_epsilon(609.8188699336637, worksheet.costs_ae115, 0.001); end
  def test_costs_ao115; assert_in_epsilon(1191.0142230922488, worksheet.costs_ao115, 0.001); end
  def test_costs_l115; assert_in_epsilon(327.131059615748, worksheet.costs_l115, 0.001); end
  def test_costs_v115; assert_in_epsilon(257.58933996941977, worksheet.costs_v115, 0.001); end
  def test_costs_af115; assert_in_epsilon(549.6303088405177, worksheet.costs_af115, 0.001); end
  def test_costs_ap115; assert_in_epsilon(1134.3507084256855, worksheet.costs_ap115, 0.001); end
  def test_costs_m115; assert_in_epsilon(329.11516386994737, worksheet.costs_m115, 0.001); end
  def test_costs_w115; assert_in_epsilon(259.1516621343345, worksheet.costs_w115, 0.001); end
  def test_costs_ag115; assert_in_epsilon(492.6906724674553, worksheet.costs_ag115, 0.001); end
  def test_costs_aq115; assert_in_epsilon(1080.9574984717372, worksheet.costs_aq115, 0.001); end
  def test_costs_n115; assert_in_epsilon(331.1113020462572, worksheet.costs_n115, 0.001); end
  def test_costs_x115; assert_in_epsilon(260.72346004287726, worksheet.costs_x115, 0.001); end
  def test_costs_ah115; assert_in_epsilon(438.8668172642022, worksheet.costs_ah115, 0.001); end
  def test_costs_ar115; assert_in_epsilon(1030.7015793533367, worksheet.costs_ar115, 0.001); end
  def test_costs_b116; assert_equal("XII.d", worksheet.costs_b116); end
  def test_costs_c116; assert_equal("Domestic aviation [UNUSED - see XII.a]", worksheet.costs_c116); end
  def test_costs_d116; assert_equal("Transport", worksheet.costs_d116); end
  def test_costs_e116; assert_equal("MEUR", worksheet.costs_e116); end
  def test_costs_f116; assert_in_delta(0, (worksheet.costs_f116||0), 0.001); end
  def test_costs_g116; assert_in_delta(0, (worksheet.costs_g116||0), 0.001); end
  def test_costs_h116; assert_in_delta(0, (worksheet.costs_h116||0), 0.001); end
  def test_costs_i116; assert_in_delta(0, (worksheet.costs_i116||0), 0.001); end
  def test_costs_j116; assert_in_delta(0, (worksheet.costs_j116||0), 0.001); end
  def test_costs_k116; assert_in_delta(0, (worksheet.costs_k116||0), 0.001); end
  def test_costs_l116; assert_in_delta(0, (worksheet.costs_l116||0), 0.001); end
  def test_costs_m116; assert_in_delta(0, (worksheet.costs_m116||0), 0.001); end
  def test_costs_n116; assert_in_delta(0, (worksheet.costs_n116||0), 0.001); end
  def test_costs_p116; assert_in_delta(0, (worksheet.costs_p116||0), 0.001); end
  def test_costs_q116; assert_in_delta(0, (worksheet.costs_q116||0), 0.001); end
  def test_costs_r116; assert_in_delta(0, (worksheet.costs_r116||0), 0.001); end
  def test_costs_s116; assert_in_delta(0, (worksheet.costs_s116||0), 0.001); end
  def test_costs_t116; assert_in_delta(0, (worksheet.costs_t116||0), 0.001); end
  def test_costs_u116; assert_in_delta(0, (worksheet.costs_u116||0), 0.001); end
  def test_costs_v116; assert_in_delta(0, (worksheet.costs_v116||0), 0.001); end
  def test_costs_w116; assert_in_delta(0, (worksheet.costs_w116||0), 0.001); end
  def test_costs_x116; assert_in_delta(0, (worksheet.costs_x116||0), 0.001); end
  def test_costs_z116; assert_in_delta(0, (worksheet.costs_z116||0), 0.001); end
  def test_costs_aa116; assert_in_delta(0, (worksheet.costs_aa116||0), 0.001); end
  def test_costs_ab116; assert_in_delta(0, (worksheet.costs_ab116||0), 0.001); end
  def test_costs_ac116; assert_in_delta(0, (worksheet.costs_ac116||0), 0.001); end
  def test_costs_ad116; assert_in_delta(0, (worksheet.costs_ad116||0), 0.001); end
  def test_costs_ae116; assert_in_delta(0, (worksheet.costs_ae116||0), 0.001); end
  def test_costs_af116; assert_in_delta(0, (worksheet.costs_af116||0), 0.001); end
  def test_costs_ag116; assert_in_delta(0, (worksheet.costs_ag116||0), 0.001); end
  def test_costs_ah116; assert_in_delta(0, (worksheet.costs_ah116||0), 0.001); end
  def test_costs_aj116; assert_in_delta(0, (worksheet.costs_aj116||0), 0.001); end
  def test_costs_ak116; assert_in_delta(0, (worksheet.costs_ak116||0), 0.001); end
  def test_costs_al116; assert_in_delta(0, (worksheet.costs_al116||0), 0.001); end
  def test_costs_am116; assert_in_delta(0, (worksheet.costs_am116||0), 0.001); end
  def test_costs_an116; assert_in_delta(0, (worksheet.costs_an116||0), 0.001); end
  def test_costs_ao116; assert_in_delta(0, (worksheet.costs_ao116||0), 0.001); end
  def test_costs_ap116; assert_in_delta(0, (worksheet.costs_ap116||0), 0.001); end
  def test_costs_aq116; assert_in_delta(0, (worksheet.costs_aq116||0), 0.001); end
  def test_costs_ar116; assert_in_delta(0, (worksheet.costs_ar116||0), 0.001); end
  def test_costs_b117; assert_equal("XII.e", worksheet.costs_b117); end
  def test_costs_c117; assert_equal("International shipping [UNUSED]", worksheet.costs_c117); end
  def test_costs_d117; assert_equal("Transport", worksheet.costs_d117); end
  def test_costs_e117; assert_equal("MEUR", worksheet.costs_e117); end
  def test_costs_f117; assert_in_delta(0, (worksheet.costs_f117||0), 0.001); end
  def test_costs_g117; assert_in_delta(0, (worksheet.costs_g117||0), 0.001); end
  def test_costs_h117; assert_in_delta(0, (worksheet.costs_h117||0), 0.001); end
  def test_costs_i117; assert_in_delta(0, (worksheet.costs_i117||0), 0.001); end
  def test_costs_j117; assert_in_delta(0, (worksheet.costs_j117||0), 0.001); end
  def test_costs_k117; assert_in_delta(0, (worksheet.costs_k117||0), 0.001); end
  def test_costs_l117; assert_in_delta(0, (worksheet.costs_l117||0), 0.001); end
  def test_costs_m117; assert_in_delta(0, (worksheet.costs_m117||0), 0.001); end
  def test_costs_n117; assert_in_delta(0, (worksheet.costs_n117||0), 0.001); end
  def test_costs_p117; assert_in_delta(0, (worksheet.costs_p117||0), 0.001); end
  def test_costs_q117; assert_in_delta(0, (worksheet.costs_q117||0), 0.001); end
  def test_costs_r117; assert_in_delta(0, (worksheet.costs_r117||0), 0.001); end
  def test_costs_s117; assert_in_delta(0, (worksheet.costs_s117||0), 0.001); end
  def test_costs_t117; assert_in_delta(0, (worksheet.costs_t117||0), 0.001); end
  def test_costs_u117; assert_in_delta(0, (worksheet.costs_u117||0), 0.001); end
  def test_costs_v117; assert_in_delta(0, (worksheet.costs_v117||0), 0.001); end
  def test_costs_w117; assert_in_delta(0, (worksheet.costs_w117||0), 0.001); end
  def test_costs_x117; assert_in_delta(0, (worksheet.costs_x117||0), 0.001); end
  def test_costs_z117; assert_in_delta(0, (worksheet.costs_z117||0), 0.001); end
  def test_costs_aa117; assert_in_delta(0, (worksheet.costs_aa117||0), 0.001); end
  def test_costs_ab117; assert_in_delta(0, (worksheet.costs_ab117||0), 0.001); end
  def test_costs_ac117; assert_in_delta(0, (worksheet.costs_ac117||0), 0.001); end
  def test_costs_ad117; assert_in_delta(0, (worksheet.costs_ad117||0), 0.001); end
  def test_costs_ae117; assert_in_delta(0, (worksheet.costs_ae117||0), 0.001); end
  def test_costs_af117; assert_in_delta(0, (worksheet.costs_af117||0), 0.001); end
  def test_costs_ag117; assert_in_delta(0, (worksheet.costs_ag117||0), 0.001); end
  def test_costs_ah117; assert_in_delta(0, (worksheet.costs_ah117||0), 0.001); end
  def test_costs_aj117; assert_in_delta(0, (worksheet.costs_aj117||0), 0.001); end
  def test_costs_ak117; assert_in_delta(0, (worksheet.costs_ak117||0), 0.001); end
  def test_costs_al117; assert_in_delta(0, (worksheet.costs_al117||0), 0.001); end
  def test_costs_am117; assert_in_delta(0, (worksheet.costs_am117||0), 0.001); end
  def test_costs_an117; assert_in_delta(0, (worksheet.costs_an117||0), 0.001); end
  def test_costs_ao117; assert_in_delta(0, (worksheet.costs_ao117||0), 0.001); end
  def test_costs_ap117; assert_in_delta(0, (worksheet.costs_ap117||0), 0.001); end
  def test_costs_aq117; assert_in_delta(0, (worksheet.costs_aq117||0), 0.001); end
  def test_costs_ar117; assert_in_delta(0, (worksheet.costs_ar117||0), 0.001); end
  def test_costs_b118; assert_equal("XII.f", worksheet.costs_b118); end
  def test_costs_c118; assert_equal("National navigation [UNUSED - see XII.a]", worksheet.costs_c118); end
  def test_costs_d118; assert_equal("Transport", worksheet.costs_d118); end
  def test_costs_e118; assert_equal("MEUR", worksheet.costs_e118); end
  def test_costs_f118; assert_in_delta(0, (worksheet.costs_f118||0), 0.001); end
  def test_costs_g118; assert_in_delta(0, (worksheet.costs_g118||0), 0.001); end
  def test_costs_h118; assert_in_delta(0, (worksheet.costs_h118||0), 0.001); end
  def test_costs_i118; assert_in_delta(0, (worksheet.costs_i118||0), 0.001); end
  def test_costs_j118; assert_in_delta(0, (worksheet.costs_j118||0), 0.001); end
  def test_costs_k118; assert_in_delta(0, (worksheet.costs_k118||0), 0.001); end
  def test_costs_l118; assert_in_delta(0, (worksheet.costs_l118||0), 0.001); end
  def test_costs_m118; assert_in_delta(0, (worksheet.costs_m118||0), 0.001); end
  def test_costs_n118; assert_in_delta(0, (worksheet.costs_n118||0), 0.001); end
  def test_costs_p118; assert_in_delta(0, (worksheet.costs_p118||0), 0.001); end
  def test_costs_q118; assert_in_delta(0, (worksheet.costs_q118||0), 0.001); end
  def test_costs_r118; assert_in_delta(0, (worksheet.costs_r118||0), 0.001); end
  def test_costs_s118; assert_in_delta(0, (worksheet.costs_s118||0), 0.001); end
  def test_costs_t118; assert_in_delta(0, (worksheet.costs_t118||0), 0.001); end
  def test_costs_u118; assert_in_delta(0, (worksheet.costs_u118||0), 0.001); end
  def test_costs_v118; assert_in_delta(0, (worksheet.costs_v118||0), 0.001); end
  def test_costs_w118; assert_in_delta(0, (worksheet.costs_w118||0), 0.001); end
  def test_costs_x118; assert_in_delta(0, (worksheet.costs_x118||0), 0.001); end
  def test_costs_z118; assert_in_delta(0, (worksheet.costs_z118||0), 0.001); end
  def test_costs_aa118; assert_in_delta(0, (worksheet.costs_aa118||0), 0.001); end
  def test_costs_ab118; assert_in_delta(0, (worksheet.costs_ab118||0), 0.001); end
  def test_costs_ac118; assert_in_delta(0, (worksheet.costs_ac118||0), 0.001); end
  def test_costs_ad118; assert_in_delta(0, (worksheet.costs_ad118||0), 0.001); end
  def test_costs_ae118; assert_in_delta(0, (worksheet.costs_ae118||0), 0.001); end
  def test_costs_af118; assert_in_delta(0, (worksheet.costs_af118||0), 0.001); end
  def test_costs_ag118; assert_in_delta(0, (worksheet.costs_ag118||0), 0.001); end
  def test_costs_ah118; assert_in_delta(0, (worksheet.costs_ah118||0), 0.001); end
  def test_costs_aj118; assert_in_delta(0, (worksheet.costs_aj118||0), 0.001); end
  def test_costs_ak118; assert_in_delta(0, (worksheet.costs_ak118||0), 0.001); end
  def test_costs_al118; assert_in_delta(0, (worksheet.costs_al118||0), 0.001); end
  def test_costs_am118; assert_in_delta(0, (worksheet.costs_am118||0), 0.001); end
  def test_costs_an118; assert_in_delta(0, (worksheet.costs_an118||0), 0.001); end
  def test_costs_ao118; assert_in_delta(0, (worksheet.costs_ao118||0), 0.001); end
  def test_costs_ap118; assert_in_delta(0, (worksheet.costs_ap118||0), 0.001); end
  def test_costs_aq118; assert_in_delta(0, (worksheet.costs_aq118||0), 0.001); end
  def test_costs_ar118; assert_in_delta(0, (worksheet.costs_ar118||0), 0.001); end
  def test_costs_b119; assert_equal("XIII.a", worksheet.costs_b119); end
  def test_costs_c119; assert_equal("Food consumption [UNUSED]", worksheet.costs_c119); end
  def test_costs_e119; assert_equal("MEUR", worksheet.costs_e119); end
  def test_costs_f119; assert_in_delta(0, (worksheet.costs_f119||0), 0.001); end
  def test_costs_g119; assert_in_delta(0, (worksheet.costs_g119||0), 0.001); end
  def test_costs_h119; assert_in_delta(0, (worksheet.costs_h119||0), 0.001); end
  def test_costs_i119; assert_in_delta(0, (worksheet.costs_i119||0), 0.001); end
  def test_costs_j119; assert_in_delta(0, (worksheet.costs_j119||0), 0.001); end
  def test_costs_k119; assert_in_delta(0, (worksheet.costs_k119||0), 0.001); end
  def test_costs_l119; assert_in_delta(0, (worksheet.costs_l119||0), 0.001); end
  def test_costs_m119; assert_in_delta(0, (worksheet.costs_m119||0), 0.001); end
  def test_costs_n119; assert_in_delta(0, (worksheet.costs_n119||0), 0.001); end
  def test_costs_p119; assert_in_delta(0, (worksheet.costs_p119||0), 0.001); end
  def test_costs_q119; assert_in_delta(0, (worksheet.costs_q119||0), 0.001); end
  def test_costs_r119; assert_in_delta(0, (worksheet.costs_r119||0), 0.001); end
  def test_costs_s119; assert_in_delta(0, (worksheet.costs_s119||0), 0.001); end
  def test_costs_t119; assert_in_delta(0, (worksheet.costs_t119||0), 0.001); end
  def test_costs_u119; assert_in_delta(0, (worksheet.costs_u119||0), 0.001); end
  def test_costs_v119; assert_in_delta(0, (worksheet.costs_v119||0), 0.001); end
  def test_costs_w119; assert_in_delta(0, (worksheet.costs_w119||0), 0.001); end
  def test_costs_x119; assert_in_delta(0, (worksheet.costs_x119||0), 0.001); end
  def test_costs_z119; assert_in_delta(0, (worksheet.costs_z119||0), 0.001); end
  def test_costs_aa119; assert_in_delta(0, (worksheet.costs_aa119||0), 0.001); end
  def test_costs_ab119; assert_in_delta(0, (worksheet.costs_ab119||0), 0.001); end
  def test_costs_ac119; assert_in_delta(0, (worksheet.costs_ac119||0), 0.001); end
  def test_costs_ad119; assert_in_delta(0, (worksheet.costs_ad119||0), 0.001); end
  def test_costs_ae119; assert_in_delta(0, (worksheet.costs_ae119||0), 0.001); end
  def test_costs_af119; assert_in_delta(0, (worksheet.costs_af119||0), 0.001); end
  def test_costs_ag119; assert_in_delta(0, (worksheet.costs_ag119||0), 0.001); end
  def test_costs_ah119; assert_in_delta(0, (worksheet.costs_ah119||0), 0.001); end
  def test_costs_aj119; assert_in_delta(0, (worksheet.costs_aj119||0), 0.001); end
  def test_costs_ak119; assert_in_delta(0, (worksheet.costs_ak119||0), 0.001); end
  def test_costs_al119; assert_in_delta(0, (worksheet.costs_al119||0), 0.001); end
  def test_costs_am119; assert_in_delta(0, (worksheet.costs_am119||0), 0.001); end
  def test_costs_an119; assert_in_delta(0, (worksheet.costs_an119||0), 0.001); end
  def test_costs_ao119; assert_in_delta(0, (worksheet.costs_ao119||0), 0.001); end
  def test_costs_ap119; assert_in_delta(0, (worksheet.costs_ap119||0), 0.001); end
  def test_costs_aq119; assert_in_delta(0, (worksheet.costs_aq119||0), 0.001); end
  def test_costs_ar119; assert_in_delta(0, (worksheet.costs_ar119||0), 0.001); end
  def test_costs_b120; assert_equal("XIV.a", worksheet.costs_b120); end
  def test_costs_c120; assert_equal("Geosequestration [UNUSED]", worksheet.costs_c120); end
  def test_costs_e120; assert_equal("MEUR", worksheet.costs_e120); end
  def test_costs_p120; assert_in_delta(0, (worksheet.costs_p120||0), 0.001); end
  def test_costs_q120; assert_in_delta(0, (worksheet.costs_q120||0), 0.001); end
  def test_costs_r120; assert_in_delta(0, (worksheet.costs_r120||0), 0.001); end
  def test_costs_s120; assert_in_delta(0, (worksheet.costs_s120||0), 0.001); end
  def test_costs_t120; assert_in_delta(0, (worksheet.costs_t120||0), 0.001); end
  def test_costs_u120; assert_in_delta(0, (worksheet.costs_u120||0), 0.001); end
  def test_costs_v120; assert_in_delta(0, (worksheet.costs_v120||0), 0.001); end
  def test_costs_w120; assert_in_delta(0, (worksheet.costs_w120||0), 0.001); end
  def test_costs_x120; assert_in_delta(0, (worksheet.costs_x120||0), 0.001); end
  def test_costs_z120; assert_in_delta(0, (worksheet.costs_z120||0), 0.001); end
  def test_costs_aa120; assert_in_delta(0, (worksheet.costs_aa120||0), 0.001); end
  def test_costs_ab120; assert_in_delta(0, (worksheet.costs_ab120||0), 0.001); end
  def test_costs_ac120; assert_in_delta(0, (worksheet.costs_ac120||0), 0.001); end
  def test_costs_ad120; assert_in_delta(0, (worksheet.costs_ad120||0), 0.001); end
  def test_costs_ae120; assert_in_delta(0, (worksheet.costs_ae120||0), 0.001); end
  def test_costs_af120; assert_in_delta(0, (worksheet.costs_af120||0), 0.001); end
  def test_costs_ag120; assert_in_delta(0, (worksheet.costs_ag120||0), 0.001); end
  def test_costs_ah120; assert_in_delta(0, (worksheet.costs_ah120||0), 0.001); end
  def test_costs_f120; assert_in_delta(0, (worksheet.costs_f120||0), 0.001); end
  def test_costs_aj120; assert_in_delta(0, (worksheet.costs_aj120||0), 0.001); end
  def test_costs_g120; assert_in_delta(0, (worksheet.costs_g120||0), 0.001); end
  def test_costs_ak120; assert_in_delta(0, (worksheet.costs_ak120||0), 0.001); end
  def test_costs_h120; assert_in_delta(0, (worksheet.costs_h120||0), 0.001); end
  def test_costs_al120; assert_in_delta(0, (worksheet.costs_al120||0), 0.001); end
  def test_costs_i120; assert_in_delta(0, (worksheet.costs_i120||0), 0.001); end
  def test_costs_am120; assert_in_delta(0, (worksheet.costs_am120||0), 0.001); end
  def test_costs_j120; assert_in_delta(0, (worksheet.costs_j120||0), 0.001); end
  def test_costs_an120; assert_in_delta(0, (worksheet.costs_an120||0), 0.001); end
  def test_costs_k120; assert_in_delta(0, (worksheet.costs_k120||0), 0.001); end
  def test_costs_ao120; assert_in_delta(0, (worksheet.costs_ao120||0), 0.001); end
  def test_costs_l120; assert_in_delta(0, (worksheet.costs_l120||0), 0.001); end
  def test_costs_ap120; assert_in_delta(0, (worksheet.costs_ap120||0), 0.001); end
  def test_costs_m120; assert_in_delta(0, (worksheet.costs_m120||0), 0.001); end
  def test_costs_aq120; assert_in_delta(0, (worksheet.costs_aq120||0), 0.001); end
  def test_costs_n120; assert_in_delta(0, (worksheet.costs_n120||0), 0.001); end
  def test_costs_ar120; assert_in_delta(0, (worksheet.costs_ar120||0), 0.001); end
  def test_costs_b121; assert_equal("XV.a", worksheet.costs_b121); end
  def test_costs_c121; assert_equal("Petroleum refineries [UNUSED]", worksheet.costs_c121); end
  def test_costs_e121; assert_equal("MEUR", worksheet.costs_e121); end
  def test_costs_f121; assert_in_delta(0, (worksheet.costs_f121||0), 0.001); end
  def test_costs_g121; assert_in_delta(0, (worksheet.costs_g121||0), 0.001); end
  def test_costs_h121; assert_in_delta(0, (worksheet.costs_h121||0), 0.001); end
  def test_costs_i121; assert_in_delta(0, (worksheet.costs_i121||0), 0.001); end
  def test_costs_j121; assert_in_delta(0, (worksheet.costs_j121||0), 0.001); end
  def test_costs_k121; assert_in_delta(0, (worksheet.costs_k121||0), 0.001); end
  def test_costs_l121; assert_in_delta(0, (worksheet.costs_l121||0), 0.001); end
  def test_costs_m121; assert_in_delta(0, (worksheet.costs_m121||0), 0.001); end
  def test_costs_n121; assert_in_delta(0, (worksheet.costs_n121||0), 0.001); end
  def test_costs_p121; assert_in_delta(0, (worksheet.costs_p121||0), 0.001); end
  def test_costs_q121; assert_in_delta(0, (worksheet.costs_q121||0), 0.001); end
  def test_costs_r121; assert_in_delta(0, (worksheet.costs_r121||0), 0.001); end
  def test_costs_s121; assert_in_delta(0, (worksheet.costs_s121||0), 0.001); end
  def test_costs_t121; assert_in_delta(0, (worksheet.costs_t121||0), 0.001); end
  def test_costs_u121; assert_in_delta(0, (worksheet.costs_u121||0), 0.001); end
  def test_costs_v121; assert_in_delta(0, (worksheet.costs_v121||0), 0.001); end
  def test_costs_w121; assert_in_delta(0, (worksheet.costs_w121||0), 0.001); end
  def test_costs_x121; assert_in_delta(0, (worksheet.costs_x121||0), 0.001); end
  def test_costs_z121; assert_in_delta(0, (worksheet.costs_z121||0), 0.001); end
  def test_costs_aa121; assert_in_delta(0, (worksheet.costs_aa121||0), 0.001); end
  def test_costs_ab121; assert_in_delta(0, (worksheet.costs_ab121||0), 0.001); end
  def test_costs_ac121; assert_in_delta(0, (worksheet.costs_ac121||0), 0.001); end
  def test_costs_ad121; assert_in_delta(0, (worksheet.costs_ad121||0), 0.001); end
  def test_costs_ae121; assert_in_delta(0, (worksheet.costs_ae121||0), 0.001); end
  def test_costs_af121; assert_in_delta(0, (worksheet.costs_af121||0), 0.001); end
  def test_costs_ag121; assert_in_delta(0, (worksheet.costs_ag121||0), 0.001); end
  def test_costs_ah121; assert_in_delta(0, (worksheet.costs_ah121||0), 0.001); end
  def test_costs_aj121; assert_in_delta(0, (worksheet.costs_aj121||0), 0.001); end
  def test_costs_ak121; assert_in_delta(0, (worksheet.costs_ak121||0), 0.001); end
  def test_costs_al121; assert_in_delta(0, (worksheet.costs_al121||0), 0.001); end
  def test_costs_am121; assert_in_delta(0, (worksheet.costs_am121||0), 0.001); end
  def test_costs_an121; assert_in_delta(0, (worksheet.costs_an121||0), 0.001); end
  def test_costs_ao121; assert_in_delta(0, (worksheet.costs_ao121||0), 0.001); end
  def test_costs_ap121; assert_in_delta(0, (worksheet.costs_ap121||0), 0.001); end
  def test_costs_aq121; assert_in_delta(0, (worksheet.costs_aq121||0), 0.001); end
  def test_costs_ar121; assert_in_delta(0, (worksheet.costs_ar121||0), 0.001); end
  def test_costs_b122; assert_equal("XV.b", worksheet.costs_b122); end
  def test_costs_c122; assert_equal("Indigenous fossil-fuel production [UNUSED]", worksheet.costs_c122); end
  def test_costs_e122; assert_equal("MEUR", worksheet.costs_e122); end
  def test_costs_f122; assert_in_delta(0, (worksheet.costs_f122||0), 0.001); end
  def test_costs_g122; assert_in_delta(0, (worksheet.costs_g122||0), 0.001); end
  def test_costs_h122; assert_in_delta(0, (worksheet.costs_h122||0), 0.001); end
  def test_costs_i122; assert_in_delta(0, (worksheet.costs_i122||0), 0.001); end
  def test_costs_j122; assert_in_delta(0, (worksheet.costs_j122||0), 0.001); end
  def test_costs_k122; assert_in_delta(0, (worksheet.costs_k122||0), 0.001); end
  def test_costs_l122; assert_in_delta(0, (worksheet.costs_l122||0), 0.001); end
  def test_costs_m122; assert_in_delta(0, (worksheet.costs_m122||0), 0.001); end
  def test_costs_n122; assert_in_delta(0, (worksheet.costs_n122||0), 0.001); end
  def test_costs_p122; assert_in_delta(0, (worksheet.costs_p122||0), 0.001); end
  def test_costs_q122; assert_in_delta(0, (worksheet.costs_q122||0), 0.001); end
  def test_costs_r122; assert_in_delta(0, (worksheet.costs_r122||0), 0.001); end
  def test_costs_s122; assert_in_delta(0, (worksheet.costs_s122||0), 0.001); end
  def test_costs_t122; assert_in_delta(0, (worksheet.costs_t122||0), 0.001); end
  def test_costs_u122; assert_in_delta(0, (worksheet.costs_u122||0), 0.001); end
  def test_costs_v122; assert_in_delta(0, (worksheet.costs_v122||0), 0.001); end
  def test_costs_w122; assert_in_delta(0, (worksheet.costs_w122||0), 0.001); end
  def test_costs_x122; assert_in_delta(0, (worksheet.costs_x122||0), 0.001); end
  def test_costs_z122; assert_in_delta(0, (worksheet.costs_z122||0), 0.001); end
  def test_costs_aa122; assert_in_delta(0, (worksheet.costs_aa122||0), 0.001); end
  def test_costs_ab122; assert_in_delta(0, (worksheet.costs_ab122||0), 0.001); end
  def test_costs_ac122; assert_in_delta(0, (worksheet.costs_ac122||0), 0.001); end
  def test_costs_ad122; assert_in_delta(0, (worksheet.costs_ad122||0), 0.001); end
  def test_costs_ae122; assert_in_delta(0, (worksheet.costs_ae122||0), 0.001); end
  def test_costs_af122; assert_in_delta(0, (worksheet.costs_af122||0), 0.001); end
  def test_costs_ag122; assert_in_delta(0, (worksheet.costs_ag122||0), 0.001); end
  def test_costs_ah122; assert_in_delta(0, (worksheet.costs_ah122||0), 0.001); end
  def test_costs_aj122; assert_in_delta(0, (worksheet.costs_aj122||0), 0.001); end
  def test_costs_ak122; assert_in_delta(0, (worksheet.costs_ak122||0), 0.001); end
  def test_costs_al122; assert_in_delta(0, (worksheet.costs_al122||0), 0.001); end
  def test_costs_am122; assert_in_delta(0, (worksheet.costs_am122||0), 0.001); end
  def test_costs_an122; assert_in_delta(0, (worksheet.costs_an122||0), 0.001); end
  def test_costs_ao122; assert_in_delta(0, (worksheet.costs_ao122||0), 0.001); end
  def test_costs_ap122; assert_in_delta(0, (worksheet.costs_ap122||0), 0.001); end
  def test_costs_aq122; assert_in_delta(0, (worksheet.costs_aq122||0), 0.001); end
  def test_costs_ar122; assert_in_delta(0, (worksheet.costs_ar122||0), 0.001); end
  def test_costs_b123; assert_equal("XVI.a", worksheet.costs_b123); end
  def test_costs_c123; assert_equal("Fossil fuel transfers", worksheet.costs_c123); end
  def test_costs_d123; assert_equal("Fossil fuels", worksheet.costs_d123); end
  def test_costs_e123; assert_equal("MEUR", worksheet.costs_e123); end
  def test_costs_n123; assert_in_delta(0, (worksheet.costs_n123||0), 0.001); end
  def test_costs_x123; assert_in_delta(0, (worksheet.costs_x123||0), 0.001); end
  def test_costs_z123; assert_in_delta(0, (worksheet.costs_z123||0), 0.001); end
  def test_costs_aa123; assert_in_delta(0, (worksheet.costs_aa123||0), 0.001); end
  def test_costs_ab123; assert_in_delta(0, (worksheet.costs_ab123||0), 0.001); end
  def test_costs_ac123; assert_in_delta(0, (worksheet.costs_ac123||0), 0.001); end
  def test_costs_ad123; assert_in_delta(0, (worksheet.costs_ad123||0), 0.001); end
  def test_costs_ae123; assert_in_delta(0, (worksheet.costs_ae123||0), 0.001); end
  def test_costs_af123; assert_in_delta(0, (worksheet.costs_af123||0), 0.001); end
  def test_costs_ag123; assert_in_delta(0, (worksheet.costs_ag123||0), 0.001); end
  def test_costs_ah123; assert_in_delta(0, (worksheet.costs_ah123||0), 0.001); end
  def test_costs_f123; assert_in_epsilon(392.0570599659508, worksheet.costs_f123, 0.001); end
  def test_costs_p123; assert_in_delta(0.27820032533886085, worksheet.costs_p123, 0.001); end
  def test_costs_aj123; assert_in_epsilon(392.33526029128967, worksheet.costs_aj123, 0.001); end
  def test_costs_g123; assert_in_epsilon(266.23771134928984, worksheet.costs_g123, 0.001); end
  def test_costs_q123; assert_in_delta(0.27275794615635957, worksheet.costs_q123, 0.001); end
  def test_costs_ak123; assert_in_epsilon(266.51046929544617, worksheet.costs_ak123, 0.001); end
  def test_costs_h123; assert_in_epsilon(1106.0735066360855, worksheet.costs_h123, 0.001); end
  def test_costs_r123; assert_in_delta(0.41992690334278404, worksheet.costs_r123, 0.001); end
  def test_costs_al123; assert_in_epsilon(1106.4934335394282, worksheet.costs_al123, 0.001); end
  def test_costs_i123; assert_in_epsilon(401.8700464990443, worksheet.costs_i123, 0.001); end
  def test_costs_s123; assert_in_delta(0.3652968493658063, worksheet.costs_s123, 0.001); end
  def test_costs_am123; assert_in_epsilon(402.2353433484101, worksheet.costs_am123, 0.001); end
  def test_costs_j123; assert_in_epsilon(349.58908484307665, worksheet.costs_j123, 0.001); end
  def test_costs_t123; assert_in_delta(0.31393493264115796, worksheet.costs_t123, 0.001); end
  def test_costs_an123; assert_in_epsilon(349.9030197757178, worksheet.costs_an123, 0.001); end
  def test_costs_k123; assert_in_epsilon(300.43573053758814, worksheet.costs_k123, 0.001); end
  def test_costs_u123; assert_in_delta(0.27015075140896794, worksheet.costs_u123, 0.001); end
  def test_costs_ao123; assert_in_epsilon(300.7058812889971, worksheet.costs_ao123, 0.001); end
  def test_costs_l123; assert_in_epsilon(258.5342690983823, worksheet.costs_l123, 0.001); end
  def test_costs_v123; assert_in_delta(0.21473451839747285, worksheet.costs_v123, 0.001); end
  def test_costs_ap123; assert_in_epsilon(258.74900361677976, worksheet.costs_ap123, 0.001); end
  def test_costs_m123; assert_in_epsilon(205.5009341063815, worksheet.costs_m123, 0.001); end
  def test_costs_w123; assert_in_delta(0.15093526455811698, worksheet.costs_w123, 0.001); end
  def test_costs_aq123; assert_in_epsilon(205.6518693709396, worksheet.costs_aq123, 0.001); end
  def test_costs_ar123; assert_in_delta(0, (worksheet.costs_ar123||0), 0.001); end
  def test_costs_b124; assert_equal("XVI.b", worksheet.costs_b124); end
  def test_costs_c124; assert_equal("Balancing imports", worksheet.costs_c124); end
  def test_costs_d124; assert_equal("Fossil fuels", worksheet.costs_d124); end
  def test_costs_e124; assert_equal("MEUR", worksheet.costs_e124); end
  def test_costs_aj124; assert_in_delta(0, (worksheet.costs_aj124||0), 0.001); end
  def test_costs_ak124; assert_in_delta(0, (worksheet.costs_ak124||0), 0.001); end
  def test_costs_al124; assert_in_delta(0, (worksheet.costs_al124||0), 0.001); end
  def test_costs_am124; assert_in_delta(0, (worksheet.costs_am124||0), 0.001); end
  def test_costs_an124; assert_in_delta(0, (worksheet.costs_an124||0), 0.001); end
  def test_costs_ao124; assert_in_delta(0, (worksheet.costs_ao124||0), 0.001); end
  def test_costs_ap124; assert_in_delta(0, (worksheet.costs_ap124||0), 0.001); end
  def test_costs_aq124; assert_in_delta(0, (worksheet.costs_aq124||0), 0.001); end
  def test_costs_ar124; assert_in_delta(0, (worksheet.costs_ar124||0), 0.001); end
  def test_costs_b125; assert_equal("XVI.b.Coal", worksheet.costs_b125); end
  def test_costs_c125; assert_equal("Balancing imports - Coal", worksheet.costs_c125); end
  def test_costs_d125; assert_equal("Fossil fuels", worksheet.costs_d125); end
  def test_costs_e125; assert_equal("MEUR", worksheet.costs_e125); end
  def test_costs_f125; assert_in_delta(0, (worksheet.costs_f125||0), 0.001); end
  def test_costs_g125; assert_in_delta(0, (worksheet.costs_g125||0), 0.001); end
  def test_costs_h125; assert_in_delta(0, (worksheet.costs_h125||0), 0.001); end
  def test_costs_i125; assert_in_delta(0, (worksheet.costs_i125||0), 0.001); end
  def test_costs_j125; assert_in_delta(0, (worksheet.costs_j125||0), 0.001); end
  def test_costs_k125; assert_in_delta(0, (worksheet.costs_k125||0), 0.001); end
  def test_costs_l125; assert_in_delta(0, (worksheet.costs_l125||0), 0.001); end
  def test_costs_m125; assert_in_delta(0, (worksheet.costs_m125||0), 0.001); end
  def test_costs_n125; assert_in_delta(0, (worksheet.costs_n125||0), 0.001); end
  def test_costs_p125; assert_in_delta(0, (worksheet.costs_p125||0), 0.001); end
  def test_costs_q125; assert_in_delta(0, (worksheet.costs_q125||0), 0.001); end
  def test_costs_r125; assert_in_delta(0, (worksheet.costs_r125||0), 0.001); end
  def test_costs_s125; assert_in_delta(0, (worksheet.costs_s125||0), 0.001); end
  def test_costs_t125; assert_in_delta(0, (worksheet.costs_t125||0), 0.001); end
  def test_costs_u125; assert_in_delta(0, (worksheet.costs_u125||0), 0.001); end
  def test_costs_v125; assert_in_delta(0, (worksheet.costs_v125||0), 0.001); end
  def test_costs_w125; assert_in_delta(0, (worksheet.costs_w125||0), 0.001); end
  def test_costs_x125; assert_in_delta(0, (worksheet.costs_x125||0), 0.001); end
  def test_costs_z125; assert_in_epsilon(496.4571487082572, worksheet.costs_z125, 0.001); end
  def test_costs_aj125; assert_in_epsilon(496.4571487082572, worksheet.costs_aj125, 0.001); end
  def test_costs_aa125; assert_in_epsilon(496.8474663269265, worksheet.costs_aa125, 0.001); end
  def test_costs_ak125; assert_in_epsilon(496.8474663269265, worksheet.costs_ak125, 0.001); end
  def test_costs_ab125; assert_in_epsilon(434.87770618082544, worksheet.costs_ab125, 0.001); end
  def test_costs_al125; assert_in_epsilon(434.87770618082544, worksheet.costs_al125, 0.001); end
  def test_costs_ac125; assert_in_epsilon(196.48238048121183, worksheet.costs_ac125, 0.001); end
  def test_costs_am125; assert_in_epsilon(196.48238048121183, worksheet.costs_am125, 0.001); end
  def test_costs_ad125; assert_in_epsilon(62.43687385651885, worksheet.costs_ad125, 0.001); end
  def test_costs_an125; assert_in_epsilon(62.43687385651885, worksheet.costs_an125, 0.001); end
  def test_costs_ae125; assert_in_epsilon(36.52882469712079, worksheet.costs_ae125, 0.001); end
  def test_costs_ao125; assert_in_epsilon(36.52882469712079, worksheet.costs_ao125, 0.001); end
  def test_costs_af125; assert_in_epsilon(11.741059068945743, worksheet.costs_af125, 0.001); end
  def test_costs_ap125; assert_in_epsilon(11.741059068945743, worksheet.costs_ap125, 0.001); end
  def test_costs_ag125; assert_in_delta(-0.14081153794056875, worksheet.costs_ag125, 0.001); end
  def test_costs_aq125; assert_in_delta(-0.14081153794056875, worksheet.costs_aq125, 0.001); end
  def test_costs_ah125; assert_in_delta(0, (worksheet.costs_ah125||0), 0.001); end
  def test_costs_ar125; assert_in_delta(0, (worksheet.costs_ar125||0), 0.001); end
  def test_costs_b126; assert_equal("XVI.b.Oil", worksheet.costs_b126); end
  def test_costs_c126; assert_equal("Balancing imports - Oil", worksheet.costs_c126); end
  def test_costs_d126; assert_equal("Fossil fuels", worksheet.costs_d126); end
  def test_costs_e126; assert_equal("MEUR", worksheet.costs_e126); end
  def test_costs_f126; assert_in_delta(0, (worksheet.costs_f126||0), 0.001); end
  def test_costs_g126; assert_in_delta(0, (worksheet.costs_g126||0), 0.001); end
  def test_costs_h126; assert_in_delta(0, (worksheet.costs_h126||0), 0.001); end
  def test_costs_i126; assert_in_delta(0, (worksheet.costs_i126||0), 0.001); end
  def test_costs_j126; assert_in_delta(0, (worksheet.costs_j126||0), 0.001); end
  def test_costs_k126; assert_in_delta(0, (worksheet.costs_k126||0), 0.001); end
  def test_costs_l126; assert_in_delta(0, (worksheet.costs_l126||0), 0.001); end
  def test_costs_m126; assert_in_delta(0, (worksheet.costs_m126||0), 0.001); end
  def test_costs_n126; assert_in_delta(0, (worksheet.costs_n126||0), 0.001); end
  def test_costs_p126; assert_in_delta(0, (worksheet.costs_p126||0), 0.001); end
  def test_costs_q126; assert_in_delta(0, (worksheet.costs_q126||0), 0.001); end
  def test_costs_r126; assert_in_delta(0, (worksheet.costs_r126||0), 0.001); end
  def test_costs_s126; assert_in_delta(0, (worksheet.costs_s126||0), 0.001); end
  def test_costs_t126; assert_in_delta(0, (worksheet.costs_t126||0), 0.001); end
  def test_costs_u126; assert_in_delta(0, (worksheet.costs_u126||0), 0.001); end
  def test_costs_v126; assert_in_delta(0, (worksheet.costs_v126||0), 0.001); end
  def test_costs_w126; assert_in_delta(0, (worksheet.costs_w126||0), 0.001); end
  def test_costs_x126; assert_in_delta(0, (worksheet.costs_x126||0), 0.001); end
  def test_costs_z126; assert_in_epsilon(6922.050219160189, worksheet.costs_z126, 0.001); end
  def test_costs_aj126; assert_in_epsilon(6922.050219160189, worksheet.costs_aj126, 0.001); end
  def test_costs_aa126; assert_in_epsilon(7492.380241822619, worksheet.costs_aa126, 0.001); end
  def test_costs_ak126; assert_in_epsilon(7492.380241822619, worksheet.costs_ak126, 0.001); end
  def test_costs_ab126; assert_in_epsilon(6635.670492572717, worksheet.costs_ab126, 0.001); end
  def test_costs_al126; assert_in_epsilon(6635.670492572717, worksheet.costs_al126, 0.001); end
  def test_costs_ac126; assert_in_epsilon(5720.195393801787, worksheet.costs_ac126, 0.001); end
  def test_costs_am126; assert_in_epsilon(5720.195393801787, worksheet.costs_am126, 0.001); end
  def test_costs_ad126; assert_in_epsilon(4741.529856225483, worksheet.costs_ad126, 0.001); end
  def test_costs_an126; assert_in_epsilon(4741.529856225483, worksheet.costs_an126, 0.001); end
  def test_costs_ae126; assert_in_epsilon(3697.949504487306, worksheet.costs_ae126, 0.001); end
  def test_costs_ao126; assert_in_epsilon(3697.949504487306, worksheet.costs_ao126, 0.001); end
  def test_costs_af126; assert_in_epsilon(2860.3247885410756, worksheet.costs_af126, 0.001); end
  def test_costs_ap126; assert_in_epsilon(2860.3247885410756, worksheet.costs_ap126, 0.001); end
  def test_costs_ag126; assert_in_epsilon(2139.0184300800715, worksheet.costs_ag126, 0.001); end
  def test_costs_aq126; assert_in_epsilon(2139.0184300800715, worksheet.costs_aq126, 0.001); end
  def test_costs_ah126; assert_in_epsilon(1521.6902490025075, worksheet.costs_ah126, 0.001); end
  def test_costs_ar126; assert_in_epsilon(1521.6902490025075, worksheet.costs_ar126, 0.001); end
  def test_costs_b127; assert_equal("XVI.b.Gas", worksheet.costs_b127); end
  def test_costs_c127; assert_equal("Balancing imports - Gas", worksheet.costs_c127); end
  def test_costs_d127; assert_equal("Fossil fuels", worksheet.costs_d127); end
  def test_costs_e127; assert_equal("MEUR", worksheet.costs_e127); end
  def test_costs_f127; assert_in_delta(0, (worksheet.costs_f127||0), 0.001); end
  def test_costs_g127; assert_in_delta(0, (worksheet.costs_g127||0), 0.001); end
  def test_costs_h127; assert_in_delta(0, (worksheet.costs_h127||0), 0.001); end
  def test_costs_i127; assert_in_delta(0, (worksheet.costs_i127||0), 0.001); end
  def test_costs_j127; assert_in_delta(0, (worksheet.costs_j127||0), 0.001); end
  def test_costs_k127; assert_in_delta(0, (worksheet.costs_k127||0), 0.001); end
  def test_costs_l127; assert_in_delta(0, (worksheet.costs_l127||0), 0.001); end
  def test_costs_m127; assert_in_delta(0, (worksheet.costs_m127||0), 0.001); end
  def test_costs_n127; assert_in_delta(0, (worksheet.costs_n127||0), 0.001); end
  def test_costs_p127; assert_in_delta(0, (worksheet.costs_p127||0), 0.001); end
  def test_costs_q127; assert_in_delta(0, (worksheet.costs_q127||0), 0.001); end
  def test_costs_r127; assert_in_delta(0, (worksheet.costs_r127||0), 0.001); end
  def test_costs_s127; assert_in_delta(0, (worksheet.costs_s127||0), 0.001); end
  def test_costs_t127; assert_in_delta(0, (worksheet.costs_t127||0), 0.001); end
  def test_costs_u127; assert_in_delta(0, (worksheet.costs_u127||0), 0.001); end
  def test_costs_v127; assert_in_delta(0, (worksheet.costs_v127||0), 0.001); end
  def test_costs_w127; assert_in_delta(0, (worksheet.costs_w127||0), 0.001); end
  def test_costs_x127; assert_in_delta(0, (worksheet.costs_x127||0), 0.001); end
  def test_costs_z127; assert_in_epsilon(4743.024894495307, worksheet.costs_z127, 0.001); end
  def test_costs_aj127; assert_in_epsilon(4743.024894495307, worksheet.costs_aj127, 0.001); end
  def test_costs_aa127; assert_in_epsilon(3704.021824850512, worksheet.costs_aa127, 0.001); end
  def test_costs_ak127; assert_in_epsilon(3704.021824850512, worksheet.costs_ak127, 0.001); end
  def test_costs_ab127; assert_in_epsilon(3746.8484051947617, worksheet.costs_ab127, 0.001); end
  def test_costs_al127; assert_in_epsilon(3746.8484051947617, worksheet.costs_al127, 0.001); end
  def test_costs_ac127; assert_in_epsilon(5857.239585905593, worksheet.costs_ac127, 0.001); end
  def test_costs_am127; assert_in_epsilon(5857.239585905593, worksheet.costs_am127, 0.001); end
  def test_costs_ad127; assert_in_epsilon(5095.246695745578, worksheet.costs_ad127, 0.001); end
  def test_costs_an127; assert_in_epsilon(5095.246695745578, worksheet.costs_an127, 0.001); end
  def test_costs_ae127; assert_in_epsilon(4150.477859762701, worksheet.costs_ae127, 0.001); end
  def test_costs_ao127; assert_in_epsilon(4150.477859762701, worksheet.costs_ao127, 0.001); end
  def test_costs_af127; assert_in_epsilon(3369.088391849724, worksheet.costs_af127, 0.001); end
  def test_costs_ap127; assert_in_epsilon(3369.088391849724, worksheet.costs_ap127, 0.001); end
  def test_costs_ag127; assert_in_epsilon(2512.2212684670067, worksheet.costs_ag127, 0.001); end
  def test_costs_aq127; assert_in_epsilon(2512.2212684670067, worksheet.costs_aq127, 0.001); end
  def test_costs_ah127; assert_in_epsilon(1645.9467318102616, worksheet.costs_ah127, 0.001); end
  def test_costs_ar127; assert_in_epsilon(1645.9467318102616, worksheet.costs_ar127, 0.001); end
  def test_costs_b128; assert_equal("XVII.a", worksheet.costs_b128); end
  def test_costs_c128; assert_equal("District heating effective demand", worksheet.costs_c128); end
  def test_costs_d128; assert_equal("Buildings", worksheet.costs_d128); end
  def test_costs_e128; assert_equal("MEUR", worksheet.costs_e128); end
  def test_costs_f128; assert_in_delta(0, (worksheet.costs_f128||0), 0.001); end
  def test_costs_z128; assert_in_delta(0, (worksheet.costs_z128||0), 0.001); end
  def test_costs_aa128; assert_in_delta(0, (worksheet.costs_aa128||0), 0.001); end
  def test_costs_ab128; assert_in_delta(0, (worksheet.costs_ab128||0), 0.001); end
  def test_costs_ac128; assert_in_delta(0, (worksheet.costs_ac128||0), 0.001); end
  def test_costs_ad128; assert_in_delta(0, (worksheet.costs_ad128||0), 0.001); end
  def test_costs_ae128; assert_in_delta(0, (worksheet.costs_ae128||0), 0.001); end
  def test_costs_af128; assert_in_delta(0, (worksheet.costs_af128||0), 0.001); end
  def test_costs_ag128; assert_in_delta(0, (worksheet.costs_ag128||0), 0.001); end
  def test_costs_ah128; assert_in_delta(0, (worksheet.costs_ah128||0), 0.001); end
  def test_costs_p128; assert_in_epsilon(16.45159932819911, worksheet.costs_p128, 0.001); end
  def test_costs_aj128; assert_in_epsilon(16.45159932819911, worksheet.costs_aj128, 0.001); end
  def test_costs_g128; assert_in_epsilon(54.83866442733037, worksheet.costs_g128, 0.001); end
  def test_costs_q128; assert_in_epsilon(16.21249153763505, worksheet.costs_q128, 0.001); end
  def test_costs_ak128; assert_in_epsilon(71.05115596496542, worksheet.costs_ak128, 0.001); end
  def test_costs_h128; assert_in_epsilon(54.0416384587835, worksheet.costs_h128, 0.001); end
  def test_costs_r128; assert_in_epsilon(14.365231516888528, worksheet.costs_r128, 0.001); end
  def test_costs_al128; assert_in_epsilon(68.40686997567204, worksheet.costs_al128, 0.001); end
  def test_costs_i128; assert_in_epsilon(47.8841050562951, worksheet.costs_i128, 0.001); end
  def test_costs_s128; assert_in_epsilon(12.6202362292066, worksheet.costs_s128, 0.001); end
  def test_costs_am128; assert_in_epsilon(60.504341285501695, worksheet.costs_am128, 0.001); end
  def test_costs_j128; assert_in_epsilon(42.06745409735534, worksheet.costs_j128, 0.001); end
  def test_costs_t128; assert_in_epsilon(9.94865750035631, worksheet.costs_t128, 0.001); end
  def test_costs_an128; assert_in_epsilon(52.01611159771165, worksheet.costs_an128, 0.001); end
  def test_costs_k128; assert_in_epsilon(33.16219166785437, worksheet.costs_k128, 0.001); end
  def test_costs_u128; assert_in_epsilon(8.642014238527844, worksheet.costs_u128, 0.001); end
  def test_costs_ao128; assert_in_epsilon(41.804205906382215, worksheet.costs_ao128, 0.001); end
  def test_costs_l128; assert_in_epsilon(28.806714128426144, worksheet.costs_l128, 0.001); end
  def test_costs_v128; assert_in_epsilon(7.54447786891962, worksheet.costs_v128, 0.001); end
  def test_costs_ap128; assert_in_epsilon(36.351191997345765, worksheet.costs_ap128, 0.001); end
  def test_costs_m128; assert_in_epsilon(25.148259563065402, worksheet.costs_m128, 0.001); end
  def test_costs_w128; assert_in_epsilon(6.5532085817003525, worksheet.costs_w128, 0.001); end
  def test_costs_aq128; assert_in_epsilon(31.701468144765755, worksheet.costs_aq128, 0.001); end
  def test_costs_n128; assert_in_epsilon(21.84402860566784, worksheet.costs_n128, 0.001); end
  def test_costs_x128; assert_in_epsilon(5.574532626748633, worksheet.costs_x128, 0.001); end
  def test_costs_ar128; assert_in_epsilon(27.418561232416472, worksheet.costs_ar128, 0.001); end
  def test_costs_b129; assert_equal("XVIII.a", worksheet.costs_b129); end
  def test_costs_c129; assert_equal("Carbone Capture [UNUSED]", worksheet.costs_c129); end
  def test_costs_d129; assert_equal("Industry", worksheet.costs_d129); end
  def test_costs_e129; assert_equal("MEUR", worksheet.costs_e129); end
  def test_costs_f129; assert_in_delta(0, (worksheet.costs_f129||0), 0.001); end
  def test_costs_g129; assert_in_delta(0, (worksheet.costs_g129||0), 0.001); end
  def test_costs_h129; assert_in_delta(0, (worksheet.costs_h129||0), 0.001); end
  def test_costs_i129; assert_in_delta(0, (worksheet.costs_i129||0), 0.001); end
  def test_costs_j129; assert_in_delta(0, (worksheet.costs_j129||0), 0.001); end
  def test_costs_k129; assert_in_delta(0, (worksheet.costs_k129||0), 0.001); end
  def test_costs_l129; assert_in_delta(0, (worksheet.costs_l129||0), 0.001); end
  def test_costs_m129; assert_in_delta(0, (worksheet.costs_m129||0), 0.001); end
  def test_costs_n129; assert_in_delta(0, (worksheet.costs_n129||0), 0.001); end
  def test_costs_p129; assert_in_delta(0, (worksheet.costs_p129||0), 0.001); end
  def test_costs_q129; assert_in_delta(0, (worksheet.costs_q129||0), 0.001); end
  def test_costs_r129; assert_in_delta(0, (worksheet.costs_r129||0), 0.001); end
  def test_costs_s129; assert_in_delta(0, (worksheet.costs_s129||0), 0.001); end
  def test_costs_t129; assert_in_delta(0, (worksheet.costs_t129||0), 0.001); end
  def test_costs_u129; assert_in_delta(0, (worksheet.costs_u129||0), 0.001); end
  def test_costs_v129; assert_in_delta(0, (worksheet.costs_v129||0), 0.001); end
  def test_costs_w129; assert_in_delta(0, (worksheet.costs_w129||0), 0.001); end
  def test_costs_x129; assert_in_delta(0, (worksheet.costs_x129||0), 0.001); end
  def test_costs_z129; assert_in_delta(0, (worksheet.costs_z129||0), 0.001); end
  def test_costs_aa129; assert_in_delta(0, (worksheet.costs_aa129||0), 0.001); end
  def test_costs_ab129; assert_in_delta(0, (worksheet.costs_ab129||0), 0.001); end
  def test_costs_ac129; assert_in_delta(0, (worksheet.costs_ac129||0), 0.001); end
  def test_costs_ad129; assert_in_delta(0, (worksheet.costs_ad129||0), 0.001); end
  def test_costs_ae129; assert_in_delta(0, (worksheet.costs_ae129||0), 0.001); end
  def test_costs_af129; assert_in_delta(0, (worksheet.costs_af129||0), 0.001); end
  def test_costs_ag129; assert_in_delta(0, (worksheet.costs_ag129||0), 0.001); end
  def test_costs_ah129; assert_in_delta(0, (worksheet.costs_ah129||0), 0.001); end
  def test_costs_aj129; assert_in_delta(0, (worksheet.costs_aj129||0), 0.001); end
  def test_costs_ak129; assert_in_delta(0, (worksheet.costs_ak129||0), 0.001); end
  def test_costs_al129; assert_in_delta(0, (worksheet.costs_al129||0), 0.001); end
  def test_costs_am129; assert_in_delta(0, (worksheet.costs_am129||0), 0.001); end
  def test_costs_an129; assert_in_delta(0, (worksheet.costs_an129||0), 0.001); end
  def test_costs_ao129; assert_in_delta(0, (worksheet.costs_ao129||0), 0.001); end
  def test_costs_ap129; assert_in_delta(0, (worksheet.costs_ap129||0), 0.001); end
  def test_costs_aq129; assert_in_delta(0, (worksheet.costs_aq129||0), 0.001); end
  def test_costs_ar129; assert_in_delta(0, (worksheet.costs_ar129||0), 0.001); end
  def test_costs_c130; assert_equal("Total", worksheet.costs_c130); end
  def test_costs_f130; assert_in_epsilon(37476.846423806885, worksheet.costs_f130, 0.001); end
  def test_costs_g130; assert_in_epsilon(41151.034848061216, worksheet.costs_g130, 0.001); end
  def test_costs_h130; assert_in_epsilon(45534.36191232744, worksheet.costs_h130, 0.001); end
  def test_costs_i130; assert_in_epsilon(43501.27964802546, worksheet.costs_i130, 0.001); end
  def test_costs_j130; assert_in_epsilon(44252.90657891418, worksheet.costs_j130, 0.001); end
  def test_costs_k130; assert_in_epsilon(43862.05512897171, worksheet.costs_k130, 0.001); end
  def test_costs_l130; assert_in_epsilon(45063.732971590915, worksheet.costs_l130, 0.001); end
  def test_costs_m130; assert_in_epsilon(45369.899726344716, worksheet.costs_m130, 0.001); end
  def test_costs_n130; assert_in_epsilon(47894.369282776526, worksheet.costs_n130, 0.001); end
  def test_costs_p130; assert_in_epsilon(9562.531285343384, worksheet.costs_p130, 0.001); end
  def test_costs_q130; assert_in_epsilon(11106.747041906161, worksheet.costs_q130, 0.001); end
  def test_costs_r130; assert_in_epsilon(12245.904248092273, worksheet.costs_r130, 0.001); end
  def test_costs_s130; assert_in_epsilon(12982.979101652743, worksheet.costs_s130, 0.001); end
  def test_costs_t130; assert_in_epsilon(13933.698243776591, worksheet.costs_t130, 0.001); end
  def test_costs_u130; assert_in_epsilon(14746.300678987864, worksheet.costs_u130, 0.001); end
  def test_costs_v130; assert_in_epsilon(15479.519239064124, worksheet.costs_v130, 0.001); end
  def test_costs_w130; assert_in_epsilon(16141.803785872395, worksheet.costs_w130, 0.001); end
  def test_costs_x130; assert_in_epsilon(16738.73069925869, worksheet.costs_x130, 0.001); end
  def test_costs_z130; assert_in_epsilon(29234.32569281068, worksheet.costs_z130, 0.001); end
  def test_costs_aa130; assert_in_epsilon(31050.38219888906, worksheet.costs_aa130, 0.001); end
  def test_costs_ab130; assert_in_epsilon(31284.515822076304, worksheet.costs_ab130, 0.001); end
  def test_costs_ac130; assert_in_epsilon(35685.06160638557, worksheet.costs_ac130, 0.001); end
  def test_costs_ad130; assert_in_epsilon(32922.24889786741, worksheet.costs_ad130, 0.001); end
  def test_costs_ae130; assert_in_epsilon(29504.548225373335, worksheet.costs_ae130, 0.001); end
  def test_costs_af130; assert_in_epsilon(26863.745762157534, worksheet.costs_af130, 0.001); end
  def test_costs_ag130; assert_in_epsilon(24243.12136904635, worksheet.costs_ag130, 0.001); end
  def test_costs_ah130; assert_in_epsilon(21768.874088932862, worksheet.costs_ah130, 0.001); end
  def test_costs_aj130; assert_in_epsilon(76273.70340196094, worksheet.costs_aj130, 0.001); end
  def test_costs_ak130; assert_in_epsilon(83308.16408885644, worksheet.costs_ak130, 0.001); end
  def test_costs_al130; assert_in_epsilon(89064.781982496, worksheet.costs_al130, 0.001); end
  def test_costs_am130; assert_in_epsilon(92169.32035606378, worksheet.costs_am130, 0.001); end
  def test_costs_an130; assert_in_epsilon(91108.85372055818, worksheet.costs_an130, 0.001); end
  def test_costs_ao130; assert_in_epsilon(88112.90403333292, worksheet.costs_ao130, 0.001); end
  def test_costs_ap130; assert_in_epsilon(87406.99797281256, worksheet.costs_ap130, 0.001); end
  def test_costs_aq130; assert_in_epsilon(85754.82488126346, worksheet.costs_aq130, 0.001); end
  def test_costs_ar130; assert_in_epsilon(86401.9740709681, worksheet.costs_ar130, 0.001); end
  def test_costs_at131; assert_equal("C1.High", worksheet.costs_at131); end
  def test_costs_au131; assert_equal("High estimate of capital costs in that year", worksheet.costs_au131); end
  def test_costs_bd131; assert_equal("C2.High", worksheet.costs_bd131); end
  def test_costs_be131; assert_equal("High estimate of O&M costs in that year", worksheet.costs_be131); end
  def test_costs_bn131; assert_equal("C3.High", worksheet.costs_bn131); end
  def test_costs_bo131; assert_equal("High estimate of fuel costs in that year", worksheet.costs_bo131); end
  def test_costs_bx131; assert_equal("High estimate of total cash flows", worksheet.costs_bx131); end
  def test_costs_c132; assert_equal("High estimate of costs", worksheet.costs_c132); end
  def test_costs_d132; assert_equal("Buildings", worksheet.costs_d132); end
  def test_costs_e132; assert_equal("MEUR", worksheet.costs_e132); end
  def test_costs_at132; assert_in_epsilon(28067.148081877724, worksheet.costs_at132, 0.001); end
  def test_costs_au132; assert_in_epsilon(18245.608521195816, worksheet.costs_au132, 0.001); end
  def test_costs_av132; assert_in_epsilon(11635.319462908968, worksheet.costs_av132, 0.001); end
  def test_costs_aw132; assert_in_epsilon(6544.0436756074605, worksheet.costs_aw132, 0.001); end
  def test_costs_ax132; assert_in_epsilon(4214.9054921117495, worksheet.costs_ax132, 0.001); end
  def test_costs_ay132; assert_in_epsilon(2575.677784604414, worksheet.costs_ay132, 0.001); end
  def test_costs_az132; assert_in_epsilon(1664.0097810945251, worksheet.costs_az132, 0.001); end
  def test_costs_ba132; assert_in_epsilon(1042.5390410628631, worksheet.costs_ba132, 0.001); end
  def test_costs_bb132; assert_in_epsilon(702.7631142699674, worksheet.costs_bb132, 0.001); end
  def test_costs_bd132; assert_in_epsilon(676.8085207587142, worksheet.costs_bd132, 0.001); end
  def test_costs_be132; assert_in_epsilon(454.5997608404645, worksheet.costs_be132, 0.001); end
  def test_costs_bf132; assert_in_epsilon(297.8980534773216, worksheet.costs_bf132, 0.001); end
  def test_costs_bg132; assert_in_epsilon(194.03856490802733, worksheet.costs_bg132, 0.001); end
  def test_costs_bh132; assert_in_epsilon(125.87189982282545, worksheet.costs_bh132, 0.001); end
  def test_costs_bi132; assert_in_epsilon(81.67804556355921, worksheet.costs_bi132, 0.001); end
  def test_costs_bj132; assert_in_epsilon(52.98858526006883, worksheet.costs_bj132, 0.001); end
  def test_costs_bk132; assert_in_epsilon(34.334221010190646, worksheet.costs_bk132, 0.001); end
  def test_costs_bl132; assert_in_epsilon(21.53125414750769, worksheet.costs_bl132, 0.001); end
  def test_costs_bn132; assert_in_epsilon(4181.615263582494, worksheet.costs_bn132, 0.001); end
  def test_costs_bo132; assert_in_epsilon(3011.3067142226455, worksheet.costs_bo132, 0.001); end
  def test_costs_bp132; assert_in_epsilon(1945.843113139519, worksheet.costs_bp132, 0.001); end
  def test_costs_bq132; assert_in_epsilon(1356.5806716269278, worksheet.costs_bq132, 0.001); end
  def test_costs_br132; assert_in_epsilon(810.0999281920205, worksheet.costs_br132, 0.001); end
  def test_costs_bs132; assert_in_epsilon(467.98407223081546, worksheet.costs_bs132, 0.001); end
  def test_costs_bt132; assert_in_epsilon(273.9117408050642, worksheet.costs_bt132, 0.001); end
  def test_costs_bu132; assert_in_epsilon(161.40912782027246, worksheet.costs_bu132, 0.001); end
  def test_costs_bv132; assert_in_epsilon(96.66170081121838, worksheet.costs_bv132, 0.001); end
  def test_costs_aj132; assert_in_epsilon(32925.571866218925, worksheet.costs_aj132, 0.001); end
  def test_costs_bx132; assert_in_epsilon(32925.571866218925, worksheet.costs_bx132, 0.001); end
  def test_costs_by132; assert_in_epsilon(21711.514996258928, worksheet.costs_by132, 0.001); end
  def test_costs_bz132; assert_in_epsilon(13879.060629525808, worksheet.costs_bz132, 0.001); end
  def test_costs_ca132; assert_in_epsilon(8094.662912142414, worksheet.costs_ca132, 0.001); end
  def test_costs_cb132; assert_in_epsilon(5150.877320126597, worksheet.costs_cb132, 0.001); end
  def test_costs_cc132; assert_in_epsilon(3125.3399023987886, worksheet.costs_cc132, 0.001); end
  def test_costs_cd132; assert_in_epsilon(1990.9101071596576, worksheet.costs_cd132, 0.001); end
  def test_costs_ce132; assert_in_epsilon(1238.2823898933264, worksheet.costs_ce132, 0.001); end
  def test_costs_cf132; assert_in_epsilon(820.9560692286935, worksheet.costs_cf132, 0.001); end
  def test_costs_d133; assert_equal("Transport", worksheet.costs_d133); end
  def test_costs_e133; assert_equal("MEUR", worksheet.costs_e133); end
  def test_costs_at133; assert_in_epsilon(7315.648249666244, worksheet.costs_at133, 0.001); end
  def test_costs_au133; assert_in_epsilon(5670.193882442388, worksheet.costs_au133, 0.001); end
  def test_costs_av133; assert_in_epsilon(4267.55007714846, worksheet.costs_av133, 0.001); end
  def test_costs_aw133; assert_in_epsilon(2683.838466024755, worksheet.costs_aw133, 0.001); end
  def test_costs_ax133; assert_in_epsilon(1682.9873971137629, worksheet.costs_ax133, 0.001); end
  def test_costs_ay133; assert_in_epsilon(1019.2049856340541, worksheet.costs_ay133, 0.001); end
  def test_costs_az133; assert_in_epsilon(612.1302350109969, worksheet.costs_az133, 0.001); end
  def test_costs_ba133; assert_in_epsilon(359.6105024512839, worksheet.costs_ba133, 0.001); end
  def test_costs_bb133; assert_in_epsilon(192.39985421411032, worksheet.costs_bb133, 0.001); end
  def test_costs_bd133; assert_in_epsilon(7534.454508421662, worksheet.costs_bd133, 0.001); end
  def test_costs_be133; assert_in_epsilon(5467.0943839269175, worksheet.costs_be133, 0.001); end
  def test_costs_bf133; assert_in_epsilon(3751.0794138738784, worksheet.costs_bf133, 0.001); end
  def test_costs_bg133; assert_in_epsilon(2517.1412393983433, worksheet.costs_bg133, 0.001); end
  def test_costs_bh133; assert_in_epsilon(1672.8727526494588, worksheet.costs_bh133, 0.001); end
  def test_costs_bi133; assert_in_epsilon(1095.671148097916, worksheet.costs_bi133, 0.001); end
  def test_costs_bj133; assert_in_epsilon(712.6321099570183, worksheet.costs_bj133, 0.001); end
  def test_costs_bk133; assert_in_epsilon(459.40135902986384, worksheet.costs_bk133, 0.001); end
  def test_costs_bl133; assert_in_epsilon(294.5603366157487, worksheet.costs_bl133, 0.001); end
  def test_costs_bn133; assert_in_epsilon(4701.30303463843, worksheet.costs_bn133, 0.001); end
  def test_costs_bo133; assert_in_epsilon(3208.9129958394697, worksheet.costs_bo133, 0.001); end
  def test_costs_bp133; assert_in_epsilon(1939.885295928733, worksheet.costs_bp133, 0.001); end
  def test_costs_bq133; assert_in_epsilon(1164.893390347586, worksheet.costs_bq133, 0.001); end
  def test_costs_br133; assert_in_epsilon(665.7123166680694, worksheet.costs_br133, 0.001); end
  def test_costs_bs133; assert_in_epsilon(364.77069420675093, worksheet.costs_bs133, 0.001); end
  def test_costs_bt133; assert_in_epsilon(204.56010583142813, worksheet.costs_bt133, 0.001); end
  def test_costs_bu133; assert_in_epsilon(115.19071350013667, worksheet.costs_bu133, 0.001); end
  def test_costs_bv133; assert_in_epsilon(65.68320723428045, worksheet.costs_bv133, 0.001); end
  def test_costs_aj133; assert_in_epsilon(19551.40579272634, worksheet.costs_aj133, 0.001); end
  def test_costs_bx133; assert_in_epsilon(19551.40579272634, worksheet.costs_bx133, 0.001); end
  def test_costs_by133; assert_in_epsilon(14346.201262208775, worksheet.costs_by133, 0.001); end
  def test_costs_bz133; assert_in_epsilon(9958.514786951071, worksheet.costs_bz133, 0.001); end
  def test_costs_ca133; assert_in_epsilon(6365.873095770686, worksheet.costs_ca133, 0.001); end
  def test_costs_cb133; assert_in_epsilon(4021.5724664312906, worksheet.costs_cb133, 0.001); end
  def test_costs_cc133; assert_in_epsilon(2479.646827938721, worksheet.costs_cc133, 0.001); end
  def test_costs_cd133; assert_in_epsilon(1529.3224507994437, worksheet.costs_cd133, 0.001); end
  def test_costs_ce133; assert_in_epsilon(934.2025749812844, worksheet.costs_ce133, 0.001); end
  def test_costs_cf133; assert_in_epsilon(552.6433980641394, worksheet.costs_cf133, 0.001); end
  def test_costs_d134; assert_equal("Industry", worksheet.costs_d134); end
  def test_costs_e134; assert_equal("MEUR", worksheet.costs_e134); end
  def test_costs_at134; assert_in_epsilon(5.532938618668466, worksheet.costs_at134, 0.001); end
  def test_costs_au134; assert_in_epsilon(182.99090388851104, worksheet.costs_au134, 0.001); end
  def test_costs_av134; assert_in_epsilon(174.22702265801587, worksheet.costs_av134, 0.001); end
  def test_costs_aw134; assert_in_epsilon(154.96545203822774, worksheet.costs_aw134, 0.001); end
  def test_costs_ax134; assert_in_epsilon(222.58534841561348, worksheet.costs_ax134, 0.001); end
  def test_costs_ay134; assert_in_epsilon(150.7898568477709, worksheet.costs_ay134, 0.001); end
  def test_costs_az134; assert_in_epsilon(100.14763708752362, worksheet.costs_az134, 0.001); end
  def test_costs_ba134; assert_in_epsilon(65.35544706336212, worksheet.costs_ba134, 0.001); end
  def test_costs_bb134; assert_in_epsilon(45.0638264779925, worksheet.costs_bb134, 0.001); end
  def test_costs_bd134; assert_in_delta(0, (worksheet.costs_bd134||0), 0.001); end
  def test_costs_be134; assert_in_delta(0, (worksheet.costs_be134||0), 0.001); end
  def test_costs_bf134; assert_in_delta(0, (worksheet.costs_bf134||0), 0.001); end
  def test_costs_bg134; assert_in_delta(0, (worksheet.costs_bg134||0), 0.001); end
  def test_costs_bh134; assert_in_delta(0, (worksheet.costs_bh134||0), 0.001); end
  def test_costs_bi134; assert_in_delta(0, (worksheet.costs_bi134||0), 0.001); end
  def test_costs_bj134; assert_in_delta(0, (worksheet.costs_bj134||0), 0.001); end
  def test_costs_bk134; assert_in_delta(0, (worksheet.costs_bk134||0), 0.001); end
  def test_costs_bl134; assert_in_delta(0, (worksheet.costs_bl134||0), 0.001); end
  def test_costs_bn134; assert_in_epsilon(5256.312363604597, worksheet.costs_bn134, 0.001); end
  def test_costs_bo134; assert_in_epsilon(4274.830356990399, worksheet.costs_bo134, 0.001); end
  def test_costs_bp134; assert_in_epsilon(2671.5242818574498, worksheet.costs_bp134, 0.001); end
  def test_costs_bq134; assert_in_epsilon(1753.299573206297, worksheet.costs_bq134, 0.001); end
  def test_costs_br134; assert_in_epsilon(1022.0616038487711, worksheet.costs_br134, 0.001); end
  def test_costs_bs134; assert_in_epsilon(587.0388364625995, worksheet.costs_bs134, 0.001); end
  def test_costs_bt134; assert_in_epsilon(338.73237722084406, worksheet.costs_bt134, 0.001); end
  def test_costs_bu134; assert_in_epsilon(195.47016234673492, worksheet.costs_bu134, 0.001); end
  def test_costs_bv134; assert_in_epsilon(113.23993416396833, worksheet.costs_bv134, 0.001); end
  def test_costs_aj134; assert_in_epsilon(5261.845302223266, worksheet.costs_aj134, 0.001); end
  def test_costs_bx134; assert_in_epsilon(5261.845302223266, worksheet.costs_bx134, 0.001); end
  def test_costs_by134; assert_in_epsilon(4457.821260878909, worksheet.costs_by134, 0.001); end
  def test_costs_bz134; assert_in_epsilon(2845.751304515466, worksheet.costs_bz134, 0.001); end
  def test_costs_ca134; assert_in_epsilon(1908.2650252445246, worksheet.costs_ca134, 0.001); end
  def test_costs_cb134; assert_in_epsilon(1244.6469522643845, worksheet.costs_cb134, 0.001); end
  def test_costs_cc134; assert_in_epsilon(737.8286933103705, worksheet.costs_cc134, 0.001); end
  def test_costs_cd134; assert_in_epsilon(438.8800143083677, worksheet.costs_cd134, 0.001); end
  def test_costs_ce134; assert_in_epsilon(260.82560941009706, worksheet.costs_ce134, 0.001); end
  def test_costs_cf134; assert_in_epsilon(158.30376064196082, worksheet.costs_cf134, 0.001); end
  def test_costs_d135; assert_equal("Electricity", worksheet.costs_d135); end
  def test_costs_e135; assert_equal("MEUR", worksheet.costs_e135); end
  def test_costs_f135; assert_in_epsilon(1390.9738675799088, worksheet.costs_f135, 0.001); end
  def test_costs_at135; assert_in_epsilon(1390.9738675799088, worksheet.costs_at135, 0.001); end
  def test_costs_au135; assert_in_epsilon(1076.5907566538804, worksheet.costs_au135, 0.001); end
  def test_costs_av135; assert_in_epsilon(866.301791703219, worksheet.costs_av135, 0.001); end
  def test_costs_aw135; assert_in_epsilon(842.3339969960201, worksheet.costs_aw135, 0.001); end
  def test_costs_ax135; assert_in_epsilon(344.6092645057063, worksheet.costs_ax135, 0.001); end
  def test_costs_ay135; assert_in_epsilon(235.2368800345861, worksheet.costs_ay135, 0.001); end
  def test_costs_az135; assert_in_epsilon(165.48937161871885, worksheet.costs_az135, 0.001); end
  def test_costs_ba135; assert_in_epsilon(122.70333221124278, worksheet.costs_ba135, 0.001); end
  def test_costs_bb135; assert_in_epsilon(110.10680475339383, worksheet.costs_bb135, 0.001); end
  def test_costs_p135; assert_in_epsilon(884.7712347876729, worksheet.costs_p135, 0.001); end
  def test_costs_bd135; assert_in_epsilon(884.7712347876729, worksheet.costs_bd135, 0.001); end
  def test_costs_be135; assert_in_epsilon(625.3011706641968, worksheet.costs_be135, 0.001); end
  def test_costs_bf135; assert_in_epsilon(418.25804259446573, worksheet.costs_bf135, 0.001); end
  def test_costs_bg135; assert_in_epsilon(208.80434945577935, worksheet.costs_bg135, 0.001); end
  def test_costs_bh135; assert_in_epsilon(146.34137255296088, worksheet.costs_bh135, 0.001); end
  def test_costs_bi135; assert_in_epsilon(99.98597263032275, worksheet.costs_bi135, 0.001); end
  def test_costs_bj135; assert_in_epsilon(66.39915001086452, worksheet.costs_bj135, 0.001); end
  def test_costs_bk135; assert_in_epsilon(44.54514370436691, worksheet.costs_bk135, 0.001); end
  def test_costs_bl135; assert_in_epsilon(30.1480436542139, worksheet.costs_bl135, 0.001); end
  def test_costs_z135; assert_in_epsilon(2327.205888824453, worksheet.costs_z135, 0.001); end
  def test_costs_bn135; assert_in_epsilon(2327.205888824453, worksheet.costs_bn135, 0.001); end
  def test_costs_bo135; assert_in_epsilon(766.7241052652928, worksheet.costs_bo135, 0.001); end
  def test_costs_bp135; assert_in_epsilon(604.4820780325214, worksheet.costs_bp135, 0.001); end
  def test_costs_bq135; assert_in_epsilon(908.6184779622658, worksheet.costs_bq135, 0.001); end
  def test_costs_br135; assert_in_epsilon(529.5847978572481, worksheet.costs_br135, 0.001); end
  def test_costs_bs135; assert_in_epsilon(300.0894053220453, worksheet.costs_bs135, 0.001); end
  def test_costs_bt135; assert_in_epsilon(174.52396586981394, worksheet.costs_bt135, 0.001); end
  def test_costs_bu135; assert_in_epsilon(97.73318083247308, worksheet.costs_bu135, 0.001); end
  def test_costs_bv135; assert_in_epsilon(53.61380011221364, worksheet.costs_bv135, 0.001); end
  def test_costs_aj135; assert_in_epsilon(4602.950991192034, worksheet.costs_aj135, 0.001); end
  def test_costs_bx135; assert_in_epsilon(4602.950991192034, worksheet.costs_bx135, 0.001); end
  def test_costs_by135; assert_in_epsilon(2468.6160325833703, worksheet.costs_by135, 0.001); end
  def test_costs_bz135; assert_in_epsilon(1889.0419123302063, worksheet.costs_bz135, 0.001); end
  def test_costs_ca135; assert_in_epsilon(1959.7568244140646, worksheet.costs_ca135, 0.001); end
  def test_costs_cb135; assert_in_epsilon(1020.5354349159151, worksheet.costs_cb135, 0.001); end
  def test_costs_cc135; assert_in_epsilon(635.3122579869541, worksheet.costs_cc135, 0.001); end
  def test_costs_cd135; assert_in_epsilon(406.41248749939734, worksheet.costs_cd135, 0.001); end
  def test_costs_ce135; assert_in_epsilon(264.9816567480828, worksheet.costs_ce135, 0.001); end
  def test_costs_cf135; assert_in_epsilon(193.86864851982136, worksheet.costs_cf135, 0.001); end
  def test_costs_d136; assert_equal("Fossil fuels", worksheet.costs_d136); end
  def test_costs_e136; assert_equal("MEUR", worksheet.costs_e136); end
  def test_costs_f136; assert_in_epsilon(392.0570599659508, worksheet.costs_f136, 0.001); end
  def test_costs_at136; assert_in_epsilon(392.0570599659508, worksheet.costs_at136, 0.001); end
  def test_costs_au136; assert_in_epsilon(165.31267197924242, worksheet.costs_au136, 0.001); end
  def test_costs_av136; assert_in_epsilon(426.4392180993331, worksheet.costs_av136, 0.001); end
  def test_costs_aw136; assert_in_epsilon(96.2044940114872, worksheet.costs_aw136, 0.001); end
  def test_costs_ax136; assert_in_epsilon(51.96418988871501, worksheet.costs_ax136, 0.001); end
  def test_costs_ay136; assert_in_epsilon(27.72901563802214, worksheet.costs_ay136, 0.001); end
  def test_costs_az136; assert_in_epsilon(14.816224940803144, worksheet.costs_az136, 0.001); end
  def test_costs_ba136; assert_in_epsilon(7.312566352071931, worksheet.costs_ba136, 0.001); end
  def test_costs_bb136; assert_in_delta(0, (worksheet.costs_bb136||0), 0.001); end
  def test_costs_p136; assert_in_delta(0.27820032533886085, worksheet.costs_p136, 0.001); end
  def test_costs_bd136; assert_in_delta(0.27820032533886085, worksheet.costs_bd136, 0.001); end
  def test_costs_be136; assert_in_delta(0.16936122480230453, worksheet.costs_be136, 0.001); end
  def test_costs_bf136; assert_in_delta(0.16189999963473387, worksheet.costs_bf136, 0.001); end
  def test_costs_bg136; assert_in_delta(0.08744916139777895, worksheet.costs_bg136, 0.001); end
  def test_costs_bh136; assert_in_delta(0.04666442735129682, worksheet.costs_bh136, 0.001); end
  def test_costs_bi136; assert_in_delta(0.024933833259574587, worksheet.costs_bi136, 0.001); end
  def test_costs_bj136; assert_in_delta(0.012306124593182205, worksheet.costs_bj136, 0.001); end
  def test_costs_bk136; assert_in_delta(0.005370895960878686, worksheet.costs_bk136, 0.001); end
  def test_costs_bl136; assert_in_delta(0, (worksheet.costs_bl136||0), 0.001); end
  def test_costs_z136; assert_in_epsilon(12161.532262363755, worksheet.costs_z136, 0.001); end
  def test_costs_bn136; assert_in_epsilon(12161.532262363755, worksheet.costs_bn136, 0.001); end
  def test_costs_bo136; assert_in_epsilon(7260.587970891241, worksheet.costs_bo136, 0.001); end
  def test_costs_bp136; assert_in_epsilon(4170.574669750072, worksheet.costs_bp136, 0.001); end
  def test_costs_bq136; assert_in_epsilon(2818.582205958717, worksheet.costs_bq136, 0.001); end
  def test_costs_br136; assert_in_epsilon(1471.4549982003218, worksheet.costs_br136, 0.001); end
  def test_costs_bs136; assert_in_epsilon(727.749902041294, worksheet.costs_bs136, 0.001); end
  def test_costs_bt136; assert_in_epsilon(357.67152039288925, worksheet.costs_bt136, 0.001); end
  def test_costs_bu136; assert_in_epsilon(165.50518064163904, worksheet.costs_bu136, 0.001); end
  def test_costs_bv136; assert_in_epsilon(69.98871150324631, worksheet.costs_bv136, 0.001); end
  def test_costs_aj136; assert_in_epsilon(12553.867522655044, worksheet.costs_aj136, 0.001); end
  def test_costs_bx136; assert_in_epsilon(12553.867522655044, worksheet.costs_bx136, 0.001); end
  def test_costs_by136; assert_in_epsilon(7426.070004095285, worksheet.costs_by136, 0.001); end
  def test_costs_bz136; assert_in_epsilon(4597.17578784904, worksheet.costs_bz136, 0.001); end
  def test_costs_ca136; assert_in_epsilon(2914.8741491316023, worksheet.costs_ca136, 0.001); end
  def test_costs_cb136; assert_in_epsilon(1523.465852516388, worksheet.costs_cb136, 0.001); end
  def test_costs_cc136; assert_in_epsilon(755.5038515125757, worksheet.costs_cc136, 0.001); end
  def test_costs_cd136; assert_in_epsilon(372.50005145828555, worksheet.costs_cd136, 0.001); end
  def test_costs_ce136; assert_in_epsilon(172.82311788967186, worksheet.costs_ce136, 0.001); end
  def test_costs_cf136; assert_in_epsilon(69.98871150324631, worksheet.costs_cf136, 0.001); end
  def test_costs_d137; assert_equal("Bioenergy", worksheet.costs_d137); end
  def test_costs_e137; assert_equal("MEUR", worksheet.costs_e137); end
  def test_costs_f137; assert_in_epsilon(305.48622609839236, worksheet.costs_f137, 0.001); end
  def test_costs_at137; assert_in_epsilon(305.48622609839236, worksheet.costs_at137, 0.001); end
  def test_costs_au137; assert_in_epsilon(210.85826695172386, worksheet.costs_au137, 0.001); end
  def test_costs_av137; assert_in_epsilon(185.630101235502, worksheet.costs_av137, 0.001); end
  def test_costs_aw137; assert_in_epsilon(92.4744004439429, worksheet.costs_aw137, 0.001); end
  def test_costs_ax137; assert_in_epsilon(60.86089246774244, worksheet.costs_ax137, 0.001); end
  def test_costs_ay137; assert_in_epsilon(39.65363746700896, worksheet.costs_ay137, 0.001); end
  def test_costs_az137; assert_in_epsilon(25.94409319945035, worksheet.costs_az137, 0.001); end
  def test_costs_ba137; assert_in_epsilon(16.926283950849868, worksheet.costs_ba137, 0.001); end
  def test_costs_bb137; assert_in_epsilon(7.889048481457065, worksheet.costs_bb137, 0.001); end
  def test_costs_p137; assert_in_epsilon(466.2188210499959, worksheet.costs_p137, 0.001); end
  def test_costs_bd137; assert_in_epsilon(466.2188210499959, worksheet.costs_bd137, 0.001); end
  def test_costs_be137; assert_in_epsilon(349.25139148734814, worksheet.costs_be137, 0.001); end
  def test_costs_bf137; assert_in_epsilon(253.92879590326714, worksheet.costs_bf137, 0.001); end
  def test_costs_bg137; assert_in_epsilon(187.95037113812262, worksheet.costs_bg137, 0.001); end
  def test_costs_bh137; assert_in_epsilon(126.02276929599248, worksheet.costs_bh137, 0.001); end
  def test_costs_bi137; assert_in_epsilon(83.66444046124465, worksheet.costs_bi137, 0.001); end
  def test_costs_bj137; assert_in_epsilon(55.07670203581664, worksheet.costs_bj137, 0.001); end
  def test_costs_bk137; assert_in_epsilon(36.10550965866746, worksheet.costs_bk137, 0.001); end
  def test_costs_bl137; assert_in_epsilon(23.601417741339002, worksheet.costs_bl137, 0.001); end
  def test_costs_z137; assert_in_epsilon(606.3568797969469, worksheet.costs_z137, 0.001); end
  def test_costs_bn137; assert_in_epsilon(606.3568797969469, worksheet.costs_bn137, 0.001); end
  def test_costs_bo137; assert_in_epsilon(740.266239346197, worksheet.costs_bo137, 0.001); end
  def test_costs_bp137; assert_in_epsilon(704.6834595274772, worksheet.costs_bp137, 0.001); end
  def test_costs_bq137; assert_in_epsilon(517.7696847274156, worksheet.costs_bq137, 0.001); end
  def test_costs_br137; assert_in_epsilon(375.64958747183334, worksheet.costs_br137, 0.001); end
  def test_costs_bs137; assert_in_epsilon(260.98219924776305, worksheet.costs_bs137, 0.001); end
  def test_costs_bt137; assert_in_epsilon(179.51703161429316, worksheet.costs_bt137, 0.001); end
  def test_costs_bu137; assert_in_epsilon(119.76025840771882, worksheet.costs_bu137, 0.001); end
  def test_costs_bv137; assert_in_epsilon(76.4584299751445, worksheet.costs_bv137, 0.001); end
  def test_costs_aj137; assert_in_epsilon(1378.0619269453352, worksheet.costs_aj137, 0.001); end
  def test_costs_bx137; assert_in_epsilon(1378.0619269453352, worksheet.costs_bx137, 0.001); end
  def test_costs_by137; assert_in_epsilon(1300.3758977852694, worksheet.costs_by137, 0.001); end
  def test_costs_bz137; assert_in_epsilon(1144.2423566662465, worksheet.costs_bz137, 0.001); end
  def test_costs_ca137; assert_in_epsilon(798.194456309481, worksheet.costs_ca137, 0.001); end
  def test_costs_cb137; assert_in_epsilon(562.5332492355683, worksheet.costs_cb137, 0.001); end
  def test_costs_cc137; assert_in_epsilon(384.30027717601666, worksheet.costs_cc137, 0.001); end
  def test_costs_cd137; assert_in_epsilon(260.5378268495602, worksheet.costs_cd137, 0.001); end
  def test_costs_ce137; assert_in_epsilon(172.79205201723613, worksheet.costs_ce137, 0.001); end
  def test_costs_cf137; assert_in_epsilon(107.94889619794056, worksheet.costs_cf137, 0.001); end
  def test_costs_d138; assert_equal("Electricity (ex/im)ports", worksheet.costs_d138); end
  def test_costs_e138; assert_equal("MEUR", worksheet.costs_e138); end
  def test_costs_at138; assert_in_delta(0, (worksheet.costs_at138||0), 0.001); end
  def test_costs_au138; assert_in_delta(0, (worksheet.costs_au138||0), 0.001); end
  def test_costs_av138; assert_in_delta(0, (worksheet.costs_av138||0), 0.001); end
  def test_costs_aw138; assert_in_delta(0, (worksheet.costs_aw138||0), 0.001); end
  def test_costs_ax138; assert_in_delta(0, (worksheet.costs_ax138||0), 0.001); end
  def test_costs_ay138; assert_in_delta(0, (worksheet.costs_ay138||0), 0.001); end
  def test_costs_az138; assert_in_delta(0, (worksheet.costs_az138||0), 0.001); end
  def test_costs_ba138; assert_in_delta(0, (worksheet.costs_ba138||0), 0.001); end
  def test_costs_bb138; assert_in_delta(0, (worksheet.costs_bb138||0), 0.001); end
  def test_costs_bd138; assert_in_delta(0, (worksheet.costs_bd138||0), 0.001); end
  def test_costs_be138; assert_in_delta(0, (worksheet.costs_be138||0), 0.001); end
  def test_costs_bf138; assert_in_delta(0, (worksheet.costs_bf138||0), 0.001); end
  def test_costs_bg138; assert_in_delta(0, (worksheet.costs_bg138||0), 0.001); end
  def test_costs_bh138; assert_in_delta(0, (worksheet.costs_bh138||0), 0.001); end
  def test_costs_bi138; assert_in_delta(0, (worksheet.costs_bi138||0), 0.001); end
  def test_costs_bj138; assert_in_delta(0, (worksheet.costs_bj138||0), 0.001); end
  def test_costs_bk138; assert_in_delta(0, (worksheet.costs_bk138||0), 0.001); end
  def test_costs_bl138; assert_in_delta(0, (worksheet.costs_bl138||0), 0.001); end
  def test_costs_bn138; assert_in_delta(0, (worksheet.costs_bn138||0), 0.001); end
  def test_costs_bo138; assert_in_epsilon(17.21601387138235, worksheet.costs_bo138, 0.001); end
  def test_costs_bp138; assert_in_epsilon(24.542240017748615, worksheet.costs_bp138, 0.001); end
  def test_costs_bq138; assert_in_epsilon(22.9760259882826, worksheet.costs_bq138, 0.001); end
  def test_costs_br138; assert_in_epsilon(19.119286654605453, worksheet.costs_br138, 0.001); end
  def test_costs_bs138; assert_in_epsilon(14.536619712887587, worksheet.costs_bs138, 0.001); end
  def test_costs_bt138; assert_in_epsilon(10.605664145297396, worksheet.costs_bt138, 0.001); end
  def test_costs_bu138; assert_in_epsilon(7.601097945878431, worksheet.costs_bu138, 0.001); end
  def test_costs_bv138; assert_in_epsilon(5.335925148751454, worksheet.costs_bv138, 0.001); end
  def test_costs_aj138; assert_in_delta(0, (worksheet.costs_aj138||0), 0.001); end
  def test_costs_bx138; assert_in_delta(0, (worksheet.costs_bx138||0), 0.001); end
  def test_costs_by138; assert_in_epsilon(17.21601387138235, worksheet.costs_by138, 0.001); end
  def test_costs_bz138; assert_in_epsilon(24.542240017748615, worksheet.costs_bz138, 0.001); end
  def test_costs_ca138; assert_in_epsilon(22.9760259882826, worksheet.costs_ca138, 0.001); end
  def test_costs_cb138; assert_in_epsilon(19.119286654605453, worksheet.costs_cb138, 0.001); end
  def test_costs_cc138; assert_in_epsilon(14.536619712887587, worksheet.costs_cc138, 0.001); end
  def test_costs_cd138; assert_in_epsilon(10.605664145297396, worksheet.costs_cd138, 0.001); end
  def test_costs_ce138; assert_in_epsilon(7.601097945878431, worksheet.costs_ce138, 0.001); end
  def test_costs_cf138; assert_in_epsilon(5.335925148751454, worksheet.costs_cf138, 0.001); end
  def test_costs_d139; assert_equal("Total", worksheet.costs_d139); end
  def test_costs_e139; assert_equal("MEUR", worksheet.costs_e139); end
  def test_costs_f139; assert_in_epsilon(37476.84642380689, worksheet.costs_f139, 0.001); end
  def test_costs_at139; assert_in_epsilon(37476.84642380689, worksheet.costs_at139, 0.001); end
  def test_costs_au139; assert_in_epsilon(25551.55500311156, worksheet.costs_au139, 0.001); end
  def test_costs_av139; assert_in_epsilon(17555.4676737535, worksheet.costs_av139, 0.001); end
  def test_costs_aw139; assert_in_epsilon(10413.860485121893, worksheet.costs_aw139, 0.001); end
  def test_costs_ax139; assert_in_epsilon(6577.9125845032895, worksheet.costs_ax139, 0.001); end
  def test_costs_ay139; assert_in_epsilon(4048.2921602258557, worksheet.costs_ay139, 0.001); end
  def test_costs_az139; assert_in_epsilon(2582.5373429520178, worksheet.costs_az139, 0.001); end
  def test_costs_ba139; assert_in_epsilon(1614.4471730916737, worksheet.costs_ba139, 0.001); end
  def test_costs_bb139; assert_in_epsilon(1058.2226481969212, worksheet.costs_bb139, 0.001); end
  def test_costs_p139; assert_in_epsilon(9562.531285343384, worksheet.costs_p139, 0.001); end
  def test_costs_bd139; assert_in_epsilon(9562.531285343384, worksheet.costs_bd139, 0.001); end
  def test_costs_be139; assert_in_epsilon(6896.416068143729, worksheet.costs_be139, 0.001); end
  def test_costs_bf139; assert_in_epsilon(4721.326205848567, worksheet.costs_bf139, 0.001); end
  def test_costs_bg139; assert_in_epsilon(3108.0219740616703, worksheet.costs_bg139, 0.001); end
  def test_costs_bh139; assert_in_epsilon(2071.1554587485884, worksheet.costs_bh139, 0.001); end
  def test_costs_bi139; assert_in_epsilon(1361.0245405863022, worksheet.costs_bi139, 0.001); end
  def test_costs_bj139; assert_in_epsilon(887.1088533883615, worksheet.costs_bj139, 0.001); end
  def test_costs_bk139; assert_in_epsilon(574.3916042990498, worksheet.costs_bk139, 0.001); end
  def test_costs_bl139; assert_in_epsilon(369.84105215880925, worksheet.costs_bl139, 0.001); end
  def test_costs_z139; assert_in_epsilon(29234.325692810675, worksheet.costs_z139, 0.001); end
  def test_costs_bn139; assert_in_epsilon(29234.325692810675, worksheet.costs_bn139, 0.001); end
  def test_costs_bo139; assert_in_epsilon(19279.844396426626, worksheet.costs_bo139, 0.001); end
  def test_costs_bp139; assert_in_epsilon(12061.53513825352, worksheet.costs_bp139, 0.001); end
  def test_costs_bq139; assert_in_epsilon(8542.720029817492, worksheet.costs_bq139, 0.001); end
  def test_costs_br139; assert_in_epsilon(4893.682518892871, worksheet.costs_br139, 0.001); end
  def test_costs_bs139; assert_in_epsilon(2723.1517292241556, worksheet.costs_bs139, 0.001); end
  def test_costs_bt139; assert_in_epsilon(1539.52240587963, worksheet.costs_bt139, 0.001); end
  def test_costs_bu139; assert_in_epsilon(862.6697214948535, worksheet.costs_bu139, 0.001); end
  def test_costs_bv139; assert_in_epsilon(480.98170894882304, worksheet.costs_bv139, 0.001); end
  def test_costs_aj139; assert_in_epsilon(76273.70340196094, worksheet.costs_aj139, 0.001); end
  def test_costs_bx139; assert_in_epsilon(76273.70340196094, worksheet.costs_bx139, 0.001); end
  def test_costs_by139; assert_in_epsilon(51727.81546768192, worksheet.costs_by139, 0.001); end
  def test_costs_bz139; assert_in_epsilon(34338.32901785558, worksheet.costs_bz139, 0.001); end
  def test_costs_ca139; assert_in_epsilon(22064.602489001056, worksheet.costs_ca139, 0.001); end
  def test_costs_cb139; assert_in_epsilon(13542.750562144747, worksheet.costs_cb139, 0.001); end
  def test_costs_cc139; assert_in_epsilon(8132.468430036314, worksheet.costs_cc139, 0.001); end
  def test_costs_cd139; assert_in_epsilon(5009.168602220009, worksheet.costs_cd139, 0.001); end
  def test_costs_ce139; assert_in_epsilon(3051.508498885577, worksheet.costs_ce139, 0.001); end
  def test_costs_cf139; assert_in_epsilon(1909.0454093045535, worksheet.costs_cf139, 0.001); end
  def test_costs_o141; assert_equal("Average per  year", worksheet.costs_o141); end
  def test_costs_y141; assert_equal("Average per  year", worksheet.costs_y141); end
  def test_costs_ai141; assert_equal("Average per  year", worksheet.costs_ai141); end
  def test_costs_as141; assert_equal("Average per  year", worksheet.costs_as141); end
  def test_costs_at142; assert_equal("C1.Average", worksheet.costs_at142); end
  def test_costs_au142; assert_equal("Average estimate of capital costs in that year", worksheet.costs_au142); end
  def test_costs_bd142; assert_equal("C2.Average", worksheet.costs_bd142); end
  def test_costs_be142; assert_equal("Average estimate of O&M costs in that year", worksheet.costs_be142); end
  def test_costs_bn142; assert_equal("C3.Average", worksheet.costs_bn142); end
  def test_costs_bo142; assert_equal("Average estimate of fuel costs in that year", worksheet.costs_bo142); end
  def test_costs_bx142; assert_equal("Average estimate of total cash flows", worksheet.costs_bx142); end
  def test_costs_c143; assert_equal("AVERAGE", worksheet.costs_c143); end
  def test_costs_d143; assert_equal("Buildings", worksheet.costs_d143); end
  def test_costs_e143; assert_equal("MEUR", worksheet.costs_e143); end
  def test_costs_f143; assert_in_epsilon(23940.331274786207, worksheet.costs_f143, 0.001); end
  def test_costs_g143; assert_in_epsilon(24800.151720920177, worksheet.costs_g143, 0.001); end
  def test_costs_h143; assert_in_epsilon(25275.857679490036, worksheet.costs_h143, 0.001); end
  def test_costs_i143; assert_in_epsilon(22532.54086475131, worksheet.costs_i143, 0.001); end
  def test_costs_j143; assert_in_epsilon(23374.212216877582, worksheet.costs_j143, 0.001); end
  def test_costs_k143; assert_in_epsilon(22892.13153977003, worksheet.costs_k143, 0.001); end
  def test_costs_l143; assert_in_epsilon(23820.56041780505, worksheet.costs_l143, 0.001); end
  def test_costs_m143; assert_in_epsilon(23983.29091649583, worksheet.costs_m143, 0.001); end
  def test_costs_n143; assert_in_epsilon(26174.786512311755, worksheet.costs_n143, 0.001); end
  def test_costs_o143; assert_in_epsilon(24088.207015911998, worksheet.costs_o143, 0.001); end
  def test_costs_p143; assert_in_epsilon(410.60889831063014, worksheet.costs_p143, 0.001); end
  def test_costs_q143; assert_in_epsilon(448.45218936407565, worksheet.costs_q143, 0.001); end
  def test_costs_r143; assert_in_epsilon(483.6240354584961, worksheet.costs_r143, 0.001); end
  def test_costs_s143; assert_in_epsilon(517.0610880437532, worksheet.costs_s143, 0.001); end
  def test_costs_t143; assert_in_epsilon(549.9549515772178, worksheet.costs_t143, 0.001); end
  def test_costs_u143; assert_in_epsilon(584.2929057780227, worksheet.costs_u143, 0.001); end
  def test_costs_v143; assert_in_epsilon(619.9437861801753, worksheet.costs_v143, 0.001); end
  def test_costs_w143; assert_in_epsilon(656.0697656568659, worksheet.costs_w143, 0.001); end
  def test_costs_x143; assert_in_epsilon(681.5696119906984, worksheet.costs_x143, 0.001); end
  def test_costs_y143; assert_in_epsilon(550.1752480399929, worksheet.costs_y143, 0.001); end
  def test_costs_z143; assert_in_epsilon(3736.092100543493, worksheet.costs_z143, 0.001); end
  def test_costs_aa143; assert_in_epsilon(4245.51858747225, worksheet.costs_aa143, 0.001); end
  def test_costs_ab143; assert_in_epsilon(4412.306898501172, worksheet.costs_ab143, 0.001); end
  def test_costs_ac143; assert_in_epsilon(4935.769740081283, worksheet.costs_ac143, 0.001); end
  def test_costs_ad143; assert_in_epsilon(4695.967759860971, worksheet.costs_ad143, 0.001); end
  def test_costs_ae143; assert_in_epsilon(4364.6401556542805, worksheet.costs_ae143, 0.001); end
  def test_costs_af143; assert_in_epsilon(4107.4072804526, worksheet.costs_af143, 0.001); end
  def test_costs_ag143; assert_in_epsilon(3882.7327664120867, worksheet.costs_ag143, 0.001); end
  def test_costs_ah143; assert_in_epsilon(3723.1173098294344, worksheet.costs_ah143, 0.001); end
  def test_costs_ai143; assert_in_epsilon(4233.728066534174, worksheet.costs_ai143, 0.001); end
  def test_costs_aj143; assert_in_epsilon(28087.03227364033, worksheet.costs_aj143, 0.001); end
  def test_costs_ak132; assert_in_epsilon(34966.61201662498, worksheet.costs_ak132, 0.001); end
  def test_costs_ak63; assert_in_epsilon(24021.632978888036, worksheet.costs_ak63, 0.001); end
  def test_costs_ak143; assert_in_epsilon(29494.122497756507, worksheet.costs_ak143, 0.001); end
  def test_costs_al132; assert_in_epsilon(35998.70886110335, worksheet.costs_al132, 0.001); end
  def test_costs_al63; assert_in_epsilon(24344.86836579606, worksheet.costs_al63, 0.001); end
  def test_costs_al143; assert_in_epsilon(30171.788613449702, worksheet.costs_al143, 0.001); end
  def test_costs_am132; assert_in_epsilon(33813.4158317837, worksheet.costs_am132, 0.001); end
  def test_costs_am63; assert_in_epsilon(22157.32755396899, worksheet.costs_am63, 0.001); end
  def test_costs_am143; assert_in_epsilon(27985.371692876346, worksheet.costs_am143, 0.001); end
  def test_costs_an132; assert_in_epsilon(34652.52691013411, worksheet.costs_an132, 0.001); end
  def test_costs_an63; assert_in_epsilon(22587.742946497427, worksheet.costs_an63, 0.001); end
  def test_costs_an143; assert_in_epsilon(28620.13492831577, worksheet.costs_an143, 0.001); end
  def test_costs_ao132; assert_in_epsilon(33862.13881562905, worksheet.costs_ao132, 0.001); end
  def test_costs_ao63; assert_in_epsilon(21819.990386775615, worksheet.costs_ao63, 0.001); end
  def test_costs_ao143; assert_in_epsilon(27841.06460120233, worksheet.costs_ao143, 0.001); end
  def test_costs_ap132; assert_in_epsilon(34740.19134102068, worksheet.costs_ap132, 0.001); end
  def test_costs_ap63; assert_in_epsilon(22355.63162785496, worksheet.costs_ap63, 0.001); end
  def test_costs_ap143; assert_in_epsilon(28547.91148443782, worksheet.costs_ap143, 0.001); end
  def test_costs_aq132; assert_in_epsilon(34798.75266204736, worksheet.costs_aq132, 0.001); end
  def test_costs_aq63; assert_in_epsilon(22245.434235082208, worksheet.costs_aq63, 0.001); end
  def test_costs_aq143; assert_in_epsilon(28522.09344856478, worksheet.costs_aq143, 0.001); end
  def test_costs_ar132; assert_in_epsilon(37155.86054746669, worksheet.costs_ar132, 0.001); end
  def test_costs_ar63; assert_in_epsilon(24003.086320797087, worksheet.costs_ar63, 0.001); end
  def test_costs_ar143; assert_in_epsilon(30579.47343413189, worksheet.costs_ar143, 0.001); end
  def test_costs_as143; assert_in_epsilon(28872.11033048616, worksheet.costs_as143, 0.001); end
  def test_costs_at143; assert_in_epsilon(23940.331274786207, worksheet.costs_at143, 0.001); end
  def test_costs_au143; assert_in_epsilon(15398.943018621536, worksheet.costs_au143, 0.001); end
  def test_costs_av143; assert_in_epsilon(9744.937312903272, worksheet.costs_av143, 0.001); end
  def test_costs_aw143; assert_in_epsilon(5394.111135107238, worksheet.costs_aw143, 0.001); end
  def test_costs_ax143; assert_in_epsilon(3474.4277061229404, worksheet.costs_ax143, 0.001); end
  def test_costs_ay143; assert_in_epsilon(2112.852130863725, worksheet.costs_ay143, 0.001); end
  def test_costs_az143; assert_in_epsilon(1365.1218563674724, worksheet.costs_az143, 0.001); end
  def test_costs_ba143; assert_in_epsilon(853.4238879767393, worksheet.costs_ba143, 0.001); end
  def test_costs_bb143; assert_in_epsilon(578.3300273881766, worksheet.costs_bb143, 0.001); end
  def test_costs_bc143; assert_in_epsilon(62862.47835013731, worksheet.costs_bc143, 0.001); end
  def test_costs_bd143; assert_in_epsilon(410.60889831063014, worksheet.costs_bd143, 0.001); end
  def test_costs_be143; assert_in_epsilon(278.4535267487165, worksheet.costs_be143, 0.001); end
  def test_costs_bf143; assert_in_epsilon(186.45800147785297, worksheet.costs_bf143, 0.001); end
  def test_costs_bg143; assert_in_epsilon(123.7803135158435, worksheet.costs_bg143, 0.001); end
  def test_costs_bh143; assert_in_epsilon(81.74729925227979, worksheet.costs_bh143, 0.001); end
  def test_costs_bi143; assert_in_epsilon(53.92789696655984, worksheet.costs_bi143, 0.001); end
  def test_costs_bj143; assert_in_epsilon(35.52808151403445, worksheet.costs_bj143, 0.001); end
  def test_costs_bk143; assert_in_epsilon(23.345653944670488, worksheet.costs_bk143, 0.001); end
  def test_costs_bl143; assert_in_epsilon(15.059231607643637, worksheet.costs_bl143, 0.001); end
  def test_costs_bm143; assert_in_epsilon(1208.9089033382313, worksheet.costs_bm143, 0.001); end
  def test_costs_bn143; assert_in_epsilon(3736.092100543493, worksheet.costs_bn143, 0.001); end
  def test_costs_bo143; assert_in_epsilon(2636.1330184055037, worksheet.costs_bo143, 0.001); end
  def test_costs_bp143; assert_in_epsilon(1701.1353156207556, worksheet.costs_bp143, 0.001); end
  def test_costs_bq143; assert_in_epsilon(1181.5840332923613, worksheet.costs_bq143, 0.001); end
  def test_costs_br143; assert_in_epsilon(698.0256849101444, worksheet.costs_br143, 0.001); end
  def test_costs_bs143; assert_in_epsilon(402.83881984980803, worksheet.costs_bs143, 0.001); end
  def test_costs_bt143; assert_in_epsilon(235.38956906142317, worksheet.costs_bt143, 0.001); end
  def test_costs_bu143; assert_in_epsilon(138.16356166563284, worksheet.costs_bu143, 0.001); end
  def test_costs_bv143; assert_in_epsilon(82.26200946281878, worksheet.costs_bv143, 0.001); end
  def test_costs_bw143; assert_in_epsilon(10811.62411281194, worksheet.costs_bw143, 0.001); end
  def test_costs_bx143; assert_in_epsilon(28087.03227364033, worksheet.costs_bx143, 0.001); end
  def test_costs_by143; assert_in_epsilon(18313.52956377576, worksheet.costs_by143, 0.001); end
  def test_costs_bz143; assert_in_epsilon(11632.530630001882, worksheet.costs_bz143, 0.001); end
  def test_costs_ca143; assert_in_epsilon(6699.475481915441, worksheet.costs_ca143, 0.001); end
  def test_costs_cb143; assert_in_epsilon(4254.200690285365, worksheet.costs_cb143, 0.001); end
  def test_costs_cc143; assert_in_epsilon(2569.618847680093, worksheet.costs_cc143, 0.001); end
  def test_costs_cd143; assert_in_epsilon(1636.03950694293, worksheet.costs_cd143, 0.001); end
  def test_costs_ce143; assert_in_epsilon(1014.9331035870426, worksheet.costs_ce143, 0.001); end
  def test_costs_cf143; assert_in_epsilon(675.6512684586392, worksheet.costs_cf143, 0.001); end
  def test_costs_cg143; assert_in_epsilon(74883.01136628748, worksheet.costs_cg143, 0.001); end
  def test_costs_d144; assert_equal("Transport", worksheet.costs_d144); end
  def test_costs_e144; assert_equal("MEUR", worksheet.costs_e144); end
  def test_costs_f144; assert_in_epsilon(6749.227766714314, worksheet.costs_f144, 0.001); end
  def test_costs_g144; assert_in_epsilon(8254.141418166524, worksheet.costs_g144, 0.001); end
  def test_costs_h144; assert_in_epsilon(10171.258529156938, worksheet.costs_h144, 0.001); end
  def test_costs_i144; assert_in_epsilon(10303.641316435165, worksheet.costs_i144, 0.001); end
  def test_costs_j144; assert_in_epsilon(10379.684802898224, worksheet.costs_j144, 0.001); end
  def test_costs_k144; assert_in_epsilon(10082.902338269161, worksheet.costs_k144, 0.001); end
  def test_costs_l144; assert_in_epsilon(9694.815101216278, worksheet.costs_l144, 0.001); end
  def test_costs_m144; assert_in_epsilon(9093.858240183126, worksheet.costs_m144, 0.001); end
  def test_costs_n144; assert_in_epsilon(7664.71710287612, worksheet.costs_n144, 0.001); end
  def test_costs_o144; assert_in_epsilon(9154.916290657316, worksheet.costs_o144, 0.001); end
  def test_costs_p144; assert_in_epsilon(7523.183585097226, worksheet.costs_p144, 0.001); end
  def test_costs_q144; assert_in_epsilon(8312.117859254366, worksheet.costs_q144, 0.001); end
  def test_costs_r144; assert_in_epsilon(8688.919454133622, worksheet.costs_r144, 0.001); end
  def test_costs_s144; assert_in_epsilon(8859.220703830368, worksheet.costs_s144, 0.001); end
  def test_costs_t144; assert_in_epsilon(8921.126740748503, worksheet.costs_t144, 0.001); end
  def test_costs_u144; assert_in_epsilon(8826.780114005911, worksheet.costs_u144, 0.001); end
  def test_costs_v144; assert_in_epsilon(8642.081806921957, worksheet.costs_v144, 0.001); end
  def test_costs_w144; assert_in_epsilon(8353.62248020254, worksheet.costs_w144, 0.001); end
  def test_costs_x144; assert_in_epsilon(7994.397202359492, worksheet.costs_x144, 0.001); end
  def test_costs_y144; assert_in_epsilon(8457.938882950442, worksheet.costs_y144, 0.001); end
  def test_costs_z144; assert_in_epsilon(4696.82362095096, worksheet.costs_z144, 0.001); end
  def test_costs_aa144; assert_in_epsilon(4495.752625820938, worksheet.costs_aa144, 0.001); end
  def test_costs_ab144; assert_in_epsilon(4378.065263428531, worksheet.costs_ab144, 0.001); end
  def test_costs_ac144; assert_in_epsilon(4232.560910206869, worksheet.costs_ac144, 0.001); end
  def test_costs_ad144; assert_in_epsilon(3886.6068167198705, worksheet.costs_ad144, 0.001); end
  def test_costs_ae144; assert_in_epsilon(3427.9012852689875, worksheet.costs_ae144, 0.001); end
  def test_costs_af144; assert_in_epsilon(3093.5352479069925, worksheet.costs_af144, 0.001); end
  def test_costs_ag144; assert_in_epsilon(2801.2057198218654, worksheet.costs_ag144, 0.001); end
  def test_costs_ah144; assert_in_epsilon(2566.4393665533703, worksheet.costs_ah144, 0.001); end
  def test_costs_ai144; assert_in_epsilon(3730.987872964265, worksheet.costs_ai144, 0.001); end
  def test_costs_aj144; assert_in_epsilon(18969.2349727625, worksheet.costs_aj144, 0.001); end
  def test_costs_ak133; assert_in_epsilon(23104.700594799862, worksheet.costs_ak133, 0.001); end
  def test_costs_ak64; assert_in_epsilon(19019.323211683793, worksheet.costs_ak64, 0.001); end
  def test_costs_ak144; assert_in_epsilon(21062.01190324183, worksheet.costs_ak144, 0.001); end
  def test_costs_al133; assert_in_epsilon(25829.82264244872, worksheet.costs_al133, 0.001); end
  def test_costs_al64; assert_in_epsilon(20646.66385098946, worksheet.costs_al64, 0.001); end
  def test_costs_al144; assert_in_epsilon(23238.24324671909, worksheet.costs_al144, 0.001); end
  def test_costs_am133; assert_in_epsilon(26591.83173604047, worksheet.costs_am133, 0.001); end
  def test_costs_am64; assert_in_epsilon(20199.01412490434, worksheet.costs_am64, 0.001); end
  def test_costs_am144; assert_in_epsilon(23395.422930472407, worksheet.costs_am144, 0.001); end
  def test_costs_an133; assert_in_epsilon(27055.12856412578, worksheet.costs_an133, 0.001); end
  def test_costs_an64; assert_in_epsilon(19319.708156607416, worksheet.costs_an64, 0.001); end
  def test_costs_an144; assert_in_epsilon(23187.418360366595, worksheet.costs_an144, 0.001); end
  def test_costs_ao133; assert_in_epsilon(26866.24422417183, worksheet.costs_ao133, 0.001); end
  def test_costs_ao64; assert_in_epsilon(17808.923250916287, worksheet.costs_ao64, 0.001); end
  def test_costs_ao144; assert_in_epsilon(22337.58373754406, worksheet.costs_ao144, 0.001); end
  def test_costs_ap133; assert_in_epsilon(26685.76264283879, worksheet.costs_ap133, 0.001); end
  def test_costs_ap64; assert_in_epsilon(16175.101669251668, worksheet.costs_ap64, 0.001); end
  def test_costs_ap144; assert_in_epsilon(21430.43215604523, worksheet.costs_ap144, 0.001); end
  def test_costs_aq133; assert_in_epsilon(26253.368866710614, worksheet.costs_aq133, 0.001); end
  def test_costs_aq64; assert_in_epsilon(14244.004013704453, worksheet.costs_aq64, 0.001); end
  def test_costs_aq144; assert_in_epsilon(20248.686440207533, worksheet.costs_aq144, 0.001); end
  def test_costs_ar133; assert_in_epsilon(25012.228791050147, worksheet.costs_ar133, 0.001); end
  def test_costs_ar64; assert_in_epsilon(11438.878552527816, worksheet.costs_ar64, 0.001); end
  def test_costs_ar144; assert_in_epsilon(18225.55367178898, worksheet.costs_ar144, 0.001); end
  def test_costs_as144; assert_in_epsilon(21343.843046572023, worksheet.costs_as144, 0.001); end
  def test_costs_at144; assert_in_epsilon(6749.227766714314, worksheet.costs_at144, 0.001); end
  def test_costs_au144; assert_in_epsilon(5125.172410085327, worksheet.costs_au144, 0.001); end
  def test_costs_av144; assert_in_epsilon(3921.4604709693435, worksheet.costs_av144, 0.001); end
  def test_costs_aw144; assert_in_epsilon(2466.609810706199, worksheet.costs_aw144, 0.001); end
  def test_costs_ax144; assert_in_epsilon(1542.8740068498585, worksheet.costs_ax144, 0.001); end
  def test_costs_ay144; assert_in_epsilon(930.6115358324053, worksheet.costs_ay144, 0.001); end
  def test_costs_az144; assert_in_epsilon(555.5958279730212, worksheet.costs_az144, 0.001); end
  def test_costs_ba144; assert_in_epsilon(323.5967859068246, worksheet.costs_ba144, 0.001); end
  def test_costs_bb144; assert_in_epsilon(169.3513736948326, worksheet.costs_bb144, 0.001); end
  def test_costs_bc144; assert_in_epsilon(21784.49998873213, worksheet.costs_bc144, 0.001); end
  def test_costs_bd144; assert_in_epsilon(7523.183585097226, worksheet.costs_bd144, 0.001); end
  def test_costs_be144; assert_in_epsilon(5161.171218591851, worksheet.costs_be144, 0.001); end
  def test_costs_bf144; assert_in_epsilon(3349.9545879349253, worksheet.costs_bf144, 0.001); end
  def test_costs_bg144; assert_in_epsilon(2120.827000103674, worksheet.costs_bg144, 0.001); end
  def test_costs_bh144; assert_in_epsilon(1326.0686448080598, worksheet.costs_bh144, 0.001); end
  def test_costs_bi144; assert_in_epsilon(814.6764813116349, worksheet.costs_bi144, 0.001); end
  def test_costs_bj144; assert_in_epsilon(495.2652058650409, worksheet.costs_bj144, 0.001); end
  def test_costs_bk144; assert_in_epsilon(297.25616057306206, worksheet.costs_bk144, 0.001); end
  def test_costs_bl144; assert_in_epsilon(176.63563180612127, worksheet.costs_bl144, 0.001); end
  def test_costs_bm144; assert_in_epsilon(21265.038516091598, worksheet.costs_bm144, 0.001); end
  def test_costs_bn144; assert_in_epsilon(4696.82362095096, worksheet.costs_bn144, 0.001); end
  def test_costs_bo144; assert_in_epsilon(2791.508668571407, worksheet.costs_bo144, 0.001); end
  def test_costs_bp144; assert_in_epsilon(1687.9336829994038, worksheet.costs_bp144, 0.001); end
  def test_costs_bq144; assert_in_epsilon(1013.2414303742339, worksheet.costs_bq144, 0.001); end
  def test_costs_br144; assert_in_epsilon(577.7193379406087, worksheet.costs_br144, 0.001); end
  def test_costs_bs144; assert_in_epsilon(316.38157077634196, worksheet.costs_bs144, 0.001); end
  def test_costs_bt144; assert_in_epsilon(177.2860296437197, worksheet.costs_bt144, 0.001); end
  def test_costs_bu144; assert_in_epsilon(99.67839212544344, worksheet.costs_bu144, 0.001); end
  def test_costs_bv144; assert_in_epsilon(56.705293410922906, worksheet.costs_bv144, 0.001); end
  def test_costs_bw144; assert_in_epsilon(11417.278026793041, worksheet.costs_bw144, 0.001); end
  def test_costs_bx144; assert_in_epsilon(18969.2349727625, worksheet.costs_bx144, 0.001); end
  def test_costs_by144; assert_in_epsilon(13077.852297248586, worksheet.costs_by144, 0.001); end
  def test_costs_bz144; assert_in_epsilon(8959.348741903672, worksheet.costs_bz144, 0.001); end
  def test_costs_ca144; assert_in_epsilon(5600.678241184107, worksheet.costs_ca144, 0.001); end
  def test_costs_cb144; assert_in_epsilon(3446.661989598527, worksheet.costs_cb144, 0.001); end
  def test_costs_cc144; assert_in_epsilon(2061.669587920382, worksheet.costs_cc144, 0.001); end
  def test_costs_cd144; assert_in_epsilon(1228.147063481782, worksheet.costs_cd144, 0.001); end
  def test_costs_ce144; assert_in_epsilon(720.5313386053301, worksheet.costs_ce144, 0.001); end
  def test_costs_cf144; assert_in_epsilon(402.6922989118768, worksheet.costs_cf144, 0.001); end
  def test_costs_cg144; assert_in_epsilon(54466.816531616765, worksheet.costs_cg144, 0.001); end
  def test_costs_d145; assert_equal("Industry", worksheet.costs_d145); end
  def test_costs_e145; assert_equal("MEUR", worksheet.costs_e145); end
  def test_costs_f145; assert_in_epsilon(5.532938618668466, worksheet.costs_f145, 0.001); end
  def test_costs_g145; assert_in_epsilon(256.26841793172696, worksheet.costs_g145, 0.001); end
  def test_costs_h145; assert_in_epsilon(392.9565446651312, worksheet.costs_h145, 0.001); end
  def test_costs_i145; assert_in_epsilon(562.894913782049, worksheet.costs_i145, 0.001); end
  def test_costs_j145; assert_in_epsilon(1302.1242784231854, worksheet.costs_j145, 0.001); end
  def test_costs_k145; assert_in_epsilon(1420.6641375575896, worksheet.costs_k145, 0.001); end
  def test_costs_l145; assert_in_epsilon(1519.579483320566, worksheet.costs_l145, 0.001); end
  def test_costs_m145; assert_in_epsilon(1597.084629369691, worksheet.costs_m145, 0.001); end
  def test_costs_n145; assert_in_epsilon(1773.526295171654, worksheet.costs_n145, 0.001); end
  def test_costs_o145; assert_in_epsilon(981.1812932044735, worksheet.costs_o145, 0.001); end
  def test_costs_p145; assert_in_delta(0, (worksheet.costs_p145||0), 0.001); end
  def test_costs_q145; assert_in_delta(0, (worksheet.costs_q145||0), 0.001); end
  def test_costs_r145; assert_in_delta(0, (worksheet.costs_r145||0), 0.001); end
  def test_costs_s145; assert_in_delta(0, (worksheet.costs_s145||0), 0.001); end
  def test_costs_t145; assert_in_delta(0, (worksheet.costs_t145||0), 0.001); end
  def test_costs_u145; assert_in_delta(0, (worksheet.costs_u145||0), 0.001); end
  def test_costs_v145; assert_in_delta(0, (worksheet.costs_v145||0), 0.001); end
  def test_costs_w145; assert_in_delta(0, (worksheet.costs_w145||0), 0.001); end
  def test_costs_x145; assert_in_delta(0, (worksheet.costs_x145||0), 0.001); end
  def test_costs_y145; assert_in_delta(0, (worksheet.costs_y145||0), 0.001); end
  def test_costs_z145; assert_in_epsilon(5256.312363604597, worksheet.costs_z145, 0.001); end
  def test_costs_aa145; assert_in_epsilon(5986.658294118792, worksheet.costs_aa145, 0.001); end
  def test_costs_ab145; assert_in_epsilon(6025.4312722102895, worksheet.costs_ab145, 0.001); end
  def test_costs_ac145; assert_in_epsilon(6368.6673327071785, worksheet.costs_ac145, 0.001); end
  def test_costs_ad145; assert_in_epsilon(5979.060337478486, worksheet.costs_ad145, 0.001); end
  def test_costs_ae145; assert_in_epsilon(5530.77666993142, worksheet.costs_ae145, 0.001); end
  def test_costs_af145; assert_in_epsilon(5139.719575324083, worksheet.costs_af145, 0.001); end
  def test_costs_ag145; assert_in_epsilon(4776.685124373911, worksheet.costs_ag145, 0.001); end
  def test_costs_ah145; assert_in_epsilon(4456.6566268265005, worksheet.costs_ah145, 0.001); end
  def test_costs_ai145; assert_in_epsilon(5502.218621841695, worksheet.costs_ai145, 0.001); end
  def test_costs_aj145; assert_in_epsilon(5261.845302223266, worksheet.costs_aj145, 0.001); end
  def test_costs_ak134; assert_in_epsilon(7179.365718858095, worksheet.costs_ak134, 0.001); end
  def test_costs_ak65; assert_in_epsilon(5306.48770524294, worksheet.costs_ak65, 0.001); end
  def test_costs_ak145; assert_in_epsilon(6242.926712050517, worksheet.costs_ak145, 0.001); end
  def test_costs_al134; assert_in_epsilon(7381.145989406735, worksheet.costs_al134, 0.001); end
  def test_costs_al65; assert_in_epsilon(5455.629644344107, worksheet.costs_al65, 0.001); end
  def test_costs_al145; assert_in_epsilon(6418.387816875421, worksheet.costs_al145, 0.001); end
  def test_costs_am134; assert_in_epsilon(7971.29658346261, worksheet.costs_am134, 0.001); end
  def test_costs_am65; assert_in_epsilon(5891.827909515843, worksheet.costs_am65, 0.001); end
  def test_costs_am145; assert_in_epsilon(6931.562246489227, worksheet.costs_am145, 0.001); end
  def test_costs_an134; assert_in_epsilon(8373.362308286922, worksheet.costs_an134, 0.001); end
  def test_costs_an65; assert_in_epsilon(6189.006923516422, worksheet.costs_an65, 0.001); end
  def test_costs_an145; assert_in_epsilon(7281.184615901671, worksheet.costs_an145, 0.001); end
  def test_costs_ao134; assert_in_epsilon(7994.156928612361, worksheet.costs_ao134, 0.001); end
  def test_costs_ao65; assert_in_epsilon(5908.724686365659, worksheet.costs_ao65, 0.001); end
  def test_costs_ao145; assert_in_epsilon(6951.440807489011, worksheet.costs_ao145, 0.001); end
  def test_costs_ap134; assert_in_epsilon(7658.1939174413465, worksheet.costs_ap134, 0.001); end
  def test_costs_ap65; assert_in_epsilon(5660.404199847951, worksheet.costs_ap65, 0.001); end
  def test_costs_ap145; assert_in_epsilon(6659.2990586446485, worksheet.costs_ap145, 0.001); end
  def test_costs_aq134; assert_in_epsilon(7329.835216805142, worksheet.costs_aq134, 0.001); end
  def test_costs_aq65; assert_in_epsilon(5417.7042906820625, worksheet.costs_aq65, 0.001); end
  def test_costs_aq145; assert_in_epsilon(6373.769753743602, worksheet.costs_aq145, 0.001); end
  def test_costs_ar134; assert_in_epsilon(7164.710360297878, worksheet.costs_ar134, 0.001); end
  def test_costs_ar65; assert_in_epsilon(5295.655483698432, worksheet.costs_ar65, 0.001); end
  def test_costs_ar145; assert_in_epsilon(6230.1829219981555, worksheet.costs_ar145, 0.001); end
  def test_costs_as145; assert_in_epsilon(6483.399915046169, worksheet.costs_as145, 0.001); end
  def test_costs_at145; assert_in_epsilon(5.532938618668466, worksheet.costs_at145, 0.001); end
  def test_costs_au145; assert_in_epsilon(159.12252512044438, worksheet.costs_au145, 0.001); end
  def test_costs_av145; assert_in_epsilon(151.5017588330573, worksheet.costs_av145, 0.001); end
  def test_costs_aw145; assert_in_epsilon(134.75256698976324, worksheet.costs_aw145, 0.001); end
  def test_costs_ax145; assert_in_epsilon(193.55247688314216, worksheet.costs_ax145, 0.001); end
  def test_costs_ay145; assert_in_epsilon(131.12161465023556, worksheet.costs_ay145, 0.001); end
  def test_costs_az145; assert_in_epsilon(87.08490181523793, worksheet.costs_az145, 0.001); end
  def test_costs_ba145; assert_in_epsilon(56.83082353335837, worksheet.costs_ba145, 0.001); end
  def test_costs_bb145; assert_in_epsilon(39.18593606781957, worksheet.costs_bb145, 0.001); end
  def test_costs_bc145; assert_in_epsilon(958.6855425117269, worksheet.costs_bc145, 0.001); end
  def test_costs_bd145; assert_in_delta(0, (worksheet.costs_bd145||0), 0.001); end
  def test_costs_be145; assert_in_delta(0, (worksheet.costs_be145||0), 0.001); end
  def test_costs_bf145; assert_in_delta(0, (worksheet.costs_bf145||0), 0.001); end
  def test_costs_bg145; assert_in_delta(0, (worksheet.costs_bg145||0), 0.001); end
  def test_costs_bh145; assert_in_delta(0, (worksheet.costs_bh145||0), 0.001); end
  def test_costs_bi145; assert_in_delta(0, (worksheet.costs_bi145||0), 0.001); end
  def test_costs_bj145; assert_in_delta(0, (worksheet.costs_bj145||0), 0.001); end
  def test_costs_bk145; assert_in_delta(0, (worksheet.costs_bk145||0), 0.001); end
  def test_costs_bl145; assert_in_delta(0, (worksheet.costs_bl145||0), 0.001); end
  def test_costs_bm145; assert_in_delta(0, (worksheet.costs_bm145||0), 0.001); end
  def test_costs_bn145; assert_in_epsilon(5256.312363604597, worksheet.costs_bn145, 0.001); end
  def test_costs_bo145; assert_in_epsilon(3717.2437886873035, worksheet.costs_bo145, 0.001); end
  def test_costs_bp145; assert_in_epsilon(2323.0645929195216, worksheet.costs_bp145, 0.001); end
  def test_costs_bq145; assert_in_epsilon(1524.6083245272148, worksheet.costs_bq145, 0.001); end
  def test_costs_br145; assert_in_epsilon(888.7492207380618, worksheet.costs_br145, 0.001); end
  def test_costs_bs145; assert_in_epsilon(510.46855344573873, worksheet.costs_bs145, 0.001); end
  def test_costs_bt145; assert_in_epsilon(294.5498932355166, worksheet.costs_bt145, 0.001); end
  def test_costs_bu145; assert_in_epsilon(169.9740542145521, worksheet.costs_bu145, 0.001); end
  def test_costs_bv145; assert_in_epsilon(98.46950796866813, worksheet.costs_bv145, 0.001); end
  def test_costs_bw145; assert_in_epsilon(14783.440299341173, worksheet.costs_bw145, 0.001); end
  def test_costs_bx145; assert_in_epsilon(5261.845302223266, worksheet.costs_bx145, 0.001); end
  def test_costs_by145; assert_in_epsilon(3876.3663138077472, worksheet.costs_by145, 0.001); end
  def test_costs_bz145; assert_in_epsilon(2474.566351752579, worksheet.costs_bz145, 0.001); end
  def test_costs_ca145; assert_in_epsilon(1659.360891516978, worksheet.costs_ca145, 0.001); end
  def test_costs_cb145; assert_in_epsilon(1082.301697621204, worksheet.costs_cb145, 0.001); end
  def test_costs_cc145; assert_in_epsilon(641.5901680959744, worksheet.costs_cc145, 0.001); end
  def test_costs_cd145; assert_in_epsilon(381.6347950507545, worksheet.costs_cd145, 0.001); end
  def test_costs_ce145; assert_in_epsilon(226.8048777479105, worksheet.costs_ce145, 0.001); end
  def test_costs_cf145; assert_in_epsilon(137.65544403648767, worksheet.costs_cf145, 0.001); end
  def test_costs_cg145; assert_in_epsilon(15742.125841852903, worksheet.costs_cg145, 0.001); end
  def test_costs_d146; assert_equal("Electricity", worksheet.costs_d146); end
  def test_costs_e146; assert_equal("MEUR", worksheet.costs_e146); end
  def test_costs_f146; assert_in_epsilon(1336.8554589041096, worksheet.costs_f146, 0.001); end
  def test_costs_g135; assert_in_epsilon(1733.8601794986416, worksheet.costs_g135, 0.001); end
  def test_costs_g66; assert_in_epsilon(1341.8002885738524, worksheet.costs_g66, 0.001); end
  def test_costs_g146; assert_in_epsilon(1537.830234036247, worksheet.costs_g146, 0.001); end
  def test_costs_h135; assert_in_epsilon(2246.9637404013465, worksheet.costs_h135, 0.001); end
  def test_costs_h66; assert_in_epsilon(1628.3115428939273, worksheet.costs_h66, 0.001); end
  def test_costs_h146; assert_in_epsilon(1937.6376416476369, worksheet.costs_h146, 0.001); end
  def test_costs_i135; assert_in_epsilon(3518.638146988197, worksheet.costs_i135, 0.001); end
  def test_costs_i66; assert_in_epsilon(2564.574762734723, worksheet.costs_i66, 0.001); end
  def test_costs_i146; assert_in_epsilon(3041.6064548614604, worksheet.costs_i146, 0.001); end
  def test_costs_j135; assert_in_epsilon(2318.3588094992747, worksheet.costs_j135, 0.001); end
  def test_costs_j66; assert_in_epsilon(1388.9660344575998, worksheet.costs_j66, 0.001); end
  def test_costs_j146; assert_in_epsilon(1853.6624219784371, worksheet.costs_j146, 0.001); end
  def test_costs_k135; assert_in_epsilon(2548.722422214872, worksheet.costs_k135, 0.001); end
  def test_costs_k66; assert_in_epsilon(1509.5071208894703, worksheet.costs_k66, 0.001); end
  def test_costs_k146; assert_in_epsilon(2029.114771552171, worksheet.costs_k146, 0.001); end
  def test_costs_l135; assert_in_epsilon(2887.6906166002645, worksheet.costs_l135, 0.001); end
  def test_costs_l66; assert_in_epsilon(1723.3477339292706, worksheet.costs_l66, 0.001); end
  def test_costs_l146; assert_in_epsilon(2305.5191752647675, worksheet.costs_l146, 0.001); end
  def test_costs_m135; assert_in_epsilon(3448.262644513506, worksheet.costs_m135, 0.001); end
  def test_costs_m66; assert_in_epsilon(2174.8733531917665, worksheet.costs_m66, 0.001); end
  def test_costs_m146; assert_in_epsilon(2811.5679988526363, worksheet.costs_m146, 0.001); end
  def test_costs_n135; assert_in_epsilon(4983.352016129115, worksheet.costs_n135, 0.001); end
  def test_costs_n66; assert_in_epsilon(3362.82946065132, worksheet.costs_n66, 0.001); end
  def test_costs_n146; assert_in_epsilon(4173.090738390218, worksheet.costs_n146, 0.001); end
  def test_costs_o146; assert_in_epsilon(2336.320543943076, worksheet.costs_o146, 0.001); end
  def test_costs_p146; assert_in_epsilon(806.5569728815228, worksheet.costs_p146, 0.001); end
  def test_costs_q135; assert_in_epsilon(1007.053788366396, worksheet.costs_q135, 0.001); end
  def test_costs_q66; assert_in_epsilon(797.8888545861754, worksheet.costs_q66, 0.001); end
  def test_costs_q146; assert_in_epsilon(902.4713214762858, worksheet.costs_q146, 0.001); end
  def test_costs_r135; assert_in_epsilon(1084.8536443555809, worksheet.costs_r135, 0.001); end
  def test_costs_r66; assert_in_epsilon(842.3673971005857, worksheet.costs_r66, 0.001); end
  def test_costs_r146; assert_in_epsilon(963.6105207280832, worksheet.costs_r146, 0.001); end
  def test_costs_s135; assert_in_epsilon(872.227586530181, worksheet.costs_s135, 0.001); end
  def test_costs_s66; assert_in_epsilon(627.9666305745301, worksheet.costs_s66, 0.001); end
  def test_costs_s146; assert_in_epsilon(750.0971085523556, worksheet.costs_s146, 0.001); end
  def test_costs_t135; assert_in_epsilon(984.5115764342846, worksheet.costs_t135, 0.001); end
  def test_costs_t66; assert_in_epsilon(668.5585632293017, worksheet.costs_t66, 0.001); end
  def test_costs_t146; assert_in_epsilon(826.5350698317932, worksheet.costs_t146, 0.001); end
  def test_costs_u135; assert_in_epsilon(1083.318611913227, worksheet.costs_u135, 0.001); end
  def test_costs_u66; assert_in_epsilon(734.3616514742912, worksheet.costs_u66, 0.001); end
  def test_costs_u146; assert_in_epsilon(908.8401316937591, worksheet.costs_u146, 0.001); end
  def test_costs_v135; assert_in_epsilon(1158.6254788517106, worksheet.costs_v135, 0.001); end
  def test_costs_v66; assert_in_epsilon(784.226592410601, worksheet.costs_v66, 0.001); end
  def test_costs_v146; assert_in_epsilon(971.4260356311559, worksheet.costs_v146, 0.001); end
  def test_costs_w135; assert_in_epsilon(1251.8270878399208, worksheet.costs_w135, 0.001); end
  def test_costs_w66; assert_in_epsilon(844.175328963324, worksheet.costs_w66, 0.001); end
  def test_costs_w146; assert_in_epsilon(1048.0012084016223, worksheet.costs_w146, 0.001); end
  def test_costs_x135; assert_in_epsilon(1364.4780126265957, worksheet.costs_x135, 0.001); end
  def test_costs_x66; assert_in_epsilon(917.9154777645227, worksheet.costs_x66, 0.001); end
  def test_costs_x146; assert_in_epsilon(1141.1967451955593, worksheet.costs_x146, 0.001); end
  def test_costs_y146; assert_in_epsilon(924.3039015991263, worksheet.costs_y146, 0.001); end
  def test_costs_z146; assert_in_epsilon(2279.313890978453, worksheet.costs_z146, 0.001); end
  def test_costs_aa135; assert_in_epsilon(1234.8168387708072, worksheet.costs_aa135, 0.001); end
  def test_costs_aa66; assert_in_epsilon(929.3487931248576, worksheet.costs_aa66, 0.001); end
  def test_costs_aa146; assert_in_epsilon(1082.0828159478324, worksheet.costs_aa146, 0.001); end
  def test_costs_ab135; assert_in_epsilon(1567.8708321624333, worksheet.costs_ab135, 0.001); end
  def test_costs_ab66; assert_in_epsilon(1179.8699693619149, worksheet.costs_ab66, 0.001); end
  def test_costs_ab146; assert_in_epsilon(1373.870400762174, worksheet.costs_ab146, 0.001); end
  def test_costs_ac135; assert_in_epsilon(3795.524873765114, worksheet.costs_ac135, 0.001); end
  def test_costs_ac66; assert_in_epsilon(2838.7232008375668, worksheet.costs_ac66, 0.001); end
  def test_costs_ac146; assert_in_epsilon(3317.1240373013406, worksheet.costs_ac146, 0.001); end
  def test_costs_ad135; assert_in_epsilon(3562.78170074825, worksheet.costs_ad135, 0.001); end
  def test_costs_ad66; assert_in_epsilon(2697.1345571307347, worksheet.costs_ad66, 0.001); end
  def test_costs_ad146; assert_in_epsilon(3129.9581289394923, worksheet.costs_ad146, 0.001); end
  def test_costs_ae135; assert_in_epsilon(3251.380463390652, worksheet.costs_ae135, 0.001); end
  def test_costs_ae66; assert_in_epsilon(2496.0411325169716, worksheet.costs_ae66, 0.001); end
  def test_costs_ae146; assert_in_epsilon(2873.710797953812, worksheet.costs_ae146, 0.001); end
  def test_costs_af135; assert_in_epsilon(3045.3388860237915, worksheet.costs_af135, 0.001); end
  def test_costs_af66; assert_in_epsilon(2367.3164987683817, worksheet.costs_af66, 0.001); end
  def test_costs_af146; assert_in_epsilon(2706.3276923960866, worksheet.costs_af146, 0.001); end
  def test_costs_ag135; assert_in_epsilon(2746.5405423050247, worksheet.costs_ag135, 0.001); end
  def test_costs_ag66; assert_in_epsilon(2173.409551608867, worksheet.costs_ag66, 0.001); end
  def test_costs_ag146; assert_in_epsilon(2459.975046956946, worksheet.costs_ag146, 0.001); end
  def test_costs_ah135; assert_in_epsilon(2426.520681259784, worksheet.costs_ah135, 0.001); end
  def test_costs_ah66; assert_in_epsilon(1966.9970171376467, worksheet.costs_ah66, 0.001); end
  def test_costs_ah146; assert_in_epsilon(2196.7588491987153, worksheet.costs_ah146, 0.001); end
  def test_costs_ai146; assert_in_epsilon(2379.9024067149835, worksheet.costs_ai146, 0.001); end
  def test_costs_aj146; assert_in_epsilon(4422.726322764085, worksheet.costs_aj146, 0.001); end
  def test_costs_ak135; assert_in_epsilon(3975.730806635845, worksheet.costs_ak135, 0.001); end
  def test_costs_ak66; assert_in_epsilon(3069.0379362848857, worksheet.costs_ak66, 0.001); end
  def test_costs_ak146; assert_in_epsilon(3522.3843714603654, worksheet.costs_ak146, 0.001); end
  def test_costs_al135; assert_in_epsilon(4899.688216919361, worksheet.costs_al135, 0.001); end
  def test_costs_al66; assert_in_epsilon(3650.5489093564283, worksheet.costs_al66, 0.001); end
  def test_costs_al146; assert_in_epsilon(4275.118563137895, worksheet.costs_al146, 0.001); end
  def test_costs_am135; assert_in_epsilon(8186.39060728349, worksheet.costs_am135, 0.001); end
  def test_costs_am66; assert_in_epsilon(6031.26459414682, worksheet.costs_am66, 0.001); end
  def test_costs_am146; assert_in_epsilon(7108.827600715154, worksheet.costs_am146, 0.001); end
  def test_costs_an135; assert_in_epsilon(6865.652086681808, worksheet.costs_an135, 0.001); end
  def test_costs_an66; assert_in_epsilon(4754.659154817636, worksheet.costs_an66, 0.001); end
  def test_costs_an146; assert_in_epsilon(5810.1556207497215, worksheet.costs_an146, 0.001); end
  def test_costs_ao135; assert_in_epsilon(6883.421497518751, worksheet.costs_ao135, 0.001); end
  def test_costs_ao66; assert_in_epsilon(4739.909904880733, worksheet.costs_ao66, 0.001); end
  def test_costs_ao146; assert_in_epsilon(5811.665701199741, worksheet.costs_ao146, 0.001); end
  def test_costs_ap135; assert_in_epsilon(7091.654981475767, worksheet.costs_ap135, 0.001); end
  def test_costs_ap66; assert_in_epsilon(4874.890825108253, worksheet.costs_ap66, 0.001); end
  def test_costs_ap146; assert_in_epsilon(5983.272903292011, worksheet.costs_ap146, 0.001); end
  def test_costs_aq135; assert_in_epsilon(7446.6302746584515, worksheet.costs_aq135, 0.001); end
  def test_costs_aq66; assert_in_epsilon(5192.458233763959, worksheet.costs_aq66, 0.001); end
  def test_costs_aq146; assert_in_epsilon(6319.544254211205, worksheet.costs_aq146, 0.001); end
  def test_costs_ar135; assert_in_epsilon(8774.350710015495, worksheet.costs_ar135, 0.001); end
  def test_costs_ar66; assert_in_epsilon(6247.741955553489, worksheet.costs_ar66, 0.001); end
  def test_costs_ar146; assert_in_epsilon(7511.046332784492, worksheet.costs_ar146, 0.001); end
  def test_costs_as146; assert_in_epsilon(5640.526852257185, worksheet.costs_as146, 0.001); end
  def test_costs_at146; assert_in_epsilon(1336.8554589041096, worksheet.costs_at146, 0.001); end
  def test_costs_au146; assert_in_epsilon(954.8715835581563, worksheet.costs_au146, 0.001); end
  def test_costs_av146; assert_in_epsilon(747.0431900833097, worksheet.costs_av146, 0.001); end
  def test_costs_aw146; assert_in_epsilon(728.1364026037608, worksheet.costs_aw146, 0.001); end
  def test_costs_ax146; assert_in_epsilon(275.5351075348957, worksheet.costs_ax146, 0.001); end
  def test_costs_ay146; assert_in_epsilon(187.27917325623292, worksheet.costs_ay146, 0.001); end
  def test_costs_az146; assert_in_epsilon(132.12596854252575, worksheet.costs_az146, 0.001); end
  def test_costs_ba146; assert_in_epsilon(100.04712452707801, worksheet.costs_ba146, 0.001); end
  def test_costs_bb146; assert_in_epsilon(92.20414003725938, worksheet.costs_bb146, 0.001); end
  def test_costs_bc146; assert_in_epsilon(4554.098149047328, worksheet.costs_bc146, 0.001); end
  def test_costs_bd146; assert_in_epsilon(806.5569728815228, worksheet.costs_bd146, 0.001); end
  def test_costs_be146; assert_in_epsilon(560.3636869539993, worksheet.costs_be146, 0.001); end
  def test_costs_bf146; assert_in_epsilon(371.5135698904089, worksheet.costs_bf146, 0.001); end
  def test_costs_bg146; assert_in_epsilon(179.56728404223222, worksheet.costs_bg146, 0.001); end
  def test_costs_bh146; assert_in_epsilon(122.8591714689865, worksheet.costs_bh146, 0.001); end
  def test_costs_bi146; assert_in_epsilon(83.88230713804984, worksheet.costs_bi146, 0.001); end
  def test_costs_bj146; assert_in_epsilon(55.67102074111038, worksheet.costs_bj146, 0.001); end
  def test_costs_bk146; assert_in_epsilon(37.29218266969643, worksheet.costs_bk146, 0.001); end
  def test_costs_bl146; assert_in_epsilon(25.214660092597477, worksheet.costs_bl146, 0.001); end
  def test_costs_bm146; assert_in_epsilon(2242.920855878604, worksheet.costs_bm146, 0.001); end
  def test_costs_bn146; assert_in_epsilon(2279.313890978453, worksheet.costs_bn146, 0.001); end
  def test_costs_bo146; assert_in_epsilon(671.8882937379042, worksheet.costs_bo146, 0.001); end
  def test_costs_bp146; assert_in_epsilon(529.6865135597172, worksheet.costs_bp146, 0.001); end
  def test_costs_bq146; assert_in_epsilon(794.0931213012811, worksheet.costs_bq146, 0.001); end
  def test_costs_br146; assert_in_epsilon(465.24833184922596, worksheet.costs_br146, 0.001); end
  def test_costs_bs146; assert_in_epsilon(265.2320065693543, worksheet.costs_bs146, 0.001); end
  def test_costs_bt146; assert_in_epsilon(155.09572481010804, worksheet.costs_bt146, 0.001); end
  def test_costs_bu146; assert_in_epsilon(87.53600480473592, worksheet.costs_bu146, 0.001); end
  def test_costs_bv146; assert_in_epsilon(48.53722894071109, worksheet.costs_bv146, 0.001); end
  def test_costs_bw146; assert_in_epsilon(5296.63111655149, worksheet.costs_bw146, 0.001); end
  def test_costs_bx146; assert_in_epsilon(4422.726322764085, worksheet.costs_bx146, 0.001); end
  def test_costs_by146; assert_in_epsilon(2187.12356425006, worksheet.costs_by146, 0.001); end
  def test_costs_bz146; assert_in_epsilon(1648.243273533436, worksheet.costs_bz146, 0.001); end
  def test_costs_ca146; assert_in_epsilon(1701.7968079472737, worksheet.costs_ca146, 0.001); end
  def test_costs_cb146; assert_in_epsilon(863.642610853108, worksheet.costs_cb146, 0.001); end
  def test_costs_cc146; assert_in_epsilon(536.3934869636371, worksheet.costs_cc146, 0.001); end
  def test_costs_cd146; assert_in_epsilon(342.8927140937442, worksheet.costs_cd146, 0.001); end
  def test_costs_ce146; assert_in_epsilon(224.8753120015104, worksheet.costs_ce146, 0.001); end
  def test_costs_cf146; assert_in_epsilon(165.95602907056792, worksheet.costs_cf146, 0.001); end
  def test_costs_cg146; assert_in_epsilon(12093.650121477425, worksheet.costs_cg146, 0.001); end
  def test_costs_d147; assert_equal("Fossil fuels", worksheet.costs_d147); end
  def test_costs_e147; assert_equal("MEUR", worksheet.costs_e147); end
  def test_costs_f147; assert_in_epsilon(261.3713733106339, worksheet.costs_f147, 0.001); end
  def test_costs_g136; assert_in_epsilon(266.23771134928984, worksheet.costs_g136, 0.001); end
  def test_costs_g67; assert_in_epsilon(88.74590378309661, worksheet.costs_g67, 0.001); end
  def test_costs_g147; assert_in_epsilon(177.49180756619322, worksheet.costs_g147, 0.001); end
  def test_costs_h136; assert_in_epsilon(1106.0735066360855, worksheet.costs_h136, 0.001); end
  def test_costs_h67; assert_in_epsilon(368.6911688786952, worksheet.costs_h67, 0.001); end
  def test_costs_h147; assert_in_epsilon(737.3823377573904, worksheet.costs_h147, 0.001); end
  def test_costs_i136; assert_in_epsilon(401.8700464990443, worksheet.costs_i136, 0.001); end
  def test_costs_i67; assert_in_epsilon(133.95668216634812, worksheet.costs_i67, 0.001); end
  def test_costs_i147; assert_in_epsilon(267.91336433269623, worksheet.costs_i147, 0.001); end
  def test_costs_j136; assert_in_epsilon(349.58908484307665, worksheet.costs_j136, 0.001); end
  def test_costs_j67; assert_in_epsilon(116.52969494769222, worksheet.costs_j67, 0.001); end
  def test_costs_j147; assert_in_epsilon(233.05938989538444, worksheet.costs_j147, 0.001); end
  def test_costs_k136; assert_in_epsilon(300.43573053758814, worksheet.costs_k136, 0.001); end
  def test_costs_k67; assert_in_epsilon(100.14524351252939, worksheet.costs_k67, 0.001); end
  def test_costs_k147; assert_in_epsilon(200.29048702505878, worksheet.costs_k147, 0.001); end
  def test_costs_l136; assert_in_epsilon(258.5342690983823, worksheet.costs_l136, 0.001); end
  def test_costs_l67; assert_in_epsilon(86.17808969946077, worksheet.costs_l67, 0.001); end
  def test_costs_l147; assert_in_epsilon(172.35617939892154, worksheet.costs_l147, 0.001); end
  def test_costs_m136; assert_in_epsilon(205.5009341063815, worksheet.costs_m136, 0.001); end
  def test_costs_m67; assert_in_epsilon(68.50031136879383, worksheet.costs_m67, 0.001); end
  def test_costs_m147; assert_in_epsilon(137.00062273758766, worksheet.costs_m147, 0.001); end
  def test_costs_n136; assert_in_delta(0, (worksheet.costs_n136||0), 0.001); end
  def test_costs_n67; assert_in_delta(0, (worksheet.costs_n67||0), 0.001); end
  def test_costs_n147; assert_in_delta(0, (worksheet.costs_n147||0), 0.001); end
  def test_costs_o147; assert_in_epsilon(242.98506244709617, worksheet.costs_o147, 0.001); end
  def test_costs_p147; assert_in_delta(0.27820032533886085, worksheet.costs_p147, 0.001); end
  def test_costs_q136; assert_in_delta(0.27275794615635957, worksheet.costs_q136, 0.001); end
  def test_costs_q67; assert_in_delta(0.27275794615635957, worksheet.costs_q67, 0.001); end
  def test_costs_q147; assert_in_delta(0.27275794615635957, worksheet.costs_q147, 0.001); end
  def test_costs_r136; assert_in_delta(0.41992690334278404, worksheet.costs_r136, 0.001); end
  def test_costs_r67; assert_in_delta(0.41992690334278404, worksheet.costs_r67, 0.001); end
  def test_costs_r147; assert_in_delta(0.41992690334278404, worksheet.costs_r147, 0.001); end
  def test_costs_s136; assert_in_delta(0.3652968493658063, worksheet.costs_s136, 0.001); end
  def test_costs_s67; assert_in_delta(0.3652968493658063, worksheet.costs_s67, 0.001); end
  def test_costs_s147; assert_in_delta(0.3652968493658063, worksheet.costs_s147, 0.001); end
  def test_costs_t136; assert_in_delta(0.31393493264115796, worksheet.costs_t136, 0.001); end
  def test_costs_t67; assert_in_delta(0.31393493264115796, worksheet.costs_t67, 0.001); end
  def test_costs_t147; assert_in_delta(0.31393493264115796, worksheet.costs_t147, 0.001); end
  def test_costs_u136; assert_in_delta(0.27015075140896794, worksheet.costs_u136, 0.001); end
  def test_costs_u67; assert_in_delta(0.27015075140896794, worksheet.costs_u67, 0.001); end
  def test_costs_u147; assert_in_delta(0.27015075140896794, worksheet.costs_u147, 0.001); end
  def test_costs_v136; assert_in_delta(0.21473451839747285, worksheet.costs_v136, 0.001); end
  def test_costs_v67; assert_in_delta(0.21473451839747285, worksheet.costs_v67, 0.001); end
  def test_costs_v147; assert_in_delta(0.21473451839747285, worksheet.costs_v147, 0.001); end
  def test_costs_w136; assert_in_delta(0.15093526455811698, worksheet.costs_w136, 0.001); end
  def test_costs_w67; assert_in_delta(0.15093526455811698, worksheet.costs_w67, 0.001); end
  def test_costs_w147; assert_in_delta(0.15093526455811698, worksheet.costs_w147, 0.001); end
  def test_costs_x136; assert_in_delta(0, (worksheet.costs_x136||0), 0.001); end
  def test_costs_x67; assert_in_delta(0, (worksheet.costs_x67||0), 0.001); end
  def test_costs_x147; assert_in_delta(0, (worksheet.costs_x147||0), 0.001); end
  def test_costs_y147; assert_in_delta(0.25399305457883625, worksheet.costs_y147, 0.001); end
  def test_costs_z147; assert_in_epsilon(12161.532262363755, worksheet.costs_z147, 0.001); end
  def test_costs_aa136; assert_in_epsilon(11693.249533000057, worksheet.costs_aa136, 0.001); end
  def test_costs_aa67; assert_in_epsilon(8642.83661134787, worksheet.costs_aa67, 0.001); end
  def test_costs_aa147; assert_in_epsilon(10168.043072173963, worksheet.costs_aa147, 0.001); end
  def test_costs_ab136; assert_in_epsilon(10817.396603948304, worksheet.costs_ab136, 0.001); end
  def test_costs_ab67; assert_in_epsilon(7995.467055092226, worksheet.costs_ab67, 0.001); end
  def test_costs_ab147; assert_in_epsilon(9406.431829520265, worksheet.costs_ab147, 0.001); end
  def test_costs_ac136; assert_in_epsilon(11773.917360188592, worksheet.costs_ac136, 0.001); end
  def test_costs_ac67; assert_in_epsilon(8702.460657530697, worksheet.costs_ac67, 0.001); end
  def test_costs_ac147; assert_in_epsilon(10238.189008859645, worksheet.costs_ac147, 0.001); end
  def test_costs_ad136; assert_in_epsilon(9899.21342582758, worksheet.costs_ad136, 0.001); end
  def test_costs_ad67; assert_in_epsilon(7316.809923437777, worksheet.costs_ad67, 0.001); end
  def test_costs_ad147; assert_in_epsilon(8608.011674632678, worksheet.costs_ad147, 0.001); end
  def test_costs_ae136; assert_in_epsilon(7884.956188947128, worksheet.costs_ae136, 0.001); end
  def test_costs_ae67; assert_in_epsilon(5828.011096178312, worksheet.costs_ae67, 0.001); end
  def test_costs_ae147; assert_in_epsilon(6856.48364256272, worksheet.costs_ae147, 0.001); end
  def test_costs_af136; assert_in_epsilon(6241.154239459745, worksheet.costs_af136, 0.001); end
  def test_costs_af67; assert_in_epsilon(4613.027046557203, worksheet.costs_af67, 0.001); end
  def test_costs_af147; assert_in_epsilon(5427.090643008474, worksheet.costs_af147, 0.001); end
  def test_costs_ag136; assert_in_epsilon(4651.098887009138, worksheet.costs_ag136, 0.001); end
  def test_costs_ag67; assert_in_epsilon(3437.7687425719714, worksheet.costs_ag67, 0.001); end
  def test_costs_ag147; assert_in_epsilon(4044.4338147905546, worksheet.costs_ag147, 0.001); end
  def test_costs_ah136; assert_in_epsilon(3167.6369808127693, worksheet.costs_ah136, 0.001); end
  def test_costs_ah67; assert_in_epsilon(2341.296898861612, worksheet.costs_ah67, 0.001); end
  def test_costs_ah147; assert_in_epsilon(2754.4669398371907, worksheet.costs_ah147, 0.001); end
  def test_costs_ai147; assert_in_epsilon(7740.520320861028, worksheet.costs_ai147, 0.001); end
  def test_costs_aj147; assert_in_epsilon(12423.181835999727, worksheet.costs_aj147, 0.001); end
  def test_costs_ak136; assert_in_epsilon(11959.760002295503, worksheet.costs_ak136, 0.001); end
  def test_costs_ak67; assert_in_epsilon(8731.855273077123, worksheet.costs_ak67, 0.001); end
  def test_costs_ak147; assert_in_epsilon(10345.807637686314, worksheet.costs_ak147, 0.001); end
  def test_costs_al136; assert_in_epsilon(11923.890037487732, worksheet.costs_al136, 0.001); end
  def test_costs_al67; assert_in_epsilon(8364.578150874264, worksheet.costs_al67, 0.001); end
  def test_costs_al147; assert_in_epsilon(10144.234094180998, worksheet.costs_al147, 0.001); end
  def test_costs_am136; assert_in_epsilon(12176.152703537002, worksheet.costs_am136, 0.001); end
  def test_costs_am67; assert_in_epsilon(8836.782636546413, worksheet.costs_am67, 0.001); end
  def test_costs_am147; assert_in_epsilon(10506.467670041708, worksheet.costs_am147, 0.001); end
  def test_costs_an136; assert_in_epsilon(10249.116445603297, worksheet.costs_an136, 0.001); end
  def test_costs_an67; assert_in_epsilon(7433.65355331811, worksheet.costs_an67, 0.001); end
  def test_costs_an147; assert_in_epsilon(8841.384999460704, worksheet.costs_an147, 0.001); end
  def test_costs_ao136; assert_in_epsilon(8185.662070236125, worksheet.costs_ao136, 0.001); end
  def test_costs_ao67; assert_in_epsilon(5928.426490442251, worksheet.costs_ao67, 0.001); end
  def test_costs_ao147; assert_in_epsilon(7057.044280339188, worksheet.costs_ao147, 0.001); end
  def test_costs_ap136; assert_in_epsilon(6499.9032430765255, worksheet.costs_ap136, 0.001); end
  def test_costs_ap67; assert_in_epsilon(4699.419870775062, worksheet.costs_ap67, 0.001); end
  def test_costs_ap147; assert_in_epsilon(5599.661556925794, worksheet.costs_ap147, 0.001); end
  def test_costs_aq136; assert_in_epsilon(4856.750756380077, worksheet.costs_aq136, 0.001); end
  def test_costs_aq67; assert_in_epsilon(3506.419989205323, worksheet.costs_aq67, 0.001); end
  def test_costs_aq147; assert_in_epsilon(4181.585372792701, worksheet.costs_aq147, 0.001); end
  def test_costs_ar136; assert_in_epsilon(3167.6369808127693, worksheet.costs_ar136, 0.001); end
  def test_costs_ar67; assert_in_epsilon(2341.296898861612, worksheet.costs_ar67, 0.001); end
  def test_costs_ar147; assert_in_epsilon(2754.4669398371907, worksheet.costs_ar147, 0.001); end
  def test_costs_as147; assert_in_epsilon(7983.759376362702, worksheet.costs_as147, 0.001); end
  def test_costs_at147; assert_in_epsilon(261.3713733106339, worksheet.costs_at147, 0.001); end
  def test_costs_au147; assert_in_epsilon(110.20844798616162, worksheet.costs_au147, 0.001); end
  def test_costs_av147; assert_in_epsilon(284.2928120662221, worksheet.costs_av147, 0.001); end
  def test_costs_aw147; assert_in_epsilon(64.13632934099147, worksheet.costs_aw147, 0.001); end
  def test_costs_ax147; assert_in_epsilon(34.642793259143346, worksheet.costs_ax147, 0.001); end
  def test_costs_ay147; assert_in_epsilon(18.486010425348095, worksheet.costs_ay147, 0.001); end
  def test_costs_az147; assert_in_epsilon(9.877483293868762, worksheet.costs_az147, 0.001); end
  def test_costs_ba147; assert_in_epsilon(4.875044234714621, worksheet.costs_ba147, 0.001); end
  def test_costs_bb147; assert_in_delta(0, (worksheet.costs_bb147||0), 0.001); end
  def test_costs_bc147; assert_in_epsilon(787.8902939170839, worksheet.costs_bc147, 0.001); end
  def test_costs_bd147; assert_in_delta(0.27820032533886085, worksheet.costs_bd147, 0.001); end
  def test_costs_be147; assert_in_delta(0.16936122480230453, worksheet.costs_be147, 0.001); end
  def test_costs_bf147; assert_in_delta(0.16189999963473387, worksheet.costs_bf147, 0.001); end
  def test_costs_bg147; assert_in_delta(0.08744916139777895, worksheet.costs_bg147, 0.001); end
  def test_costs_bh147; assert_in_delta(0.04666442735129682, worksheet.costs_bh147, 0.001); end
  def test_costs_bi147; assert_in_delta(0.024933833259574587, worksheet.costs_bi147, 0.001); end
  def test_costs_bj147; assert_in_delta(0.012306124593182205, worksheet.costs_bj147, 0.001); end
  def test_costs_bk147; assert_in_delta(0.005370895960878686, worksheet.costs_bk147, 0.001); end
  def test_costs_bl147; assert_in_delta(0, (worksheet.costs_bl147||0), 0.001); end
  def test_costs_bm147; assert_in_delta(0.7861859923386105, worksheet.costs_bm147, 0.001); end
  def test_costs_bn147; assert_in_epsilon(12161.532262363755, worksheet.costs_bn147, 0.001); end
  def test_costs_bo147; assert_in_epsilon(6313.554757296732, worksheet.costs_bo147, 0.001); end
  def test_costs_bp147; assert_in_epsilon(3626.5866693478883, worksheet.costs_bp147, 0.001); end
  def test_costs_bq147; assert_in_epsilon(2450.941048659754, worksheet.costs_bq147, 0.001); end
  def test_costs_br147; assert_in_epsilon(1279.5260853915843, worksheet.costs_br147, 0.001); end
  def test_costs_bs147; assert_in_epsilon(632.8260017750383, worksheet.costs_bs147, 0.001); end
  def test_costs_bt147; assert_in_epsilon(311.01871338512103, worksheet.costs_bt147, 0.001); end
  def test_costs_bu147; assert_in_epsilon(143.91754838403395, worksheet.costs_bu147, 0.001); end
  def test_costs_bv147; assert_in_epsilon(60.85974913325766, worksheet.costs_bv147, 0.001); end
  def test_costs_bw147; assert_in_epsilon(26980.76283573717, worksheet.costs_bw147, 0.001); end
  def test_costs_bx147; assert_in_epsilon(12423.181835999727, worksheet.costs_bx147, 0.001); end
  def test_costs_by147; assert_in_epsilon(6423.932566507696, worksheet.costs_by147, 0.001); end
  def test_costs_bz147; assert_in_epsilon(3911.0413814137455, worksheet.costs_bz147, 0.001); end
  def test_costs_ca147; assert_in_epsilon(2515.1648271621434, worksheet.costs_ca147, 0.001); end
  def test_costs_cb147; assert_in_epsilon(1314.2155430780788, worksheet.costs_cb147, 0.001); end
  def test_costs_cc147; assert_in_epsilon(651.336946033646, worksheet.costs_cc147, 0.001); end
  def test_costs_cd147; assert_in_epsilon(320.908502803583, worksheet.costs_cd147, 0.001); end
  def test_costs_ce147; assert_in_epsilon(148.79796351470947, worksheet.costs_ce147, 0.001); end
  def test_costs_cf147; assert_in_epsilon(60.85974913325766, worksheet.costs_cf147, 0.001); end
  def test_costs_cg147; assert_in_epsilon(27769.439315646592, worksheet.costs_cg147, 0.001); end
  def test_costs_d148; assert_equal("Bioenergy", worksheet.costs_d148); end
  def test_costs_e148; assert_equal("MEUR", worksheet.costs_e148); end
  def test_costs_f148; assert_in_epsilon(155.40000593222462, worksheet.costs_f148, 0.001); end
  def test_costs_g137; assert_in_epsilon(339.58934750842093, worksheet.costs_g137, 0.001); end
  def test_costs_g68; assert_in_epsilon(5.34628523482145, worksheet.costs_g68, 0.001); end
  def test_costs_g148; assert_in_epsilon(172.46781637162118, worksheet.costs_g148, 0.001); end
  def test_costs_h137; assert_in_epsilon(481.47667544718337, worksheet.costs_h137, 0.001); end
  def test_costs_h68; assert_in_epsilon(7.818016210708784, worksheet.costs_h68, 0.001); end
  def test_costs_h148; assert_in_epsilon(244.64734582894607, worksheet.costs_h148, 0.001); end
  def test_costs_i137; assert_in_epsilon(386.28851997227076, worksheet.costs_i137, 0.001); end
  def test_costs_i68; assert_in_epsilon(6.594800708943884, worksheet.costs_i68, 0.001); end
  def test_costs_i148; assert_in_epsilon(196.4416603406073, worksheet.costs_i148, 0.001); end
  def test_costs_j137; assert_in_epsilon(409.44165099264865, worksheet.costs_j137, 0.001); end
  def test_costs_j68; assert_in_epsilon(6.711674002478879, worksheet.costs_j68, 0.001); end
  def test_costs_j148; assert_in_epsilon(208.07666249756377, worksheet.costs_j148, 0.001); end
  def test_costs_k137; assert_in_epsilon(429.63550154077063, worksheet.costs_k137, 0.001); end
  def test_costs_k68; assert_in_epsilon(6.810634171835393, worksheet.costs_k68, 0.001); end
  def test_costs_k148; assert_in_epsilon(218.223067856303, worksheet.costs_k148, 0.001); end
  def test_costs_l137; assert_in_epsilon(452.70891873869033, worksheet.costs_l137, 0.001); end
  def test_costs_l68; assert_in_epsilon(7.229550739644989, worksheet.costs_l68, 0.001); end
  def test_costs_l148; assert_in_epsilon(229.96923473916766, worksheet.costs_l148, 0.001); end
  def test_costs_m137; assert_in_epsilon(475.669825801163, worksheet.costs_m137, 0.001); end
  def test_costs_m68; assert_in_epsilon(7.562966166900721, worksheet.costs_m68, 0.001); end
  def test_costs_m148; assert_in_epsilon(241.61639598403184, worksheet.costs_m148, 0.001); end
  def test_costs_n137; assert_in_epsilon(357.05246141199666, worksheet.costs_n137, 0.001); end
  def test_costs_n68; assert_in_epsilon(5.731619138317198, worksheet.costs_n68, 0.001); end
  def test_costs_n148; assert_in_epsilon(181.39204027515692, worksheet.costs_n148, 0.001); end
  def test_costs_o148; assert_in_epsilon(205.35935886951358, worksheet.costs_o148, 0.001); end
  def test_costs_p148; assert_in_epsilon(240.34610712618274, worksheet.costs_p148, 0.001); end
  def test_costs_q137; assert_in_epsilon(562.4728585042893, worksheet.costs_q137, 0.001); end
  def test_costs_q68; assert_in_epsilon(16.47676533047516, worksheet.costs_q68, 0.001); end
  def test_costs_q148; assert_in_epsilon(289.4748119173822, worksheet.costs_q148, 0.001); end
  def test_costs_r137; assert_in_epsilon(658.6258997763714, worksheet.costs_r137, 0.001); end
  def test_costs_r68; assert_in_epsilon(18.610714583600156, worksheet.costs_r68, 0.001); end
  def test_costs_r148; assert_in_epsilon(338.6183071799858, worksheet.costs_r148, 0.001); end
  def test_costs_s137; assert_in_epsilon(785.1153437777158, worksheet.costs_s137, 0.001); end
  def test_costs_s68; assert_in_epsilon(21.013799223623977, worksheet.costs_s68, 0.001); end
  def test_costs_s148; assert_in_epsilon(403.0645715006699, worksheet.costs_s148, 0.001); end
  def test_costs_t137; assert_in_epsilon(847.8181740526625, worksheet.costs_t137, 0.001); end
  def test_costs_t68; assert_in_epsilon(22.042211384856678, worksheet.costs_t68, 0.001); end
  def test_costs_t148; assert_in_epsilon(434.9301927187596, worksheet.costs_t148, 0.001); end
  def test_costs_u137; assert_in_epsilon(906.4796103157116, worksheet.costs_u137, 0.001); end
  def test_costs_u68; assert_in_epsilon(23.071723925841688, worksheet.costs_u68, 0.001); end
  def test_costs_u148; assert_in_epsilon(464.77566712077663, worksheet.costs_u148, 0.001); end
  def test_costs_v137; assert_in_epsilon(961.0555294665614, worksheet.costs_v137, 0.001); end
  def test_costs_v68; assert_in_epsilon(23.971626313954214, worksheet.costs_v68, 0.001); end
  def test_costs_v148; assert_in_epsilon(492.5135778902578, worksheet.costs_v148, 0.001); end
  def test_costs_w137; assert_in_epsilon(1014.6528050498783, worksheet.costs_w137, 0.001); end
  def test_costs_w68; assert_in_epsilon(24.862482884897005, worksheet.costs_w68, 0.001); end
  def test_costs_w148; assert_in_epsilon(519.7576439673877, worksheet.costs_w148, 0.001); end
  def test_costs_x137; assert_in_epsilon(1068.1825973265468, worksheet.costs_x137, 0.001); end
  def test_costs_x68; assert_in_epsilon(25.76750421788383, worksheet.costs_x68, 0.001); end
  def test_costs_x148; assert_in_epsilon(546.9750507722154, worksheet.costs_x148, 0.001); end
  def test_costs_y148; assert_in_epsilon(414.49510335484644, worksheet.costs_y148, 0.001); end
  def test_costs_z148; assert_in_epsilon(554.550002542891, worksheet.costs_z148, 0.001); end
  def test_costs_aa137; assert_in_epsilon(1192.2061811294443, worksheet.costs_aa137, 0.001); end
  def test_costs_aa68; assert_in_epsilon(764.2943681746849, worksheet.costs_aa68, 0.001); end
  def test_costs_aa148; assert_in_epsilon(978.2502746520646, worksheet.costs_aa148, 0.001); end
  def test_costs_ab137; assert_in_epsilon(1827.767409906579, worksheet.costs_ab137, 0.001); end
  def test_costs_ab68; assert_in_epsilon(1129.8886219420797, worksheet.costs_ab68, 0.001); end
  def test_costs_ab148; assert_in_epsilon(1478.8280159243293, worksheet.costs_ab148, 0.001); end
  def test_costs_ac137; assert_in_epsilon(2162.8524677065175, worksheet.costs_ac137, 0.001); end
  def test_costs_ac68; assert_in_epsilon(1371.266043463445, worksheet.costs_ac68, 0.001); end
  def test_costs_ac148; assert_in_epsilon(1767.0592555849812, worksheet.costs_ac148, 0.001); end
  def test_costs_ad137; assert_in_epsilon(2527.182580680945, worksheet.costs_ad137, 0.001); end
  def test_costs_ad68; assert_in_epsilon(1634.389666679065, worksheet.costs_ad68, 0.001); end
  def test_costs_ad148; assert_in_epsilon(2080.786123680005, worksheet.costs_ad148, 0.001); end
  def test_costs_ae137; assert_in_epsilon(2827.6653853083117, worksheet.costs_ae137, 0.001); end
  def test_costs_ae68; assert_in_epsilon(1850.4629734773312, worksheet.costs_ae68, 0.001); end
  def test_costs_ae148; assert_in_epsilon(2339.0641793928216, worksheet.costs_ae148, 0.001); end
  def test_costs_af137; assert_in_epsilon(3132.464898754207, worksheet.costs_af137, 0.001); end
  def test_costs_af68; assert_in_epsilon(2069.835731289292, worksheet.costs_af68, 0.001); end
  def test_costs_af148; assert_in_epsilon(2601.1503150217495, worksheet.costs_af148, 0.001); end
  def test_costs_ag137; assert_in_epsilon(3365.5550988107816, worksheet.costs_ag137, 0.001); end
  def test_costs_ag68; assert_in_epsilon(2236.3177494126126, worksheet.costs_ag68, 0.001); end
  def test_costs_ag148; assert_in_epsilon(2800.9364241116973, worksheet.costs_ag148, 0.001); end
  def test_costs_ah137; assert_in_epsilon(3460.4516225865586, worksheet.costs_ah137, 0.001); end
  def test_costs_ah68; assert_in_epsilon(2314.0577347496946, worksheet.costs_ah68, 0.001); end
  def test_costs_ah148; assert_in_epsilon(2887.254678668127, worksheet.costs_ah148, 0.001); end
  def test_costs_ai148; assert_in_epsilon(1943.0976966198516, worksheet.costs_ai148, 0.001); end
  def test_costs_aj148; assert_in_epsilon(950.2961156012982, worksheet.costs_aj148, 0.001); end
  def test_costs_ak137; assert_in_epsilon(2094.268387142155, worksheet.costs_ak137, 0.001); end
  def test_costs_ak68; assert_in_epsilon(786.1174187399815, worksheet.costs_ak68, 0.001); end
  def test_costs_ak148; assert_in_epsilon(1440.1929029410683, worksheet.costs_ak148, 0.001); end
  def test_costs_al137; assert_in_epsilon(2967.8699851301335, worksheet.costs_al137, 0.001); end
  def test_costs_al68; assert_in_epsilon(1156.3173527363886, worksheet.costs_al68, 0.001); end
  def test_costs_al148; assert_in_epsilon(2062.093668933261, worksheet.costs_al148, 0.001); end
  def test_costs_am137; assert_in_epsilon(3334.256331456504, worksheet.costs_am137, 0.001); end
  def test_costs_am68; assert_in_epsilon(1398.8746433960127, worksheet.costs_am68, 0.001); end
  def test_costs_am148; assert_in_epsilon(2366.565487426258, worksheet.costs_am148, 0.001); end
  def test_costs_an137; assert_in_epsilon(3784.4424057262563, worksheet.costs_an137, 0.001); end
  def test_costs_an68; assert_in_epsilon(1663.1435520664004, worksheet.costs_an68, 0.001); end
  def test_costs_an148; assert_in_epsilon(2723.7929788963283, worksheet.costs_an148, 0.001); end
  def test_costs_ao137; assert_in_epsilon(4163.780497164794, worksheet.costs_ao137, 0.001); end
  def test_costs_ao68; assert_in_epsilon(1880.3453315750082, worksheet.costs_ao68, 0.001); end
  def test_costs_ao148; assert_in_epsilon(3022.062914369901, worksheet.costs_ao148, 0.001); end
  def test_costs_ap137; assert_in_epsilon(4546.229346959459, worksheet.costs_ap137, 0.001); end
  def test_costs_ap68; assert_in_epsilon(2101.0369083428914, worksheet.costs_ap68, 0.001); end
  def test_costs_ap148; assert_in_epsilon(3323.633127651175, worksheet.costs_ap148, 0.001); end
  def test_costs_aq137; assert_in_epsilon(4855.877729661823, worksheet.costs_aq137, 0.001); end
  def test_costs_aq68; assert_in_epsilon(2268.7431984644104, worksheet.costs_aq68, 0.001); end
  def test_costs_aq148; assert_in_epsilon(3562.3104640631163, worksheet.costs_aq148, 0.001); end
  def test_costs_ar137; assert_in_epsilon(4885.686681325102, worksheet.costs_ar137, 0.001); end
  def test_costs_ar68; assert_in_epsilon(2345.556858105896, worksheet.costs_ar68, 0.001); end
  def test_costs_ar148; assert_in_epsilon(3615.621769715499, worksheet.costs_ar148, 0.001); end
  def test_costs_as148; assert_in_epsilon(2562.9521588442117, worksheet.costs_as148, 0.001); end
  def test_costs_at148; assert_in_epsilon(155.40000593222462, worksheet.costs_at148, 0.001); end
  def test_costs_au148; assert_in_epsilon(107.08894472659041, worksheet.costs_au148, 0.001); end
  def test_costs_av148; assert_in_epsilon(94.32214246109604, worksheet.costs_av148, 0.001); end
  def test_costs_aw148; assert_in_epsilon(47.02657165041909, worksheet.costs_aw148, 0.001); end
  def test_costs_ax148; assert_in_epsilon(30.929270020793112, worksheet.costs_ax148, 0.001); end
  def test_costs_ay148; assert_in_epsilon(20.141115873058666, worksheet.costs_ay148, 0.001); end
  def test_costs_az148; assert_in_epsilon(13.179204146678396, worksheet.costs_az148, 0.001); end
  def test_costs_ba148; assert_in_epsilon(8.59770265796983, worksheet.costs_ba148, 0.001); end
  def test_costs_bb148; assert_in_epsilon(4.007844097256921, worksheet.costs_bb148, 0.001); end
  def test_costs_bc148; assert_in_epsilon(480.6928015660871, worksheet.costs_bc148, 0.001); end
  def test_costs_bd148; assert_in_epsilon(240.34610712618274, worksheet.costs_bd148, 0.001); end
  def test_costs_be148; assert_in_epsilon(179.741083208041, worksheet.costs_be148, 0.001); end
  def test_costs_bf148; assert_in_epsilon(130.55201601123125, worksheet.costs_bf148, 0.001); end
  def test_costs_bg148; assert_in_epsilon(96.49045379964905, worksheet.costs_bg148, 0.001); end
  def test_costs_bh148; assert_in_epsilon(64.64960178295632, worksheet.costs_bh148, 0.001); end
  def test_costs_bi148; assert_in_epsilon(42.89693412532293, worksheet.costs_bi148, 0.001); end
  def test_costs_bj148; assert_in_epsilon(28.225240630072783, worksheet.costs_bj148, 0.001); end
  def test_costs_bk148; assert_in_epsilon(18.495109401987268, worksheet.costs_bk148, 0.001); end
  def test_costs_bl148; assert_in_epsilon(12.08537444784707, worksheet.costs_bl148, 0.001); end
  def test_costs_bm148; assert_in_epsilon(813.4819205332903, worksheet.costs_bm148, 0.001); end
  def test_costs_bn148; assert_in_epsilon(554.550002542891, worksheet.costs_bn148, 0.001); end
  def test_costs_bo148; assert_in_epsilon(607.4164548199417, worksheet.costs_bo148, 0.001); end
  def test_costs_bp148; assert_in_epsilon(570.1522177600134, worksheet.costs_bp148, 0.001); end
  def test_costs_bq148; assert_in_epsilon(423.0199365512369, worksheet.costs_bq148, 0.001); end
  def test_costs_br148; assert_in_epsilon(309.29559856609006, worksheet.costs_br148, 0.001); end
  def test_costs_bs148; assert_in_epsilon(215.88626323727567, worksheet.costs_bs148, 0.001); end
  def test_costs_bt148; assert_in_epsilon(149.06816147277377, worksheet.costs_bt148, 0.001); end
  def test_costs_bu148; assert_in_epsilon(99.6688094792258, worksheet.costs_bu148, 0.001); end
  def test_costs_bv148; assert_in_epsilon(63.79368468221763, worksheet.costs_bv148, 0.001); end
  def test_costs_bw148; assert_in_epsilon(2992.851129111666, worksheet.costs_bw148, 0.001); end
  def test_costs_bx148; assert_in_epsilon(950.2961156012982, worksheet.costs_bx148, 0.001); end
  def test_costs_by148; assert_in_epsilon(894.2464827545732, worksheet.costs_by148, 0.001); end
  def test_costs_bz148; assert_in_epsilon(795.0263762323408, worksheet.costs_bz148, 0.001); end
  def test_costs_ca148; assert_in_epsilon(566.536962001305, worksheet.costs_ca148, 0.001); end
  def test_costs_cb148; assert_in_epsilon(404.8744703698395, worksheet.costs_cb148, 0.001); end
  def test_costs_cc148; assert_in_epsilon(278.9243132356572, worksheet.costs_cc148, 0.001); end
  def test_costs_cd148; assert_in_epsilon(190.47260624952497, worksheet.costs_cd148, 0.001); end
  def test_costs_ce148; assert_in_epsilon(126.7616215391829, worksheet.costs_ce148, 0.001); end
  def test_costs_cf148; assert_in_epsilon(79.88690322732162, worksheet.costs_cf148, 0.001); end
  def test_costs_cg148; assert_in_epsilon(4287.025851211043, worksheet.costs_cg148, 0.001); end
  def test_costs_d149; assert_equal("Electricity (ex/im)ports", worksheet.costs_d149); end
  def test_costs_e149; assert_equal("MEUR", worksheet.costs_e149); end
  def test_costs_f149; assert_in_delta(0, (worksheet.costs_f149||0), 0.001); end
  def test_costs_g149; assert_in_delta(0, (worksheet.costs_g149||0), 0.001); end
  def test_costs_h149; assert_in_delta(0, (worksheet.costs_h149||0), 0.001); end
  def test_costs_i149; assert_in_delta(0, (worksheet.costs_i149||0), 0.001); end
  def test_costs_j149; assert_in_delta(0, (worksheet.costs_j149||0), 0.001); end
  def test_costs_k149; assert_in_delta(0, (worksheet.costs_k149||0), 0.001); end
  def test_costs_l149; assert_in_delta(0, (worksheet.costs_l149||0), 0.001); end
  def test_costs_m149; assert_in_delta(0, (worksheet.costs_m149||0), 0.001); end
  def test_costs_n149; assert_in_delta(0, (worksheet.costs_n149||0), 0.001); end
  def test_costs_o149; assert_in_delta(0, (worksheet.costs_o149||0), 0.001); end
  def test_costs_p149; assert_in_delta(0, (worksheet.costs_p149||0), 0.001); end
  def test_costs_q149; assert_in_delta(0, (worksheet.costs_q149||0), 0.001); end
  def test_costs_r149; assert_in_delta(0, (worksheet.costs_r149||0), 0.001); end
  def test_costs_s149; assert_in_delta(0, (worksheet.costs_s149||0), 0.001); end
  def test_costs_t149; assert_in_delta(0, (worksheet.costs_t149||0), 0.001); end
  def test_costs_u149; assert_in_delta(0, (worksheet.costs_u149||0), 0.001); end
  def test_costs_v149; assert_in_delta(0, (worksheet.costs_v149||0), 0.001); end
  def test_costs_w149; assert_in_delta(0, (worksheet.costs_w149||0), 0.001); end
  def test_costs_x149; assert_in_delta(0, (worksheet.costs_x149||0), 0.001); end
  def test_costs_y149; assert_in_delta(0, (worksheet.costs_y149||0), 0.001); end
  def test_costs_z149; assert_in_delta(0, (worksheet.costs_z149||0), 0.001); end
  def test_costs_aa149; assert_in_epsilon(25.59375, worksheet.costs_aa149, 0.001); end
  def test_costs_ab149; assert_in_epsilon(55.125, worksheet.costs_ab149, 0.001); end
  def test_costs_ac149; assert_in_epsilon(83.91796875000001, worksheet.costs_ac149, 0.001); end
  def test_costs_ad149; assert_in_epsilon(113.53125, worksheet.costs_ad149, 0.001); end
  def test_costs_ae149; assert_in_epsilon(139.04296875, worksheet.costs_ae149, 0.001); end
  def test_costs_af149; assert_in_epsilon(163.40625, worksheet.costs_af149, 0.001); end
  def test_costs_ag149; assert_in_epsilon(188.34375, worksheet.costs_ag149, 0.001); end
  def test_costs_ah149; assert_in_epsilon(212.625, worksheet.costs_ah149, 0.001); end
  def test_costs_ai149; assert_in_epsilon(109.06510416666667, worksheet.costs_ai149, 0.001); end
  def test_costs_aj149; assert_in_delta(0, (worksheet.costs_aj149||0), 0.001); end
  def test_costs_ak138; assert_in_epsilon(27.7265625, worksheet.costs_ak138, 0.001); end
  def test_costs_ak69; assert_in_epsilon(23.4609375, worksheet.costs_ak69, 0.001); end
  def test_costs_ak149; assert_in_epsilon(25.59375, worksheet.costs_ak149, 0.001); end
  def test_costs_al138; assert_in_epsilon(63.65625, worksheet.costs_al138, 0.001); end
  def test_costs_al69; assert_in_epsilon(46.59375, worksheet.costs_al69, 0.001); end
  def test_costs_al149; assert_in_epsilon(55.125, worksheet.costs_al149, 0.001); end
  def test_costs_am138; assert_in_epsilon(95.97656250000001, worksheet.costs_am138, 0.001); end
  def test_costs_am69; assert_in_epsilon(71.85937500000001, worksheet.costs_am69, 0.001); end
  def test_costs_am149; assert_in_epsilon(83.91796875000001, worksheet.costs_am149, 0.001); end
  def test_costs_an138; assert_in_epsilon(128.625, worksheet.costs_an138, 0.001); end
  def test_costs_an69; assert_in_epsilon(98.4375, worksheet.costs_an69, 0.001); end
  def test_costs_an149; assert_in_epsilon(113.53125, worksheet.costs_an149, 0.001); end
  def test_costs_ao138; assert_in_epsilon(157.5, worksheet.costs_ao138, 0.001); end
  def test_costs_ao69; assert_in_epsilon(120.5859375, worksheet.costs_ao69, 0.001); end
  def test_costs_ao149; assert_in_epsilon(139.04296875, worksheet.costs_ao149, 0.001); end
  def test_costs_ap138; assert_in_epsilon(185.0625, worksheet.costs_ap138, 0.001); end
  def test_costs_ap69; assert_in_epsilon(141.75, worksheet.costs_ap69, 0.001); end
  def test_costs_ap149; assert_in_epsilon(163.40625, worksheet.costs_ap149, 0.001); end
  def test_costs_aq138; assert_in_epsilon(213.609375, worksheet.costs_aq138, 0.001); end
  def test_costs_aq69; assert_in_epsilon(163.078125, worksheet.costs_aq69, 0.001); end
  def test_costs_aq149; assert_in_epsilon(188.34375, worksheet.costs_aq149, 0.001); end
  def test_costs_ar138; assert_in_epsilon(241.5, worksheet.costs_ar138, 0.001); end
  def test_costs_ar69; assert_in_epsilon(183.75, worksheet.costs_ar69, 0.001); end
  def test_costs_ar149; assert_in_epsilon(212.625, worksheet.costs_ar149, 0.001); end
  def test_costs_as149; assert_in_epsilon(109.06510416666667, worksheet.costs_as149, 0.001); end
  def test_costs_at149; assert_in_delta(0, (worksheet.costs_at149||0), 0.001); end
  def test_costs_au149; assert_in_delta(0, (worksheet.costs_au149||0), 0.001); end
  def test_costs_av149; assert_in_delta(0, (worksheet.costs_av149||0), 0.001); end
  def test_costs_aw149; assert_in_delta(0, (worksheet.costs_aw149||0), 0.001); end
  def test_costs_ax149; assert_in_delta(0, (worksheet.costs_ax149||0), 0.001); end
  def test_costs_ay149; assert_in_delta(0, (worksheet.costs_ay149||0), 0.001); end
  def test_costs_az149; assert_in_delta(0, (worksheet.costs_az149||0), 0.001); end
  def test_costs_ba149; assert_in_delta(0, (worksheet.costs_ba149||0), 0.001); end
  def test_costs_bb149; assert_in_delta(0, (worksheet.costs_bb149||0), 0.001); end
  def test_costs_bc149; assert_in_delta(0, (worksheet.costs_bc149||0), 0.001); end
  def test_costs_bd149; assert_in_delta(0, (worksheet.costs_bd149||0), 0.001); end
  def test_costs_be149; assert_in_delta(0, (worksheet.costs_be149||0), 0.001); end
  def test_costs_bf149; assert_in_delta(0, (worksheet.costs_bf149||0), 0.001); end
  def test_costs_bg149; assert_in_delta(0, (worksheet.costs_bg149||0), 0.001); end
  def test_costs_bh149; assert_in_delta(0, (worksheet.costs_bh149||0), 0.001); end
  def test_costs_bi149; assert_in_delta(0, (worksheet.costs_bi149||0), 0.001); end
  def test_costs_bj149; assert_in_delta(0, (worksheet.costs_bj149||0), 0.001); end
  def test_costs_bk149; assert_in_delta(0, (worksheet.costs_bk149||0), 0.001); end
  def test_costs_bl149; assert_in_delta(0, (worksheet.costs_bl149||0), 0.001); end
  def test_costs_bm149; assert_in_delta(0, (worksheet.costs_bm149||0), 0.001); end
  def test_costs_bn149; assert_in_delta(0, (worksheet.costs_bn149||0), 0.001); end
  def test_costs_bo149; assert_in_epsilon(15.891705112045248, worksheet.costs_bo149, 0.001); end
  def test_costs_bp149; assert_in_epsilon(21.253073829802922, worksheet.costs_bp149, 0.001); end
  def test_costs_bq149; assert_in_epsilon(20.089294517959914, worksheet.costs_bq149, 0.001); end
  def test_costs_br149; assert_in_epsilon(16.87569689411604, worksheet.costs_br149, 0.001); end
  def test_costs_bs149; assert_in_epsilon(12.833109590283573, worksheet.costs_bs149, 0.001); end
  def test_costs_bt149; assert_in_epsilon(9.364575787868977, worksheet.costs_bt149, 0.001); end
  def test_costs_bu149; assert_in_epsilon(6.702043350129369, worksheet.costs_bu149, 0.001); end
  def test_costs_bv149; assert_in_epsilon(4.697934098357258, worksheet.costs_bv149, 0.001); end
  def test_costs_bw149; assert_in_epsilon(107.7074331805633, worksheet.costs_bw149, 0.001); end
  def test_costs_bx149; assert_in_delta(0, (worksheet.costs_bx149||0), 0.001); end
  def test_costs_by149; assert_in_epsilon(15.891705112045248, worksheet.costs_by149, 0.001); end
  def test_costs_bz149; assert_in_epsilon(21.253073829802922, worksheet.costs_bz149, 0.001); end
  def test_costs_ca149; assert_in_epsilon(20.089294517959914, worksheet.costs_ca149, 0.001); end
  def test_costs_cb149; assert_in_epsilon(16.87569689411604, worksheet.costs_cb149, 0.001); end
  def test_costs_cc149; assert_in_epsilon(12.833109590283573, worksheet.costs_cc149, 0.001); end
  def test_costs_cd149; assert_in_epsilon(9.364575787868977, worksheet.costs_cd149, 0.001); end
  def test_costs_ce149; assert_in_epsilon(6.702043350129369, worksheet.costs_ce149, 0.001); end
  def test_costs_cf149; assert_in_epsilon(4.697934098357258, worksheet.costs_cf149, 0.001); end
  def test_costs_cg149; assert_in_epsilon(107.7074331805633, worksheet.costs_cg149, 0.001); end
  def test_costs_d150; assert_equal("Total", worksheet.costs_d150); end
  def test_costs_e150; assert_equal("MEUR", worksheet.costs_e150); end
  def test_costs_aj150; assert_in_epsilon(70114.31682299121, worksheet.costs_aj150, 0.001); end
  def test_costs_ak139; assert_in_epsilon(83308.16408885644, worksheet.costs_ak139, 0.001); end
  def test_costs_ak70; assert_in_epsilon(60957.91546141676, worksheet.costs_ak70, 0.001); end
  def test_costs_ak150; assert_in_epsilon(72133.0397751366, worksheet.costs_ak150, 0.001); end
  def test_costs_al139; assert_in_epsilon(89064.78198249602, worksheet.costs_al139, 0.001); end
  def test_costs_al70; assert_in_epsilon(63665.20002409671, worksheet.costs_al70, 0.001); end
  def test_costs_al150; assert_in_epsilon(76364.99100329637, worksheet.costs_al150, 0.001); end
  def test_costs_am139; assert_in_epsilon(92169.32035606378, worksheet.costs_am139, 0.001); end
  def test_costs_am70; assert_in_epsilon(64586.95083747842, worksheet.costs_am70, 0.001); end
  def test_costs_am150; assert_in_epsilon(78378.1355967711, worksheet.costs_am150, 0.001); end
  def test_costs_an139; assert_in_epsilon(91108.85372055817, worksheet.costs_an139, 0.001); end
  def test_costs_an70; assert_in_epsilon(62046.35178682341, worksheet.costs_an70, 0.001); end
  def test_costs_an150; assert_in_epsilon(76577.6027536908, worksheet.costs_an150, 0.001); end
  def test_costs_ao139; assert_in_epsilon(88112.90403333292, worksheet.costs_ao139, 0.001); end
  def test_costs_ao70; assert_in_epsilon(58206.90598845556, worksheet.costs_ao70, 0.001); end
  def test_costs_ao150; assert_in_epsilon(73159.90501089423, worksheet.costs_ao150, 0.001); end
  def test_costs_ap139; assert_in_epsilon(87406.99797281258, worksheet.costs_ap139, 0.001); end
  def test_costs_ap70; assert_in_epsilon(56008.235101180784, worksheet.costs_ap70, 0.001); end
  def test_costs_ap150; assert_in_epsilon(71707.61653699668, worksheet.costs_ap150, 0.001); end
  def test_costs_aq139; assert_in_epsilon(85754.82488126346, worksheet.costs_aq139, 0.001); end
  def test_costs_aq70; assert_in_epsilon(53037.84208590242, worksheet.costs_aq70, 0.001); end
  def test_costs_aq150; assert_in_epsilon(69396.33348358294, worksheet.costs_aq150, 0.001); end
  def test_costs_ar139; assert_in_epsilon(86401.97407096808, worksheet.costs_ar139, 0.001); end
  def test_costs_ar70; assert_in_epsilon(51855.96606954433, worksheet.costs_ar70, 0.001); end
  def test_costs_ar150; assert_in_epsilon(69128.97007025621, worksheet.costs_ar150, 0.001); end
  def test_costs_as150; assert_in_epsilon(72995.65678373512, worksheet.costs_as150, 0.001); end
  def test_costs_bx150; assert_in_epsilon(70114.31682299121, worksheet.costs_bx150, 0.001); end
  def test_costs_by150; assert_in_epsilon(44788.94249345646, worksheet.costs_by150, 0.001); end
  def test_costs_bz150; assert_in_epsilon(29442.00982866746, worksheet.costs_bz150, 0.001); end
  def test_costs_ca150; assert_in_epsilon(18763.10250624521, worksheet.costs_ca150, 0.001); end
  def test_costs_cb150; assert_in_epsilon(11382.772698700239, worksheet.costs_cb150, 0.001); end
  def test_costs_cc150; assert_in_epsilon(6752.366459519673, worksheet.costs_cc150, 0.001); end
  def test_costs_cd150; assert_in_epsilon(4109.459764410187, worksheet.costs_cd150, 0.001); end
  def test_costs_ce150; assert_in_epsilon(2469.406260345815, worksheet.costs_ce150, 0.001); end
  def test_costs_cf150; assert_in_epsilon(1527.399626936508, worksheet.costs_cf150, 0.001); end
  def test_costs_cg150; assert_in_epsilon(189349.77646127276, worksheet.costs_cg150, 0.001); end
  def test_costs_b152; assert_equal("ELECTRICITY", worksheet.costs_b152); end
  def test_costs_f152; assert_equal("CAPITAL COSTS - AVERAGE", worksheet.costs_f152); end
  def test_costs_p152; assert_equal("O&M COSTS - AVERAGE", worksheet.costs_p152); end
  def test_costs_z152; assert_equal("FUEL COSTS - AVERAGE", worksheet.costs_z152); end
  def test_costs_aj152; assert_equal("TOTAL COSTS - AVERAGE", worksheet.costs_aj152); end
  def test_costs_b153; assert_equal("I.a", worksheet.costs_b153); end
  def test_costs_c153; assert_equal("Biomass and gas power stations", worksheet.costs_c153); end
  def test_costs_e153; assert_equal("MEUR", worksheet.costs_e153); end
  def test_costs_f153; assert_in_delta(0, (worksheet.costs_f153||0), 0.001); end
  def test_costs_o153; assert_in_epsilon(497.80185792237313, worksheet.costs_o153, 0.001); end
  def test_costs_y153; assert_in_epsilon(180.3429314037398, worksheet.costs_y153, 0.001); end
  def test_costs_ai153; assert_in_epsilon(1989.9240147133528, worksheet.costs_ai153, 0.001); end
  def test_costs_b154; assert_equal("I.b", worksheet.costs_b154); end
  def test_costs_c154; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c154); end
  def test_costs_e154; assert_equal("MEUR", worksheet.costs_e154); end
  def test_costs_f154; assert_in_delta(0, (worksheet.costs_f154||0), 0.001); end
  def test_costs_o154; assert_in_delta(0, (worksheet.costs_o154||0), 0.001); end
  def test_costs_p154; assert_in_delta(0, (worksheet.costs_p154||0), 0.001); end
  def test_costs_y154; assert_in_delta(0, (worksheet.costs_y154||0), 0.001); end
  def test_costs_ai154; assert_in_delta(0, (worksheet.costs_ai154||0), 0.001); end
  def test_costs_b155; assert_equal("II.a", worksheet.costs_b155); end
  def test_costs_c155; assert_equal("Nuclear power", worksheet.costs_c155); end
  def test_costs_e155; assert_equal("MEUR", worksheet.costs_e155); end
  def test_costs_f155; assert_in_delta(0, (worksheet.costs_f155||0), 0.001); end
  def test_costs_o155; assert_in_delta(0, (worksheet.costs_o155||0), 0.001); end
  def test_costs_y155; assert_in_epsilon(184.97777777777776, worksheet.costs_y155, 0.001); end
  def test_costs_ai155; assert_in_epsilon(121.67850060799998, worksheet.costs_ai155, 0.001); end
  def test_costs_b156; assert_equal("III.a.1", worksheet.costs_b156); end
  def test_costs_c156; assert_equal("Onshore wind", worksheet.costs_c156); end
  def test_costs_e156; assert_equal("MEUR", worksheet.costs_e156); end
  def test_costs_f7; assert_in_epsilon(331.4210502283105, worksheet.costs_f7, 0.001); end
  def test_costs_f76; assert_in_epsilon(395.15586757990866, worksheet.costs_f76, 0.001); end
  def test_costs_f156; assert_in_epsilon(363.2884589041096, worksheet.costs_f156, 0.001); end
  def test_costs_g7; assert_in_epsilon(305.9271232876712, worksheet.costs_g7, 0.001); end
  def test_costs_g76; assert_in_epsilon(372.8486815068493, worksheet.costs_g76, 0.001); end
  def test_costs_g156; assert_in_epsilon(339.38790239726023, worksheet.costs_g156, 0.001); end
  def test_costs_h7; assert_in_epsilon(287.67159817351603, worksheet.costs_h7, 0.001); end
  def test_costs_h76; assert_in_epsilon(359.58949771689504, worksheet.costs_h76, 0.001); end
  def test_costs_h156; assert_in_epsilon(323.63054794520554, worksheet.costs_h156, 0.001); end
  def test_costs_i7; assert_in_epsilon(271.51963470319635, worksheet.costs_i7, 0.001); end
  def test_costs_i76; assert_in_epsilon(349.5815296803653, worksheet.costs_i76, 0.001); end
  def test_costs_i156; assert_in_epsilon(310.5505821917808, worksheet.costs_i156, 0.001); end
  def test_costs_j7; assert_in_epsilon(261.00000000000006, worksheet.costs_j7, 0.001); end
  def test_costs_j76; assert_in_epsilon(348.00000000000006, worksheet.costs_j76, 0.001); end
  def test_costs_j156; assert_in_epsilon(304.50000000000006, worksheet.costs_j156, 0.001); end
  def test_costs_k7; assert_in_epsilon(263.06250000000006, worksheet.costs_k7, 0.001); end
  def test_costs_k76; assert_in_epsilon(346.93750000000006, worksheet.costs_k76, 0.001); end
  def test_costs_k156; assert_in_epsilon(305.00000000000006, worksheet.costs_k156, 0.001); end
  def test_costs_l7; assert_in_epsilon(255.75000000000006, worksheet.costs_l7, 0.001); end
  def test_costs_l76; assert_in_epsilon(333.25000000000006, worksheet.costs_l76, 0.001); end
  def test_costs_l156; assert_in_epsilon(294.50000000000006, worksheet.costs_l156, 0.001); end
  def test_costs_m7; assert_in_epsilon(251.99999999999997, worksheet.costs_m7, 0.001); end
  def test_costs_m76; assert_in_epsilon(323.99999999999994, worksheet.costs_m76, 0.001); end
  def test_costs_m156; assert_in_epsilon(287.99999999999994, worksheet.costs_m156, 0.001); end
  def test_costs_n7; assert_in_epsilon(247.49999999999997, worksheet.costs_n7, 0.001); end
  def test_costs_n76; assert_in_epsilon(313.49999999999994, worksheet.costs_n76, 0.001); end
  def test_costs_n156; assert_in_epsilon(280.49999999999994, worksheet.costs_n156, 0.001); end
  def test_costs_o156; assert_in_epsilon(312.1508323820396, worksheet.costs_o156, 0.001); end
  def test_costs_p156; assert_in_epsilon(21.018749999999997, worksheet.costs_p156, 0.001); end
  def test_costs_q7; assert_in_epsilon(55.94089041095889, worksheet.costs_q7, 0.001); end
  def test_costs_q76; assert_in_epsilon(68.17796018835615, worksheet.costs_q76, 0.001); end
  def test_costs_q156; assert_in_epsilon(62.05942529965752, worksheet.costs_q156, 0.001); end
  def test_costs_r7; assert_in_epsilon(86.33329908675796, worksheet.costs_r7, 0.001); end
  def test_costs_r76; assert_in_epsilon(107.91662385844744, worksheet.costs_r76, 0.001); end
  def test_costs_r156; assert_in_epsilon(97.1249614726027, worksheet.costs_r156, 0.001); end
  def test_costs_s7; assert_in_epsilon(111.17477168949769, worksheet.costs_s7, 0.001); end
  def test_costs_s76; assert_in_epsilon(143.1375185502283, worksheet.costs_s76, 0.001); end
  def test_costs_s156; assert_in_epsilon(127.156145119863, worksheet.costs_s156, 0.001); end
  def test_costs_t7; assert_in_epsilon(130.6032534246575, worksheet.costs_t7, 0.001); end
  def test_costs_t76; assert_in_epsilon(174.13767123287667, worksheet.costs_t76, 0.001); end
  def test_costs_t156; assert_in_epsilon(152.37046232876708, worksheet.costs_t156, 0.001); end
  def test_costs_u7; assert_in_epsilon(149.89925085616437, worksheet.costs_u7, 0.001); end
  def test_costs_u76; assert_in_epsilon(197.69321489726028, worksheet.costs_u76, 0.001); end
  def test_costs_u156; assert_in_epsilon(173.79623287671234, worksheet.costs_u156, 0.001); end
  def test_costs_v7; assert_in_epsilon(148.54440496575342, worksheet.costs_v7, 0.001); end
  def test_costs_v76; assert_in_epsilon(193.55786101598176, worksheet.costs_v76, 0.001); end
  def test_costs_v156; assert_in_epsilon(171.0511329908676, worksheet.costs_v156, 0.001); end
  def test_costs_w7; assert_in_epsilon(147.21242722602736, worksheet.costs_w7, 0.001); end
  def test_costs_w76; assert_in_epsilon(189.2731207191781, worksheet.costs_w76, 0.001); end
  def test_costs_w156; assert_in_epsilon(168.24277397260272, worksheet.costs_w156, 0.001); end
  def test_costs_x7; assert_in_epsilon(145.68484589041094, worksheet.costs_x7, 0.001); end
  def test_costs_x76; assert_in_epsilon(184.53413812785388, worksheet.costs_x76, 0.001); end
  def test_costs_x156; assert_in_epsilon(165.1094920091324, worksheet.costs_x156, 0.001); end
  def test_costs_y156; assert_in_epsilon(126.43659734113392, worksheet.costs_y156, 0.001); end
  def test_costs_z156; assert_in_delta(0, (worksheet.costs_z156||0), 0.001); end
  def test_costs_aa7; assert_in_delta(0, (worksheet.costs_aa7||0), 0.001); end
  def test_costs_aa76; assert_in_delta(0, (worksheet.costs_aa76||0), 0.001); end
  def test_costs_aa156; assert_in_delta(0, (worksheet.costs_aa156||0), 0.001); end
  def test_costs_ab7; assert_in_delta(0, (worksheet.costs_ab7||0), 0.001); end
  def test_costs_ab76; assert_in_delta(0, (worksheet.costs_ab76||0), 0.001); end
  def test_costs_ab156; assert_in_delta(0, (worksheet.costs_ab156||0), 0.001); end
  def test_costs_ac7; assert_in_delta(0, (worksheet.costs_ac7||0), 0.001); end
  def test_costs_ac76; assert_in_delta(0, (worksheet.costs_ac76||0), 0.001); end
  def test_costs_ac156; assert_in_delta(0, (worksheet.costs_ac156||0), 0.001); end
  def test_costs_ad7; assert_in_delta(0, (worksheet.costs_ad7||0), 0.001); end
  def test_costs_ad76; assert_in_delta(0, (worksheet.costs_ad76||0), 0.001); end
  def test_costs_ad156; assert_in_delta(0, (worksheet.costs_ad156||0), 0.001); end
  def test_costs_ae7; assert_in_delta(0, (worksheet.costs_ae7||0), 0.001); end
  def test_costs_ae76; assert_in_delta(0, (worksheet.costs_ae76||0), 0.001); end
  def test_costs_ae156; assert_in_delta(0, (worksheet.costs_ae156||0), 0.001); end
  def test_costs_af7; assert_in_delta(0, (worksheet.costs_af7||0), 0.001); end
  def test_costs_af76; assert_in_delta(0, (worksheet.costs_af76||0), 0.001); end
  def test_costs_af156; assert_in_delta(0, (worksheet.costs_af156||0), 0.001); end
  def test_costs_ag7; assert_in_delta(0, (worksheet.costs_ag7||0), 0.001); end
  def test_costs_ag76; assert_in_delta(0, (worksheet.costs_ag76||0), 0.001); end
  def test_costs_ag156; assert_in_delta(0, (worksheet.costs_ag156||0), 0.001); end
  def test_costs_ah7; assert_in_delta(0, (worksheet.costs_ah7||0), 0.001); end
  def test_costs_ah76; assert_in_delta(0, (worksheet.costs_ah76||0), 0.001); end
  def test_costs_ah156; assert_in_delta(0, (worksheet.costs_ah156||0), 0.001); end
  def test_costs_ai156; assert_in_delta(0, (worksheet.costs_ai156||0), 0.001); end
  def test_costs_b157; assert_equal("III.a.2", worksheet.costs_b157); end
  def test_costs_c157; assert_equal("Offshore wind", worksheet.costs_c157); end
  def test_costs_e157; assert_equal("MEUR", worksheet.costs_e157); end
  def test_costs_f8; assert_in_epsilon(482.79600000000005, worksheet.costs_f8, 0.001); end
  def test_costs_f77; assert_in_epsilon(509.61800000000005, worksheet.costs_f77, 0.001); end
  def test_costs_f157; assert_in_epsilon(496.20700000000005, worksheet.costs_f157, 0.001); end
  def test_costs_g8; assert_in_epsilon(424.16325, worksheet.costs_g8, 0.001); end
  def test_costs_g77; assert_in_epsilon(474.65887499999997, worksheet.costs_g77, 0.001); end
  def test_costs_g157; assert_in_epsilon(449.41106249999996, worksheet.costs_g157, 0.001); end
  def test_costs_h8; assert_in_epsilon(393.00000000000006, worksheet.costs_h8, 0.001); end
  def test_costs_h77; assert_in_epsilon(473.0555555555556, worksheet.costs_h77, 0.001); end
  def test_costs_h157; assert_in_epsilon(433.0277777777778, worksheet.costs_h157, 0.001); end
  def test_costs_i8; assert_in_epsilon(382.5, worksheet.costs_i8, 0.001); end
  def test_costs_i77; assert_in_epsilon(505.75000000000006, worksheet.costs_i77, 0.001); end
  def test_costs_i157; assert_in_epsilon(444.125, worksheet.costs_i157, 0.001); end
  def test_costs_j8; assert_in_epsilon(351, worksheet.costs_j8, 0.001); end
  def test_costs_j77; assert_in_epsilon(526.5, worksheet.costs_j77, 0.001); end
  def test_costs_j157; assert_in_epsilon(438.75, worksheet.costs_j157, 0.001); end
  def test_costs_k8; assert_in_epsilon(376.75000000000006, worksheet.costs_k8, 0.001); end
  def test_costs_k77; assert_in_epsilon(563.7500000000001, worksheet.costs_k77, 0.001); end
  def test_costs_k157; assert_in_epsilon(470.2500000000001, worksheet.costs_k157, 0.001); end
  def test_costs_l8; assert_in_epsilon(398.125, worksheet.costs_l8, 0.001); end
  def test_costs_l77; assert_in_epsilon(594.125, worksheet.costs_l77, 0.001); end
  def test_costs_l157; assert_in_epsilon(496.125, worksheet.costs_l157, 0.001); end
  def test_costs_m8; assert_in_epsilon(415.125, worksheet.costs_m8, 0.001); end
  def test_costs_m77; assert_in_epsilon(617.625, worksheet.costs_m77, 0.001); end
  def test_costs_m157; assert_in_epsilon(516.375, worksheet.costs_m157, 0.001); end
  def test_costs_n8; assert_in_epsilon(420.50000000000006, worksheet.costs_n8, 0.001); end
  def test_costs_n77; assert_in_epsilon(623.5000000000001, worksheet.costs_n77, 0.001); end
  def test_costs_n157; assert_in_epsilon(522.0000000000001, worksheet.costs_n157, 0.001); end
  def test_costs_o157; assert_in_epsilon(474.03009336419757, worksheet.costs_o157, 0.001); end
  def test_costs_p157; assert_in_epsilon(19.424999999999997, worksheet.costs_p157, 0.001); end
  def test_costs_q8; assert_in_epsilon(69.34331249999998, worksheet.costs_q8, 0.001); end
  def test_costs_q77; assert_in_epsilon(77.59846875000001, worksheet.costs_q77, 0.001); end
  def test_costs_q157; assert_in_epsilon(73.470890625, worksheet.costs_q157, 0.001); end
  def test_costs_r8; assert_in_epsilon(104.8831875, worksheet.costs_r8, 0.001); end
  def test_costs_r77; assert_in_epsilon(126.24828124999998, worksheet.costs_r77, 0.001); end
  def test_costs_r157; assert_in_epsilon(115.56573437499999, worksheet.costs_r157, 0.001); end
  def test_costs_s8; assert_in_epsilon(128.34015625, worksheet.costs_s8, 0.001); end
  def test_costs_s77; assert_in_epsilon(169.6942065972222, worksheet.costs_s77, 0.001); end
  def test_costs_s157; assert_in_epsilon(149.0171814236111, worksheet.costs_s157, 0.001); end
  def test_costs_t8; assert_in_epsilon(140.92212499999997, worksheet.costs_t8, 0.001); end
  def test_costs_t77; assert_in_epsilon(211.38318750000002, worksheet.costs_t77, 0.001); end
  def test_costs_t157; assert_in_epsilon(176.15265625, worksheet.costs_t157, 0.001); end
  def test_costs_u8; assert_in_epsilon(167.08446267361109, worksheet.costs_u8, 0.001); end
  def test_costs_u77; assert_in_epsilon(250.01689670138887, worksheet.costs_u77, 0.001); end
  def test_costs_u157; assert_in_epsilon(208.55067968749998, worksheet.costs_u157, 0.001); end
  def test_costs_v8; assert_in_epsilon(175.9937065972222, worksheet.costs_v8, 0.001); end
  def test_costs_v77; assert_in_epsilon(262.6367621527778, worksheet.costs_v77, 0.001); end
  def test_costs_v157; assert_in_epsilon(219.315234375, worksheet.costs_v157, 0.001); end
  def test_costs_w8; assert_in_epsilon(187.72405208333333, worksheet.costs_w8, 0.001); end
  def test_costs_w77; assert_in_epsilon(279.2967604166667, worksheet.costs_w77, 0.001); end
  def test_costs_w157; assert_in_epsilon(233.51040625000002, worksheet.costs_w157, 0.001); end
  def test_costs_x8; assert_in_epsilon(199.596125, worksheet.costs_x8, 0.001); end
  def test_costs_x77; assert_in_epsilon(295.952875, worksheet.costs_x77, 0.001); end
  def test_costs_x157; assert_in_epsilon(247.7745, worksheet.costs_x157, 0.001); end
  def test_costs_y157; assert_in_epsilon(160.30914255401234, worksheet.costs_y157, 0.001); end
  def test_costs_z157; assert_in_delta(0, (worksheet.costs_z157||0), 0.001); end
  def test_costs_aa8; assert_in_delta(0, (worksheet.costs_aa8||0), 0.001); end
  def test_costs_aa77; assert_in_delta(0, (worksheet.costs_aa77||0), 0.001); end
  def test_costs_aa157; assert_in_delta(0, (worksheet.costs_aa157||0), 0.001); end
  def test_costs_ab8; assert_in_delta(0, (worksheet.costs_ab8||0), 0.001); end
  def test_costs_ab77; assert_in_delta(0, (worksheet.costs_ab77||0), 0.001); end
  def test_costs_ab157; assert_in_delta(0, (worksheet.costs_ab157||0), 0.001); end
  def test_costs_ac8; assert_in_delta(0, (worksheet.costs_ac8||0), 0.001); end
  def test_costs_ac77; assert_in_delta(0, (worksheet.costs_ac77||0), 0.001); end
  def test_costs_ac157; assert_in_delta(0, (worksheet.costs_ac157||0), 0.001); end
  def test_costs_ad8; assert_in_delta(0, (worksheet.costs_ad8||0), 0.001); end
  def test_costs_ad77; assert_in_delta(0, (worksheet.costs_ad77||0), 0.001); end
  def test_costs_ad157; assert_in_delta(0, (worksheet.costs_ad157||0), 0.001); end
  def test_costs_ae8; assert_in_delta(0, (worksheet.costs_ae8||0), 0.001); end
  def test_costs_ae77; assert_in_delta(0, (worksheet.costs_ae77||0), 0.001); end
  def test_costs_ae157; assert_in_delta(0, (worksheet.costs_ae157||0), 0.001); end
  def test_costs_af8; assert_in_delta(0, (worksheet.costs_af8||0), 0.001); end
  def test_costs_af77; assert_in_delta(0, (worksheet.costs_af77||0), 0.001); end
  def test_costs_af157; assert_in_delta(0, (worksheet.costs_af157||0), 0.001); end
  def test_costs_ag8; assert_in_delta(0, (worksheet.costs_ag8||0), 0.001); end
  def test_costs_ag77; assert_in_delta(0, (worksheet.costs_ag77||0), 0.001); end
  def test_costs_ag157; assert_in_delta(0, (worksheet.costs_ag157||0), 0.001); end
  def test_costs_ah8; assert_in_delta(0, (worksheet.costs_ah8||0), 0.001); end
  def test_costs_ah77; assert_in_delta(0, (worksheet.costs_ah77||0), 0.001); end
  def test_costs_ah157; assert_in_delta(0, (worksheet.costs_ah157||0), 0.001); end
  def test_costs_ai157; assert_in_delta(0, (worksheet.costs_ai157||0), 0.001); end
  def test_costs_b158; assert_equal("III.b", worksheet.costs_b158); end
  def test_costs_c158; assert_equal("Hydroelectric power stations", worksheet.costs_c158); end
  def test_costs_e158; assert_equal("MEUR", worksheet.costs_e158); end
  def test_costs_f158; assert_in_delta(0, (worksheet.costs_f158||0), 0.001); end
  def test_costs_g9; assert_in_delta(0.5851492518731249, worksheet.costs_g9, 0.001); end
  def test_costs_g78; assert_in_delta(0.7801990024975001, worksheet.costs_g78, 0.001); end
  def test_costs_g158; assert_in_delta(0.6826741271853125, worksheet.costs_g158, 0.001); end
  def test_costs_h9; assert_in_delta(0.2853330391397317, worksheet.costs_h9, 0.001); end
  def test_costs_h78; assert_in_delta(0.38044405218630883, worksheet.costs_h78, 0.001); end
  def test_costs_h158; assert_in_delta(0.3328885456630203, worksheet.costs_h158, 0.001); end
  def test_costs_i9; assert_in_delta(0.5565413812909968, worksheet.costs_i9, 0.001); end
  def test_costs_i78; assert_in_delta(0.7420551750546626, worksheet.costs_i78, 0.001); end
  def test_costs_i158; assert_in_delta(0.6492982781728297, worksheet.costs_i158, 0.001); end
  def test_costs_j9; assert_in_delta(0.5427662881647707, worksheet.costs_j9, 0.001); end
  def test_costs_j78; assert_in_delta(0.7236883842196944, worksheet.costs_j78, 0.001); end
  def test_costs_j158; assert_in_delta(0.6332273361922325, worksheet.costs_j158, 0.001); end
  def test_costs_k9; assert_in_delta(0.26466607288463295, worksheet.costs_k9, 0.001); end
  def test_costs_k78; assert_in_delta(0.3528880971795107, worksheet.costs_k78, 0.001); end
  def test_costs_k158; assert_in_delta(0.3087770850320718, worksheet.costs_k158, 0.001); end
  def test_costs_l9; assert_in_delta(0.5162305151488179, worksheet.costs_l9, 0.001); end
  def test_costs_l78; assert_in_delta(0.6883073535317574, worksheet.costs_l78, 0.001); end
  def test_costs_l158; assert_in_delta(0.6022689343402876, worksheet.costs_l158, 0.001); end
  def test_costs_m9; assert_in_delta(0.5034531662223479, worksheet.costs_m9, 0.001); end
  def test_costs_m78; assert_in_delta(0.671270888296464, worksheet.costs_m78, 0.001); end
  def test_costs_m158; assert_in_delta(0.587362027259406, worksheet.costs_m158, 0.001); end
  def test_costs_n9; assert_in_delta(0.24549603630680253, worksheet.costs_n9, 0.001); end
  def test_costs_n78; assert_in_delta(0.3273280484090701, worksheet.costs_n78, 0.001); end
  def test_costs_n158; assert_in_delta(0.2864120423579363, worksheet.costs_n158, 0.001); end
  def test_costs_o158; assert_in_delta(0.45365648624478844, worksheet.costs_o158, 0.001); end
  def test_costs_p9; assert_in_epsilon(8.25, worksheet.costs_p9, 0.001); end
  def test_costs_p78; assert_in_epsilon(11, worksheet.costs_p78, 0.001); end
  def test_costs_p158; assert_in_epsilon(9.625, worksheet.costs_p158, 0.001); end
  def test_costs_q9; assert_in_epsilon(8.118945869739612, worksheet.costs_q9, 0.001); end
  def test_costs_q78; assert_in_epsilon(10.825261159652815, worksheet.costs_q78, 0.001); end
  def test_costs_q158; assert_in_epsilon(9.472103514696213, worksheet.costs_q158, 0.001); end
  def test_costs_r9; assert_in_epsilon(7.953658466020019, worksheet.costs_r9, 0.001); end
  def test_costs_r78; assert_in_epsilon(10.60487795469336, worksheet.costs_r78, 0.001); end
  def test_costs_r158; assert_in_epsilon(9.279268210356689, worksheet.costs_r158, 0.001); end
  def test_costs_s9; assert_in_epsilon(7.826363174404642, worksheet.costs_s9, 0.001); end
  def test_costs_s78; assert_in_epsilon(10.435150899206192, worksheet.costs_s78, 0.001); end
  def test_costs_s158; assert_in_epsilon(9.130757036805417, worksheet.costs_s158, 0.001); end
  def test_costs_t9; assert_in_epsilon(7.700496713337684, worksheet.costs_t9, 0.001); end
  def test_costs_t78; assert_in_epsilon(10.267328951116914, worksheet.costs_t78, 0.001); end
  def test_costs_t158; assert_in_epsilon(8.983912832227299, worksheet.costs_t158, 0.001); end
  def test_costs_u9; assert_in_epsilon(7.542983077212252, worksheet.costs_u9, 0.001); end
  def test_costs_u78; assert_in_epsilon(10.05731076961634, worksheet.costs_u78, 0.001); end
  def test_costs_u158; assert_in_epsilon(8.800146923414296, worksheet.costs_u158, 0.001); end
  def test_costs_v9; assert_in_epsilon(7.420813655264258, worksheet.costs_v9, 0.001); end
  def test_costs_v78; assert_in_epsilon(9.894418207019012, worksheet.costs_v78, 0.001); end
  def test_costs_v158; assert_in_epsilon(8.657615931141635, worksheet.costs_v158, 0.001); end
  def test_costs_w9; assert_in_epsilon(7.300070910224045, worksheet.costs_w9, 0.001); end
  def test_costs_w78; assert_in_epsilon(9.733427880298729, worksheet.costs_w78, 0.001); end
  def test_costs_w158; assert_in_epsilon(8.516749395261387, worksheet.costs_w158, 0.001); end
  def test_costs_x9; assert_in_epsilon(7.150072057435623, worksheet.costs_x9, 0.001); end
  def test_costs_x78; assert_in_epsilon(9.533429409914163, worksheet.costs_x78, 0.001); end
  def test_costs_x158; assert_in_epsilon(8.341750733674893, worksheet.costs_x158, 0.001); end
  def test_costs_y158; assert_in_epsilon(8.97858939750865, worksheet.costs_y158, 0.001); end
  def test_costs_z9; assert_in_delta(0, (worksheet.costs_z9||0), 0.001); end
  def test_costs_z78; assert_in_delta(0, (worksheet.costs_z78||0), 0.001); end
  def test_costs_z158; assert_in_delta(0, (worksheet.costs_z158||0), 0.001); end
  def test_costs_aa9; assert_in_delta(0, (worksheet.costs_aa9||0), 0.001); end
  def test_costs_aa78; assert_in_delta(0, (worksheet.costs_aa78||0), 0.001); end
  def test_costs_aa158; assert_in_delta(0, (worksheet.costs_aa158||0), 0.001); end
  def test_costs_ab9; assert_in_delta(0, (worksheet.costs_ab9||0), 0.001); end
  def test_costs_ab78; assert_in_delta(0, (worksheet.costs_ab78||0), 0.001); end
  def test_costs_ab158; assert_in_delta(0, (worksheet.costs_ab158||0), 0.001); end
  def test_costs_ac9; assert_in_delta(0, (worksheet.costs_ac9||0), 0.001); end
  def test_costs_ac78; assert_in_delta(0, (worksheet.costs_ac78||0), 0.001); end
  def test_costs_ac158; assert_in_delta(0, (worksheet.costs_ac158||0), 0.001); end
  def test_costs_ad9; assert_in_delta(0, (worksheet.costs_ad9||0), 0.001); end
  def test_costs_ad78; assert_in_delta(0, (worksheet.costs_ad78||0), 0.001); end
  def test_costs_ad158; assert_in_delta(0, (worksheet.costs_ad158||0), 0.001); end
  def test_costs_ae9; assert_in_delta(0, (worksheet.costs_ae9||0), 0.001); end
  def test_costs_ae78; assert_in_delta(0, (worksheet.costs_ae78||0), 0.001); end
  def test_costs_ae158; assert_in_delta(0, (worksheet.costs_ae158||0), 0.001); end
  def test_costs_af9; assert_in_delta(0, (worksheet.costs_af9||0), 0.001); end
  def test_costs_af78; assert_in_delta(0, (worksheet.costs_af78||0), 0.001); end
  def test_costs_af158; assert_in_delta(0, (worksheet.costs_af158||0), 0.001); end
  def test_costs_ag9; assert_in_delta(0, (worksheet.costs_ag9||0), 0.001); end
  def test_costs_ag78; assert_in_delta(0, (worksheet.costs_ag78||0), 0.001); end
  def test_costs_ag158; assert_in_delta(0, (worksheet.costs_ag158||0), 0.001); end
  def test_costs_ah9; assert_in_delta(0, (worksheet.costs_ah9||0), 0.001); end
  def test_costs_ah78; assert_in_delta(0, (worksheet.costs_ah78||0), 0.001); end
  def test_costs_ah158; assert_in_delta(0, (worksheet.costs_ah158||0), 0.001); end
  def test_costs_ai158; assert_in_delta(0, (worksheet.costs_ai158||0), 0.001); end
  def test_costs_b159; assert_equal("III.c", worksheet.costs_b159); end
  def test_costs_c159; assert_equal("Tidal and Wave [UNUSED]", worksheet.costs_c159); end
  def test_costs_e159; assert_equal("MEUR", worksheet.costs_e159); end
  def test_costs_f10; assert_in_delta(0, (worksheet.costs_f10||0), 0.001); end
  def test_costs_f79; assert_in_delta(0, (worksheet.costs_f79||0), 0.001); end
  def test_costs_f159; assert_in_delta(0, (worksheet.costs_f159||0), 0.001); end
  def test_costs_g10; assert_in_delta(0, (worksheet.costs_g10||0), 0.001); end
  def test_costs_g79; assert_in_delta(0, (worksheet.costs_g79||0), 0.001); end
  def test_costs_g159; assert_in_delta(0, (worksheet.costs_g159||0), 0.001); end
  def test_costs_h10; assert_in_delta(0, (worksheet.costs_h10||0), 0.001); end
  def test_costs_h79; assert_in_delta(0, (worksheet.costs_h79||0), 0.001); end
  def test_costs_h159; assert_in_delta(0, (worksheet.costs_h159||0), 0.001); end
  def test_costs_i10; assert_in_delta(0, (worksheet.costs_i10||0), 0.001); end
  def test_costs_i79; assert_in_delta(0, (worksheet.costs_i79||0), 0.001); end
  def test_costs_i159; assert_in_delta(0, (worksheet.costs_i159||0), 0.001); end
  def test_costs_j10; assert_in_delta(0, (worksheet.costs_j10||0), 0.001); end
  def test_costs_j79; assert_in_delta(0, (worksheet.costs_j79||0), 0.001); end
  def test_costs_j159; assert_in_delta(0, (worksheet.costs_j159||0), 0.001); end
  def test_costs_k10; assert_in_delta(0, (worksheet.costs_k10||0), 0.001); end
  def test_costs_k79; assert_in_delta(0, (worksheet.costs_k79||0), 0.001); end
  def test_costs_k159; assert_in_delta(0, (worksheet.costs_k159||0), 0.001); end
  def test_costs_l10; assert_in_delta(0, (worksheet.costs_l10||0), 0.001); end
  def test_costs_l79; assert_in_delta(0, (worksheet.costs_l79||0), 0.001); end
  def test_costs_l159; assert_in_delta(0, (worksheet.costs_l159||0), 0.001); end
  def test_costs_m10; assert_in_delta(0, (worksheet.costs_m10||0), 0.001); end
  def test_costs_m79; assert_in_delta(0, (worksheet.costs_m79||0), 0.001); end
  def test_costs_m159; assert_in_delta(0, (worksheet.costs_m159||0), 0.001); end
  def test_costs_n10; assert_in_delta(0, (worksheet.costs_n10||0), 0.001); end
  def test_costs_n79; assert_in_delta(0, (worksheet.costs_n79||0), 0.001); end
  def test_costs_n159; assert_in_delta(0, (worksheet.costs_n159||0), 0.001); end
  def test_costs_o159; assert_in_delta(0, (worksheet.costs_o159||0), 0.001); end
  def test_costs_p10; assert_in_delta(0, (worksheet.costs_p10||0), 0.001); end
  def test_costs_p79; assert_in_delta(0, (worksheet.costs_p79||0), 0.001); end
  def test_costs_p159; assert_in_delta(0, (worksheet.costs_p159||0), 0.001); end
  def test_costs_q10; assert_in_delta(0, (worksheet.costs_q10||0), 0.001); end
  def test_costs_q79; assert_in_delta(0, (worksheet.costs_q79||0), 0.001); end
  def test_costs_q159; assert_in_delta(0, (worksheet.costs_q159||0), 0.001); end
  def test_costs_r10; assert_in_delta(0, (worksheet.costs_r10||0), 0.001); end
  def test_costs_r79; assert_in_delta(0, (worksheet.costs_r79||0), 0.001); end
  def test_costs_r159; assert_in_delta(0, (worksheet.costs_r159||0), 0.001); end
  def test_costs_s10; assert_in_delta(0, (worksheet.costs_s10||0), 0.001); end
  def test_costs_s79; assert_in_delta(0, (worksheet.costs_s79||0), 0.001); end
  def test_costs_s159; assert_in_delta(0, (worksheet.costs_s159||0), 0.001); end
  def test_costs_t10; assert_in_delta(0, (worksheet.costs_t10||0), 0.001); end
  def test_costs_t79; assert_in_delta(0, (worksheet.costs_t79||0), 0.001); end
  def test_costs_t159; assert_in_delta(0, (worksheet.costs_t159||0), 0.001); end
  def test_costs_u10; assert_in_delta(0, (worksheet.costs_u10||0), 0.001); end
  def test_costs_u79; assert_in_delta(0, (worksheet.costs_u79||0), 0.001); end
  def test_costs_u159; assert_in_delta(0, (worksheet.costs_u159||0), 0.001); end
  def test_costs_v10; assert_in_delta(0, (worksheet.costs_v10||0), 0.001); end
  def test_costs_v79; assert_in_delta(0, (worksheet.costs_v79||0), 0.001); end
  def test_costs_v159; assert_in_delta(0, (worksheet.costs_v159||0), 0.001); end
  def test_costs_w10; assert_in_delta(0, (worksheet.costs_w10||0), 0.001); end
  def test_costs_w79; assert_in_delta(0, (worksheet.costs_w79||0), 0.001); end
  def test_costs_w159; assert_in_delta(0, (worksheet.costs_w159||0), 0.001); end
  def test_costs_x10; assert_in_delta(0, (worksheet.costs_x10||0), 0.001); end
  def test_costs_x79; assert_in_delta(0, (worksheet.costs_x79||0), 0.001); end
  def test_costs_x159; assert_in_delta(0, (worksheet.costs_x159||0), 0.001); end
  def test_costs_y159; assert_in_delta(0, (worksheet.costs_y159||0), 0.001); end
  def test_costs_z159; assert_in_delta(0, (worksheet.costs_z159||0), 0.001); end
  def test_costs_aa159; assert_in_delta(0, (worksheet.costs_aa159||0), 0.001); end
  def test_costs_ab159; assert_in_delta(0, (worksheet.costs_ab159||0), 0.001); end
  def test_costs_ac159; assert_in_delta(0, (worksheet.costs_ac159||0), 0.001); end
  def test_costs_ad159; assert_in_delta(0, (worksheet.costs_ad159||0), 0.001); end
  def test_costs_ae159; assert_in_delta(0, (worksheet.costs_ae159||0), 0.001); end
  def test_costs_af159; assert_in_delta(0, (worksheet.costs_af159||0), 0.001); end
  def test_costs_ag159; assert_in_delta(0, (worksheet.costs_ag159||0), 0.001); end
  def test_costs_ah159; assert_in_delta(0, (worksheet.costs_ah159||0), 0.001); end
  def test_costs_ai159; assert_in_delta(0, (worksheet.costs_ai159||0), 0.001); end
  def test_costs_aj10; assert_in_delta(0, (worksheet.costs_aj10||0), 0.001); end
  def test_costs_aj79; assert_in_delta(0, (worksheet.costs_aj79||0), 0.001); end
  def test_costs_aj159; assert_in_delta(0, (worksheet.costs_aj159||0), 0.001); end
  def test_costs_ak10; assert_in_delta(0, (worksheet.costs_ak10||0), 0.001); end
  def test_costs_ak79; assert_in_delta(0, (worksheet.costs_ak79||0), 0.001); end
  def test_costs_ak159; assert_in_delta(0, (worksheet.costs_ak159||0), 0.001); end
  def test_costs_al10; assert_in_delta(0, (worksheet.costs_al10||0), 0.001); end
  def test_costs_al79; assert_in_delta(0, (worksheet.costs_al79||0), 0.001); end
  def test_costs_al159; assert_in_delta(0, (worksheet.costs_al159||0), 0.001); end
  def test_costs_am10; assert_in_delta(0, (worksheet.costs_am10||0), 0.001); end
  def test_costs_am79; assert_in_delta(0, (worksheet.costs_am79||0), 0.001); end
  def test_costs_am159; assert_in_delta(0, (worksheet.costs_am159||0), 0.001); end
  def test_costs_an10; assert_in_delta(0, (worksheet.costs_an10||0), 0.001); end
  def test_costs_an79; assert_in_delta(0, (worksheet.costs_an79||0), 0.001); end
  def test_costs_an159; assert_in_delta(0, (worksheet.costs_an159||0), 0.001); end
  def test_costs_ao10; assert_in_delta(0, (worksheet.costs_ao10||0), 0.001); end
  def test_costs_ao79; assert_in_delta(0, (worksheet.costs_ao79||0), 0.001); end
  def test_costs_ao159; assert_in_delta(0, (worksheet.costs_ao159||0), 0.001); end
  def test_costs_ap10; assert_in_delta(0, (worksheet.costs_ap10||0), 0.001); end
  def test_costs_ap79; assert_in_delta(0, (worksheet.costs_ap79||0), 0.001); end
  def test_costs_ap159; assert_in_delta(0, (worksheet.costs_ap159||0), 0.001); end
  def test_costs_aq10; assert_in_delta(0, (worksheet.costs_aq10||0), 0.001); end
  def test_costs_aq79; assert_in_delta(0, (worksheet.costs_aq79||0), 0.001); end
  def test_costs_aq159; assert_in_delta(0, (worksheet.costs_aq159||0), 0.001); end
  def test_costs_ar10; assert_in_delta(0, (worksheet.costs_ar10||0), 0.001); end
  def test_costs_ar79; assert_in_delta(0, (worksheet.costs_ar79||0), 0.001); end
  def test_costs_ar159; assert_in_delta(0, (worksheet.costs_ar159||0), 0.001); end
  def test_costs_b160; assert_equal("III.d", worksheet.costs_b160); end
  def test_costs_c160; assert_equal("Geothermal electricity", worksheet.costs_c160); end
  def test_costs_e160; assert_equal("MEUR", worksheet.costs_e160); end
  def test_costs_f160; assert_in_delta(0, (worksheet.costs_f160||0), 0.001); end
  def test_costs_g11; assert_in_epsilon(1.7973711943109998, worksheet.costs_g11, 0.001); end
  def test_costs_g80; assert_in_epsilon(2.1967870152689994, worksheet.costs_g80, 0.001); end
  def test_costs_g160; assert_in_epsilon(1.9970791047899996, worksheet.costs_g160, 0.001); end
  def test_costs_h11; assert_in_epsilon(92.57869978055048, worksheet.costs_h11, 0.001); end
  def test_costs_h80; assert_in_epsilon(113.15174417622833, worksheet.costs_h80, 0.001); end
  def test_costs_h160; assert_in_epsilon(102.8652219783894, worksheet.costs_h160, 0.001); end
  def test_costs_i11; assert_in_epsilon(83.36619084856484, worksheet.costs_i11, 0.001); end
  def test_costs_i80; assert_in_epsilon(101.89201103713481, worksheet.costs_i80, 0.001); end
  def test_costs_i160; assert_in_epsilon(92.62910094284982, worksheet.costs_i160, 0.001); end
  def test_costs_j11; assert_in_epsilon(205.6581648072194, worksheet.costs_j11, 0.001); end
  def test_costs_j80; assert_in_epsilon(251.35997920882372, worksheet.costs_j80, 0.001); end
  def test_costs_j160; assert_in_epsilon(228.50907200802158, worksheet.costs_j160, 0.001); end
  def test_costs_k11; assert_in_epsilon(200.17750879300857, worksheet.costs_k11, 0.001); end
  def test_costs_k80; assert_in_epsilon(244.66139963589936, worksheet.costs_k80, 0.001); end
  def test_costs_k160; assert_in_epsilon(222.41945421445396, worksheet.costs_k160, 0.001); end
  def test_costs_l11; assert_in_epsilon(316.44882633740133, worksheet.costs_l11, 0.001); end
  def test_costs_l80; assert_in_epsilon(386.7707877457127, worksheet.costs_l80, 0.001); end
  def test_costs_l160; assert_in_epsilon(351.609807041557, worksheet.costs_l160, 0.001); end
  def test_costs_m11; assert_in_epsilon(501.72906029640274, worksheet.costs_m11, 0.001); end
  def test_costs_m80; assert_in_epsilon(613.2244070289368, worksheet.costs_m80, 0.001); end
  def test_costs_m160; assert_in_epsilon(557.4767336626697, worksheet.costs_m160, 0.001); end
  def test_costs_n11; assert_in_epsilon(730.3208148320061, worksheet.costs_n11, 0.001); end
  def test_costs_n80; assert_in_epsilon(892.6143292391187, worksheet.costs_n80, 0.001); end
  def test_costs_n160; assert_in_epsilon(811.4675720355624, worksheet.costs_n160, 0.001); end
  def test_costs_o160; assert_in_epsilon(263.21933788758827, worksheet.costs_o160, 0.001); end
  def test_costs_p11; assert_in_delta(0, (worksheet.costs_p11||0), 0.001); end
  def test_costs_p80; assert_in_delta(0, (worksheet.costs_p80||0), 0.001); end
  def test_costs_p160; assert_in_delta(0, (worksheet.costs_p160||0), 0.001); end
  def test_costs_q11; assert_in_delta(0.224671399288875, worksheet.costs_q11, 0.001); end
  def test_costs_q80; assert_in_delta(0.274598376908625, worksheet.costs_q80, 0.001); end
  def test_costs_q160; assert_in_delta(0.24963488809875, worksheet.costs_q160, 0.001); end
  def test_costs_r11; assert_in_epsilon(11.785997737789637, worksheet.costs_r11, 0.001); end
  def test_costs_r80; assert_in_epsilon(14.405108346187337, worksheet.costs_r80, 0.001); end
  def test_costs_r160; assert_in_epsilon(13.095553041988488, worksheet.costs_r160, 0.001); end
  def test_costs_s11; assert_in_epsilon(21.629140432852463, worksheet.costs_s11, 0.001); end
  def test_costs_s80; assert_in_epsilon(26.435616084597452, worksheet.costs_s80, 0.001); end
  def test_costs_s160; assert_in_epsilon(24.032378258724957, worksheet.costs_s160, 0.001); end
  def test_costs_t11; assert_in_epsilon(46.276367940434895, worksheet.costs_t11, 0.001); end
  def test_costs_t80; assert_in_epsilon(56.56000526053154, worksheet.costs_t80, 0.001); end
  def test_costs_t160; assert_in_epsilon(51.41818660048322, worksheet.costs_t160, 0.001); end
  def test_costs_u11; assert_in_epsilon(69.98860413529279, worksheet.costs_u11, 0.001); end
  def test_costs_u80; assert_in_epsilon(85.54162727646897, worksheet.costs_u80, 0.001); end
  def test_costs_u160; assert_in_epsilon(77.76511570588087, worksheet.costs_u160, 0.001); end
  def test_costs_v11; assert_in_epsilon(107.43475465044344, worksheet.costs_v11, 0.001); end
  def test_costs_v80; assert_in_epsilon(131.30914457276418, worksheet.costs_v80, 0.001); end
  def test_costs_v160; assert_in_epsilon(119.37194961160381, worksheet.costs_v160, 0.001); end
  def test_costs_w11; assert_in_epsilon(157.55402343757237, worksheet.costs_w11, 0.001); end
  def test_costs_w80; assert_in_epsilon(192.56602864592182, worksheet.costs_w80, 0.001); end
  def test_costs_w160; assert_in_epsilon(175.0600260417471, worksheet.costs_w160, 0.001); end
  def test_costs_x11; assert_in_epsilon(226.48375835173914, worksheet.costs_x11, 0.001); end
  def test_costs_x80; assert_in_epsilon(276.8134824299034, worksheet.costs_x80, 0.001); end
  def test_costs_x160; assert_in_epsilon(251.64862039082126, worksheet.costs_x160, 0.001); end
  def test_costs_y160; assert_in_epsilon(79.18238494881649, worksheet.costs_y160, 0.001); end
  def test_costs_z160; assert_in_delta(0, (worksheet.costs_z160||0), 0.001); end
  def test_costs_aa160; assert_in_delta(0, (worksheet.costs_aa160||0), 0.001); end
  def test_costs_ab160; assert_in_delta(0, (worksheet.costs_ab160||0), 0.001); end
  def test_costs_ac160; assert_in_delta(0, (worksheet.costs_ac160||0), 0.001); end
  def test_costs_ad160; assert_in_delta(0, (worksheet.costs_ad160||0), 0.001); end
  def test_costs_ae160; assert_in_delta(0, (worksheet.costs_ae160||0), 0.001); end
  def test_costs_af160; assert_in_delta(0, (worksheet.costs_af160||0), 0.001); end
  def test_costs_ag160; assert_in_delta(0, (worksheet.costs_ag160||0), 0.001); end
  def test_costs_ah160; assert_in_delta(0, (worksheet.costs_ah160||0), 0.001); end
  def test_costs_ai160; assert_in_delta(0, (worksheet.costs_ai160||0), 0.001); end
  def test_costs_b161; assert_equal("III.e", worksheet.costs_b161); end
  def test_costs_c161; assert_equal("Tidal [UNUSED]", worksheet.costs_c161); end
  def test_costs_e161; assert_equal("MEUR", worksheet.costs_e161); end
  def test_costs_f161; assert_in_delta(0, (worksheet.costs_f161||0), 0.001); end
  def test_costs_g161; assert_in_delta(0, (worksheet.costs_g161||0), 0.001); end
  def test_costs_h161; assert_in_delta(0, (worksheet.costs_h161||0), 0.001); end
  def test_costs_i161; assert_in_delta(0, (worksheet.costs_i161||0), 0.001); end
  def test_costs_j161; assert_in_delta(0, (worksheet.costs_j161||0), 0.001); end
  def test_costs_k161; assert_in_delta(0, (worksheet.costs_k161||0), 0.001); end
  def test_costs_l161; assert_in_delta(0, (worksheet.costs_l161||0), 0.001); end
  def test_costs_m161; assert_in_delta(0, (worksheet.costs_m161||0), 0.001); end
  def test_costs_n161; assert_in_delta(0, (worksheet.costs_n161||0), 0.001); end
  def test_costs_o161; assert_in_delta(0, (worksheet.costs_o161||0), 0.001); end
  def test_costs_p161; assert_in_delta(0, (worksheet.costs_p161||0), 0.001); end
  def test_costs_q161; assert_in_delta(0, (worksheet.costs_q161||0), 0.001); end
  def test_costs_r161; assert_in_delta(0, (worksheet.costs_r161||0), 0.001); end
  def test_costs_s161; assert_in_delta(0, (worksheet.costs_s161||0), 0.001); end
  def test_costs_t161; assert_in_delta(0, (worksheet.costs_t161||0), 0.001); end
  def test_costs_u161; assert_in_delta(0, (worksheet.costs_u161||0), 0.001); end
  def test_costs_v161; assert_in_delta(0, (worksheet.costs_v161||0), 0.001); end
  def test_costs_w161; assert_in_delta(0, (worksheet.costs_w161||0), 0.001); end
  def test_costs_x161; assert_in_delta(0, (worksheet.costs_x161||0), 0.001); end
  def test_costs_y161; assert_in_delta(0, (worksheet.costs_y161||0), 0.001); end
  def test_costs_z161; assert_in_delta(0, (worksheet.costs_z161||0), 0.001); end
  def test_costs_aa161; assert_in_delta(0, (worksheet.costs_aa161||0), 0.001); end
  def test_costs_ab161; assert_in_delta(0, (worksheet.costs_ab161||0), 0.001); end
  def test_costs_ac161; assert_in_delta(0, (worksheet.costs_ac161||0), 0.001); end
  def test_costs_ad161; assert_in_delta(0, (worksheet.costs_ad161||0), 0.001); end
  def test_costs_ae161; assert_in_delta(0, (worksheet.costs_ae161||0), 0.001); end
  def test_costs_af161; assert_in_delta(0, (worksheet.costs_af161||0), 0.001); end
  def test_costs_ag161; assert_in_delta(0, (worksheet.costs_ag161||0), 0.001); end
  def test_costs_ah161; assert_in_delta(0, (worksheet.costs_ah161||0), 0.001); end
  def test_costs_ai161; assert_in_delta(0, (worksheet.costs_ai161||0), 0.001); end
  def test_costs_aj161; assert_in_delta(0, (worksheet.costs_aj161||0), 0.001); end
  def test_costs_ak161; assert_in_delta(0, (worksheet.costs_ak161||0), 0.001); end
  def test_costs_al161; assert_in_delta(0, (worksheet.costs_al161||0), 0.001); end
  def test_costs_am161; assert_in_delta(0, (worksheet.costs_am161||0), 0.001); end
  def test_costs_an161; assert_in_delta(0, (worksheet.costs_an161||0), 0.001); end
  def test_costs_ao161; assert_in_delta(0, (worksheet.costs_ao161||0), 0.001); end
  def test_costs_ap161; assert_in_delta(0, (worksheet.costs_ap161||0), 0.001); end
  def test_costs_aq161; assert_in_delta(0, (worksheet.costs_aq161||0), 0.001); end
  def test_costs_ar161; assert_in_delta(0, (worksheet.costs_ar161||0), 0.001); end
  def test_costs_b162; assert_equal("IV.a", worksheet.costs_b162); end
  def test_costs_c162; assert_equal("Solar PV", worksheet.costs_c162); end
  def test_costs_e162; assert_equal("MEUR", worksheet.costs_e162); end
  def test_costs_o162; assert_in_epsilon(543.6433333333333, worksheet.costs_o162, 0.001); end
  def test_costs_p162; assert_in_epsilon(26.108999999999998, worksheet.costs_p162, 0.001); end
  def test_costs_y162; assert_in_epsilon(62.47420833333334, worksheet.costs_y162, 0.001); end
  def test_costs_z162; assert_in_delta(0, (worksheet.costs_z162||0), 0.001); end
  def test_costs_ai162; assert_in_delta(0, (worksheet.costs_ai162||0), 0.001); end
  def test_costs_b163; assert_equal("VII.a.Imports", worksheet.costs_b163); end
  def test_costs_c163; assert_equal("Electricity imports", worksheet.costs_c163); end
  def test_costs_e163; assert_equal("MEUR", worksheet.costs_e163); end
  def test_costs_f163; assert_in_delta(0, (worksheet.costs_f163||0), 0.001); end
  def test_costs_g163; assert_in_delta(0, (worksheet.costs_g163||0), 0.001); end
  def test_costs_h163; assert_in_delta(0, (worksheet.costs_h163||0), 0.001); end
  def test_costs_i163; assert_in_delta(0, (worksheet.costs_i163||0), 0.001); end
  def test_costs_j163; assert_in_delta(0, (worksheet.costs_j163||0), 0.001); end
  def test_costs_k163; assert_in_delta(0, (worksheet.costs_k163||0), 0.001); end
  def test_costs_l163; assert_in_delta(0, (worksheet.costs_l163||0), 0.001); end
  def test_costs_m163; assert_in_delta(0, (worksheet.costs_m163||0), 0.001); end
  def test_costs_n163; assert_in_delta(0, (worksheet.costs_n163||0), 0.001); end
  def test_costs_o163; assert_in_delta(0, (worksheet.costs_o163||0), 0.001); end
  def test_costs_p163; assert_in_delta(0, (worksheet.costs_p163||0), 0.001); end
  def test_costs_q163; assert_in_delta(0, (worksheet.costs_q163||0), 0.001); end
  def test_costs_r163; assert_in_delta(0, (worksheet.costs_r163||0), 0.001); end
  def test_costs_s163; assert_in_delta(0, (worksheet.costs_s163||0), 0.001); end
  def test_costs_t163; assert_in_delta(0, (worksheet.costs_t163||0), 0.001); end
  def test_costs_u163; assert_in_delta(0, (worksheet.costs_u163||0), 0.001); end
  def test_costs_v163; assert_in_delta(0, (worksheet.costs_v163||0), 0.001); end
  def test_costs_w163; assert_in_delta(0, (worksheet.costs_w163||0), 0.001); end
  def test_costs_x163; assert_in_delta(0, (worksheet.costs_x163||0), 0.001); end
  def test_costs_y163; assert_in_delta(0, (worksheet.costs_y163||0), 0.001); end
  def test_costs_z21; assert_in_delta(0, (worksheet.costs_z21||0), 0.001); end
  def test_costs_z90; assert_in_delta(0, (worksheet.costs_z90||0), 0.001); end
  def test_costs_z163; assert_in_delta(0, (worksheet.costs_z163||0), 0.001); end
  def test_costs_aa21; assert_in_epsilon(23.4609375, worksheet.costs_aa21, 0.001); end
  def test_costs_aa90; assert_in_epsilon(27.7265625, worksheet.costs_aa90, 0.001); end
  def test_costs_aa163; assert_in_epsilon(25.59375, worksheet.costs_aa163, 0.001); end
  def test_costs_ab21; assert_in_epsilon(46.59375, worksheet.costs_ab21, 0.001); end
  def test_costs_ab90; assert_in_epsilon(63.65625, worksheet.costs_ab90, 0.001); end
  def test_costs_ab163; assert_in_epsilon(55.125, worksheet.costs_ab163, 0.001); end
  def test_costs_ac21; assert_in_epsilon(71.85937500000001, worksheet.costs_ac21, 0.001); end
  def test_costs_ac90; assert_in_epsilon(95.97656250000001, worksheet.costs_ac90, 0.001); end
  def test_costs_ac163; assert_in_epsilon(83.91796875000001, worksheet.costs_ac163, 0.001); end
  def test_costs_ad21; assert_in_epsilon(98.4375, worksheet.costs_ad21, 0.001); end
  def test_costs_ad90; assert_in_epsilon(128.625, worksheet.costs_ad90, 0.001); end
  def test_costs_ad163; assert_in_epsilon(113.53125, worksheet.costs_ad163, 0.001); end
  def test_costs_ae21; assert_in_epsilon(120.5859375, worksheet.costs_ae21, 0.001); end
  def test_costs_ae90; assert_in_epsilon(157.5, worksheet.costs_ae90, 0.001); end
  def test_costs_ae163; assert_in_epsilon(139.04296875, worksheet.costs_ae163, 0.001); end
  def test_costs_af21; assert_in_epsilon(141.75, worksheet.costs_af21, 0.001); end
  def test_costs_af90; assert_in_epsilon(185.0625, worksheet.costs_af90, 0.001); end
  def test_costs_af163; assert_in_epsilon(163.40625, worksheet.costs_af163, 0.001); end
  def test_costs_ag21; assert_in_epsilon(163.078125, worksheet.costs_ag21, 0.001); end
  def test_costs_ag90; assert_in_epsilon(213.609375, worksheet.costs_ag90, 0.001); end
  def test_costs_ag163; assert_in_epsilon(188.34375, worksheet.costs_ag163, 0.001); end
  def test_costs_ah21; assert_in_epsilon(183.75, worksheet.costs_ah21, 0.001); end
  def test_costs_ah90; assert_in_epsilon(241.5, worksheet.costs_ah90, 0.001); end
  def test_costs_ah163; assert_in_epsilon(212.625, worksheet.costs_ah163, 0.001); end
  def test_costs_ai163; assert_in_epsilon(109.06510416666667, worksheet.costs_ai163, 0.001); end
  def test_costs_b164; assert_equal("VII.a.Exports", worksheet.costs_b164); end
  def test_costs_c164; assert_equal("Electricity exports", worksheet.costs_c164); end
  def test_costs_e164; assert_equal("MEUR", worksheet.costs_e164); end
  def test_costs_f164; assert_in_delta(0, (worksheet.costs_f164||0), 0.001); end
  def test_costs_g22; assert_in_delta(0, (worksheet.costs_g22||0), 0.001); end
  def test_costs_g91; assert_in_delta(0, (worksheet.costs_g91||0), 0.001); end
  def test_costs_g164; assert_in_delta(0, (worksheet.costs_g164||0), 0.001); end
  def test_costs_h22; assert_in_delta(0, (worksheet.costs_h22||0), 0.001); end
  def test_costs_h91; assert_in_delta(0, (worksheet.costs_h91||0), 0.001); end
  def test_costs_h164; assert_in_delta(0, (worksheet.costs_h164||0), 0.001); end
  def test_costs_i22; assert_in_delta(0, (worksheet.costs_i22||0), 0.001); end
  def test_costs_i91; assert_in_delta(0, (worksheet.costs_i91||0), 0.001); end
  def test_costs_i164; assert_in_delta(0, (worksheet.costs_i164||0), 0.001); end
  def test_costs_j22; assert_in_delta(0, (worksheet.costs_j22||0), 0.001); end
  def test_costs_j91; assert_in_delta(0, (worksheet.costs_j91||0), 0.001); end
  def test_costs_j164; assert_in_delta(0, (worksheet.costs_j164||0), 0.001); end
  def test_costs_k22; assert_in_delta(0, (worksheet.costs_k22||0), 0.001); end
  def test_costs_k91; assert_in_delta(0, (worksheet.costs_k91||0), 0.001); end
  def test_costs_k164; assert_in_delta(0, (worksheet.costs_k164||0), 0.001); end
  def test_costs_l22; assert_in_delta(0, (worksheet.costs_l22||0), 0.001); end
  def test_costs_l91; assert_in_delta(0, (worksheet.costs_l91||0), 0.001); end
  def test_costs_l164; assert_in_delta(0, (worksheet.costs_l164||0), 0.001); end
  def test_costs_m22; assert_in_delta(0, (worksheet.costs_m22||0), 0.001); end
  def test_costs_m91; assert_in_delta(0, (worksheet.costs_m91||0), 0.001); end
  def test_costs_m164; assert_in_delta(0, (worksheet.costs_m164||0), 0.001); end
  def test_costs_n22; assert_in_delta(0, (worksheet.costs_n22||0), 0.001); end
  def test_costs_n91; assert_in_delta(0, (worksheet.costs_n91||0), 0.001); end
  def test_costs_n164; assert_in_delta(0, (worksheet.costs_n164||0), 0.001); end
  def test_costs_o164; assert_in_delta(0, (worksheet.costs_o164||0), 0.001); end
  def test_costs_p22; assert_in_delta(0, (worksheet.costs_p22||0), 0.001); end
  def test_costs_p91; assert_in_delta(0, (worksheet.costs_p91||0), 0.001); end
  def test_costs_p164; assert_in_delta(0, (worksheet.costs_p164||0), 0.001); end
  def test_costs_q22; assert_in_delta(0, (worksheet.costs_q22||0), 0.001); end
  def test_costs_q91; assert_in_delta(0, (worksheet.costs_q91||0), 0.001); end
  def test_costs_q164; assert_in_delta(0, (worksheet.costs_q164||0), 0.001); end
  def test_costs_r22; assert_in_delta(0, (worksheet.costs_r22||0), 0.001); end
  def test_costs_r91; assert_in_delta(0, (worksheet.costs_r91||0), 0.001); end
  def test_costs_r164; assert_in_delta(0, (worksheet.costs_r164||0), 0.001); end
  def test_costs_s22; assert_in_delta(0, (worksheet.costs_s22||0), 0.001); end
  def test_costs_s91; assert_in_delta(0, (worksheet.costs_s91||0), 0.001); end
  def test_costs_s164; assert_in_delta(0, (worksheet.costs_s164||0), 0.001); end
  def test_costs_t22; assert_in_delta(0, (worksheet.costs_t22||0), 0.001); end
  def test_costs_t91; assert_in_delta(0, (worksheet.costs_t91||0), 0.001); end
  def test_costs_t164; assert_in_delta(0, (worksheet.costs_t164||0), 0.001); end
  def test_costs_u22; assert_in_delta(0, (worksheet.costs_u22||0), 0.001); end
  def test_costs_u91; assert_in_delta(0, (worksheet.costs_u91||0), 0.001); end
  def test_costs_u164; assert_in_delta(0, (worksheet.costs_u164||0), 0.001); end
  def test_costs_v22; assert_in_delta(0, (worksheet.costs_v22||0), 0.001); end
  def test_costs_v91; assert_in_delta(0, (worksheet.costs_v91||0), 0.001); end
  def test_costs_v164; assert_in_delta(0, (worksheet.costs_v164||0), 0.001); end
  def test_costs_w22; assert_in_delta(0, (worksheet.costs_w22||0), 0.001); end
  def test_costs_w91; assert_in_delta(0, (worksheet.costs_w91||0), 0.001); end
  def test_costs_w164; assert_in_delta(0, (worksheet.costs_w164||0), 0.001); end
  def test_costs_x22; assert_in_delta(0, (worksheet.costs_x22||0), 0.001); end
  def test_costs_x91; assert_in_delta(0, (worksheet.costs_x91||0), 0.001); end
  def test_costs_x164; assert_in_delta(0, (worksheet.costs_x164||0), 0.001); end
  def test_costs_y164; assert_in_delta(0, (worksheet.costs_y164||0), 0.001); end
  def test_costs_z22; assert_in_delta(0, (worksheet.costs_z22||0), 0.001); end
  def test_costs_z164; assert_in_delta(0, (worksheet.costs_z164||0), 0.001); end
  def test_costs_aa22; assert_in_delta(0, (worksheet.costs_aa22||0), 0.001); end
  def test_costs_aa164; assert_in_delta(0, (worksheet.costs_aa164||0), 0.001); end
  def test_costs_ab22; assert_in_delta(0, (worksheet.costs_ab22||0), 0.001); end
  def test_costs_ab164; assert_in_delta(0, (worksheet.costs_ab164||0), 0.001); end
  def test_costs_ac22; assert_in_delta(0, (worksheet.costs_ac22||0), 0.001); end
  def test_costs_ac164; assert_in_delta(0, (worksheet.costs_ac164||0), 0.001); end
  def test_costs_ad22; assert_in_delta(0, (worksheet.costs_ad22||0), 0.001); end
  def test_costs_ad164; assert_in_delta(0, (worksheet.costs_ad164||0), 0.001); end
  def test_costs_ae22; assert_in_delta(0, (worksheet.costs_ae22||0), 0.001); end
  def test_costs_ae164; assert_in_delta(0, (worksheet.costs_ae164||0), 0.001); end
  def test_costs_af22; assert_in_delta(0, (worksheet.costs_af22||0), 0.001); end
  def test_costs_af164; assert_in_delta(0, (worksheet.costs_af164||0), 0.001); end
  def test_costs_ag22; assert_in_delta(0, (worksheet.costs_ag22||0), 0.001); end
  def test_costs_ag164; assert_in_delta(0, (worksheet.costs_ag164||0), 0.001); end
  def test_costs_ah22; assert_in_delta(0, (worksheet.costs_ah22||0), 0.001); end
  def test_costs_ah164; assert_in_delta(0, (worksheet.costs_ah164||0), 0.001); end
  def test_costs_ai164; assert_in_delta(0, (worksheet.costs_ai164||0), 0.001); end
  def test_costs_b165; assert_equal("VII.b", worksheet.costs_b165); end
  def test_costs_c165; assert_equal("Electricity grid distribution", worksheet.costs_c165); end
  def test_costs_e165; assert_equal("MEUR", worksheet.costs_e165); end
  def test_costs_f23; assert_in_delta(0, (worksheet.costs_f23||0), 0.001); end
  def test_costs_f92; assert_in_delta(0, (worksheet.costs_f92||0), 0.001); end
  def test_costs_f165; assert_in_delta(0, (worksheet.costs_f165||0), 0.001); end
  def test_costs_g23; assert_in_epsilon(32.07443997588635, worksheet.costs_g23, 0.001); end
  def test_costs_g92; assert_in_epsilon(96.2233199276591, worksheet.costs_g92, 0.001); end
  def test_costs_g165; assert_in_epsilon(64.14887995177273, worksheet.costs_g165, 0.001); end
  def test_costs_h23; assert_in_epsilon(67.08891896254384, worksheet.costs_h23, 0.001); end
  def test_costs_h92; assert_in_epsilon(201.26675688763146, worksheet.costs_h92, 0.001); end
  def test_costs_h165; assert_in_epsilon(134.17783792508766, worksheet.costs_h165, 0.001); end
  def test_costs_i23; assert_in_epsilon(113.13796628525711, worksheet.costs_i23, 0.001); end
  def test_costs_i92; assert_in_epsilon(339.4138988557713, worksheet.costs_i92, 0.001); end
  def test_costs_i165; assert_in_epsilon(226.27593257051421, worksheet.costs_i165, 0.001); end
  def test_costs_j23; assert_in_epsilon(97.19028042913928, worksheet.costs_j23, 0.001); end
  def test_costs_j92; assert_in_epsilon(291.57084128741786, worksheet.costs_j92, 0.001); end
  def test_costs_j165; assert_in_epsilon(194.38056085827856, worksheet.costs_j165, 0.001); end
  def test_costs_k23; assert_in_epsilon(99.40227854478547, worksheet.costs_k23, 0.001); end
  def test_costs_k92; assert_in_epsilon(298.20683563435637, worksheet.costs_k92, 0.001); end
  def test_costs_k165; assert_in_epsilon(198.80455708957092, worksheet.costs_k165, 0.001); end
  def test_costs_l23; assert_in_epsilon(106.54933387208085, worksheet.costs_l23, 0.001); end
  def test_costs_l92; assert_in_epsilon(319.64800161624265, worksheet.costs_l92, 0.001); end
  def test_costs_l165; assert_in_epsilon(213.09866774416176, worksheet.costs_l165, 0.001); end
  def test_costs_m23; assert_in_epsilon(122.80161496652063, worksheet.costs_m23, 0.001); end
  def test_costs_m92; assert_in_epsilon(368.4048448995617, worksheet.costs_m92, 0.001); end
  def test_costs_m165; assert_in_epsilon(245.60322993304115, worksheet.costs_m165, 0.001); end
  def test_costs_n23; assert_in_epsilon(140.87298505850757, worksheet.costs_n23, 0.001); end
  def test_costs_n92; assert_in_epsilon(422.61895517552273, worksheet.costs_n92, 0.001); end
  def test_costs_n165; assert_in_epsilon(281.74597011701513, worksheet.costs_n165, 0.001); end
  def test_costs_o165; assert_in_epsilon(173.13729290993803, worksheet.costs_o165, 0.001); end
  def test_costs_p23; assert_in_delta(0, (worksheet.costs_p23||0), 0.001); end
  def test_costs_p92; assert_in_delta(0, (worksheet.costs_p92||0), 0.001); end
  def test_costs_p165; assert_in_delta(0, (worksheet.costs_p165||0), 0.001); end
  def test_costs_q23; assert_in_epsilon(20.5167321520176, worksheet.costs_q23, 0.001); end
  def test_costs_q92; assert_in_epsilon(61.55019645605281, worksheet.costs_q92, 0.001); end
  def test_costs_q165; assert_in_epsilon(41.033464304035206, worksheet.costs_q165, 0.001); end
  def test_costs_r23; assert_in_epsilon(25.61451846805952, worksheet.costs_r23, 0.001); end
  def test_costs_r92; assert_in_epsilon(76.84355540417856, worksheet.costs_r92, 0.001); end
  def test_costs_r165; assert_in_epsilon(51.22903693611904, worksheet.costs_r165, 0.001); end
  def test_costs_s23; assert_in_epsilon(36.45753005306555, worksheet.costs_s23, 0.001); end
  def test_costs_s92; assert_in_epsilon(109.37259015919665, worksheet.costs_s92, 0.001); end
  def test_costs_s165; assert_in_epsilon(72.9150601061311, worksheet.costs_s165, 0.001); end
  def test_costs_t23; assert_in_epsilon(42.15873906863136, worksheet.costs_t23, 0.001); end
  def test_costs_t92; assert_in_epsilon(126.4762172058941, worksheet.costs_t92, 0.001); end
  def test_costs_t165; assert_in_epsilon(84.31747813726273, worksheet.costs_t165, 0.001); end
  def test_costs_u23; assert_in_epsilon(46.7718406650079, worksheet.costs_u23, 0.001); end
  def test_costs_u92; assert_in_epsilon(140.31552199502372, worksheet.costs_u92, 0.001); end
  def test_costs_u165; assert_in_epsilon(93.5436813300158, worksheet.costs_u165, 0.001); end
  def test_costs_v23; assert_in_epsilon(51.3211570036463, worksheet.costs_v23, 0.001); end
  def test_costs_v92; assert_in_epsilon(153.96347101093892, worksheet.costs_v92, 0.001); end
  def test_costs_v165; assert_in_epsilon(102.64231400729261, worksheet.costs_v165, 0.001); end
  def test_costs_w23; assert_in_epsilon(57.2106261317775, worksheet.costs_w23, 0.001); end
  def test_costs_w92; assert_in_epsilon(171.63187839533254, worksheet.costs_w92, 0.001); end
  def test_costs_w165; assert_in_epsilon(114.42125226355502, worksheet.costs_w165, 0.001); end
  def test_costs_x23; assert_in_epsilon(64.38251000409343, worksheet.costs_x23, 0.001); end
  def test_costs_x92; assert_in_epsilon(193.14753001228033, worksheet.costs_x92, 0.001); end
  def test_costs_x165; assert_in_epsilon(128.76502000818687, worksheet.costs_x165, 0.001); end
  def test_costs_y165; assert_in_epsilon(76.5408118991776, worksheet.costs_y165, 0.001); end
  def test_costs_z165; assert_in_delta(0, (worksheet.costs_z165||0), 0.001); end
  def test_costs_aa165; assert_in_delta(0, (worksheet.costs_aa165||0), 0.001); end
  def test_costs_ab165; assert_in_delta(0, (worksheet.costs_ab165||0), 0.001); end
  def test_costs_ac165; assert_in_delta(0, (worksheet.costs_ac165||0), 0.001); end
  def test_costs_ad165; assert_in_delta(0, (worksheet.costs_ad165||0), 0.001); end
  def test_costs_ae165; assert_in_delta(0, (worksheet.costs_ae165||0), 0.001); end
  def test_costs_af165; assert_in_delta(0, (worksheet.costs_af165||0), 0.001); end
  def test_costs_ag165; assert_in_delta(0, (worksheet.costs_ag165||0), 0.001); end
  def test_costs_ah165; assert_in_delta(0, (worksheet.costs_ah165||0), 0.001); end
  def test_costs_ai165; assert_in_delta(0, (worksheet.costs_ai165||0), 0.001); end
  def test_costs_b166; assert_equal("VII.c", worksheet.costs_b166); end
  def test_costs_c166; assert_equal("EU transmission integration", worksheet.costs_c166); end
  def test_costs_e166; assert_equal("MEUR", worksheet.costs_e166); end
  def test_costs_f166; assert_in_delta(0, (worksheet.costs_f166||0), 0.001); end
  def test_costs_g24; assert_in_epsilon(55.49512500000003, worksheet.costs_g24, 0.001); end
  def test_costs_g93; assert_in_epsilon(92.49187500000004, worksheet.costs_g93, 0.001); end
  def test_costs_g166; assert_in_epsilon(73.99350000000004, worksheet.costs_g166, 0.001); end
  def test_costs_h24; assert_in_epsilon(70.93869422398338, worksheet.costs_h24, 0.001); end
  def test_costs_h93; assert_in_epsilon(115.65722883597505, worksheet.costs_h93, 0.001); end
  def test_costs_h166; assert_in_epsilon(93.2979615299792, worksheet.costs_h166, 0.001); end
  def test_costs_i24; assert_in_epsilon(61.25983230665711, worksheet.costs_i24, 0.001); end
  def test_costs_i93; assert_in_epsilon(91.88974845998567, worksheet.costs_i93, 0.001); end
  def test_costs_i166; assert_in_epsilon(76.57479038332139, worksheet.costs_i166, 0.001); end
  def test_costs_j24; assert_in_epsilon(70.03903005133411, worksheet.costs_j24, 0.001); end
  def test_costs_j93; assert_in_epsilon(105.05854507700116, worksheet.costs_j93, 0.001); end
  def test_costs_j166; assert_in_epsilon(87.54878756416764, worksheet.costs_j166, 0.001); end
  def test_costs_k24; assert_in_epsilon(66.89541853692951, worksheet.costs_k24, 0.001); end
  def test_costs_k93; assert_in_epsilon(100.34312780539427, worksheet.costs_k93, 0.001); end
  def test_costs_k166; assert_in_epsilon(83.6192731711619, worksheet.costs_k166, 0.001); end
  def test_costs_l24; assert_in_epsilon(54.22687665707004, worksheet.costs_l24, 0.001); end
  def test_costs_l93; assert_in_epsilon(81.34031498560505, worksheet.costs_l93, 0.001); end
  def test_costs_l166; assert_in_epsilon(67.78359582133754, worksheet.costs_l166, 0.001); end
  def test_costs_m24; assert_in_epsilon(61.99733330262454, worksheet.costs_m24, 0.001); end
  def test_costs_m93; assert_in_epsilon(92.9959999539368, worksheet.costs_m93, 0.001); end
  def test_costs_m166; assert_in_epsilon(77.49666662828068, worksheet.costs_m166, 0.001); end
  def test_costs_n24; assert_in_epsilon(69.31414545440205, worksheet.costs_n24, 0.001); end
  def test_costs_n93; assert_in_epsilon(103.97121818160306, worksheet.costs_n93, 0.001); end
  def test_costs_n166; assert_in_epsilon(86.64268181800256, worksheet.costs_n166, 0.001); end
  def test_costs_o166; assert_in_epsilon(71.88413965736122, worksheet.costs_o166, 0.001); end
  def test_costs_p24; assert_in_epsilon(9.759487500000002, worksheet.costs_p24, 0.001); end
  def test_costs_p93; assert_in_epsilon(16.2658125, worksheet.costs_p93, 0.001); end
  def test_costs_p166; assert_in_epsilon(13.01265, worksheet.costs_p166, 0.001); end
  def test_costs_q24; assert_in_epsilon(12.534243750000003, worksheet.costs_q24, 0.001); end
  def test_costs_q93; assert_in_epsilon(20.89040625, worksheet.costs_q93, 0.001); end
  def test_costs_q166; assert_in_epsilon(16.712325000000003, worksheet.costs_q166, 0.001); end
  def test_costs_r24; assert_in_epsilon(17.4600685704834, worksheet.costs_r24, 0.001); end
  def test_costs_r93; assert_in_epsilon(28.327935822939832, worksheet.costs_r93, 0.001); end
  def test_costs_r166; assert_in_epsilon(22.894002196711618, worksheet.costs_r166, 0.001); end
  def test_costs_s24; assert_in_epsilon(25.992688070339213, worksheet.costs_s24, 0.001); end
  def test_costs_s93; assert_in_epsilon(39.48597670736666, worksheet.costs_s93, 0.001); end
  def test_costs_s166; assert_in_epsilon(32.73933238885294, worksheet.costs_s166, 0.001); end
  def test_costs_t24; assert_in_epsilon(35.748124398917895, worksheet.costs_t24, 0.001); end
  def test_costs_t93; assert_in_epsilon(52.243085752431085, worksheet.costs_t93, 0.001); end
  def test_costs_t166; assert_in_epsilon(43.99560507567449, worksheet.costs_t166, 0.001); end
  def test_costs_u24; assert_in_epsilon(45.065700552275935, worksheet.costs_u24, 0.001); end
  def test_costs_u93; assert_in_epsilon(64.42760841451468, worksheet.costs_u93, 0.001); end
  def test_costs_u166; assert_in_epsilon(54.746654483395304, worksheet.costs_u166, 0.001); end
  def test_costs_v24; assert_in_epsilon(52.61872980093926, worksheet.costs_v24, 0.001); end
  def test_costs_v93; assert_in_epsilon(74.30464666276671, worksheet.costs_v93, 0.001); end
  def test_costs_v166; assert_in_epsilon(63.46168823185299, worksheet.costs_v166, 0.001); end
  def test_costs_w24; assert_in_epsilon(61.25407265380482, worksheet.costs_w24, 0.001); end
  def test_costs_w93; assert_in_epsilon(85.59701808574476, worksheet.costs_w93, 0.001); end
  def test_costs_w166; assert_in_epsilon(73.4255453697748, worksheet.costs_w166, 0.001); end
  def test_costs_x24; assert_in_epsilon(70.9085429135251, worksheet.costs_x24, 0.001); end
  def test_costs_x93; assert_in_epsilon(98.22209457922513, worksheet.costs_x93, 0.001); end
  def test_costs_x166; assert_in_epsilon(84.56531874637511, worksheet.costs_x166, 0.001); end
  def test_costs_y166; assert_in_epsilon(45.061457943626365, worksheet.costs_y166, 0.001); end
  def test_costs_z24; assert_in_delta(0, (worksheet.costs_z24||0), 0.001); end
  def test_costs_z93; assert_in_delta(0, (worksheet.costs_z93||0), 0.001); end
  def test_costs_z166; assert_in_delta(0, (worksheet.costs_z166||0), 0.001); end
  def test_costs_aa24; assert_in_delta(0, (worksheet.costs_aa24||0), 0.001); end
  def test_costs_aa93; assert_in_delta(0, (worksheet.costs_aa93||0), 0.001); end
  def test_costs_aa166; assert_in_delta(0, (worksheet.costs_aa166||0), 0.001); end
  def test_costs_ab24; assert_in_epsilon(25.7284347711126, worksheet.costs_ab24, 0.001); end
  def test_costs_ab93; assert_in_epsilon(25.7284347711126, worksheet.costs_ab93, 0.001); end
  def test_costs_ab166; assert_in_epsilon(25.7284347711126, worksheet.costs_ab166, 0.001); end
  def test_costs_ac24; assert_in_epsilon(127.78512754284955, worksheet.costs_ac24, 0.001); end
  def test_costs_ac93; assert_in_epsilon(127.78512754284955, worksheet.costs_ac93, 0.001); end
  def test_costs_ac166; assert_in_epsilon(127.78512754284955, worksheet.costs_ac166, 0.001); end
  def test_costs_ad24; assert_in_epsilon(244.4676502144418, worksheet.costs_ad24, 0.001); end
  def test_costs_ad93; assert_in_epsilon(244.4676502144418, worksheet.costs_ad93, 0.001); end
  def test_costs_ad166; assert_in_epsilon(244.4676502144418, worksheet.costs_ad166, 0.001); end
  def test_costs_ae24; assert_in_epsilon(355.91302837487564, worksheet.costs_ae24, 0.001); end
  def test_costs_ae93; assert_in_epsilon(355.91302837487564, worksheet.costs_ae93, 0.001); end
  def test_costs_ae166; assert_in_epsilon(355.91302837487564, worksheet.costs_ae166, 0.001); end
  def test_costs_af24; assert_in_epsilon(446.25306821138804, worksheet.costs_af24, 0.001); end
  def test_costs_af93; assert_in_epsilon(446.25306821138804, worksheet.costs_af93, 0.001); end
  def test_costs_af166; assert_in_epsilon(446.25306821138804, worksheet.costs_af166, 0.001); end
  def test_costs_ag24; assert_in_epsilon(549.5384113030856, worksheet.costs_ag24, 0.001); end
  def test_costs_ag93; assert_in_epsilon(549.5384113030856, worksheet.costs_ag93, 0.001); end
  def test_costs_ag166; assert_in_epsilon(549.5384113030856, worksheet.costs_ag166, 0.001); end
  def test_costs_ah24; assert_in_epsilon(665.0133021249245, worksheet.costs_ah24, 0.001); end
  def test_costs_ah93; assert_in_epsilon(665.0133021249245, worksheet.costs_ah93, 0.001); end
  def test_costs_ah166; assert_in_epsilon(665.0133021249245, worksheet.costs_ah166, 0.001); end
  def test_costs_ai166; assert_in_epsilon(268.29989139363084, worksheet.costs_ai166, 0.001); end
  def test_costs_c167; assert_equal("Total", worksheet.costs_c167); end
  def test_costs_f13; assert_in_epsilon(468.52000000000004, worksheet.costs_f13, 0.001); end
  def test_costs_f82; assert_in_epsilon(486.20000000000005, worksheet.costs_f82, 0.001); end
  def test_costs_f162; assert_in_epsilon(477.36, worksheet.costs_f162, 0.001); end
  def test_costs_f167; assert_in_epsilon(1336.8554589041096, worksheet.costs_f167, 0.001); end
  def test_costs_g4; assert_in_epsilon(139.42782986411086, worksheet.costs_g4, 0.001); end
  def test_costs_g73; assert_in_epsilon(268.1304420463671, worksheet.costs_g73, 0.001); end
  def test_costs_g153; assert_in_epsilon(203.77913595523898, worksheet.costs_g153, 0.001); end
  def test_costs_g5; assert_in_delta(0, (worksheet.costs_g5||0), 0.001); end
  def test_costs_g74; assert_in_delta(0, (worksheet.costs_g74||0), 0.001); end
  def test_costs_g154; assert_in_delta(0, (worksheet.costs_g154||0), 0.001); end
  def test_costs_g6; assert_in_delta(0, (worksheet.costs_g6||0), 0.001); end
  def test_costs_g75; assert_in_delta(0, (worksheet.costs_g75||0), 0.001); end
  def test_costs_g155; assert_in_delta(0, (worksheet.costs_g155||0), 0.001); end
  def test_costs_g13; assert_in_epsilon(382.33, worksheet.costs_g13, 0.001); end
  def test_costs_g82; assert_in_epsilon(426.53, worksheet.costs_g82, 0.001); end
  def test_costs_g162; assert_in_epsilon(404.42999999999995, worksheet.costs_g162, 0.001); end
  def test_costs_g167; assert_in_epsilon(1537.8302340362472, worksheet.costs_g167, 0.001); end
  def test_costs_e167; assert_in_epsilon(14373.428464701783, worksheet.costs_e167, 0.001); end
  def test_costs_h4; assert_in_epsilon(339.87329871419365, worksheet.costs_h4, 0.001); end
  def test_costs_h73; assert_in_epsilon(516.9875131768747, worksheet.costs_h73, 0.001); end
  def test_costs_h153; assert_in_epsilon(428.4304059455342, worksheet.costs_h153, 0.001); end
  def test_costs_h5; assert_in_delta(0, (worksheet.costs_h5||0), 0.001); end
  def test_costs_h74; assert_in_delta(0, (worksheet.costs_h74||0), 0.001); end
  def test_costs_h154; assert_in_delta(0, (worksheet.costs_h154||0), 0.001); end
  def test_costs_h6; assert_in_delta(0, (worksheet.costs_h6||0), 0.001); end
  def test_costs_h75; assert_in_delta(0, (worksheet.costs_h75||0), 0.001); end
  def test_costs_h155; assert_in_delta(0, (worksheet.costs_h155||0), 0.001); end
  def test_costs_h13; assert_in_epsilon(376.875, worksheet.costs_h13, 0.001); end
  def test_costs_h82; assert_in_epsilon(466.875, worksheet.costs_h82, 0.001); end
  def test_costs_h162; assert_in_epsilon(421.875, worksheet.costs_h162, 0.001); end
  def test_costs_h167; assert_in_epsilon(1937.6376416476369, worksheet.costs_h167, 0.001); end
  def test_costs_i4; assert_in_epsilon(1307.8595972097564, worksheet.costs_i4, 0.001); end
  def test_costs_i73; assert_in_epsilon(1625.4939037798847, worksheet.costs_i73, 0.001); end
  def test_costs_i153; assert_in_epsilon(1466.6767504948207, worksheet.costs_i153, 0.001); end
  def test_costs_i5; assert_in_delta(0, (worksheet.costs_i5||0), 0.001); end
  def test_costs_i74; assert_in_delta(0, (worksheet.costs_i74||0), 0.001); end
  def test_costs_i154; assert_in_delta(0, (worksheet.costs_i154||0), 0.001); end
  def test_costs_i6; assert_in_delta(0, (worksheet.costs_i6||0), 0.001); end
  def test_costs_i75; assert_in_delta(0, (worksheet.costs_i75||0), 0.001); end
  def test_costs_i155; assert_in_delta(0, (worksheet.costs_i155||0), 0.001); end
  def test_costs_i13; assert_in_epsilon(344.375, worksheet.costs_i13, 0.001); end
  def test_costs_i82; assert_in_epsilon(503.87499999999994, worksheet.costs_i82, 0.001); end
  def test_costs_i162; assert_in_epsilon(424.125, worksheet.costs_i162, 0.001); end
  def test_costs_i167; assert_in_epsilon(3041.6064548614595, worksheet.costs_i167, 0.001); end
  def test_costs_j4; assert_in_epsilon(155.03579288174222, worksheet.costs_j4, 0.001); end
  def test_costs_j73; assert_in_epsilon(298.14575554181204, worksheet.costs_j73, 0.001); end
  def test_costs_j153; assert_in_epsilon(226.59077421177713, worksheet.costs_j153, 0.001); end
  def test_costs_j5; assert_in_delta(0, (worksheet.costs_j5||0), 0.001); end
  def test_costs_j74; assert_in_delta(0, (worksheet.costs_j74||0), 0.001); end
  def test_costs_j154; assert_in_delta(0, (worksheet.costs_j154||0), 0.001); end
  def test_costs_j6; assert_in_delta(0, (worksheet.costs_j6||0), 0.001); end
  def test_costs_j75; assert_in_delta(0, (worksheet.costs_j75||0), 0.001); end
  def test_costs_j155; assert_in_delta(0, (worksheet.costs_j155||0), 0.001); end
  def test_costs_j13; assert_in_epsilon(248.5, worksheet.costs_j13, 0.001); end
  def test_costs_j82; assert_in_epsilon(497, worksheet.costs_j82, 0.001); end
  def test_costs_j162; assert_in_epsilon(372.75, worksheet.costs_j162, 0.001); end
  def test_costs_j167; assert_in_epsilon(1853.6624219784374, worksheet.costs_j167, 0.001); end
  def test_costs_k4; assert_in_epsilon(148.70474894186182, worksheet.costs_k4, 0.001); end
  def test_costs_k73; assert_in_epsilon(285.970671042042, worksheet.costs_k73, 0.001); end
  def test_costs_k153; assert_in_epsilon(217.3377099919519, worksheet.costs_k153, 0.001); end
  def test_costs_k5; assert_in_delta(0, (worksheet.costs_k5||0), 0.001); end
  def test_costs_k74; assert_in_delta(0, (worksheet.costs_k74||0), 0.001); end
  def test_costs_k154; assert_in_delta(0, (worksheet.costs_k154||0), 0.001); end
  def test_costs_k6; assert_in_delta(0, (worksheet.costs_k6||0), 0.001); end
  def test_costs_k75; assert_in_delta(0, (worksheet.costs_k75||0), 0.001); end
  def test_costs_k155; assert_in_delta(0, (worksheet.costs_k155||0), 0.001); end
  def test_costs_k13; assert_in_epsilon(354.25, worksheet.costs_k13, 0.001); end
  def test_costs_k82; assert_in_epsilon(708.5, worksheet.costs_k82, 0.001); end
  def test_costs_k162; assert_in_epsilon(531.375, worksheet.costs_k162, 0.001); end
  def test_costs_k167; assert_in_epsilon(2029.1147715521709, worksheet.costs_k167, 0.001); end
  def test_costs_l4; assert_in_epsilon(150.73146654756962, worksheet.costs_l4, 0.001); end
  def test_costs_l73; assert_in_epsilon(289.8682048991724, worksheet.costs_l73, 0.001); end
  def test_costs_l153; assert_in_epsilon(220.29983572337102, worksheet.costs_l153, 0.001); end
  def test_costs_l5; assert_in_delta(0, (worksheet.costs_l5||0), 0.001); end
  def test_costs_l74; assert_in_delta(0, (worksheet.costs_l74||0), 0.001); end
  def test_costs_l154; assert_in_delta(0, (worksheet.costs_l154||0), 0.001); end
  def test_costs_l6; assert_in_delta(0, (worksheet.costs_l6||0), 0.001); end
  def test_costs_l75; assert_in_delta(0, (worksheet.costs_l75||0), 0.001); end
  def test_costs_l155; assert_in_delta(0, (worksheet.costs_l155||0), 0.001); end
  def test_costs_l13; assert_in_epsilon(441, worksheet.costs_l13, 0.001); end
  def test_costs_l82; assert_in_epsilon(882, worksheet.costs_l82, 0.001); end
  def test_costs_l162; assert_in_epsilon(661.5, worksheet.costs_l162, 0.001); end
  def test_costs_l167; assert_in_epsilon(2305.519175264768, worksheet.costs_l167, 0.001); end
  def test_costs_m4; assert_in_epsilon(311.9668914599965, worksheet.costs_m4, 0.001); end
  def test_costs_m73; assert_in_epsilon(413.84112174277436, worksheet.costs_m73, 0.001); end
  def test_costs_m153; assert_in_epsilon(362.9040066013854, worksheet.costs_m153, 0.001); end
  def test_costs_m5; assert_in_delta(0, (worksheet.costs_m5||0), 0.001); end
  def test_costs_m74; assert_in_delta(0, (worksheet.costs_m74||0), 0.001); end
  def test_costs_m154; assert_in_delta(0, (worksheet.costs_m154||0), 0.001); end
  def test_costs_m6; assert_in_delta(0, (worksheet.costs_m6||0), 0.001); end
  def test_costs_m75; assert_in_delta(0, (worksheet.costs_m75||0), 0.001); end
  def test_costs_m155; assert_in_delta(0, (worksheet.costs_m155||0), 0.001); end
  def test_costs_m13; assert_in_epsilon(508.75, worksheet.costs_m13, 0.001); end
  def test_costs_m82; assert_in_epsilon(1017.5, worksheet.costs_m82, 0.001); end
  def test_costs_m162; assert_in_epsilon(763.125, worksheet.costs_m162, 0.001); end
  def test_costs_m167; assert_in_epsilon(2811.5679988526367, worksheet.costs_m167, 0.001); end
  def test_costs_n4; assert_in_epsilon(1196.576019270097, worksheet.costs_n4, 0.001); end
  def test_costs_n73; assert_in_epsilon(1511.820185484462, worksheet.costs_n73, 0.001); end
  def test_costs_n153; assert_in_epsilon(1354.1981023772796, worksheet.costs_n153, 0.001); end
  def test_costs_n5; assert_in_delta(0, (worksheet.costs_n5||0), 0.001); end
  def test_costs_n74; assert_in_delta(0, (worksheet.costs_n74||0), 0.001); end
  def test_costs_n154; assert_in_delta(0, (worksheet.costs_n154||0), 0.001); end
  def test_costs_n6; assert_in_delta(0, (worksheet.costs_n6||0), 0.001); end
  def test_costs_n75; assert_in_delta(0, (worksheet.costs_n75||0), 0.001); end
  def test_costs_n155; assert_in_delta(0, (worksheet.costs_n155||0), 0.001); end
  def test_costs_n13; assert_in_epsilon(557.5, worksheet.costs_n13, 0.001); end
  def test_costs_n82; assert_in_epsilon(1115, worksheet.costs_n82, 0.001); end
  def test_costs_n162; assert_in_epsilon(836.25, worksheet.costs_n162, 0.001); end
  def test_costs_n167; assert_in_epsilon(4173.090738390218, worksheet.costs_n167, 0.001); end
  def test_costs_o167; assert_in_epsilon(2336.320543943076, worksheet.costs_o167, 0.001); end
  def test_costs_p4; assert_in_epsilon(122.42772347537294, worksheet.costs_p4, 0.001); end
  def test_costs_p73; assert_in_epsilon(147.40542228767293, worksheet.costs_p73, 0.001); end
  def test_costs_p153; assert_in_epsilon(134.91657288152294, worksheet.costs_p153, 0.001); end
  def test_costs_p6; assert_in_epsilon(524.2049999999999, worksheet.costs_p6, 0.001); end
  def test_costs_p75; assert_in_epsilon(640.6949999999999, worksheet.costs_p75, 0.001); end
  def test_costs_p155; assert_in_epsilon(582.4499999999999, worksheet.costs_p155, 0.001); end
  def test_costs_p167; assert_in_epsilon(806.5569728815228, worksheet.costs_p167, 0.001); end
  def test_costs_q4; assert_in_epsilon(66.9771835041704, worksheet.costs_q4, 0.001); end
  def test_costs_q73; assert_in_epsilon(82.38652218542559, worksheet.costs_q73, 0.001); end
  def test_costs_q153; assert_in_epsilon(74.68185284479799, worksheet.costs_q153, 0.001); end
  def test_costs_q5; assert_in_delta(0, (worksheet.costs_q5||0), 0.001); end
  def test_costs_q74; assert_in_delta(0, (worksheet.costs_q74||0), 0.001); end
  def test_costs_q154; assert_in_delta(0, (worksheet.costs_q154||0), 0.001); end
  def test_costs_q6; assert_in_epsilon(524.2049999999999, worksheet.costs_q6, 0.001); end
  def test_costs_q75; assert_in_epsilon(640.6949999999999, worksheet.costs_q75, 0.001); end
  def test_costs_q155; assert_in_epsilon(582.4499999999999, worksheet.costs_q155, 0.001); end
  def test_costs_q13; assert_in_epsilon(40.027875, worksheet.costs_q13, 0.001); end
  def test_costs_q82; assert_in_epsilon(44.655375, worksheet.costs_q82, 0.001); end
  def test_costs_q162; assert_in_epsilon(42.341625, worksheet.costs_q162, 0.001); end
  def test_costs_q167; assert_in_epsilon(902.4713214762855, worksheet.costs_q167, 0.001); end
  def test_costs_r4; assert_in_epsilon(92.61541727147531, worksheet.costs_r4, 0.001); end
  def test_costs_r73; assert_in_epsilon(113.8660117191341, worksheet.costs_r73, 0.001); end
  def test_costs_r153; assert_in_epsilon(103.2407144953047, worksheet.costs_r153, 0.001); end
  def test_costs_r5; assert_in_delta(0, (worksheet.costs_r5||0), 0.001); end
  def test_costs_r74; assert_in_delta(0, (worksheet.costs_r74||0), 0.001); end
  def test_costs_r154; assert_in_delta(0, (worksheet.costs_r154||0), 0.001); end
  def test_costs_r6; assert_in_epsilon(449.90999999999997, worksheet.costs_r6, 0.001); end
  def test_costs_r75; assert_in_epsilon(549.89, worksheet.costs_r75, 0.001); end
  def test_costs_r155; assert_in_epsilon(499.9, worksheet.costs_r155, 0.001); end
  def test_costs_r13; assert_in_epsilon(45.81125, worksheet.costs_r13, 0.001); end
  def test_costs_r82; assert_in_epsilon(56.75125, worksheet.costs_r82, 0.001); end
  def test_costs_r162; assert_in_epsilon(51.28125, worksheet.costs_r162, 0.001); end
  def test_costs_r167; assert_in_epsilon(963.6105207280833, worksheet.costs_r167, 0.001); end
  def test_costs_s4; assert_in_epsilon(250.70848090437062, worksheet.costs_s4, 0.001); end
  def test_costs_s73; assert_in_epsilon(306.5990275323636, worksheet.costs_s73, 0.001); end
  def test_costs_s153; assert_in_epsilon(278.6537542183671, worksheet.costs_s153, 0.001); end
  def test_costs_s5; assert_in_delta(0, (worksheet.costs_s5||0), 0.001); end
  def test_costs_s74; assert_in_delta(0, (worksheet.costs_s74||0), 0.001); end
  def test_costs_s154; assert_in_delta(0, (worksheet.costs_s154||0), 0.001); end
  def test_costs_s6; assert_in_delta(0, (worksheet.costs_s6||0), 0.001); end
  def test_costs_s75; assert_in_delta(0, (worksheet.costs_s75||0), 0.001); end
  def test_costs_s155; assert_in_delta(0, (worksheet.costs_s155||0), 0.001); end
  def test_costs_s13; assert_in_epsilon(45.8375, worksheet.costs_s13, 0.001); end
  def test_costs_s82; assert_in_epsilon(67.06749999999998, worksheet.costs_s82, 0.001); end
  def test_costs_s162; assert_in_epsilon(56.452499999999986, worksheet.costs_s162, 0.001); end
  def test_costs_s167; assert_in_epsilon(750.0971085523557, worksheet.costs_s167, 0.001); end
  def test_costs_t4; assert_in_epsilon(227.97945668332264, worksheet.costs_t4, 0.001); end
  def test_costs_t73; assert_in_epsilon(279.10408053143436, worksheet.costs_t73, 0.001); end
  def test_costs_t153; assert_in_epsilon(253.54176860737851, worksheet.costs_t153, 0.001); end
  def test_costs_t5; assert_in_delta(0, (worksheet.costs_t5||0), 0.001); end
  def test_costs_t74; assert_in_delta(0, (worksheet.costs_t74||0), 0.001); end
  def test_costs_t154; assert_in_delta(0, (worksheet.costs_t154||0), 0.001); end
  def test_costs_t6; assert_in_delta(0, (worksheet.costs_t6||0), 0.001); end
  def test_costs_t75; assert_in_delta(0, (worksheet.costs_t75||0), 0.001); end
  def test_costs_t155; assert_in_delta(0, (worksheet.costs_t155||0), 0.001); end
  def test_costs_t13; assert_in_epsilon(37.169999999999995, worksheet.costs_t13, 0.001); end
  def test_costs_t82; assert_in_epsilon(74.33999999999999, worksheet.costs_t82, 0.001); end
  def test_costs_t162; assert_in_epsilon(55.754999999999995, worksheet.costs_t162, 0.001); end
  def test_costs_t167; assert_in_epsilon(826.5350698317932, worksheet.costs_t167, 0.001); end
  def test_costs_u4; assert_in_epsilon(207.58530951472673, worksheet.costs_u4, 0.001); end
  def test_costs_u73; assert_in_epsilon(254.4194318589541, worksheet.costs_u73, 0.001); end
  def test_costs_u153; assert_in_epsilon(231.00237068684044, worksheet.costs_u153, 0.001); end
  def test_costs_u5; assert_in_delta(0, (worksheet.costs_u5||0), 0.001); end
  def test_costs_u74; assert_in_delta(0, (worksheet.costs_u74||0), 0.001); end
  def test_costs_u154; assert_in_delta(0, (worksheet.costs_u154||0), 0.001); end
  def test_costs_u6; assert_in_delta(0, (worksheet.costs_u6||0), 0.001); end
  def test_costs_u75; assert_in_delta(0, (worksheet.costs_u75||0), 0.001); end
  def test_costs_u155; assert_in_delta(0, (worksheet.costs_u155||0), 0.001); end
  def test_costs_u13; assert_in_epsilon(40.4235, worksheet.costs_u13, 0.001); end
  def test_costs_u82; assert_in_epsilon(80.847, worksheet.costs_u82, 0.001); end
  def test_costs_u162; assert_in_epsilon(60.63525, worksheet.costs_u162, 0.001); end
  def test_costs_u167; assert_in_epsilon(908.8401316937592, worksheet.costs_u167, 0.001); end
  def test_costs_v4; assert_in_epsilon(192.53302573733222, worksheet.costs_v4, 0.001); end
  def test_costs_v73; assert_in_epsilon(236.23917522946198, worksheet.costs_v73, 0.001); end
  def test_costs_v153; assert_in_epsilon(214.38610048339712, worksheet.costs_v153, 0.001); end
  def test_costs_v5; assert_in_delta(0, (worksheet.costs_v5||0), 0.001); end
  def test_costs_v74; assert_in_delta(0, (worksheet.costs_v74||0), 0.001); end
  def test_costs_v154; assert_in_delta(0, (worksheet.costs_v154||0), 0.001); end
  def test_costs_v6; assert_in_delta(0, (worksheet.costs_v6||0), 0.001); end
  def test_costs_v75; assert_in_delta(0, (worksheet.costs_v75||0), 0.001); end
  def test_costs_v155; assert_in_delta(0, (worksheet.costs_v155||0), 0.001); end
  def test_costs_v13; assert_in_epsilon(48.36, worksheet.costs_v13, 0.001); end
  def test_costs_v82; assert_in_epsilon(96.72, worksheet.costs_v82, 0.001); end
  def test_costs_v162; assert_in_epsilon(72.53999999999999, worksheet.costs_v162, 0.001); end
  def test_costs_v167; assert_in_epsilon(971.4260356311557, worksheet.costs_v167, 0.001); end
  def test_costs_w4; assert_in_epsilon(166.23955652058453, worksheet.costs_w4, 0.001); end
  def test_costs_w73; assert_in_epsilon(204.36785369677807, worksheet.costs_w73, 0.001); end
  def test_costs_w153; assert_in_epsilon(185.3037051086813, worksheet.costs_w153, 0.001); end
  def test_costs_w5; assert_in_delta(0, (worksheet.costs_w5||0), 0.001); end
  def test_costs_w74; assert_in_delta(0, (worksheet.costs_w74||0), 0.001); end
  def test_costs_w154; assert_in_delta(0, (worksheet.costs_w154||0), 0.001); end
  def test_costs_w6; assert_in_delta(0, (worksheet.costs_w6||0), 0.001); end
  def test_costs_w75; assert_in_delta(0, (worksheet.costs_w75||0), 0.001); end
  def test_costs_w155; assert_in_delta(0, (worksheet.costs_w155||0), 0.001); end
  def test_costs_w13; assert_in_epsilon(59.680499999999995, worksheet.costs_w13, 0.001); end
  def test_costs_w82; assert_in_epsilon(119.36099999999999, worksheet.costs_w82, 0.001); end
  def test_costs_w162; assert_in_epsilon(89.52074999999999, worksheet.costs_w162, 0.001); end
  def test_costs_w167; assert_in_epsilon(1048.0012084016225, worksheet.costs_w167, 0.001); end
  def test_costs_x4; assert_in_epsilon(131.95462354731848, worksheet.costs_x4, 0.001); end
  def test_costs_x73; assert_in_epsilon(162.76446306741875, worksheet.costs_x73, 0.001); end
  def test_costs_x153; assert_in_epsilon(147.3595433073686, worksheet.costs_x153, 0.001); end
  def test_costs_x5; assert_in_delta(0, (worksheet.costs_x5||0), 0.001); end
  def test_costs_x74; assert_in_delta(0, (worksheet.costs_x74||0), 0.001); end
  def test_costs_x154; assert_in_delta(0, (worksheet.costs_x154||0), 0.001); end
  def test_costs_x6; assert_in_delta(0, (worksheet.costs_x6||0), 0.001); end
  def test_costs_x75; assert_in_delta(0, (worksheet.costs_x75||0), 0.001); end
  def test_costs_x155; assert_in_delta(0, (worksheet.costs_x155||0), 0.001); end
  def test_costs_x13; assert_in_epsilon(71.755, worksheet.costs_x13, 0.001); end
  def test_costs_x82; assert_in_epsilon(143.51, worksheet.costs_x82, 0.001); end
  def test_costs_x162; assert_in_epsilon(107.6325, worksheet.costs_x162, 0.001); end
  def test_costs_x167; assert_in_epsilon(1141.1967451955593, worksheet.costs_x167, 0.001); end
  def test_costs_y167; assert_in_epsilon(924.3039015991263, worksheet.costs_y167, 0.001); end
  def test_costs_z4; assert_in_epsilon(1896.1779082104529, worksheet.costs_z4, 0.001); end
  def test_costs_z73; assert_in_epsilon(1896.1779082104529, worksheet.costs_z73, 0.001); end
  def test_costs_z153; assert_in_epsilon(1896.1779082104529, worksheet.costs_z153, 0.001); end
  def test_costs_z5; assert_in_delta(0, (worksheet.costs_z5||0), 0.001); end
  def test_costs_z74; assert_in_delta(0, (worksheet.costs_z74||0), 0.001); end
  def test_costs_z154; assert_in_delta(0, (worksheet.costs_z154||0), 0.001); end
  def test_costs_z6; assert_in_epsilon(335.2439849219999, worksheet.costs_z6, 0.001); end
  def test_costs_z75; assert_in_epsilon(431.0279806139999, worksheet.costs_z75, 0.001); end
  def test_costs_z155; assert_in_epsilon(383.1359827679999, worksheet.costs_z155, 0.001); end
  def test_costs_z167; assert_in_epsilon(2279.313890978453, worksheet.costs_z167, 0.001); end
  def test_costs_aa4; assert_in_epsilon(594.1048082028577, worksheet.costs_aa4, 0.001); end
  def test_costs_aa73; assert_in_epsilon(803.7888581568072, worksheet.costs_aa73, 0.001); end
  def test_costs_aa153; assert_in_epsilon(698.9468331798325, worksheet.costs_aa153, 0.001); end
  def test_costs_aa5; assert_in_delta(0, (worksheet.costs_aa5||0), 0.001); end
  def test_costs_aa74; assert_in_delta(0, (worksheet.costs_aa74||0), 0.001); end
  def test_costs_aa154; assert_in_delta(0, (worksheet.costs_aa154||0), 0.001); end
  def test_costs_aa6; assert_in_epsilon(335.2439849219999, worksheet.costs_aa6, 0.001); end
  def test_costs_aa75; assert_in_epsilon(431.0279806139999, worksheet.costs_aa75, 0.001); end
  def test_costs_aa155; assert_in_epsilon(383.1359827679999, worksheet.costs_aa155, 0.001); end
  def test_costs_aa13; assert_in_delta(0, (worksheet.costs_aa13||0), 0.001); end
  def test_costs_aa82; assert_in_delta(0, (worksheet.costs_aa82||0), 0.001); end
  def test_costs_aa162; assert_in_delta(0, (worksheet.costs_aa162||0), 0.001); end
  def test_costs_aa167; assert_in_epsilon(1107.6765659478324, worksheet.costs_aa167, 0.001); end
  def test_costs_ab4; assert_in_epsilon(866.4113121468023, worksheet.costs_ab4, 0.001); end
  def test_costs_ab73; assert_in_epsilon(1172.2035399633207, worksheet.costs_ab73, 0.001); end
  def test_costs_ab153; assert_in_epsilon(1019.3074260550616, worksheet.costs_ab153, 0.001); end
  def test_costs_ab5; assert_in_delta(0, (worksheet.costs_ab5||0), 0.001); end
  def test_costs_ab74; assert_in_delta(0, (worksheet.costs_ab74||0), 0.001); end
  def test_costs_ab154; assert_in_delta(0, (worksheet.costs_ab154||0), 0.001); end
  def test_costs_ab6; assert_in_epsilon(287.730222444, worksheet.costs_ab6, 0.001); end
  def test_costs_ab75; assert_in_epsilon(369.938857428, worksheet.costs_ab75, 0.001); end
  def test_costs_ab155; assert_in_epsilon(328.834539936, worksheet.costs_ab155, 0.001); end
  def test_costs_ab13; assert_in_delta(0, (worksheet.costs_ab13||0), 0.001); end
  def test_costs_ab82; assert_in_delta(0, (worksheet.costs_ab82||0), 0.001); end
  def test_costs_ab162; assert_in_delta(0, (worksheet.costs_ab162||0), 0.001); end
  def test_costs_ab167; assert_in_epsilon(1428.9954007621743, worksheet.costs_ab167, 0.001); end
  def test_costs_ac4; assert_in_epsilon(2710.938073294717, worksheet.costs_ac4, 0.001); end
  def test_costs_ac73; assert_in_epsilon(3667.7397462222643, worksheet.costs_ac73, 0.001); end
  def test_costs_ac153; assert_in_epsilon(3189.3389097584904, worksheet.costs_ac153, 0.001); end
  def test_costs_ac5; assert_in_delta(0, (worksheet.costs_ac5||0), 0.001); end
  def test_costs_ac74; assert_in_delta(0, (worksheet.costs_ac74||0), 0.001); end
  def test_costs_ac154; assert_in_delta(0, (worksheet.costs_ac154||0), 0.001); end
  def test_costs_ac6; assert_in_delta(0, (worksheet.costs_ac6||0), 0.001); end
  def test_costs_ac75; assert_in_delta(0, (worksheet.costs_ac75||0), 0.001); end
  def test_costs_ac155; assert_in_delta(0, (worksheet.costs_ac155||0), 0.001); end
  def test_costs_ac13; assert_in_delta(0, (worksheet.costs_ac13||0), 0.001); end
  def test_costs_ac82; assert_in_delta(0, (worksheet.costs_ac82||0), 0.001); end
  def test_costs_ac162; assert_in_delta(0, (worksheet.costs_ac162||0), 0.001); end
  def test_costs_ac167; assert_in_epsilon(3401.04200605134, worksheet.costs_ac167, 0.001); end
  def test_costs_ad4; assert_in_epsilon(2452.666906916293, worksheet.costs_ad4, 0.001); end
  def test_costs_ad73; assert_in_epsilon(3318.3140505338083, worksheet.costs_ad73, 0.001); end
  def test_costs_ad153; assert_in_epsilon(2885.4904787250507, worksheet.costs_ad153, 0.001); end
  def test_costs_ad5; assert_in_delta(0, (worksheet.costs_ad5||0), 0.001); end
  def test_costs_ad74; assert_in_delta(0, (worksheet.costs_ad74||0), 0.001); end
  def test_costs_ad154; assert_in_delta(0, (worksheet.costs_ad154||0), 0.001); end
  def test_costs_ad6; assert_in_delta(0, (worksheet.costs_ad6||0), 0.001); end
  def test_costs_ad75; assert_in_delta(0, (worksheet.costs_ad75||0), 0.001); end
  def test_costs_ad155; assert_in_delta(0, (worksheet.costs_ad155||0), 0.001); end
  def test_costs_ad13; assert_in_delta(0, (worksheet.costs_ad13||0), 0.001); end
  def test_costs_ad82; assert_in_delta(0, (worksheet.costs_ad82||0), 0.001); end
  def test_costs_ad162; assert_in_delta(0, (worksheet.costs_ad162||0), 0.001); end
  def test_costs_ad167; assert_in_epsilon(3243.4893789394923, worksheet.costs_ad167, 0.001); end
  def test_costs_ae4; assert_in_epsilon(2140.128104142096, worksheet.costs_ae4, 0.001); end
  def test_costs_ae73; assert_in_epsilon(2895.4674350157766, worksheet.costs_ae73, 0.001); end
  def test_costs_ae153; assert_in_epsilon(2517.7977695789364, worksheet.costs_ae153, 0.001); end
  def test_costs_ae5; assert_in_delta(0, (worksheet.costs_ae5||0), 0.001); end
  def test_costs_ae74; assert_in_delta(0, (worksheet.costs_ae74||0), 0.001); end
  def test_costs_ae154; assert_in_delta(0, (worksheet.costs_ae154||0), 0.001); end
  def test_costs_ae6; assert_in_delta(0, (worksheet.costs_ae6||0), 0.001); end
  def test_costs_ae75; assert_in_delta(0, (worksheet.costs_ae75||0), 0.001); end
  def test_costs_ae155; assert_in_delta(0, (worksheet.costs_ae155||0), 0.001); end
  def test_costs_ae13; assert_in_delta(0, (worksheet.costs_ae13||0), 0.001); end
  def test_costs_ae82; assert_in_delta(0, (worksheet.costs_ae82||0), 0.001); end
  def test_costs_ae162; assert_in_delta(0, (worksheet.costs_ae162||0), 0.001); end
  def test_costs_ae167; assert_in_epsilon(3012.753766703812, worksheet.costs_ae167, 0.001); end
  def test_costs_af4; assert_in_epsilon(1921.0634305569938, worksheet.costs_af4, 0.001); end
  def test_costs_af73; assert_in_epsilon(2599.0858178124035, worksheet.costs_af73, 0.001); end
  def test_costs_af153; assert_in_epsilon(2260.0746241846987, worksheet.costs_af153, 0.001); end
  def test_costs_af5; assert_in_delta(0, (worksheet.costs_af5||0), 0.001); end
  def test_costs_af74; assert_in_delta(0, (worksheet.costs_af74||0), 0.001); end
  def test_costs_af154; assert_in_delta(0, (worksheet.costs_af154||0), 0.001); end
  def test_costs_af6; assert_in_delta(0, (worksheet.costs_af6||0), 0.001); end
  def test_costs_af75; assert_in_delta(0, (worksheet.costs_af75||0), 0.001); end
  def test_costs_af155; assert_in_delta(0, (worksheet.costs_af155||0), 0.001); end
  def test_costs_af13; assert_in_delta(0, (worksheet.costs_af13||0), 0.001); end
  def test_costs_af82; assert_in_delta(0, (worksheet.costs_af82||0), 0.001); end
  def test_costs_af162; assert_in_delta(0, (worksheet.costs_af162||0), 0.001); end
  def test_costs_af167; assert_in_epsilon(2869.7339423960866, worksheet.costs_af167, 0.001); end
  def test_costs_ag4; assert_in_epsilon(1623.8711403057812, worksheet.costs_ag4, 0.001); end
  def test_costs_ag73; assert_in_epsilon(2197.0021310019392, worksheet.costs_ag73, 0.001); end
  def test_costs_ag153; assert_in_epsilon(1910.4366356538603, worksheet.costs_ag153, 0.001); end
  def test_costs_ag5; assert_in_delta(0, (worksheet.costs_ag5||0), 0.001); end
  def test_costs_ag74; assert_in_delta(0, (worksheet.costs_ag74||0), 0.001); end
  def test_costs_ag154; assert_in_delta(0, (worksheet.costs_ag154||0), 0.001); end
  def test_costs_ag6; assert_in_delta(0, (worksheet.costs_ag6||0), 0.001); end
  def test_costs_ag75; assert_in_delta(0, (worksheet.costs_ag75||0), 0.001); end
  def test_costs_ag155; assert_in_delta(0, (worksheet.costs_ag155||0), 0.001); end
  def test_costs_ag13; assert_in_delta(0, (worksheet.costs_ag13||0), 0.001); end
  def test_costs_ag82; assert_in_delta(0, (worksheet.costs_ag82||0), 0.001); end
  def test_costs_ag162; assert_in_delta(0, (worksheet.costs_ag162||0), 0.001); end
  def test_costs_ag167; assert_in_epsilon(2648.318796956946, worksheet.costs_ag167, 0.001); end
  def test_costs_ah4; assert_in_epsilon(1301.983715012722, worksheet.costs_ah4, 0.001); end
  def test_costs_ah73; assert_in_epsilon(1761.5073791348595, worksheet.costs_ah73, 0.001); end
  def test_costs_ah153; assert_in_epsilon(1531.745547073791, worksheet.costs_ah153, 0.001); end
  def test_costs_ah5; assert_in_delta(0, (worksheet.costs_ah5||0), 0.001); end
  def test_costs_ah74; assert_in_delta(0, (worksheet.costs_ah74||0), 0.001); end
  def test_costs_ah154; assert_in_delta(0, (worksheet.costs_ah154||0), 0.001); end
  def test_costs_ah6; assert_in_delta(0, (worksheet.costs_ah6||0), 0.001); end
  def test_costs_ah75; assert_in_delta(0, (worksheet.costs_ah75||0), 0.001); end
  def test_costs_ah155; assert_in_delta(0, (worksheet.costs_ah155||0), 0.001); end
  def test_costs_ah13; assert_in_delta(0, (worksheet.costs_ah13||0), 0.001); end
  def test_costs_ah82; assert_in_delta(0, (worksheet.costs_ah82||0), 0.001); end
  def test_costs_ah162; assert_in_delta(0, (worksheet.costs_ah162||0), 0.001); end
  def test_costs_ah167; assert_in_epsilon(2409.3838491987153, worksheet.costs_ah167, 0.001); end
  def test_costs_ai167; assert_in_epsilon(2488.96751088165, worksheet.costs_ai167, 0.001); end
  def test_costs_aj4; assert_in_epsilon(2018.6056316858258, worksheet.costs_aj4, 0.001); end
  def test_costs_aj73; assert_in_epsilon(2043.5833304981259, worksheet.costs_aj73, 0.001); end
  def test_costs_aj153; assert_in_epsilon(2031.094481091976, worksheet.costs_aj153, 0.001); end
  def test_costs_aj5; assert_in_delta(0, (worksheet.costs_aj5||0), 0.001); end
  def test_costs_aj74; assert_in_delta(0, (worksheet.costs_aj74||0), 0.001); end
  def test_costs_aj154; assert_in_delta(0, (worksheet.costs_aj154||0), 0.001); end
  def test_costs_aj6; assert_in_epsilon(859.4489849219999, worksheet.costs_aj6, 0.001); end
  def test_costs_aj75; assert_in_epsilon(1071.7229806139999, worksheet.costs_aj75, 0.001); end
  def test_costs_aj155; assert_in_epsilon(965.5859827679999, worksheet.costs_aj155, 0.001); end
  def test_costs_aj7; assert_in_epsilon(350.5960502283105, worksheet.costs_aj7, 0.001); end
  def test_costs_aj76; assert_in_epsilon(418.01836757990867, worksheet.costs_aj76, 0.001); end
  def test_costs_aj156; assert_in_epsilon(384.3072089041096, worksheet.costs_aj156, 0.001); end
  def test_costs_aj8; assert_in_epsilon(501.696, worksheet.costs_aj8, 0.001); end
  def test_costs_aj77; assert_in_epsilon(529.5680000000001, worksheet.costs_aj77, 0.001); end
  def test_costs_aj157; assert_in_epsilon(515.6320000000001, worksheet.costs_aj157, 0.001); end
  def test_costs_aj9; assert_in_epsilon(8.25, worksheet.costs_aj9, 0.001); end
  def test_costs_aj78; assert_in_epsilon(11, worksheet.costs_aj78, 0.001); end
  def test_costs_aj158; assert_in_epsilon(9.625, worksheet.costs_aj158, 0.001); end
  def test_costs_aj11; assert_in_delta(0, (worksheet.costs_aj11||0), 0.001); end
  def test_costs_aj80; assert_in_delta(0, (worksheet.costs_aj80||0), 0.001); end
  def test_costs_aj160; assert_in_delta(0, (worksheet.costs_aj160||0), 0.001); end
  def test_costs_aj13; assert_in_epsilon(494.1455, worksheet.costs_aj13, 0.001); end
  def test_costs_aj82; assert_in_epsilon(512.7925, worksheet.costs_aj82, 0.001); end
  def test_costs_aj162; assert_in_epsilon(503.46900000000005, worksheet.costs_aj162, 0.001); end
  def test_costs_aj21; assert_in_delta(0, (worksheet.costs_aj21||0), 0.001); end
  def test_costs_aj90; assert_in_delta(0, (worksheet.costs_aj90||0), 0.001); end
  def test_costs_aj163; assert_in_delta(0, (worksheet.costs_aj163||0), 0.001); end
  def test_costs_aj22; assert_in_delta(0, (worksheet.costs_aj22||0), 0.001); end
  def test_costs_aj91; assert_in_delta(0, (worksheet.costs_aj91||0), 0.001); end
  def test_costs_aj164; assert_in_delta(0, (worksheet.costs_aj164||0), 0.001); end
  def test_costs_aj23; assert_in_delta(0, (worksheet.costs_aj23||0), 0.001); end
  def test_costs_aj92; assert_in_delta(0, (worksheet.costs_aj92||0), 0.001); end
  def test_costs_aj165; assert_in_delta(0, (worksheet.costs_aj165||0), 0.001); end
  def test_costs_aj24; assert_in_epsilon(9.759487500000002, worksheet.costs_aj24, 0.001); end
  def test_costs_aj93; assert_in_epsilon(16.2658125, worksheet.costs_aj93, 0.001); end
  def test_costs_aj166; assert_in_epsilon(13.01265, worksheet.costs_aj166, 0.001); end
  def test_costs_aj167; assert_in_epsilon(4422.726322764086, worksheet.costs_aj167, 0.001); end
  def test_costs_ak4; assert_in_epsilon(800.509821571139, worksheet.costs_ak4, 0.001); end
  def test_costs_ak73; assert_in_epsilon(1154.3058223885998, worksheet.costs_ak73, 0.001); end
  def test_costs_ak153; assert_in_epsilon(977.4078219798694, worksheet.costs_ak153, 0.001); end
  def test_costs_ak5; assert_in_delta(0, (worksheet.costs_ak5||0), 0.001); end
  def test_costs_ak74; assert_in_delta(0, (worksheet.costs_ak74||0), 0.001); end
  def test_costs_ak154; assert_in_delta(0, (worksheet.costs_ak154||0), 0.001); end
  def test_costs_ak6; assert_in_epsilon(859.4489849219999, worksheet.costs_ak6, 0.001); end
  def test_costs_ak75; assert_in_epsilon(1071.7229806139999, worksheet.costs_ak75, 0.001); end
  def test_costs_ak155; assert_in_epsilon(965.5859827679999, worksheet.costs_ak155, 0.001); end
  def test_costs_ak7; assert_in_epsilon(361.8680136986301, worksheet.costs_ak7, 0.001); end
  def test_costs_ak76; assert_in_epsilon(441.02664169520546, worksheet.costs_ak76, 0.001); end
  def test_costs_ak156; assert_in_epsilon(401.4473276969178, worksheet.costs_ak156, 0.001); end
  def test_costs_ak8; assert_in_epsilon(493.5065625, worksheet.costs_ak8, 0.001); end
  def test_costs_ak77; assert_in_epsilon(552.25734375, worksheet.costs_ak77, 0.001); end
  def test_costs_ak157; assert_in_epsilon(522.881953125, worksheet.costs_ak157, 0.001); end
  def test_costs_ak9; assert_in_epsilon(8.704095121612736, worksheet.costs_ak9, 0.001); end
  def test_costs_ak78; assert_in_epsilon(11.605460162150315, worksheet.costs_ak78, 0.001); end
  def test_costs_ak158; assert_in_epsilon(10.154777641881527, worksheet.costs_ak158, 0.001); end
  def test_costs_ak11; assert_in_epsilon(2.022042593599875, worksheet.costs_ak11, 0.001); end
  def test_costs_ak80; assert_in_epsilon(2.4713853921776243, worksheet.costs_ak80, 0.001); end
  def test_costs_ak160; assert_in_epsilon(2.2467139928887496, worksheet.costs_ak160, 0.001); end
  def test_costs_ak13; assert_in_epsilon(422.357875, worksheet.costs_ak13, 0.001); end
  def test_costs_ak82; assert_in_epsilon(471.18537499999996, worksheet.costs_ak82, 0.001); end
  def test_costs_ak162; assert_in_epsilon(446.771625, worksheet.costs_ak162, 0.001); end
  def test_costs_ak21; assert_in_epsilon(23.4609375, worksheet.costs_ak21, 0.001); end
  def test_costs_ak90; assert_in_epsilon(27.7265625, worksheet.costs_ak90, 0.001); end
  def test_costs_ak163; assert_in_epsilon(25.59375, worksheet.costs_ak163, 0.001); end
  def test_costs_ak22; assert_in_delta(0, (worksheet.costs_ak22||0), 0.001); end
  def test_costs_ak91; assert_in_delta(0, (worksheet.costs_ak91||0), 0.001); end
  def test_costs_ak164; assert_in_delta(0, (worksheet.costs_ak164||0), 0.001); end
  def test_costs_ak23; assert_in_epsilon(52.591172127903945, worksheet.costs_ak23, 0.001); end
  def test_costs_ak92; assert_in_epsilon(157.77351638371192, worksheet.costs_ak92, 0.001); end
  def test_costs_ak165; assert_in_epsilon(105.18234425580793, worksheet.costs_ak165, 0.001); end
  def test_costs_ak24; assert_in_epsilon(68.02936875000003, worksheet.costs_ak24, 0.001); end
  def test_costs_ak93; assert_in_epsilon(113.38228125000003, worksheet.costs_ak93, 0.001); end
  def test_costs_ak166; assert_in_epsilon(90.70582500000003, worksheet.costs_ak166, 0.001); end
  def test_costs_ak167; assert_in_epsilon(3547.978121460365, worksheet.costs_ak167, 0.001); end
  def test_costs_al4; assert_in_epsilon(1298.900028132471, worksheet.costs_al4, 0.001); end
  def test_costs_al73; assert_in_epsilon(1803.0570648593296, worksheet.costs_al73, 0.001); end
  def test_costs_al153; assert_in_epsilon(1550.9785464959004, worksheet.costs_al153, 0.001); end
  def test_costs_al5; assert_in_delta(0, (worksheet.costs_al5||0), 0.001); end
  def test_costs_al74; assert_in_delta(0, (worksheet.costs_al74||0), 0.001); end
  def test_costs_al154; assert_in_delta(0, (worksheet.costs_al154||0), 0.001); end
  def test_costs_al6; assert_in_epsilon(737.640222444, worksheet.costs_al6, 0.001); end
  def test_costs_al75; assert_in_epsilon(919.828857428, worksheet.costs_al75, 0.001); end
  def test_costs_al155; assert_in_epsilon(828.7345399359999, worksheet.costs_al155, 0.001); end
  def test_costs_al7; assert_in_epsilon(374.004897260274, worksheet.costs_al7, 0.001); end
  def test_costs_al76; assert_in_epsilon(467.5061215753425, worksheet.costs_al76, 0.001); end
  def test_costs_al156; assert_in_epsilon(420.75550941780824, worksheet.costs_al156, 0.001); end
  def test_costs_al8; assert_in_epsilon(497.8831875000001, worksheet.costs_al8, 0.001); end
  def test_costs_al77; assert_in_epsilon(599.3038368055555, worksheet.costs_al77, 0.001); end
  def test_costs_al157; assert_in_epsilon(548.5935121527777, worksheet.costs_al157, 0.001); end
  def test_costs_al9; assert_in_epsilon(8.23899150515975, worksheet.costs_al9, 0.001); end
  def test_costs_al78; assert_in_epsilon(10.985322006879668, worksheet.costs_al78, 0.001); end
  def test_costs_al158; assert_in_epsilon(9.61215675601971, worksheet.costs_al158, 0.001); end
  def test_costs_al11; assert_in_epsilon(104.36469751834012, worksheet.costs_al11, 0.001); end
  def test_costs_al80; assert_in_epsilon(127.55685252241567, worksheet.costs_al80, 0.001); end
  def test_costs_al160; assert_in_epsilon(115.9607750203779, worksheet.costs_al160, 0.001); end
  def test_costs_al13; assert_in_epsilon(422.68625, worksheet.costs_al13, 0.001); end
  def test_costs_al82; assert_in_epsilon(523.62625, worksheet.costs_al82, 0.001); end
  def test_costs_al162; assert_in_epsilon(473.15625, worksheet.costs_al162, 0.001); end
  def test_costs_al21; assert_in_epsilon(46.59375, worksheet.costs_al21, 0.001); end
  def test_costs_al90; assert_in_epsilon(63.65625, worksheet.costs_al90, 0.001); end
  def test_costs_al163; assert_in_epsilon(55.125, worksheet.costs_al163, 0.001); end
  def test_costs_al22; assert_in_delta(0, (worksheet.costs_al22||0), 0.001); end
  def test_costs_al91; assert_in_delta(0, (worksheet.costs_al91||0), 0.001); end
  def test_costs_al164; assert_in_delta(0, (worksheet.costs_al164||0), 0.001); end
  def test_costs_al23; assert_in_epsilon(92.70343743060336, worksheet.costs_al23, 0.001); end
  def test_costs_al92; assert_in_epsilon(278.11031229181003, worksheet.costs_al92, 0.001); end
  def test_costs_al165; assert_in_epsilon(185.4068748612067, worksheet.costs_al165, 0.001); end
  def test_costs_al24; assert_in_epsilon(114.12719756557938, worksheet.costs_al24, 0.001); end
  def test_costs_al93; assert_in_epsilon(169.71359943002747, worksheet.costs_al93, 0.001); end
  def test_costs_al166; assert_in_epsilon(141.92039849780343, worksheet.costs_al166, 0.001); end
  def test_costs_al167; assert_in_epsilon(4330.243563137894, worksheet.costs_al167, 0.001); end
  def test_costs_am4; assert_in_epsilon(4269.506151408844, worksheet.costs_am4, 0.001); end
  def test_costs_am73; assert_in_epsilon(5599.832677534512, worksheet.costs_am73, 0.001); end
  def test_costs_am153; assert_in_epsilon(4934.6694144716785, worksheet.costs_am153, 0.001); end
  def test_costs_am5; assert_in_delta(0, (worksheet.costs_am5||0), 0.001); end
  def test_costs_am74; assert_in_delta(0, (worksheet.costs_am74||0), 0.001); end
  def test_costs_am154; assert_in_delta(0, (worksheet.costs_am154||0), 0.001); end
  def test_costs_am6; assert_in_delta(0, (worksheet.costs_am6||0), 0.001); end
  def test_costs_am75; assert_in_delta(0, (worksheet.costs_am75||0), 0.001); end
  def test_costs_am155; assert_in_delta(0, (worksheet.costs_am155||0), 0.001); end
  def test_costs_am7; assert_in_epsilon(382.694406392694, worksheet.costs_am7, 0.001); end
  def test_costs_am76; assert_in_epsilon(492.71904823059356, worksheet.costs_am76, 0.001); end
  def test_costs_am156; assert_in_epsilon(437.7067273116438, worksheet.costs_am156, 0.001); end
  def test_costs_am8; assert_in_epsilon(510.84015625, worksheet.costs_am8, 0.001); end
  def test_costs_am77; assert_in_epsilon(675.4442065972223, worksheet.costs_am77, 0.001); end
  def test_costs_am157; assert_in_epsilon(593.1421814236112, worksheet.costs_am157, 0.001); end
  def test_costs_am9; assert_in_epsilon(8.382904555695639, worksheet.costs_am9, 0.001); end
  def test_costs_am78; assert_in_epsilon(11.177206074260855, worksheet.costs_am78, 0.001); end
  def test_costs_am158; assert_in_epsilon(9.780055314978247, worksheet.costs_am158, 0.001); end
  def test_costs_am11; assert_in_epsilon(104.99533128141731, worksheet.costs_am11, 0.001); end
  def test_costs_am80; assert_in_epsilon(128.32762712173226, worksheet.costs_am80, 0.001); end
  def test_costs_am160; assert_in_epsilon(116.66147920157479, worksheet.costs_am160, 0.001); end
  def test_costs_am13; assert_in_epsilon(390.2125, worksheet.costs_am13, 0.001); end
  def test_costs_am82; assert_in_epsilon(570.9424999999999, worksheet.costs_am82, 0.001); end
  def test_costs_am162; assert_in_epsilon(480.57749999999993, worksheet.costs_am162, 0.001); end
  def test_costs_am21; assert_in_epsilon(71.85937500000001, worksheet.costs_am21, 0.001); end
  def test_costs_am90; assert_in_epsilon(95.97656250000001, worksheet.costs_am90, 0.001); end
  def test_costs_am163; assert_in_epsilon(83.91796875000001, worksheet.costs_am163, 0.001); end
  def test_costs_am22; assert_in_delta(0, (worksheet.costs_am22||0), 0.001); end
  def test_costs_am91; assert_in_delta(0, (worksheet.costs_am91||0), 0.001); end
  def test_costs_am164; assert_in_delta(0, (worksheet.costs_am164||0), 0.001); end
  def test_costs_am23; assert_in_epsilon(149.59549633832265, worksheet.costs_am23, 0.001); end
  def test_costs_am92; assert_in_epsilon(448.78648901496797, worksheet.costs_am92, 0.001); end
  def test_costs_am165; assert_in_epsilon(299.1909926766453, worksheet.costs_am165, 0.001); end
  def test_costs_am24; assert_in_epsilon(215.03764791984588, worksheet.costs_am24, 0.001); end
  def test_costs_am93; assert_in_epsilon(259.1608527102019, worksheet.costs_am93, 0.001); end
  def test_costs_am166; assert_in_epsilon(237.09925031502388, worksheet.costs_am166, 0.001); end
  def test_costs_am167; assert_in_epsilon(7192.745569465155, worksheet.costs_am167, 0.001); end
  def test_costs_an4; assert_in_epsilon(2835.682156481358, worksheet.costs_an4, 0.001); end
  def test_costs_an73; assert_in_epsilon(3895.563886607055, worksheet.costs_an73, 0.001); end
  def test_costs_an153; assert_in_epsilon(3365.6230215442065, worksheet.costs_an153, 0.001); end
  def test_costs_an5; assert_in_delta(0, (worksheet.costs_an5||0), 0.001); end
  def test_costs_an74; assert_in_delta(0, (worksheet.costs_an74||0), 0.001); end
  def test_costs_an154; assert_in_delta(0, (worksheet.costs_an154||0), 0.001); end
  def test_costs_an6; assert_in_delta(0, (worksheet.costs_an6||0), 0.001); end
  def test_costs_an75; assert_in_delta(0, (worksheet.costs_an75||0), 0.001); end
  def test_costs_an155; assert_in_delta(0, (worksheet.costs_an155||0), 0.001); end
  def test_costs_an7; assert_in_epsilon(391.60325342465757, worksheet.costs_an7, 0.001); end
  def test_costs_an76; assert_in_epsilon(522.1376712328768, worksheet.costs_an76, 0.001); end
  def test_costs_an156; assert_in_epsilon(456.8704623287672, worksheet.costs_an156, 0.001); end
  def test_costs_an8; assert_in_epsilon(491.92212499999994, worksheet.costs_an8, 0.001); end
  def test_costs_an77; assert_in_epsilon(737.8831875000001, worksheet.costs_an77, 0.001); end
  def test_costs_an157; assert_in_epsilon(614.9026562500001, worksheet.costs_an157, 0.001); end
  def test_costs_an9; assert_in_epsilon(8.243263001502456, worksheet.costs_an9, 0.001); end
  def test_costs_an78; assert_in_epsilon(10.991017335336608, worksheet.costs_an78, 0.001); end
  def test_costs_an158; assert_in_epsilon(9.617140168419532, worksheet.costs_an158, 0.001); end
  def test_costs_an11; assert_in_epsilon(251.93453274765432, worksheet.costs_an11, 0.001); end
  def test_costs_an80; assert_in_epsilon(307.91998446935526, worksheet.costs_an80, 0.001); end
  def test_costs_an160; assert_in_epsilon(279.92725860850476, worksheet.costs_an160, 0.001); end
  def test_costs_an13; assert_in_epsilon(285.67, worksheet.costs_an13, 0.001); end
  def test_costs_an82; assert_in_epsilon(571.34, worksheet.costs_an82, 0.001); end
  def test_costs_an162; assert_in_epsilon(428.505, worksheet.costs_an162, 0.001); end
  def test_costs_an21; assert_in_epsilon(98.4375, worksheet.costs_an21, 0.001); end
  def test_costs_an90; assert_in_epsilon(128.625, worksheet.costs_an90, 0.001); end
  def test_costs_an163; assert_in_epsilon(113.53125, worksheet.costs_an163, 0.001); end
  def test_costs_an22; assert_in_delta(0, (worksheet.costs_an22||0), 0.001); end
  def test_costs_an91; assert_in_delta(0, (worksheet.costs_an91||0), 0.001); end
  def test_costs_an164; assert_in_delta(0, (worksheet.costs_an164||0), 0.001); end
  def test_costs_an23; assert_in_epsilon(139.34901949777066, worksheet.costs_an23, 0.001); end
  def test_costs_an92; assert_in_epsilon(418.04705849331197, worksheet.costs_an92, 0.001); end
  def test_costs_an165; assert_in_epsilon(278.6980389955413, worksheet.costs_an165, 0.001); end
  def test_costs_an24; assert_in_epsilon(350.2548046646938, worksheet.costs_an24, 0.001); end
  def test_costs_an93; assert_in_epsilon(401.769281043874, worksheet.costs_an93, 0.001); end
  def test_costs_an166; assert_in_epsilon(376.0120428542839, worksheet.costs_an166, 0.001); end
  def test_costs_an167; assert_in_epsilon(5923.686870749723, worksheet.costs_an167, 0.001); end
  def test_costs_ao4; assert_in_epsilon(2496.418162598685, worksheet.costs_ao4, 0.001); end
  def test_costs_ao73; assert_in_epsilon(3435.857537916773, worksheet.costs_ao73, 0.001); end
  def test_costs_ao153; assert_in_epsilon(2966.137850257729, worksheet.costs_ao153, 0.001); end
  def test_costs_ao5; assert_in_delta(0, (worksheet.costs_ao5||0), 0.001); end
  def test_costs_ao74; assert_in_delta(0, (worksheet.costs_ao74||0), 0.001); end
  def test_costs_ao154; assert_in_delta(0, (worksheet.costs_ao154||0), 0.001); end
  def test_costs_ao6; assert_in_delta(0, (worksheet.costs_ao6||0), 0.001); end
  def test_costs_ao75; assert_in_delta(0, (worksheet.costs_ao75||0), 0.001); end
  def test_costs_ao155; assert_in_delta(0, (worksheet.costs_ao155||0), 0.001); end
  def test_costs_ao7; assert_in_epsilon(412.96175085616443, worksheet.costs_ao7, 0.001); end
  def test_costs_ao76; assert_in_epsilon(544.6307148972603, worksheet.costs_ao76, 0.001); end
  def test_costs_ao156; assert_in_epsilon(478.79623287671234, worksheet.costs_ao156, 0.001); end
  def test_costs_ao8; assert_in_epsilon(543.8344626736111, worksheet.costs_ao8, 0.001); end
  def test_costs_ao77; assert_in_epsilon(813.766896701389, worksheet.costs_ao77, 0.001); end
  def test_costs_ao157; assert_in_epsilon(678.8006796875001, worksheet.costs_ao157, 0.001); end
  def test_costs_ao9; assert_in_epsilon(7.807649150096885, worksheet.costs_ao9, 0.001); end
  def test_costs_ao78; assert_in_epsilon(10.41019886679585, worksheet.costs_ao78, 0.001); end
  def test_costs_ao158; assert_in_epsilon(9.108924008446367, worksheet.costs_ao158, 0.001); end
  def test_costs_ao11; assert_in_epsilon(270.16611292830135, worksheet.costs_ao11, 0.001); end
  def test_costs_ao80; assert_in_epsilon(330.20302691236833, worksheet.costs_ao80, 0.001); end
  def test_costs_ao160; assert_in_epsilon(300.18456992033487, worksheet.costs_ao160, 0.001); end
  def test_costs_ao13; assert_in_epsilon(394.6735, worksheet.costs_ao13, 0.001); end
  def test_costs_ao82; assert_in_epsilon(789.347, worksheet.costs_ao82, 0.001); end
  def test_costs_ao162; assert_in_epsilon(592.01025, worksheet.costs_ao162, 0.001); end
  def test_costs_ao21; assert_in_epsilon(120.5859375, worksheet.costs_ao21, 0.001); end
  def test_costs_ao90; assert_in_epsilon(157.5, worksheet.costs_ao90, 0.001); end
  def test_costs_ao163; assert_in_epsilon(139.04296875, worksheet.costs_ao163, 0.001); end
  def test_costs_ao22; assert_in_delta(0, (worksheet.costs_ao22||0), 0.001); end
  def test_costs_ao91; assert_in_delta(0, (worksheet.costs_ao91||0), 0.001); end
  def test_costs_ao164; assert_in_delta(0, (worksheet.costs_ao164||0), 0.001); end
  def test_costs_ao23; assert_in_epsilon(146.1741192097934, worksheet.costs_ao23, 0.001); end
  def test_costs_ao92; assert_in_epsilon(438.52235762938005, worksheet.costs_ao92, 0.001); end
  def test_costs_ao165; assert_in_epsilon(292.3482384195867, worksheet.costs_ao165, 0.001); end
  def test_costs_ao24; assert_in_epsilon(467.8741474640811, worksheet.costs_ao24, 0.001); end
  def test_costs_ao93; assert_in_epsilon(520.6837645947846, worksheet.costs_ao93, 0.001); end
  def test_costs_ao166; assert_in_epsilon(494.27895602943283, worksheet.costs_ao166, 0.001); end
  def test_costs_ao167; assert_in_epsilon(5950.708669949743, worksheet.costs_ao167, 0.001); end
  def test_costs_ap4; assert_in_epsilon(2264.3279228418955, worksheet.costs_ap4, 0.001); end
  def test_costs_ap73; assert_in_epsilon(3125.193197941038, worksheet.costs_ap73, 0.001); end
  def test_costs_ap153; assert_in_epsilon(2694.7605603914667, worksheet.costs_ap153, 0.001); end
  def test_costs_ap5; assert_in_delta(0, (worksheet.costs_ap5||0), 0.001); end
  def test_costs_ap74; assert_in_delta(0, (worksheet.costs_ap74||0), 0.001); end
  def test_costs_ap154; assert_in_delta(0, (worksheet.costs_ap154||0), 0.001); end
  def test_costs_ap6; assert_in_delta(0, (worksheet.costs_ap6||0), 0.001); end
  def test_costs_ap75; assert_in_delta(0, (worksheet.costs_ap75||0), 0.001); end
  def test_costs_ap155; assert_in_delta(0, (worksheet.costs_ap155||0), 0.001); end
  def test_costs_ap7; assert_in_epsilon(404.2944049657535, worksheet.costs_ap7, 0.001); end
  def test_costs_ap76; assert_in_epsilon(526.8078610159819, worksheet.costs_ap76, 0.001); end
  def test_costs_ap156; assert_in_epsilon(465.5511329908677, worksheet.costs_ap156, 0.001); end
  def test_costs_ap8; assert_in_epsilon(574.1187065972222, worksheet.costs_ap8, 0.001); end
  def test_costs_ap77; assert_in_epsilon(856.7617621527778, worksheet.costs_ap77, 0.001); end
  def test_costs_ap157; assert_in_epsilon(715.440234375, worksheet.costs_ap157, 0.001); end
  def test_costs_ap9; assert_in_epsilon(7.937044170413076, worksheet.costs_ap9, 0.001); end
  def test_costs_ap78; assert_in_epsilon(10.582725560550768, worksheet.costs_ap78, 0.001); end
  def test_costs_ap158; assert_in_epsilon(9.259884865481922, worksheet.costs_ap158, 0.001); end
  def test_costs_ap11; assert_in_epsilon(423.88358098784477, worksheet.costs_ap11, 0.001); end
  def test_costs_ap80; assert_in_epsilon(518.079932318477, worksheet.costs_ap80, 0.001); end
  def test_costs_ap160; assert_in_epsilon(470.98175665316086, worksheet.costs_ap160, 0.001); end
  def test_costs_ap13; assert_in_epsilon(489.36, worksheet.costs_ap13, 0.001); end
  def test_costs_ap82; assert_in_epsilon(978.72, worksheet.costs_ap82, 0.001); end
  def test_costs_ap162; assert_in_epsilon(734.04, worksheet.costs_ap162, 0.001); end
  def test_costs_ap21; assert_in_epsilon(141.75, worksheet.costs_ap21, 0.001); end
  def test_costs_ap90; assert_in_epsilon(185.0625, worksheet.costs_ap90, 0.001); end
  def test_costs_ap163; assert_in_epsilon(163.40625, worksheet.costs_ap163, 0.001); end
  def test_costs_ap22; assert_in_delta(0, (worksheet.costs_ap22||0), 0.001); end
  def test_costs_ap91; assert_in_delta(0, (worksheet.costs_ap91||0), 0.001); end
  def test_costs_ap164; assert_in_delta(0, (worksheet.costs_ap164||0), 0.001); end
  def test_costs_ap23; assert_in_epsilon(157.87049087572714, worksheet.costs_ap23, 0.001); end
  def test_costs_ap92; assert_in_epsilon(473.61147262718157, worksheet.costs_ap92, 0.001); end
  def test_costs_ap165; assert_in_epsilon(315.74098175145434, worksheet.costs_ap165, 0.001); end
  def test_costs_ap24; assert_in_epsilon(553.0986746693974, worksheet.costs_ap24, 0.001); end
  def test_costs_ap93; assert_in_epsilon(601.8980298597598, worksheet.costs_ap93, 0.001); end
  def test_costs_ap166; assert_in_epsilon(577.4983522645787, worksheet.costs_ap166, 0.001); end
  def test_costs_ap167; assert_in_epsilon(6146.679153292011, worksheet.costs_ap167, 0.001); end
  def test_costs_aq4; assert_in_epsilon(2102.0775882863622, worksheet.costs_aq4, 0.001); end
  def test_costs_aq73; assert_in_epsilon(2815.2111064414917, worksheet.costs_aq73, 0.001); end
  def test_costs_aq153; assert_in_epsilon(2458.644347363927, worksheet.costs_aq153, 0.001); end
  def test_costs_aq5; assert_in_delta(0, (worksheet.costs_aq5||0), 0.001); end
  def test_costs_aq74; assert_in_delta(0, (worksheet.costs_aq74||0), 0.001); end
  def test_costs_aq154; assert_in_delta(0, (worksheet.costs_aq154||0), 0.001); end
  def test_costs_aq6; assert_in_delta(0, (worksheet.costs_aq6||0), 0.001); end
  def test_costs_aq75; assert_in_delta(0, (worksheet.costs_aq75||0), 0.001); end
  def test_costs_aq155; assert_in_delta(0, (worksheet.costs_aq155||0), 0.001); end
  def test_costs_aq7; assert_in_epsilon(399.21242722602733, worksheet.costs_aq7, 0.001); end
  def test_costs_aq76; assert_in_epsilon(513.273120719178, worksheet.costs_aq76, 0.001); end
  def test_costs_aq156; assert_in_epsilon(456.24277397260266, worksheet.costs_aq156, 0.001); end
  def test_costs_aq8; assert_in_epsilon(602.8490520833334, worksheet.costs_aq8, 0.001); end
  def test_costs_aq77; assert_in_epsilon(896.9217604166668, worksheet.costs_aq77, 0.001); end
  def test_costs_aq157; assert_in_epsilon(749.8854062500001, worksheet.costs_aq157, 0.001); end
  def test_costs_aq9; assert_in_epsilon(7.803524076446394, worksheet.costs_aq9, 0.001); end
  def test_costs_aq78; assert_in_epsilon(10.404698768595193, worksheet.costs_aq78, 0.001); end
  def test_costs_aq158; assert_in_epsilon(9.104111422520793, worksheet.costs_aq158, 0.001); end
  def test_costs_aq11; assert_in_epsilon(659.2830837339751, worksheet.costs_aq11, 0.001); end
  def test_costs_aq80; assert_in_epsilon(805.7904356748586, worksheet.costs_aq80, 0.001); end
  def test_costs_aq160; assert_in_epsilon(732.5367597044169, worksheet.costs_aq160, 0.001); end
  def test_costs_aq13; assert_in_epsilon(568.4304999999999, worksheet.costs_aq13, 0.001); end
  def test_costs_aq82; assert_in_epsilon(1136.8609999999999, worksheet.costs_aq82, 0.001); end
  def test_costs_aq162; assert_in_epsilon(852.6457499999999, worksheet.costs_aq162, 0.001); end
  def test_costs_aq21; assert_in_epsilon(163.078125, worksheet.costs_aq21, 0.001); end
  def test_costs_aq90; assert_in_epsilon(213.609375, worksheet.costs_aq90, 0.001); end
  def test_costs_aq163; assert_in_epsilon(188.34375, worksheet.costs_aq163, 0.001); end
  def test_costs_aq22; assert_in_delta(0, (worksheet.costs_aq22||0), 0.001); end
  def test_costs_aq91; assert_in_delta(0, (worksheet.costs_aq91||0), 0.001); end
  def test_costs_aq164; assert_in_delta(0, (worksheet.costs_aq164||0), 0.001); end
  def test_costs_aq23; assert_in_epsilon(180.01224109829815, worksheet.costs_aq23, 0.001); end
  def test_costs_aq92; assert_in_epsilon(540.0367232948943, worksheet.costs_aq92, 0.001); end
  def test_costs_aq165; assert_in_epsilon(360.0244821965962, worksheet.costs_aq165, 0.001); end
  def test_costs_aq24; assert_in_epsilon(672.789817259515, worksheet.costs_aq24, 0.001); end
  def test_costs_aq93; assert_in_epsilon(728.1314293427672, worksheet.costs_aq93, 0.001); end
  def test_costs_aq166; assert_in_epsilon(700.4606233011411, worksheet.costs_aq166, 0.001); end
  def test_costs_aq167; assert_in_epsilon(6507.888004211204, worksheet.costs_aq167, 0.001); end
  def test_costs_ar4; assert_in_epsilon(2630.5143578301377, worksheet.costs_ar4, 0.001); end
  def test_costs_ar73; assert_in_epsilon(3436.09202768674, worksheet.costs_ar73, 0.001); end
  def test_costs_ar153; assert_in_epsilon(3033.303192758439, worksheet.costs_ar153, 0.001); end
  def test_costs_ar5; assert_in_delta(0, (worksheet.costs_ar5||0), 0.001); end
  def test_costs_ar74; assert_in_delta(0, (worksheet.costs_ar74||0), 0.001); end
  def test_costs_ar154; assert_in_delta(0, (worksheet.costs_ar154||0), 0.001); end
  def test_costs_ar6; assert_in_delta(0, (worksheet.costs_ar6||0), 0.001); end
  def test_costs_ar75; assert_in_delta(0, (worksheet.costs_ar75||0), 0.001); end
  def test_costs_ar155; assert_in_delta(0, (worksheet.costs_ar155||0), 0.001); end
  def test_costs_ar7; assert_in_epsilon(393.1848458904109, worksheet.costs_ar7, 0.001); end
  def test_costs_ar76; assert_in_epsilon(498.0341381278538, worksheet.costs_ar76, 0.001); end
  def test_costs_ar156; assert_in_epsilon(445.60949200913234, worksheet.costs_ar156, 0.001); end
  def test_costs_ar8; assert_in_epsilon(620.096125, worksheet.costs_ar8, 0.001); end
  def test_costs_ar77; assert_in_epsilon(919.4528750000002, worksheet.costs_ar77, 0.001); end
  def test_costs_ar157; assert_in_epsilon(769.7745000000001, worksheet.costs_ar157, 0.001); end
  def test_costs_ar9; assert_in_epsilon(7.395568093742425, worksheet.costs_ar9, 0.001); end
  def test_costs_ar78; assert_in_epsilon(9.860757458323233, worksheet.costs_ar78, 0.001); end
  def test_costs_ar158; assert_in_epsilon(8.628162776032829, worksheet.costs_ar158, 0.001); end
  def test_costs_ar11; assert_in_epsilon(956.8045731837453, worksheet.costs_ar11, 0.001); end
  def test_costs_ar80; assert_in_epsilon(1169.427811669022, worksheet.costs_ar80, 0.001); end
  def test_costs_ar160; assert_in_epsilon(1063.1161924263838, worksheet.costs_ar160, 0.001); end
  def test_costs_ar13; assert_in_epsilon(629.255, worksheet.costs_ar13, 0.001); end
  def test_costs_ar82; assert_in_epsilon(1258.51, worksheet.costs_ar82, 0.001); end
  def test_costs_ar162; assert_in_epsilon(943.8824999999999, worksheet.costs_ar162, 0.001); end
  def test_costs_ar21; assert_in_epsilon(183.75, worksheet.costs_ar21, 0.001); end
  def test_costs_ar90; assert_in_epsilon(241.5, worksheet.costs_ar90, 0.001); end
  def test_costs_ar163; assert_in_epsilon(212.625, worksheet.costs_ar163, 0.001); end
  def test_costs_ar22; assert_in_delta(0, (worksheet.costs_ar22||0), 0.001); end
  def test_costs_ar91; assert_in_delta(0, (worksheet.costs_ar91||0), 0.001); end
  def test_costs_ar164; assert_in_delta(0, (worksheet.costs_ar164||0), 0.001); end
  def test_costs_ar23; assert_in_epsilon(205.255495062601, worksheet.costs_ar23, 0.001); end
  def test_costs_ar92; assert_in_epsilon(615.766485187803, worksheet.costs_ar92, 0.001); end
  def test_costs_ar165; assert_in_epsilon(410.510990125202, worksheet.costs_ar165, 0.001); end
  def test_costs_ar24; assert_in_epsilon(805.2359904928517, worksheet.costs_ar24, 0.001); end
  def test_costs_ar93; assert_in_epsilon(867.2066148857527, worksheet.costs_ar93, 0.001); end
  def test_costs_ar166; assert_in_epsilon(836.2213026893022, worksheet.costs_ar166, 0.001); end
  def test_costs_ar167; assert_in_epsilon(7723.671332784492, worksheet.costs_ar167, 0.001); end
  def test_costs_c168; assert_equal("Biomass and gas power stations", worksheet.costs_c168); end
  def test_costs_e168; assert_equal("MEUR", worksheet.costs_e168); end
  def test_costs_f168; assert_in_delta(0, (worksheet.costs_f168||0), 0.001); end
  def test_costs_g168; assert_in_epsilon(203.77913595523898, worksheet.costs_g168, 0.001); end
  def test_costs_h168; assert_in_epsilon(428.4304059455342, worksheet.costs_h168, 0.001); end
  def test_costs_i168; assert_in_epsilon(1466.6767504948207, worksheet.costs_i168, 0.001); end
  def test_costs_j168; assert_in_epsilon(226.59077421177713, worksheet.costs_j168, 0.001); end
  def test_costs_k168; assert_in_epsilon(217.3377099919519, worksheet.costs_k168, 0.001); end
  def test_costs_l168; assert_in_epsilon(220.29983572337102, worksheet.costs_l168, 0.001); end
  def test_costs_m168; assert_in_epsilon(362.9040066013854, worksheet.costs_m168, 0.001); end
  def test_costs_n168; assert_in_epsilon(1354.1981023772796, worksheet.costs_n168, 0.001); end
  def test_costs_p168; assert_in_epsilon(134.91657288152294, worksheet.costs_p168, 0.001); end
  def test_costs_q168; assert_in_epsilon(74.68185284479799, worksheet.costs_q168, 0.001); end
  def test_costs_r168; assert_in_epsilon(103.2407144953047, worksheet.costs_r168, 0.001); end
  def test_costs_s168; assert_in_epsilon(278.6537542183671, worksheet.costs_s168, 0.001); end
  def test_costs_t168; assert_in_epsilon(253.54176860737851, worksheet.costs_t168, 0.001); end
  def test_costs_u168; assert_in_epsilon(231.00237068684044, worksheet.costs_u168, 0.001); end
  def test_costs_v168; assert_in_epsilon(214.38610048339712, worksheet.costs_v168, 0.001); end
  def test_costs_w168; assert_in_epsilon(185.3037051086813, worksheet.costs_w168, 0.001); end
  def test_costs_x168; assert_in_epsilon(147.3595433073686, worksheet.costs_x168, 0.001); end
  def test_costs_y168; assert_in_epsilon(180.3429314037398, worksheet.costs_y168, 0.001); end
  def test_costs_z168; assert_in_epsilon(1896.1779082104529, worksheet.costs_z168, 0.001); end
  def test_costs_aa168; assert_in_epsilon(698.9468331798325, worksheet.costs_aa168, 0.001); end
  def test_costs_ab168; assert_in_epsilon(1019.3074260550616, worksheet.costs_ab168, 0.001); end
  def test_costs_ac168; assert_in_epsilon(3189.3389097584904, worksheet.costs_ac168, 0.001); end
  def test_costs_ad168; assert_in_epsilon(2885.4904787250507, worksheet.costs_ad168, 0.001); end
  def test_costs_ae168; assert_in_epsilon(2517.7977695789364, worksheet.costs_ae168, 0.001); end
  def test_costs_af168; assert_in_epsilon(2260.0746241846987, worksheet.costs_af168, 0.001); end
  def test_costs_ag168; assert_in_epsilon(1910.4366356538603, worksheet.costs_ag168, 0.001); end
  def test_costs_ah168; assert_in_epsilon(1531.745547073791, worksheet.costs_ah168, 0.001); end
  def test_costs_ai168; assert_in_epsilon(1989.9240147133528, worksheet.costs_ai168, 0.001); end
  def test_costs_aj168; assert_in_epsilon(2031.094481091976, worksheet.costs_aj168, 0.001); end
  def test_costs_ak168; assert_in_epsilon(977.4078219798694, worksheet.costs_ak168, 0.001); end
  def test_costs_al168; assert_in_epsilon(1550.9785464959004, worksheet.costs_al168, 0.001); end
  def test_costs_am168; assert_in_epsilon(4934.6694144716785, worksheet.costs_am168, 0.001); end
  def test_costs_an168; assert_in_epsilon(3365.6230215442065, worksheet.costs_an168, 0.001); end
  def test_costs_ao168; assert_in_epsilon(2966.137850257729, worksheet.costs_ao168, 0.001); end
  def test_costs_ap168; assert_in_epsilon(2694.7605603914667, worksheet.costs_ap168, 0.001); end
  def test_costs_aq168; assert_in_epsilon(2458.644347363927, worksheet.costs_aq168, 0.001); end
  def test_costs_ar168; assert_in_epsilon(3033.303192758439, worksheet.costs_ar168, 0.001); end
  def test_costs_c169; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c169); end
  def test_costs_e169; assert_equal("MEUR", worksheet.costs_e169); end
  def test_costs_f169; assert_in_delta(0, (worksheet.costs_f169||0), 0.001); end
  def test_costs_g169; assert_in_delta(0, (worksheet.costs_g169||0), 0.001); end
  def test_costs_h169; assert_in_delta(0, (worksheet.costs_h169||0), 0.001); end
  def test_costs_i169; assert_in_delta(0, (worksheet.costs_i169||0), 0.001); end
  def test_costs_j169; assert_in_delta(0, (worksheet.costs_j169||0), 0.001); end
  def test_costs_k169; assert_in_delta(0, (worksheet.costs_k169||0), 0.001); end
  def test_costs_l169; assert_in_delta(0, (worksheet.costs_l169||0), 0.001); end
  def test_costs_m169; assert_in_delta(0, (worksheet.costs_m169||0), 0.001); end
  def test_costs_n169; assert_in_delta(0, (worksheet.costs_n169||0), 0.001); end
  def test_costs_p169; assert_in_delta(0, (worksheet.costs_p169||0), 0.001); end
  def test_costs_q169; assert_in_delta(0, (worksheet.costs_q169||0), 0.001); end
  def test_costs_r169; assert_in_delta(0, (worksheet.costs_r169||0), 0.001); end
  def test_costs_s169; assert_in_delta(0, (worksheet.costs_s169||0), 0.001); end
  def test_costs_t169; assert_in_delta(0, (worksheet.costs_t169||0), 0.001); end
  def test_costs_u169; assert_in_delta(0, (worksheet.costs_u169||0), 0.001); end
  def test_costs_v169; assert_in_delta(0, (worksheet.costs_v169||0), 0.001); end
  def test_costs_w169; assert_in_delta(0, (worksheet.costs_w169||0), 0.001); end
  def test_costs_x169; assert_in_delta(0, (worksheet.costs_x169||0), 0.001); end
  def test_costs_y169; assert_in_delta(0, (worksheet.costs_y169||0), 0.001); end
  def test_costs_z169; assert_in_delta(0, (worksheet.costs_z169||0), 0.001); end
  def test_costs_aa169; assert_in_delta(0, (worksheet.costs_aa169||0), 0.001); end
  def test_costs_ab169; assert_in_delta(0, (worksheet.costs_ab169||0), 0.001); end
  def test_costs_ac169; assert_in_delta(0, (worksheet.costs_ac169||0), 0.001); end
  def test_costs_ad169; assert_in_delta(0, (worksheet.costs_ad169||0), 0.001); end
  def test_costs_ae169; assert_in_delta(0, (worksheet.costs_ae169||0), 0.001); end
  def test_costs_af169; assert_in_delta(0, (worksheet.costs_af169||0), 0.001); end
  def test_costs_ag169; assert_in_delta(0, (worksheet.costs_ag169||0), 0.001); end
  def test_costs_ah169; assert_in_delta(0, (worksheet.costs_ah169||0), 0.001); end
  def test_costs_ai169; assert_in_delta(0, (worksheet.costs_ai169||0), 0.001); end
  def test_costs_aj169; assert_in_delta(0, (worksheet.costs_aj169||0), 0.001); end
  def test_costs_ak169; assert_in_delta(0, (worksheet.costs_ak169||0), 0.001); end
  def test_costs_al169; assert_in_delta(0, (worksheet.costs_al169||0), 0.001); end
  def test_costs_am169; assert_in_delta(0, (worksheet.costs_am169||0), 0.001); end
  def test_costs_an169; assert_in_delta(0, (worksheet.costs_an169||0), 0.001); end
  def test_costs_ao169; assert_in_delta(0, (worksheet.costs_ao169||0), 0.001); end
  def test_costs_ap169; assert_in_delta(0, (worksheet.costs_ap169||0), 0.001); end
  def test_costs_aq169; assert_in_delta(0, (worksheet.costs_aq169||0), 0.001); end
  def test_costs_ar169; assert_in_delta(0, (worksheet.costs_ar169||0), 0.001); end
  def test_costs_c170; assert_equal("Nuclear power", worksheet.costs_c170); end
  def test_costs_e170; assert_equal("MEUR", worksheet.costs_e170); end
  def test_costs_f170; assert_in_delta(0, (worksheet.costs_f170||0), 0.001); end
  def test_costs_g170; assert_in_delta(0, (worksheet.costs_g170||0), 0.001); end
  def test_costs_h170; assert_in_delta(0, (worksheet.costs_h170||0), 0.001); end
  def test_costs_i170; assert_in_delta(0, (worksheet.costs_i170||0), 0.001); end
  def test_costs_j170; assert_in_delta(0, (worksheet.costs_j170||0), 0.001); end
  def test_costs_k170; assert_in_delta(0, (worksheet.costs_k170||0), 0.001); end
  def test_costs_l170; assert_in_delta(0, (worksheet.costs_l170||0), 0.001); end
  def test_costs_m170; assert_in_delta(0, (worksheet.costs_m170||0), 0.001); end
  def test_costs_n170; assert_in_delta(0, (worksheet.costs_n170||0), 0.001); end
  def test_costs_o170; assert_in_delta(0, (worksheet.costs_o170||0), 0.001); end
  def test_costs_p170; assert_in_epsilon(582.4499999999999, worksheet.costs_p170, 0.001); end
  def test_costs_q170; assert_in_epsilon(582.4499999999999, worksheet.costs_q170, 0.001); end
  def test_costs_r170; assert_in_epsilon(499.9, worksheet.costs_r170, 0.001); end
  def test_costs_s170; assert_in_delta(0, (worksheet.costs_s170||0), 0.001); end
  def test_costs_t170; assert_in_delta(0, (worksheet.costs_t170||0), 0.001); end
  def test_costs_u170; assert_in_delta(0, (worksheet.costs_u170||0), 0.001); end
  def test_costs_v170; assert_in_delta(0, (worksheet.costs_v170||0), 0.001); end
  def test_costs_w170; assert_in_delta(0, (worksheet.costs_w170||0), 0.001); end
  def test_costs_x170; assert_in_delta(0, (worksheet.costs_x170||0), 0.001); end
  def test_costs_y170; assert_in_epsilon(184.97777777777776, worksheet.costs_y170, 0.001); end
  def test_costs_z170; assert_in_epsilon(383.1359827679999, worksheet.costs_z170, 0.001); end
  def test_costs_aa170; assert_in_epsilon(383.1359827679999, worksheet.costs_aa170, 0.001); end
  def test_costs_ab170; assert_in_epsilon(328.834539936, worksheet.costs_ab170, 0.001); end
  def test_costs_ac170; assert_in_delta(0, (worksheet.costs_ac170||0), 0.001); end
  def test_costs_ad170; assert_in_delta(0, (worksheet.costs_ad170||0), 0.001); end
  def test_costs_ae170; assert_in_delta(0, (worksheet.costs_ae170||0), 0.001); end
  def test_costs_af170; assert_in_delta(0, (worksheet.costs_af170||0), 0.001); end
  def test_costs_ag170; assert_in_delta(0, (worksheet.costs_ag170||0), 0.001); end
  def test_costs_ah170; assert_in_delta(0, (worksheet.costs_ah170||0), 0.001); end
  def test_costs_ai170; assert_in_epsilon(121.67850060799998, worksheet.costs_ai170, 0.001); end
  def test_costs_aj170; assert_in_epsilon(965.5859827679999, worksheet.costs_aj170, 0.001); end
  def test_costs_ak170; assert_in_epsilon(965.5859827679999, worksheet.costs_ak170, 0.001); end
  def test_costs_al170; assert_in_epsilon(828.7345399359999, worksheet.costs_al170, 0.001); end
  def test_costs_am170; assert_in_delta(0, (worksheet.costs_am170||0), 0.001); end
  def test_costs_an170; assert_in_delta(0, (worksheet.costs_an170||0), 0.001); end
  def test_costs_ao170; assert_in_delta(0, (worksheet.costs_ao170||0), 0.001); end
  def test_costs_ap170; assert_in_delta(0, (worksheet.costs_ap170||0), 0.001); end
  def test_costs_aq170; assert_in_delta(0, (worksheet.costs_aq170||0), 0.001); end
  def test_costs_ar170; assert_in_delta(0, (worksheet.costs_ar170||0), 0.001); end
  def test_costs_c171; assert_equal("Wind power (on and offshore)", worksheet.costs_c171); end
  def test_costs_e171; assert_equal("MEUR", worksheet.costs_e171); end
  def test_costs_p171; assert_in_epsilon(40.443749999999994, worksheet.costs_p171, 0.001); end
  def test_costs_q171; assert_in_epsilon(135.53031592465751, worksheet.costs_q171, 0.001); end
  def test_costs_r171; assert_in_epsilon(212.69069584760268, worksheet.costs_r171, 0.001); end
  def test_costs_s171; assert_in_epsilon(276.1733265434741, worksheet.costs_s171, 0.001); end
  def test_costs_t171; assert_in_epsilon(328.5231185787671, worksheet.costs_t171, 0.001); end
  def test_costs_u171; assert_in_epsilon(382.3469125642123, worksheet.costs_u171, 0.001); end
  def test_costs_v171; assert_in_epsilon(390.3663673658676, worksheet.costs_v171, 0.001); end
  def test_costs_w171; assert_in_epsilon(401.75318022260274, worksheet.costs_w171, 0.001); end
  def test_costs_x171; assert_in_epsilon(412.8839920091324, worksheet.costs_x171, 0.001); end
  def test_costs_y171; assert_in_epsilon(286.74573989514624, worksheet.costs_y171, 0.001); end
  def test_costs_z171; assert_in_delta(0, (worksheet.costs_z171||0), 0.001); end
  def test_costs_aa171; assert_in_delta(0, (worksheet.costs_aa171||0), 0.001); end
  def test_costs_ab171; assert_in_delta(0, (worksheet.costs_ab171||0), 0.001); end
  def test_costs_ac171; assert_in_delta(0, (worksheet.costs_ac171||0), 0.001); end
  def test_costs_ad171; assert_in_delta(0, (worksheet.costs_ad171||0), 0.001); end
  def test_costs_ae171; assert_in_delta(0, (worksheet.costs_ae171||0), 0.001); end
  def test_costs_af171; assert_in_delta(0, (worksheet.costs_af171||0), 0.001); end
  def test_costs_ag171; assert_in_delta(0, (worksheet.costs_ag171||0), 0.001); end
  def test_costs_ah171; assert_in_delta(0, (worksheet.costs_ah171||0), 0.001); end
  def test_costs_ai171; assert_in_delta(0, (worksheet.costs_ai171||0), 0.001); end
  def test_costs_aj171; assert_in_epsilon(899.9392089041096, worksheet.costs_aj171, 0.001); end
  def test_costs_ak171; assert_in_epsilon(924.3292808219178, worksheet.costs_ak171, 0.001); end
  def test_costs_al171; assert_in_epsilon(969.349021570586, worksheet.costs_al171, 0.001); end
  def test_costs_am171; assert_in_epsilon(1030.848908735255, worksheet.costs_am171, 0.001); end
  def test_costs_an171; assert_in_epsilon(1071.7731185787673, worksheet.costs_an171, 0.001); end
  def test_costs_ao171; assert_in_epsilon(1157.5969125642123, worksheet.costs_ao171, 0.001); end
  def test_costs_ap171; assert_in_epsilon(1180.9913673658677, worksheet.costs_ap171, 0.001); end
  def test_costs_aq171; assert_in_epsilon(1206.1281802226026, worksheet.costs_aq171, 0.001); end
  def test_costs_ar171; assert_in_epsilon(1215.3839920091325, worksheet.costs_ar171, 0.001); end
  def test_costs_c172; assert_equal("Solar PV", worksheet.costs_c172); end
  def test_costs_e172; assert_equal("MEUR", worksheet.costs_e172); end
  def test_costs_f172; assert_in_epsilon(477.36, worksheet.costs_f172, 0.001); end
  def test_costs_g172; assert_in_epsilon(404.42999999999995, worksheet.costs_g172, 0.001); end
  def test_costs_h172; assert_in_epsilon(421.875, worksheet.costs_h172, 0.001); end
  def test_costs_i172; assert_in_epsilon(424.125, worksheet.costs_i172, 0.001); end
  def test_costs_j172; assert_in_epsilon(372.75, worksheet.costs_j172, 0.001); end
  def test_costs_k172; assert_in_epsilon(531.375, worksheet.costs_k172, 0.001); end
  def test_costs_l172; assert_in_epsilon(661.5, worksheet.costs_l172, 0.001); end
  def test_costs_m172; assert_in_epsilon(763.125, worksheet.costs_m172, 0.001); end
  def test_costs_n172; assert_in_epsilon(836.25, worksheet.costs_n172, 0.001); end
  def test_costs_p172; assert_in_epsilon(26.108999999999998, worksheet.costs_p172, 0.001); end
  def test_costs_q172; assert_in_epsilon(42.341625, worksheet.costs_q172, 0.001); end
  def test_costs_r172; assert_in_epsilon(51.28125, worksheet.costs_r172, 0.001); end
  def test_costs_s172; assert_in_epsilon(56.452499999999986, worksheet.costs_s172, 0.001); end
  def test_costs_t172; assert_in_epsilon(55.754999999999995, worksheet.costs_t172, 0.001); end
  def test_costs_u172; assert_in_epsilon(60.63525, worksheet.costs_u172, 0.001); end
  def test_costs_v172; assert_in_epsilon(72.53999999999999, worksheet.costs_v172, 0.001); end
  def test_costs_w172; assert_in_epsilon(89.52074999999999, worksheet.costs_w172, 0.001); end
  def test_costs_x172; assert_in_epsilon(107.6325, worksheet.costs_x172, 0.001); end
  def test_costs_y172; assert_in_epsilon(62.47420833333334, worksheet.costs_y172, 0.001); end
  def test_costs_z172; assert_in_delta(0, (worksheet.costs_z172||0), 0.001); end
  def test_costs_aa172; assert_in_delta(0, (worksheet.costs_aa172||0), 0.001); end
  def test_costs_ab172; assert_in_delta(0, (worksheet.costs_ab172||0), 0.001); end
  def test_costs_ac172; assert_in_delta(0, (worksheet.costs_ac172||0), 0.001); end
  def test_costs_ad172; assert_in_delta(0, (worksheet.costs_ad172||0), 0.001); end
  def test_costs_ae172; assert_in_delta(0, (worksheet.costs_ae172||0), 0.001); end
  def test_costs_af172; assert_in_delta(0, (worksheet.costs_af172||0), 0.001); end
  def test_costs_ag172; assert_in_delta(0, (worksheet.costs_ag172||0), 0.001); end
  def test_costs_ah172; assert_in_delta(0, (worksheet.costs_ah172||0), 0.001); end
  def test_costs_ai172; assert_in_delta(0, (worksheet.costs_ai172||0), 0.001); end
  def test_costs_aj172; assert_in_epsilon(503.46900000000005, worksheet.costs_aj172, 0.001); end
  def test_costs_ak172; assert_in_epsilon(446.771625, worksheet.costs_ak172, 0.001); end
  def test_costs_al172; assert_in_epsilon(473.15625, worksheet.costs_al172, 0.001); end
  def test_costs_am172; assert_in_epsilon(480.57749999999993, worksheet.costs_am172, 0.001); end
  def test_costs_an172; assert_in_epsilon(428.505, worksheet.costs_an172, 0.001); end
  def test_costs_ao172; assert_in_epsilon(592.01025, worksheet.costs_ao172, 0.001); end
  def test_costs_ap172; assert_in_epsilon(734.04, worksheet.costs_ap172, 0.001); end
  def test_costs_aq172; assert_in_epsilon(852.6457499999999, worksheet.costs_aq172, 0.001); end
  def test_costs_ar172; assert_in_epsilon(943.8824999999999, worksheet.costs_ar172, 0.001); end
  def test_costs_c173; assert_equal("Hydro and geothermal", worksheet.costs_c173); end
  def test_costs_e173; assert_equal("MEUR", worksheet.costs_e173); end
  def test_costs_f173; assert_in_delta(0, (worksheet.costs_f173||0), 0.001); end
  def test_costs_p173; assert_in_epsilon(9.625, worksheet.costs_p173, 0.001); end
  def test_costs_q173; assert_in_epsilon(9.721738402794964, worksheet.costs_q173, 0.001); end
  def test_costs_r173; assert_in_epsilon(22.37482125234518, worksheet.costs_r173, 0.001); end
  def test_costs_s173; assert_in_epsilon(33.163135295530374, worksheet.costs_s173, 0.001); end
  def test_costs_t173; assert_in_epsilon(60.402099432710514, worksheet.costs_t173, 0.001); end
  def test_costs_u173; assert_in_epsilon(86.56526262929518, worksheet.costs_u173, 0.001); end
  def test_costs_v173; assert_in_epsilon(128.02956554274544, worksheet.costs_v173, 0.001); end
  def test_costs_w173; assert_in_epsilon(183.5767754370085, worksheet.costs_w173, 0.001); end
  def test_costs_x173; assert_in_epsilon(259.99037112449616, worksheet.costs_x173, 0.001); end
  def test_costs_y173; assert_in_epsilon(88.16097434632515, worksheet.costs_y173, 0.001); end
  def test_costs_z173; assert_in_delta(0, (worksheet.costs_z173||0), 0.001); end
  def test_costs_aa173; assert_in_delta(0, (worksheet.costs_aa173||0), 0.001); end
  def test_costs_ab173; assert_in_delta(0, (worksheet.costs_ab173||0), 0.001); end
  def test_costs_ac173; assert_in_delta(0, (worksheet.costs_ac173||0), 0.001); end
  def test_costs_ad173; assert_in_delta(0, (worksheet.costs_ad173||0), 0.001); end
  def test_costs_ae173; assert_in_delta(0, (worksheet.costs_ae173||0), 0.001); end
  def test_costs_af173; assert_in_delta(0, (worksheet.costs_af173||0), 0.001); end
  def test_costs_ag173; assert_in_delta(0, (worksheet.costs_ag173||0), 0.001); end
  def test_costs_ah173; assert_in_delta(0, (worksheet.costs_ah173||0), 0.001); end
  def test_costs_ai173; assert_in_delta(0, (worksheet.costs_ai173||0), 0.001); end
  def test_costs_aj173; assert_in_epsilon(9.625, worksheet.costs_aj173, 0.001); end
  def test_costs_ak173; assert_in_epsilon(12.401491634770277, worksheet.costs_ak173, 0.001); end
  def test_costs_al173; assert_in_epsilon(125.57293177639761, worksheet.costs_al173, 0.001); end
  def test_costs_am173; assert_in_epsilon(126.44153451655303, worksheet.costs_am173, 0.001); end
  def test_costs_an173; assert_in_epsilon(289.5443987769243, worksheet.costs_an173, 0.001); end
  def test_costs_ao173; assert_in_epsilon(309.29349392878123, worksheet.costs_ao173, 0.001); end
  def test_costs_ap173; assert_in_epsilon(480.2416415186428, worksheet.costs_ap173, 0.001); end
  def test_costs_aq173; assert_in_epsilon(741.6408711269377, worksheet.costs_aq173, 0.001); end
  def test_costs_ar173; assert_in_epsilon(1071.7443552024167, worksheet.costs_ar173, 0.001); end
  def test_costs_c174; assert_equal("Net imports", worksheet.costs_c174); end
  def test_costs_e174; assert_equal("MEUR", worksheet.costs_e174); end
  def test_costs_f174; assert_in_delta(0, (worksheet.costs_f174||0), 0.001); end
  def test_costs_g174; assert_in_delta(0, (worksheet.costs_g174||0), 0.001); end
  def test_costs_h174; assert_in_delta(0, (worksheet.costs_h174||0), 0.001); end
  def test_costs_i174; assert_in_delta(0, (worksheet.costs_i174||0), 0.001); end
  def test_costs_j174; assert_in_delta(0, (worksheet.costs_j174||0), 0.001); end
  def test_costs_k174; assert_in_delta(0, (worksheet.costs_k174||0), 0.001); end
  def test_costs_l174; assert_in_delta(0, (worksheet.costs_l174||0), 0.001); end
  def test_costs_m174; assert_in_delta(0, (worksheet.costs_m174||0), 0.001); end
  def test_costs_n174; assert_in_delta(0, (worksheet.costs_n174||0), 0.001); end
  def test_costs_o174; assert_in_delta(0, (worksheet.costs_o174||0), 0.001); end
  def test_costs_p174; assert_in_delta(0, (worksheet.costs_p174||0), 0.001); end
  def test_costs_q174; assert_in_delta(0, (worksheet.costs_q174||0), 0.001); end
  def test_costs_r174; assert_in_delta(0, (worksheet.costs_r174||0), 0.001); end
  def test_costs_s174; assert_in_delta(0, (worksheet.costs_s174||0), 0.001); end
  def test_costs_t174; assert_in_delta(0, (worksheet.costs_t174||0), 0.001); end
  def test_costs_u174; assert_in_delta(0, (worksheet.costs_u174||0), 0.001); end
  def test_costs_v174; assert_in_delta(0, (worksheet.costs_v174||0), 0.001); end
  def test_costs_w174; assert_in_delta(0, (worksheet.costs_w174||0), 0.001); end
  def test_costs_x174; assert_in_delta(0, (worksheet.costs_x174||0), 0.001); end
  def test_costs_y174; assert_in_delta(0, (worksheet.costs_y174||0), 0.001); end
  def test_costs_z174; assert_in_delta(0, (worksheet.costs_z174||0), 0.001); end
  def test_costs_aa174; assert_in_epsilon(25.59375, worksheet.costs_aa174, 0.001); end
  def test_costs_ab174; assert_in_epsilon(55.125, worksheet.costs_ab174, 0.001); end
  def test_costs_ac174; assert_in_epsilon(83.91796875000001, worksheet.costs_ac174, 0.001); end
  def test_costs_ad174; assert_in_epsilon(113.53125, worksheet.costs_ad174, 0.001); end
  def test_costs_ae174; assert_in_epsilon(139.04296875, worksheet.costs_ae174, 0.001); end
  def test_costs_af174; assert_in_epsilon(163.40625, worksheet.costs_af174, 0.001); end
  def test_costs_ag174; assert_in_epsilon(188.34375, worksheet.costs_ag174, 0.001); end
  def test_costs_ah174; assert_in_epsilon(212.625, worksheet.costs_ah174, 0.001); end
  def test_costs_ai174; assert_in_epsilon(109.06510416666667, worksheet.costs_ai174, 0.001); end
  def test_costs_aj174; assert_in_delta(0, (worksheet.costs_aj174||0), 0.001); end
  def test_costs_ak174; assert_in_epsilon(25.59375, worksheet.costs_ak174, 0.001); end
  def test_costs_al174; assert_in_epsilon(55.125, worksheet.costs_al174, 0.001); end
  def test_costs_am174; assert_in_epsilon(83.91796875000001, worksheet.costs_am174, 0.001); end
  def test_costs_an174; assert_in_epsilon(113.53125, worksheet.costs_an174, 0.001); end
  def test_costs_ao174; assert_in_epsilon(139.04296875, worksheet.costs_ao174, 0.001); end
  def test_costs_ap174; assert_in_epsilon(163.40625, worksheet.costs_ap174, 0.001); end
  def test_costs_aq174; assert_in_epsilon(188.34375, worksheet.costs_aq174, 0.001); end
  def test_costs_ar174; assert_in_epsilon(212.625, worksheet.costs_ar174, 0.001); end
  def test_costs_c175; assert_equal("Grid and balancing implications", worksheet.costs_c175); end
  def test_costs_e175; assert_equal("MEUR", worksheet.costs_e175); end
  def test_costs_p175; assert_in_epsilon(13.01265, worksheet.costs_p175, 0.001); end
  def test_costs_q175; assert_in_epsilon(57.74578930403521, worksheet.costs_q175, 0.001); end
  def test_costs_r175; assert_in_epsilon(74.12303913283066, worksheet.costs_r175, 0.001); end
  def test_costs_s175; assert_in_epsilon(105.65439249498402, worksheet.costs_s175, 0.001); end
  def test_costs_t175; assert_in_epsilon(128.31308321293722, worksheet.costs_t175, 0.001); end
  def test_costs_u175; assert_in_epsilon(148.2903358134111, worksheet.costs_u175, 0.001); end
  def test_costs_v175; assert_in_epsilon(166.1040022391456, worksheet.costs_v175, 0.001); end
  def test_costs_w175; assert_in_epsilon(187.8467976333298, worksheet.costs_w175, 0.001); end
  def test_costs_x175; assert_in_epsilon(213.33033875456198, worksheet.costs_x175, 0.001); end
  def test_costs_y175; assert_in_epsilon(121.60226984280396, worksheet.costs_y175, 0.001); end
  def test_costs_z175; assert_in_delta(0, (worksheet.costs_z175||0), 0.001); end
  def test_costs_aa175; assert_in_delta(0, (worksheet.costs_aa175||0), 0.001); end
  def test_costs_ab175; assert_in_epsilon(25.7284347711126, worksheet.costs_ab175, 0.001); end
  def test_costs_ac175; assert_in_epsilon(127.78512754284955, worksheet.costs_ac175, 0.001); end
  def test_costs_ad175; assert_in_epsilon(244.4676502144418, worksheet.costs_ad175, 0.001); end
  def test_costs_ae175; assert_in_epsilon(355.91302837487564, worksheet.costs_ae175, 0.001); end
  def test_costs_af175; assert_in_epsilon(446.25306821138804, worksheet.costs_af175, 0.001); end
  def test_costs_ag175; assert_in_epsilon(549.5384113030856, worksheet.costs_ag175, 0.001); end
  def test_costs_ah175; assert_in_epsilon(665.0133021249245, worksheet.costs_ah175, 0.001); end
  def test_costs_ai175; assert_in_epsilon(268.29989139363084, worksheet.costs_ai175, 0.001); end
  def test_costs_aj175; assert_in_epsilon(13.01265, worksheet.costs_aj175, 0.001); end
  def test_costs_ak175; assert_in_epsilon(195.88816925580795, worksheet.costs_ak175, 0.001); end
  def test_costs_al175; assert_in_epsilon(327.3272733590101, worksheet.costs_al175, 0.001); end
  def test_costs_am175; assert_in_epsilon(536.2902429916692, worksheet.costs_am175, 0.001); end
  def test_costs_an175; assert_in_epsilon(654.7100818498252, worksheet.costs_an175, 0.001); end
  def test_costs_ao175; assert_in_epsilon(786.6271944490195, worksheet.costs_ao175, 0.001); end
  def test_costs_ap175; assert_in_epsilon(893.239334016033, worksheet.costs_ap175, 0.001); end
  def test_costs_aq175; assert_in_epsilon(1060.4851054977373, worksheet.costs_aq175, 0.001); end
  def test_costs_ar175; assert_in_epsilon(1246.7322928145043, worksheet.costs_ar175, 0.001); end
  def test_costs_c176; assert_equal("Total", worksheet.costs_c176); end
  def test_costs_e176; assert_equal("MEUR", worksheet.costs_e176); end
  def test_costs_f171; assert_in_epsilon(859.4954589041097, worksheet.costs_f171, 0.001); end
  def test_costs_f175; assert_in_delta(0, (worksheet.costs_f175||0), 0.001); end
  def test_costs_f176; assert_in_epsilon(1336.8554589041096, worksheet.costs_f176, 0.001); end
  def test_costs_g171; assert_in_epsilon(788.7989648972602, worksheet.costs_g171, 0.001); end
  def test_costs_g173; assert_in_epsilon(2.679753231975312, worksheet.costs_g173, 0.001); end
  def test_costs_g175; assert_in_epsilon(138.14237995177277, worksheet.costs_g175, 0.001); end
  def test_costs_g176; assert_in_epsilon(1537.8302340362472, worksheet.costs_g176, 0.001); end
  def test_costs_h171; assert_in_epsilon(756.6583257229834, worksheet.costs_h171, 0.001); end
  def test_costs_h173; assert_in_epsilon(103.19811052405242, worksheet.costs_h173, 0.001); end
  def test_costs_h175; assert_in_epsilon(227.47579945506686, worksheet.costs_h175, 0.001); end
  def test_costs_h176; assert_in_epsilon(1937.6376416476369, worksheet.costs_h176, 0.001); end
  def test_costs_i171; assert_in_epsilon(754.6755821917808, worksheet.costs_i171, 0.001); end
  def test_costs_i173; assert_in_epsilon(93.27839922102265, worksheet.costs_i173, 0.001); end
  def test_costs_i175; assert_in_epsilon(302.8507229538356, worksheet.costs_i175, 0.001); end
  def test_costs_i176; assert_in_epsilon(3041.6064548614595, worksheet.costs_i176, 0.001); end
  def test_costs_j171; assert_in_epsilon(743.25, worksheet.costs_j171, 0.001); end
  def test_costs_j173; assert_in_epsilon(229.1422993442138, worksheet.costs_j173, 0.001); end
  def test_costs_j175; assert_in_epsilon(281.9293484224462, worksheet.costs_j175, 0.001); end
  def test_costs_j176; assert_in_epsilon(1853.6624219784371, worksheet.costs_j176, 0.001); end
  def test_costs_k171; assert_in_epsilon(775.2500000000002, worksheet.costs_k171, 0.001); end
  def test_costs_k173; assert_in_epsilon(222.72823129948603, worksheet.costs_k173, 0.001); end
  def test_costs_k175; assert_in_epsilon(282.4238302607328, worksheet.costs_k175, 0.001); end
  def test_costs_k176; assert_in_epsilon(2029.1147715521709, worksheet.costs_k176, 0.001); end
  def test_costs_l171; assert_in_epsilon(790.625, worksheet.costs_l171, 0.001); end
  def test_costs_l173; assert_in_epsilon(352.21207597589733, worksheet.costs_l173, 0.001); end
  def test_costs_l175; assert_in_epsilon(280.88226356549933, worksheet.costs_l175, 0.001); end
  def test_costs_l176; assert_in_epsilon(2305.5191752647675, worksheet.costs_l176, 0.001); end
  def test_costs_m171; assert_in_epsilon(804.375, worksheet.costs_m171, 0.001); end
  def test_costs_m173; assert_in_epsilon(558.0640956899291, worksheet.costs_m173, 0.001); end
  def test_costs_m175; assert_in_epsilon(323.0998965613218, worksheet.costs_m175, 0.001); end
  def test_costs_m176; assert_in_epsilon(2811.5679988526363, worksheet.costs_m176, 0.001); end
  def test_costs_n171; assert_in_epsilon(802.5, worksheet.costs_n171, 0.001); end
  def test_costs_n173; assert_in_epsilon(811.7539840779203, worksheet.costs_n173, 0.001); end
  def test_costs_n175; assert_in_epsilon(368.3886519350177, worksheet.costs_n175, 0.001); end
  def test_costs_n176; assert_in_epsilon(4173.090738390218, worksheet.costs_n176, 0.001); end
  def test_costs_p176; assert_in_epsilon(806.5569728815229, worksheet.costs_p176, 0.001); end
  def test_costs_q176; assert_in_epsilon(902.4713214762855, worksheet.costs_q176, 0.001); end
  def test_costs_r176; assert_in_epsilon(963.6105207280832, worksheet.costs_r176, 0.001); end
  def test_costs_s176; assert_in_epsilon(750.0971085523556, worksheet.costs_s176, 0.001); end
  def test_costs_t176; assert_in_epsilon(826.5350698317934, worksheet.costs_t176, 0.001); end
  def test_costs_u176; assert_in_epsilon(908.8401316937591, worksheet.costs_u176, 0.001); end
  def test_costs_v176; assert_in_epsilon(971.4260356311556, worksheet.costs_v176, 0.001); end
  def test_costs_w176; assert_in_epsilon(1048.0012084016223, worksheet.costs_w176, 0.001); end
  def test_costs_x176; assert_in_epsilon(1141.196745195559, worksheet.costs_x176, 0.001); end
  def test_costs_z176; assert_in_epsilon(2279.313890978453, worksheet.costs_z176, 0.001); end
  def test_costs_aa176; assert_in_epsilon(1107.6765659478324, worksheet.costs_aa176, 0.001); end
  def test_costs_ab176; assert_in_epsilon(1428.9954007621743, worksheet.costs_ab176, 0.001); end
  def test_costs_ac176; assert_in_epsilon(3401.04200605134, worksheet.costs_ac176, 0.001); end
  def test_costs_ad176; assert_in_epsilon(3243.4893789394923, worksheet.costs_ad176, 0.001); end
  def test_costs_ae176; assert_in_epsilon(3012.753766703812, worksheet.costs_ae176, 0.001); end
  def test_costs_af176; assert_in_epsilon(2869.7339423960866, worksheet.costs_af176, 0.001); end
  def test_costs_ag176; assert_in_epsilon(2648.318796956946, worksheet.costs_ag176, 0.001); end
  def test_costs_ah176; assert_in_epsilon(2409.3838491987153, worksheet.costs_ah176, 0.001); end
  def test_costs_aj176; assert_in_epsilon(4422.726322764085, worksheet.costs_aj176, 0.001); end
  def test_costs_ak176; assert_in_epsilon(3547.978121460365, worksheet.costs_ak176, 0.001); end
  def test_costs_al176; assert_in_epsilon(4330.243563137894, worksheet.costs_al176, 0.001); end
  def test_costs_am176; assert_in_epsilon(7192.745569465157, worksheet.costs_am176, 0.001); end
  def test_costs_an176; assert_in_epsilon(5923.686870749723, worksheet.costs_an176, 0.001); end
  def test_costs_ao176; assert_in_epsilon(5950.708669949743, worksheet.costs_ao176, 0.001); end
  def test_costs_ap176; assert_in_epsilon(6146.679153292011, worksheet.costs_ap176, 0.001); end
  def test_costs_aq176; assert_in_epsilon(6507.888004211204, worksheet.costs_aq176, 0.001); end
  def test_costs_ar176; assert_in_epsilon(7723.671332784492, worksheet.costs_ar176, 0.001); end
  def test_costs_c179; assert_equal("Cost of electricity", worksheet.costs_c179); end
  def test_costs_f179; assert_equal("v.02", worksheet.costs_f179); end
  def test_costs_g179; assert_equal("Electricity (supplied to grid)", worksheet.costs_g179); end
  def test_costs_n179; assert_equal("TWh", worksheet.costs_n179); end
  def test_costs_p179; assert_equal("C4.low", worksheet.costs_p179); end
  def test_costs_q179; assert_equal("Low estimate of the COE in that year", worksheet.costs_q179); end
  def test_costs_x179; assert_equal("EUR/MWh", worksheet.costs_x179); end
  def test_costs_z179; assert_equal("C4.high", worksheet.costs_z179); end
  def test_costs_aa179; assert_equal("High estimate of the COE in that year", worksheet.costs_aa179); end
  def test_costs_ah179; assert_equal("EUR/MWh", worksheet.costs_ah179); end
  def test_costs_aj179; assert_equal("Average COE", worksheet.costs_aj179); end
  def test_costs_ar179; assert_equal("EUR/MWh", worksheet.costs_ar179); end
  def test_costs_b180; assert_equal("I.a", worksheet.costs_b180); end
  def test_costs_c180; assert_equal("Biomass and gas power stations", worksheet.costs_c180); end
  def test_costs_f180; assert_in_epsilon(41.46556349214996, worksheet.costs_f180, 0.001); end
  def test_costs_g180; assert_in_epsilon(15.638724734681341, worksheet.costs_g180, 0.001); end
  def test_costs_h180; assert_in_epsilon(19.898923948480878, worksheet.costs_h180, 0.001); end
  def test_costs_i180; assert_in_epsilon(56.40134232888356, worksheet.costs_i180, 0.001); end
  def test_costs_j180; assert_in_epsilon(47.677583311180314, worksheet.costs_j180, 0.001); end
  def test_costs_k180; assert_in_epsilon(40.01986952676302, worksheet.costs_k180, 0.001); end
  def test_costs_l180; assert_in_epsilon(33.90370356039577, worksheet.costs_l180, 0.001); end
  def test_costs_m180; assert_in_epsilon(24.585599427750807, worksheet.costs_m180, 0.001); end
  def test_costs_n180; assert_in_epsilon(12.978773333333333, worksheet.costs_n180, 0.001); end
  def test_costs_aj180; assert_in_epsilon(89.46063177114505, worksheet.costs_aj180, 0.001); end
  def test_costs_ak180; assert_in_epsilon(139.8238559505532, worksheet.costs_ak180, 0.001); end
  def test_costs_al180; assert_in_epsilon(136.5263173217744, worksheet.costs_al180, 0.001); end
  def test_costs_am180; assert_in_epsilon(98.68273577217434, worksheet.costs_am180, 0.001); end
  def test_costs_an180; assert_in_epsilon(105.0861125248652, worksheet.costs_an180, 0.001); end
  def test_costs_ao180; assert_in_epsilon(109.0047781005508, worksheet.costs_ao180, 0.001); end
  def test_costs_ap180; assert_in_epsilon(114.98355160379239, worksheet.costs_ap180, 0.001); end
  def test_costs_aq180; assert_in_epsilon(132.96443378068264, worksheet.costs_aq180, 0.001); end
  def test_costs_ar180; assert_in_epsilon(197.642656191875, worksheet.costs_ar180, 0.001); end
  def test_costs_as180; assert_equal("PPT", worksheet.costs_as180); end
  def test_costs_at180; assert_equal("Undiscounted", worksheet.costs_at180); end
  def test_costs_bd180; assert_equal("Discounted", worksheet.costs_bd180); end
  def test_costs_b181; assert_equal("I.b", worksheet.costs_b181); end
  def test_costs_c181; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c181); end
  def test_costs_f181; assert_in_delta(0, (worksheet.costs_f181||0), 0.001); end
  def test_costs_g181; assert_in_delta(0, (worksheet.costs_g181||0), 0.001); end
  def test_costs_h181; assert_in_delta(0, (worksheet.costs_h181||0), 0.001); end
  def test_costs_i181; assert_in_delta(0, (worksheet.costs_i181||0), 0.001); end
  def test_costs_j181; assert_in_delta(0, (worksheet.costs_j181||0), 0.001); end
  def test_costs_k181; assert_in_delta(0, (worksheet.costs_k181||0), 0.001); end
  def test_costs_l181; assert_in_delta(0, (worksheet.costs_l181||0), 0.001); end
  def test_costs_m181; assert_in_delta(0, (worksheet.costs_m181||0), 0.001); end
  def test_costs_n181; assert_in_delta(0, (worksheet.costs_n181||0), 0.001); end
  def test_costs_aj181; assert_in_delta(0, (worksheet.costs_aj181||0), 0.001); end
  def test_costs_ak181; assert_in_delta(0, (worksheet.costs_ak181||0), 0.001); end
  def test_costs_al181; assert_in_delta(0, (worksheet.costs_al181||0), 0.001); end
  def test_costs_am181; assert_in_delta(0, (worksheet.costs_am181||0), 0.001); end
  def test_costs_an181; assert_in_delta(0, (worksheet.costs_an181||0), 0.001); end
  def test_costs_ao181; assert_in_delta(0, (worksheet.costs_ao181||0), 0.001); end
  def test_costs_ap181; assert_in_delta(0, (worksheet.costs_ap181||0), 0.001); end
  def test_costs_aq181; assert_in_delta(0, (worksheet.costs_aq181||0), 0.001); end
  def test_costs_ar181; assert_in_delta(0, (worksheet.costs_ar181||0), 0.001); end
  def test_costs_as181; assert_equal("Fuel", worksheet.costs_as181); end
  def test_costs_z150; assert_in_epsilon(28684.624240984147, worksheet.costs_z150, 0.001); end
  def test_costs_at181; assert_in_epsilon(28684.624240984147, worksheet.costs_at181, 0.001); end
  def test_costs_aa139; assert_in_epsilon(31050.382198889056, worksheet.costs_aa139, 0.001); end
  def test_costs_aa70; assert_in_epsilon(22913.416641482618, worksheet.costs_aa70, 0.001); end
  def test_costs_aa150; assert_in_epsilon(26981.899420185837, worksheet.costs_aa150, 0.001); end
  def test_costs_au181; assert_in_epsilon(26981.899420185837, worksheet.costs_au181, 0.001); end
  def test_costs_ab139; assert_in_epsilon(31284.515822076297, worksheet.costs_ab139, 0.001); end
  def test_costs_ab70; assert_in_epsilon(22975.601538617215, worksheet.costs_ab70, 0.001); end
  def test_costs_ab150; assert_in_epsilon(27130.058680346756, worksheet.costs_ab150, 0.001); end
  def test_costs_av181; assert_in_epsilon(27130.058680346756, worksheet.costs_av181, 0.001); end
  def test_costs_ac139; assert_in_epsilon(35685.06160638557, worksheet.costs_ac139, 0.001); end
  def test_costs_ac70; assert_in_epsilon(26201.51490059702, worksheet.costs_ac70, 0.001); end
  def test_costs_ac150; assert_in_epsilon(30943.288253491293, worksheet.costs_ac150, 0.001); end
  def test_costs_aw181; assert_in_epsilon(30943.288253491293, worksheet.costs_aw181, 0.001); end
  def test_costs_ad139; assert_in_epsilon(32922.24889786741, worksheet.costs_ad139, 0.001); end
  def test_costs_ad70; assert_in_epsilon(24065.5952847556, worksheet.costs_ad70, 0.001); end
  def test_costs_ad150; assert_in_epsilon(28493.922091311506, worksheet.costs_ad150, 0.001); end
  def test_costs_ax181; assert_in_epsilon(28493.922091311506, worksheet.costs_ax181, 0.001); end
  def test_costs_ae139; assert_in_epsilon(29504.548225373335, worksheet.costs_ae139, 0.001); end
  def test_costs_ae70; assert_in_epsilon(21558.691173654744, worksheet.costs_ae70, 0.001); end
  def test_costs_ae150; assert_in_epsilon(25531.61969951404, worksheet.costs_ae150, 0.001); end
  def test_costs_ay181; assert_in_epsilon(25531.61969951404, worksheet.costs_ay181, 0.001); end
  def test_costs_af139; assert_in_epsilon(26863.745762157534, worksheet.costs_af139, 0.001); end
  def test_costs_af70; assert_in_epsilon(19613.528246062437, worksheet.costs_af70, 0.001); end
  def test_costs_af150; assert_in_epsilon(23238.637004109987, worksheet.costs_af150, 0.001); end
  def test_costs_az181; assert_in_epsilon(23238.637004109987, worksheet.costs_az181, 0.001); end
  def test_costs_ag139; assert_in_epsilon(24243.121369046352, worksheet.costs_ag139, 0.001); end
  def test_costs_ag70; assert_in_epsilon(17665.503923887773, worksheet.costs_ag70, 0.001); end
  def test_costs_ag150; assert_in_epsilon(20954.312646467064, worksheet.costs_ag150, 0.001); end
  def test_costs_ba181; assert_in_epsilon(20954.312646467064, worksheet.costs_ba181, 0.001); end
  def test_costs_ah139; assert_in_epsilon(21768.874088932862, worksheet.costs_ah139, 0.001); end
  def test_costs_ah70; assert_in_epsilon(15825.763452893812, worksheet.costs_ah70, 0.001); end
  def test_costs_ah150; assert_in_epsilon(18797.318770913338, worksheet.costs_ah150, 0.001); end
  def test_costs_bb181; assert_in_epsilon(18797.318770913338, worksheet.costs_bb181, 0.001); end
  def test_costs_bn150; assert_in_epsilon(28684.624240984147, worksheet.costs_bn150, 0.001); end
  def test_costs_bd181; assert_in_epsilon(28684.624240984147, worksheet.costs_bd181, 0.001); end
  def test_costs_bo150; assert_in_epsilon(16753.636686630834, worksheet.costs_bo150, 0.001); end
  def test_costs_be181; assert_in_epsilon(16753.636686630834, worksheet.costs_be181, 0.001); end
  def test_costs_bp150; assert_in_epsilon(10459.812066037102, worksheet.costs_bp150, 0.001); end
  def test_costs_bf181; assert_in_epsilon(10459.812066037102, worksheet.costs_bf181, 0.001); end
  def test_costs_bq150; assert_in_epsilon(7407.577189224042, worksheet.costs_bq150, 0.001); end
  def test_costs_bg181; assert_in_epsilon(7407.577189224042, worksheet.costs_bg181, 0.001); end
  def test_costs_br150; assert_in_epsilon(4235.439956289832, worksheet.costs_br150, 0.001); end
  def test_costs_bh181; assert_in_epsilon(4235.439956289832, worksheet.costs_bh181, 0.001); end
  def test_costs_bs150; assert_in_epsilon(2356.4663252438404, worksheet.costs_bs150, 0.001); end
  def test_costs_bi181; assert_in_epsilon(2356.4663252438404, worksheet.costs_bi181, 0.001); end
  def test_costs_bt150; assert_in_epsilon(1331.7726673965312, worksheet.costs_bt150, 0.001); end
  def test_costs_bj181; assert_in_epsilon(1331.7726673965312, worksheet.costs_bj181, 0.001); end
  def test_costs_bu150; assert_in_epsilon(745.6404140237535, worksheet.costs_bu150, 0.001); end
  def test_costs_bk181; assert_in_epsilon(745.6404140237535, worksheet.costs_bk181, 0.001); end
  def test_costs_bv150; assert_in_epsilon(415.32540769695345, worksheet.costs_bv150, 0.001); end
  def test_costs_bl181; assert_in_epsilon(415.32540769695345, worksheet.costs_bl181, 0.001); end
  def test_costs_b182; assert_equal("II.a", worksheet.costs_b182); end
  def test_costs_c182; assert_equal("Nuclear power", worksheet.costs_c182); end
  def test_costs_f182; assert_in_epsilon(47.89199784599999, worksheet.costs_f182, 0.001); end
  def test_costs_g182; assert_in_epsilon(47.89199784599999, worksheet.costs_g182, 0.001); end
  def test_costs_h182; assert_in_epsilon(41.104317492, worksheet.costs_h182, 0.001); end
  def test_costs_i182; assert_in_delta(0, (worksheet.costs_i182||0), 0.001); end
  def test_costs_j182; assert_in_delta(0, (worksheet.costs_j182||0), 0.001); end
  def test_costs_k182; assert_in_delta(0, (worksheet.costs_k182||0), 0.001); end
  def test_costs_l182; assert_in_delta(0, (worksheet.costs_l182||0), 0.001); end
  def test_costs_m182; assert_in_delta(0, (worksheet.costs_m182||0), 0.001); end
  def test_costs_n182; assert_in_delta(0, (worksheet.costs_n182||0), 0.001); end
  def test_costs_aj182; assert_in_epsilon(31.046395657489356, worksheet.costs_aj182, 0.001); end
  def test_costs_ak182; assert_in_epsilon(31.046395657489356, worksheet.costs_ak182, 0.001); end
  def test_costs_al182; assert_in_epsilon(31.046395657489356, worksheet.costs_al182, 0.001); end
  def test_costs_am182; assert_in_delta(0, (worksheet.costs_am182||0), 0.001); end
  def test_costs_an182; assert_in_delta(0, (worksheet.costs_an182||0), 0.001); end
  def test_costs_ao182; assert_in_delta(0, (worksheet.costs_ao182||0), 0.001); end
  def test_costs_ap182; assert_in_delta(0, (worksheet.costs_ap182||0), 0.001); end
  def test_costs_aq182; assert_in_delta(0, (worksheet.costs_aq182||0), 0.001); end
  def test_costs_ar182; assert_in_delta(0, (worksheet.costs_ar182||0), 0.001); end
  def test_costs_as182; assert_equal("O&M", worksheet.costs_as182); end
  def test_costs_p150; assert_in_epsilon(8980.973763740902, worksheet.costs_p150, 0.001); end
  def test_costs_at182; assert_in_epsilon(8980.973763740902, worksheet.costs_at182, 0.001); end
  def test_costs_q139; assert_in_epsilon(11106.747041906161, worksheet.costs_q139, 0.001); end
  def test_costs_q70; assert_in_epsilon(8798.830838010372, worksheet.costs_q70, 0.001); end
  def test_costs_q150; assert_in_epsilon(9952.788939958267, worksheet.costs_q150, 0.001); end
  def test_costs_au182; assert_in_epsilon(9952.788939958267, worksheet.costs_au182, 0.001); end
  def test_costs_r139; assert_in_epsilon(12245.90424809227, worksheet.costs_r139, 0.001); end
  def test_costs_r70; assert_in_epsilon(8704.480240714787, worksheet.costs_r70, 0.001); end
  def test_costs_r150; assert_in_epsilon(10475.19224440353, worksheet.costs_r150, 0.001); end
  def test_costs_av182; assert_in_epsilon(10475.19224440353, worksheet.costs_av182, 0.001); end
  def test_costs_s139; assert_in_epsilon(12982.979101652745, worksheet.costs_s139, 0.001); end
  def test_costs_s70; assert_in_epsilon(8076.638435900283, worksheet.costs_s70, 0.001); end
  def test_costs_s150; assert_in_epsilon(10529.808768776515, worksheet.costs_s150, 0.001); end
  def test_costs_aw182; assert_in_epsilon(10529.808768776515, worksheet.costs_aw182, 0.001); end
  def test_costs_t139; assert_in_epsilon(13933.698243776591, worksheet.costs_t139, 0.001); end
  def test_costs_t70; assert_in_epsilon(7532.0235358412365, worksheet.costs_t70, 0.001); end
  def test_costs_t150; assert_in_epsilon(10732.860889808913, worksheet.costs_t150, 0.001); end
  def test_costs_ax182; assert_in_epsilon(10732.860889808913, worksheet.costs_ax182, 0.001); end
  def test_costs_u139; assert_in_epsilon(14746.300678987864, worksheet.costs_u139, 0.001); end
  def test_costs_u70; assert_in_epsilon(6823.617259711895, worksheet.costs_u70, 0.001); end
  def test_costs_u150; assert_in_epsilon(10784.958969349878, worksheet.costs_u150, 0.001); end
  def test_costs_ay182; assert_in_epsilon(10784.958969349878, worksheet.costs_ay182, 0.001); end
  def test_costs_v139; assert_in_epsilon(15479.519239064126, worksheet.costs_v139, 0.001); end
  def test_costs_v70; assert_in_epsilon(5972.840643219759, worksheet.costs_v70, 0.001); end
  def test_costs_v150; assert_in_epsilon(10726.179941141942, worksheet.costs_v150, 0.001); end
  def test_costs_az182; assert_in_epsilon(10726.179941141942, worksheet.costs_az182, 0.001); end
  def test_costs_w139; assert_in_epsilon(16141.803785872395, worksheet.costs_w139, 0.001); end
  def test_costs_w70; assert_in_epsilon(5013.400281113558, worksheet.costs_w70, 0.001); end
  def test_costs_w150; assert_in_epsilon(10577.602033492976, worksheet.costs_w150, 0.001); end
  def test_costs_ba182; assert_in_epsilon(10577.602033492976, worksheet.costs_ba182, 0.001); end
  def test_costs_x139; assert_in_epsilon(16738.730699258685, worksheet.costs_x139, 0.001); end
  def test_costs_x70; assert_in_epsilon(3989.5465213772445, worksheet.costs_x70, 0.001); end
  def test_costs_x150; assert_in_epsilon(10364.138610317965, worksheet.costs_x150, 0.001); end
  def test_costs_bb182; assert_in_epsilon(10364.138610317965, worksheet.costs_bb182, 0.001); end
  def test_costs_bd150; assert_in_epsilon(8980.973763740902, worksheet.costs_bd150, 0.001); end
  def test_costs_bd182; assert_in_epsilon(8980.973763740902, worksheet.costs_bd182, 0.001); end
  def test_costs_be150; assert_in_epsilon(6179.898876727411, worksheet.costs_be150, 0.001); end
  def test_costs_be182; assert_in_epsilon(6179.898876727411, worksheet.costs_be182, 0.001); end
  def test_costs_bf150; assert_in_epsilon(4038.6400753140533, worksheet.costs_bf150, 0.001); end
  def test_costs_bf182; assert_in_epsilon(4038.6400753140533, worksheet.costs_bf182, 0.001); end
  def test_costs_bg150; assert_in_epsilon(2520.752500622797, worksheet.costs_bg150, 0.001); end
  def test_costs_bg182; assert_in_epsilon(2520.752500622797, worksheet.costs_bg182, 0.001); end
  def test_costs_bh150; assert_in_epsilon(1595.3713817396335, worksheet.costs_bh150, 0.001); end
  def test_costs_bh182; assert_in_epsilon(1595.3713817396335, worksheet.costs_bh182, 0.001); end
  def test_costs_bi150; assert_in_epsilon(995.4085533748271, worksheet.costs_bi150, 0.001); end
  def test_costs_bi182; assert_in_epsilon(995.4085533748271, worksheet.costs_bi182, 0.001); end
  def test_costs_bj150; assert_in_epsilon(614.7018548748517, worksheet.costs_bj150, 0.001); end
  def test_costs_bj182; assert_in_epsilon(614.7018548748517, worksheet.costs_bj182, 0.001); end
  def test_costs_bk150; assert_in_epsilon(376.39447748537714, worksheet.costs_bk150, 0.001); end
  def test_costs_bk182; assert_in_epsilon(376.39447748537714, worksheet.costs_bk182, 0.001); end
  def test_costs_bl150; assert_in_epsilon(228.99489795420942, worksheet.costs_bl150, 0.001); end
  def test_costs_bl182; assert_in_epsilon(228.99489795420942, worksheet.costs_bl182, 0.001); end
  def test_costs_b183; assert_equal("III.a.1", worksheet.costs_b183); end
  def test_costs_c183; assert_equal("Onshore wind", worksheet.costs_c183); end
  def test_costs_f183; assert_in_epsilon(1.2988890410958904, worksheet.costs_f183, 0.001); end
  def test_costs_g183; assert_in_epsilon(4.156713265724032, worksheet.costs_g183, 0.001); end
  def test_costs_h183; assert_in_epsilon(7.086136227076774, worksheet.costs_h183, 0.001); end
  def test_costs_i183; assert_in_epsilon(10.163703752646539, worksheet.costs_i183, 0.001); end
  def test_costs_j183; assert_in_epsilon(13.433189594607313, worksheet.costs_j183, 0.001); end
  def test_costs_k183; assert_in_epsilon(16.29033154468355, worksheet.costs_k183, 0.001); end
  def test_costs_l183; assert_in_epsilon(17.088888688892954, worksheet.costs_l183, 0.001); end
  def test_costs_m183; assert_in_epsilon(17.965002767201756, worksheet.costs_m183, 0.001); end
  def test_costs_n183; assert_in_epsilon(18.902027883691137, worksheet.costs_n183, 0.001); end
  def test_costs_p183; assert_in_epsilon(81.79275813357917, worksheet.costs_p183, 0.001); end
  def test_costs_q183; assert_in_epsilon(74.56428204943356, worksheet.costs_q183, 0.001); end
  def test_costs_r183; assert_in_epsilon(67.50258015498164, worksheet.costs_r183, 0.001); end
  def test_costs_s183; assert_in_epsilon(60.60462685291873, worksheet.costs_s183, 0.001); end
  def test_costs_t183; assert_in_epsilon(53.867445950558285, worksheet.costs_t183, 0.001); end
  def test_costs_u183; assert_in_epsilon(50.98249348556222, worksheet.costs_u183, 0.001); end
  def test_costs_v183; assert_in_epsilon(48.16083530594351, worksheet.costs_v183, 0.001); end
  def test_costs_w183; assert_in_epsilon(45.40134492988689, worksheet.costs_w183, 0.001); end
  def test_costs_x183; assert_in_epsilon(42.70291408483614, worksheet.costs_x183, 0.001); end
  def test_costs_z183; assert_in_epsilon(97.52213469772902, worksheet.costs_z183, 0.001); end
  def test_costs_aa183; assert_in_epsilon(90.87521874774716, worksheet.costs_aa183, 0.001); end
  def test_costs_ab183; assert_in_epsilon(84.37822519372705, worksheet.costs_ab183, 0.001); end
  def test_costs_ac183; assert_in_epsilon(78.02845707313288, worksheet.costs_ac183, 0.001); end
  def test_costs_ad183; assert_in_epsilon(71.82326126741106, worksheet.costs_ad183, 0.001); end
  def test_costs_ae183; assert_in_epsilon(67.23778126356758, worksheet.costs_ae183, 0.001); end
  def test_costs_af183; assert_in_epsilon(62.75502782289609, worksheet.costs_af183, 0.001); end
  def test_costs_ag183; assert_in_epsilon(58.373157766997416, worksheet.costs_ag183, 0.001); end
  def test_costs_ah183; assert_in_epsilon(54.09035784079245, worksheet.costs_ah183, 0.001); end
  def test_costs_aj183; assert_in_epsilon(89.65744641565409, worksheet.costs_aj183, 0.001); end
  def test_costs_ak183; assert_in_epsilon(82.71975039859035, worksheet.costs_ak183, 0.001); end
  def test_costs_al183; assert_in_epsilon(75.94040267435435, worksheet.costs_al183, 0.001); end
  def test_costs_am183; assert_in_epsilon(69.3165419630258, worksheet.costs_am183, 0.001); end
  def test_costs_an183; assert_in_epsilon(62.84535360898467, worksheet.costs_an183, 0.001); end
  def test_costs_ao183; assert_in_epsilon(59.1101373745649, worksheet.costs_ao183, 0.001); end
  def test_costs_ap183; assert_in_epsilon(55.457931564419795, worksheet.costs_ap183, 0.001); end
  def test_costs_aq183; assert_in_epsilon(51.88725134844215, worksheet.costs_aq183, 0.001); end
  def test_costs_ar183; assert_in_epsilon(48.396635962814294, worksheet.costs_ar183, 0.001); end
  def test_costs_as183; assert_equal("Investment", worksheet.costs_as183); end
  def test_costs_f150; assert_in_epsilon(32448.718818266163, worksheet.costs_f150, 0.001); end
  def test_costs_at183; assert_in_epsilon(32448.718818266163, worksheet.costs_at183, 0.001); end
  def test_costs_g139; assert_in_epsilon(41151.034848061216, worksheet.costs_g139, 0.001); end
  def test_costs_g70; assert_in_epsilon(29245.667981923765, worksheet.costs_g70, 0.001); end
  def test_costs_g150; assert_in_epsilon(35198.35141499249, worksheet.costs_g150, 0.001); end
  def test_costs_au183; assert_in_epsilon(35198.35141499249, worksheet.costs_au183, 0.001); end
  def test_costs_h139; assert_in_epsilon(45534.36191232746, worksheet.costs_h139, 0.001); end
  def test_costs_h70; assert_in_epsilon(31985.1182447647, worksheet.costs_h70, 0.001); end
  def test_costs_h150; assert_in_epsilon(38759.74007854608, worksheet.costs_h150, 0.001); end
  def test_costs_av183; assert_in_epsilon(38759.74007854608, worksheet.costs_av183, 0.001); end
  def test_costs_i139; assert_in_epsilon(43501.27964802546, worksheet.costs_i139, 0.001); end
  def test_costs_i70; assert_in_epsilon(30308.79750098112, worksheet.costs_i70, 0.001); end
  def test_costs_i150; assert_in_epsilon(36905.03857450329, worksheet.costs_i150, 0.001); end
  def test_costs_aw183; assert_in_epsilon(36905.03857450329, worksheet.costs_aw183, 0.001); end
  def test_costs_j139; assert_in_epsilon(44252.906578914175, worksheet.costs_j139, 0.001); end
  def test_costs_j70; assert_in_epsilon(30448.732966226573, worksheet.costs_j70, 0.001); end
  def test_costs_j150; assert_in_epsilon(37350.81977257037, worksheet.costs_j150, 0.001); end
  def test_costs_ax183; assert_in_epsilon(37350.81977257037, worksheet.costs_ax183, 0.001); end
  def test_costs_k139; assert_in_epsilon(43862.05512897171, worksheet.costs_k139, 0.001); end
  def test_costs_k70; assert_in_epsilon(29824.59755508891, worksheet.costs_k70, 0.001); end
  def test_costs_k150; assert_in_epsilon(36843.32634203031, worksheet.costs_k150, 0.001); end
  def test_costs_ay183; assert_in_epsilon(36843.32634203031, worksheet.costs_ay183, 0.001); end
  def test_costs_l139; assert_in_epsilon(45063.73297159091, worksheet.costs_l139, 0.001); end
  def test_costs_l70; assert_in_epsilon(30421.866211898592, worksheet.costs_l70, 0.001); end
  def test_costs_l150; assert_in_epsilon(37742.79959174475, worksheet.costs_l150, 0.001); end
  def test_costs_az183; assert_in_epsilon(37742.79959174475, worksheet.costs_az183, 0.001); end
  def test_costs_m139; assert_in_epsilon(45369.899726344716, worksheet.costs_m139, 0.001); end
  def test_costs_m70; assert_in_epsilon(30358.93788090108, worksheet.costs_m70, 0.001); end
  def test_costs_m150; assert_in_epsilon(37864.4188036229, worksheet.costs_m150, 0.001); end
  def test_costs_ba183; assert_in_epsilon(37864.4188036229, worksheet.costs_ba183, 0.001); end
  def test_costs_n139; assert_in_epsilon(47894.36928277653, worksheet.costs_n139, 0.001); end
  def test_costs_n70; assert_in_epsilon(32040.656095273273, worksheet.costs_n70, 0.001); end
  def test_costs_n150; assert_in_epsilon(39967.5126890249, worksheet.costs_n150, 0.001); end
  def test_costs_bb183; assert_in_epsilon(39967.5126890249, worksheet.costs_bb183, 0.001); end
  def test_costs_at150; assert_in_epsilon(32448.718818266163, worksheet.costs_at150, 0.001); end
  def test_costs_bd183; assert_in_epsilon(32448.718818266163, worksheet.costs_bd183, 0.001); end
  def test_costs_au150; assert_in_epsilon(21855.406930098216, worksheet.costs_au150, 0.001); end
  def test_costs_be183; assert_in_epsilon(21855.406930098216, worksheet.costs_be183, 0.001); end
  def test_costs_av150; assert_in_epsilon(14943.557687316303, worksheet.costs_av150, 0.001); end
  def test_costs_bf183; assert_in_epsilon(14943.557687316303, worksheet.costs_bf183, 0.001); end
  def test_costs_aw150; assert_in_epsilon(8834.77281639837, worksheet.costs_aw150, 0.001); end
  def test_costs_bg183; assert_in_epsilon(8834.77281639837, worksheet.costs_bg183, 0.001); end
  def test_costs_ax150; assert_in_epsilon(5551.9613606707735, worksheet.costs_ax150, 0.001); end
  def test_costs_bh183; assert_in_epsilon(5551.9613606707735, worksheet.costs_bh183, 0.001); end
  def test_costs_ay150; assert_in_epsilon(3400.4915809010054, worksheet.costs_ay150, 0.001); end
  def test_costs_bi183; assert_in_epsilon(3400.4915809010054, worksheet.costs_bi183, 0.001); end
  def test_costs_az150; assert_in_epsilon(2162.9852421388046, worksheet.costs_az150, 0.001); end
  def test_costs_bj183; assert_in_epsilon(2162.9852421388046, worksheet.costs_bj183, 0.001); end
  def test_costs_ba150; assert_in_epsilon(1347.3713688366847, worksheet.costs_ba150, 0.001); end
  def test_costs_bk183; assert_in_epsilon(1347.3713688366847, worksheet.costs_bk183, 0.001); end
  def test_costs_bb150; assert_in_epsilon(883.0793212853451, worksheet.costs_bb150, 0.001); end
  def test_costs_bl183; assert_in_epsilon(883.0793212853451, worksheet.costs_bl183, 0.001); end
  def test_costs_b184; assert_equal("III.a.2", worksheet.costs_b184); end
  def test_costs_c184; assert_equal("Offshore wind", worksheet.costs_c184); end
  def test_costs_f184; assert_in_delta(0.6258924000000001, worksheet.costs_f184, 0.001); end
  def test_costs_g184; assert_in_epsilon(2.7016154549999998, worksheet.costs_g184, 0.001); end
  def test_costs_h184; assert_in_epsilon(5.039707081499999, worksheet.costs_h184, 0.001); end
  def test_costs_i184; assert_in_epsilon(8.00021198, worksheet.costs_i184, 0.001); end
  def test_costs_j184; assert_in_epsilon(11.8042008785, worksheet.costs_j184, 0.001); end
  def test_costs_k184; assert_in_epsilon(15.3949916475, worksheet.costs_k184, 0.001); end
  def test_costs_l184; assert_in_epsilon(17.0890430625, worksheet.costs_l184, 0.001); end
  def test_costs_m184; assert_in_epsilon(19.265432670000003, worksheet.costs_m184, 0.001); end
  def test_costs_n184; assert_in_epsilon(21.719912670000003, worksheet.costs_n184, 0.001); end
  def test_costs_p184; assert_in_epsilon(167.30682566219005, worksheet.costs_p184, 0.001); end
  def test_costs_q184; assert_in_epsilon(142.21080181286155, worksheet.costs_q184, 0.001); end
  def test_costs_r184; assert_in_epsilon(115.3060555239418, worksheet.costs_r184, 0.001); end
  def test_costs_s184; assert_in_epsilon(88.88175113303845, worksheet.costs_s184, 0.001); end
  def test_costs_t184; assert_in_epsilon(66.14455898272631, worksheet.costs_t184, 0.001); end
  def test_costs_u184; assert_in_epsilon(60.13234521099392, worksheet.costs_u184, 0.001); end
  def test_costs_v184; assert_in_epsilon(57.05988961627161, worksheet.costs_v184, 0.001); end
  def test_costs_w184; assert_in_epsilon(53.987434021549305, worksheet.costs_w184, 0.001); end
  def test_costs_x184; assert_in_epsilon(50.91497842682698, worksheet.costs_x184, 0.001); end
  def test_costs_z184; assert_in_epsilon(176.60164931008953, worksheet.costs_z184, 0.001); end
  def test_costs_aa184; assert_in_epsilon(159.14065917153556, worksheet.costs_aa184, 0.001); end
  def test_costs_ab184; assert_in_epsilon(138.79432609363366, worksheet.costs_ab184, 0.001); end
  def test_costs_ac184; assert_in_epsilon(117.52142649812863, worksheet.costs_ac184, 0.001); end
  def test_costs_ad184; assert_in_epsilon(99.21683847408946, worksheet.costs_ad184, 0.001); end
  def test_costs_ae184; assert_in_epsilon(89.97905670258217, worksheet.costs_ae184, 0.001); end
  def test_costs_af184; assert_in_epsilon(85.15091219658994, worksheet.costs_af184, 0.001); end
  def test_costs_ag184; assert_in_epsilon(80.32276769059773, worksheet.costs_ag184, 0.001); end
  def test_costs_ah184; assert_in_epsilon(75.49462318460552, worksheet.costs_ah184, 0.001); end
  def test_costs_aj184; assert_in_epsilon(171.9542374861398, worksheet.costs_aj184, 0.001); end
  def test_costs_ak184; assert_in_epsilon(150.67573049219857, worksheet.costs_ak184, 0.001); end
  def test_costs_al184; assert_in_epsilon(127.05019080878773, worksheet.costs_al184, 0.001); end
  def test_costs_am184; assert_in_epsilon(103.20158881558353, worksheet.costs_am184, 0.001); end
  def test_costs_an184; assert_in_epsilon(82.68069872840789, worksheet.costs_an184, 0.001); end
  def test_costs_ao184; assert_in_epsilon(75.05570095678804, worksheet.costs_ao184, 0.001); end
  def test_costs_ap184; assert_in_epsilon(71.10540090643077, worksheet.costs_ap184, 0.001); end
  def test_costs_aq184; assert_in_epsilon(67.15510085607352, worksheet.costs_aq184, 0.001); end
  def test_costs_ar184; assert_in_epsilon(63.204800805716246, worksheet.costs_ar184, 0.001); end
  def test_costs_b185; assert_equal("III.b", worksheet.costs_b185); end
  def test_costs_c185; assert_equal("Hydroelectric power stations", worksheet.costs_c185); end
  def test_costs_f185; assert_in_delta(0.3760614, worksheet.costs_f185, 0.001); end
  def test_costs_g185; assert_in_delta(0.38677783500000007, worksheet.costs_g185, 0.001); end
  def test_costs_h185; assert_in_delta(0.39585064500000006, worksheet.costs_h185, 0.001); end
  def test_costs_i185; assert_in_delta(0.40679718750000005, worksheet.costs_i185, 0.001); end
  def test_costs_j185; assert_in_delta(0.41787522000000005, worksheet.costs_j185, 0.001); end
  def test_costs_k185; assert_in_delta(0.42721101, worksheet.costs_k185, 0.001); end
  def test_costs_l185; assert_in_delta(0.43851914999999997, worksheet.costs_l185, 0.001); end
  def test_costs_m185; assert_in_delta(0.44995878, worksheet.costs_m185, 0.001); end
  def test_costs_n185; assert_in_delta(0.45955755, worksheet.costs_n185, 0.001); end
  def test_costs_p185; assert_in_epsilon(111.22344488173982, worksheet.costs_p185, 0.001); end
  def test_costs_q185; assert_in_epsilon(106.42391224187716, worksheet.costs_q185, 0.001); end
  def test_costs_r185; assert_in_epsilon(101.86775461038619, worksheet.costs_r185, 0.001); end
  def test_costs_s185; assert_in_epsilon(97.54010247315694, worksheet.costs_s185, 0.001); end
  def test_costs_t185; assert_in_epsilon(93.42718718567754, worksheet.costs_t185, 0.001); end
  def test_costs_u185; assert_in_epsilon(89.51624346296312, worksheet.costs_u185, 0.001); end
  def test_costs_v185; assert_in_epsilon(85.79542197966057, worksheet.costs_v185, 0.001); end
  def test_costs_w185; assert_in_epsilon(82.2537108802591, worksheet.costs_w185, 0.001); end
  def test_costs_x185; assert_in_epsilon(78.88086515935959, worksheet.costs_x185, 0.001); end
  def test_costs_z185; assert_in_epsilon(148.29792650898642, worksheet.costs_z185, 0.001); end
  def test_costs_aa185; assert_in_epsilon(141.89854965583623, worksheet.costs_aa185, 0.001); end
  def test_costs_ab185; assert_in_epsilon(135.82367281384828, worksheet.costs_ab185, 0.001); end
  def test_costs_ac185; assert_in_epsilon(130.05346996420928, worksheet.costs_ac185, 0.001); end
  def test_costs_ad185; assert_in_epsilon(124.56958291423675, worksheet.costs_ad185, 0.001); end
  def test_costs_ae185; assert_in_epsilon(119.35499128395085, worksheet.costs_ae185, 0.001); end
  def test_costs_af185; assert_in_epsilon(114.39389597288078, worksheet.costs_af185, 0.001); end
  def test_costs_ag185; assert_in_epsilon(109.67161450701214, worksheet.costs_ag185, 0.001); end
  def test_costs_ah185; assert_in_epsilon(105.1744868791461, worksheet.costs_ah185, 0.001); end
  def test_costs_aj185; assert_in_epsilon(129.76068569536312, worksheet.costs_aj185, 0.001); end
  def test_costs_ak185; assert_in_epsilon(124.1612309488567, worksheet.costs_ak185, 0.001); end
  def test_costs_al185; assert_in_epsilon(118.84571371211723, worksheet.costs_al185, 0.001); end
  def test_costs_am185; assert_in_epsilon(113.79678621868311, worksheet.costs_am185, 0.001); end
  def test_costs_an185; assert_in_epsilon(108.99838504995714, worksheet.costs_an185, 0.001); end
  def test_costs_ao185; assert_in_epsilon(104.43561737345698, worksheet.costs_ao185, 0.001); end
  def test_costs_ap185; assert_in_epsilon(100.09465897627068, worksheet.costs_ap185, 0.001); end
  def test_costs_aq185; assert_in_epsilon(95.96266269363562, worksheet.costs_aq185, 0.001); end
  def test_costs_ar185; assert_in_epsilon(92.02767601925285, worksheet.costs_ar185, 0.001); end
  def test_costs_b186; assert_equal("III.c", worksheet.costs_b186); end
  def test_costs_c186; assert_equal("Tidal and Wave [UNUSED]", worksheet.costs_c186); end
  def test_costs_f186; assert_in_delta(0, (worksheet.costs_f186||0), 0.001); end
  def test_costs_g186; assert_in_delta(0, (worksheet.costs_g186||0), 0.001); end
  def test_costs_h186; assert_in_delta(0, (worksheet.costs_h186||0), 0.001); end
  def test_costs_i186; assert_in_delta(0, (worksheet.costs_i186||0), 0.001); end
  def test_costs_j186; assert_in_delta(0, (worksheet.costs_j186||0), 0.001); end
  def test_costs_k186; assert_in_delta(0, (worksheet.costs_k186||0), 0.001); end
  def test_costs_l186; assert_in_delta(0, (worksheet.costs_l186||0), 0.001); end
  def test_costs_m186; assert_in_delta(0, (worksheet.costs_m186||0), 0.001); end
  def test_costs_n186; assert_in_delta(0, (worksheet.costs_n186||0), 0.001); end
  def test_costs_p186; assert_in_delta(0, (worksheet.costs_p186||0), 0.001); end
  def test_costs_q186; assert_in_delta(0, (worksheet.costs_q186||0), 0.001); end
  def test_costs_r186; assert_in_delta(0, (worksheet.costs_r186||0), 0.001); end
  def test_costs_s186; assert_in_delta(0, (worksheet.costs_s186||0), 0.001); end
  def test_costs_t186; assert_in_delta(0, (worksheet.costs_t186||0), 0.001); end
  def test_costs_u186; assert_in_delta(0, (worksheet.costs_u186||0), 0.001); end
  def test_costs_v186; assert_in_delta(0, (worksheet.costs_v186||0), 0.001); end
  def test_costs_w186; assert_in_delta(0, (worksheet.costs_w186||0), 0.001); end
  def test_costs_x186; assert_in_delta(0, (worksheet.costs_x186||0), 0.001); end
  def test_costs_z186; assert_in_delta(0, (worksheet.costs_z186||0), 0.001); end
  def test_costs_aa186; assert_in_delta(0, (worksheet.costs_aa186||0), 0.001); end
  def test_costs_ab186; assert_in_delta(0, (worksheet.costs_ab186||0), 0.001); end
  def test_costs_ac186; assert_in_delta(0, (worksheet.costs_ac186||0), 0.001); end
  def test_costs_ad186; assert_in_delta(0, (worksheet.costs_ad186||0), 0.001); end
  def test_costs_ae186; assert_in_delta(0, (worksheet.costs_ae186||0), 0.001); end
  def test_costs_af186; assert_in_delta(0, (worksheet.costs_af186||0), 0.001); end
  def test_costs_ag186; assert_in_delta(0, (worksheet.costs_ag186||0), 0.001); end
  def test_costs_ah186; assert_in_delta(0, (worksheet.costs_ah186||0), 0.001); end
  def test_costs_aj186; assert_in_delta(0, (worksheet.costs_aj186||0), 0.001); end
  def test_costs_ak186; assert_in_delta(0, (worksheet.costs_ak186||0), 0.001); end
  def test_costs_al186; assert_in_delta(0, (worksheet.costs_al186||0), 0.001); end
  def test_costs_am186; assert_in_delta(0, (worksheet.costs_am186||0), 0.001); end
  def test_costs_an186; assert_in_delta(0, (worksheet.costs_an186||0), 0.001); end
  def test_costs_ao186; assert_in_delta(0, (worksheet.costs_ao186||0), 0.001); end
  def test_costs_ap186; assert_in_delta(0, (worksheet.costs_ap186||0), 0.001); end
  def test_costs_aq186; assert_in_delta(0, (worksheet.costs_aq186||0), 0.001); end
  def test_costs_ar186; assert_in_delta(0, (worksheet.costs_ar186||0), 0.001); end
  def test_costs_b187; assert_equal("III.d", worksheet.costs_b187); end
  def test_costs_c187; assert_equal("Geothermal electricity", worksheet.costs_c187); end
  def test_costs_f187; assert_in_delta(0, (worksheet.costs_f187||0), 0.001); end
  def test_costs_g187; assert_in_delta(0.02607885, worksheet.costs_g187, 0.001); end
  def test_costs_h187; assert_in_epsilon(1.117665, worksheet.costs_h187, 0.001); end
  def test_costs_i187; assert_in_epsilon(2.1342441438356166, worksheet.costs_i187, 0.001); end
  def test_costs_j187; assert_in_epsilon(4.641043287671232, worksheet.costs_j187, 0.001); end
  def test_costs_k187; assert_in_epsilon(7.14784243150685, worksheet.costs_k187, 0.001); end
  def test_costs_l187; assert_in_epsilon(11.144861575342468, worksheet.costs_l187, 0.001); end
  def test_costs_m187; assert_in_epsilon(16.632100719178084, worksheet.costs_m187, 0.001); end
  def test_costs_n187; assert_in_epsilon(24.3546698630137, worksheet.costs_n187, 0.001); end
  def test_costs_aj187; assert_in_delta(0, (worksheet.costs_aj187||0), 0.001); end
  def test_costs_ak187; assert_in_epsilon(56.397729544110334, worksheet.costs_ak187, 0.001); end
  def test_costs_al187; assert_in_epsilon(69.03303527567859, worksheet.costs_al187, 0.001); end
  def test_costs_am187; assert_in_epsilon(66.3433547884933, worksheet.costs_am187, 0.001); end
  def test_costs_an187; assert_in_epsilon(65.27485459197743, worksheet.costs_an187, 0.001); end
  def test_costs_ao187; assert_in_epsilon(64.09949801802429, worksheet.costs_ao187, 0.001); end
  def test_costs_ap187; assert_in_epsilon(63.10625157148522, worksheet.costs_ap187, 0.001); end
  def test_costs_aq187; assert_in_epsilon(62.01327372026128, worksheet.costs_aq187, 0.001); end
  def test_costs_ar187; assert_in_epsilon(60.87753837006041, worksheet.costs_ar187, 0.001); end
  def test_costs_at187; assert_equal("Undiscounted", worksheet.costs_at187); end
  def test_costs_au187; assert_equal("Discounted", worksheet.costs_au187); end
  def test_costs_b188; assert_equal("III.e", worksheet.costs_b188); end
  def test_costs_c188; assert_equal("Tidal [UNUSED]", worksheet.costs_c188); end
  def test_costs_f188; assert_in_delta(0, (worksheet.costs_f188||0), 0.001); end
  def test_costs_g188; assert_in_delta(0, (worksheet.costs_g188||0), 0.001); end
  def test_costs_h188; assert_in_delta(0, (worksheet.costs_h188||0), 0.001); end
  def test_costs_i188; assert_in_delta(0, (worksheet.costs_i188||0), 0.001); end
  def test_costs_j188; assert_in_delta(0, (worksheet.costs_j188||0), 0.001); end
  def test_costs_k188; assert_in_delta(0, (worksheet.costs_k188||0), 0.001); end
  def test_costs_l188; assert_in_delta(0, (worksheet.costs_l188||0), 0.001); end
  def test_costs_m188; assert_in_delta(0, (worksheet.costs_m188||0), 0.001); end
  def test_costs_n188; assert_in_delta(0, (worksheet.costs_n188||0), 0.001); end
  def test_costs_p188; assert_in_delta(0, (worksheet.costs_p188||0), 0.001); end
  def test_costs_q188; assert_in_delta(0, (worksheet.costs_q188||0), 0.001); end
  def test_costs_r188; assert_in_delta(0, (worksheet.costs_r188||0), 0.001); end
  def test_costs_s188; assert_in_delta(0, (worksheet.costs_s188||0), 0.001); end
  def test_costs_t188; assert_in_delta(0, (worksheet.costs_t188||0), 0.001); end
  def test_costs_u188; assert_in_delta(0, (worksheet.costs_u188||0), 0.001); end
  def test_costs_v188; assert_in_delta(0, (worksheet.costs_v188||0), 0.001); end
  def test_costs_w188; assert_in_delta(0, (worksheet.costs_w188||0), 0.001); end
  def test_costs_x188; assert_in_delta(0, (worksheet.costs_x188||0), 0.001); end
  def test_costs_z188; assert_in_delta(0, (worksheet.costs_z188||0), 0.001); end
  def test_costs_aa188; assert_in_delta(0, (worksheet.costs_aa188||0), 0.001); end
  def test_costs_ab188; assert_in_delta(0, (worksheet.costs_ab188||0), 0.001); end
  def test_costs_ac188; assert_in_delta(0, (worksheet.costs_ac188||0), 0.001); end
  def test_costs_ad188; assert_in_delta(0, (worksheet.costs_ad188||0), 0.001); end
  def test_costs_ae188; assert_in_delta(0, (worksheet.costs_ae188||0), 0.001); end
  def test_costs_af188; assert_in_delta(0, (worksheet.costs_af188||0), 0.001); end
  def test_costs_ag188; assert_in_delta(0, (worksheet.costs_ag188||0), 0.001); end
  def test_costs_ah188; assert_in_delta(0, (worksheet.costs_ah188||0), 0.001); end
  def test_costs_aj188; assert_in_delta(0, (worksheet.costs_aj188||0), 0.001); end
  def test_costs_ak188; assert_in_delta(0, (worksheet.costs_ak188||0), 0.001); end
  def test_costs_al188; assert_in_delta(0, (worksheet.costs_al188||0), 0.001); end
  def test_costs_am188; assert_in_delta(0, (worksheet.costs_am188||0), 0.001); end
  def test_costs_an188; assert_in_delta(0, (worksheet.costs_an188||0), 0.001); end
  def test_costs_ao188; assert_in_delta(0, (worksheet.costs_ao188||0), 0.001); end
  def test_costs_ap188; assert_in_delta(0, (worksheet.costs_ap188||0), 0.001); end
  def test_costs_aq188; assert_in_delta(0, (worksheet.costs_aq188||0), 0.001); end
  def test_costs_ar188; assert_in_delta(0, (worksheet.costs_ar188||0), 0.001); end
  def test_costs_as188; assert_equal("Fuel", worksheet.costs_as188); end
  def test_costs_ai150; assert_in_epsilon(25639.520089702663, worksheet.costs_ai150, 0.001); end
  def test_costs_at188; assert_in_epsilon(25639.520089702663, worksheet.costs_at188, 0.001); end
  def test_costs_bw150; assert_in_epsilon(72390.29495352706, worksheet.costs_bw150, 0.001); end
  def test_costs_au188; assert_in_epsilon(72390.29495352706, worksheet.costs_au188, 0.001); end
  def test_costs_b189; assert_equal("IV.a", worksheet.costs_b189); end
  def test_costs_c189; assert_equal("Solar PV", worksheet.costs_c189); end
  def test_costs_f189; assert_in_delta(0.60143532, worksheet.costs_f189, 0.001); end
  def test_costs_g189; assert_in_epsilon(1.6214760000000001, worksheet.costs_g189, 0.001); end
  def test_costs_h189; assert_in_epsilon(2.3958600000000003, worksheet.costs_h189, 0.001); end
  def test_costs_i189; assert_in_epsilon(3.38136, worksheet.costs_i189, 0.001); end
  def test_costs_j189; assert_in_epsilon(4.65156, worksheet.costs_j189, 0.001); end
  def test_costs_k189; assert_in_epsilon(5.447844, worksheet.costs_k189, 0.001); end
  def test_costs_l189; assert_in_epsilon(7.06056, worksheet.costs_l189, 0.001); end
  def test_costs_m189; assert_in_epsilon(9.505476000000002, worksheet.costs_m189, 0.001); end
  def test_costs_n189; assert_in_epsilon(12.571476, worksheet.costs_n189, 0.001); end
  def test_costs_p189; assert_in_epsilon(487.4865921383241, worksheet.costs_p189, 0.001); end
  def test_costs_q189; assert_in_epsilon(275.845334417625, worksheet.costs_q189, 0.001); end
  def test_costs_r189; assert_in_epsilon(209.70151072721163, worksheet.costs_r189, 0.001); end
  def test_costs_s189; assert_in_epsilon(146.47849994295493, worksheet.costs_s189, 0.001); end
  def test_costs_t189; assert_in_epsilon(85.3329859274008, worksheet.costs_t189, 0.001); end
  def test_costs_u189; assert_in_epsilon(78.84640407772817, worksheet.costs_u189, 0.001); end
  def test_costs_v189; assert_in_epsilon(72.46110073528266, worksheet.costs_v189, 0.001); end
  def test_costs_w189; assert_in_epsilon(66.16260604403901, worksheet.costs_w189, 0.001); end
  def test_costs_x189; assert_in_epsilon(59.938461852062694, worksheet.costs_x189, 0.001); end
  def test_costs_z189; assert_in_epsilon(505.88231259637405, worksheet.costs_z189, 0.001); end
  def test_costs_aa189; assert_in_epsilon(307.7349684543446, worksheet.costs_aa189, 0.001); end
  def test_costs_ab189; assert_in_epsilon(259.7794834381876, worksheet.costs_ab189, 0.001); end
  def test_costs_ac189; assert_in_epsilon(214.3211736007446, worksheet.costs_ac189, 0.001); end
  def test_costs_ad189; assert_in_epsilon(170.6659718548016, worksheet.costs_ad189, 0.001); end
  def test_costs_ae189; assert_in_epsilon(157.69280815545633, worksheet.costs_ae189, 0.001); end
  def test_costs_af189; assert_in_epsilon(144.9222014705653, worksheet.costs_af189, 0.001); end
  def test_costs_ag189; assert_in_epsilon(132.32521208807802, worksheet.costs_ag189, 0.001); end
  def test_costs_ah189; assert_in_epsilon(119.87692370412539, worksheet.costs_ah189, 0.001); end
  def test_costs_aj189; assert_in_epsilon(496.6844523673491, worksheet.costs_aj189, 0.001); end
  def test_costs_ak189; assert_in_epsilon(291.7901514359848, worksheet.costs_ak189, 0.001); end
  def test_costs_al189; assert_in_epsilon(234.74049708269962, worksheet.costs_al189, 0.001); end
  def test_costs_am189; assert_in_epsilon(180.39983677184978, worksheet.costs_am189, 0.001); end
  def test_costs_an189; assert_in_epsilon(127.9994788911012, worksheet.costs_an189, 0.001); end
  def test_costs_ao189; assert_in_epsilon(118.26960611659226, worksheet.costs_ao189, 0.001); end
  def test_costs_ap189; assert_in_epsilon(108.69165110292398, worksheet.costs_ap189, 0.001); end
  def test_costs_aq189; assert_in_epsilon(99.2439090660585, worksheet.costs_aq189, 0.001); end
  def test_costs_ar189; assert_in_epsilon(89.90769277809405, worksheet.costs_ar189, 0.001); end
  def test_costs_as189; assert_equal("O&M", worksheet.costs_as189); end
  def test_costs_y150; assert_in_epsilon(10347.167128998988, worksheet.costs_y150, 0.001); end
  def test_costs_at189; assert_in_epsilon(10347.167128998988, worksheet.costs_at189, 0.001); end
  def test_costs_bm150; assert_in_epsilon(25531.13638183406, worksheet.costs_bm150, 0.001); end
  def test_costs_au189; assert_in_epsilon(25531.13638183406, worksheet.costs_au189, 0.001); end
  def test_costs_b190; assert_equal("IX.a", worksheet.costs_b190); end
  def test_costs_c190; assert_equal("Domestic space heating and hot water", worksheet.costs_c190); end
  def test_costs_f190; assert_in_delta(0, (worksheet.costs_f190||0), 0.001); end
  def test_costs_g190; assert_in_delta(0.15655881031461183, worksheet.costs_g190, 0.001); end
  def test_costs_h190; assert_in_delta(0.3144011297886694, worksheet.costs_h190, 0.001); end
  def test_costs_i190; assert_in_delta(0.474851657962819, worksheet.costs_i190, 0.001); end
  def test_costs_j190; assert_in_delta(0.6206025714220124, worksheet.costs_j190, 0.001); end
  def test_costs_k190; assert_in_delta(0.7646442937302946, worksheet.costs_k190, 0.001); end
  def test_costs_l190; assert_in_delta(0.9100266549790077, worksheet.costs_l190, 0.001); end
  def test_costs_m190; assert_in_epsilon(1.0587615833686979, worksheet.costs_m190, 0.001); end
  def test_costs_n190; assert_in_epsilon(1.2235674157756244, worksheet.costs_n190, 0.001); end
  def test_costs_p190; assert_in_delta(0, (worksheet.costs_p190||0), 0.001); end
  def test_costs_q190; assert_in_delta(0, (worksheet.costs_q190||0), 0.001); end
  def test_costs_r190; assert_in_delta(0, (worksheet.costs_r190||0), 0.001); end
  def test_costs_s190; assert_in_delta(0, (worksheet.costs_s190||0), 0.001); end
  def test_costs_t190; assert_in_delta(0, (worksheet.costs_t190||0), 0.001); end
  def test_costs_u190; assert_in_delta(0, (worksheet.costs_u190||0), 0.001); end
  def test_costs_v190; assert_in_delta(0, (worksheet.costs_v190||0), 0.001); end
  def test_costs_w190; assert_in_delta(0, (worksheet.costs_w190||0), 0.001); end
  def test_costs_x190; assert_in_delta(0, (worksheet.costs_x190||0), 0.001); end
  def test_costs_z190; assert_in_delta(0, (worksheet.costs_z190||0), 0.001); end
  def test_costs_aa190; assert_in_delta(0, (worksheet.costs_aa190||0), 0.001); end
  def test_costs_ab190; assert_in_delta(0, (worksheet.costs_ab190||0), 0.001); end
  def test_costs_ac190; assert_in_delta(0, (worksheet.costs_ac190||0), 0.001); end
  def test_costs_ad190; assert_in_delta(0, (worksheet.costs_ad190||0), 0.001); end
  def test_costs_ae190; assert_in_delta(0, (worksheet.costs_ae190||0), 0.001); end
  def test_costs_af190; assert_in_delta(0, (worksheet.costs_af190||0), 0.001); end
  def test_costs_ag190; assert_in_delta(0, (worksheet.costs_ag190||0), 0.001); end
  def test_costs_ah190; assert_in_delta(0, (worksheet.costs_ah190||0), 0.001); end
  def test_costs_aj190; assert_in_delta(0, (worksheet.costs_aj190||0), 0.001); end
  def test_costs_ak190; assert_in_delta(0, (worksheet.costs_ak190||0), 0.001); end
  def test_costs_al190; assert_in_delta(0, (worksheet.costs_al190||0), 0.001); end
  def test_costs_am190; assert_in_delta(0, (worksheet.costs_am190||0), 0.001); end
  def test_costs_an190; assert_in_delta(0, (worksheet.costs_an190||0), 0.001); end
  def test_costs_ao190; assert_in_delta(0, (worksheet.costs_ao190||0), 0.001); end
  def test_costs_ap190; assert_in_delta(0, (worksheet.costs_ap190||0), 0.001); end
  def test_costs_aq190; assert_in_delta(0, (worksheet.costs_aq190||0), 0.001); end
  def test_costs_ar190; assert_in_delta(0, (worksheet.costs_ar190||0), 0.001); end
  def test_costs_as190; assert_equal("Investment", worksheet.costs_as190); end
  def test_costs_o150; assert_in_epsilon(37008.969565033476, worksheet.costs_o150, 0.001); end
  def test_costs_at190; assert_in_epsilon(37008.969565033476, worksheet.costs_at190, 0.001); end
  def test_costs_bc150; assert_in_epsilon(91428.34512591166, worksheet.costs_bc150, 0.001); end
  def test_costs_au190; assert_in_epsilon(91428.34512591166, worksheet.costs_au190, 0.001); end
  def test_costs_b191; assert_equal("IX.c", worksheet.costs_b191); end
  def test_costs_c191; assert_equal("Commercial heating and cooling", worksheet.costs_c191); end
  def test_costs_f191; assert_in_delta(0, (worksheet.costs_f191||0), 0.001); end
  def test_costs_g191; assert_in_delta(0, (worksheet.costs_g191||0), 0.001); end
  def test_costs_h191; assert_in_delta(0.04451833355036168, worksheet.costs_h191, 0.001); end
  def test_costs_i191; assert_in_delta(0.08000889257104199, worksheet.costs_i191, 0.001); end
  def test_costs_j191; assert_in_delta(0.10750720036834278, worksheet.costs_j191, 0.001); end
  def test_costs_k191; assert_in_delta(0.12701786664519638, worksheet.costs_k191, 0.001); end
  def test_costs_l191; assert_in_delta(0.13966505173773808, worksheet.costs_l191, 0.001); end
  def test_costs_m191; assert_in_delta(0.14556250687342376, worksheet.costs_m191, 0.001); end
  def test_costs_n191; assert_in_delta(0.16590301057785156, worksheet.costs_n191, 0.001); end
  def test_costs_p191; assert_in_delta(0, (worksheet.costs_p191||0), 0.001); end
  def test_costs_q191; assert_in_delta(0, (worksheet.costs_q191||0), 0.001); end
  def test_costs_r191; assert_in_delta(0, (worksheet.costs_r191||0), 0.001); end
  def test_costs_s191; assert_in_delta(0, (worksheet.costs_s191||0), 0.001); end
  def test_costs_t191; assert_in_delta(0, (worksheet.costs_t191||0), 0.001); end
  def test_costs_u191; assert_in_delta(0, (worksheet.costs_u191||0), 0.001); end
  def test_costs_v191; assert_in_delta(0, (worksheet.costs_v191||0), 0.001); end
  def test_costs_w191; assert_in_delta(0, (worksheet.costs_w191||0), 0.001); end
  def test_costs_x191; assert_in_delta(0, (worksheet.costs_x191||0), 0.001); end
  def test_costs_z191; assert_in_delta(0, (worksheet.costs_z191||0), 0.001); end
  def test_costs_aa191; assert_in_delta(0, (worksheet.costs_aa191||0), 0.001); end
  def test_costs_ab191; assert_in_delta(0, (worksheet.costs_ab191||0), 0.001); end
  def test_costs_ac191; assert_in_delta(0, (worksheet.costs_ac191||0), 0.001); end
  def test_costs_ad191; assert_in_delta(0, (worksheet.costs_ad191||0), 0.001); end
  def test_costs_ae191; assert_in_delta(0, (worksheet.costs_ae191||0), 0.001); end
  def test_costs_af191; assert_in_delta(0, (worksheet.costs_af191||0), 0.001); end
  def test_costs_ag191; assert_in_delta(0, (worksheet.costs_ag191||0), 0.001); end
  def test_costs_ah191; assert_in_delta(0, (worksheet.costs_ah191||0), 0.001); end
  def test_costs_aj191; assert_in_delta(0, (worksheet.costs_aj191||0), 0.001); end
  def test_costs_ak191; assert_in_delta(0, (worksheet.costs_ak191||0), 0.001); end
  def test_costs_al191; assert_in_delta(0, (worksheet.costs_al191||0), 0.001); end
  def test_costs_am191; assert_in_delta(0, (worksheet.costs_am191||0), 0.001); end
  def test_costs_an191; assert_in_delta(0, (worksheet.costs_an191||0), 0.001); end
  def test_costs_ao191; assert_in_delta(0, (worksheet.costs_ao191||0), 0.001); end
  def test_costs_ap191; assert_in_delta(0, (worksheet.costs_ap191||0), 0.001); end
  def test_costs_aq191; assert_in_delta(0, (worksheet.costs_aq191||0), 0.001); end
  def test_costs_ar191; assert_in_delta(0, (worksheet.costs_ar191||0), 0.001); end
  def test_costs_at191; assert_in_epsilon(72995.65678373512, worksheet.costs_at191, 0.001); end
  def test_costs_au191; assert_in_epsilon(189349.7764612728, worksheet.costs_au191, 0.001); end
  def test_costs_b192; assert_equal("VII.a", worksheet.costs_b192); end
  def test_costs_c192; assert_equal("Imports of decarbonized electricity", worksheet.costs_c192); end
  def test_costs_f192; assert_in_delta(0, (worksheet.costs_f192||0), 0.001); end
  def test_costs_g192; assert_in_delta(0.2625, worksheet.costs_g192, 0.001); end
  def test_costs_h192; assert_in_delta(0.525, worksheet.costs_h192, 0.001); end
  def test_costs_i192; assert_in_delta(0.7875000000000001, worksheet.costs_i192, 0.001); end
  def test_costs_j192; assert_in_epsilon(1.05, worksheet.costs_j192, 0.001); end
  def test_costs_k192; assert_in_epsilon(1.3125, worksheet.costs_k192, 0.001); end
  def test_costs_l192; assert_in_epsilon(1.575, worksheet.costs_l192, 0.001); end
  def test_costs_m192; assert_in_epsilon(1.8375, worksheet.costs_m192, 0.001); end
  def test_costs_n192; assert_in_epsilon(2.1, worksheet.costs_n192, 0.001); end
  def test_costs_aj192; assert_in_epsilon(72, worksheet.costs_aj192, 0.001); end
  def test_costs_ak192; assert_in_epsilon(78, worksheet.costs_ak192, 0.001); end
  def test_costs_al192; assert_in_epsilon(84, worksheet.costs_al192, 0.001); end
  def test_costs_am192; assert_in_epsilon(85.25, worksheet.costs_am192, 0.001); end
  def test_costs_an192; assert_in_epsilon(86.5, worksheet.costs_an192, 0.001); end
  def test_costs_ao192; assert_in_epsilon(84.75, worksheet.costs_ao192, 0.001); end
  def test_costs_ap192; assert_in_epsilon(83, worksheet.costs_ap192, 0.001); end
  def test_costs_aq192; assert_in_epsilon(82, worksheet.costs_aq192, 0.001); end
  def test_costs_ar192; assert_in_epsilon(81, worksheet.costs_ar192, 0.001); end
  def test_costs_c193; assert_equal("Total", worksheet.costs_c193); end
  def test_costs_ak193; assert_in_epsilon(68.19582116426872, worksheet.costs_ak193, 0.001); end
  def test_costs_al193; assert_in_epsilon(75.74196055351227, worksheet.costs_al193, 0.001); end
  def test_costs_am193; assert_in_epsilon(97.28706468235157, worksheet.costs_am193, 0.001); end
  def test_costs_an193; assert_in_epsilon(93.1851479380366, worksheet.costs_an193, 0.001); end
  def test_costs_ao193; assert_in_epsilon(89.02450255218142, worksheet.costs_ao193, 0.001); end
  def test_costs_ap193; assert_in_epsilon(86.25109814628419, worksheet.costs_ap193, 0.001); end
  def test_costs_aq193; assert_in_epsilon(83.80479841208917, worksheet.costs_aq193, 0.001); end
  def test_costs_d196; assert_equal("Electricity", worksheet.costs_d196); end
  def test_costs_e196; assert_equal("Fuel", worksheet.costs_e196); end
  def test_costs_ai176; assert_in_epsilon(2488.96751088165, worksheet.costs_ai176, 0.001); end
  def test_costs_f196; assert_in_epsilon(2488.96751088165, worksheet.costs_f196, 0.001); end
  def test_costs_e197; assert_equal("O&M", worksheet.costs_e197); end
  def test_costs_y176; assert_in_epsilon(924.3039015991266, worksheet.costs_y176, 0.001); end
  def test_costs_f197; assert_in_epsilon(924.3039015991266, worksheet.costs_f197, 0.001); end
  def test_costs_e198; assert_equal("Capital", worksheet.costs_e198); end
  def test_costs_o176; assert_in_epsilon(2336.320543943076, worksheet.costs_o176, 0.001); end
  def test_costs_f198; assert_in_epsilon(2336.320543943076, worksheet.costs_f198, 0.001); end
  def test_costs_e199; assert_equal("Total", worksheet.costs_e199); end
  def test_costs_f199; assert_in_epsilon(5749.591956423852, worksheet.costs_f199, 0.001); end
  def test_costs_d201; assert_equal("Energy", worksheet.costs_d201); end
  def test_costs_e201; assert_equal("Fuel", worksheet.costs_e201); end
  def test_costs_f201; assert_in_epsilon(9792.683121647546, worksheet.costs_f201, 0.001); end
  def test_costs_e202; assert_equal("O&M", worksheet.costs_e202); end
  def test_costs_f202; assert_in_epsilon(1339.0529980085516, worksheet.costs_f202, 0.001); end
  def test_costs_e203; assert_equal("Capital", worksheet.costs_e203); end
  def test_costs_f203; assert_in_epsilon(2784.6649652596852, worksheet.costs_f203, 0.001); end
  def test_costs_e204; assert_equal("Total", worksheet.costs_e204); end
  def test_costs_f204; assert_in_epsilon(13916.401084915782, worksheet.costs_f204, 0.001); end
  def test_costs_m205; assert_in_epsilon(2679.99, worksheet.costs_m205, 0.001); end
  def test_costs_m206; assert_in_epsilon(1329.94, worksheet.costs_m206, 0.001); end
  def test_costs_d207; assert_equal("Electricity investments", worksheet.costs_d207); end
  def test_costs_e207; assert_equal("Grid and balancing implications", worksheet.costs_e207); end
  def test_costs_o175; assert_in_epsilon(245.02143256729926, worksheet.costs_o175, 0.001); end
  def test_costs_f207; assert_in_epsilon(245.02143256729926, worksheet.costs_f207, 0.001); end
  def test_costs_m207; assert_in_epsilon(4009.93, worksheet.costs_m207, 0.001); end
  def test_costs_e208; assert_equal("Wind power (on and offshore)", worksheet.costs_e208); end
  def test_costs_o171; assert_in_epsilon(786.1809257462371, worksheet.costs_o171, 0.001); end
  def test_costs_f208; assert_in_epsilon(786.1809257462371, worksheet.costs_f208, 0.001); end
  def test_costs_e209; assert_equal("Solar PV", worksheet.costs_e209); end
  def test_costs_o172; assert_in_epsilon(543.6433333333333, worksheet.costs_o172, 0.001); end
  def test_costs_f209; assert_in_epsilon(543.6433333333333, worksheet.costs_f209, 0.001); end
  def test_costs_e210; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_e210); end
  def test_costs_o169; assert_in_delta(0, (worksheet.costs_o169||0), 0.001); end
  def test_costs_f210; assert_in_delta(0, (worksheet.costs_f210||0), 0.001); end
  def test_costs_e211; assert_equal("Hydro and geothermal", worksheet.costs_e211); end
  def test_costs_o173; assert_in_epsilon(263.67299437383303, worksheet.costs_o173, 0.001); end
  def test_costs_f211; assert_in_epsilon(263.67299437383303, worksheet.costs_f211, 0.001); end
  def test_costs_e212; assert_equal("Biomass and gas power stations", worksheet.costs_e212); end
  def test_costs_o168; assert_in_epsilon(497.80185792237313, worksheet.costs_o168, 0.001); end
  def test_costs_f212; assert_in_epsilon(497.80185792237313, worksheet.costs_f212, 0.001); end
  def test_costs_e213; assert_equal("Total", worksheet.costs_e213); end
  def test_costs_f213; assert_in_epsilon(2336.3205439430762, worksheet.costs_f213, 0.001); end
  def test_costs_d216; assert_equal("Discounting analysis", worksheet.costs_d216); end
  def test_costs_e216; assert_equal("Total costs not discounted", worksheet.costs_e216); end
  def test_costs_f217; assert_in_epsilon(2010, worksheet.costs_f217, 0.001); end
  def test_costs_g217; assert_in_epsilon(2015, worksheet.costs_g217, 0.001); end
  def test_costs_h217; assert_in_epsilon(2020, worksheet.costs_h217, 0.001); end
  def test_costs_i217; assert_in_epsilon(2025, worksheet.costs_i217, 0.001); end
  def test_costs_j217; assert_in_epsilon(2030, worksheet.costs_j217, 0.001); end
  def test_costs_k217; assert_in_epsilon(2035, worksheet.costs_k217, 0.001); end
  def test_costs_l217; assert_in_epsilon(2040, worksheet.costs_l217, 0.001); end
  def test_costs_m217; assert_in_epsilon(2045, worksheet.costs_m217, 0.001); end
  def test_costs_n217; assert_in_epsilon(2050, worksheet.costs_n217, 0.001); end
  def test_costs_o217; assert_equal("TOTAL OVER 40 YEARS", worksheet.costs_o217); end
  def test_costs_e218; assert_equal("Fuel", worksheet.costs_e218); end
  def test_costs_f218; assert_in_epsilon(28.684624240984146, worksheet.costs_f218, 0.001); end
  def test_costs_g218; assert_in_epsilon(26.981899420185837, worksheet.costs_g218, 0.001); end
  def test_costs_h218; assert_in_epsilon(27.130058680346757, worksheet.costs_h218, 0.001); end
  def test_costs_i218; assert_in_epsilon(30.943288253491293, worksheet.costs_i218, 0.001); end
  def test_costs_j218; assert_in_epsilon(28.493922091311507, worksheet.costs_j218, 0.001); end
  def test_costs_k218; assert_in_epsilon(25.531619699514042, worksheet.costs_k218, 0.001); end
  def test_costs_l218; assert_in_epsilon(23.238637004109986, worksheet.costs_l218, 0.001); end
  def test_costs_m218; assert_in_epsilon(20.954312646467063, worksheet.costs_m218, 0.001); end
  def test_costs_n218; assert_in_epsilon(18.79731877091334, worksheet.costs_n218, 0.001); end
  def test_costs_o218; assert_in_epsilon(230.75568080732396, worksheet.costs_o218, 0.001); end
  def test_costs_e219; assert_equal("O&M", worksheet.costs_e219); end
  def test_costs_f219; assert_in_epsilon(8.980973763740902, worksheet.costs_f219, 0.001); end
  def test_costs_g219; assert_in_epsilon(9.952788939958268, worksheet.costs_g219, 0.001); end
  def test_costs_h219; assert_in_epsilon(10.47519224440353, worksheet.costs_h219, 0.001); end
  def test_costs_i219; assert_in_epsilon(10.529808768776515, worksheet.costs_i219, 0.001); end
  def test_costs_j219; assert_in_epsilon(10.732860889808913, worksheet.costs_j219, 0.001); end
  def test_costs_k219; assert_in_epsilon(10.784958969349878, worksheet.costs_k219, 0.001); end
  def test_costs_l219; assert_in_epsilon(10.726179941141941, worksheet.costs_l219, 0.001); end
  def test_costs_m219; assert_in_epsilon(10.577602033492976, worksheet.costs_m219, 0.001); end
  def test_costs_n219; assert_in_epsilon(10.364138610317966, worksheet.costs_n219, 0.001); end
  def test_costs_o219; assert_in_epsilon(93.1245041609909, worksheet.costs_o219, 0.001); end
  def test_costs_e220; assert_equal("Capital", worksheet.costs_e220); end
  def test_costs_f220; assert_in_epsilon(32.448718818266165, worksheet.costs_f220, 0.001); end
  def test_costs_g220; assert_in_epsilon(35.19835141499249, worksheet.costs_g220, 0.001); end
  def test_costs_h220; assert_in_epsilon(38.75974007854608, worksheet.costs_h220, 0.001); end
  def test_costs_i220; assert_in_epsilon(36.905038574503294, worksheet.costs_i220, 0.001); end
  def test_costs_j220; assert_in_epsilon(37.350819772570375, worksheet.costs_j220, 0.001); end
  def test_costs_k220; assert_in_epsilon(36.84332634203031, worksheet.costs_k220, 0.001); end
  def test_costs_l220; assert_in_epsilon(37.74279959174475, worksheet.costs_l220, 0.001); end
  def test_costs_m220; assert_in_epsilon(37.864418803622904, worksheet.costs_m220, 0.001); end
  def test_costs_n220; assert_in_epsilon(39.9675126890249, worksheet.costs_n220, 0.001); end
  def test_costs_o220; assert_in_epsilon(333.0807260853013, worksheet.costs_o220, 0.001); end
  def test_costs_e221; assert_equal("Total", worksheet.costs_e221); end
  def test_costs_f221; assert_in_epsilon(70.11431682299121, worksheet.costs_f221, 0.001); end
  def test_costs_g221; assert_in_epsilon(72.1330397751366, worksheet.costs_g221, 0.001); end
  def test_costs_h221; assert_in_epsilon(76.36499100329637, worksheet.costs_h221, 0.001); end
  def test_costs_i221; assert_in_epsilon(78.3781355967711, worksheet.costs_i221, 0.001); end
  def test_costs_j221; assert_in_epsilon(76.5776027536908, worksheet.costs_j221, 0.001); end
  def test_costs_k221; assert_in_epsilon(73.15990501089422, worksheet.costs_k221, 0.001); end
  def test_costs_l221; assert_in_epsilon(71.70761653699668, worksheet.costs_l221, 0.001); end
  def test_costs_m221; assert_in_epsilon(69.39633348358294, worksheet.costs_m221, 0.001); end
  def test_costs_n221; assert_in_epsilon(69.1289700702562, worksheet.costs_n221, 0.001); end
  def test_costs_o221; assert_in_epsilon(656.9609110536162, worksheet.costs_o221, 0.001); end
  def test_costs_e223; assert_equal("Total costs discounted", worksheet.costs_e223); end
  def test_costs_f224; assert_in_epsilon(2010, worksheet.costs_f224, 0.001); end
  def test_costs_g224; assert_in_epsilon(2015, worksheet.costs_g224, 0.001); end
  def test_costs_h224; assert_in_epsilon(2020, worksheet.costs_h224, 0.001); end
  def test_costs_i224; assert_in_epsilon(2025, worksheet.costs_i224, 0.001); end
  def test_costs_j224; assert_in_epsilon(2030, worksheet.costs_j224, 0.001); end
  def test_costs_k224; assert_in_epsilon(2035, worksheet.costs_k224, 0.001); end
  def test_costs_l224; assert_in_epsilon(2040, worksheet.costs_l224, 0.001); end
  def test_costs_m224; assert_in_epsilon(2045, worksheet.costs_m224, 0.001); end
  def test_costs_n224; assert_in_epsilon(2050, worksheet.costs_n224, 0.001); end
  def test_costs_o224; assert_equal("TOTAL OVER 40 YEARS", worksheet.costs_o224); end
  def test_costs_e225; assert_equal("Fuel", worksheet.costs_e225); end
  def test_costs_f225; assert_in_epsilon(28.684624240984146, worksheet.costs_f225, 0.001); end
  def test_costs_g225; assert_in_epsilon(16.753636686630834, worksheet.costs_g225, 0.001); end
  def test_costs_h225; assert_in_epsilon(10.459812066037102, worksheet.costs_h225, 0.001); end
  def test_costs_i225; assert_in_epsilon(7.407577189224042, worksheet.costs_i225, 0.001); end
  def test_costs_j225; assert_in_epsilon(4.235439956289832, worksheet.costs_j225, 0.001); end
  def test_costs_k225; assert_in_epsilon(2.3564663252438405, worksheet.costs_k225, 0.001); end
  def test_costs_l225; assert_in_epsilon(1.3317726673965313, worksheet.costs_l225, 0.001); end
  def test_costs_m225; assert_in_delta(0.7456404140237535, worksheet.costs_m225, 0.001); end
  def test_costs_n225; assert_in_delta(0.4153254076969535, worksheet.costs_n225, 0.001); end
  def test_costs_o225; assert_in_epsilon(72.39029495352705, worksheet.costs_o225, 0.001); end
  def test_costs_e226; assert_equal("O&M", worksheet.costs_e226); end
  def test_costs_f226; assert_in_epsilon(8.980973763740902, worksheet.costs_f226, 0.001); end
  def test_costs_g226; assert_in_epsilon(6.179898876727411, worksheet.costs_g226, 0.001); end
  def test_costs_h226; assert_in_epsilon(4.038640075314054, worksheet.costs_h226, 0.001); end
  def test_costs_i226; assert_in_epsilon(2.520752500622797, worksheet.costs_i226, 0.001); end
  def test_costs_j226; assert_in_epsilon(1.5953713817396336, worksheet.costs_j226, 0.001); end
  def test_costs_k226; assert_in_delta(0.995408553374827, worksheet.costs_k226, 0.001); end
  def test_costs_l226; assert_in_delta(0.6147018548748517, worksheet.costs_l226, 0.001); end
  def test_costs_m226; assert_in_delta(0.37639447748537713, worksheet.costs_m226, 0.001); end
  def test_costs_n226; assert_in_delta(0.2289948979542094, worksheet.costs_n226, 0.001); end
  def test_costs_o226; assert_in_epsilon(25.53113638183406, worksheet.costs_o226, 0.001); end
  def test_costs_e227; assert_equal("Capital", worksheet.costs_e227); end
  def test_costs_f227; assert_in_epsilon(32.448718818266165, worksheet.costs_f227, 0.001); end
  def test_costs_g227; assert_in_epsilon(21.855406930098216, worksheet.costs_g227, 0.001); end
  def test_costs_h227; assert_in_epsilon(14.943557687316302, worksheet.costs_h227, 0.001); end
  def test_costs_i227; assert_in_epsilon(8.83477281639837, worksheet.costs_i227, 0.001); end
  def test_costs_j227; assert_in_epsilon(5.551961360670774, worksheet.costs_j227, 0.001); end
  def test_costs_k227; assert_in_epsilon(3.4004915809010052, worksheet.costs_k227, 0.001); end
  def test_costs_l227; assert_in_epsilon(2.1629852421388045, worksheet.costs_l227, 0.001); end
  def test_costs_m227; assert_in_epsilon(1.3473713688366846, worksheet.costs_m227, 0.001); end
  def test_costs_n227; assert_in_delta(0.8830793212853452, worksheet.costs_n227, 0.001); end
  def test_costs_o227; assert_in_epsilon(91.42834512591168, worksheet.costs_o227, 0.001); end
  def test_costs_e228; assert_equal("Total", worksheet.costs_e228); end
  def test_costs_f228; assert_in_epsilon(70.11431682299121, worksheet.costs_f228, 0.001); end
  def test_costs_g228; assert_in_epsilon(44.78894249345646, worksheet.costs_g228, 0.001); end
  def test_costs_h228; assert_in_epsilon(29.44200982866746, worksheet.costs_h228, 0.001); end
  def test_costs_i228; assert_in_epsilon(18.76310250624521, worksheet.costs_i228, 0.001); end
  def test_costs_j228; assert_in_epsilon(11.38277269870024, worksheet.costs_j228, 0.001); end
  def test_costs_k228; assert_in_epsilon(6.752366459519672, worksheet.costs_k228, 0.001); end
  def test_costs_l228; assert_in_epsilon(4.109459764410188, worksheet.costs_l228, 0.001); end
  def test_costs_m228; assert_in_epsilon(2.4694062603458153, worksheet.costs_m228, 0.001); end
  def test_costs_n228; assert_in_epsilon(1.527399626936508, worksheet.costs_n228, 0.001); end
  def test_costs_o228; assert_in_epsilon(189.34977646127277, worksheet.costs_o228, 0.001); end
  def test_control_aa8; assert_in_epsilon(15, worksheet.control_aa8, 0.001); end
  def test_control_aa12; assert_in_epsilon(30, worksheet.control_aa12, 0.001); end
  def test_control_aa28; assert_in_epsilon(10, worksheet.control_aa28, 0.001); end
  def test_control_aa19; assert_in_epsilon(15, worksheet.control_aa19, 0.001); end
  def test_control_h21; assert_in_epsilon(3, worksheet.control_h21, 0.001); end
  def test_control_h22; assert_in_delta(1, worksheet.control_h22, 0.001); end
  def test_control_h29; assert_in_epsilon(3, worksheet.control_h29, 0.001); end
  def test_control_h30; assert_in_delta(1, worksheet.control_h30, 0.001); end
  def test_control_h33; assert_in_epsilon(3, worksheet.control_h33, 0.001); end
  def test_xi_a_a1; assert_equal("XI", worksheet.xi_a_a1); end
  def test_xi_a_b1; assert_equal("Industry", worksheet.xi_a_b1); end
  def test_xi_a_o1; assert_equal("CONTROL PANEL", worksheet.xi_a_o1); end
  def test_xi_a_a2; assert_equal("XI.a", worksheet.xi_a_a2); end
  def test_xi_a_b2; assert_equal("Steel Industry", worksheet.xi_a_b2); end
  def test_xi_a_b4; assert_equal("Trajectory choice", worksheet.xi_a_b4); end
  def test_xi_a_d7; assert_equal("Component", worksheet.xi_a_d7); end
  def test_xi_a_e7; assert_equal("Trajectory", worksheet.xi_a_e7); end
  def test_xi_a_f7; assert_equal("Notes", worksheet.xi_a_f7); end
  def test_xi_a_c8; assert_equal("(i)", worksheet.xi_a_c8); end
  def test_xi_a_d8; assert_equal("Steel Output Growth", worksheet.xi_a_d8); end
  def test_xi_a_f8; assert_equal("(1 for high, 3 for low)", worksheet.xi_a_f8); end
  def test_xi_a_c9; assert_equal("(ii)", worksheet.xi_a_c9); end
  def test_xi_a_d9; assert_equal("Steel Energy intensity", worksheet.xi_a_d9); end
  def test_xi_a_f9; assert_equal("(1 for not ambition, 4 for ambitious)", worksheet.xi_a_f9); end
  def test_xi_a_c10; assert_equal("     1", worksheet.xi_a_c10); end
  def test_xi_a_d10; assert_equal("Product mix : increase of EAF process", worksheet.xi_a_d10); end
  def test_control_h35; assert_in_epsilon(30, worksheet.control_h35, 0.001); end
  def test_xi_a_e9; assert_in_epsilon(3, worksheet.xi_a_e9, 0.001); end
  def test_xi_a_e10; assert_in_epsilon(3, worksheet.xi_a_e10, 0.001); end
  def test_xi_a_f10; assert_equal("(by default, same as global)", worksheet.xi_a_f10); end
  def test_xi_a_c11; assert_equal("     2", worksheet.xi_a_c11); end
  def test_xi_a_d11; assert_equal("Product mix:  increase of hard steal", worksheet.xi_a_d11); end
  def test_xi_a_e11; assert_in_epsilon(3, worksheet.xi_a_e11, 0.001); end
  def test_xi_a_f11; assert_equal("(by default, same as global)", worksheet.xi_a_f11); end
  def test_xi_a_c12; assert_equal("     3", worksheet.xi_a_c12); end
  def test_xi_a_d12; assert_equal("Energy efficiency", worksheet.xi_a_d12); end
  def test_xi_a_e12; assert_in_epsilon(3, worksheet.xi_a_e12, 0.001); end
  def test_xi_a_f12; assert_equal("(by default, same as global)", worksheet.xi_a_f12); end
  def test_xi_a_c13; assert_equal("     5", worksheet.xi_a_c13); end
  def test_xi_a_d13; assert_equal("Energy efficiency: Cogeneration", worksheet.xi_a_d13); end
  def test_xi_a_e13; assert_in_epsilon(3, worksheet.xi_a_e13, 0.001); end
  def test_xi_a_f13; assert_equal("(by default, same as global)", worksheet.xi_a_f13); end
  def test_xi_a_c14; assert_equal("     7", worksheet.xi_a_c14); end
  def test_xi_a_d14; assert_equal("Process improvement: Top–gas recirculation and/or Hisarna", worksheet.xi_a_d14); end
  def test_xi_a_e14; assert_in_epsilon(3, worksheet.xi_a_e14, 0.001); end
  def test_xi_a_f14; assert_equal("(by default, same as global)", worksheet.xi_a_f14); end
  def test_xi_a_c15; assert_equal("     9", worksheet.xi_a_c15); end
  def test_xi_a_d15; assert_equal("Alternative fuels: Gas injection", worksheet.xi_a_d15); end
  def test_xi_a_e15; assert_in_epsilon(3, worksheet.xi_a_e15, 0.001); end
  def test_xi_a_f15; assert_equal("(by default, same as global)", worksheet.xi_a_f15); end
  def test_xi_a_c16; assert_equal("     10", worksheet.xi_a_c16); end
  def test_xi_a_d16; assert_equal("Alternative fuels: Coal PCI substitution by biomass", worksheet.xi_a_d16); end
  def test_xi_a_e16; assert_in_epsilon(3, worksheet.xi_a_e16, 0.001); end
  def test_xi_a_f16; assert_equal("(by default, same as global)", worksheet.xi_a_f16); end
  def test_xi_a_c17; assert_equal("(iii)", worksheet.xi_a_c17); end
  def test_xi_a_d17; assert_equal("Steel CCS intensity", worksheet.xi_a_d17); end
  def test_xi_a_e17; assert_in_epsilon(2, worksheet.xi_a_e17, 0.001); end
  def test_xi_a_f17; assert_equal("(1 for not ambition, 4 for ambitious)", worksheet.xi_a_f17); end
  def test_xi_a_b21; assert_equal("Trajectory assumptions", worksheet.xi_a_b21); end
  def test_xi_a_b23; assert_equal("(Ia) Steel Output Growth", worksheet.xi_a_b23); end
  def test_xi_a_c25; assert_equal("Product type", worksheet.xi_a_c25); end
  def test_xi_a_d25; assert_equal("Trajectory", worksheet.xi_a_d25); end
  def test_xi_a_e25; assert_in_epsilon(2010, worksheet.xi_a_e25, 0.001); end
  def test_xi_a_f25; assert_in_epsilon(2015, worksheet.xi_a_f25, 0.001); end
  def test_xi_a_g25; assert_in_epsilon(2020, worksheet.xi_a_g25, 0.001); end
  def test_xi_a_h25; assert_in_epsilon(2025, worksheet.xi_a_h25, 0.001); end
  def test_xi_a_i25; assert_in_epsilon(2030, worksheet.xi_a_i25, 0.001); end
  def test_xi_a_j25; assert_in_epsilon(2035, worksheet.xi_a_j25, 0.001); end
  def test_xi_a_k25; assert_in_epsilon(2040, worksheet.xi_a_k25, 0.001); end
  def test_xi_a_l25; assert_in_epsilon(2045, worksheet.xi_a_l25, 0.001); end
  def test_xi_a_m25; assert_in_epsilon(2050, worksheet.xi_a_m25, 0.001); end
  def test_xi_a_c26; assert_equal("Steel", worksheet.xi_a_c26); end
  def test_xi_a_d26; assert_in_delta(1, worksheet.xi_a_d26, 0.001); end
  def test_xi_a_e26; assert_in_delta(0, (worksheet.xi_a_e26||0), 0.001); end
  def test_xi_a_f26; assert_in_delta(0.004568442580003218, worksheet.xi_a_f26, 0.001); end
  def test_xi_a_g26; assert_in_delta(0.004568442580003218, worksheet.xi_a_g26, 0.001); end
  def test_xi_a_h26; assert_in_delta(0.004568442580003218, worksheet.xi_a_h26, 0.001); end
  def test_xi_a_i26; assert_in_delta(0.004568442580003218, worksheet.xi_a_i26, 0.001); end
  def test_xi_a_j26; assert_in_delta(0.004568442580003218, worksheet.xi_a_j26, 0.001); end
  def test_xi_a_k26; assert_in_delta(0.004568442580003218, worksheet.xi_a_k26, 0.001); end
  def test_xi_a_l26; assert_in_delta(0.004568442580003218, worksheet.xi_a_l26, 0.001); end
  def test_xi_a_m26; assert_in_delta(0.004568442580003218, worksheet.xi_a_m26, 0.001); end
  def test_xi_a_o26; assert_in_delta(0.2, worksheet.xi_a_o26, 0.001); end
  def test_xi_a_d27; assert_in_epsilon(2, worksheet.xi_a_d27, 0.001); end
  def test_xi_a_e27; assert_in_delta(0, (worksheet.xi_a_e27||0), 0.001); end
  def test_xi_a_f27; assert_in_delta(0, (worksheet.xi_a_f27||0), 0.001); end
  def test_xi_a_g27; assert_in_delta(0, (worksheet.xi_a_g27||0), 0.001); end
  def test_xi_a_h27; assert_in_delta(0, (worksheet.xi_a_h27||0), 0.001); end
  def test_xi_a_i27; assert_in_delta(0, (worksheet.xi_a_i27||0), 0.001); end
  def test_xi_a_j27; assert_in_delta(0, (worksheet.xi_a_j27||0), 0.001); end
  def test_xi_a_k27; assert_in_delta(0, (worksheet.xi_a_k27||0), 0.001); end
  def test_xi_a_l27; assert_in_delta(0, (worksheet.xi_a_l27||0), 0.001); end
  def test_xi_a_m27; assert_in_delta(0, (worksheet.xi_a_m27||0), 0.001); end
  def test_xi_a_o27; assert_equal("Zero growth : cfr 100 % renewable study", worksheet.xi_a_o27); end
  def test_xi_a_d28; assert_in_epsilon(3, worksheet.xi_a_d28, 0.001); end
  def test_xi_a_e28; assert_in_delta(0, (worksheet.xi_a_e28||0), 0.001); end
  def test_xi_a_f28; assert_in_delta(-0.017179401454748944, worksheet.xi_a_f28, 0.001); end
  def test_xi_a_g28; assert_in_delta(-0.017179401454748944, worksheet.xi_a_g28, 0.001); end
  def test_xi_a_h28; assert_in_delta(-0.017179401454748944, worksheet.xi_a_h28, 0.001); end
  def test_xi_a_i28; assert_in_delta(-0.017179401454748944, worksheet.xi_a_i28, 0.001); end
  def test_xi_a_j28; assert_in_delta(-0.017179401454748944, worksheet.xi_a_j28, 0.001); end
  def test_xi_a_k28; assert_in_delta(-0.017179401454748944, worksheet.xi_a_k28, 0.001); end
  def test_xi_a_l28; assert_in_delta(-0.017179401454748944, worksheet.xi_a_l28, 0.001); end
  def test_xi_a_m28; assert_in_delta(-0.017179401454748944, worksheet.xi_a_m28, 0.001); end
  def test_xi_a_o28; assert_in_delta(-0.5, worksheet.xi_a_o28, 0.001); end
  def test_xi_a_c30; assert_equal("Chosen trajectory (% CAGR)", worksheet.xi_a_c30); end
  def test_xi_a_d31; assert_equal("Demand 3", worksheet.xi_a_d31); end
  def test_xi_a_e31; assert_in_epsilon(2010, worksheet.xi_a_e31, 0.001); end
  def test_xi_a_f31; assert_in_epsilon(2015, worksheet.xi_a_f31, 0.001); end
  def test_xi_a_g31; assert_in_epsilon(2020, worksheet.xi_a_g31, 0.001); end
  def test_xi_a_h31; assert_in_epsilon(2025, worksheet.xi_a_h31, 0.001); end
  def test_xi_a_i31; assert_in_epsilon(2030, worksheet.xi_a_i31, 0.001); end
  def test_xi_a_j31; assert_in_epsilon(2035, worksheet.xi_a_j31, 0.001); end
  def test_xi_a_k31; assert_in_epsilon(2040, worksheet.xi_a_k31, 0.001); end
  def test_xi_a_l31; assert_in_epsilon(2045, worksheet.xi_a_l31, 0.001); end
  def test_xi_a_m31; assert_in_epsilon(2050, worksheet.xi_a_m31, 0.001); end
  def test_xi_a_d32; assert_equal("Oxygen", worksheet.xi_a_d32); end
  def test_xi_a_e32; assert_in_delta(0, (worksheet.xi_a_e32||0), 0.001); end
  def test_xi_a_d33; assert_equal("Electric", worksheet.xi_a_d33); end
  def test_xi_a_e33; assert_in_delta(0, (worksheet.xi_a_e33||0), 0.001); end
  def test_control_h34; assert_in_epsilon(20, worksheet.control_h34, 0.001); end
  def test_xi_a_e8; assert_in_epsilon(2, worksheet.xi_a_e8, 0.001); end
  def test_xi_a_f32; assert_in_delta(0, (worksheet.xi_a_f32||0), 0.001); end
  def test_xi_a_f33; assert_in_delta(0, (worksheet.xi_a_f33||0), 0.001); end
  def test_xi_a_g32; assert_in_delta(0, (worksheet.xi_a_g32||0), 0.001); end
  def test_xi_a_g33; assert_in_delta(0, (worksheet.xi_a_g33||0), 0.001); end
  def test_xi_a_h32; assert_in_delta(0, (worksheet.xi_a_h32||0), 0.001); end
  def test_xi_a_h33; assert_in_delta(0, (worksheet.xi_a_h33||0), 0.001); end
  def test_xi_a_i32; assert_in_delta(0, (worksheet.xi_a_i32||0), 0.001); end
  def test_xi_a_i33; assert_in_delta(0, (worksheet.xi_a_i33||0), 0.001); end
  def test_xi_a_j32; assert_in_delta(0, (worksheet.xi_a_j32||0), 0.001); end
  def test_xi_a_j33; assert_in_delta(0, (worksheet.xi_a_j33||0), 0.001); end
  def test_xi_a_k32; assert_in_delta(0, (worksheet.xi_a_k32||0), 0.001); end
  def test_xi_a_k33; assert_in_delta(0, (worksheet.xi_a_k33||0), 0.001); end
  def test_xi_a_l32; assert_in_delta(0, (worksheet.xi_a_l32||0), 0.001); end
  def test_xi_a_l33; assert_in_delta(0, (worksheet.xi_a_l33||0), 0.001); end
  def test_xi_a_m32; assert_in_delta(0, (worksheet.xi_a_m32||0), 0.001); end
  def test_xi_a_m33; assert_in_delta(0, (worksheet.xi_a_m33||0), 0.001); end
  def test_xi_a_b35; assert_equal("(Ib) Steel Energy intensity", worksheet.xi_a_b35); end
  def test_xi_a_b36; assert_in_delta(1, worksheet.xi_a_b36, 0.001); end
  def test_xi_a_c36; assert_equal("Product mix : increase of EAF process", worksheet.xi_a_c36); end
  def test_xi_a_c37; assert_equal("Definition", worksheet.xi_a_c37); end
  def test_xi_a_c38; assert_equal("Reduction of Iron and oxygen steel, replaced by electric steel", worksheet.xi_a_c38); end
  def test_xi_a_c39; assert_equal("Assumption:  : Hot lines  closed in Wallonia.  In Scenario 4 Arcelar Mittal Gent shifted to EAF  in 2030  ", worksheet.xi_a_c39); end
  def test_xi_a_c40; assert_equal("CO2", worksheet.xi_a_c40); end
  def test_xi_a_d40; assert_equal("Type", worksheet.xi_a_d40); end
  def test_xi_a_e40; assert_in_epsilon(2010, worksheet.xi_a_e40, 0.001); end
  def test_xi_a_f40; assert_in_epsilon(2015, worksheet.xi_a_f40, 0.001); end
  def test_xi_a_g40; assert_in_epsilon(2020, worksheet.xi_a_g40, 0.001); end
  def test_xi_a_h40; assert_in_epsilon(2025, worksheet.xi_a_h40, 0.001); end
  def test_xi_a_i40; assert_in_epsilon(2030, worksheet.xi_a_i40, 0.001); end
  def test_xi_a_j40; assert_in_epsilon(2035, worksheet.xi_a_j40, 0.001); end
  def test_xi_a_k40; assert_in_epsilon(2040, worksheet.xi_a_k40, 0.001); end
  def test_xi_a_l40; assert_in_epsilon(2045, worksheet.xi_a_l40, 0.001); end
  def test_xi_a_m40; assert_in_epsilon(2050, worksheet.xi_a_m40, 0.001); end
  def test_xi_a_d41; assert_in_delta(1, worksheet.xi_a_d41, 0.001); end
  def test_xi_a_e41; assert_in_delta(0, (worksheet.xi_a_e41||0), 0.001); end
  def test_xi_a_f41; assert_in_delta(0.17, worksheet.xi_a_f41, 0.001); end
  def test_xi_a_g41; assert_in_delta(0.17, worksheet.xi_a_g41, 0.001); end
  def test_xi_a_h41; assert_in_delta(0.17, worksheet.xi_a_h41, 0.001); end
  def test_xi_a_i41; assert_in_delta(0.17, worksheet.xi_a_i41, 0.001); end
  def test_xi_a_j41; assert_in_delta(0.17, worksheet.xi_a_j41, 0.001); end
  def test_xi_a_k41; assert_in_delta(0.17, worksheet.xi_a_k41, 0.001); end
  def test_xi_a_l41; assert_in_delta(0.17, worksheet.xi_a_l41, 0.001); end
  def test_xi_a_m41; assert_in_delta(0.17, worksheet.xi_a_m41, 0.001); end
  def test_xi_a_d42; assert_in_epsilon(2, worksheet.xi_a_d42, 0.001); end
  def test_xi_a_e42; assert_in_delta(0, (worksheet.xi_a_e42||0), 0.001); end
  def test_xi_a_f42; assert_in_delta(0.17, worksheet.xi_a_f42, 0.001); end
  def test_xi_a_g42; assert_in_delta(0.17, worksheet.xi_a_g42, 0.001); end
  def test_xi_a_h42; assert_in_delta(0.17, worksheet.xi_a_h42, 0.001); end
  def test_xi_a_i42; assert_in_delta(0.17, worksheet.xi_a_i42, 0.001); end
  def test_xi_a_j42; assert_in_delta(0.17, worksheet.xi_a_j42, 0.001); end
  def test_xi_a_k42; assert_in_delta(0.17, worksheet.xi_a_k42, 0.001); end
  def test_xi_a_l42; assert_in_delta(0.17, worksheet.xi_a_l42, 0.001); end
  def test_xi_a_m42; assert_in_delta(0.17, worksheet.xi_a_m42, 0.001); end
  def test_xi_a_d43; assert_in_epsilon(3, worksheet.xi_a_d43, 0.001); end
  def test_xi_a_e43; assert_in_delta(0, (worksheet.xi_a_e43||0), 0.001); end
  def test_xi_a_f43; assert_in_delta(0.17, worksheet.xi_a_f43, 0.001); end
  def test_xi_a_g43; assert_in_delta(0.17, worksheet.xi_a_g43, 0.001); end
  def test_xi_a_h43; assert_in_delta(0.17, worksheet.xi_a_h43, 0.001); end
  def test_xi_a_i43; assert_in_delta(0.17, worksheet.xi_a_i43, 0.001); end
  def test_xi_a_j43; assert_in_delta(0.17, worksheet.xi_a_j43, 0.001); end
  def test_xi_a_k43; assert_in_delta(0.17, worksheet.xi_a_k43, 0.001); end
  def test_xi_a_l43; assert_in_delta(0.17, worksheet.xi_a_l43, 0.001); end
  def test_xi_a_m43; assert_in_delta(0.17, worksheet.xi_a_m43, 0.001); end
  def test_xi_a_d44; assert_in_epsilon(4, worksheet.xi_a_d44, 0.001); end
  def test_xi_a_e44; assert_in_delta(0, (worksheet.xi_a_e44||0), 0.001); end
  def test_xi_a_f44; assert_in_delta(0.17, worksheet.xi_a_f44, 0.001); end
  def test_xi_a_g44; assert_in_delta(0.44666666666666666, worksheet.xi_a_g44, 0.001); end
  def test_xi_a_h44; assert_in_delta(0.7233333333333334, worksheet.xi_a_h44, 0.001); end
  def test_xi_a_i44; assert_in_delta(1, worksheet.xi_a_i44, 0.001); end
  def test_xi_a_j44; assert_in_delta(1, worksheet.xi_a_j44, 0.001); end
  def test_xi_a_k44; assert_in_delta(1, worksheet.xi_a_k44, 0.001); end
  def test_xi_a_l44; assert_in_delta(1, worksheet.xi_a_l44, 0.001); end
  def test_xi_a_m44; assert_in_delta(1, worksheet.xi_a_m44, 0.001); end
  def test_xi_a_b46; assert_in_epsilon(2, worksheet.xi_a_b46, 0.001); end
  def test_xi_a_c46; assert_equal("Product mix:  increase of hard steal", worksheet.xi_a_c46); end
  def test_xi_a_c47; assert_equal("Definition", worksheet.xi_a_c47); end
  def test_xi_a_c48; assert_equal("Requires 30%  less stealLevel four enables to go from a 20% actual use to 50%", worksheet.xi_a_c48); end
  def test_xi_a_c49; assert_equal("Applied to all volumes", worksheet.xi_a_c49); end
  def test_xi_a_d50; assert_equal("Type", worksheet.xi_a_d50); end
  def test_xi_a_e50; assert_in_epsilon(2010, worksheet.xi_a_e50, 0.001); end
  def test_xi_a_f50; assert_in_epsilon(2015, worksheet.xi_a_f50, 0.001); end
  def test_xi_a_g50; assert_in_epsilon(2020, worksheet.xi_a_g50, 0.001); end
  def test_xi_a_h50; assert_in_epsilon(2025, worksheet.xi_a_h50, 0.001); end
  def test_xi_a_i50; assert_in_epsilon(2030, worksheet.xi_a_i50, 0.001); end
  def test_xi_a_j50; assert_in_epsilon(2035, worksheet.xi_a_j50, 0.001); end
  def test_xi_a_k50; assert_in_epsilon(2040, worksheet.xi_a_k50, 0.001); end
  def test_xi_a_l50; assert_in_epsilon(2045, worksheet.xi_a_l50, 0.001); end
  def test_xi_a_m50; assert_in_epsilon(2050, worksheet.xi_a_m50, 0.001); end
  def test_xi_a_n50; assert_equal("% reduction in steel", worksheet.xi_a_n50); end
  def test_xi_a_o50; assert_equal("% additional high steel", worksheet.xi_a_o50); end
  def test_xi_a_p50; assert_equal("% high steel", worksheet.xi_a_p50); end
  def test_xi_a_d51; assert_in_delta(1, worksheet.xi_a_d51, 0.001); end
  def test_xi_a_e51; assert_in_delta(0, (worksheet.xi_a_e51||0), 0.001); end
  def test_xi_a_f51; assert_in_delta(0, (worksheet.xi_a_f51||0), 0.001); end
  def test_xi_a_g51; assert_in_delta(0, (worksheet.xi_a_g51||0), 0.001); end
  def test_xi_a_h51; assert_in_delta(0, (worksheet.xi_a_h51||0), 0.001); end
  def test_xi_a_i51; assert_in_delta(0, (worksheet.xi_a_i51||0), 0.001); end
  def test_xi_a_j51; assert_in_delta(0, (worksheet.xi_a_j51||0), 0.001); end
  def test_xi_a_k51; assert_in_delta(0, (worksheet.xi_a_k51||0), 0.001); end
  def test_xi_a_l51; assert_in_delta(0, (worksheet.xi_a_l51||0), 0.001); end
  def test_xi_a_m51; assert_in_delta(0, (worksheet.xi_a_m51||0), 0.001); end
  def test_xi_a_n51; assert_in_delta(0, (worksheet.xi_a_n51||0), 0.001); end
  def test_xi_a_o51; assert_in_delta(0, (worksheet.xi_a_o51||0), 0.001); end
  def test_xi_a_p51; assert_in_delta(0.2, worksheet.xi_a_p51, 0.001); end
  def test_xi_a_d52; assert_in_epsilon(2, worksheet.xi_a_d52, 0.001); end
  def test_xi_a_e52; assert_in_delta(0, (worksheet.xi_a_e52||0), 0.001); end
  def test_xi_a_f52; assert_in_delta(0.00375, worksheet.xi_a_f52, 0.001); end
  def test_xi_a_g52; assert_in_delta(0.0075, worksheet.xi_a_g52, 0.001); end
  def test_xi_a_h52; assert_in_delta(0.01125, worksheet.xi_a_h52, 0.001); end
  def test_xi_a_i52; assert_in_delta(0.015, worksheet.xi_a_i52, 0.001); end
  def test_xi_a_j52; assert_in_delta(0.01875, worksheet.xi_a_j52, 0.001); end
  def test_xi_a_k52; assert_in_delta(0.0225, worksheet.xi_a_k52, 0.001); end
  def test_xi_a_l52; assert_in_delta(0.02625, worksheet.xi_a_l52, 0.001); end
  def test_xi_a_m52; assert_in_delta(0.03, worksheet.xi_a_m52, 0.001); end
  def test_xi_a_n52; assert_in_delta(0.03, worksheet.xi_a_n52, 0.001); end
  def test_xi_a_o52; assert_in_delta(0.125, worksheet.xi_a_o52, 0.001); end
  def test_xi_a_p52; assert_in_delta(0.3, worksheet.xi_a_p52, 0.001); end
  def test_xi_a_d53; assert_in_epsilon(3, worksheet.xi_a_d53, 0.001); end
  def test_xi_a_e53; assert_in_delta(0, (worksheet.xi_a_e53||0), 0.001); end
  def test_xi_a_f53; assert_in_delta(0.0075, worksheet.xi_a_f53, 0.001); end
  def test_xi_a_g53; assert_in_delta(0.015, worksheet.xi_a_g53, 0.001); end
  def test_xi_a_h53; assert_in_delta(0.0225, worksheet.xi_a_h53, 0.001); end
  def test_xi_a_i53; assert_in_delta(0.03, worksheet.xi_a_i53, 0.001); end
  def test_xi_a_j53; assert_in_delta(0.0375, worksheet.xi_a_j53, 0.001); end
  def test_xi_a_k53; assert_in_delta(0.045, worksheet.xi_a_k53, 0.001); end
  def test_xi_a_l53; assert_in_delta(0.0525, worksheet.xi_a_l53, 0.001); end
  def test_xi_a_m53; assert_in_delta(0.06, worksheet.xi_a_m53, 0.001); end
  def test_xi_a_n53; assert_in_delta(0.06, worksheet.xi_a_n53, 0.001); end
  def test_xi_a_o53; assert_in_delta(0.25, worksheet.xi_a_o53, 0.001); end
  def test_xi_a_p53; assert_in_delta(0.4, worksheet.xi_a_p53, 0.001); end
  def test_xi_a_d54; assert_in_epsilon(4, worksheet.xi_a_d54, 0.001); end
  def test_xi_a_e54; assert_in_delta(0, (worksheet.xi_a_e54||0), 0.001); end
  def test_xi_a_f54; assert_in_delta(0.01125, worksheet.xi_a_f54, 0.001); end
  def test_xi_a_g54; assert_in_delta(0.0225, worksheet.xi_a_g54, 0.001); end
  def test_xi_a_h54; assert_in_delta(0.03375, worksheet.xi_a_h54, 0.001); end
  def test_xi_a_i54; assert_in_delta(0.045, worksheet.xi_a_i54, 0.001); end
  def test_xi_a_j54; assert_in_delta(0.056249999999999994, worksheet.xi_a_j54, 0.001); end
  def test_xi_a_k54; assert_in_delta(0.06749999999999999, worksheet.xi_a_k54, 0.001); end
  def test_xi_a_l54; assert_in_delta(0.07874999999999999, worksheet.xi_a_l54, 0.001); end
  def test_xi_a_m54; assert_in_delta(0.09, worksheet.xi_a_m54, 0.001); end
  def test_xi_a_n54; assert_in_delta(0.09, worksheet.xi_a_n54, 0.001); end
  def test_xi_a_o54; assert_in_delta(0.37499999999999994, worksheet.xi_a_o54, 0.001); end
  def test_xi_a_p54; assert_in_delta(0.5, worksheet.xi_a_p54, 0.001); end
  def test_xi_a_b56; assert_in_epsilon(3, worksheet.xi_a_b56, 0.001); end
  def test_xi_a_c56; assert_equal("Energy efficiency", worksheet.xi_a_c56); end
  def test_xi_a_c57; assert_equal("Definition", worksheet.xi_a_c57); end
  def test_xi_a_c58; assert_equal("Includes the behavioral, the energy audits, and the cogeneration potential", worksheet.xi_a_c58); end
  def test_xi_a_c59; assert_equal("In levels 2 and 3, we assume there is no efficiency improvement potentiel in the case of 100% Electric arc furnaces", worksheet.xi_a_c59); end
  def test_xi_a_d61; assert_equal("If blast furnace trajectory", worksheet.xi_a_d61); end
  def test_xi_a_m61; assert_in_delta(0.05, worksheet.xi_a_m61, 0.001); end
  def test_xi_a_d62; assert_equal("If electric", worksheet.xi_a_d62); end
  def test_xi_a_m62; assert_in_delta(0, (worksheet.xi_a_m62||0), 0.001); end
  def test_xi_a_d64; assert_equal("Type", worksheet.xi_a_d64); end
  def test_xi_a_e64; assert_in_epsilon(2010, worksheet.xi_a_e64, 0.001); end
  def test_xi_a_f64; assert_in_epsilon(2015, worksheet.xi_a_f64, 0.001); end
  def test_xi_a_g64; assert_in_epsilon(2020, worksheet.xi_a_g64, 0.001); end
  def test_xi_a_h64; assert_in_epsilon(2025, worksheet.xi_a_h64, 0.001); end
  def test_xi_a_i64; assert_in_epsilon(2030, worksheet.xi_a_i64, 0.001); end
  def test_xi_a_j64; assert_in_epsilon(2035, worksheet.xi_a_j64, 0.001); end
  def test_xi_a_k64; assert_in_epsilon(2040, worksheet.xi_a_k64, 0.001); end
  def test_xi_a_l64; assert_in_epsilon(2045, worksheet.xi_a_l64, 0.001); end
  def test_xi_a_m64; assert_in_epsilon(2050, worksheet.xi_a_m64, 0.001); end
  def test_xi_a_n64; assert_equal("Only applied ", worksheet.xi_a_n64); end
  def test_xi_a_d65; assert_in_delta(1, worksheet.xi_a_d65, 0.001); end
  def test_xi_a_e65; assert_in_delta(0, (worksheet.xi_a_e65||0), 0.001); end
  def test_xi_a_f65; assert_in_delta(0, (worksheet.xi_a_f65||0), 0.001); end
  def test_xi_a_g65; assert_in_delta(0, (worksheet.xi_a_g65||0), 0.001); end
  def test_xi_a_h65; assert_in_delta(0, (worksheet.xi_a_h65||0), 0.001); end
  def test_xi_a_i65; assert_in_delta(0, (worksheet.xi_a_i65||0), 0.001); end
  def test_xi_a_j65; assert_in_delta(0, (worksheet.xi_a_j65||0), 0.001); end
  def test_xi_a_k65; assert_in_delta(0, (worksheet.xi_a_k65||0), 0.001); end
  def test_xi_a_l65; assert_in_delta(0, (worksheet.xi_a_l65||0), 0.001); end
  def test_xi_a_m65; assert_in_delta(0, (worksheet.xi_a_m65||0), 0.001); end
  def test_xi_a_d66; assert_in_epsilon(2, worksheet.xi_a_d66, 0.001); end
  def test_xi_a_e66; assert_in_delta(0, (worksheet.xi_a_e66||0), 0.001); end
  def test_xi_a_f66; assert_in_delta(0.00625, worksheet.xi_a_f66, 0.001); end
  def test_xi_a_g66; assert_in_delta(0.0125, worksheet.xi_a_g66, 0.001); end
  def test_xi_a_h66; assert_in_delta(0.018750000000000003, worksheet.xi_a_h66, 0.001); end
  def test_xi_a_i66; assert_in_delta(0.025, worksheet.xi_a_i66, 0.001); end
  def test_xi_a_j66; assert_in_delta(0.03125, worksheet.xi_a_j66, 0.001); end
  def test_xi_a_k66; assert_in_delta(0.0375, worksheet.xi_a_k66, 0.001); end
  def test_xi_a_l66; assert_in_delta(0.04375, worksheet.xi_a_l66, 0.001); end
  def test_xi_a_d67; assert_in_epsilon(3, worksheet.xi_a_d67, 0.001); end
  def test_xi_a_e67; assert_in_delta(0, (worksheet.xi_a_e67||0), 0.001); end
  def test_xi_a_f67; assert_in_delta(0.00625, worksheet.xi_a_f67, 0.001); end
  def test_xi_a_g67; assert_in_delta(0.0125, worksheet.xi_a_g67, 0.001); end
  def test_xi_a_h67; assert_in_delta(0.018750000000000003, worksheet.xi_a_h67, 0.001); end
  def test_xi_a_i67; assert_in_delta(0.025, worksheet.xi_a_i67, 0.001); end
  def test_xi_a_j67; assert_in_delta(0.03125, worksheet.xi_a_j67, 0.001); end
  def test_xi_a_k67; assert_in_delta(0.0375, worksheet.xi_a_k67, 0.001); end
  def test_xi_a_l67; assert_in_delta(0.04375, worksheet.xi_a_l67, 0.001); end
  def test_xi_a_m66; assert_in_delta(0.05, worksheet.xi_a_m66, 0.001); end
  def test_xi_a_m67; assert_in_delta(0.05, worksheet.xi_a_m67, 0.001); end
  def test_xi_a_n67; assert_equal("if switch to EAF, then no potential, else 5%", worksheet.xi_a_n67); end
  def test_xi_a_d68; assert_in_epsilon(4, worksheet.xi_a_d68, 0.001); end
  def test_xi_a_e68; assert_in_delta(0, (worksheet.xi_a_e68||0), 0.001); end
  def test_xi_a_f68; assert_in_delta(0.0125, worksheet.xi_a_f68, 0.001); end
  def test_xi_a_g68; assert_in_delta(0.025, worksheet.xi_a_g68, 0.001); end
  def test_xi_a_h68; assert_in_delta(0.037500000000000006, worksheet.xi_a_h68, 0.001); end
  def test_xi_a_i68; assert_in_delta(0.05, worksheet.xi_a_i68, 0.001); end
  def test_xi_a_j68; assert_in_delta(0.0625, worksheet.xi_a_j68, 0.001); end
  def test_xi_a_k68; assert_in_delta(0.075, worksheet.xi_a_k68, 0.001); end
  def test_xi_a_l68; assert_in_delta(0.0875, worksheet.xi_a_l68, 0.001); end
  def test_xi_a_m68; assert_in_delta(0.1, worksheet.xi_a_m68, 0.001); end
  def test_xi_a_b70; assert_in_epsilon(4, worksheet.xi_a_b70, 0.001); end
  def test_xi_a_c70; assert_equal("Energy efficiency: Cogeneration", worksheet.xi_a_c70); end
  def test_xi_a_e70; assert_equal("not used", worksheet.xi_a_e70); end
  def test_xi_a_c71; assert_equal("Definition", worksheet.xi_a_c71); end
  def test_xi_a_c72; assert_equal("Assumption of no additional potential", worksheet.xi_a_c72); end
  def test_xi_a_d73; assert_equal("Type", worksheet.xi_a_d73); end
  def test_xi_a_e73; assert_in_epsilon(2010, worksheet.xi_a_e73, 0.001); end
  def test_xi_a_f73; assert_in_epsilon(2015, worksheet.xi_a_f73, 0.001); end
  def test_xi_a_g73; assert_in_epsilon(2020, worksheet.xi_a_g73, 0.001); end
  def test_xi_a_h73; assert_in_epsilon(2025, worksheet.xi_a_h73, 0.001); end
  def test_xi_a_i73; assert_in_epsilon(2030, worksheet.xi_a_i73, 0.001); end
  def test_xi_a_j73; assert_in_epsilon(2035, worksheet.xi_a_j73, 0.001); end
  def test_xi_a_k73; assert_in_epsilon(2040, worksheet.xi_a_k73, 0.001); end
  def test_xi_a_l73; assert_in_epsilon(2045, worksheet.xi_a_l73, 0.001); end
  def test_xi_a_m73; assert_in_epsilon(2050, worksheet.xi_a_m73, 0.001); end
  def test_xi_a_d74; assert_in_delta(1, worksheet.xi_a_d74, 0.001); end
  def test_xi_a_e74; assert_in_delta(0, (worksheet.xi_a_e74||0), 0.001); end
  def test_xi_a_f74; assert_in_delta(0, (worksheet.xi_a_f74||0), 0.001); end
  def test_xi_a_g74; assert_in_delta(0, (worksheet.xi_a_g74||0), 0.001); end
  def test_xi_a_h74; assert_in_delta(0, (worksheet.xi_a_h74||0), 0.001); end
  def test_xi_a_i74; assert_in_delta(0, (worksheet.xi_a_i74||0), 0.001); end
  def test_xi_a_j74; assert_in_delta(0, (worksheet.xi_a_j74||0), 0.001); end
  def test_xi_a_k74; assert_in_delta(0, (worksheet.xi_a_k74||0), 0.001); end
  def test_xi_a_l74; assert_in_delta(0, (worksheet.xi_a_l74||0), 0.001); end
  def test_xi_a_m74; assert_in_delta(0, (worksheet.xi_a_m74||0), 0.001); end
  def test_xi_a_d75; assert_in_epsilon(2, worksheet.xi_a_d75, 0.001); end
  def test_xi_a_e75; assert_in_delta(0, (worksheet.xi_a_e75||0), 0.001); end
  def test_xi_a_f75; assert_in_delta(0, (worksheet.xi_a_f75||0), 0.001); end
  def test_xi_a_g75; assert_in_delta(0, (worksheet.xi_a_g75||0), 0.001); end
  def test_xi_a_h75; assert_in_delta(0, (worksheet.xi_a_h75||0), 0.001); end
  def test_xi_a_i75; assert_in_delta(0, (worksheet.xi_a_i75||0), 0.001); end
  def test_xi_a_j75; assert_in_delta(0, (worksheet.xi_a_j75||0), 0.001); end
  def test_xi_a_k75; assert_in_delta(0, (worksheet.xi_a_k75||0), 0.001); end
  def test_xi_a_l75; assert_in_delta(0, (worksheet.xi_a_l75||0), 0.001); end
  def test_xi_a_m75; assert_in_delta(0, (worksheet.xi_a_m75||0), 0.001); end
  def test_xi_a_d76; assert_in_epsilon(3, worksheet.xi_a_d76, 0.001); end
  def test_xi_a_e76; assert_in_delta(0, (worksheet.xi_a_e76||0), 0.001); end
  def test_xi_a_f76; assert_in_delta(0, (worksheet.xi_a_f76||0), 0.001); end
  def test_xi_a_g76; assert_in_delta(0, (worksheet.xi_a_g76||0), 0.001); end
  def test_xi_a_h76; assert_in_delta(0, (worksheet.xi_a_h76||0), 0.001); end
  def test_xi_a_i76; assert_in_delta(0, (worksheet.xi_a_i76||0), 0.001); end
  def test_xi_a_j76; assert_in_delta(0, (worksheet.xi_a_j76||0), 0.001); end
  def test_xi_a_k76; assert_in_delta(0, (worksheet.xi_a_k76||0), 0.001); end
  def test_xi_a_l76; assert_in_delta(0, (worksheet.xi_a_l76||0), 0.001); end
  def test_xi_a_m76; assert_in_delta(0, (worksheet.xi_a_m76||0), 0.001); end
  def test_xi_a_d77; assert_in_epsilon(4, worksheet.xi_a_d77, 0.001); end
  def test_xi_a_e77; assert_in_delta(0, (worksheet.xi_a_e77||0), 0.001); end
  def test_xi_a_f77; assert_in_delta(0, (worksheet.xi_a_f77||0), 0.001); end
  def test_xi_a_g77; assert_in_delta(0, (worksheet.xi_a_g77||0), 0.001); end
  def test_xi_a_h77; assert_in_delta(0, (worksheet.xi_a_h77||0), 0.001); end
  def test_xi_a_i77; assert_in_delta(0, (worksheet.xi_a_i77||0), 0.001); end
  def test_xi_a_j77; assert_in_delta(0, (worksheet.xi_a_j77||0), 0.001); end
  def test_xi_a_k77; assert_in_delta(0, (worksheet.xi_a_k77||0), 0.001); end
  def test_xi_a_l77; assert_in_delta(0, (worksheet.xi_a_l77||0), 0.001); end
  def test_xi_a_m77; assert_in_delta(0, (worksheet.xi_a_m77||0), 0.001); end
  def test_xi_a_n77; assert_equal("car il n'y aura pas de fumées assez chaudes pour pouvoir produire de l'électricité", worksheet.xi_a_n77); end
  def test_xi_a_b79; assert_in_epsilon(7, worksheet.xi_a_b79, 0.001); end
  def test_xi_a_c79; assert_equal("Process improvement: Top gas recycling   or Hisarna process ", worksheet.xi_a_c79); end
  def test_xi_a_c80; assert_equal("Definition", worksheet.xi_a_c80); end
  def test_xi_a_c82; assert_equal("Breakthrough technology, as of 2030 only", worksheet.xi_a_c82); end
  def test_xi_a_d83; assert_equal("Type", worksheet.xi_a_d83); end
  def test_xi_a_e83; assert_in_epsilon(2010, worksheet.xi_a_e83, 0.001); end
  def test_xi_a_f83; assert_in_epsilon(2015, worksheet.xi_a_f83, 0.001); end
  def test_xi_a_g83; assert_in_epsilon(2020, worksheet.xi_a_g83, 0.001); end
  def test_xi_a_h83; assert_in_epsilon(2025, worksheet.xi_a_h83, 0.001); end
  def test_xi_a_i83; assert_in_epsilon(2030, worksheet.xi_a_i83, 0.001); end
  def test_xi_a_j83; assert_in_epsilon(2035, worksheet.xi_a_j83, 0.001); end
  def test_xi_a_k83; assert_in_epsilon(2040, worksheet.xi_a_k83, 0.001); end
  def test_xi_a_l83; assert_in_epsilon(2045, worksheet.xi_a_l83, 0.001); end
  def test_xi_a_m83; assert_in_epsilon(2050, worksheet.xi_a_m83, 0.001); end
  def test_xi_a_d84; assert_in_delta(1, worksheet.xi_a_d84, 0.001); end
  def test_xi_a_e84; assert_in_delta(0, (worksheet.xi_a_e84||0), 0.001); end
  def test_xi_a_f84; assert_in_delta(0, (worksheet.xi_a_f84||0), 0.001); end
  def test_xi_a_g84; assert_in_delta(0, (worksheet.xi_a_g84||0), 0.001); end
  def test_xi_a_h84; assert_in_delta(0, (worksheet.xi_a_h84||0), 0.001); end
  def test_xi_a_i84; assert_in_delta(0, (worksheet.xi_a_i84||0), 0.001); end
  def test_xi_a_j84; assert_in_delta(0, (worksheet.xi_a_j84||0), 0.001); end
  def test_xi_a_k84; assert_in_delta(0, (worksheet.xi_a_k84||0), 0.001); end
  def test_xi_a_l84; assert_in_delta(0, (worksheet.xi_a_l84||0), 0.001); end
  def test_xi_a_m84; assert_in_delta(0, (worksheet.xi_a_m84||0), 0.001); end
  def test_xi_a_d85; assert_in_epsilon(2, worksheet.xi_a_d85, 0.001); end
  def test_xi_a_e85; assert_in_delta(0, (worksheet.xi_a_e85||0), 0.001); end
  def test_xi_a_f85; assert_in_delta(0, (worksheet.xi_a_f85||0), 0.001); end
  def test_xi_a_g85; assert_in_delta(0, (worksheet.xi_a_g85||0), 0.001); end
  def test_xi_a_h85; assert_in_delta(0, (worksheet.xi_a_h85||0), 0.001); end
  def test_xi_a_i85; assert_in_delta(0.2, worksheet.xi_a_i85, 0.001); end
  def test_xi_a_j85; assert_in_delta(0.2, worksheet.xi_a_j85, 0.001); end
  def test_xi_a_k85; assert_in_delta(0.2, worksheet.xi_a_k85, 0.001); end
  def test_xi_a_l85; assert_in_delta(0.2, worksheet.xi_a_l85, 0.001); end
  def test_xi_a_m85; assert_in_delta(0.2, worksheet.xi_a_m85, 0.001); end
  def test_xi_a_d86; assert_in_epsilon(3, worksheet.xi_a_d86, 0.001); end
  def test_xi_a_e86; assert_in_delta(0, (worksheet.xi_a_e86||0), 0.001); end
  def test_xi_a_f86; assert_in_delta(0, (worksheet.xi_a_f86||0), 0.001); end
  def test_xi_a_g86; assert_in_delta(0, (worksheet.xi_a_g86||0), 0.001); end
  def test_xi_a_h86; assert_in_delta(0, (worksheet.xi_a_h86||0), 0.001); end
  def test_xi_a_i86; assert_in_delta(0.3, worksheet.xi_a_i86, 0.001); end
  def test_xi_a_j86; assert_in_delta(0.3, worksheet.xi_a_j86, 0.001); end
  def test_xi_a_k86; assert_in_delta(0.3, worksheet.xi_a_k86, 0.001); end
  def test_xi_a_l86; assert_in_delta(0.3, worksheet.xi_a_l86, 0.001); end
  def test_xi_a_m86; assert_in_delta(0.3, worksheet.xi_a_m86, 0.001); end
  def test_xi_a_d87; assert_in_epsilon(4, worksheet.xi_a_d87, 0.001); end
  def test_xi_a_e87; assert_in_delta(0, (worksheet.xi_a_e87||0), 0.001); end
  def test_xi_a_f87; assert_in_delta(0, (worksheet.xi_a_f87||0), 0.001); end
  def test_xi_a_g87; assert_in_delta(0, (worksheet.xi_a_g87||0), 0.001); end
  def test_xi_a_h87; assert_in_delta(0, (worksheet.xi_a_h87||0), 0.001); end
  def test_xi_a_i87; assert_in_delta(0.3, worksheet.xi_a_i87, 0.001); end
  def test_xi_a_j87; assert_in_delta(0.3, worksheet.xi_a_j87, 0.001); end
  def test_xi_a_k87; assert_in_delta(0.3, worksheet.xi_a_k87, 0.001); end
  def test_xi_a_l87; assert_in_delta(0.3, worksheet.xi_a_l87, 0.001); end
  def test_xi_a_m87; assert_in_delta(0.3, worksheet.xi_a_m87, 0.001); end
  def test_xi_a_b89; assert_in_epsilon(8, worksheet.xi_a_b89, 0.001); end
  def test_xi_a_c89; assert_equal("Process improvement: Electrolysis  ", worksheet.xi_a_c89); end
  def test_xi_a_e89; assert_equal("not used", worksheet.xi_a_e89); end
  def test_xi_a_c90; assert_equal("Definition", worksheet.xi_a_c90); end
  def test_xi_a_c91; assert_equal("Includes the behavioral, the energy audits, and the cogeneration potential", worksheet.xi_a_c91); end
  def test_xi_a_c92; assert_equal("Breakthrough technology, as of 2030 only", worksheet.xi_a_c92); end
  def test_xi_a_d93; assert_equal("Type", worksheet.xi_a_d93); end
  def test_xi_a_e93; assert_in_epsilon(2010, worksheet.xi_a_e93, 0.001); end
  def test_xi_a_f93; assert_in_epsilon(2015, worksheet.xi_a_f93, 0.001); end
  def test_xi_a_g93; assert_in_epsilon(2020, worksheet.xi_a_g93, 0.001); end
  def test_xi_a_h93; assert_in_epsilon(2025, worksheet.xi_a_h93, 0.001); end
  def test_xi_a_i93; assert_in_epsilon(2030, worksheet.xi_a_i93, 0.001); end
  def test_xi_a_j93; assert_in_epsilon(2035, worksheet.xi_a_j93, 0.001); end
  def test_xi_a_k93; assert_in_epsilon(2040, worksheet.xi_a_k93, 0.001); end
  def test_xi_a_l93; assert_in_epsilon(2045, worksheet.xi_a_l93, 0.001); end
  def test_xi_a_m93; assert_in_epsilon(2050, worksheet.xi_a_m93, 0.001); end
  def test_xi_a_d94; assert_in_delta(1, worksheet.xi_a_d94, 0.001); end
  def test_xi_a_e94; assert_in_delta(0, (worksheet.xi_a_e94||0), 0.001); end
  def test_xi_a_f94; assert_in_delta(0, (worksheet.xi_a_f94||0), 0.001); end
  def test_xi_a_g94; assert_in_delta(0, (worksheet.xi_a_g94||0), 0.001); end
  def test_xi_a_h94; assert_in_delta(0, (worksheet.xi_a_h94||0), 0.001); end
  def test_xi_a_i94; assert_in_delta(0, (worksheet.xi_a_i94||0), 0.001); end
  def test_xi_a_j94; assert_in_delta(0, (worksheet.xi_a_j94||0), 0.001); end
  def test_xi_a_k94; assert_in_delta(0, (worksheet.xi_a_k94||0), 0.001); end
  def test_xi_a_l94; assert_in_delta(0, (worksheet.xi_a_l94||0), 0.001); end
  def test_xi_a_m94; assert_in_delta(0, (worksheet.xi_a_m94||0), 0.001); end
  def test_xi_a_d95; assert_in_epsilon(2, worksheet.xi_a_d95, 0.001); end
  def test_xi_a_e95; assert_in_delta(0, (worksheet.xi_a_e95||0), 0.001); end
  def test_xi_a_f95; assert_in_delta(0, (worksheet.xi_a_f95||0), 0.001); end
  def test_xi_a_g95; assert_in_delta(0, (worksheet.xi_a_g95||0), 0.001); end
  def test_xi_a_h95; assert_in_delta(0, (worksheet.xi_a_h95||0), 0.001); end
  def test_xi_a_i95; assert_in_delta(0, (worksheet.xi_a_i95||0), 0.001); end
  def test_xi_a_j95; assert_in_delta(0, (worksheet.xi_a_j95||0), 0.001); end
  def test_xi_a_k95; assert_in_delta(0, (worksheet.xi_a_k95||0), 0.001); end
  def test_xi_a_l95; assert_in_delta(0, (worksheet.xi_a_l95||0), 0.001); end
  def test_xi_a_m95; assert_in_delta(0, (worksheet.xi_a_m95||0), 0.001); end
  def test_xi_a_d96; assert_in_epsilon(3, worksheet.xi_a_d96, 0.001); end
  def test_xi_a_e96; assert_in_delta(0, (worksheet.xi_a_e96||0), 0.001); end
  def test_xi_a_f96; assert_in_delta(0, (worksheet.xi_a_f96||0), 0.001); end
  def test_xi_a_g96; assert_in_delta(0, (worksheet.xi_a_g96||0), 0.001); end
  def test_xi_a_h96; assert_in_delta(0, (worksheet.xi_a_h96||0), 0.001); end
  def test_xi_a_i96; assert_in_delta(0, (worksheet.xi_a_i96||0), 0.001); end
  def test_xi_a_j96; assert_in_delta(0, (worksheet.xi_a_j96||0), 0.001); end
  def test_xi_a_k96; assert_in_delta(0, (worksheet.xi_a_k96||0), 0.001); end
  def test_xi_a_l96; assert_in_delta(0, (worksheet.xi_a_l96||0), 0.001); end
  def test_xi_a_m96; assert_in_delta(0, (worksheet.xi_a_m96||0), 0.001); end
  def test_xi_a_d97; assert_in_epsilon(4, worksheet.xi_a_d97, 0.001); end
  def test_xi_a_e97; assert_in_delta(0, (worksheet.xi_a_e97||0), 0.001); end
  def test_xi_a_f97; assert_in_delta(0, (worksheet.xi_a_f97||0), 0.001); end
  def test_xi_a_g97; assert_in_delta(0, (worksheet.xi_a_g97||0), 0.001); end
  def test_xi_a_h97; assert_in_delta(0, (worksheet.xi_a_h97||0), 0.001); end
  def test_xi_a_i97; assert_in_delta(0, (worksheet.xi_a_i97||0), 0.001); end
  def test_xi_a_j97; assert_in_delta(0, (worksheet.xi_a_j97||0), 0.001); end
  def test_xi_a_k97; assert_in_delta(0, (worksheet.xi_a_k97||0), 0.001); end
  def test_xi_a_l97; assert_in_delta(0, (worksheet.xi_a_l97||0), 0.001); end
  def test_xi_a_m97; assert_in_delta(0, (worksheet.xi_a_m97||0), 0.001); end
  def test_xi_a_b99; assert_in_epsilon(5, worksheet.xi_a_b99, 0.001); end
  def test_xi_a_c99; assert_equal("Alternative fuels: Gas injection", worksheet.xi_a_c99); end
  def test_xi_a_c100; assert_equal("Definition", worksheet.xi_a_c100); end
  def test_xi_a_c101; assert_equal("Percentage of coal replace by gas in oxygen", worksheet.xi_a_c101); end
  def test_xi_a_d103; assert_equal("Type", worksheet.xi_a_d103); end
  def test_xi_a_e103; assert_in_epsilon(2010, worksheet.xi_a_e103, 0.001); end
  def test_xi_a_f103; assert_in_epsilon(2015, worksheet.xi_a_f103, 0.001); end
  def test_xi_a_g103; assert_in_epsilon(2020, worksheet.xi_a_g103, 0.001); end
  def test_xi_a_h103; assert_in_epsilon(2025, worksheet.xi_a_h103, 0.001); end
  def test_xi_a_i103; assert_in_epsilon(2030, worksheet.xi_a_i103, 0.001); end
  def test_xi_a_j103; assert_in_epsilon(2035, worksheet.xi_a_j103, 0.001); end
  def test_xi_a_k103; assert_in_epsilon(2040, worksheet.xi_a_k103, 0.001); end
  def test_xi_a_l103; assert_in_epsilon(2045, worksheet.xi_a_l103, 0.001); end
  def test_xi_a_m103; assert_in_epsilon(2050, worksheet.xi_a_m103, 0.001); end
  def test_xi_a_d104; assert_in_delta(1, worksheet.xi_a_d104, 0.001); end
  def test_xi_a_e104; assert_in_delta(0, (worksheet.xi_a_e104||0), 0.001); end
  def test_xi_a_f104; assert_in_delta(0, (worksheet.xi_a_f104||0), 0.001); end
  def test_xi_a_g104; assert_in_delta(0, (worksheet.xi_a_g104||0), 0.001); end
  def test_xi_a_h104; assert_in_delta(0, (worksheet.xi_a_h104||0), 0.001); end
  def test_xi_a_i104; assert_in_delta(0, (worksheet.xi_a_i104||0), 0.001); end
  def test_xi_a_j104; assert_in_delta(0, (worksheet.xi_a_j104||0), 0.001); end
  def test_xi_a_k104; assert_in_delta(0, (worksheet.xi_a_k104||0), 0.001); end
  def test_xi_a_l104; assert_in_delta(0, (worksheet.xi_a_l104||0), 0.001); end
  def test_xi_a_m104; assert_in_delta(0, (worksheet.xi_a_m104||0), 0.001); end
  def test_xi_a_d105; assert_in_epsilon(2, worksheet.xi_a_d105, 0.001); end
  def test_xi_a_e105; assert_in_delta(0, (worksheet.xi_a_e105||0), 0.001); end
  def test_xi_a_f105; assert_in_delta(0.0025, worksheet.xi_a_f105, 0.001); end
  def test_xi_a_g105; assert_in_delta(0.005, worksheet.xi_a_g105, 0.001); end
  def test_xi_a_h105; assert_in_delta(0.0075, worksheet.xi_a_h105, 0.001); end
  def test_xi_a_i105; assert_in_delta(0.01, worksheet.xi_a_i105, 0.001); end
  def test_xi_a_j105; assert_in_delta(0.0125, worksheet.xi_a_j105, 0.001); end
  def test_xi_a_k105; assert_in_delta(0.015000000000000001, worksheet.xi_a_k105, 0.001); end
  def test_xi_a_l105; assert_in_delta(0.0175, worksheet.xi_a_l105, 0.001); end
  def test_xi_a_m105; assert_in_delta(0.02, worksheet.xi_a_m105, 0.001); end
  def test_xi_a_d106; assert_in_epsilon(3, worksheet.xi_a_d106, 0.001); end
  def test_xi_a_e106; assert_in_delta(0, (worksheet.xi_a_e106||0), 0.001); end
  def test_xi_a_f106; assert_in_delta(0.00375, worksheet.xi_a_f106, 0.001); end
  def test_xi_a_g106; assert_in_delta(0.0075, worksheet.xi_a_g106, 0.001); end
  def test_xi_a_h106; assert_in_delta(0.01125, worksheet.xi_a_h106, 0.001); end
  def test_xi_a_i106; assert_in_delta(0.015, worksheet.xi_a_i106, 0.001); end
  def test_xi_a_j106; assert_in_delta(0.01875, worksheet.xi_a_j106, 0.001); end
  def test_xi_a_k106; assert_in_delta(0.0225, worksheet.xi_a_k106, 0.001); end
  def test_xi_a_l106; assert_in_delta(0.02625, worksheet.xi_a_l106, 0.001); end
  def test_xi_a_m106; assert_in_delta(0.03, worksheet.xi_a_m106, 0.001); end
  def test_xi_a_d107; assert_in_epsilon(4, worksheet.xi_a_d107, 0.001); end
  def test_xi_a_e107; assert_in_delta(0, (worksheet.xi_a_e107||0), 0.001); end
  def test_xi_a_f107; assert_in_delta(0.00625, worksheet.xi_a_f107, 0.001); end
  def test_xi_a_g107; assert_in_delta(0.0125, worksheet.xi_a_g107, 0.001); end
  def test_xi_a_h107; assert_in_delta(0.018750000000000003, worksheet.xi_a_h107, 0.001); end
  def test_xi_a_i107; assert_in_delta(0.025, worksheet.xi_a_i107, 0.001); end
  def test_xi_a_j107; assert_in_delta(0.03125, worksheet.xi_a_j107, 0.001); end
  def test_xi_a_k107; assert_in_delta(0.0375, worksheet.xi_a_k107, 0.001); end
  def test_xi_a_l107; assert_in_delta(0.04375, worksheet.xi_a_l107, 0.001); end
  def test_xi_a_m107; assert_in_delta(0.05, worksheet.xi_a_m107, 0.001); end
  def test_xi_a_b109; assert_in_epsilon(5, worksheet.xi_a_b109, 0.001); end
  def test_xi_a_c109; assert_equal("Alternative fuels: Coal PCI substitution", worksheet.xi_a_c109); end
  def test_xi_a_c110; assert_equal("Definition", worksheet.xi_a_c110); end
  def test_xi_a_c111; assert_equal("Percentage coal which can be replaced by biomass", worksheet.xi_a_c111); end
  def test_xi_a_d113; assert_equal("Type", worksheet.xi_a_d113); end
  def test_xi_a_e113; assert_in_epsilon(2010, worksheet.xi_a_e113, 0.001); end
  def test_xi_a_f113; assert_in_epsilon(2015, worksheet.xi_a_f113, 0.001); end
  def test_xi_a_g113; assert_in_epsilon(2020, worksheet.xi_a_g113, 0.001); end
  def test_xi_a_h113; assert_in_epsilon(2025, worksheet.xi_a_h113, 0.001); end
  def test_xi_a_i113; assert_in_epsilon(2030, worksheet.xi_a_i113, 0.001); end
  def test_xi_a_j113; assert_in_epsilon(2035, worksheet.xi_a_j113, 0.001); end
  def test_xi_a_k113; assert_in_epsilon(2040, worksheet.xi_a_k113, 0.001); end
  def test_xi_a_l113; assert_in_epsilon(2045, worksheet.xi_a_l113, 0.001); end
  def test_xi_a_m113; assert_in_epsilon(2050, worksheet.xi_a_m113, 0.001); end
  def test_xi_a_n113; assert_equal("Biomass is limited by supply rather than by demand, it is therefore modelled accross all sectors in a consolidated manner, the potential in this sector would be ", worksheet.xi_a_n113); end
  def test_xi_a_d114; assert_in_delta(1, worksheet.xi_a_d114, 0.001); end
  def test_xi_a_e114; assert_in_delta(0, (worksheet.xi_a_e114||0), 0.001); end
  def test_xi_a_f114; assert_in_delta(0, (worksheet.xi_a_f114||0), 0.001); end
  def test_xi_a_g114; assert_in_delta(0, (worksheet.xi_a_g114||0), 0.001); end
  def test_xi_a_h114; assert_in_delta(0, (worksheet.xi_a_h114||0), 0.001); end
  def test_xi_a_i114; assert_in_delta(0, (worksheet.xi_a_i114||0), 0.001); end
  def test_xi_a_j114; assert_in_delta(0, (worksheet.xi_a_j114||0), 0.001); end
  def test_xi_a_k114; assert_in_delta(0, (worksheet.xi_a_k114||0), 0.001); end
  def test_xi_a_l114; assert_in_delta(0, (worksheet.xi_a_l114||0), 0.001); end
  def test_xi_a_m114; assert_in_delta(0, (worksheet.xi_a_m114||0), 0.001); end
  def test_xi_a_n114; assert_in_delta(0, (worksheet.xi_a_n114||0), 0.001); end
  def test_xi_a_d115; assert_in_epsilon(2, worksheet.xi_a_d115, 0.001); end
  def test_xi_a_e115; assert_in_delta(0, (worksheet.xi_a_e115||0), 0.001); end
  def test_xi_a_f115; assert_in_delta(0.01875, worksheet.xi_a_f115, 0.001); end
  def test_xi_a_g115; assert_in_delta(0.0375, worksheet.xi_a_g115, 0.001); end
  def test_xi_a_h115; assert_in_delta(0.056249999999999994, worksheet.xi_a_h115, 0.001); end
  def test_xi_a_i115; assert_in_delta(0.075, worksheet.xi_a_i115, 0.001); end
  def test_xi_a_j115; assert_in_delta(0.09375, worksheet.xi_a_j115, 0.001); end
  def test_xi_a_k115; assert_in_delta(0.1125, worksheet.xi_a_k115, 0.001); end
  def test_xi_a_l115; assert_in_delta(0.13125, worksheet.xi_a_l115, 0.001); end
  def test_xi_a_m115; assert_in_delta(0.15, worksheet.xi_a_m115, 0.001); end
  def test_xi_a_n115; assert_in_delta(0.03333333333333333, worksheet.xi_a_n115, 0.001); end
  def test_xi_a_d116; assert_in_epsilon(3, worksheet.xi_a_d116, 0.001); end
  def test_xi_a_e116; assert_in_delta(0, (worksheet.xi_a_e116||0), 0.001); end
  def test_xi_a_f116; assert_in_delta(0.01875, worksheet.xi_a_f116, 0.001); end
  def test_xi_a_g116; assert_in_delta(0.0375, worksheet.xi_a_g116, 0.001); end
  def test_xi_a_h116; assert_in_delta(0.056249999999999994, worksheet.xi_a_h116, 0.001); end
  def test_xi_a_i116; assert_in_delta(0.075, worksheet.xi_a_i116, 0.001); end
  def test_xi_a_j116; assert_in_delta(0.09375, worksheet.xi_a_j116, 0.001); end
  def test_xi_a_k116; assert_in_delta(0.1125, worksheet.xi_a_k116, 0.001); end
  def test_xi_a_l116; assert_in_delta(0.13125, worksheet.xi_a_l116, 0.001); end
  def test_xi_a_m116; assert_in_delta(0.15, worksheet.xi_a_m116, 0.001); end
  def test_xi_a_n116; assert_in_delta(0.06666666666666667, worksheet.xi_a_n116, 0.001); end
  def test_xi_a_d117; assert_in_epsilon(4, worksheet.xi_a_d117, 0.001); end
  def test_xi_a_e117; assert_in_delta(0, (worksheet.xi_a_e117||0), 0.001); end
  def test_xi_a_f117; assert_in_delta(0.01875, worksheet.xi_a_f117, 0.001); end
  def test_xi_a_g117; assert_in_delta(0.0375, worksheet.xi_a_g117, 0.001); end
  def test_xi_a_h117; assert_in_delta(0.056249999999999994, worksheet.xi_a_h117, 0.001); end
  def test_xi_a_i117; assert_in_delta(0.075, worksheet.xi_a_i117, 0.001); end
  def test_xi_a_j117; assert_in_delta(0.09375, worksheet.xi_a_j117, 0.001); end
  def test_xi_a_k117; assert_in_delta(0.1125, worksheet.xi_a_k117, 0.001); end
  def test_xi_a_l117; assert_in_delta(0.13125, worksheet.xi_a_l117, 0.001); end
  def test_xi_a_m117; assert_in_delta(0.15, worksheet.xi_a_m117, 0.001); end
  def test_xi_a_n117; assert_in_delta(0.1, worksheet.xi_a_n117, 0.001); end
  def test_xi_a_b119; assert_equal("(Ic) Steel CCS intensity", worksheet.xi_a_b119); end
  def test_xi_a_c120; assert_equal("Definition", worksheet.xi_a_c120); end
  def test_xi_a_c121; assert_equal("End of pipe absorbing of all CO2", worksheet.xi_a_c121); end
  def test_xi_a_c122; assert_equal("Breakthrough technology, as of 2020 only", worksheet.xi_a_c122); end
  def test_xi_a_c123; assert_equal("For Oxygen", worksheet.xi_a_c123); end
  def test_xi_a_d123; assert_equal("Type", worksheet.xi_a_d123); end
  def test_xi_a_e123; assert_in_epsilon(2010, worksheet.xi_a_e123, 0.001); end
  def test_xi_a_f123; assert_in_epsilon(2015, worksheet.xi_a_f123, 0.001); end
  def test_xi_a_g123; assert_in_epsilon(2020, worksheet.xi_a_g123, 0.001); end
  def test_xi_a_h123; assert_in_epsilon(2025, worksheet.xi_a_h123, 0.001); end
  def test_xi_a_i123; assert_in_epsilon(2030, worksheet.xi_a_i123, 0.001); end
  def test_xi_a_j123; assert_in_epsilon(2035, worksheet.xi_a_j123, 0.001); end
  def test_xi_a_k123; assert_in_epsilon(2040, worksheet.xi_a_k123, 0.001); end
  def test_xi_a_l123; assert_in_epsilon(2045, worksheet.xi_a_l123, 0.001); end
  def test_xi_a_m123; assert_in_epsilon(2050, worksheet.xi_a_m123, 0.001); end
  def test_xi_a_d124; assert_in_delta(1, worksheet.xi_a_d124, 0.001); end
  def test_xi_a_e124; assert_in_delta(0, (worksheet.xi_a_e124||0), 0.001); end
  def test_xi_a_f124; assert_in_delta(0, (worksheet.xi_a_f124||0), 0.001); end
  def test_xi_a_g124; assert_in_delta(0, (worksheet.xi_a_g124||0), 0.001); end
  def test_xi_a_h124; assert_in_delta(0, (worksheet.xi_a_h124||0), 0.001); end
  def test_xi_a_i124; assert_in_delta(0, (worksheet.xi_a_i124||0), 0.001); end
  def test_xi_a_j124; assert_in_delta(0, (worksheet.xi_a_j124||0), 0.001); end
  def test_xi_a_k124; assert_in_delta(0, (worksheet.xi_a_k124||0), 0.001); end
  def test_xi_a_l124; assert_in_delta(0, (worksheet.xi_a_l124||0), 0.001); end
  def test_xi_a_m124; assert_in_delta(0, (worksheet.xi_a_m124||0), 0.001); end
  def test_xi_a_d125; assert_in_epsilon(2, worksheet.xi_a_d125, 0.001); end
  def test_xi_a_e125; assert_in_delta(0, (worksheet.xi_a_e125||0), 0.001); end
  def test_xi_a_f125; assert_in_delta(0, (worksheet.xi_a_f125||0), 0.001); end
  def test_xi_a_g125; assert_in_delta(0, (worksheet.xi_a_g125||0), 0.001); end
  def test_xi_a_h125; assert_in_delta(0, (worksheet.xi_a_h125||0), 0.001); end
  def test_xi_a_i125; assert_in_delta(0, (worksheet.xi_a_i125||0), 0.001); end
  def test_xi_a_j125; assert_in_delta(0, (worksheet.xi_a_j125||0), 0.001); end
  def test_xi_a_k125; assert_in_delta(0, (worksheet.xi_a_k125||0), 0.001); end
  def test_xi_a_l125; assert_in_delta(0, (worksheet.xi_a_l125||0), 0.001); end
  def test_xi_a_m125; assert_in_delta(0.85, worksheet.xi_a_m125, 0.001); end
  def test_xi_a_d126; assert_in_epsilon(3, worksheet.xi_a_d126, 0.001); end
  def test_xi_a_e126; assert_in_delta(0, (worksheet.xi_a_e126||0), 0.001); end
  def test_xi_a_f126; assert_in_delta(0, (worksheet.xi_a_f126||0), 0.001); end
  def test_xi_a_g126; assert_in_delta(0, (worksheet.xi_a_g126||0), 0.001); end
  def test_xi_a_h126; assert_in_delta(0, (worksheet.xi_a_h126||0), 0.001); end
  def test_xi_a_i126; assert_in_delta(0.16999999999999998, worksheet.xi_a_i126, 0.001); end
  def test_xi_a_j126; assert_in_delta(0.33999999999999997, worksheet.xi_a_j126, 0.001); end
  def test_xi_a_k126; assert_in_delta(0.51, worksheet.xi_a_k126, 0.001); end
  def test_xi_a_l126; assert_in_delta(0.6799999999999999, worksheet.xi_a_l126, 0.001); end
  def test_xi_a_m126; assert_in_delta(0.85, worksheet.xi_a_m126, 0.001); end
  def test_xi_a_d127; assert_in_epsilon(4, worksheet.xi_a_d127, 0.001); end
  def test_xi_a_e127; assert_in_delta(0, (worksheet.xi_a_e127||0), 0.001); end
  def test_xi_a_f127; assert_in_delta(0, (worksheet.xi_a_f127||0), 0.001); end
  def test_xi_a_g127; assert_in_delta(0, (worksheet.xi_a_g127||0), 0.001); end
  def test_xi_a_h127; assert_in_delta(0, (worksheet.xi_a_h127||0), 0.001); end
  def test_xi_a_i127; assert_in_delta(0.16999999999999998, worksheet.xi_a_i127, 0.001); end
  def test_xi_a_j127; assert_in_delta(0.33999999999999997, worksheet.xi_a_j127, 0.001); end
  def test_xi_a_k127; assert_in_delta(0.51, worksheet.xi_a_k127, 0.001); end
  def test_xi_a_l127; assert_in_delta(0.6799999999999999, worksheet.xi_a_l127, 0.001); end
  def test_xi_a_m127; assert_in_delta(0.85, worksheet.xi_a_m127, 0.001); end
  def test_xi_a_c129; assert_equal("For Others", worksheet.xi_a_c129); end
  def test_xi_a_d129; assert_equal("Type", worksheet.xi_a_d129); end
  def test_xi_a_e129; assert_in_epsilon(2010, worksheet.xi_a_e129, 0.001); end
  def test_xi_a_f129; assert_in_epsilon(2015, worksheet.xi_a_f129, 0.001); end
  def test_xi_a_g129; assert_in_epsilon(2020, worksheet.xi_a_g129, 0.001); end
  def test_xi_a_h129; assert_in_epsilon(2025, worksheet.xi_a_h129, 0.001); end
  def test_xi_a_i129; assert_in_epsilon(2030, worksheet.xi_a_i129, 0.001); end
  def test_xi_a_j129; assert_in_epsilon(2035, worksheet.xi_a_j129, 0.001); end
  def test_xi_a_k129; assert_in_epsilon(2040, worksheet.xi_a_k129, 0.001); end
  def test_xi_a_l129; assert_in_epsilon(2045, worksheet.xi_a_l129, 0.001); end
  def test_xi_a_m129; assert_in_epsilon(2050, worksheet.xi_a_m129, 0.001); end
  def test_xi_a_d130; assert_in_delta(1, worksheet.xi_a_d130, 0.001); end
  def test_xi_a_e130; assert_in_delta(0, (worksheet.xi_a_e130||0), 0.001); end
  def test_xi_a_f130; assert_in_delta(0, (worksheet.xi_a_f130||0), 0.001); end
  def test_xi_a_g130; assert_in_delta(0, (worksheet.xi_a_g130||0), 0.001); end
  def test_xi_a_h130; assert_in_delta(0, (worksheet.xi_a_h130||0), 0.001); end
  def test_xi_a_i130; assert_in_delta(0, (worksheet.xi_a_i130||0), 0.001); end
  def test_xi_a_j130; assert_in_delta(0, (worksheet.xi_a_j130||0), 0.001); end
  def test_xi_a_k130; assert_in_delta(0, (worksheet.xi_a_k130||0), 0.001); end
  def test_xi_a_l130; assert_in_delta(0, (worksheet.xi_a_l130||0), 0.001); end
  def test_xi_a_m130; assert_in_delta(0, (worksheet.xi_a_m130||0), 0.001); end
  def test_xi_a_d131; assert_in_epsilon(2, worksheet.xi_a_d131, 0.001); end
  def test_xi_a_e131; assert_in_delta(0, (worksheet.xi_a_e131||0), 0.001); end
  def test_xi_a_f131; assert_in_delta(0, (worksheet.xi_a_f131||0), 0.001); end
  def test_xi_a_g131; assert_in_delta(0, (worksheet.xi_a_g131||0), 0.001); end
  def test_xi_a_h131; assert_in_delta(0, (worksheet.xi_a_h131||0), 0.001); end
  def test_xi_a_i131; assert_in_delta(0, (worksheet.xi_a_i131||0), 0.001); end
  def test_xi_a_j131; assert_in_delta(0, (worksheet.xi_a_j131||0), 0.001); end
  def test_xi_a_k131; assert_in_delta(0, (worksheet.xi_a_k131||0), 0.001); end
  def test_xi_a_l131; assert_in_delta(0, (worksheet.xi_a_l131||0), 0.001); end
  def test_xi_a_m131; assert_in_delta(0, (worksheet.xi_a_m131||0), 0.001); end
  def test_xi_a_d132; assert_in_epsilon(3, worksheet.xi_a_d132, 0.001); end
  def test_xi_a_e132; assert_in_delta(0, (worksheet.xi_a_e132||0), 0.001); end
  def test_xi_a_f132; assert_in_delta(0, (worksheet.xi_a_f132||0), 0.001); end
  def test_xi_a_g132; assert_in_delta(0, (worksheet.xi_a_g132||0), 0.001); end
  def test_xi_a_h132; assert_in_delta(0, (worksheet.xi_a_h132||0), 0.001); end
  def test_xi_a_i132; assert_in_delta(0, (worksheet.xi_a_i132||0), 0.001); end
  def test_xi_a_j132; assert_in_delta(0, (worksheet.xi_a_j132||0), 0.001); end
  def test_xi_a_k132; assert_in_delta(0, (worksheet.xi_a_k132||0), 0.001); end
  def test_xi_a_l132; assert_in_delta(0, (worksheet.xi_a_l132||0), 0.001); end
  def test_xi_a_m132; assert_in_delta(0, (worksheet.xi_a_m132||0), 0.001); end
  def test_xi_a_d133; assert_in_epsilon(4, worksheet.xi_a_d133, 0.001); end
  def test_xi_a_e133; assert_in_delta(0, (worksheet.xi_a_e133||0), 0.001); end
  def test_xi_a_f133; assert_in_delta(0, (worksheet.xi_a_f133||0), 0.001); end
  def test_xi_a_g133; assert_in_delta(0, (worksheet.xi_a_g133||0), 0.001); end
  def test_xi_a_h133; assert_in_delta(0, (worksheet.xi_a_h133||0), 0.001); end
  def test_xi_a_i133; assert_in_delta(0, (worksheet.xi_a_i133||0), 0.001); end
  def test_xi_a_j133; assert_in_delta(0, (worksheet.xi_a_j133||0), 0.001); end
  def test_xi_a_k133; assert_in_delta(0, (worksheet.xi_a_k133||0), 0.001); end
  def test_xi_a_l133; assert_in_delta(0, (worksheet.xi_a_l133||0), 0.001); end
  def test_xi_a_m133; assert_in_delta(0.85, worksheet.xi_a_m133, 0.001); end
  def test_xi_a_b138; assert_equal("Fixed assumptions", worksheet.xi_a_b138); end
  def test_xi_a_c140; assert_equal("Baseline production (Kt, 2010)", worksheet.xi_a_c140); end
  def test_xi_a_j140; assert_equal("Energy balances", worksheet.xi_a_j140); end
  def test_xi_a_e141; assert_equal("Production", worksheet.xi_a_e141); end
  def test_xi_a_j141; assert_equal("Energy consumption in PJ", worksheet.xi_a_j141); end
  def test_xi_a_c142; assert_equal("Product type", worksheet.xi_a_c142); end
  def test_xi_a_d142; assert_equal("Description", worksheet.xi_a_d142); end
  def test_xi_a_e142; assert_in_epsilon(2010, worksheet.xi_a_e142, 0.001); end
  def test_xi_a_f142; assert_equal("Notes", worksheet.xi_a_f142); end
  def test_xi_a_l142; assert_equal("Kton", worksheet.xi_a_l142); end
  def test_xi_a_m142; assert_equal("Cokes", worksheet.xi_a_m142); end
  def test_xi_a_n142; assert_equal("Coal", worksheet.xi_a_n142); end
  def test_xi_a_o142; assert_equal("Fuel", worksheet.xi_a_o142); end
  def test_xi_a_p142; assert_equal("Gas", worksheet.xi_a_p142); end
  def test_xi_a_q142; assert_equal("Cokesgas", worksheet.xi_a_q142); end
  def test_xi_a_r142; assert_equal("BFGas", worksheet.xi_a_r142); end
  def test_xi_a_s142; assert_equal("Electricity", worksheet.xi_a_s142); end
  def test_xi_a_t142; assert_equal("Heat", worksheet.xi_a_t142); end
  def test_xi_a_c143; assert_equal("(ii)", worksheet.xi_a_c143); end
  def test_xi_a_d143; assert_equal("Oxygen Steel", worksheet.xi_a_d143); end
  def test_xi_a_e143; assert_in_epsilon(5264, worksheet.xi_a_e143, 0.001); end
  def test_xi_a_f143; assert_equal("GSV, Inventaire Belge des Emissions", worksheet.xi_a_f143); end
  def test_xi_a_j143; assert_equal("Flanders", worksheet.xi_a_j143); end
  def test_xi_a_k143; assert_equal("Oxygen steel", worksheet.xi_a_k143); end
  def test_xi_a_l143; assert_in_epsilon(4394, worksheet.xi_a_l143, 0.001); end
  def test_xi_a_m143; assert_in_epsilon(40.8, worksheet.xi_a_m143, 0.001); end
  def test_xi_a_n143; assert_in_epsilon(25.9, worksheet.xi_a_n143, 0.001); end
  def test_xi_a_o143; assert_in_delta(0.03, worksheet.xi_a_o143, 0.001); end
  def test_xi_a_p143; assert_in_epsilon(7.04, worksheet.xi_a_p143, 0.001); end
  def test_xi_a_q143; assert_in_epsilon(6.214, worksheet.xi_a_q143, 0.001); end
  def test_xi_a_r143; assert_in_epsilon(-13.938, worksheet.xi_a_r143, 0.001); end
  def test_xi_a_s143; assert_in_epsilon(8.304, worksheet.xi_a_s143, 0.001); end
  def test_xi_a_c144; assert_equal("(iii)", worksheet.xi_a_c144); end
  def test_xi_a_d144; assert_equal("Electric Steel", worksheet.xi_a_d144); end
  def test_xi_a_e144; assert_in_epsilon(2869, worksheet.xi_a_e144, 0.001); end
  def test_xi_a_f144; assert_equal("GSV, Inventaire Belge des Emissions", worksheet.xi_a_f144); end
  def test_xi_a_k144; assert_equal("Electro steel", worksheet.xi_a_k144); end
  def test_xi_a_l144; assert_in_epsilon(739, worksheet.xi_a_l144, 0.001); end
  def test_xi_a_p144; assert_in_epsilon(2.02, worksheet.xi_a_p144, 0.001); end
  def test_xi_a_s144; assert_in_epsilon(1.884, worksheet.xi_a_s144, 0.001); end
  def test_xi_a_e145; assert_in_epsilon(8133, worksheet.xi_a_e145, 0.001); end
  def test_xi_a_j145; assert_equal("Wallonia", worksheet.xi_a_j145); end
  def test_xi_a_k145; assert_equal("Oxygen steel", worksheet.xi_a_k145); end
  def test_xi_a_l145; assert_in_epsilon(870, worksheet.xi_a_l145, 0.001); end
  def test_xi_a_m145; assert_in_epsilon(6.537331327114054, worksheet.xi_a_m145, 0.001); end
  def test_xi_a_n145; assert_in_epsilon(4.7889533554017465, worksheet.xi_a_n145, 0.001); end
  def test_xi_a_p145; assert_in_epsilon(1.4693915136924467, worksheet.xi_a_p145, 0.001); end
  def test_xi_a_q145; assert_in_delta(0.3845489015949443, worksheet.xi_a_q145, 0.001); end
  def test_xi_a_r145; assert_in_epsilon(1.2007727956665666, worksheet.xi_a_r145, 0.001); end
  def test_xi_a_s145; assert_in_delta(0.9227288594643396, worksheet.xi_a_s145, 0.001); end
  def test_xi_a_t145; assert_in_delta(0.39, worksheet.xi_a_t145, 0.001); end
  def test_xi_a_k146; assert_equal("Electro steel", worksheet.xi_a_k146); end
  def test_xi_a_l146; assert_in_epsilon(2130, worksheet.xi_a_l146, 0.001); end
  def test_xi_a_m146; assert_in_delta(0.2946844660194175, worksheet.xi_a_m146, 0.001); end
  def test_xi_a_n146; assert_in_delta(0.7537718446601942, worksheet.xi_a_n146, 0.001); end
  def test_xi_a_o146; assert_in_delta(0.229, worksheet.xi_a_o146, 0.001); end
  def test_xi_a_p146; assert_in_epsilon(12.26197572815534, worksheet.xi_a_p146, 0.001); end
  def test_xi_a_q146; assert_in_delta(0, (worksheet.xi_a_q146||0), 0.001); end
  def test_xi_a_r146; assert_in_delta(0, (worksheet.xi_a_r146||0), 0.001); end
  def test_xi_a_s146; assert_in_epsilon(7.516004854368933, worksheet.xi_a_s146, 0.001); end
  def test_xi_a_c150; assert_equal("Baseline energy consumption, electricity (without CHP), fuels (with CHP) (TWh, 2010)", worksheet.xi_a_c150); end
  def test_xi_a_n150; assert_equal("Baseline energy consumption, CHPs (TWh, 2010)", worksheet.xi_a_n150); end
  def test_xi_a_e151; assert_equal("V.01", worksheet.xi_a_e151); end
  def test_xi_a_f151; assert_equal("V.03", worksheet.xi_a_f151); end
  def test_xi_a_g151; assert_equal("V.05", worksheet.xi_a_g151); end
  def test_xi_a_h151; assert_equal("V.04", worksheet.xi_a_h151); end
  def test_xi_a_i151; assert_equal("V.06", worksheet.xi_a_i151); end
  def test_xi_a_j151; assert_equal("V.07", worksheet.xi_a_j151); end
  def test_xi_a_l151; assert_equal("TWh", worksheet.xi_a_l151); end
  def test_xi_a_p151; assert_equal("V.01", worksheet.xi_a_p151); end
  def test_xi_a_q151; assert_equal("V.03", worksheet.xi_a_q151); end
  def test_xi_a_r151; assert_equal("V.05", worksheet.xi_a_r151); end
  def test_xi_a_s151; assert_equal("V.04", worksheet.xi_a_s151); end
  def test_xi_a_t151; assert_equal("V.10", worksheet.xi_a_t151); end
  def test_xi_a_u151; assert_equal("V.07", worksheet.xi_a_u151); end
  def test_xi_a_c152; assert_equal("Product type", worksheet.xi_a_c152); end
  def test_xi_a_d152; assert_equal("Description", worksheet.xi_a_d152); end
  def test_xi_a_e152; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_e152); end
  def test_xi_a_f152; assert_equal("Solid hydrocarbons", worksheet.xi_a_f152); end
  def test_xi_a_g152; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_g152); end
  def test_xi_a_h152; assert_equal("Liquid hydrocarbons", worksheet.xi_a_h152); end
  def test_xi_a_i152; assert_equal("Blast furnace gas", worksheet.xi_a_i152); end
  def test_xi_a_j152; assert_equal("Heat transport", worksheet.xi_a_j152); end
  def test_xi_a_k152; assert_equal("Total", worksheet.xi_a_k152); end
  def test_xi_a_l152; assert_equal("Notes", worksheet.xi_a_l152); end
  def test_xi_a_n152; assert_equal("Product type", worksheet.xi_a_n152); end
  def test_xi_a_o152; assert_equal("Description", worksheet.xi_a_o152); end
  def test_xi_a_p152; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_p152); end
  def test_xi_a_q152; assert_equal("Solid hydrocarbons", worksheet.xi_a_q152); end
  def test_xi_a_r152; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_r152); end
  def test_xi_a_s152; assert_equal("Liquid hydrocarbons", worksheet.xi_a_s152); end
  def test_xi_a_t152; assert_equal("Wet biomass and waste", worksheet.xi_a_t152); end
  def test_xi_a_u152; assert_equal("Heat transport", worksheet.xi_a_u152); end
  def test_xi_a_v152; assert_equal("Total", worksheet.xi_a_v152); end
  def test_xi_a_c153; assert_equal("(ii)", worksheet.xi_a_c153); end
  def test_xi_a_d153; assert_equal("Oxygen Steel", worksheet.xi_a_d153); end
  def test_xi_a_e153; assert_in_epsilon(2.5629802387400944, worksheet.xi_a_e153, 0.001); end
  def test_xi_a_f153; assert_in_epsilon(24.9218679673655, worksheet.xi_a_f153, 0.001); end
  def test_xi_a_g153; assert_in_epsilon(6.5919425987227065, worksheet.xi_a_g153, 0.001); end
  def test_xi_a_h153; assert_in_epsilon(2.4041531982479016, worksheet.xi_a_h153, 0.001); end
  def test_xi_a_i153; assert_in_epsilon(-3.5381186678703984, worksheet.xi_a_i153, 0.001); end
  def test_xi_a_j153; assert_in_epsilon(-1.705188417427358, worksheet.xi_a_j153, 0.001); end
  def test_xi_a_k153; assert_in_epsilon(31.237636917778453, worksheet.xi_a_k153, 0.001); end
  def test_xi_a_n153; assert_equal("(i)", worksheet.xi_a_n153); end
  def test_xi_a_o153; assert_equal("Oxygen steel", worksheet.xi_a_o153); end
  def test_xi_a_p153; assert_in_delta(-0.267, worksheet.xi_a_p153, 0.001); end
  def test_xi_a_q153; assert_in_epsilon(3.2479000000000005, worksheet.xi_a_q153, 0.001); end
  def test_xi_a_r153; assert_in_epsilon(-1.9411, worksheet.xi_a_r153, 0.001); end
  def test_xi_a_s153; assert_in_delta(0.032100000000000004, worksheet.xi_a_s153, 0.001); end
  def test_xi_a_t153; assert_in_delta(0, (worksheet.xi_a_t153||0), 0.001); end
  def test_xi_a_u153; assert_in_delta(0, (worksheet.xi_a_u153||0), 0.001); end
  def test_xi_a_v153; assert_in_epsilon(1.0719000000000005, worksheet.xi_a_v153, 0.001); end
  def test_xi_a_c154; assert_equal("(iii)", worksheet.xi_a_c154); end
  def test_xi_a_d154; assert_equal("Electric Steel", worksheet.xi_a_d154); end
  def test_xi_a_e154; assert_in_epsilon(2.6111124595469257, worksheet.xi_a_e154, 0.001); end
  def test_xi_a_f154; assert_in_delta(0.2912378640776699, worksheet.xi_a_f154, 0.001); end
  def test_xi_a_g154; assert_in_epsilon(3.9672154800431496, worksheet.xi_a_g154, 0.001); end
  def test_xi_a_h154; assert_in_delta(0.06361111111111112, worksheet.xi_a_h154, 0.001); end
  def test_xi_a_i154; assert_in_delta(0, (worksheet.xi_a_i154||0), 0.001); end
  def test_xi_a_j154; assert_in_delta(0, (worksheet.xi_a_j154||0), 0.001); end
  def test_xi_a_k154; assert_in_epsilon(6.933176914778857, worksheet.xi_a_k154, 0.001); end
  def test_xi_a_n154; assert_equal("(iii)", worksheet.xi_a_n154); end
  def test_xi_a_o154; assert_equal("Electric Steel", worksheet.xi_a_o154); end
  def test_xi_a_p154; assert_in_delta(0, (worksheet.xi_a_p154||0), 0.001); end
  def test_xi_a_q154; assert_in_delta(0, (worksheet.xi_a_q154||0), 0.001); end
  def test_xi_a_r154; assert_in_delta(0, (worksheet.xi_a_r154||0), 0.001); end
  def test_xi_a_s154; assert_in_delta(0, (worksheet.xi_a_s154||0), 0.001); end
  def test_xi_a_t154; assert_in_delta(0, (worksheet.xi_a_t154||0), 0.001); end
  def test_xi_a_u154; assert_in_delta(0, (worksheet.xi_a_u154||0), 0.001); end
  def test_xi_a_d155; assert_equal("Total", worksheet.xi_a_d155); end
  def test_xi_a_e155; assert_in_epsilon(5.17409269828702, worksheet.xi_a_e155, 0.001); end
  def test_xi_a_f155; assert_in_epsilon(25.21310583144317, worksheet.xi_a_f155, 0.001); end
  def test_xi_a_g155; assert_in_epsilon(10.559158078765856, worksheet.xi_a_g155, 0.001); end
  def test_xi_a_h155; assert_in_epsilon(2.467764309359013, worksheet.xi_a_h155, 0.001); end
  def test_xi_a_i155; assert_in_epsilon(-3.5381186678703984, worksheet.xi_a_i155, 0.001); end
  def test_xi_a_j155; assert_in_epsilon(-1.705188417427358, worksheet.xi_a_j155, 0.001); end
  def test_xi_a_k155; assert_in_epsilon(38.1708138325573, worksheet.xi_a_k155, 0.001); end
  def test_xi_a_o155; assert_equal("Total", worksheet.xi_a_o155); end
  def test_xi_a_p155; assert_in_delta(-0.267, worksheet.xi_a_p155, 0.001); end
  def test_xi_a_q155; assert_in_epsilon(3.2479000000000005, worksheet.xi_a_q155, 0.001); end
  def test_xi_a_r155; assert_in_epsilon(-1.9411, worksheet.xi_a_r155, 0.001); end
  def test_xi_a_s155; assert_in_delta(0.032100000000000004, worksheet.xi_a_s155, 0.001); end
  def test_xi_a_t155; assert_in_delta(0, (worksheet.xi_a_t155||0), 0.001); end
  def test_xi_a_u155; assert_in_delta(0, (worksheet.xi_a_u155||0), 0.001); end
  def test_xi_a_v155; assert_in_epsilon(1.0719000000000005, worksheet.xi_a_v155, 0.001); end
  def test_xi_a_d156; assert_equal("Energy shares  Oxygen  steel", worksheet.xi_a_d156); end
  def test_xi_a_e156; assert_in_delta(0.08204782728879889, worksheet.xi_a_e156, 0.001); end
  def test_xi_a_f156; assert_in_delta(0.7978154055943194, worksheet.xi_a_f156, 0.001); end
  def test_xi_a_g156; assert_in_delta(0.21102564883744446, worksheet.xi_a_g156, 0.001); end
  def test_xi_a_h156; assert_in_delta(0.07696335047929354, worksheet.xi_a_h156, 0.001); end
  def test_xi_a_i156; assert_in_delta(-0.1132646069606094, worksheet.xi_a_i156, 0.001); end
  def test_xi_a_j156; assert_in_delta(-0.05458762523924703, worksheet.xi_a_j156, 0.001); end
  def test_xi_a_k156; assert_in_delta(1, worksheet.xi_a_k156, 0.001); end
  def test_xi_a_d157; assert_equal("Energy shares  Electro steel ", worksheet.xi_a_d157); end
  def test_xi_a_e157; assert_in_delta(0.37661125507716986, worksheet.xi_a_e157, 0.001); end
  def test_xi_a_f157; assert_in_delta(0.04200640884510868, worksheet.xi_a_f157, 0.001); end
  def test_xi_a_g157; assert_in_delta(0.5722074496017227, worksheet.xi_a_g157, 0.001); end
  def test_xi_a_h157; assert_in_delta(0.009174886475998728, worksheet.xi_a_h157, 0.001); end
  def test_xi_a_i157; assert_in_delta(0, (worksheet.xi_a_i157||0), 0.001); end
  def test_xi_a_j157; assert_in_delta(0, (worksheet.xi_a_j157||0), 0.001); end
  def test_xi_a_k157; assert_in_delta(0.9999999999999999, worksheet.xi_a_k157, 0.001); end
  def test_xi_a_d158; assert_equal("Energy shares  mixed steel production", worksheet.xi_a_d158); end
  def test_xi_a_e158; assert_in_delta(0.13555101866530928, worksheet.xi_a_e158, 0.001); end
  def test_xi_a_f158; assert_in_delta(0.6605336197976994, worksheet.xi_a_f158, 0.001); end
  def test_xi_a_g158; assert_in_delta(0.27662910529194845, worksheet.xi_a_g158, 0.001); end
  def test_xi_a_h158; assert_in_delta(0.06465055526938138, worksheet.xi_a_h158, 0.001); end
  def test_xi_a_i158; assert_in_delta(-0.09269172733363641, worksheet.xi_a_i158, 0.001); end
  def test_xi_a_j158; assert_in_delta(-0.04467257169070206, worksheet.xi_a_j158, 0.001); end
  def test_xi_a_c159; assert_equal("Baseline process emissions (MMtCO2e, 2010)", worksheet.xi_a_c159); end
  def test_xi_a_m160; assert_equal("Emission factors: Mton /PJ", worksheet.xi_a_m160); end
  def test_xi_a_c161; assert_equal("Product type", worksheet.xi_a_c161); end
  def test_xi_a_d161; assert_equal("Description", worksheet.xi_a_d161); end
  def test_xi_a_f161; assert_equal("Notes", worksheet.xi_a_f161); end
  def test_xi_a_m161; assert_equal("Cokes", worksheet.xi_a_m161); end
  def test_xi_a_n161; assert_equal("Coal", worksheet.xi_a_n161); end
  def test_xi_a_o161; assert_equal("Fuel", worksheet.xi_a_o161); end
  def test_xi_a_p161; assert_equal("Gas", worksheet.xi_a_p161); end
  def test_xi_a_q161; assert_equal("Cokesgas", worksheet.xi_a_q161); end
  def test_xi_a_r161; assert_equal("Bfgas", worksheet.xi_a_r161); end
  def test_xi_a_c162; assert_equal("(ii)", worksheet.xi_a_c162); end
  def test_xi_a_d162; assert_equal("Oxygen Steel", worksheet.xi_a_d162); end
  def test_xi_a_e162; assert_in_delta(0, (worksheet.xi_a_e162||0), 0.001); end
  def test_xi_a_f162; assert_equal("All emissions considered as fuel emissions for simplicity", worksheet.xi_a_f162); end
  def test_xi_a_m162; assert_in_delta(0.11, worksheet.xi_a_m162, 0.001); end
  def test_xi_a_n162; assert_in_delta(0.0927, worksheet.xi_a_n162, 0.001); end
  def test_xi_a_o162; assert_in_delta(0.0766, worksheet.xi_a_o162, 0.001); end
  def test_xi_a_p162; assert_in_delta(0.0561, worksheet.xi_a_p162, 0.001); end
  def test_xi_a_q162; assert_in_delta(0.05, worksheet.xi_a_q162, 0.001); end
  def test_xi_a_r162; assert_in_delta(0.258, worksheet.xi_a_r162, 0.001); end
  def test_xi_a_c163; assert_equal("(iii)", worksheet.xi_a_c163); end
  def test_xi_a_d163; assert_equal("Electric Steel", worksheet.xi_a_d163); end
  def test_xi_a_e163; assert_in_delta(0.9210501796116505, worksheet.xi_a_e163, 0.001); end
  def test_xi_a_d164; assert_equal("Total", worksheet.xi_a_d164); end
  def test_xi_a_c166; assert_equal("Baseline fugitive emissions from fuels (MMtCO2e, 2010)", worksheet.xi_a_c166); end
  def test_xi_a_c167; assert_equal("Product type", worksheet.xi_a_c167); end
  def test_xi_a_d167; assert_equal("Description", worksheet.xi_a_d167); end
  def test_xi_a_f167; assert_equal("Notes", worksheet.xi_a_f167); end
  def test_xi_a_c168; assert_equal("(ii)", worksheet.xi_a_c168); end
  def test_xi_a_d168; assert_equal("Oxygen Steel", worksheet.xi_a_d168); end
  def test_xi_a_e168; assert_in_delta(0.547604979315071, worksheet.xi_a_e168, 0.001); end
  def test_xi_a_f168; assert_equal("Are considered a type of process emissions", worksheet.xi_a_f168); end
  def test_xi_a_c169; assert_equal("(iii)", worksheet.xi_a_c169); end
  def test_xi_a_d169; assert_equal("Electric Steel", worksheet.xi_a_d169); end
  def test_xi_a_d170; assert_equal("Total", worksheet.xi_a_d170); end
  def test_xi_a_b172; assert_equal("Costs", worksheet.xi_a_b172); end
  def test_xi_a_c173; assert_equal("Costs are modelled through fuel prices, Capex and opex.", worksheet.xi_a_c173); end
  def test_xi_a_c174; assert_equal("Energy prices are modelled per year", worksheet.xi_a_c174); end
  def test_xi_a_n174; assert_equal("MEUR/TWh", worksheet.xi_a_n174); end
  def test_xi_a_c175; assert_equal("Vector", worksheet.xi_a_c175); end
  def test_xi_a_d175; assert_equal("Description", worksheet.xi_a_d175); end
  def test_xi_a_f175; assert_in_epsilon(2010, worksheet.xi_a_f175, 0.001); end
  def test_xi_a_g175; assert_in_epsilon(2015, worksheet.xi_a_g175, 0.001); end
  def test_xi_a_h175; assert_in_epsilon(2020, worksheet.xi_a_h175, 0.001); end
  def test_xi_a_i175; assert_in_epsilon(2025, worksheet.xi_a_i175, 0.001); end
  def test_xi_a_j175; assert_in_epsilon(2030, worksheet.xi_a_j175, 0.001); end
  def test_xi_a_k175; assert_in_epsilon(2035, worksheet.xi_a_k175, 0.001); end
  def test_xi_a_l175; assert_in_epsilon(2040, worksheet.xi_a_l175, 0.001); end
  def test_xi_a_m175; assert_in_epsilon(2045, worksheet.xi_a_m175, 0.001); end
  def test_xi_a_n175; assert_in_epsilon(2050, worksheet.xi_a_n175, 0.001); end
  def test_xi_a_c176; assert_equal("V.01", worksheet.xi_a_c176); end
  def test_xi_a_d176; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_d176); end
  def test_xi_a_f176; assert_in_epsilon(62.51919507647098, worksheet.xi_a_f176, 0.001); end
  def test_xi_a_g176; assert_in_epsilon(68.19582116426872, worksheet.xi_a_g176, 0.001); end
  def test_xi_a_h176; assert_in_epsilon(75.74196055351227, worksheet.xi_a_h176, 0.001); end
  def test_xi_a_i176; assert_in_epsilon(97.28706468235157, worksheet.xi_a_i176, 0.001); end
  def test_xi_a_j176; assert_in_epsilon(93.1851479380366, worksheet.xi_a_j176, 0.001); end
  def test_xi_a_k176; assert_in_epsilon(89.02450255218142, worksheet.xi_a_k176, 0.001); end
  def test_xi_a_l176; assert_in_epsilon(86.25109814628419, worksheet.xi_a_l176, 0.001); end
  def test_xi_a_m176; assert_in_epsilon(83.80479841208917, worksheet.xi_a_m176, 0.001); end
  def test_xi_a_n176; assert_in_epsilon(81.27018968685324, worksheet.xi_a_n176, 0.001); end
  def test_xi_a_o176; assert_equal("double count with electricity generation cost removed in consolidation section, this is approximate modeling in the sense a +/-15% is applied between the min and the max", worksheet.xi_a_o176); end
  def test_xi_a_c177; assert_equal("V.03", worksheet.xi_a_c177); end
  def test_xi_a_d177; assert_equal("Solid hydrocarbons", worksheet.xi_a_d177); end
  def test_xi_a_f177; assert_in_epsilon(10.520431649379864, worksheet.xi_a_f177, 0.001); end
  def test_xi_a_g177; assert_in_epsilon(12.098496396786842, worksheet.xi_a_g177, 0.001); end
  def test_xi_a_h177; assert_in_epsilon(11.160931027596718, worksheet.xi_a_h177, 0.001); end
  def test_xi_a_i177; assert_in_epsilon(10.00869327552178, worksheet.xi_a_i177, 0.001); end
  def test_xi_a_j177; assert_in_epsilon(8.641783140562028, worksheet.xi_a_j177, 0.001); end
  def test_xi_a_k177; assert_in_epsilon(8.4228775010162, worksheet.xi_a_k177, 0.001); end
  def test_xi_a_l177; assert_in_epsilon(8.19480002633699, worksheet.xi_a_l177, 0.001); end
  def test_xi_a_m177; assert_in_epsilon(7.957550716524399, worksheet.xi_a_m177, 0.001); end
  def test_xi_a_n177; assert_in_epsilon(7.711129571578426, worksheet.xi_a_n177, 0.001); end
  def test_xi_a_o177; assert_equal("global assumptions", worksheet.xi_a_o177); end
  def test_xi_a_c178; assert_equal("V.05", worksheet.xi_a_c178); end
  def test_xi_a_d178; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_d178); end
  def test_xi_a_f178; assert_in_epsilon(26.991577393952404, worksheet.xi_a_f178, 0.001); end
  def test_xi_a_g178; assert_in_epsilon(31.040314003045264, worksheet.xi_a_g178, 0.001); end
  def test_xi_a_h178; assert_in_epsilon(32.02572079679274, worksheet.xi_a_h178, 0.001); end
  def test_xi_a_i178; assert_in_epsilon(32.51842419366647, worksheet.xi_a_i178, 0.001); end
  def test_xi_a_j178; assert_in_epsilon(32.51842419366647, worksheet.xi_a_j178, 0.001); end
  def test_xi_a_k178; assert_in_epsilon(30.82255669817696, worksheet.xi_a_k178, 0.001); end
  def test_xi_a_l178; assert_in_epsilon(29.07477938051683, worksheet.xi_a_l178, 0.001); end
  def test_xi_a_m178; assert_in_epsilon(27.27509224068607, worksheet.xi_a_m178, 0.001); end
  def test_xi_a_n178; assert_in_epsilon(25.423495278684687, worksheet.xi_a_n178, 0.001); end
  def test_xi_a_o178; assert_equal("global assumptions", worksheet.xi_a_o178); end
  def test_xi_a_c179; assert_equal("V.04", worksheet.xi_a_c179); end
  def test_xi_a_d179; assert_equal("Liquid hydrocarbons", worksheet.xi_a_d179); end
  def test_xi_a_f179; assert_in_epsilon(40.24557058915429, worksheet.xi_a_f179, 0.001); end
  def test_xi_a_g179; assert_in_epsilon(46.28240617752743, worksheet.xi_a_g179, 0.001); end
  def test_xi_a_h179; assert_in_epsilon(47.53397660389514, worksheet.xi_a_h179, 0.001); end
  def test_xi_a_i179; assert_in_epsilon(48.065958284096595, worksheet.xi_a_i179, 0.001); end
  def test_xi_a_j179; assert_in_epsilon(47.87835121813183, worksheet.xi_a_j179, 0.001); end
  def test_xi_a_k179; assert_in_epsilon(45.31782798156433, worksheet.xi_a_k179, 0.001); end
  def test_xi_a_l179; assert_in_epsilon(42.69104796870361, worksheet.xi_a_l179, 0.001); end
  def test_xi_a_m179; assert_in_epsilon(39.99801117954967, worksheet.xi_a_m179, 0.001); end
  def test_xi_a_n179; assert_in_epsilon(37.238717614102534, worksheet.xi_a_n179, 0.001); end
  def test_xi_a_o179; assert_equal("global assumptions", worksheet.xi_a_o179); end
  def test_xi_a_c180; assert_equal("V.10", worksheet.xi_a_c180); end
  def test_xi_a_d180; assert_equal("Dry biomass", worksheet.xi_a_d180); end
  def test_xi_a_f180; assert_in_epsilon(25, worksheet.xi_a_f180, 0.001); end
  def test_xi_a_g180; assert_in_epsilon(39.064885496183244, worksheet.xi_a_g180, 0.001); end
  def test_xi_a_h180; assert_in_epsilon(42.43002544529256, worksheet.xi_a_h180, 0.001); end
  def test_xi_a_i180; assert_in_epsilon(45.79516539440198, worksheet.xi_a_i180, 0.001); end
  def test_xi_a_j180; assert_in_epsilon(49.16030534351141, worksheet.xi_a_j180, 0.001); end
  def test_xi_a_k180; assert_in_epsilon(49.76383587786261, worksheet.xi_a_k180, 0.001); end
  def test_xi_a_l180; assert_in_epsilon(50.36736641221371, worksheet.xi_a_l180, 0.001); end
  def test_xi_a_m180; assert_in_epsilon(50.97089694656493, worksheet.xi_a_m180, 0.001); end
  def test_xi_a_n180; assert_in_epsilon(51.574427480916015, worksheet.xi_a_n180, 0.001); end
  def test_xi_a_o180; assert_equal("global assumptions", worksheet.xi_a_o180); end
  def test_xi_a_c181; assert_equal("V.07", worksheet.xi_a_c181); end
  def test_xi_a_d181; assert_equal("Heat transport", worksheet.xi_a_d181); end
  def test_xi_a_f181; assert_in_epsilon(33.2841905893011, worksheet.xi_a_f181, 0.001); end
  def test_xi_a_g181; assert_in_epsilon(54.591528991140514, worksheet.xi_a_g181, 0.001); end
  def test_xi_a_h181; assert_in_epsilon(60.44809148827442, worksheet.xi_a_h181, 0.001); end
  def test_xi_a_i181; assert_in_epsilon(66.3046539854082, worksheet.xi_a_i181, 0.001); end
  def test_xi_a_j181; assert_in_epsilon(72.1612164825421, worksheet.xi_a_j181, 0.001); end
  def test_xi_a_k181; assert_in_epsilon(72.94557753126534, worksheet.xi_a_k181, 0.001); end
  def test_xi_a_l181; assert_in_epsilon(73.72993857998858, worksheet.xi_a_l181, 0.001); end
  def test_xi_a_m181; assert_in_epsilon(74.51429962871195, worksheet.xi_a_m181, 0.001); end
  def test_xi_a_n181; assert_in_epsilon(75.2986606774352, worksheet.xi_a_n181, 0.001); end
  def test_xi_a_o181; assert_equal("global assumptions", worksheet.xi_a_o181); end
  def test_xi_a_e184; assert_equal("Low", worksheet.xi_a_e184); end
  def test_xi_a_g184; assert_equal("High (not modelled yet)", worksheet.xi_a_g184); end
  def test_xi_a_p184; assert_equal("Low-High cost estimate range", worksheet.xi_a_p184); end
  def test_xi_a_s184; assert_in_delta(0.15, worksheet.xi_a_s184, 0.001); end
  def test_xi_a_d185; assert_equal("MEUR", worksheet.xi_a_d185); end
  def test_xi_a_e185; assert_equal("Capex", worksheet.xi_a_e185); end
  def test_xi_a_f185; assert_equal("Opex", worksheet.xi_a_f185); end
  def test_xi_a_g185; assert_equal("Capex", worksheet.xi_a_g185); end
  def test_xi_a_h185; assert_equal("Opex", worksheet.xi_a_h185); end
  def test_xi_a_i185; assert_equal("per", worksheet.xi_a_i185); end
  def test_xi_a_c186; assert_equal("-  ", worksheet.xi_a_c186); end
  def test_xi_a_d186; assert_equal("Product mix : increase of EAF process", worksheet.xi_a_d186); end
  def test_xi_a_e186; assert_in_epsilon(60, worksheet.xi_a_e186, 0.001); end
  def test_xi_a_f186; assert_equal("/", worksheet.xi_a_f186); end
  def test_xi_a_i186; assert_equal("MMtCO2", worksheet.xi_a_i186); end
  def test_xi_a_j186; assert_equal("or €200/t annual capacity", worksheet.xi_a_j186); end
  def test_xi_a_c187; assert_equal("-  ", worksheet.xi_a_c187); end
  def test_xi_a_d187; assert_equal("Product mix:  increase of hard steal", worksheet.xi_a_d187); end
  def test_xi_a_e187; assert_equal("/", worksheet.xi_a_e187); end
  def test_xi_a_f187; assert_equal("/", worksheet.xi_a_f187); end
  def test_xi_a_j187; assert_equal("assumed cost neutral 4 x moins et 4 fois plus cher", worksheet.xi_a_j187); end
  def test_xi_a_c188; assert_equal("-  ", worksheet.xi_a_c188); end
  def test_xi_a_d188; assert_equal("Energy efficiency", worksheet.xi_a_d188); end
  def test_xi_a_e188; assert_in_epsilon(40, worksheet.xi_a_e188, 0.001); end
  def test_xi_a_f188; assert_equal("/", worksheet.xi_a_f188); end
  def test_xi_a_i188; assert_equal("MMtCO2", worksheet.xi_a_i188); end
  def test_xi_a_c189; assert_equal("-  ", worksheet.xi_a_c189); end
  def test_xi_a_d189; assert_equal("Energy efficiency: cogeneration", worksheet.xi_a_d189); end
  def test_xi_a_e189; assert_in_epsilon(30, worksheet.xi_a_e189, 0.001); end
  def test_xi_a_f189; assert_equal("/", worksheet.xi_a_f189); end
  def test_xi_a_i189; assert_equal("MMtCO2", worksheet.xi_a_i189); end
  def test_xi_a_j189; assert_equal("hypothese climact", worksheet.xi_a_j189); end
  def test_xi_a_c190; assert_equal("-  ", worksheet.xi_a_c190); end
  def test_xi_a_d190; assert_equal("Alternative fuels: Coke substitution", worksheet.xi_a_d190); end
  def test_xi_a_e190; assert_equal("/", worksheet.xi_a_e190); end
  def test_xi_a_f190; assert_equal("/", worksheet.xi_a_f190); end
  def test_xi_a_i190; assert_equal("on fuels", worksheet.xi_a_i190); end
  def test_xi_a_c191; assert_equal("-  ", worksheet.xi_a_c191); end
  def test_xi_a_d191; assert_equal("Process improvement: Smelt reduction", worksheet.xi_a_d191); end
  def test_xi_a_e191; assert_in_delta(0.1, worksheet.xi_a_e191, 0.001); end
  def test_xi_a_f191; assert_equal("/", worksheet.xi_a_f191); end
  def test_xi_a_i191; assert_equal("kt production capacity", worksheet.xi_a_i191); end
  def test_xi_a_c192; assert_equal("-  ", worksheet.xi_a_c192); end
  def test_xi_a_d192; assert_equal("Process improvement: Coke substitution", worksheet.xi_a_d192); end
  def test_xi_a_e192; assert_equal("/", worksheet.xi_a_e192); end
  def test_xi_a_f192; assert_equal("/", worksheet.xi_a_f192); end
  def test_xi_a_i192; assert_equal("Not available", worksheet.xi_a_i192); end
  def test_xi_a_c193; assert_equal("-  ", worksheet.xi_a_c193); end
  def test_xi_a_d193; assert_equal("Process improvement: Top gas recycling", worksheet.xi_a_d193); end
  def test_xi_a_e193; assert_in_epsilon(600, worksheet.xi_a_e193, 0.001); end
  def test_xi_a_f193; assert_equal("/", worksheet.xi_a_f193); end
  def test_xi_a_i193; assert_equal("MMtCO2", worksheet.xi_a_i193); end
  def test_xi_a_c194; assert_equal("-  ", worksheet.xi_a_c194); end
  def test_xi_a_d194; assert_equal("Process improvement: Hydrolysis", worksheet.xi_a_d194); end
  def test_xi_a_e194; assert_in_delta(0, (worksheet.xi_a_e194||0), 0.001); end
  def test_xi_a_f194; assert_equal("/", worksheet.xi_a_f194); end
  def test_xi_a_i194; assert_equal("Not available", worksheet.xi_a_i194); end
  def test_xi_a_c195; assert_equal("-  ", worksheet.xi_a_c195); end
  def test_xi_a_d195; assert_equal("Steel CCS intensity", worksheet.xi_a_d195); end
  def test_xi_a_e195; assert_in_epsilon(49.75124378, worksheet.xi_a_e195, 0.001); end
  def test_xi_a_f195; assert_equal("/", worksheet.xi_a_f195); end
  def test_xi_a_i195; assert_equal("MMtCO2", worksheet.xi_a_i195); end
  def test_xi_a_j195; assert_equal("from IEA analysis", worksheet.xi_a_j195); end
  def test_xi_a_c196; assert_equal("-  ", worksheet.xi_a_c196); end
  def test_xi_a_d196; assert_equal("Steel CCS intensity", worksheet.xi_a_d196); end
  def test_xi_a_e196; assert_in_epsilon(200, worksheet.xi_a_e196, 0.001); end
  def test_xi_a_i196; assert_equal("MMtCO2", worksheet.xi_a_i196); end
  def test_xi_a_j196; assert_equal("heroic assumption", worksheet.xi_a_j196); end
  def test_xi_a_c197; assert_equal("-  ", worksheet.xi_a_c197); end
  def test_xi_a_d197; assert_equal("Steel CCS intensity", worksheet.xi_a_d197); end
  def test_xi_a_e197; assert_in_delta(0.33, worksheet.xi_a_e197, 0.001); end
  def test_xi_a_i197; assert_equal("TWh/MMtCO2e", worksheet.xi_a_i197); end
  def test_xi_a_b199; assert_equal("Derived assumptions", worksheet.xi_a_b199); end
  def test_xi_a_b200; assert_equal("5 matrixes define the output of product, energy demand, energy split by vector, emissions intensity, process emissions, total emissions and costs", worksheet.xi_a_b200); end
  def test_xi_a_b201; assert_in_delta(1, worksheet.xi_a_b201, 0.001); end
  def test_xi_a_c201; assert_equal("Output Growth (kt)", worksheet.xi_a_c201); end
  def test_xi_a_n201; assert_in_epsilon(2, worksheet.xi_a_n201, 0.001); end
  def test_xi_a_o201; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_a_o201); end
  def test_xi_a_z201; assert_in_epsilon(3, worksheet.xi_a_z201, 0.001); end
  def test_xi_a_aa201; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa201); end
  def test_xi_a_al201; assert_equal("4a", worksheet.xi_a_al201); end
  def test_xi_a_am201; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am201); end
  def test_xi_a_ay201; assert_in_epsilon(5, worksheet.xi_a_ay201, 0.001); end
  def test_xi_a_az201; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az201); end
  def test_xi_a_bk201; assert_in_epsilon(6, worksheet.xi_a_bk201, 0.001); end
  def test_xi_a_bl201; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl201); end
  def test_xi_a_bw201; assert_in_epsilon(7, worksheet.xi_a_bw201, 0.001); end
  def test_xi_a_bx201; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx201); end
  def test_xi_a_ci201; assert_equal("Capacity", worksheet.xi_a_ci201); end
  def test_xi_a_c202; assert_equal("Product type", worksheet.xi_a_c202); end
  def test_xi_a_d202; assert_equal("Description", worksheet.xi_a_d202); end
  def test_xi_a_e202; assert_in_epsilon(2010, worksheet.xi_a_e202, 0.001); end
  def test_xi_a_f202; assert_in_epsilon(2015, worksheet.xi_a_f202, 0.001); end
  def test_xi_a_g202; assert_in_epsilon(2020, worksheet.xi_a_g202, 0.001); end
  def test_xi_a_h202; assert_in_epsilon(2025, worksheet.xi_a_h202, 0.001); end
  def test_xi_a_i202; assert_in_epsilon(2030, worksheet.xi_a_i202, 0.001); end
  def test_xi_a_j202; assert_in_epsilon(2035, worksheet.xi_a_j202, 0.001); end
  def test_xi_a_k202; assert_in_epsilon(2040, worksheet.xi_a_k202, 0.001); end
  def test_xi_a_l202; assert_in_epsilon(2045, worksheet.xi_a_l202, 0.001); end
  def test_xi_a_m202; assert_in_epsilon(2050, worksheet.xi_a_m202, 0.001); end
  def test_xi_a_o202; assert_equal("Industry", worksheet.xi_a_o202); end
  def test_xi_a_p202; assert_equal("Description", worksheet.xi_a_p202); end
  def test_xi_a_q202; assert_in_epsilon(2010, worksheet.xi_a_q202, 0.001); end
  def test_xi_a_r202; assert_in_epsilon(2015, worksheet.xi_a_r202, 0.001); end
  def test_xi_a_s202; assert_in_epsilon(2020, worksheet.xi_a_s202, 0.001); end
  def test_xi_a_t202; assert_in_epsilon(2025, worksheet.xi_a_t202, 0.001); end
  def test_xi_a_u202; assert_in_epsilon(2030, worksheet.xi_a_u202, 0.001); end
  def test_xi_a_v202; assert_in_epsilon(2035, worksheet.xi_a_v202, 0.001); end
  def test_xi_a_w202; assert_in_epsilon(2040, worksheet.xi_a_w202, 0.001); end
  def test_xi_a_x202; assert_in_epsilon(2045, worksheet.xi_a_x202, 0.001); end
  def test_xi_a_y202; assert_in_epsilon(2050, worksheet.xi_a_y202, 0.001); end
  def test_xi_a_z202; assert_equal("Oxygensteel", worksheet.xi_a_z202); end
  def test_xi_a_aa202; assert_equal("Vector", worksheet.xi_a_aa202); end
  def test_xi_a_ab202; assert_equal("Description", worksheet.xi_a_ab202); end
  def test_xi_a_ac202; assert_in_epsilon(2010, worksheet.xi_a_ac202, 0.001); end
  def test_xi_a_ad202; assert_in_epsilon(2015, worksheet.xi_a_ad202, 0.001); end
  def test_xi_a_ae202; assert_in_epsilon(2020, worksheet.xi_a_ae202, 0.001); end
  def test_xi_a_af202; assert_in_epsilon(2025, worksheet.xi_a_af202, 0.001); end
  def test_xi_a_ag202; assert_in_epsilon(2030, worksheet.xi_a_ag202, 0.001); end
  def test_xi_a_ah202; assert_in_epsilon(2035, worksheet.xi_a_ah202, 0.001); end
  def test_xi_a_ai202; assert_in_epsilon(2040, worksheet.xi_a_ai202, 0.001); end
  def test_xi_a_aj202; assert_in_epsilon(2045, worksheet.xi_a_aj202, 0.001); end
  def test_xi_a_ak202; assert_in_epsilon(2050, worksheet.xi_a_ak202, 0.001); end
  def test_xi_a_am202; assert_equal("Industry", worksheet.xi_a_am202); end
  def test_xi_a_an202; assert_equal("Description", worksheet.xi_a_an202); end
  def test_xi_a_ao202; assert_in_epsilon(2010, worksheet.xi_a_ao202, 0.001); end
  def test_xi_a_ap202; assert_in_epsilon(2015, worksheet.xi_a_ap202, 0.001); end
  def test_xi_a_aq202; assert_in_epsilon(2020, worksheet.xi_a_aq202, 0.001); end
  def test_xi_a_ar202; assert_in_epsilon(2025, worksheet.xi_a_ar202, 0.001); end
  def test_xi_a_as202; assert_in_epsilon(2030, worksheet.xi_a_as202, 0.001); end
  def test_xi_a_at202; assert_in_epsilon(2035, worksheet.xi_a_at202, 0.001); end
  def test_xi_a_au202; assert_in_epsilon(2040, worksheet.xi_a_au202, 0.001); end
  def test_xi_a_av202; assert_in_epsilon(2045, worksheet.xi_a_av202, 0.001); end
  def test_xi_a_aw202; assert_in_epsilon(2050, worksheet.xi_a_aw202, 0.001); end
  def test_xi_a_ay202; assert_equal("Industry", worksheet.xi_a_ay202); end
  def test_xi_a_az202; assert_equal("Description", worksheet.xi_a_az202); end
  def test_xi_a_ba202; assert_in_epsilon(2010, worksheet.xi_a_ba202, 0.001); end
  def test_xi_a_bb202; assert_in_epsilon(2015, worksheet.xi_a_bb202, 0.001); end
  def test_xi_a_bc202; assert_in_epsilon(2020, worksheet.xi_a_bc202, 0.001); end
  def test_xi_a_bd202; assert_in_epsilon(2025, worksheet.xi_a_bd202, 0.001); end
  def test_xi_a_be202; assert_in_epsilon(2030, worksheet.xi_a_be202, 0.001); end
  def test_xi_a_bf202; assert_in_epsilon(2035, worksheet.xi_a_bf202, 0.001); end
  def test_xi_a_bg202; assert_in_epsilon(2040, worksheet.xi_a_bg202, 0.001); end
  def test_xi_a_bh202; assert_in_epsilon(2045, worksheet.xi_a_bh202, 0.001); end
  def test_xi_a_bi202; assert_in_epsilon(2050, worksheet.xi_a_bi202, 0.001); end
  def test_xi_a_bk202; assert_equal("Industry", worksheet.xi_a_bk202); end
  def test_xi_a_bl202; assert_equal("Description", worksheet.xi_a_bl202); end
  def test_xi_a_bm202; assert_in_epsilon(2010, worksheet.xi_a_bm202, 0.001); end
  def test_xi_a_bn202; assert_in_epsilon(2015, worksheet.xi_a_bn202, 0.001); end
  def test_xi_a_bo202; assert_in_epsilon(2020, worksheet.xi_a_bo202, 0.001); end
  def test_xi_a_bp202; assert_in_epsilon(2025, worksheet.xi_a_bp202, 0.001); end
  def test_xi_a_bq202; assert_in_epsilon(2030, worksheet.xi_a_bq202, 0.001); end
  def test_xi_a_br202; assert_in_epsilon(2035, worksheet.xi_a_br202, 0.001); end
  def test_xi_a_bs202; assert_in_epsilon(2040, worksheet.xi_a_bs202, 0.001); end
  def test_xi_a_bt202; assert_in_epsilon(2045, worksheet.xi_a_bt202, 0.001); end
  def test_xi_a_bu202; assert_in_epsilon(2050, worksheet.xi_a_bu202, 0.001); end
  def test_xi_a_bw202; assert_equal("Industry", worksheet.xi_a_bw202); end
  def test_xi_a_bx202; assert_equal("Description", worksheet.xi_a_bx202); end
  def test_xi_a_by202; assert_in_epsilon(2010, worksheet.xi_a_by202, 0.001); end
  def test_xi_a_bz202; assert_in_epsilon(2015, worksheet.xi_a_bz202, 0.001); end
  def test_xi_a_ca202; assert_in_epsilon(2020, worksheet.xi_a_ca202, 0.001); end
  def test_xi_a_cb202; assert_in_epsilon(2025, worksheet.xi_a_cb202, 0.001); end
  def test_xi_a_cc202; assert_in_epsilon(2030, worksheet.xi_a_cc202, 0.001); end
  def test_xi_a_cd202; assert_in_epsilon(2035, worksheet.xi_a_cd202, 0.001); end
  def test_xi_a_ce202; assert_in_epsilon(2040, worksheet.xi_a_ce202, 0.001); end
  def test_xi_a_cf202; assert_in_epsilon(2045, worksheet.xi_a_cf202, 0.001); end
  def test_xi_a_cg202; assert_in_epsilon(2050, worksheet.xi_a_cg202, 0.001); end
  def test_xi_a_ci202; assert_equal("Description", worksheet.xi_a_ci202); end
  def test_xi_a_cj202; assert_in_epsilon(2010, worksheet.xi_a_cj202, 0.001); end
  def test_xi_a_ck202; assert_in_epsilon(2015, worksheet.xi_a_ck202, 0.001); end
  def test_xi_a_cl202; assert_in_epsilon(2020, worksheet.xi_a_cl202, 0.001); end
  def test_xi_a_cm202; assert_in_epsilon(2025, worksheet.xi_a_cm202, 0.001); end
  def test_xi_a_cn202; assert_in_epsilon(2030, worksheet.xi_a_cn202, 0.001); end
  def test_xi_a_co202; assert_in_epsilon(2035, worksheet.xi_a_co202, 0.001); end
  def test_xi_a_cp202; assert_in_epsilon(2040, worksheet.xi_a_cp202, 0.001); end
  def test_xi_a_cq202; assert_in_epsilon(2045, worksheet.xi_a_cq202, 0.001); end
  def test_xi_a_cr202; assert_in_epsilon(2050, worksheet.xi_a_cr202, 0.001); end
  def test_xi_a_c203; assert_equal("(ii)", worksheet.xi_a_c203); end
  def test_xi_a_d203; assert_equal("Oxygen Steel", worksheet.xi_a_d203); end
  def test_xi_a_e203; assert_in_epsilon(1000, worksheet.xi_a_e203, 0.001); end
  def test_xi_a_o203; assert_equal("(ii)", worksheet.xi_a_o203); end
  def test_xi_a_p203; assert_equal("Oxygen Steel", worksheet.xi_a_p203); end
  def test_xi_a_q203; assert_in_delta(0.005934201542131165, worksheet.xi_a_q203, 0.001); end
  def test_xi_a_r203; assert_in_delta(0.005934201542131165, worksheet.xi_a_r203, 0.001); end
  def test_xi_a_s203; assert_in_delta(0.005934201542131165, worksheet.xi_a_s203, 0.001); end
  def test_xi_a_t203; assert_in_delta(0.005934201542131165, worksheet.xi_a_t203, 0.001); end
  def test_xi_a_u203; assert_in_delta(0.005934201542131165, worksheet.xi_a_u203, 0.001); end
  def test_xi_a_v203; assert_in_delta(0.005934201542131165, worksheet.xi_a_v203, 0.001); end
  def test_xi_a_w203; assert_in_delta(0.005934201542131165, worksheet.xi_a_w203, 0.001); end
  def test_xi_a_x203; assert_in_delta(0.005934201542131165, worksheet.xi_a_x203, 0.001); end
  def test_xi_a_y203; assert_in_delta(0.005934201542131165, worksheet.xi_a_y203, 0.001); end
  def test_xi_a_aa203; assert_equal("V.01", worksheet.xi_a_aa203); end
  def test_xi_a_ab203; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab203); end
  def test_xi_a_ac203; assert_in_delta(0.08204782728879889, worksheet.xi_a_ac203, 0.001); end
  def test_xi_a_ad203; assert_in_delta(0.08204782728879889, worksheet.xi_a_ad203, 0.001); end
  def test_xi_a_ae203; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae203, 0.001); end
  def test_xi_a_af203; assert_in_delta(0.08204782728879889, worksheet.xi_a_af203, 0.001); end
  def test_xi_a_ag203; assert_in_delta(0.08204782728879889, worksheet.xi_a_ag203, 0.001); end
  def test_xi_a_ah203; assert_in_delta(0.08204782728879889, worksheet.xi_a_ah203, 0.001); end
  def test_xi_a_ai203; assert_in_delta(0.08204782728879889, worksheet.xi_a_ai203, 0.001); end
  def test_xi_a_aj203; assert_in_delta(0.08204782728879889, worksheet.xi_a_aj203, 0.001); end
  def test_xi_a_ak203; assert_in_delta(0.08204782728879889, worksheet.xi_a_ak203, 0.001); end
  def test_xi_a_am203; assert_equal("(ii)", worksheet.xi_a_am203); end
  def test_xi_a_an203; assert_equal("Oxygen Steel", worksheet.xi_a_an203); end
  def test_xi_a_ao203; assert_in_delta(0, (worksheet.xi_a_ao203||0), 0.001); end
  def test_xi_a_ap203; assert_in_delta(0, (worksheet.xi_a_ap203||0), 0.001); end
  def test_xi_a_aq203; assert_in_delta(0, (worksheet.xi_a_aq203||0), 0.001); end
  def test_xi_a_ar203; assert_in_delta(0, (worksheet.xi_a_ar203||0), 0.001); end
  def test_xi_a_as203; assert_in_delta(0, (worksheet.xi_a_as203||0), 0.001); end
  def test_xi_a_at203; assert_in_delta(0, (worksheet.xi_a_at203||0), 0.001); end
  def test_xi_a_au203; assert_in_delta(0, (worksheet.xi_a_au203||0), 0.001); end
  def test_xi_a_av203; assert_in_delta(0, (worksheet.xi_a_av203||0), 0.001); end
  def test_xi_a_aw203; assert_in_delta(0, (worksheet.xi_a_aw203||0), 0.001); end
  def test_xi_a_ay203; assert_equal("(ii)", worksheet.xi_a_ay203); end
  def test_xi_a_az203; assert_equal("Oxygen Steel", worksheet.xi_a_az203); end
  def test_xi_a_ba203; assert_in_epsilon(1.4066439273965088, worksheet.xi_a_ba203, 0.001); end
  def test_xi_a_bb203; assert_in_epsilon(1.4066439273965088, worksheet.xi_a_bb203, 0.001); end
  def test_xi_a_bc203; assert_in_epsilon(1.4066439273965088, worksheet.xi_a_bc203, 0.001); end
  def test_xi_a_bd203; assert_in_epsilon(1.4066439273965088, worksheet.xi_a_bd203, 0.001); end
  def test_xi_a_be203; assert_in_epsilon(1.4066439273965088, worksheet.xi_a_be203, 0.001); end
  def test_xi_a_bf203; assert_in_epsilon(1.4066439273965088, worksheet.xi_a_bf203, 0.001); end
  def test_xi_a_bg203; assert_in_epsilon(1.4066439273965088, worksheet.xi_a_bg203, 0.001); end
  def test_xi_a_bh203; assert_in_epsilon(1.4066439273965088, worksheet.xi_a_bh203, 0.001); end
  def test_xi_a_bi203; assert_in_epsilon(1.4066439273965088, worksheet.xi_a_bi203, 0.001); end
  def test_xi_a_bk203; assert_equal("(ii)", worksheet.xi_a_bk203); end
  def test_xi_a_bl203; assert_equal("Oxygen Steel", worksheet.xi_a_bl203); end
  def test_xi_a_ac221; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac221, 0.001); end
  def test_xi_a_bm203; assert_in_epsilon(236.18945970950423, worksheet.xi_a_bm203, 0.001); end
  def test_xi_a_ad221; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad221, 0.001); end
  def test_xi_a_bn203; assert_in_epsilon(263.34599572881325, worksheet.xi_a_bn203, 0.001); end
  def test_xi_a_ae221; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae221, 0.001); end
  def test_xi_a_bo203; assert_in_epsilon(283.3912383552951, worksheet.xi_a_bo203, 0.001); end
  def test_xi_a_af221; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af221, 0.001); end
  def test_xi_a_bp203; assert_in_epsilon(332.95687489077443, worksheet.xi_a_bp203, 0.001); end
  def test_xi_a_ag221; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag221, 0.001); end
  def test_xi_a_bq203; assert_in_epsilon(323.43860389270924, worksheet.xi_a_bq203, 0.001); end
  def test_xi_a_ah221; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah221, 0.001); end
  def test_xi_a_br203; assert_in_epsilon(308.1875762970226, worksheet.xi_a_br203, 0.001); end
  def test_xi_a_ai221; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai221, 0.001); end
  def test_xi_a_bs203; assert_in_epsilon(295.8547172650479, worksheet.xi_a_bs203, 0.001); end
  def test_xi_a_aj221; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj221, 0.001); end
  def test_xi_a_bt203; assert_in_epsilon(284.0707418471212, worksheet.xi_a_bt203, 0.001); end
  def test_xi_a_ak221; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak221, 0.001); end
  def test_xi_a_bu203; assert_in_epsilon(271.907247411093, worksheet.xi_a_bu203, 0.001); end
  def test_xi_a_bw203; assert_equal("(ii)", worksheet.xi_a_bw203); end
  def test_xi_a_bx203; assert_equal("Oxygen Steel", worksheet.xi_a_bx203); end
  def test_xi_a_by203; assert_in_delta(0, (worksheet.xi_a_by203||0), 0.001); end
  def test_xi_a_bz203; assert_in_delta(0, (worksheet.xi_a_bz203||0), 0.001); end
  def test_xi_a_ca203; assert_in_delta(0, (worksheet.xi_a_ca203||0), 0.001); end
  def test_xi_a_cb203; assert_in_delta(0, (worksheet.xi_a_cb203||0), 0.001); end
  def test_xi_a_cc203; assert_in_delta(0, (worksheet.xi_a_cc203||0), 0.001); end
  def test_xi_a_cd203; assert_in_delta(0, (worksheet.xi_a_cd203||0), 0.001); end
  def test_xi_a_ce203; assert_in_delta(0, (worksheet.xi_a_ce203||0), 0.001); end
  def test_xi_a_cf203; assert_in_delta(0, (worksheet.xi_a_cf203||0), 0.001); end
  def test_xi_a_cg203; assert_in_delta(0, (worksheet.xi_a_cg203||0), 0.001); end
  def test_xi_a_ci203; assert_equal("Oxygen Steel", worksheet.xi_a_ci203); end
  def test_xi_a_cj203; assert_in_epsilon(1000, worksheet.xi_a_cj203, 0.001); end
  def test_xi_a_ck203; assert_in_epsilon(1000, worksheet.xi_a_ck203, 0.001); end
  def test_xi_a_cl203; assert_in_epsilon(1000, worksheet.xi_a_cl203, 0.001); end
  def test_xi_a_cm203; assert_in_epsilon(1000, worksheet.xi_a_cm203, 0.001); end
  def test_xi_a_cn203; assert_in_epsilon(1000, worksheet.xi_a_cn203, 0.001); end
  def test_xi_a_co203; assert_in_epsilon(1000, worksheet.xi_a_co203, 0.001); end
  def test_xi_a_cp203; assert_in_epsilon(1000, worksheet.xi_a_cp203, 0.001); end
  def test_xi_a_cq203; assert_in_epsilon(1000, worksheet.xi_a_cq203, 0.001); end
  def test_xi_a_cr203; assert_in_epsilon(1000, worksheet.xi_a_cr203, 0.001); end
  def test_xi_a_c204; assert_equal("(iii)", worksheet.xi_a_c204); end
  def test_xi_a_d204; assert_equal("Electric Steel", worksheet.xi_a_d204); end
  def test_xi_a_e204; assert_in_epsilon(1000, worksheet.xi_a_e204, 0.001); end
  def test_xi_a_o204; assert_equal("(iii)", worksheet.xi_a_o204); end
  def test_xi_a_p204; assert_equal("Electric Steel", worksheet.xi_a_p204); end
  def test_xi_a_q204; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q204, 0.001); end
  def test_xi_a_r204; assert_in_delta(0.0024165831003063287, worksheet.xi_a_r204, 0.001); end
  def test_xi_a_s204; assert_in_delta(0.0024165831003063287, worksheet.xi_a_s204, 0.001); end
  def test_xi_a_t204; assert_in_delta(0.0024165831003063287, worksheet.xi_a_t204, 0.001); end
  def test_xi_a_u204; assert_in_delta(0.0024165831003063287, worksheet.xi_a_u204, 0.001); end
  def test_xi_a_v204; assert_in_delta(0.0024165831003063287, worksheet.xi_a_v204, 0.001); end
  def test_xi_a_w204; assert_in_delta(0.0024165831003063287, worksheet.xi_a_w204, 0.001); end
  def test_xi_a_x204; assert_in_delta(0.0024165831003063287, worksheet.xi_a_x204, 0.001); end
  def test_xi_a_y204; assert_in_delta(0.0024165831003063287, worksheet.xi_a_y204, 0.001); end
  def test_xi_a_aa204; assert_equal("V.03", worksheet.xi_a_aa204); end
  def test_xi_a_ab204; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab204); end
  def test_xi_a_ac204; assert_in_delta(0.7978154055943194, worksheet.xi_a_ac204, 0.001); end
  def test_xi_a_ad204; assert_in_delta(0.7978154055943194, worksheet.xi_a_ad204, 0.001); end
  def test_xi_a_ae204; assert_in_delta(0.7978154055943194, worksheet.xi_a_ae204, 0.001); end
  def test_xi_a_af204; assert_in_delta(0.7978154055943194, worksheet.xi_a_af204, 0.001); end
  def test_xi_a_ag204; assert_in_delta(0.7978154055943194, worksheet.xi_a_ag204, 0.001); end
  def test_xi_a_ah204; assert_in_delta(0.7978154055943194, worksheet.xi_a_ah204, 0.001); end
  def test_xi_a_ai204; assert_in_delta(0.7978154055943194, worksheet.xi_a_ai204, 0.001); end
  def test_xi_a_aj204; assert_in_delta(0.7978154055943194, worksheet.xi_a_aj204, 0.001); end
  def test_xi_a_ak204; assert_in_delta(0.7978154055943194, worksheet.xi_a_ak204, 0.001); end
  def test_xi_a_am204; assert_equal("(iii)", worksheet.xi_a_am204); end
  def test_xi_a_an204; assert_equal("Electric Steel", worksheet.xi_a_an204); end
  def test_xi_a_ao204; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao204, 0.001); end
  def test_xi_a_ap204; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap204, 0.001); end
  def test_xi_a_aq204; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq204, 0.001); end
  def test_xi_a_ar204; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar204, 0.001); end
  def test_xi_a_as204; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as204, 0.001); end
  def test_xi_a_at204; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at204, 0.001); end
  def test_xi_a_au204; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au204, 0.001); end
  def test_xi_a_av204; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av204, 0.001); end
  def test_xi_a_aw204; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw204, 0.001); end
  def test_xi_a_ay204; assert_equal("(iii)", worksheet.xi_a_ay204); end
  def test_xi_a_az204; assert_equal("Electric Steel", worksheet.xi_a_az204); end
  def test_xi_a_ba204; assert_in_delta(0.8514990340910923, worksheet.xi_a_ba204, 0.001); end
  def test_xi_a_f204; assert_in_epsilon(1000, worksheet.xi_a_f204, 0.001); end
  def test_xi_a_bb204; assert_in_delta(0.8514990340910923, worksheet.xi_a_bb204, 0.001); end
  def test_xi_a_g204; assert_in_epsilon(1000, worksheet.xi_a_g204, 0.001); end
  def test_xi_a_bc204; assert_in_delta(0.8514990340910923, worksheet.xi_a_bc204, 0.001); end
  def test_xi_a_h204; assert_in_epsilon(1000, worksheet.xi_a_h204, 0.001); end
  def test_xi_a_bd204; assert_in_delta(0.8514990340910923, worksheet.xi_a_bd204, 0.001); end
  def test_xi_a_i204; assert_in_epsilon(1000, worksheet.xi_a_i204, 0.001); end
  def test_xi_a_be204; assert_in_delta(0.8514990340910923, worksheet.xi_a_be204, 0.001); end
  def test_xi_a_j204; assert_in_epsilon(1000, worksheet.xi_a_j204, 0.001); end
  def test_xi_a_bf204; assert_in_delta(0.8514990340910923, worksheet.xi_a_bf204, 0.001); end
  def test_xi_a_k204; assert_in_epsilon(1000, worksheet.xi_a_k204, 0.001); end
  def test_xi_a_bg204; assert_in_delta(0.8514990340910923, worksheet.xi_a_bg204, 0.001); end
  def test_xi_a_l204; assert_in_epsilon(1000, worksheet.xi_a_l204, 0.001); end
  def test_xi_a_bh204; assert_in_delta(0.8514990340910923, worksheet.xi_a_bh204, 0.001); end
  def test_xi_a_m204; assert_in_epsilon(1000, worksheet.xi_a_m204, 0.001); end
  def test_xi_a_bi204; assert_in_delta(0.8514990340910923, worksheet.xi_a_bi204, 0.001); end
  def test_xi_a_bk204; assert_equal("(iii)", worksheet.xi_a_bk204); end
  def test_xi_a_bl204; assert_equal("Electric Steel", worksheet.xi_a_bl204); end
  def test_xi_a_bm204; assert_in_epsilon(96.18336228592058, worksheet.xi_a_bm204, 0.001); end
  def test_xi_a_bn204; assert_in_epsilon(107.24231024061945, worksheet.xi_a_bn204, 0.001); end
  def test_xi_a_bo204; assert_in_epsilon(115.4053283364456, worksheet.xi_a_bo204, 0.001); end
  def test_xi_a_bp204; assert_in_epsilon(135.58992752087917, worksheet.xi_a_bp204, 0.001); end
  def test_xi_a_bq204; assert_in_epsilon(131.71380489936817, worksheet.xi_a_bq204, 0.001); end
  def test_xi_a_br204; assert_in_epsilon(125.50313354141394, worksheet.xi_a_br204, 0.001); end
  def test_xi_a_bs204; assert_in_epsilon(120.48082708560271, worksheet.xi_a_bs204, 0.001); end
  def test_xi_a_bt204; assert_in_epsilon(115.68204233803247, worksheet.xi_a_bt204, 0.001); end
  def test_xi_a_bu204; assert_in_epsilon(110.7287061754357, worksheet.xi_a_bu204, 0.001); end
  def test_xi_a_bw204; assert_equal("(iii)", worksheet.xi_a_bw204); end
  def test_xi_a_bx204; assert_equal("Electric Steel", worksheet.xi_a_bx204); end
  def test_xi_a_by204; assert_in_delta(0, (worksheet.xi_a_by204||0), 0.001); end
  def test_xi_a_bz204; assert_in_delta(0, (worksheet.xi_a_bz204||0), 0.001); end
  def test_xi_a_ca204; assert_in_delta(0, (worksheet.xi_a_ca204||0), 0.001); end
  def test_xi_a_cb204; assert_in_delta(0, (worksheet.xi_a_cb204||0), 0.001); end
  def test_xi_a_cc204; assert_in_delta(0, (worksheet.xi_a_cc204||0), 0.001); end
  def test_xi_a_cd204; assert_in_delta(0, (worksheet.xi_a_cd204||0), 0.001); end
  def test_xi_a_ce204; assert_in_delta(0, (worksheet.xi_a_ce204||0), 0.001); end
  def test_xi_a_cf204; assert_in_delta(0, (worksheet.xi_a_cf204||0), 0.001); end
  def test_xi_a_cg204; assert_in_delta(0, (worksheet.xi_a_cg204||0), 0.001); end
  def test_xi_a_ci204; assert_equal("Electric Steel", worksheet.xi_a_ci204); end
  def test_xi_a_cj204; assert_in_epsilon(1000, worksheet.xi_a_cj204, 0.001); end
  def test_xi_a_ck204; assert_in_epsilon(1000, worksheet.xi_a_ck204, 0.001); end
  def test_xi_a_cl204; assert_in_epsilon(1000, worksheet.xi_a_cl204, 0.001); end
  def test_xi_a_cm204; assert_in_epsilon(1000, worksheet.xi_a_cm204, 0.001); end
  def test_xi_a_cn204; assert_in_epsilon(1000, worksheet.xi_a_cn204, 0.001); end
  def test_xi_a_co204; assert_in_epsilon(1000, worksheet.xi_a_co204, 0.001); end
  def test_xi_a_cp204; assert_in_epsilon(1000, worksheet.xi_a_cp204, 0.001); end
  def test_xi_a_cq204; assert_in_epsilon(1000, worksheet.xi_a_cq204, 0.001); end
  def test_xi_a_cr204; assert_in_epsilon(1000, worksheet.xi_a_cr204, 0.001); end
  def test_xi_a_o205; assert_equal("Total", worksheet.xi_a_o205); end
  def test_xi_a_q205; assert_in_delta(0.008350784642437494, worksheet.xi_a_q205, 0.001); end
  def test_xi_a_r205; assert_in_delta(0.008350784642437494, worksheet.xi_a_r205, 0.001); end
  def test_xi_a_s205; assert_in_delta(0.008350784642437494, worksheet.xi_a_s205, 0.001); end
  def test_xi_a_t205; assert_in_delta(0.008350784642437494, worksheet.xi_a_t205, 0.001); end
  def test_xi_a_u205; assert_in_delta(0.008350784642437494, worksheet.xi_a_u205, 0.001); end
  def test_xi_a_v205; assert_in_delta(0.008350784642437494, worksheet.xi_a_v205, 0.001); end
  def test_xi_a_w205; assert_in_delta(0.008350784642437494, worksheet.xi_a_w205, 0.001); end
  def test_xi_a_x205; assert_in_delta(0.008350784642437494, worksheet.xi_a_x205, 0.001); end
  def test_xi_a_y205; assert_in_delta(0.008350784642437494, worksheet.xi_a_y205, 0.001); end
  def test_xi_a_aa205; assert_equal("V.05", worksheet.xi_a_aa205); end
  def test_xi_a_ab205; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab205); end
  def test_xi_a_ac205; assert_in_delta(0.21102564883744446, worksheet.xi_a_ac205, 0.001); end
  def test_xi_a_ad205; assert_in_delta(0.21102564883744446, worksheet.xi_a_ad205, 0.001); end
  def test_xi_a_ae205; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae205, 0.001); end
  def test_xi_a_af205; assert_in_delta(0.21102564883744446, worksheet.xi_a_af205, 0.001); end
  def test_xi_a_ag205; assert_in_delta(0.21102564883744446, worksheet.xi_a_ag205, 0.001); end
  def test_xi_a_ah205; assert_in_delta(0.21102564883744446, worksheet.xi_a_ah205, 0.001); end
  def test_xi_a_ai205; assert_in_delta(0.21102564883744446, worksheet.xi_a_ai205, 0.001); end
  def test_xi_a_aj205; assert_in_delta(0.21102564883744446, worksheet.xi_a_aj205, 0.001); end
  def test_xi_a_ak205; assert_in_delta(0.21102564883744446, worksheet.xi_a_ak205, 0.001); end
  def test_xi_a_am205; assert_equal("Total", worksheet.xi_a_am205); end
  def test_xi_a_ay205; assert_equal("Total", worksheet.xi_a_ay205); end
  def test_xi_a_ba205; assert_in_epsilon(2.258142961487601, worksheet.xi_a_ba205, 0.001); end
  def test_xi_a_bb205; assert_in_epsilon(2.258142961487601, worksheet.xi_a_bb205, 0.001); end
  def test_xi_a_bc205; assert_in_epsilon(2.258142961487601, worksheet.xi_a_bc205, 0.001); end
  def test_xi_a_bd205; assert_in_epsilon(2.258142961487601, worksheet.xi_a_bd205, 0.001); end
  def test_xi_a_be205; assert_in_epsilon(2.258142961487601, worksheet.xi_a_be205, 0.001); end
  def test_xi_a_bf205; assert_in_epsilon(2.258142961487601, worksheet.xi_a_bf205, 0.001); end
  def test_xi_a_bg205; assert_in_epsilon(2.258142961487601, worksheet.xi_a_bg205, 0.001); end
  def test_xi_a_bh205; assert_in_epsilon(2.258142961487601, worksheet.xi_a_bh205, 0.001); end
  def test_xi_a_bi205; assert_in_epsilon(2.258142961487601, worksheet.xi_a_bi205, 0.001); end
  def test_xi_a_bk205; assert_equal("Total", worksheet.xi_a_bk205); end
  def test_xi_a_bm205; assert_in_epsilon(332.37282199542483, worksheet.xi_a_bm205, 0.001); end
  def test_xi_a_bn205; assert_in_epsilon(370.58830596943267, worksheet.xi_a_bn205, 0.001); end
  def test_xi_a_bo205; assert_in_epsilon(398.79656669174074, worksheet.xi_a_bo205, 0.001); end
  def test_xi_a_bp205; assert_in_epsilon(468.54680241165363, worksheet.xi_a_bp205, 0.001); end
  def test_xi_a_bq205; assert_in_epsilon(455.1524087920774, worksheet.xi_a_bq205, 0.001); end
  def test_xi_a_br205; assert_in_epsilon(433.69070983843653, worksheet.xi_a_br205, 0.001); end
  def test_xi_a_bs205; assert_in_epsilon(416.3355443506506, worksheet.xi_a_bs205, 0.001); end
  def test_xi_a_bt205; assert_in_epsilon(399.7527841851537, worksheet.xi_a_bt205, 0.001); end
  def test_xi_a_bu205; assert_in_epsilon(382.63595358652873, worksheet.xi_a_bu205, 0.001); end
  def test_xi_a_bw205; assert_equal("Total", worksheet.xi_a_bw205); end
  def test_xi_a_by205; assert_in_delta(0, (worksheet.xi_a_by205||0), 0.001); end
  def test_xi_a_bz205; assert_in_delta(0, (worksheet.xi_a_bz205||0), 0.001); end
  def test_xi_a_ca205; assert_in_delta(0, (worksheet.xi_a_ca205||0), 0.001); end
  def test_xi_a_cb205; assert_in_delta(0, (worksheet.xi_a_cb205||0), 0.001); end
  def test_xi_a_cc205; assert_in_delta(0, (worksheet.xi_a_cc205||0), 0.001); end
  def test_xi_a_cd205; assert_in_delta(0, (worksheet.xi_a_cd205||0), 0.001); end
  def test_xi_a_ce205; assert_in_delta(0, (worksheet.xi_a_ce205||0), 0.001); end
  def test_xi_a_cf205; assert_in_delta(0, (worksheet.xi_a_cf205||0), 0.001); end
  def test_xi_a_cg205; assert_in_delta(0, (worksheet.xi_a_cg205||0), 0.001); end
  def test_xi_a_aa206; assert_equal("V.04", worksheet.xi_a_aa206); end
  def test_xi_a_ab206; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab206); end
  def test_xi_a_ac206; assert_in_delta(0.07696335047929354, worksheet.xi_a_ac206, 0.001); end
  def test_xi_a_ad206; assert_in_delta(0.07696335047929354, worksheet.xi_a_ad206, 0.001); end
  def test_xi_a_ae206; assert_in_delta(0.07696335047929354, worksheet.xi_a_ae206, 0.001); end
  def test_xi_a_af206; assert_in_delta(0.07696335047929354, worksheet.xi_a_af206, 0.001); end
  def test_xi_a_ag206; assert_in_delta(0.07696335047929354, worksheet.xi_a_ag206, 0.001); end
  def test_xi_a_ah206; assert_in_delta(0.07696335047929354, worksheet.xi_a_ah206, 0.001); end
  def test_xi_a_ai206; assert_in_delta(0.07696335047929354, worksheet.xi_a_ai206, 0.001); end
  def test_xi_a_aj206; assert_in_delta(0.07696335047929354, worksheet.xi_a_aj206, 0.001); end
  def test_xi_a_ak206; assert_in_delta(0.07696335047929354, worksheet.xi_a_ak206, 0.001); end
  def test_xi_a_aa207; assert_equal("V.06", worksheet.xi_a_aa207); end
  def test_xi_a_ab207; assert_equal("Blast furnace gas", worksheet.xi_a_ab207); end
  def test_xi_a_ac207; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ac207, 0.001); end
  def test_xi_a_ad207; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ad207, 0.001); end
  def test_xi_a_ae207; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ae207, 0.001); end
  def test_xi_a_af207; assert_in_delta(-0.1132646069606094, worksheet.xi_a_af207, 0.001); end
  def test_xi_a_ag207; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ag207, 0.001); end
  def test_xi_a_ah207; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ah207, 0.001); end
  def test_xi_a_ai207; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ai207, 0.001); end
  def test_xi_a_aj207; assert_in_delta(-0.1132646069606094, worksheet.xi_a_aj207, 0.001); end
  def test_xi_a_ak207; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ak207, 0.001); end
  def test_xi_a_am207; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am207); end
  def test_xi_a_aa208; assert_equal("V.07", worksheet.xi_a_aa208); end
  def test_xi_a_ab208; assert_equal("Heat transport", worksheet.xi_a_ab208); end
  def test_xi_a_ac208; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ac208, 0.001); end
  def test_xi_a_ad208; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ad208, 0.001); end
  def test_xi_a_ae208; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae208, 0.001); end
  def test_xi_a_af208; assert_in_delta(-0.05458762523924703, worksheet.xi_a_af208, 0.001); end
  def test_xi_a_ag208; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ag208, 0.001); end
  def test_xi_a_ah208; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ah208, 0.001); end
  def test_xi_a_ai208; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ai208, 0.001); end
  def test_xi_a_aj208; assert_in_delta(-0.05458762523924703, worksheet.xi_a_aj208, 0.001); end
  def test_xi_a_ak208; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ak208, 0.001); end
  def test_xi_a_am208; assert_equal("Industry", worksheet.xi_a_am208); end
  def test_xi_a_an208; assert_equal("Description", worksheet.xi_a_an208); end
  def test_xi_a_ao208; assert_in_epsilon(2010, worksheet.xi_a_ao208, 0.001); end
  def test_xi_a_ap208; assert_in_epsilon(2015, worksheet.xi_a_ap208, 0.001); end
  def test_xi_a_aq208; assert_in_epsilon(2020, worksheet.xi_a_aq208, 0.001); end
  def test_xi_a_ar208; assert_in_epsilon(2025, worksheet.xi_a_ar208, 0.001); end
  def test_xi_a_as208; assert_in_epsilon(2030, worksheet.xi_a_as208, 0.001); end
  def test_xi_a_at208; assert_in_epsilon(2035, worksheet.xi_a_at208, 0.001); end
  def test_xi_a_au208; assert_in_epsilon(2040, worksheet.xi_a_au208, 0.001); end
  def test_xi_a_av208; assert_in_epsilon(2045, worksheet.xi_a_av208, 0.001); end
  def test_xi_a_aw208; assert_in_epsilon(2050, worksheet.xi_a_aw208, 0.001); end
  def test_xi_a_aa209; assert_equal("Intensity", worksheet.xi_a_aa209); end
  def test_xi_a_ab209; assert_equal("Intensity", worksheet.xi_a_ab209); end
  def test_xi_a_ac209; assert_in_delta(0.21950983912607056, worksheet.xi_a_ac209, 0.001); end
  def test_xi_a_ad209; assert_in_delta(0.21950983912607056, worksheet.xi_a_ad209, 0.001); end
  def test_xi_a_ae209; assert_in_delta(0.21950983912607056, worksheet.xi_a_ae209, 0.001); end
  def test_xi_a_af209; assert_in_delta(0.21950983912607056, worksheet.xi_a_af209, 0.001); end
  def test_xi_a_ag209; assert_in_delta(0.21950983912607056, worksheet.xi_a_ag209, 0.001); end
  def test_xi_a_ah209; assert_in_delta(0.21950983912607056, worksheet.xi_a_ah209, 0.001); end
  def test_xi_a_ai209; assert_in_delta(0.21950983912607056, worksheet.xi_a_ai209, 0.001); end
  def test_xi_a_aj209; assert_in_delta(0.21950983912607056, worksheet.xi_a_aj209, 0.001); end
  def test_xi_a_ak209; assert_in_delta(0.21950983912607056, worksheet.xi_a_ak209, 0.001); end
  def test_xi_a_al209; assert_equal("4b", worksheet.xi_a_al209); end
  def test_xi_a_am209; assert_equal("(ii)", worksheet.xi_a_am209); end
  def test_xi_a_an209; assert_equal("Oxygen Steel", worksheet.xi_a_an209); end
  def test_xi_a_ao209; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao209, 0.001); end
  def test_xi_a_ap209; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap209, 0.001); end
  def test_xi_a_aq209; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq209, 0.001); end
  def test_xi_a_ar209; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar209, 0.001); end
  def test_xi_a_as209; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as209, 0.001); end
  def test_xi_a_at209; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at209, 0.001); end
  def test_xi_a_au209; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au209, 0.001); end
  def test_xi_a_av209; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av209, 0.001); end
  def test_xi_a_aw209; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw209, 0.001); end
  def test_xi_a_aa210; assert_equal("Cost", worksheet.xi_a_aa210); end
  def test_xi_a_ab210; assert_equal("Cost", worksheet.xi_a_ab210); end
  def test_xi_a_ac210; assert_in_epsilon(17.667755554147792, worksheet.xi_a_ac210, 0.001); end
  def test_xi_a_ad210; assert_in_epsilon(17.955346389372075, worksheet.xi_a_ad210, 0.001); end
  def test_xi_a_ae210; assert_in_epsilon(17.42991070429268, worksheet.xi_a_ae210, 0.001); end
  def test_xi_a_af210; assert_in_epsilon(17.722435711286632, worksheet.xi_a_af210, 0.001); end
  def test_xi_a_ag210; assert_in_epsilon(15.580054430104807, worksheet.xi_a_ag210, 0.001); end
  def test_xi_a_ah210; assert_in_epsilon(14.397923182888775, worksheet.xi_a_ah210, 0.001); end
  def test_xi_a_ai210; assert_in_epsilon(13.306240965237233, worksheet.xi_a_ai210, 0.001); end
  def test_xi_a_aj210; assert_in_epsilon(12.21802589642779, worksheet.xi_a_aj210, 0.001); end
  def test_xi_a_ak210; assert_in_epsilon(11.099194188006347, worksheet.xi_a_ak210, 0.001); end
  def test_xi_a_am210; assert_equal("(iii)", worksheet.xi_a_am210); end
  def test_xi_a_an210; assert_equal("Electric Steel", worksheet.xi_a_an210); end
  def test_xi_a_ao210; assert_in_delta(0, (worksheet.xi_a_ao210||0), 0.001); end
  def test_xi_a_ap210; assert_in_delta(0, (worksheet.xi_a_ap210||0), 0.001); end
  def test_xi_a_aq210; assert_in_delta(0, (worksheet.xi_a_aq210||0), 0.001); end
  def test_xi_a_ar210; assert_in_delta(0, (worksheet.xi_a_ar210||0), 0.001); end
  def test_xi_a_as210; assert_in_delta(0, (worksheet.xi_a_as210||0), 0.001); end
  def test_xi_a_at210; assert_in_delta(0, (worksheet.xi_a_at210||0), 0.001); end
  def test_xi_a_au210; assert_in_delta(0, (worksheet.xi_a_au210||0), 0.001); end
  def test_xi_a_av210; assert_in_delta(0, (worksheet.xi_a_av210||0), 0.001); end
  def test_xi_a_aw210; assert_in_delta(0, (worksheet.xi_a_aw210||0), 0.001); end
  def test_xi_a_am211; assert_equal("Total", worksheet.xi_a_am211); end
  def test_xi_a_z212; assert_equal("Electrosteel", worksheet.xi_a_z212); end
  def test_xi_a_aa212; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa212); end
  def test_xi_a_aa213; assert_equal("Vector", worksheet.xi_a_aa213); end
  def test_xi_a_ab213; assert_equal("Description", worksheet.xi_a_ab213); end
  def test_xi_a_ac213; assert_in_epsilon(2010, worksheet.xi_a_ac213, 0.001); end
  def test_xi_a_ad213; assert_in_epsilon(2015, worksheet.xi_a_ad213, 0.001); end
  def test_xi_a_ae213; assert_in_epsilon(2020, worksheet.xi_a_ae213, 0.001); end
  def test_xi_a_af213; assert_in_epsilon(2025, worksheet.xi_a_af213, 0.001); end
  def test_xi_a_ag213; assert_in_epsilon(2030, worksheet.xi_a_ag213, 0.001); end
  def test_xi_a_ah213; assert_in_epsilon(2035, worksheet.xi_a_ah213, 0.001); end
  def test_xi_a_ai213; assert_in_epsilon(2040, worksheet.xi_a_ai213, 0.001); end
  def test_xi_a_aj213; assert_in_epsilon(2045, worksheet.xi_a_aj213, 0.001); end
  def test_xi_a_ak213; assert_in_epsilon(2050, worksheet.xi_a_ak213, 0.001); end
  def test_xi_a_aa214; assert_equal("V.01", worksheet.xi_a_aa214); end
  def test_xi_a_ab214; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab214); end
  def test_xi_a_ac214; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac214, 0.001); end
  def test_xi_a_ad214; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad214, 0.001); end
  def test_xi_a_ae214; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae214, 0.001); end
  def test_xi_a_af214; assert_in_delta(0.37661125507716986, worksheet.xi_a_af214, 0.001); end
  def test_xi_a_ag214; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag214, 0.001); end
  def test_xi_a_ah214; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah214, 0.001); end
  def test_xi_a_ai214; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai214, 0.001); end
  def test_xi_a_aj214; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj214, 0.001); end
  def test_xi_a_ak214; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak214, 0.001); end
  def test_xi_a_aa215; assert_equal("V.03", worksheet.xi_a_aa215); end
  def test_xi_a_ab215; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab215); end
  def test_xi_a_ac215; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac215, 0.001); end
  def test_xi_a_ad215; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad215, 0.001); end
  def test_xi_a_ae215; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae215, 0.001); end
  def test_xi_a_af215; assert_in_delta(0.04200640884510868, worksheet.xi_a_af215, 0.001); end
  def test_xi_a_ag215; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag215, 0.001); end
  def test_xi_a_ah215; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah215, 0.001); end
  def test_xi_a_ai215; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai215, 0.001); end
  def test_xi_a_aj215; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj215, 0.001); end
  def test_xi_a_ak215; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak215, 0.001); end
  def test_xi_a_aa216; assert_equal("V.05", worksheet.xi_a_aa216); end
  def test_xi_a_ab216; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab216); end
  def test_xi_a_ac216; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac216, 0.001); end
  def test_xi_a_ad216; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad216, 0.001); end
  def test_xi_a_ae216; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae216, 0.001); end
  def test_xi_a_af216; assert_in_delta(0.5722074496017227, worksheet.xi_a_af216, 0.001); end
  def test_xi_a_ag216; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag216, 0.001); end
  def test_xi_a_ah216; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah216, 0.001); end
  def test_xi_a_ai216; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai216, 0.001); end
  def test_xi_a_aj216; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj216, 0.001); end
  def test_xi_a_ak216; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak216, 0.001); end
  def test_xi_a_aa217; assert_equal("V.04", worksheet.xi_a_aa217); end
  def test_xi_a_ab217; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab217); end
  def test_xi_a_ac217; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac217, 0.001); end
  def test_xi_a_ad217; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad217, 0.001); end
  def test_xi_a_ae217; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae217, 0.001); end
  def test_xi_a_af217; assert_in_delta(0.009174886475998728, worksheet.xi_a_af217, 0.001); end
  def test_xi_a_ag217; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag217, 0.001); end
  def test_xi_a_ah217; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah217, 0.001); end
  def test_xi_a_ai217; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai217, 0.001); end
  def test_xi_a_aj217; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj217, 0.001); end
  def test_xi_a_ak217; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak217, 0.001); end
  def test_xi_a_aa218; assert_equal("v.06", worksheet.xi_a_aa218); end
  def test_xi_a_ab218; assert_equal("Blast furnace gas", worksheet.xi_a_ab218); end
  def test_xi_a_ac218; assert_in_delta(0, (worksheet.xi_a_ac218||0), 0.001); end
  def test_xi_a_ad218; assert_in_delta(0, (worksheet.xi_a_ad218||0), 0.001); end
  def test_xi_a_ae218; assert_in_delta(0, (worksheet.xi_a_ae218||0), 0.001); end
  def test_xi_a_af218; assert_in_delta(0, (worksheet.xi_a_af218||0), 0.001); end
  def test_xi_a_ag218; assert_in_delta(0, (worksheet.xi_a_ag218||0), 0.001); end
  def test_xi_a_ah218; assert_in_delta(0, (worksheet.xi_a_ah218||0), 0.001); end
  def test_xi_a_ai218; assert_in_delta(0, (worksheet.xi_a_ai218||0), 0.001); end
  def test_xi_a_aj218; assert_in_delta(0, (worksheet.xi_a_aj218||0), 0.001); end
  def test_xi_a_ak218; assert_in_delta(0, (worksheet.xi_a_ak218||0), 0.001); end
  def test_xi_a_aa219; assert_equal("V.07", worksheet.xi_a_aa219); end
  def test_xi_a_ab219; assert_equal("Heat transport", worksheet.xi_a_ab219); end
  def test_xi_a_ac219; assert_in_delta(0, (worksheet.xi_a_ac219||0), 0.001); end
  def test_xi_a_ad219; assert_in_delta(0, (worksheet.xi_a_ad219||0), 0.001); end
  def test_xi_a_ae219; assert_in_delta(0, (worksheet.xi_a_ae219||0), 0.001); end
  def test_xi_a_af219; assert_in_delta(0, (worksheet.xi_a_af219||0), 0.001); end
  def test_xi_a_ag219; assert_in_delta(0, (worksheet.xi_a_ag219||0), 0.001); end
  def test_xi_a_ah219; assert_in_delta(0, (worksheet.xi_a_ah219||0), 0.001); end
  def test_xi_a_ai219; assert_in_delta(0, (worksheet.xi_a_ai219||0), 0.001); end
  def test_xi_a_aj219; assert_in_delta(0, (worksheet.xi_a_aj219||0), 0.001); end
  def test_xi_a_ak219; assert_in_delta(0, (worksheet.xi_a_ak219||0), 0.001); end
  def test_xi_a_aa220; assert_equal("Intensity", worksheet.xi_a_aa220); end
  def test_xi_a_ab220; assert_equal("Intensity", worksheet.xi_a_ab220); end
  def test_xi_a_ac220; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac220, 0.001); end
  def test_xi_a_ad220; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad220, 0.001); end
  def test_xi_a_ae220; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae220, 0.001); end
  def test_xi_a_af220; assert_in_delta(0.1305543295866784, worksheet.xi_a_af220, 0.001); end
  def test_xi_a_ag220; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag220, 0.001); end
  def test_xi_a_ah220; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah220, 0.001); end
  def test_xi_a_ai220; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai220, 0.001); end
  def test_xi_a_aj220; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj220, 0.001); end
  def test_xi_a_ak220; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak220, 0.001); end
  def test_xi_a_aa221; assert_equal("Cost", worksheet.xi_a_aa221); end
  def test_xi_a_ab221; assert_equal("Cost", worksheet.xi_a_ab221); end
  def test_xi_a_b223; assert_equal("Methodology", worksheet.xi_a_b223); end
  def test_xi_a_b224; assert_equal("Update the 5 matrixes to take into account the trajectory assumptions", worksheet.xi_a_b224); end
  def test_xi_a_b226; assert_in_delta(1, worksheet.xi_a_b226, 0.001); end
  def test_xi_a_c226; assert_equal("Compute output growth", worksheet.xi_a_c226); end
  def test_xi_a_b227; assert_in_epsilon(2, worksheet.xi_a_b227, 0.001); end
  def test_xi_a_c227; assert_equal("Compute product mix modifications", worksheet.xi_a_c227); end
  def test_xi_a_b228; assert_in_epsilon(3, worksheet.xi_a_b228, 0.001); end
  def test_xi_a_c228; assert_equal("Compute energy efficiency", worksheet.xi_a_c228); end
  def test_xi_a_b229; assert_in_epsilon(4, worksheet.xi_a_b229, 0.001); end
  def test_xi_a_c229; assert_equal("Computer alternative fuels potential", worksheet.xi_a_c229); end
  def test_xi_a_b230; assert_in_epsilon(5, worksheet.xi_a_b230, 0.001); end
  def test_xi_a_c230; assert_equal("Compute process improvements", worksheet.xi_a_c230); end
  def test_xi_a_b231; assert_in_epsilon(6, worksheet.xi_a_b231, 0.001); end
  def test_xi_a_c231; assert_equal("Compute CCS impact", worksheet.xi_a_c231); end
  def test_xi_a_b233; assert_in_delta(1, worksheet.xi_a_b233, 0.001); end
  def test_xi_a_c233; assert_equal("Output Growth (kt)", worksheet.xi_a_c233); end
  def test_xi_a_b234; assert_in_delta(1, worksheet.xi_a_b234, 0.001); end
  def test_xi_a_c234; assert_equal("Output Growth (kt)", worksheet.xi_a_c234); end
  def test_xi_a_n234; assert_in_epsilon(2, worksheet.xi_a_n234, 0.001); end
  def test_xi_a_o234; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_a_o234); end
  def test_xi_a_z234; assert_in_epsilon(3, worksheet.xi_a_z234, 0.001); end
  def test_xi_a_aa234; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa234); end
  def test_xi_a_al234; assert_in_epsilon(4, worksheet.xi_a_al234, 0.001); end
  def test_xi_a_am234; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am234); end
  def test_xi_a_ay234; assert_in_epsilon(5, worksheet.xi_a_ay234, 0.001); end
  def test_xi_a_az234; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az234); end
  def test_xi_a_bk234; assert_in_epsilon(6, worksheet.xi_a_bk234, 0.001); end
  def test_xi_a_bl234; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl234); end
  def test_xi_a_bw234; assert_in_epsilon(7, worksheet.xi_a_bw234, 0.001); end
  def test_xi_a_bx234; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx234); end
  def test_xi_a_ci234; assert_equal("Capacity", worksheet.xi_a_ci234); end
  def test_xi_a_c235; assert_equal("Product type", worksheet.xi_a_c235); end
  def test_xi_a_d235; assert_equal("Description", worksheet.xi_a_d235); end
  def test_xi_a_e235; assert_in_epsilon(2010, worksheet.xi_a_e235, 0.001); end
  def test_xi_a_f235; assert_in_epsilon(2015, worksheet.xi_a_f235, 0.001); end
  def test_xi_a_g235; assert_in_epsilon(2020, worksheet.xi_a_g235, 0.001); end
  def test_xi_a_h235; assert_in_epsilon(2025, worksheet.xi_a_h235, 0.001); end
  def test_xi_a_i235; assert_in_epsilon(2030, worksheet.xi_a_i235, 0.001); end
  def test_xi_a_j235; assert_in_epsilon(2035, worksheet.xi_a_j235, 0.001); end
  def test_xi_a_k235; assert_in_epsilon(2040, worksheet.xi_a_k235, 0.001); end
  def test_xi_a_l235; assert_in_epsilon(2045, worksheet.xi_a_l235, 0.001); end
  def test_xi_a_m235; assert_in_epsilon(2050, worksheet.xi_a_m235, 0.001); end
  def test_xi_a_o235; assert_equal("Industry", worksheet.xi_a_o235); end
  def test_xi_a_p235; assert_equal("Description", worksheet.xi_a_p235); end
  def test_xi_a_q235; assert_in_epsilon(2010, worksheet.xi_a_q235, 0.001); end
  def test_xi_a_r235; assert_in_epsilon(2015, worksheet.xi_a_r235, 0.001); end
  def test_xi_a_s235; assert_in_epsilon(2020, worksheet.xi_a_s235, 0.001); end
  def test_xi_a_t235; assert_in_epsilon(2025, worksheet.xi_a_t235, 0.001); end
  def test_xi_a_u235; assert_in_epsilon(2030, worksheet.xi_a_u235, 0.001); end
  def test_xi_a_v235; assert_in_epsilon(2035, worksheet.xi_a_v235, 0.001); end
  def test_xi_a_w235; assert_in_epsilon(2040, worksheet.xi_a_w235, 0.001); end
  def test_xi_a_x235; assert_in_epsilon(2045, worksheet.xi_a_x235, 0.001); end
  def test_xi_a_y235; assert_in_epsilon(2050, worksheet.xi_a_y235, 0.001); end
  def test_xi_a_z235; assert_equal("Oxygensteel", worksheet.xi_a_z235); end
  def test_xi_a_aa235; assert_equal("Vector", worksheet.xi_a_aa235); end
  def test_xi_a_ab235; assert_equal("Description", worksheet.xi_a_ab235); end
  def test_xi_a_ac235; assert_in_epsilon(2010, worksheet.xi_a_ac235, 0.001); end
  def test_xi_a_ad235; assert_in_epsilon(2015, worksheet.xi_a_ad235, 0.001); end
  def test_xi_a_ae235; assert_in_epsilon(2020, worksheet.xi_a_ae235, 0.001); end
  def test_xi_a_af235; assert_in_epsilon(2025, worksheet.xi_a_af235, 0.001); end
  def test_xi_a_ag235; assert_in_epsilon(2030, worksheet.xi_a_ag235, 0.001); end
  def test_xi_a_ah235; assert_in_epsilon(2035, worksheet.xi_a_ah235, 0.001); end
  def test_xi_a_ai235; assert_in_epsilon(2040, worksheet.xi_a_ai235, 0.001); end
  def test_xi_a_aj235; assert_in_epsilon(2045, worksheet.xi_a_aj235, 0.001); end
  def test_xi_a_ak235; assert_in_epsilon(2050, worksheet.xi_a_ak235, 0.001); end
  def test_xi_a_am235; assert_equal("Industry", worksheet.xi_a_am235); end
  def test_xi_a_an235; assert_equal("Description", worksheet.xi_a_an235); end
  def test_xi_a_ao235; assert_in_epsilon(2010, worksheet.xi_a_ao235, 0.001); end
  def test_xi_a_ap235; assert_in_epsilon(2015, worksheet.xi_a_ap235, 0.001); end
  def test_xi_a_aq235; assert_in_epsilon(2020, worksheet.xi_a_aq235, 0.001); end
  def test_xi_a_ar235; assert_in_epsilon(2025, worksheet.xi_a_ar235, 0.001); end
  def test_xi_a_as235; assert_in_epsilon(2030, worksheet.xi_a_as235, 0.001); end
  def test_xi_a_at235; assert_in_epsilon(2035, worksheet.xi_a_at235, 0.001); end
  def test_xi_a_au235; assert_in_epsilon(2040, worksheet.xi_a_au235, 0.001); end
  def test_xi_a_av235; assert_in_epsilon(2045, worksheet.xi_a_av235, 0.001); end
  def test_xi_a_aw235; assert_in_epsilon(2050, worksheet.xi_a_aw235, 0.001); end
  def test_xi_a_ay235; assert_equal("Industry", worksheet.xi_a_ay235); end
  def test_xi_a_az235; assert_equal("Description", worksheet.xi_a_az235); end
  def test_xi_a_ba235; assert_in_epsilon(2010, worksheet.xi_a_ba235, 0.001); end
  def test_xi_a_bb235; assert_in_epsilon(2015, worksheet.xi_a_bb235, 0.001); end
  def test_xi_a_bc235; assert_in_epsilon(2020, worksheet.xi_a_bc235, 0.001); end
  def test_xi_a_bd235; assert_in_epsilon(2025, worksheet.xi_a_bd235, 0.001); end
  def test_xi_a_be235; assert_in_epsilon(2030, worksheet.xi_a_be235, 0.001); end
  def test_xi_a_bf235; assert_in_epsilon(2035, worksheet.xi_a_bf235, 0.001); end
  def test_xi_a_bg235; assert_in_epsilon(2040, worksheet.xi_a_bg235, 0.001); end
  def test_xi_a_bh235; assert_in_epsilon(2045, worksheet.xi_a_bh235, 0.001); end
  def test_xi_a_bi235; assert_in_epsilon(2050, worksheet.xi_a_bi235, 0.001); end
  def test_xi_a_bk235; assert_equal("Industry", worksheet.xi_a_bk235); end
  def test_xi_a_bl235; assert_equal("Description", worksheet.xi_a_bl235); end
  def test_xi_a_bm235; assert_in_epsilon(2010, worksheet.xi_a_bm235, 0.001); end
  def test_xi_a_bn235; assert_in_epsilon(2015, worksheet.xi_a_bn235, 0.001); end
  def test_xi_a_bo235; assert_in_epsilon(2020, worksheet.xi_a_bo235, 0.001); end
  def test_xi_a_bp235; assert_in_epsilon(2025, worksheet.xi_a_bp235, 0.001); end
  def test_xi_a_bq235; assert_in_epsilon(2030, worksheet.xi_a_bq235, 0.001); end
  def test_xi_a_br235; assert_in_epsilon(2035, worksheet.xi_a_br235, 0.001); end
  def test_xi_a_bs235; assert_in_epsilon(2040, worksheet.xi_a_bs235, 0.001); end
  def test_xi_a_bt235; assert_in_epsilon(2045, worksheet.xi_a_bt235, 0.001); end
  def test_xi_a_bu235; assert_in_epsilon(2050, worksheet.xi_a_bu235, 0.001); end
  def test_xi_a_bw235; assert_equal("Industry", worksheet.xi_a_bw235); end
  def test_xi_a_bx235; assert_equal("Description", worksheet.xi_a_bx235); end
  def test_xi_a_by235; assert_in_epsilon(2010, worksheet.xi_a_by235, 0.001); end
  def test_xi_a_bz235; assert_in_epsilon(2015, worksheet.xi_a_bz235, 0.001); end
  def test_xi_a_ca235; assert_in_epsilon(2020, worksheet.xi_a_ca235, 0.001); end
  def test_xi_a_cb235; assert_in_epsilon(2025, worksheet.xi_a_cb235, 0.001); end
  def test_xi_a_cc235; assert_in_epsilon(2030, worksheet.xi_a_cc235, 0.001); end
  def test_xi_a_cd235; assert_in_epsilon(2035, worksheet.xi_a_cd235, 0.001); end
  def test_xi_a_ce235; assert_in_epsilon(2040, worksheet.xi_a_ce235, 0.001); end
  def test_xi_a_cf235; assert_in_epsilon(2045, worksheet.xi_a_cf235, 0.001); end
  def test_xi_a_cg235; assert_in_epsilon(2050, worksheet.xi_a_cg235, 0.001); end
  def test_xi_a_ci235; assert_equal("Description", worksheet.xi_a_ci235); end
  def test_xi_a_cj235; assert_in_epsilon(2010, worksheet.xi_a_cj235, 0.001); end
  def test_xi_a_ck235; assert_in_epsilon(2015, worksheet.xi_a_ck235, 0.001); end
  def test_xi_a_cl235; assert_in_epsilon(2020, worksheet.xi_a_cl235, 0.001); end
  def test_xi_a_cm235; assert_in_epsilon(2025, worksheet.xi_a_cm235, 0.001); end
  def test_xi_a_cn235; assert_in_epsilon(2030, worksheet.xi_a_cn235, 0.001); end
  def test_xi_a_co235; assert_in_epsilon(2035, worksheet.xi_a_co235, 0.001); end
  def test_xi_a_cp235; assert_in_epsilon(2040, worksheet.xi_a_cp235, 0.001); end
  def test_xi_a_cq235; assert_in_epsilon(2045, worksheet.xi_a_cq235, 0.001); end
  def test_xi_a_cr235; assert_in_epsilon(2050, worksheet.xi_a_cr235, 0.001); end
  def test_xi_a_c236; assert_equal("(ii)", worksheet.xi_a_c236); end
  def test_xi_a_d236; assert_equal("Oxygen Steel", worksheet.xi_a_d236); end
  def test_xi_a_e236; assert_in_epsilon(5264, worksheet.xi_a_e236, 0.001); end
  def test_xi_a_o236; assert_equal("(ii)", worksheet.xi_a_o236); end
  def test_xi_a_p236; assert_equal("Oxygen Steel", worksheet.xi_a_p236); end
  def test_xi_a_q236; assert_in_delta(0.005934201542131165, worksheet.xi_a_q236, 0.001); end
  def test_xi_a_r236; assert_in_delta(0.005934201542131165, worksheet.xi_a_r236, 0.001); end
  def test_xi_a_s236; assert_in_delta(0.005934201542131165, worksheet.xi_a_s236, 0.001); end
  def test_xi_a_t236; assert_in_delta(0.005934201542131165, worksheet.xi_a_t236, 0.001); end
  def test_xi_a_u236; assert_in_delta(0.005934201542131165, worksheet.xi_a_u236, 0.001); end
  def test_xi_a_v236; assert_in_delta(0.005934201542131165, worksheet.xi_a_v236, 0.001); end
  def test_xi_a_w236; assert_in_delta(0.005934201542131165, worksheet.xi_a_w236, 0.001); end
  def test_xi_a_x236; assert_in_delta(0.005934201542131165, worksheet.xi_a_x236, 0.001); end
  def test_xi_a_y236; assert_in_delta(0.005934201542131165, worksheet.xi_a_y236, 0.001); end
  def test_xi_a_aa236; assert_equal("V.01", worksheet.xi_a_aa236); end
  def test_xi_a_ab236; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab236); end
  def test_xi_a_ac236; assert_in_delta(0.08204782728879889, worksheet.xi_a_ac236, 0.001); end
  def test_xi_a_ad236; assert_in_delta(0.08204782728879889, worksheet.xi_a_ad236, 0.001); end
  def test_xi_a_ae236; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae236, 0.001); end
  def test_xi_a_af236; assert_in_delta(0.08204782728879889, worksheet.xi_a_af236, 0.001); end
  def test_xi_a_ag236; assert_in_delta(0.08204782728879889, worksheet.xi_a_ag236, 0.001); end
  def test_xi_a_ah236; assert_in_delta(0.08204782728879889, worksheet.xi_a_ah236, 0.001); end
  def test_xi_a_ai236; assert_in_delta(0.08204782728879889, worksheet.xi_a_ai236, 0.001); end
  def test_xi_a_aj236; assert_in_delta(0.08204782728879889, worksheet.xi_a_aj236, 0.001); end
  def test_xi_a_ak236; assert_in_delta(0.08204782728879889, worksheet.xi_a_ak236, 0.001); end
  def test_xi_a_am236; assert_equal("(ii)", worksheet.xi_a_am236); end
  def test_xi_a_an236; assert_equal("Oxygen Steel", worksheet.xi_a_an236); end
  def test_xi_a_ao236; assert_in_delta(0, (worksheet.xi_a_ao236||0), 0.001); end
  def test_xi_a_ap236; assert_in_delta(0, (worksheet.xi_a_ap236||0), 0.001); end
  def test_xi_a_aq236; assert_in_delta(0, (worksheet.xi_a_aq236||0), 0.001); end
  def test_xi_a_ar236; assert_in_delta(0, (worksheet.xi_a_ar236||0), 0.001); end
  def test_xi_a_as236; assert_in_delta(0, (worksheet.xi_a_as236||0), 0.001); end
  def test_xi_a_at236; assert_in_delta(0, (worksheet.xi_a_at236||0), 0.001); end
  def test_xi_a_au236; assert_in_delta(0, (worksheet.xi_a_au236||0), 0.001); end
  def test_xi_a_av236; assert_in_delta(0, (worksheet.xi_a_av236||0), 0.001); end
  def test_xi_a_aw236; assert_in_delta(0, (worksheet.xi_a_aw236||0), 0.001); end
  def test_xi_a_ay236; assert_equal("(ii)", worksheet.xi_a_ay236); end
  def test_xi_a_az236; assert_equal("Oxygen Steel", worksheet.xi_a_az236); end
  def test_xi_a_ba236; assert_in_epsilon(7.404573633815222, worksheet.xi_a_ba236, 0.001); end
  def test_xi_a_bl236; assert_equal("Oxygen Steel", worksheet.xi_a_bl236); end
  def test_xi_a_bx236; assert_equal("Oxygen Steel", worksheet.xi_a_bx236); end
  def test_xi_a_by236; assert_in_delta(0, (worksheet.xi_a_by236||0), 0.001); end
  def test_xi_a_bz236; assert_in_delta(0, (worksheet.xi_a_bz236||0), 0.001); end
  def test_xi_a_ca236; assert_in_delta(0, (worksheet.xi_a_ca236||0), 0.001); end
  def test_xi_a_cb236; assert_in_delta(0, (worksheet.xi_a_cb236||0), 0.001); end
  def test_xi_a_cc236; assert_in_delta(0, (worksheet.xi_a_cc236||0), 0.001); end
  def test_xi_a_cd236; assert_in_delta(0, (worksheet.xi_a_cd236||0), 0.001); end
  def test_xi_a_ce236; assert_in_delta(0, (worksheet.xi_a_ce236||0), 0.001); end
  def test_xi_a_cf236; assert_in_delta(0, (worksheet.xi_a_cf236||0), 0.001); end
  def test_xi_a_cg236; assert_in_delta(0, (worksheet.xi_a_cg236||0), 0.001); end
  def test_xi_a_ci236; assert_equal("Oxygen Steel", worksheet.xi_a_ci236); end
  def test_xi_a_cj236; assert_in_epsilon(6000, worksheet.xi_a_cj236, 0.001); end
  def test_xi_a_ck236; assert_in_epsilon(6000, worksheet.xi_a_ck236, 0.001); end
  def test_xi_a_cl236; assert_in_epsilon(6000, worksheet.xi_a_cl236, 0.001); end
  def test_xi_a_cm236; assert_in_epsilon(6000, worksheet.xi_a_cm236, 0.001); end
  def test_xi_a_cn236; assert_in_epsilon(6000, worksheet.xi_a_cn236, 0.001); end
  def test_xi_a_co236; assert_in_epsilon(6000, worksheet.xi_a_co236, 0.001); end
  def test_xi_a_cp236; assert_in_epsilon(6000, worksheet.xi_a_cp236, 0.001); end
  def test_xi_a_cq236; assert_in_epsilon(6000, worksheet.xi_a_cq236, 0.001); end
  def test_xi_a_cr236; assert_in_epsilon(6000, worksheet.xi_a_cr236, 0.001); end
  def test_xi_a_c237; assert_equal("(iii)", worksheet.xi_a_c237); end
  def test_xi_a_d237; assert_equal("Electric Steel", worksheet.xi_a_d237); end
  def test_xi_a_e237; assert_in_epsilon(2869, worksheet.xi_a_e237, 0.001); end
  def test_xi_a_o237; assert_equal("(iii)", worksheet.xi_a_o237); end
  def test_xi_a_p237; assert_equal("Electric Steel", worksheet.xi_a_p237); end
  def test_xi_a_q237; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q237, 0.001); end
  def test_xi_a_r237; assert_in_delta(0.0024165831003063287, worksheet.xi_a_r237, 0.001); end
  def test_xi_a_s237; assert_in_delta(0.0024165831003063287, worksheet.xi_a_s237, 0.001); end
  def test_xi_a_t237; assert_in_delta(0.0024165831003063287, worksheet.xi_a_t237, 0.001); end
  def test_xi_a_u237; assert_in_delta(0.0024165831003063287, worksheet.xi_a_u237, 0.001); end
  def test_xi_a_v237; assert_in_delta(0.0024165831003063287, worksheet.xi_a_v237, 0.001); end
  def test_xi_a_w237; assert_in_delta(0.0024165831003063287, worksheet.xi_a_w237, 0.001); end
  def test_xi_a_x237; assert_in_delta(0.0024165831003063287, worksheet.xi_a_x237, 0.001); end
  def test_xi_a_y237; assert_in_delta(0.0024165831003063287, worksheet.xi_a_y237, 0.001); end
  def test_xi_a_aa237; assert_equal("V.03", worksheet.xi_a_aa237); end
  def test_xi_a_ab237; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab237); end
  def test_xi_a_ac237; assert_in_delta(0.7978154055943194, worksheet.xi_a_ac237, 0.001); end
  def test_xi_a_ad237; assert_in_delta(0.7978154055943194, worksheet.xi_a_ad237, 0.001); end
  def test_xi_a_ae237; assert_in_delta(0.7978154055943194, worksheet.xi_a_ae237, 0.001); end
  def test_xi_a_af237; assert_in_delta(0.7978154055943194, worksheet.xi_a_af237, 0.001); end
  def test_xi_a_ag237; assert_in_delta(0.7978154055943194, worksheet.xi_a_ag237, 0.001); end
  def test_xi_a_ah237; assert_in_delta(0.7978154055943194, worksheet.xi_a_ah237, 0.001); end
  def test_xi_a_ai237; assert_in_delta(0.7978154055943194, worksheet.xi_a_ai237, 0.001); end
  def test_xi_a_aj237; assert_in_delta(0.7978154055943194, worksheet.xi_a_aj237, 0.001); end
  def test_xi_a_ak237; assert_in_delta(0.7978154055943194, worksheet.xi_a_ak237, 0.001); end
  def test_xi_a_am237; assert_equal("(iii)", worksheet.xi_a_am237); end
  def test_xi_a_an237; assert_equal("Electric Steel", worksheet.xi_a_an237); end
  def test_xi_a_ao237; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao237, 0.001); end
  def test_xi_a_ap237; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap237, 0.001); end
  def test_xi_a_aq237; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq237, 0.001); end
  def test_xi_a_ar237; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar237, 0.001); end
  def test_xi_a_as237; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as237, 0.001); end
  def test_xi_a_at237; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at237, 0.001); end
  def test_xi_a_au237; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au237, 0.001); end
  def test_xi_a_av237; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av237, 0.001); end
  def test_xi_a_aw237; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw237, 0.001); end
  def test_xi_a_ay237; assert_equal("(iii)", worksheet.xi_a_ay237); end
  def test_xi_a_az237; assert_equal("Electric Steel", worksheet.xi_a_az237); end
  def test_xi_a_ba237; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_ba237, 0.001); end
  def test_xi_a_bl237; assert_equal("Electric Steel", worksheet.xi_a_bl237); end
  def test_xi_a_bx237; assert_equal("Electric Steel", worksheet.xi_a_bx237); end
  def test_xi_a_by237; assert_in_delta(0, (worksheet.xi_a_by237||0), 0.001); end
  def test_xi_a_bz237; assert_in_delta(0, (worksheet.xi_a_bz237||0), 0.001); end
  def test_xi_a_ca237; assert_in_delta(0, (worksheet.xi_a_ca237||0), 0.001); end
  def test_xi_a_cb237; assert_in_delta(0, (worksheet.xi_a_cb237||0), 0.001); end
  def test_xi_a_cc237; assert_in_delta(0, (worksheet.xi_a_cc237||0), 0.001); end
  def test_xi_a_cd237; assert_in_delta(0, (worksheet.xi_a_cd237||0), 0.001); end
  def test_xi_a_ce237; assert_in_delta(0, (worksheet.xi_a_ce237||0), 0.001); end
  def test_xi_a_cf237; assert_in_delta(0, (worksheet.xi_a_cf237||0), 0.001); end
  def test_xi_a_cg237; assert_in_delta(0, (worksheet.xi_a_cg237||0), 0.001); end
  def test_xi_a_ci237; assert_equal("Electric Steel", worksheet.xi_a_ci237); end
  def test_xi_a_cj237; assert_in_epsilon(3000, worksheet.xi_a_cj237, 0.001); end
  def test_xi_a_f237; assert_in_epsilon(2869, worksheet.xi_a_f237, 0.001); end
  def test_xi_a_ck237; assert_in_epsilon(3000, worksheet.xi_a_ck237, 0.001); end
  def test_xi_a_g237; assert_in_epsilon(2869, worksheet.xi_a_g237, 0.001); end
  def test_xi_a_cl237; assert_in_epsilon(3000, worksheet.xi_a_cl237, 0.001); end
  def test_xi_a_h237; assert_in_epsilon(2869, worksheet.xi_a_h237, 0.001); end
  def test_xi_a_cm237; assert_in_epsilon(3000, worksheet.xi_a_cm237, 0.001); end
  def test_xi_a_i237; assert_in_epsilon(2869, worksheet.xi_a_i237, 0.001); end
  def test_xi_a_cn237; assert_in_epsilon(3000, worksheet.xi_a_cn237, 0.001); end
  def test_xi_a_j237; assert_in_epsilon(2869, worksheet.xi_a_j237, 0.001); end
  def test_xi_a_co237; assert_in_epsilon(3000, worksheet.xi_a_co237, 0.001); end
  def test_xi_a_k237; assert_in_epsilon(2869, worksheet.xi_a_k237, 0.001); end
  def test_xi_a_cp237; assert_in_epsilon(3000, worksheet.xi_a_cp237, 0.001); end
  def test_xi_a_l237; assert_in_epsilon(2869, worksheet.xi_a_l237, 0.001); end
  def test_xi_a_cq237; assert_in_epsilon(3000, worksheet.xi_a_cq237, 0.001); end
  def test_xi_a_m237; assert_in_epsilon(2869, worksheet.xi_a_m237, 0.001); end
  def test_xi_a_cr237; assert_in_epsilon(3000, worksheet.xi_a_cr237, 0.001); end
  def test_xi_a_d238; assert_equal("Sum", worksheet.xi_a_d238); end
  def test_xi_a_e238; assert_in_epsilon(8133, worksheet.xi_a_e238, 0.001); end
  def test_xi_a_f238; assert_in_epsilon(8133, worksheet.xi_a_f238, 0.001); end
  def test_xi_a_g238; assert_in_epsilon(8133, worksheet.xi_a_g238, 0.001); end
  def test_xi_a_h238; assert_in_epsilon(8133, worksheet.xi_a_h238, 0.001); end
  def test_xi_a_i238; assert_in_epsilon(8133, worksheet.xi_a_i238, 0.001); end
  def test_xi_a_j238; assert_in_epsilon(8133, worksheet.xi_a_j238, 0.001); end
  def test_xi_a_k238; assert_in_epsilon(8133, worksheet.xi_a_k238, 0.001); end
  def test_xi_a_l238; assert_in_epsilon(8133, worksheet.xi_a_l238, 0.001); end
  def test_xi_a_m238; assert_in_epsilon(8133, worksheet.xi_a_m238, 0.001); end
  def test_xi_a_o238; assert_equal("Total", worksheet.xi_a_o238); end
  def test_xi_a_aa238; assert_equal("V.05", worksheet.xi_a_aa238); end
  def test_xi_a_ab238; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab238); end
  def test_xi_a_ac238; assert_in_delta(0.21102564883744446, worksheet.xi_a_ac238, 0.001); end
  def test_xi_a_ad238; assert_in_delta(0.21102564883744446, worksheet.xi_a_ad238, 0.001); end
  def test_xi_a_ae238; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae238, 0.001); end
  def test_xi_a_af238; assert_in_delta(0.21102564883744446, worksheet.xi_a_af238, 0.001); end
  def test_xi_a_ag238; assert_in_delta(0.21102564883744446, worksheet.xi_a_ag238, 0.001); end
  def test_xi_a_ah238; assert_in_delta(0.21102564883744446, worksheet.xi_a_ah238, 0.001); end
  def test_xi_a_ai238; assert_in_delta(0.21102564883744446, worksheet.xi_a_ai238, 0.001); end
  def test_xi_a_aj238; assert_in_delta(0.21102564883744446, worksheet.xi_a_aj238, 0.001); end
  def test_xi_a_ak238; assert_in_delta(0.21102564883744446, worksheet.xi_a_ak238, 0.001); end
  def test_xi_a_am238; assert_equal("Total", worksheet.xi_a_am238); end
  def test_xi_a_aw238; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw238, 0.001); end
  def test_xi_a_ay238; assert_equal("Total", worksheet.xi_a_ay238); end
  def test_xi_a_ba238; assert_in_epsilon(9.230780077441661, worksheet.xi_a_ba238, 0.001); end
  def test_xi_a_bb238; assert_in_epsilon(9.230780077441661, worksheet.xi_a_bb238, 0.001); end
  def test_xi_a_bc238; assert_in_epsilon(9.230780077441661, worksheet.xi_a_bc238, 0.001); end
  def test_xi_a_bd238; assert_in_epsilon(9.230780077441661, worksheet.xi_a_bd238, 0.001); end
  def test_xi_a_be238; assert_in_epsilon(9.230780077441661, worksheet.xi_a_be238, 0.001); end
  def test_xi_a_bf238; assert_in_epsilon(9.230780077441661, worksheet.xi_a_bf238, 0.001); end
  def test_xi_a_bg238; assert_in_epsilon(9.230780077441661, worksheet.xi_a_bg238, 0.001); end
  def test_xi_a_bh238; assert_in_epsilon(9.230780077441661, worksheet.xi_a_bh238, 0.001); end
  def test_xi_a_ac243; assert_in_epsilon(17.667755554147792, worksheet.xi_a_ac243, 0.001); end
  def test_xi_a_bm236; assert_in_epsilon(551.8989331525323, worksheet.xi_a_bm236, 0.001); end
  def test_xi_a_bm237; assert_in_epsilon(122.4936749439734, worksheet.xi_a_bm237, 0.001); end
  def test_xi_a_bm238; assert_in_epsilon(674.3926080965057, worksheet.xi_a_bm238, 0.001); end
  def test_xi_a_ad243; assert_in_epsilon(17.955346389372075, worksheet.xi_a_ad243, 0.001); end
  def test_xi_a_bn236; assert_in_epsilon(560.8825912441491, worksheet.xi_a_bn236, 0.001); end
  def test_xi_a_bn237; assert_in_epsilon(124.48759308365237, worksheet.xi_a_bn237, 0.001); end
  def test_xi_a_bn238; assert_in_epsilon(685.3701843278016, worksheet.xi_a_bn238, 0.001); end
  def test_xi_a_ae243; assert_in_epsilon(17.42991070429268, worksheet.xi_a_ae243, 0.001); end
  def test_xi_a_bo236; assert_in_epsilon(544.4692220899949, worksheet.xi_a_bo236, 0.001); end
  def test_xi_a_bo237; assert_in_epsilon(120.8446545216589, worksheet.xi_a_bo237, 0.001); end
  def test_xi_a_bo238; assert_in_epsilon(665.3138766116538, worksheet.xi_a_bo238, 0.001); end
  def test_xi_a_af243; assert_in_epsilon(17.722435711286632, worksheet.xi_a_af243, 0.001); end
  def test_xi_a_bp236; assert_in_epsilon(553.6070120478425, worksheet.xi_a_bp236, 0.001); end
  def test_xi_a_bp237; assert_in_epsilon(122.87278214714489, worksheet.xi_a_bp237, 0.001); end
  def test_xi_a_bp238; assert_in_epsilon(676.4797941949874, worksheet.xi_a_bp238, 0.001); end
  def test_xi_a_ag243; assert_in_epsilon(15.580054430104807, worksheet.xi_a_ag243, 0.001); end
  def test_xi_a_bq236; assert_in_epsilon(486.6840834468397, worksheet.xi_a_bq236, 0.001); end
  def test_xi_a_bq237; assert_in_epsilon(108.0192737058007, worksheet.xi_a_bq237, 0.001); end
  def test_xi_a_bq238; assert_in_epsilon(594.7033571526404, worksheet.xi_a_bq238, 0.001); end
  def test_xi_a_ah243; assert_in_epsilon(14.397923182888775, worksheet.xi_a_ah243, 0.001); end
  def test_xi_a_br236; assert_in_epsilon(449.7570967571446, worksheet.xi_a_br236, 0.001); end
  def test_xi_a_br237; assert_in_epsilon(99.82334863236377, worksheet.xi_a_br237, 0.001); end
  def test_xi_a_br238; assert_in_epsilon(549.5804453895084, worksheet.xi_a_br238, 0.001); end
  def test_xi_a_ai243; assert_in_epsilon(13.306240965237233, worksheet.xi_a_ai243, 0.001); end
  def test_xi_a_bs236; assert_in_epsilon(415.6555240125506, worksheet.xi_a_bs236, 0.001); end
  def test_xi_a_bs237; assert_in_epsilon(92.25452268266751, worksheet.xi_a_bs237, 0.001); end
  def test_xi_a_bs238; assert_in_epsilon(507.9100466952181, worksheet.xi_a_bs238, 0.001); end
  def test_xi_a_aj243; assert_in_epsilon(12.21802589642779, worksheet.xi_a_aj243, 0.001); end
  def test_xi_a_bt236; assert_in_epsilon(381.6622568046259, worksheet.xi_a_bt236, 0.001); end
  def test_xi_a_bt237; assert_in_epsilon(84.7097350892834, worksheet.xi_a_bt237, 0.001); end
  def test_xi_a_bt238; assert_in_epsilon(466.3719918939093, worksheet.xi_a_bt238, 0.001); end
  def test_xi_a_by238; assert_in_delta(0, (worksheet.xi_a_by238||0), 0.001); end
  def test_xi_a_bz238; assert_in_delta(0, (worksheet.xi_a_bz238||0), 0.001); end
  def test_xi_a_ca238; assert_in_delta(0, (worksheet.xi_a_ca238||0), 0.001); end
  def test_xi_a_cb238; assert_in_delta(0, (worksheet.xi_a_cb238||0), 0.001); end
  def test_xi_a_cc238; assert_in_delta(0, (worksheet.xi_a_cc238||0), 0.001); end
  def test_xi_a_cd238; assert_in_delta(0, (worksheet.xi_a_cd238||0), 0.001); end
  def test_xi_a_ce238; assert_in_delta(0, (worksheet.xi_a_ce238||0), 0.001); end
  def test_xi_a_cf238; assert_in_delta(0, (worksheet.xi_a_cf238||0), 0.001); end
  def test_xi_a_cg238; assert_in_delta(0, (worksheet.xi_a_cg238||0), 0.001); end
  def test_xi_a_q239; assert_in_epsilon(38.17081383255731, worksheet.xi_a_q239, 0.001); end
  def test_xi_a_r239; assert_in_epsilon(38.17081383255731, worksheet.xi_a_r239, 0.001); end
  def test_xi_a_s239; assert_in_epsilon(38.17081383255731, worksheet.xi_a_s239, 0.001); end
  def test_xi_a_t239; assert_in_epsilon(38.17081383255731, worksheet.xi_a_t239, 0.001); end
  def test_xi_a_u239; assert_in_epsilon(38.17081383255731, worksheet.xi_a_u239, 0.001); end
  def test_xi_a_v239; assert_in_epsilon(38.17081383255731, worksheet.xi_a_v239, 0.001); end
  def test_xi_a_w239; assert_in_epsilon(38.17081383255731, worksheet.xi_a_w239, 0.001); end
  def test_xi_a_x239; assert_in_epsilon(38.17081383255731, worksheet.xi_a_x239, 0.001); end
  def test_xi_a_y239; assert_in_epsilon(38.17081383255731, worksheet.xi_a_y239, 0.001); end
  def test_xi_a_aa239; assert_equal("V.04", worksheet.xi_a_aa239); end
  def test_xi_a_ab239; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab239); end
  def test_xi_a_ac239; assert_in_delta(0.07696335047929354, worksheet.xi_a_ac239, 0.001); end
  def test_xi_a_ad239; assert_in_delta(0.07696335047929354, worksheet.xi_a_ad239, 0.001); end
  def test_xi_a_ae239; assert_in_delta(0.07696335047929354, worksheet.xi_a_ae239, 0.001); end
  def test_xi_a_af239; assert_in_delta(0.07696335047929354, worksheet.xi_a_af239, 0.001); end
  def test_xi_a_ag239; assert_in_delta(0.07696335047929354, worksheet.xi_a_ag239, 0.001); end
  def test_xi_a_ah239; assert_in_delta(0.07696335047929354, worksheet.xi_a_ah239, 0.001); end
  def test_xi_a_ai239; assert_in_delta(0.07696335047929354, worksheet.xi_a_ai239, 0.001); end
  def test_xi_a_aj239; assert_in_delta(0.07696335047929354, worksheet.xi_a_aj239, 0.001); end
  def test_xi_a_ak239; assert_in_delta(0.07696335047929354, worksheet.xi_a_ak239, 0.001); end
  def test_xi_a_bk239; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bk239); end
  def test_xi_a_bl239; assert_equal("Oxygen Steel", worksheet.xi_a_bl239); end
  def test_xi_a_bm239; assert_in_delta(0, (worksheet.xi_a_bm239||0), 0.001); end
  def test_xi_a_bn239; assert_in_delta(0, (worksheet.xi_a_bn239||0), 0.001); end
  def test_xi_a_bo239; assert_in_delta(0, (worksheet.xi_a_bo239||0), 0.001); end
  def test_xi_a_bp239; assert_in_delta(0, (worksheet.xi_a_bp239||0), 0.001); end
  def test_xi_a_bq239; assert_in_delta(0, (worksheet.xi_a_bq239||0), 0.001); end
  def test_xi_a_br239; assert_in_delta(0, (worksheet.xi_a_br239||0), 0.001); end
  def test_xi_a_bs239; assert_in_delta(0, (worksheet.xi_a_bs239||0), 0.001); end
  def test_xi_a_bt239; assert_in_delta(0, (worksheet.xi_a_bt239||0), 0.001); end
  def test_xi_a_bu239; assert_in_delta(0, (worksheet.xi_a_bu239||0), 0.001); end
  def test_xi_a_bw239; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bw239); end
  def test_xi_a_bx239; assert_equal("Oxygen Steel", worksheet.xi_a_bx239); end
  def test_xi_a_by239; assert_in_delta(0, (worksheet.xi_a_by239||0), 0.001); end
  def test_xi_a_bz239; assert_in_delta(0, (worksheet.xi_a_bz239||0), 0.001); end
  def test_xi_a_ca239; assert_in_delta(0, (worksheet.xi_a_ca239||0), 0.001); end
  def test_xi_a_cb239; assert_in_delta(0, (worksheet.xi_a_cb239||0), 0.001); end
  def test_xi_a_cc239; assert_in_delta(0, (worksheet.xi_a_cc239||0), 0.001); end
  def test_xi_a_cd239; assert_in_delta(0, (worksheet.xi_a_cd239||0), 0.001); end
  def test_xi_a_ce239; assert_in_delta(0, (worksheet.xi_a_ce239||0), 0.001); end
  def test_xi_a_cf239; assert_in_delta(0, (worksheet.xi_a_cf239||0), 0.001); end
  def test_xi_a_cg239; assert_in_delta(0, (worksheet.xi_a_cg239||0), 0.001); end
  def test_xi_a_d240; assert_equal("Total", worksheet.xi_a_d240); end
  def test_xi_a_e240; assert_in_epsilon(8133, worksheet.xi_a_e240, 0.001); end
  def test_xi_a_f240; assert_in_epsilon(8133, worksheet.xi_a_f240, 0.001); end
  def test_xi_a_g240; assert_in_epsilon(8133, worksheet.xi_a_g240, 0.001); end
  def test_xi_a_h240; assert_in_epsilon(8133, worksheet.xi_a_h240, 0.001); end
  def test_xi_a_i240; assert_in_epsilon(8133, worksheet.xi_a_i240, 0.001); end
  def test_xi_a_j240; assert_in_epsilon(8133, worksheet.xi_a_j240, 0.001); end
  def test_xi_a_k240; assert_in_epsilon(8133, worksheet.xi_a_k240, 0.001); end
  def test_xi_a_l240; assert_in_epsilon(8133, worksheet.xi_a_l240, 0.001); end
  def test_xi_a_m240; assert_in_epsilon(8133, worksheet.xi_a_m240, 0.001); end
  def test_xi_a_aa240; assert_equal("v.06", worksheet.xi_a_aa240); end
  def test_xi_a_ab240; assert_equal("Blast furnace gas", worksheet.xi_a_ab240); end
  def test_xi_a_ac240; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ac240, 0.001); end
  def test_xi_a_ad240; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ad240, 0.001); end
  def test_xi_a_ae240; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ae240, 0.001); end
  def test_xi_a_af240; assert_in_delta(-0.1132646069606094, worksheet.xi_a_af240, 0.001); end
  def test_xi_a_ag240; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ag240, 0.001); end
  def test_xi_a_ah240; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ah240, 0.001); end
  def test_xi_a_ai240; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ai240, 0.001); end
  def test_xi_a_aj240; assert_in_delta(-0.1132646069606094, worksheet.xi_a_aj240, 0.001); end
  def test_xi_a_ak240; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ak240, 0.001); end
  def test_xi_a_am240; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am240); end
  def test_xi_a_bl240; assert_equal("Electric Steel", worksheet.xi_a_bl240); end
  def test_xi_a_bm240; assert_in_delta(0, (worksheet.xi_a_bm240||0), 0.001); end
  def test_xi_a_bn240; assert_in_delta(0, (worksheet.xi_a_bn240||0), 0.001); end
  def test_xi_a_bo240; assert_in_delta(0, (worksheet.xi_a_bo240||0), 0.001); end
  def test_xi_a_bp240; assert_in_delta(0, (worksheet.xi_a_bp240||0), 0.001); end
  def test_xi_a_bq240; assert_in_delta(0, (worksheet.xi_a_bq240||0), 0.001); end
  def test_xi_a_br240; assert_in_delta(0, (worksheet.xi_a_br240||0), 0.001); end
  def test_xi_a_bs240; assert_in_delta(0, (worksheet.xi_a_bs240||0), 0.001); end
  def test_xi_a_bt240; assert_in_delta(0, (worksheet.xi_a_bt240||0), 0.001); end
  def test_xi_a_bu240; assert_in_delta(0, (worksheet.xi_a_bu240||0), 0.001); end
  def test_xi_a_bx240; assert_equal("Electric Steel", worksheet.xi_a_bx240); end
  def test_xi_a_by240; assert_in_delta(0, (worksheet.xi_a_by240||0), 0.001); end
  def test_xi_a_bz240; assert_in_delta(0, (worksheet.xi_a_bz240||0), 0.001); end
  def test_xi_a_ca240; assert_in_delta(0, (worksheet.xi_a_ca240||0), 0.001); end
  def test_xi_a_cb240; assert_in_delta(0, (worksheet.xi_a_cb240||0), 0.001); end
  def test_xi_a_cc240; assert_in_delta(0, (worksheet.xi_a_cc240||0), 0.001); end
  def test_xi_a_cd240; assert_in_delta(0, (worksheet.xi_a_cd240||0), 0.001); end
  def test_xi_a_ce240; assert_in_delta(0, (worksheet.xi_a_ce240||0), 0.001); end
  def test_xi_a_cf240; assert_in_delta(0, (worksheet.xi_a_cf240||0), 0.001); end
  def test_xi_a_cg240; assert_in_delta(0, (worksheet.xi_a_cg240||0), 0.001); end
  def test_xi_a_aa241; assert_equal("V.07", worksheet.xi_a_aa241); end
  def test_xi_a_ab241; assert_equal("Heat transport", worksheet.xi_a_ab241); end
  def test_xi_a_ac241; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ac241, 0.001); end
  def test_xi_a_ad241; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ad241, 0.001); end
  def test_xi_a_ae241; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae241, 0.001); end
  def test_xi_a_af241; assert_in_delta(-0.05458762523924703, worksheet.xi_a_af241, 0.001); end
  def test_xi_a_ag241; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ag241, 0.001); end
  def test_xi_a_ah241; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ah241, 0.001); end
  def test_xi_a_ai241; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ai241, 0.001); end
  def test_xi_a_aj241; assert_in_delta(-0.05458762523924703, worksheet.xi_a_aj241, 0.001); end
  def test_xi_a_ak241; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ak241, 0.001); end
  def test_xi_a_am241; assert_equal("Industry", worksheet.xi_a_am241); end
  def test_xi_a_an241; assert_equal("Description", worksheet.xi_a_an241); end
  def test_xi_a_ao241; assert_in_epsilon(2010, worksheet.xi_a_ao241, 0.001); end
  def test_xi_a_ap241; assert_in_epsilon(2015, worksheet.xi_a_ap241, 0.001); end
  def test_xi_a_aq241; assert_in_epsilon(2020, worksheet.xi_a_aq241, 0.001); end
  def test_xi_a_ar241; assert_in_epsilon(2025, worksheet.xi_a_ar241, 0.001); end
  def test_xi_a_as241; assert_in_epsilon(2030, worksheet.xi_a_as241, 0.001); end
  def test_xi_a_at241; assert_in_epsilon(2035, worksheet.xi_a_at241, 0.001); end
  def test_xi_a_au241; assert_in_epsilon(2040, worksheet.xi_a_au241, 0.001); end
  def test_xi_a_av241; assert_in_epsilon(2045, worksheet.xi_a_av241, 0.001); end
  def test_xi_a_aw241; assert_in_epsilon(2050, worksheet.xi_a_aw241, 0.001); end
  def test_xi_a_bm241; assert_in_delta(0, (worksheet.xi_a_bm241||0), 0.001); end
  def test_xi_a_bn241; assert_in_delta(0, (worksheet.xi_a_bn241||0), 0.001); end
  def test_xi_a_bo241; assert_in_delta(0, (worksheet.xi_a_bo241||0), 0.001); end
  def test_xi_a_bp241; assert_in_delta(0, (worksheet.xi_a_bp241||0), 0.001); end
  def test_xi_a_bq241; assert_in_delta(0, (worksheet.xi_a_bq241||0), 0.001); end
  def test_xi_a_br241; assert_in_delta(0, (worksheet.xi_a_br241||0), 0.001); end
  def test_xi_a_bs241; assert_in_delta(0, (worksheet.xi_a_bs241||0), 0.001); end
  def test_xi_a_bt241; assert_in_delta(0, (worksheet.xi_a_bt241||0), 0.001); end
  def test_xi_a_bu241; assert_in_delta(0, (worksheet.xi_a_bu241||0), 0.001); end
  def test_xi_a_by241; assert_in_delta(0, (worksheet.xi_a_by241||0), 0.001); end
  def test_xi_a_bz241; assert_in_delta(0, (worksheet.xi_a_bz241||0), 0.001); end
  def test_xi_a_ca241; assert_in_delta(0, (worksheet.xi_a_ca241||0), 0.001); end
  def test_xi_a_cb241; assert_in_delta(0, (worksheet.xi_a_cb241||0), 0.001); end
  def test_xi_a_cc241; assert_in_delta(0, (worksheet.xi_a_cc241||0), 0.001); end
  def test_xi_a_cd241; assert_in_delta(0, (worksheet.xi_a_cd241||0), 0.001); end
  def test_xi_a_ce241; assert_in_delta(0, (worksheet.xi_a_ce241||0), 0.001); end
  def test_xi_a_cf241; assert_in_delta(0, (worksheet.xi_a_cf241||0), 0.001); end
  def test_xi_a_cg241; assert_in_delta(0, (worksheet.xi_a_cg241||0), 0.001); end
  def test_xi_a_aa242; assert_equal("Intensity", worksheet.xi_a_aa242); end
  def test_xi_a_ab242; assert_equal("Intensity", worksheet.xi_a_ab242); end
  def test_xi_a_ac242; assert_in_delta(0.21950983912607056, worksheet.xi_a_ac242, 0.001); end
  def test_xi_a_ad242; assert_in_delta(0.21950983912607056, worksheet.xi_a_ad242, 0.001); end
  def test_xi_a_ae242; assert_in_delta(0.21950983912607056, worksheet.xi_a_ae242, 0.001); end
  def test_xi_a_af242; assert_in_delta(0.21950983912607056, worksheet.xi_a_af242, 0.001); end
  def test_xi_a_ag242; assert_in_delta(0.21950983912607056, worksheet.xi_a_ag242, 0.001); end
  def test_xi_a_ah242; assert_in_delta(0.21950983912607056, worksheet.xi_a_ah242, 0.001); end
  def test_xi_a_ai242; assert_in_delta(0.21950983912607056, worksheet.xi_a_ai242, 0.001); end
  def test_xi_a_aj242; assert_in_delta(0.21950983912607056, worksheet.xi_a_aj242, 0.001); end
  def test_xi_a_ak242; assert_in_delta(0.21950983912607056, worksheet.xi_a_ak242, 0.001); end
  def test_xi_a_am242; assert_equal("(ii)", worksheet.xi_a_am242); end
  def test_xi_a_an242; assert_equal("Oxygen Steel", worksheet.xi_a_an242); end
  def test_xi_a_ao242; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao242, 0.001); end
  def test_xi_a_ap242; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap242, 0.001); end
  def test_xi_a_aq242; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq242, 0.001); end
  def test_xi_a_ar242; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar242, 0.001); end
  def test_xi_a_as242; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as242, 0.001); end
  def test_xi_a_at242; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at242, 0.001); end
  def test_xi_a_au242; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au242, 0.001); end
  def test_xi_a_av242; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av242, 0.001); end
  def test_xi_a_aw242; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw242, 0.001); end
  def test_xi_a_aa243; assert_equal("Cost", worksheet.xi_a_aa243); end
  def test_xi_a_ab243; assert_equal("Cost", worksheet.xi_a_ab243); end
  def test_xi_a_am243; assert_equal("(iii)", worksheet.xi_a_am243); end
  def test_xi_a_an243; assert_equal("Electric Steel", worksheet.xi_a_an243); end
  def test_xi_a_ao243; assert_in_delta(0, (worksheet.xi_a_ao243||0), 0.001); end
  def test_xi_a_ap243; assert_in_delta(0, (worksheet.xi_a_ap243||0), 0.001); end
  def test_xi_a_aq243; assert_in_delta(0, (worksheet.xi_a_aq243||0), 0.001); end
  def test_xi_a_ar243; assert_in_delta(0, (worksheet.xi_a_ar243||0), 0.001); end
  def test_xi_a_as243; assert_in_delta(0, (worksheet.xi_a_as243||0), 0.001); end
  def test_xi_a_at243; assert_in_delta(0, (worksheet.xi_a_at243||0), 0.001); end
  def test_xi_a_au243; assert_in_delta(0, (worksheet.xi_a_au243||0), 0.001); end
  def test_xi_a_av243; assert_in_delta(0, (worksheet.xi_a_av243||0), 0.001); end
  def test_xi_a_aw243; assert_in_delta(0, (worksheet.xi_a_aw243||0), 0.001); end
  def test_xi_a_am244; assert_equal("Total", worksheet.xi_a_am244); end
  def test_xi_a_z245; assert_equal("Electrosteel", worksheet.xi_a_z245); end
  def test_xi_a_aa245; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa245); end
  def test_xi_a_aa246; assert_equal("Vector", worksheet.xi_a_aa246); end
  def test_xi_a_ab246; assert_equal("Description", worksheet.xi_a_ab246); end
  def test_xi_a_ac246; assert_in_epsilon(2010, worksheet.xi_a_ac246, 0.001); end
  def test_xi_a_ad246; assert_in_epsilon(2015, worksheet.xi_a_ad246, 0.001); end
  def test_xi_a_ae246; assert_in_epsilon(2020, worksheet.xi_a_ae246, 0.001); end
  def test_xi_a_af246; assert_in_epsilon(2025, worksheet.xi_a_af246, 0.001); end
  def test_xi_a_ag246; assert_in_epsilon(2030, worksheet.xi_a_ag246, 0.001); end
  def test_xi_a_ah246; assert_in_epsilon(2035, worksheet.xi_a_ah246, 0.001); end
  def test_xi_a_ai246; assert_in_epsilon(2040, worksheet.xi_a_ai246, 0.001); end
  def test_xi_a_aj246; assert_in_epsilon(2045, worksheet.xi_a_aj246, 0.001); end
  def test_xi_a_ak246; assert_in_epsilon(2050, worksheet.xi_a_ak246, 0.001); end
  def test_xi_a_aa247; assert_equal("V.01", worksheet.xi_a_aa247); end
  def test_xi_a_ab247; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab247); end
  def test_xi_a_ac247; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac247, 0.001); end
  def test_xi_a_ad247; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad247, 0.001); end
  def test_xi_a_ae247; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae247, 0.001); end
  def test_xi_a_af247; assert_in_delta(0.37661125507716986, worksheet.xi_a_af247, 0.001); end
  def test_xi_a_ag247; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag247, 0.001); end
  def test_xi_a_ah247; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah247, 0.001); end
  def test_xi_a_ai247; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai247, 0.001); end
  def test_xi_a_aj247; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj247, 0.001); end
  def test_xi_a_ak247; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak247, 0.001); end
  def test_xi_a_aa248; assert_equal("V.03", worksheet.xi_a_aa248); end
  def test_xi_a_ab248; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab248); end
  def test_xi_a_ac248; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac248, 0.001); end
  def test_xi_a_ad248; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad248, 0.001); end
  def test_xi_a_ae248; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae248, 0.001); end
  def test_xi_a_af248; assert_in_delta(0.04200640884510868, worksheet.xi_a_af248, 0.001); end
  def test_xi_a_ag248; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag248, 0.001); end
  def test_xi_a_ah248; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah248, 0.001); end
  def test_xi_a_ai248; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai248, 0.001); end
  def test_xi_a_aj248; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj248, 0.001); end
  def test_xi_a_ak248; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak248, 0.001); end
  def test_xi_a_aa249; assert_equal("V.05", worksheet.xi_a_aa249); end
  def test_xi_a_ab249; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab249); end
  def test_xi_a_ac249; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac249, 0.001); end
  def test_xi_a_ad249; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad249, 0.001); end
  def test_xi_a_ae249; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae249, 0.001); end
  def test_xi_a_af249; assert_in_delta(0.5722074496017227, worksheet.xi_a_af249, 0.001); end
  def test_xi_a_ag249; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag249, 0.001); end
  def test_xi_a_ah249; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah249, 0.001); end
  def test_xi_a_ai249; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai249, 0.001); end
  def test_xi_a_aj249; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj249, 0.001); end
  def test_xi_a_ak249; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak249, 0.001); end
  def test_xi_a_aa250; assert_equal("V.04", worksheet.xi_a_aa250); end
  def test_xi_a_ab250; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab250); end
  def test_xi_a_ac250; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac250, 0.001); end
  def test_xi_a_ad250; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad250, 0.001); end
  def test_xi_a_ae250; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae250, 0.001); end
  def test_xi_a_af250; assert_in_delta(0.009174886475998728, worksheet.xi_a_af250, 0.001); end
  def test_xi_a_ag250; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag250, 0.001); end
  def test_xi_a_ah250; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah250, 0.001); end
  def test_xi_a_ai250; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai250, 0.001); end
  def test_xi_a_aj250; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj250, 0.001); end
  def test_xi_a_ak250; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak250, 0.001); end
  def test_xi_a_aa251; assert_equal("V.03", worksheet.xi_a_aa251); end
  def test_xi_a_ab251; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab251); end
  def test_xi_a_ac251; assert_in_delta(0, (worksheet.xi_a_ac251||0), 0.001); end
  def test_xi_a_ad251; assert_in_delta(0, (worksheet.xi_a_ad251||0), 0.001); end
  def test_xi_a_ae251; assert_in_delta(0, (worksheet.xi_a_ae251||0), 0.001); end
  def test_xi_a_af251; assert_in_delta(0, (worksheet.xi_a_af251||0), 0.001); end
  def test_xi_a_ag251; assert_in_delta(0, (worksheet.xi_a_ag251||0), 0.001); end
  def test_xi_a_ah251; assert_in_delta(0, (worksheet.xi_a_ah251||0), 0.001); end
  def test_xi_a_ai251; assert_in_delta(0, (worksheet.xi_a_ai251||0), 0.001); end
  def test_xi_a_aj251; assert_in_delta(0, (worksheet.xi_a_aj251||0), 0.001); end
  def test_xi_a_ak251; assert_in_delta(0, (worksheet.xi_a_ak251||0), 0.001); end
  def test_xi_a_aa252; assert_equal("V.07", worksheet.xi_a_aa252); end
  def test_xi_a_ab252; assert_equal("Heat transport", worksheet.xi_a_ab252); end
  def test_xi_a_ac252; assert_in_delta(0, (worksheet.xi_a_ac252||0), 0.001); end
  def test_xi_a_ad252; assert_in_delta(0, (worksheet.xi_a_ad252||0), 0.001); end
  def test_xi_a_ae252; assert_in_delta(0, (worksheet.xi_a_ae252||0), 0.001); end
  def test_xi_a_af252; assert_in_delta(0, (worksheet.xi_a_af252||0), 0.001); end
  def test_xi_a_ag252; assert_in_delta(0, (worksheet.xi_a_ag252||0), 0.001); end
  def test_xi_a_ah252; assert_in_delta(0, (worksheet.xi_a_ah252||0), 0.001); end
  def test_xi_a_ai252; assert_in_delta(0, (worksheet.xi_a_ai252||0), 0.001); end
  def test_xi_a_aj252; assert_in_delta(0, (worksheet.xi_a_aj252||0), 0.001); end
  def test_xi_a_ak252; assert_in_delta(0, (worksheet.xi_a_ak252||0), 0.001); end
  def test_xi_a_aa253; assert_equal("Intensity", worksheet.xi_a_aa253); end
  def test_xi_a_ab253; assert_equal("Intensity", worksheet.xi_a_ab253); end
  def test_xi_a_ac253; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac253, 0.001); end
  def test_xi_a_ad253; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad253, 0.001); end
  def test_xi_a_ae253; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae253, 0.001); end
  def test_xi_a_af253; assert_in_delta(0.1305543295866784, worksheet.xi_a_af253, 0.001); end
  def test_xi_a_ag253; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag253, 0.001); end
  def test_xi_a_ah253; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah253, 0.001); end
  def test_xi_a_ai253; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai253, 0.001); end
  def test_xi_a_aj253; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj253, 0.001); end
  def test_xi_a_ak253; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak253, 0.001); end
  def test_xi_a_aa254; assert_equal("Cost", worksheet.xi_a_aa254); end
  def test_xi_a_ab254; assert_equal("Cost", worksheet.xi_a_ab254); end
  def test_xi_a_ac254; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac254, 0.001); end
  def test_xi_a_ad254; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad254, 0.001); end
  def test_xi_a_ae254; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae254, 0.001); end
  def test_xi_a_af254; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af254, 0.001); end
  def test_xi_a_ag254; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag254, 0.001); end
  def test_xi_a_ah254; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah254, 0.001); end
  def test_xi_a_ai254; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai254, 0.001); end
  def test_xi_a_aj254; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj254, 0.001); end
  def test_xi_a_ak254; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak254, 0.001); end
  def test_xi_a_b256; assert_in_epsilon(2, worksheet.xi_a_b256, 0.001); end
  def test_xi_a_c256; assert_equal("Compute product mix modifications", worksheet.xi_a_c256); end
  def test_xi_a_c257; assert_equal("Product mix : increase of EAF process", worksheet.xi_a_c257); end
  def test_xi_a_b258; assert_in_delta(1, worksheet.xi_a_b258, 0.001); end
  def test_xi_a_c258; assert_equal("Output Growth (kt)", worksheet.xi_a_c258); end
  def test_xi_a_n258; assert_in_epsilon(2, worksheet.xi_a_n258, 0.001); end
  def test_xi_a_o258; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_a_o258); end
  def test_xi_a_z258; assert_in_epsilon(3, worksheet.xi_a_z258, 0.001); end
  def test_xi_a_aa258; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa258); end
  def test_xi_a_al258; assert_in_epsilon(4, worksheet.xi_a_al258, 0.001); end
  def test_xi_a_am258; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am258); end
  def test_xi_a_ay258; assert_in_epsilon(5, worksheet.xi_a_ay258, 0.001); end
  def test_xi_a_az258; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az258); end
  def test_xi_a_bk258; assert_in_epsilon(6, worksheet.xi_a_bk258, 0.001); end
  def test_xi_a_bl258; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl258); end
  def test_xi_a_bw258; assert_in_epsilon(7, worksheet.xi_a_bw258, 0.001); end
  def test_xi_a_bx258; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx258); end
  def test_xi_a_ci258; assert_equal("Capacity", worksheet.xi_a_ci258); end
  def test_xi_a_c259; assert_equal("Product type", worksheet.xi_a_c259); end
  def test_xi_a_d259; assert_equal("Description", worksheet.xi_a_d259); end
  def test_xi_a_e259; assert_in_epsilon(2010, worksheet.xi_a_e259, 0.001); end
  def test_xi_a_f259; assert_in_epsilon(2015, worksheet.xi_a_f259, 0.001); end
  def test_xi_a_g259; assert_in_epsilon(2020, worksheet.xi_a_g259, 0.001); end
  def test_xi_a_h259; assert_in_epsilon(2025, worksheet.xi_a_h259, 0.001); end
  def test_xi_a_i259; assert_in_epsilon(2030, worksheet.xi_a_i259, 0.001); end
  def test_xi_a_j259; assert_in_epsilon(2035, worksheet.xi_a_j259, 0.001); end
  def test_xi_a_k259; assert_in_epsilon(2040, worksheet.xi_a_k259, 0.001); end
  def test_xi_a_l259; assert_in_epsilon(2045, worksheet.xi_a_l259, 0.001); end
  def test_xi_a_m259; assert_in_epsilon(2050, worksheet.xi_a_m259, 0.001); end
  def test_xi_a_o259; assert_equal("Industry", worksheet.xi_a_o259); end
  def test_xi_a_p259; assert_equal("Description", worksheet.xi_a_p259); end
  def test_xi_a_q259; assert_in_epsilon(2010, worksheet.xi_a_q259, 0.001); end
  def test_xi_a_r259; assert_in_epsilon(2015, worksheet.xi_a_r259, 0.001); end
  def test_xi_a_s259; assert_in_epsilon(2020, worksheet.xi_a_s259, 0.001); end
  def test_xi_a_t259; assert_in_epsilon(2025, worksheet.xi_a_t259, 0.001); end
  def test_xi_a_u259; assert_in_epsilon(2030, worksheet.xi_a_u259, 0.001); end
  def test_xi_a_v259; assert_in_epsilon(2035, worksheet.xi_a_v259, 0.001); end
  def test_xi_a_w259; assert_in_epsilon(2040, worksheet.xi_a_w259, 0.001); end
  def test_xi_a_x259; assert_in_epsilon(2045, worksheet.xi_a_x259, 0.001); end
  def test_xi_a_y259; assert_in_epsilon(2050, worksheet.xi_a_y259, 0.001); end
  def test_xi_a_z259; assert_equal("Oxygensteel", worksheet.xi_a_z259); end
  def test_xi_a_aa259; assert_equal("Vector", worksheet.xi_a_aa259); end
  def test_xi_a_ab259; assert_equal("Description", worksheet.xi_a_ab259); end
  def test_xi_a_ac259; assert_in_epsilon(2010, worksheet.xi_a_ac259, 0.001); end
  def test_xi_a_ad259; assert_in_epsilon(2015, worksheet.xi_a_ad259, 0.001); end
  def test_xi_a_ae259; assert_in_epsilon(2020, worksheet.xi_a_ae259, 0.001); end
  def test_xi_a_af259; assert_in_epsilon(2025, worksheet.xi_a_af259, 0.001); end
  def test_xi_a_ag259; assert_in_epsilon(2030, worksheet.xi_a_ag259, 0.001); end
  def test_xi_a_ah259; assert_in_epsilon(2035, worksheet.xi_a_ah259, 0.001); end
  def test_xi_a_ai259; assert_in_epsilon(2040, worksheet.xi_a_ai259, 0.001); end
  def test_xi_a_aj259; assert_in_epsilon(2045, worksheet.xi_a_aj259, 0.001); end
  def test_xi_a_ak259; assert_in_epsilon(2050, worksheet.xi_a_ak259, 0.001); end
  def test_xi_a_am259; assert_equal("Industry", worksheet.xi_a_am259); end
  def test_xi_a_an259; assert_equal("Description", worksheet.xi_a_an259); end
  def test_xi_a_ao259; assert_in_epsilon(2010, worksheet.xi_a_ao259, 0.001); end
  def test_xi_a_ap259; assert_in_epsilon(2015, worksheet.xi_a_ap259, 0.001); end
  def test_xi_a_aq259; assert_in_epsilon(2020, worksheet.xi_a_aq259, 0.001); end
  def test_xi_a_ar259; assert_in_epsilon(2025, worksheet.xi_a_ar259, 0.001); end
  def test_xi_a_as259; assert_in_epsilon(2030, worksheet.xi_a_as259, 0.001); end
  def test_xi_a_at259; assert_in_epsilon(2035, worksheet.xi_a_at259, 0.001); end
  def test_xi_a_au259; assert_in_epsilon(2040, worksheet.xi_a_au259, 0.001); end
  def test_xi_a_av259; assert_in_epsilon(2045, worksheet.xi_a_av259, 0.001); end
  def test_xi_a_aw259; assert_in_epsilon(2050, worksheet.xi_a_aw259, 0.001); end
  def test_xi_a_ay259; assert_equal("Industry", worksheet.xi_a_ay259); end
  def test_xi_a_az259; assert_equal("Description", worksheet.xi_a_az259); end
  def test_xi_a_ba259; assert_in_epsilon(2010, worksheet.xi_a_ba259, 0.001); end
  def test_xi_a_bb259; assert_in_epsilon(2015, worksheet.xi_a_bb259, 0.001); end
  def test_xi_a_bc259; assert_in_epsilon(2020, worksheet.xi_a_bc259, 0.001); end
  def test_xi_a_bd259; assert_in_epsilon(2025, worksheet.xi_a_bd259, 0.001); end
  def test_xi_a_be259; assert_in_epsilon(2030, worksheet.xi_a_be259, 0.001); end
  def test_xi_a_bf259; assert_in_epsilon(2035, worksheet.xi_a_bf259, 0.001); end
  def test_xi_a_bg259; assert_in_epsilon(2040, worksheet.xi_a_bg259, 0.001); end
  def test_xi_a_bh259; assert_in_epsilon(2045, worksheet.xi_a_bh259, 0.001); end
  def test_xi_a_bi259; assert_in_epsilon(2050, worksheet.xi_a_bi259, 0.001); end
  def test_xi_a_bk259; assert_equal("Industry", worksheet.xi_a_bk259); end
  def test_xi_a_bl259; assert_equal("Description", worksheet.xi_a_bl259); end
  def test_xi_a_bm259; assert_in_epsilon(2010, worksheet.xi_a_bm259, 0.001); end
  def test_xi_a_bn259; assert_in_epsilon(2015, worksheet.xi_a_bn259, 0.001); end
  def test_xi_a_bo259; assert_in_epsilon(2020, worksheet.xi_a_bo259, 0.001); end
  def test_xi_a_bp259; assert_in_epsilon(2025, worksheet.xi_a_bp259, 0.001); end
  def test_xi_a_bq259; assert_in_epsilon(2030, worksheet.xi_a_bq259, 0.001); end
  def test_xi_a_br259; assert_in_epsilon(2035, worksheet.xi_a_br259, 0.001); end
  def test_xi_a_bs259; assert_in_epsilon(2040, worksheet.xi_a_bs259, 0.001); end
  def test_xi_a_bt259; assert_in_epsilon(2045, worksheet.xi_a_bt259, 0.001); end
  def test_xi_a_bu259; assert_in_epsilon(2050, worksheet.xi_a_bu259, 0.001); end
  def test_xi_a_bw259; assert_equal("Industry", worksheet.xi_a_bw259); end
  def test_xi_a_bx259; assert_equal("Description", worksheet.xi_a_bx259); end
  def test_xi_a_by259; assert_in_epsilon(2010, worksheet.xi_a_by259, 0.001); end
  def test_xi_a_bz259; assert_in_epsilon(2015, worksheet.xi_a_bz259, 0.001); end
  def test_xi_a_ca259; assert_in_epsilon(2020, worksheet.xi_a_ca259, 0.001); end
  def test_xi_a_cb259; assert_in_epsilon(2025, worksheet.xi_a_cb259, 0.001); end
  def test_xi_a_cc259; assert_in_epsilon(2030, worksheet.xi_a_cc259, 0.001); end
  def test_xi_a_cd259; assert_in_epsilon(2035, worksheet.xi_a_cd259, 0.001); end
  def test_xi_a_ce259; assert_in_epsilon(2040, worksheet.xi_a_ce259, 0.001); end
  def test_xi_a_cf259; assert_in_epsilon(2045, worksheet.xi_a_cf259, 0.001); end
  def test_xi_a_cg259; assert_in_epsilon(2050, worksheet.xi_a_cg259, 0.001); end
  def test_xi_a_ci259; assert_equal("Description", worksheet.xi_a_ci259); end
  def test_xi_a_cj259; assert_in_epsilon(2010, worksheet.xi_a_cj259, 0.001); end
  def test_xi_a_ck259; assert_in_epsilon(2015, worksheet.xi_a_ck259, 0.001); end
  def test_xi_a_cl259; assert_in_epsilon(2020, worksheet.xi_a_cl259, 0.001); end
  def test_xi_a_cm259; assert_in_epsilon(2025, worksheet.xi_a_cm259, 0.001); end
  def test_xi_a_cn259; assert_in_epsilon(2030, worksheet.xi_a_cn259, 0.001); end
  def test_xi_a_co259; assert_in_epsilon(2035, worksheet.xi_a_co259, 0.001); end
  def test_xi_a_cp259; assert_in_epsilon(2040, worksheet.xi_a_cp259, 0.001); end
  def test_xi_a_cq259; assert_in_epsilon(2045, worksheet.xi_a_cq259, 0.001); end
  def test_xi_a_cr259; assert_in_epsilon(2050, worksheet.xi_a_cr259, 0.001); end
  def test_xi_a_c260; assert_equal("(ii)", worksheet.xi_a_c260); end
  def test_xi_a_d260; assert_equal("Oxygen Steel", worksheet.xi_a_d260); end
  def test_xi_a_o260; assert_equal("(ii)", worksheet.xi_a_o260); end
  def test_xi_a_p260; assert_equal("Oxygen Steel", worksheet.xi_a_p260); end
  def test_xi_a_q260; assert_in_delta(0.005934201542131165, worksheet.xi_a_q260, 0.001); end
  def test_xi_a_r260; assert_in_delta(0.005934201542131165, worksheet.xi_a_r260, 0.001); end
  def test_xi_a_s260; assert_in_delta(0.005934201542131165, worksheet.xi_a_s260, 0.001); end
  def test_xi_a_t260; assert_in_delta(0.005934201542131165, worksheet.xi_a_t260, 0.001); end
  def test_xi_a_u260; assert_in_delta(0.005934201542131165, worksheet.xi_a_u260, 0.001); end
  def test_xi_a_v260; assert_in_delta(0.005934201542131165, worksheet.xi_a_v260, 0.001); end
  def test_xi_a_w260; assert_in_delta(0.005934201542131165, worksheet.xi_a_w260, 0.001); end
  def test_xi_a_x260; assert_in_delta(0.005934201542131165, worksheet.xi_a_x260, 0.001); end
  def test_xi_a_y260; assert_in_delta(0.005934201542131165, worksheet.xi_a_y260, 0.001); end
  def test_xi_a_aa260; assert_equal("V.01", worksheet.xi_a_aa260); end
  def test_xi_a_ab260; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab260); end
  def test_xi_a_ac260; assert_in_delta(0.08204782728879889, worksheet.xi_a_ac260, 0.001); end
  def test_xi_a_ad260; assert_in_delta(0.08204782728879889, worksheet.xi_a_ad260, 0.001); end
  def test_xi_a_ae260; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae260, 0.001); end
  def test_xi_a_af260; assert_in_delta(0.08204782728879889, worksheet.xi_a_af260, 0.001); end
  def test_xi_a_ag260; assert_in_delta(0.08204782728879889, worksheet.xi_a_ag260, 0.001); end
  def test_xi_a_ah260; assert_in_delta(0.08204782728879889, worksheet.xi_a_ah260, 0.001); end
  def test_xi_a_ai260; assert_in_delta(0.08204782728879889, worksheet.xi_a_ai260, 0.001); end
  def test_xi_a_aj260; assert_in_delta(0.08204782728879889, worksheet.xi_a_aj260, 0.001); end
  def test_xi_a_ak260; assert_in_delta(0.08204782728879889, worksheet.xi_a_ak260, 0.001); end
  def test_xi_a_am260; assert_equal("(ii)", worksheet.xi_a_am260); end
  def test_xi_a_an260; assert_equal("Oxygen Steel", worksheet.xi_a_an260); end
  def test_xi_a_ao260; assert_in_delta(0, (worksheet.xi_a_ao260||0), 0.001); end
  def test_xi_a_ap260; assert_in_delta(0, (worksheet.xi_a_ap260||0), 0.001); end
  def test_xi_a_aq260; assert_in_delta(0, (worksheet.xi_a_aq260||0), 0.001); end
  def test_xi_a_ar260; assert_in_delta(0, (worksheet.xi_a_ar260||0), 0.001); end
  def test_xi_a_as260; assert_in_delta(0, (worksheet.xi_a_as260||0), 0.001); end
  def test_xi_a_at260; assert_in_delta(0, (worksheet.xi_a_at260||0), 0.001); end
  def test_xi_a_au260; assert_in_delta(0, (worksheet.xi_a_au260||0), 0.001); end
  def test_xi_a_av260; assert_in_delta(0, (worksheet.xi_a_av260||0), 0.001); end
  def test_xi_a_aw260; assert_in_delta(0, (worksheet.xi_a_aw260||0), 0.001); end
  def test_xi_a_ay260; assert_equal("(ii)", worksheet.xi_a_ay260); end
  def test_xi_a_az260; assert_equal("Oxygen Steel", worksheet.xi_a_az260); end
  def test_xi_a_bl260; assert_equal("Oxygen Steel", worksheet.xi_a_bl260); end
  def test_xi_a_bx260; assert_equal("Oxygen Steel", worksheet.xi_a_bx260); end
  def test_xi_a_ba260; assert_in_epsilon(7.404573633815222, worksheet.xi_a_ba260, 0.001); end
  def test_xi_a_ac267; assert_in_epsilon(17.667755554147792, worksheet.xi_a_ac267, 0.001); end
  def test_xi_a_bm260; assert_in_delta(0, (worksheet.xi_a_bm260||0), 0.001); end
  def test_xi_a_by260; assert_in_delta(0, (worksheet.xi_a_by260||0), 0.001); end
  def test_xi_a_bb236; assert_in_epsilon(7.404573633815222, worksheet.xi_a_bb236, 0.001); end
  def test_xi_a_bb260; assert_in_epsilon(6.145796116066634, worksheet.xi_a_bb260, 0.001); end
  def test_xi_a_ad267; assert_in_epsilon(17.955346389372075, worksheet.xi_a_ad267, 0.001); end
  def test_xi_a_bn260; assert_in_epsilon(-95.35004051150537, worksheet.xi_a_bn260, 0.001); end
  def test_xi_a_bz260; assert_in_epsilon(170.87669157642063, worksheet.xi_a_bz260, 0.001); end
  def test_xi_a_bc236; assert_in_epsilon(7.404573633815222, worksheet.xi_a_bc236, 0.001); end
  def test_xi_a_bc260; assert_in_epsilon(6.145796116066634, worksheet.xi_a_bc260, 0.001); end
  def test_xi_a_ae267; assert_in_epsilon(17.42991070429268, worksheet.xi_a_ae267, 0.001); end
  def test_xi_a_bo260; assert_in_epsilon(-92.55976775529922, worksheet.xi_a_bo260, 0.001); end
  def test_xi_a_ca260; assert_in_epsilon(168.08641882021448, worksheet.xi_a_ca260, 0.001); end
  def test_xi_a_bd236; assert_in_epsilon(7.404573633815222, worksheet.xi_a_bd236, 0.001); end
  def test_xi_a_bd260; assert_in_epsilon(6.145796116066634, worksheet.xi_a_bd260, 0.001); end
  def test_xi_a_af267; assert_in_epsilon(17.722435711286632, worksheet.xi_a_af267, 0.001); end
  def test_xi_a_bp260; assert_in_epsilon(-94.11319204813333, worksheet.xi_a_bp260, 0.001); end
  def test_xi_a_cb260; assert_in_epsilon(169.63984311304858, worksheet.xi_a_cb260, 0.001); end
  def test_xi_a_be236; assert_in_epsilon(7.404573633815222, worksheet.xi_a_be236, 0.001); end
  def test_xi_a_be260; assert_in_epsilon(6.145796116066634, worksheet.xi_a_be260, 0.001); end
  def test_xi_a_ag267; assert_in_epsilon(15.580054430104807, worksheet.xi_a_ag267, 0.001); end
  def test_xi_a_bq260; assert_in_epsilon(-82.73629418596283, worksheet.xi_a_bq260, 0.001); end
  def test_xi_a_cc260; assert_in_epsilon(158.2629452508781, worksheet.xi_a_cc260, 0.001); end
  def test_xi_a_bf236; assert_in_epsilon(7.404573633815222, worksheet.xi_a_bf236, 0.001); end
  def test_xi_a_bf260; assert_in_epsilon(6.145796116066634, worksheet.xi_a_bf260, 0.001); end
  def test_xi_a_ah267; assert_in_epsilon(14.397923182888775, worksheet.xi_a_ah267, 0.001); end
  def test_xi_a_br260; assert_in_epsilon(-76.45870644871462, worksheet.xi_a_br260, 0.001); end
  def test_xi_a_cd260; assert_in_epsilon(151.98535751362988, worksheet.xi_a_cd260, 0.001); end
  def test_xi_a_bg236; assert_in_epsilon(7.404573633815222, worksheet.xi_a_bg236, 0.001); end
  def test_xi_a_bg260; assert_in_epsilon(6.145796116066634, worksheet.xi_a_bg260, 0.001); end
  def test_xi_a_ai267; assert_in_epsilon(13.306240965237233, worksheet.xi_a_ai267, 0.001); end
  def test_xi_a_bs260; assert_in_epsilon(-70.66143908213365, worksheet.xi_a_bs260, 0.001); end
  def test_xi_a_ce260; assert_in_epsilon(146.1880901470489, worksheet.xi_a_ce260, 0.001); end
  def test_xi_a_bh236; assert_in_epsilon(7.404573633815222, worksheet.xi_a_bh236, 0.001); end
  def test_xi_a_bh260; assert_in_epsilon(6.145796116066634, worksheet.xi_a_bh260, 0.001); end
  def test_xi_a_aj267; assert_in_epsilon(12.21802589642779, worksheet.xi_a_aj267, 0.001); end
  def test_xi_a_bt260; assert_in_epsilon(-64.88258365678644, worksheet.xi_a_bt260, 0.001); end
  def test_xi_a_cf260; assert_in_epsilon(140.4092347217017, worksheet.xi_a_cf260, 0.001); end
  def test_xi_a_bi236; assert_in_epsilon(7.404573633815222, worksheet.xi_a_bi236, 0.001); end
  def test_xi_a_bi260; assert_in_epsilon(6.145796116066634, worksheet.xi_a_bi260, 0.001); end
  def test_xi_a_ak267; assert_in_epsilon(11.099194188006347, worksheet.xi_a_ak267, 0.001); end
  def test_xi_a_ak243; assert_in_epsilon(11.099194188006347, worksheet.xi_a_ak243, 0.001); end
  def test_xi_a_bu236; assert_in_epsilon(346.7125981248591, worksheet.xi_a_bu236, 0.001); end
  def test_xi_a_bu260; assert_in_epsilon(-58.94114168122604, worksheet.xi_a_bu260, 0.001); end
  def test_xi_a_cg260; assert_in_epsilon(134.4677927461413, worksheet.xi_a_cg260, 0.001); end
  def test_xi_a_ci260; assert_equal("Oxygen Steel", worksheet.xi_a_ci260); end
  def test_xi_a_cj260; assert_in_epsilon(6000, worksheet.xi_a_cj260, 0.001); end
  def test_xi_a_ck260; assert_in_epsilon(5000, worksheet.xi_a_ck260, 0.001); end
  def test_xi_a_cl260; assert_in_epsilon(5000, worksheet.xi_a_cl260, 0.001); end
  def test_xi_a_cm260; assert_in_epsilon(5000, worksheet.xi_a_cm260, 0.001); end
  def test_xi_a_cn260; assert_in_epsilon(5000, worksheet.xi_a_cn260, 0.001); end
  def test_xi_a_co260; assert_in_epsilon(5000, worksheet.xi_a_co260, 0.001); end
  def test_xi_a_cp260; assert_in_epsilon(5000, worksheet.xi_a_cp260, 0.001); end
  def test_xi_a_cq260; assert_in_epsilon(5000, worksheet.xi_a_cq260, 0.001); end
  def test_xi_a_cr260; assert_in_epsilon(5000, worksheet.xi_a_cr260, 0.001); end
  def test_xi_a_c261; assert_equal("(iii)", worksheet.xi_a_c261); end
  def test_xi_a_d261; assert_equal("Electric Steel", worksheet.xi_a_d261); end
  def test_xi_a_o261; assert_equal("(iii)", worksheet.xi_a_o261); end
  def test_xi_a_p261; assert_equal("Electric Steel", worksheet.xi_a_p261); end
  def test_xi_a_q261; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q261, 0.001); end
  def test_xi_a_r261; assert_in_delta(0.0024165831003063287, worksheet.xi_a_r261, 0.001); end
  def test_xi_a_s261; assert_in_delta(0.0024165831003063287, worksheet.xi_a_s261, 0.001); end
  def test_xi_a_t261; assert_in_delta(0.0024165831003063287, worksheet.xi_a_t261, 0.001); end
  def test_xi_a_u261; assert_in_delta(0.0024165831003063287, worksheet.xi_a_u261, 0.001); end
  def test_xi_a_v261; assert_in_delta(0.0024165831003063287, worksheet.xi_a_v261, 0.001); end
  def test_xi_a_w261; assert_in_delta(0.0024165831003063287, worksheet.xi_a_w261, 0.001); end
  def test_xi_a_x261; assert_in_delta(0.0024165831003063287, worksheet.xi_a_x261, 0.001); end
  def test_xi_a_y261; assert_in_delta(0.0024165831003063287, worksheet.xi_a_y261, 0.001); end
  def test_xi_a_aa261; assert_equal("V.03", worksheet.xi_a_aa261); end
  def test_xi_a_ab261; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab261); end
  def test_xi_a_ac261; assert_in_delta(0.7978154055943194, worksheet.xi_a_ac261, 0.001); end
  def test_xi_a_ad261; assert_in_delta(0.7978154055943194, worksheet.xi_a_ad261, 0.001); end
  def test_xi_a_ae261; assert_in_delta(0.7978154055943194, worksheet.xi_a_ae261, 0.001); end
  def test_xi_a_af261; assert_in_delta(0.7978154055943194, worksheet.xi_a_af261, 0.001); end
  def test_xi_a_ag261; assert_in_delta(0.7978154055943194, worksheet.xi_a_ag261, 0.001); end
  def test_xi_a_ah261; assert_in_delta(0.7978154055943194, worksheet.xi_a_ah261, 0.001); end
  def test_xi_a_ai261; assert_in_delta(0.7978154055943194, worksheet.xi_a_ai261, 0.001); end
  def test_xi_a_aj261; assert_in_delta(0.7978154055943194, worksheet.xi_a_aj261, 0.001); end
  def test_xi_a_ak261; assert_in_delta(0.7978154055943194, worksheet.xi_a_ak261, 0.001); end
  def test_xi_a_am261; assert_equal("(iii)", worksheet.xi_a_am261); end
  def test_xi_a_an261; assert_equal("Electric Steel", worksheet.xi_a_an261); end
  def test_xi_a_ao261; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao261, 0.001); end
  def test_xi_a_ap261; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap261, 0.001); end
  def test_xi_a_aq261; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq261, 0.001); end
  def test_xi_a_ar261; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar261, 0.001); end
  def test_xi_a_as261; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as261, 0.001); end
  def test_xi_a_at261; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at261, 0.001); end
  def test_xi_a_au261; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au261, 0.001); end
  def test_xi_a_av261; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av261, 0.001); end
  def test_xi_a_aw261; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw261, 0.001); end
  def test_xi_a_ay261; assert_equal("(iii)", worksheet.xi_a_ay261); end
  def test_xi_a_az261; assert_equal("Electric Steel", worksheet.xi_a_az261); end
  def test_xi_a_bl261; assert_equal("Electric Steel", worksheet.xi_a_bl261); end
  def test_xi_a_bx261; assert_equal("Electric Steel", worksheet.xi_a_bx261); end
  def test_xi_a_e261; assert_in_epsilon(2869, worksheet.xi_a_e261, 0.001); end
  def test_xi_a_ba261; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_ba261, 0.001); end
  def test_xi_a_bm261; assert_in_delta(0, (worksheet.xi_a_bm261||0), 0.001); end
  def test_xi_a_by261; assert_in_delta(0, (worksheet.xi_a_by261||0), 0.001); end
  def test_xi_a_bb237; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_bb237, 0.001); end
  def test_xi_a_f261; assert_in_epsilon(3763.88, worksheet.xi_a_f261, 0.001); end
  def test_xi_a_bb261; assert_in_epsilon(2.3958249944359298, worksheet.xi_a_bb261, 0.001); end
  def test_xi_a_bn261; assert_in_epsilon(38.82936817661164, worksheet.xi_a_bn261, 0.001); end
  def test_xi_a_bz261; assert_in_epsilon(-73.00648122518106, worksheet.xi_a_bz261, 0.001); end
  def test_xi_a_bc237; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_bc237, 0.001); end
  def test_xi_a_g261; assert_in_epsilon(3763.88, worksheet.xi_a_g261, 0.001); end
  def test_xi_a_bc261; assert_in_epsilon(2.3958249944359298, worksheet.xi_a_bc261, 0.001); end
  def test_xi_a_bo261; assert_in_epsilon(37.69308624550092, worksheet.xi_a_bo261, 0.001); end
  def test_xi_a_ca261; assert_in_epsilon(-71.87019929407035, worksheet.xi_a_ca261, 0.001); end
  def test_xi_a_bd237; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_bd237, 0.001); end
  def test_xi_a_h261; assert_in_epsilon(3763.88, worksheet.xi_a_h261, 0.001); end
  def test_xi_a_bd261; assert_in_epsilon(2.3958249944359298, worksheet.xi_a_bd261, 0.001); end
  def test_xi_a_bp261; assert_in_epsilon(38.32568675072743, worksheet.xi_a_bp261, 0.001); end
  def test_xi_a_cb261; assert_in_epsilon(-72.50279979929685, worksheet.xi_a_cb261, 0.001); end
  def test_xi_a_be237; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_be237, 0.001); end
  def test_xi_a_i261; assert_in_epsilon(3763.88, worksheet.xi_a_i261, 0.001); end
  def test_xi_a_be261; assert_in_epsilon(2.3958249944359298, worksheet.xi_a_be261, 0.001); end
  def test_xi_a_bq261; assert_in_epsilon(33.69267607314289, worksheet.xi_a_bq261, 0.001); end
  def test_xi_a_cc261; assert_in_epsilon(-67.86978912171232, worksheet.xi_a_cc261, 0.001); end
  def test_xi_a_bf237; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_bf237, 0.001); end
  def test_xi_a_j261; assert_in_epsilon(3763.88, worksheet.xi_a_j261, 0.001); end
  def test_xi_a_bf261; assert_in_epsilon(2.3958249944359298, worksheet.xi_a_bf261, 0.001); end
  def test_xi_a_br261; assert_in_epsilon(31.136255916392372, worksheet.xi_a_br261, 0.001); end
  def test_xi_a_cd261; assert_in_epsilon(-65.3133689649618, worksheet.xi_a_cd261, 0.001); end
  def test_xi_a_bg237; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_bg237, 0.001); end
  def test_xi_a_k261; assert_in_epsilon(3763.88, worksheet.xi_a_k261, 0.001); end
  def test_xi_a_bg261; assert_in_epsilon(2.3958249944359298, worksheet.xi_a_bg261, 0.001); end
  def test_xi_a_bs261; assert_in_epsilon(28.77543647900505, worksheet.xi_a_bs261, 0.001); end
  def test_xi_a_ce261; assert_in_epsilon(-62.952549527574476, worksheet.xi_a_ce261, 0.001); end
  def test_xi_a_bh237; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_bh237, 0.001); end
  def test_xi_a_l261; assert_in_epsilon(3763.88, worksheet.xi_a_l261, 0.001); end
  def test_xi_a_bh261; assert_in_epsilon(2.3958249944359298, worksheet.xi_a_bh261, 0.001); end
  def test_xi_a_bt261; assert_in_epsilon(26.422114930881122, worksheet.xi_a_bt261, 0.001); end
  def test_xi_a_cf261; assert_in_epsilon(-60.599227979450546, worksheet.xi_a_cf261, 0.001); end
  def test_xi_a_bi237; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_bi237, 0.001); end
  def test_xi_a_m261; assert_in_epsilon(3763.88, worksheet.xi_a_m261, 0.001); end
  def test_xi_a_bi261; assert_in_epsilon(2.3958249944359298, worksheet.xi_a_bi261, 0.001); end
  def test_xi_a_bu237; assert_in_epsilon(76.95267691693326, worksheet.xi_a_bu237, 0.001); end
  def test_xi_a_bu261; assert_in_epsilon(24.002583311057947, worksheet.xi_a_bu261, 0.001); end
  def test_xi_a_cg261; assert_in_epsilon(-58.17969635962737, worksheet.xi_a_cg261, 0.001); end
  def test_xi_a_ci261; assert_equal("Electric Steel", worksheet.xi_a_ci261); end
  def test_xi_a_cj261; assert_in_epsilon(3000, worksheet.xi_a_cj261, 0.001); end
  def test_xi_a_ck261; assert_in_epsilon(4000, worksheet.xi_a_ck261, 0.001); end
  def test_xi_a_cl261; assert_in_epsilon(4000, worksheet.xi_a_cl261, 0.001); end
  def test_xi_a_cm261; assert_in_epsilon(4000, worksheet.xi_a_cm261, 0.001); end
  def test_xi_a_cn261; assert_in_epsilon(4000, worksheet.xi_a_cn261, 0.001); end
  def test_xi_a_co261; assert_in_epsilon(4000, worksheet.xi_a_co261, 0.001); end
  def test_xi_a_cp261; assert_in_epsilon(4000, worksheet.xi_a_cp261, 0.001); end
  def test_xi_a_cq261; assert_in_epsilon(4000, worksheet.xi_a_cq261, 0.001); end
  def test_xi_a_cr261; assert_in_epsilon(4000, worksheet.xi_a_cr261, 0.001); end
  def test_xi_a_d262; assert_equal("Total", worksheet.xi_a_d262); end
  def test_xi_a_e262; assert_in_epsilon(8133, worksheet.xi_a_e262, 0.001); end
  def test_xi_a_f262; assert_in_epsilon(8133, worksheet.xi_a_f262, 0.001); end
  def test_xi_a_g262; assert_in_epsilon(8133, worksheet.xi_a_g262, 0.001); end
  def test_xi_a_h262; assert_in_epsilon(8133, worksheet.xi_a_h262, 0.001); end
  def test_xi_a_i262; assert_in_epsilon(8133, worksheet.xi_a_i262, 0.001); end
  def test_xi_a_j262; assert_in_epsilon(8133, worksheet.xi_a_j262, 0.001); end
  def test_xi_a_k262; assert_in_epsilon(8133, worksheet.xi_a_k262, 0.001); end
  def test_xi_a_l262; assert_in_epsilon(8133, worksheet.xi_a_l262, 0.001); end
  def test_xi_a_m262; assert_in_epsilon(8133, worksheet.xi_a_m262, 0.001); end
  def test_xi_a_o262; assert_equal("Total", worksheet.xi_a_o262); end
  def test_xi_a_aa262; assert_equal("V.05", worksheet.xi_a_aa262); end
  def test_xi_a_ab262; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab262); end
  def test_xi_a_ac262; assert_in_delta(0.21102564883744446, worksheet.xi_a_ac262, 0.001); end
  def test_xi_a_ad262; assert_in_delta(0.21102564883744446, worksheet.xi_a_ad262, 0.001); end
  def test_xi_a_ae262; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae262, 0.001); end
  def test_xi_a_af262; assert_in_delta(0.21102564883744446, worksheet.xi_a_af262, 0.001); end
  def test_xi_a_ag262; assert_in_delta(0.21102564883744446, worksheet.xi_a_ag262, 0.001); end
  def test_xi_a_ah262; assert_in_delta(0.21102564883744446, worksheet.xi_a_ah262, 0.001); end
  def test_xi_a_ai262; assert_in_delta(0.21102564883744446, worksheet.xi_a_ai262, 0.001); end
  def test_xi_a_aj262; assert_in_delta(0.21102564883744446, worksheet.xi_a_aj262, 0.001); end
  def test_xi_a_ak262; assert_in_delta(0.21102564883744446, worksheet.xi_a_ak262, 0.001); end
  def test_xi_a_am262; assert_equal("Total", worksheet.xi_a_am262); end
  def test_xi_a_ay262; assert_equal("Total", worksheet.xi_a_ay262); end
  def test_xi_a_ba262; assert_in_epsilon(9.230780077441661, worksheet.xi_a_ba262, 0.001); end
  def test_xi_a_bb262; assert_in_epsilon(8.541621110502565, worksheet.xi_a_bb262, 0.001); end
  def test_xi_a_bc262; assert_in_epsilon(8.541621110502565, worksheet.xi_a_bc262, 0.001); end
  def test_xi_a_bd262; assert_in_epsilon(8.541621110502565, worksheet.xi_a_bd262, 0.001); end
  def test_xi_a_be262; assert_in_epsilon(8.541621110502565, worksheet.xi_a_be262, 0.001); end
  def test_xi_a_bf262; assert_in_epsilon(8.541621110502565, worksheet.xi_a_bf262, 0.001); end
  def test_xi_a_bg262; assert_in_epsilon(8.541621110502565, worksheet.xi_a_bg262, 0.001); end
  def test_xi_a_bh262; assert_in_epsilon(8.541621110502565, worksheet.xi_a_bh262, 0.001); end
  def test_xi_a_bl262; assert_equal("Total", worksheet.xi_a_bl262); end
  def test_xi_a_bm262; assert_in_delta(0, (worksheet.xi_a_bm262||0), 0.001); end
  def test_xi_a_bn262; assert_in_epsilon(-56.52067233489373, worksheet.xi_a_bn262, 0.001); end
  def test_xi_a_bo262; assert_in_epsilon(-54.8666815097983, worksheet.xi_a_bo262, 0.001); end
  def test_xi_a_bp262; assert_in_epsilon(-55.7875052974059, worksheet.xi_a_bp262, 0.001); end
  def test_xi_a_bq262; assert_in_epsilon(-49.04361811281994, worksheet.xi_a_bq262, 0.001); end
  def test_xi_a_br262; assert_in_epsilon(-45.32245053232225, worksheet.xi_a_br262, 0.001); end
  def test_xi_a_bs262; assert_in_epsilon(-41.8860026031286, worksheet.xi_a_bs262, 0.001); end
  def test_xi_a_bt262; assert_in_epsilon(-38.460468725905315, worksheet.xi_a_bt262, 0.001); end
  def test_xi_a_bu262; assert_in_epsilon(-34.938558370168096, worksheet.xi_a_bu262, 0.001); end
  def test_xi_a_bx262; assert_equal("Total", worksheet.xi_a_bx262); end
  def test_xi_a_by262; assert_in_delta(0, (worksheet.xi_a_by262||0), 0.001); end
  def test_xi_a_bz262; assert_in_epsilon(97.87021035123956, worksheet.xi_a_bz262, 0.001); end
  def test_xi_a_ca262; assert_in_epsilon(96.21621952614413, worksheet.xi_a_ca262, 0.001); end
  def test_xi_a_cb262; assert_in_epsilon(97.13704331375173, worksheet.xi_a_cb262, 0.001); end
  def test_xi_a_cc262; assert_in_epsilon(90.39315612916577, worksheet.xi_a_cc262, 0.001); end
  def test_xi_a_cd262; assert_in_epsilon(86.67198854866808, worksheet.xi_a_cd262, 0.001); end
  def test_xi_a_ce262; assert_in_epsilon(83.23554061947443, worksheet.xi_a_ce262, 0.001); end
  def test_xi_a_cf262; assert_in_epsilon(79.81000674225115, worksheet.xi_a_cf262, 0.001); end
  def test_xi_a_cg262; assert_in_epsilon(76.28809638651393, worksheet.xi_a_cg262, 0.001); end
  def test_xi_a_q263; assert_in_epsilon(38.17081383255731, worksheet.xi_a_q263, 0.001); end
  def test_xi_a_r263; assert_in_epsilon(35.022967441337094, worksheet.xi_a_r263, 0.001); end
  def test_xi_a_s263; assert_in_epsilon(35.022967441337094, worksheet.xi_a_s263, 0.001); end
  def test_xi_a_t263; assert_in_epsilon(35.022967441337094, worksheet.xi_a_t263, 0.001); end
  def test_xi_a_u263; assert_in_epsilon(35.022967441337094, worksheet.xi_a_u263, 0.001); end
  def test_xi_a_v263; assert_in_epsilon(35.022967441337094, worksheet.xi_a_v263, 0.001); end
  def test_xi_a_w263; assert_in_epsilon(35.022967441337094, worksheet.xi_a_w263, 0.001); end
  def test_xi_a_x263; assert_in_epsilon(35.022967441337094, worksheet.xi_a_x263, 0.001); end
  def test_xi_a_y263; assert_in_epsilon(35.022967441337094, worksheet.xi_a_y263, 0.001); end
  def test_xi_a_aa263; assert_equal("V.04", worksheet.xi_a_aa263); end
  def test_xi_a_ab263; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab263); end
  def test_xi_a_ac263; assert_in_delta(0.07696335047929354, worksheet.xi_a_ac263, 0.001); end
  def test_xi_a_ad263; assert_in_delta(0.07696335047929354, worksheet.xi_a_ad263, 0.001); end
  def test_xi_a_ae263; assert_in_delta(0.07696335047929354, worksheet.xi_a_ae263, 0.001); end
  def test_xi_a_af263; assert_in_delta(0.07696335047929354, worksheet.xi_a_af263, 0.001); end
  def test_xi_a_ag263; assert_in_delta(0.07696335047929354, worksheet.xi_a_ag263, 0.001); end
  def test_xi_a_ah263; assert_in_delta(0.07696335047929354, worksheet.xi_a_ah263, 0.001); end
  def test_xi_a_ai263; assert_in_delta(0.07696335047929354, worksheet.xi_a_ai263, 0.001); end
  def test_xi_a_aj263; assert_in_delta(0.07696335047929354, worksheet.xi_a_aj263, 0.001); end
  def test_xi_a_ak263; assert_in_delta(0.07696335047929354, worksheet.xi_a_ak263, 0.001); end
  def test_xi_a_bk263; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bk263); end
  def test_xi_a_bl263; assert_equal("Oxygen Steel", worksheet.xi_a_bl263); end
  def test_xi_a_bw263; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bw263); end
  def test_xi_a_bx263; assert_equal("Oxygen Steel", worksheet.xi_a_bx263); end
  def test_xi_a_by263; assert_in_delta(0, (worksheet.xi_a_by263||0), 0.001); end
  def test_xi_a_bz263; assert_in_epsilon(170.87669157642063, worksheet.xi_a_bz263, 0.001); end
  def test_xi_a_ca263; assert_in_epsilon(168.08641882021448, worksheet.xi_a_ca263, 0.001); end
  def test_xi_a_cb263; assert_in_epsilon(169.63984311304858, worksheet.xi_a_cb263, 0.001); end
  def test_xi_a_cc263; assert_in_epsilon(158.2629452508781, worksheet.xi_a_cc263, 0.001); end
  def test_xi_a_cd263; assert_in_epsilon(151.98535751362988, worksheet.xi_a_cd263, 0.001); end
  def test_xi_a_ce263; assert_in_epsilon(146.1880901470489, worksheet.xi_a_ce263, 0.001); end
  def test_xi_a_cf263; assert_in_epsilon(140.4092347217017, worksheet.xi_a_cf263, 0.001); end
  def test_xi_a_cg263; assert_in_epsilon(134.4677927461413, worksheet.xi_a_cg263, 0.001); end
  def test_xi_a_aa264; assert_equal("v.06", worksheet.xi_a_aa264); end
  def test_xi_a_ab264; assert_equal("Blast furnace gas", worksheet.xi_a_ab264); end
  def test_xi_a_ac264; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ac264, 0.001); end
  def test_xi_a_ad264; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ad264, 0.001); end
  def test_xi_a_ae264; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ae264, 0.001); end
  def test_xi_a_af264; assert_in_delta(-0.1132646069606094, worksheet.xi_a_af264, 0.001); end
  def test_xi_a_ag264; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ag264, 0.001); end
  def test_xi_a_ah264; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ah264, 0.001); end
  def test_xi_a_ai264; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ai264, 0.001); end
  def test_xi_a_aj264; assert_in_delta(-0.1132646069606094, worksheet.xi_a_aj264, 0.001); end
  def test_xi_a_ak264; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ak264, 0.001); end
  def test_xi_a_am264; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am264); end
  def test_xi_a_bl264; assert_equal("Electric Steel", worksheet.xi_a_bl264); end
  def test_xi_a_bx264; assert_equal("Electric Steel", worksheet.xi_a_bx264); end
  def test_xi_a_by264; assert_in_delta(0, (worksheet.xi_a_by264||0), 0.001); end
  def test_xi_a_bz264; assert_in_epsilon(-73.00648122518106, worksheet.xi_a_bz264, 0.001); end
  def test_xi_a_ca264; assert_in_epsilon(-71.87019929407035, worksheet.xi_a_ca264, 0.001); end
  def test_xi_a_cb264; assert_in_epsilon(-72.50279979929685, worksheet.xi_a_cb264, 0.001); end
  def test_xi_a_cc264; assert_in_epsilon(-67.86978912171232, worksheet.xi_a_cc264, 0.001); end
  def test_xi_a_cd264; assert_in_epsilon(-65.3133689649618, worksheet.xi_a_cd264, 0.001); end
  def test_xi_a_ce264; assert_in_epsilon(-62.952549527574476, worksheet.xi_a_ce264, 0.001); end
  def test_xi_a_cf264; assert_in_epsilon(-60.599227979450546, worksheet.xi_a_cf264, 0.001); end
  def test_xi_a_cg264; assert_in_epsilon(-58.17969635962737, worksheet.xi_a_cg264, 0.001); end
  def test_xi_a_aa265; assert_equal("V.07", worksheet.xi_a_aa265); end
  def test_xi_a_ab265; assert_equal("Heat transport", worksheet.xi_a_ab265); end
  def test_xi_a_ac265; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ac265, 0.001); end
  def test_xi_a_ad265; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ad265, 0.001); end
  def test_xi_a_ae265; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae265, 0.001); end
  def test_xi_a_af265; assert_in_delta(-0.05458762523924703, worksheet.xi_a_af265, 0.001); end
  def test_xi_a_ag265; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ag265, 0.001); end
  def test_xi_a_ah265; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ah265, 0.001); end
  def test_xi_a_ai265; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ai265, 0.001); end
  def test_xi_a_aj265; assert_in_delta(-0.05458762523924703, worksheet.xi_a_aj265, 0.001); end
  def test_xi_a_ak265; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ak265, 0.001); end
  def test_xi_a_am265; assert_equal("Industry", worksheet.xi_a_am265); end
  def test_xi_a_an265; assert_equal("Description", worksheet.xi_a_an265); end
  def test_xi_a_ao265; assert_in_epsilon(2010, worksheet.xi_a_ao265, 0.001); end
  def test_xi_a_ap265; assert_in_epsilon(2015, worksheet.xi_a_ap265, 0.001); end
  def test_xi_a_aq265; assert_in_epsilon(2020, worksheet.xi_a_aq265, 0.001); end
  def test_xi_a_ar265; assert_in_epsilon(2025, worksheet.xi_a_ar265, 0.001); end
  def test_xi_a_as265; assert_in_epsilon(2030, worksheet.xi_a_as265, 0.001); end
  def test_xi_a_at265; assert_in_epsilon(2035, worksheet.xi_a_at265, 0.001); end
  def test_xi_a_au265; assert_in_epsilon(2040, worksheet.xi_a_au265, 0.001); end
  def test_xi_a_av265; assert_in_epsilon(2045, worksheet.xi_a_av265, 0.001); end
  def test_xi_a_aw265; assert_in_epsilon(2050, worksheet.xi_a_aw265, 0.001); end
  def test_xi_a_bl265; assert_equal("Total", worksheet.xi_a_bl265); end
  def test_xi_a_bm265; assert_in_delta(0, (worksheet.xi_a_bm265||0), 0.001); end
  def test_xi_a_bn265; assert_in_epsilon(-56.52067233489373, worksheet.xi_a_bn265, 0.001); end
  def test_xi_a_bo265; assert_in_epsilon(-54.8666815097983, worksheet.xi_a_bo265, 0.001); end
  def test_xi_a_bp265; assert_in_epsilon(-55.7875052974059, worksheet.xi_a_bp265, 0.001); end
  def test_xi_a_bq265; assert_in_epsilon(-49.04361811281994, worksheet.xi_a_bq265, 0.001); end
  def test_xi_a_br265; assert_in_epsilon(-45.32245053232225, worksheet.xi_a_br265, 0.001); end
  def test_xi_a_bs265; assert_in_epsilon(-41.8860026031286, worksheet.xi_a_bs265, 0.001); end
  def test_xi_a_bt265; assert_in_epsilon(-38.460468725905315, worksheet.xi_a_bt265, 0.001); end
  def test_xi_a_bx265; assert_equal("Total", worksheet.xi_a_bx265); end
  def test_xi_a_by265; assert_in_delta(0, (worksheet.xi_a_by265||0), 0.001); end
  def test_xi_a_bz265; assert_in_epsilon(97.87021035123956, worksheet.xi_a_bz265, 0.001); end
  def test_xi_a_ca265; assert_in_epsilon(96.21621952614413, worksheet.xi_a_ca265, 0.001); end
  def test_xi_a_cb265; assert_in_epsilon(97.13704331375173, worksheet.xi_a_cb265, 0.001); end
  def test_xi_a_cc265; assert_in_epsilon(90.39315612916577, worksheet.xi_a_cc265, 0.001); end
  def test_xi_a_cd265; assert_in_epsilon(86.67198854866808, worksheet.xi_a_cd265, 0.001); end
  def test_xi_a_ce265; assert_in_epsilon(83.23554061947443, worksheet.xi_a_ce265, 0.001); end
  def test_xi_a_cf265; assert_in_epsilon(79.81000674225115, worksheet.xi_a_cf265, 0.001); end
  def test_xi_a_aa266; assert_equal("Intensity", worksheet.xi_a_aa266); end
  def test_xi_a_ab266; assert_equal("Intensity", worksheet.xi_a_ab266); end
  def test_xi_a_ac266; assert_in_delta(0.21950983912607056, worksheet.xi_a_ac266, 0.001); end
  def test_xi_a_ad266; assert_in_delta(0.21950983912607056, worksheet.xi_a_ad266, 0.001); end
  def test_xi_a_ae266; assert_in_delta(0.21950983912607056, worksheet.xi_a_ae266, 0.001); end
  def test_xi_a_af266; assert_in_delta(0.21950983912607056, worksheet.xi_a_af266, 0.001); end
  def test_xi_a_ag266; assert_in_delta(0.21950983912607056, worksheet.xi_a_ag266, 0.001); end
  def test_xi_a_ah266; assert_in_delta(0.21950983912607056, worksheet.xi_a_ah266, 0.001); end
  def test_xi_a_ai266; assert_in_delta(0.21950983912607056, worksheet.xi_a_ai266, 0.001); end
  def test_xi_a_aj266; assert_in_delta(0.21950983912607056, worksheet.xi_a_aj266, 0.001); end
  def test_xi_a_ak266; assert_in_delta(0.21950983912607056, worksheet.xi_a_ak266, 0.001); end
  def test_xi_a_am266; assert_equal("(ii)", worksheet.xi_a_am266); end
  def test_xi_a_an266; assert_equal("Oxygen Steel", worksheet.xi_a_an266); end
  def test_xi_a_ao266; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao266, 0.001); end
  def test_xi_a_ap266; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap266, 0.001); end
  def test_xi_a_aq266; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq266, 0.001); end
  def test_xi_a_ar266; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar266, 0.001); end
  def test_xi_a_as266; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as266, 0.001); end
  def test_xi_a_at266; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at266, 0.001); end
  def test_xi_a_au266; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au266, 0.001); end
  def test_xi_a_av266; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av266, 0.001); end
  def test_xi_a_aw266; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw266, 0.001); end
  def test_xi_a_aa267; assert_equal("Cost", worksheet.xi_a_aa267); end
  def test_xi_a_ab267; assert_equal("Cost", worksheet.xi_a_ab267); end
  def test_xi_a_am267; assert_equal("(iii)", worksheet.xi_a_am267); end
  def test_xi_a_an267; assert_equal("Electric Steel", worksheet.xi_a_an267); end
  def test_xi_a_ao267; assert_in_delta(0, (worksheet.xi_a_ao267||0), 0.001); end
  def test_xi_a_ap267; assert_in_delta(0, (worksheet.xi_a_ap267||0), 0.001); end
  def test_xi_a_aq267; assert_in_delta(0, (worksheet.xi_a_aq267||0), 0.001); end
  def test_xi_a_ar267; assert_in_delta(0, (worksheet.xi_a_ar267||0), 0.001); end
  def test_xi_a_as267; assert_in_delta(0, (worksheet.xi_a_as267||0), 0.001); end
  def test_xi_a_at267; assert_in_delta(0, (worksheet.xi_a_at267||0), 0.001); end
  def test_xi_a_au267; assert_in_delta(0, (worksheet.xi_a_au267||0), 0.001); end
  def test_xi_a_av267; assert_in_delta(0, (worksheet.xi_a_av267||0), 0.001); end
  def test_xi_a_aw267; assert_in_delta(0, (worksheet.xi_a_aw267||0), 0.001); end
  def test_xi_a_am268; assert_equal("Total", worksheet.xi_a_am268); end
  def test_xi_a_z269; assert_equal("Electrosteel", worksheet.xi_a_z269); end
  def test_xi_a_aa269; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa269); end
  def test_xi_a_aa270; assert_equal("Vector", worksheet.xi_a_aa270); end
  def test_xi_a_ab270; assert_equal("Description", worksheet.xi_a_ab270); end
  def test_xi_a_ac270; assert_in_epsilon(2010, worksheet.xi_a_ac270, 0.001); end
  def test_xi_a_ad270; assert_in_epsilon(2015, worksheet.xi_a_ad270, 0.001); end
  def test_xi_a_ae270; assert_in_epsilon(2020, worksheet.xi_a_ae270, 0.001); end
  def test_xi_a_af270; assert_in_epsilon(2025, worksheet.xi_a_af270, 0.001); end
  def test_xi_a_ag270; assert_in_epsilon(2030, worksheet.xi_a_ag270, 0.001); end
  def test_xi_a_ah270; assert_in_epsilon(2035, worksheet.xi_a_ah270, 0.001); end
  def test_xi_a_ai270; assert_in_epsilon(2040, worksheet.xi_a_ai270, 0.001); end
  def test_xi_a_aj270; assert_in_epsilon(2045, worksheet.xi_a_aj270, 0.001); end
  def test_xi_a_ak270; assert_in_epsilon(2050, worksheet.xi_a_ak270, 0.001); end
  def test_xi_a_aa271; assert_equal("V.01", worksheet.xi_a_aa271); end
  def test_xi_a_ab271; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab271); end
  def test_xi_a_ac271; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac271, 0.001); end
  def test_xi_a_ad271; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad271, 0.001); end
  def test_xi_a_ae271; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae271, 0.001); end
  def test_xi_a_af271; assert_in_delta(0.37661125507716986, worksheet.xi_a_af271, 0.001); end
  def test_xi_a_ag271; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag271, 0.001); end
  def test_xi_a_ah271; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah271, 0.001); end
  def test_xi_a_ai271; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai271, 0.001); end
  def test_xi_a_aj271; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj271, 0.001); end
  def test_xi_a_ak271; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak271, 0.001); end
  def test_xi_a_aa272; assert_equal("V.03", worksheet.xi_a_aa272); end
  def test_xi_a_ab272; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab272); end
  def test_xi_a_ac272; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac272, 0.001); end
  def test_xi_a_ad272; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad272, 0.001); end
  def test_xi_a_ae272; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae272, 0.001); end
  def test_xi_a_af272; assert_in_delta(0.04200640884510868, worksheet.xi_a_af272, 0.001); end
  def test_xi_a_ag272; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag272, 0.001); end
  def test_xi_a_ah272; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah272, 0.001); end
  def test_xi_a_ai272; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai272, 0.001); end
  def test_xi_a_aj272; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj272, 0.001); end
  def test_xi_a_ak272; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak272, 0.001); end
  def test_xi_a_aa273; assert_equal("V.05", worksheet.xi_a_aa273); end
  def test_xi_a_ab273; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab273); end
  def test_xi_a_ac273; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac273, 0.001); end
  def test_xi_a_ad273; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad273, 0.001); end
  def test_xi_a_ae273; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae273, 0.001); end
  def test_xi_a_af273; assert_in_delta(0.5722074496017227, worksheet.xi_a_af273, 0.001); end
  def test_xi_a_ag273; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag273, 0.001); end
  def test_xi_a_ah273; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah273, 0.001); end
  def test_xi_a_ai273; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai273, 0.001); end
  def test_xi_a_aj273; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj273, 0.001); end
  def test_xi_a_ak273; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak273, 0.001); end
  def test_xi_a_aa274; assert_equal("V.04", worksheet.xi_a_aa274); end
  def test_xi_a_ab274; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab274); end
  def test_xi_a_ac274; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac274, 0.001); end
  def test_xi_a_ad274; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad274, 0.001); end
  def test_xi_a_ae274; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae274, 0.001); end
  def test_xi_a_af274; assert_in_delta(0.009174886475998728, worksheet.xi_a_af274, 0.001); end
  def test_xi_a_ag274; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag274, 0.001); end
  def test_xi_a_ah274; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah274, 0.001); end
  def test_xi_a_ai274; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai274, 0.001); end
  def test_xi_a_aj274; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj274, 0.001); end
  def test_xi_a_ak274; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak274, 0.001); end
  def test_xi_a_aa275; assert_equal("V.03", worksheet.xi_a_aa275); end
  def test_xi_a_ab275; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab275); end
  def test_xi_a_ac275; assert_in_delta(0, (worksheet.xi_a_ac275||0), 0.001); end
  def test_xi_a_ad275; assert_in_delta(0, (worksheet.xi_a_ad275||0), 0.001); end
  def test_xi_a_ae275; assert_in_delta(0, (worksheet.xi_a_ae275||0), 0.001); end
  def test_xi_a_af275; assert_in_delta(0, (worksheet.xi_a_af275||0), 0.001); end
  def test_xi_a_ag275; assert_in_delta(0, (worksheet.xi_a_ag275||0), 0.001); end
  def test_xi_a_ah275; assert_in_delta(0, (worksheet.xi_a_ah275||0), 0.001); end
  def test_xi_a_ai275; assert_in_delta(0, (worksheet.xi_a_ai275||0), 0.001); end
  def test_xi_a_aj275; assert_in_delta(0, (worksheet.xi_a_aj275||0), 0.001); end
  def test_xi_a_ak275; assert_in_delta(0, (worksheet.xi_a_ak275||0), 0.001); end
  def test_xi_a_aa276; assert_equal("V.07", worksheet.xi_a_aa276); end
  def test_xi_a_ab276; assert_equal("Heat transport", worksheet.xi_a_ab276); end
  def test_xi_a_ac276; assert_in_delta(0, (worksheet.xi_a_ac276||0), 0.001); end
  def test_xi_a_ad276; assert_in_delta(0, (worksheet.xi_a_ad276||0), 0.001); end
  def test_xi_a_ae276; assert_in_delta(0, (worksheet.xi_a_ae276||0), 0.001); end
  def test_xi_a_af276; assert_in_delta(0, (worksheet.xi_a_af276||0), 0.001); end
  def test_xi_a_ag276; assert_in_delta(0, (worksheet.xi_a_ag276||0), 0.001); end
  def test_xi_a_ah276; assert_in_delta(0, (worksheet.xi_a_ah276||0), 0.001); end
  def test_xi_a_ai276; assert_in_delta(0, (worksheet.xi_a_ai276||0), 0.001); end
  def test_xi_a_aj276; assert_in_delta(0, (worksheet.xi_a_aj276||0), 0.001); end
  def test_xi_a_ak276; assert_in_delta(0, (worksheet.xi_a_ak276||0), 0.001); end
  def test_xi_a_aa277; assert_equal("Intensity", worksheet.xi_a_aa277); end
  def test_xi_a_ab277; assert_equal("Intensity", worksheet.xi_a_ab277); end
  def test_xi_a_ac277; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac277, 0.001); end
  def test_xi_a_ad277; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad277, 0.001); end
  def test_xi_a_ae277; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae277, 0.001); end
  def test_xi_a_af277; assert_in_delta(0.1305543295866784, worksheet.xi_a_af277, 0.001); end
  def test_xi_a_ag277; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag277, 0.001); end
  def test_xi_a_ah277; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah277, 0.001); end
  def test_xi_a_ai277; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai277, 0.001); end
  def test_xi_a_aj277; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj277, 0.001); end
  def test_xi_a_ak277; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak277, 0.001); end
  def test_xi_a_aa278; assert_equal("Cost", worksheet.xi_a_aa278); end
  def test_xi_a_ab278; assert_equal("Cost", worksheet.xi_a_ab278); end
  def test_xi_a_ac278; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac278, 0.001); end
  def test_xi_a_ad278; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad278, 0.001); end
  def test_xi_a_ae278; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae278, 0.001); end
  def test_xi_a_af278; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af278, 0.001); end
  def test_xi_a_ag278; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag278, 0.001); end
  def test_xi_a_ah278; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah278, 0.001); end
  def test_xi_a_ai278; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai278, 0.001); end
  def test_xi_a_aj278; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj278, 0.001); end
  def test_xi_a_ak278; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak278, 0.001); end
  def test_xi_a_c280; assert_equal("Product mix:  increase of hard steal", worksheet.xi_a_c280); end
  def test_xi_a_b281; assert_in_delta(1, worksheet.xi_a_b281, 0.001); end
  def test_xi_a_c281; assert_equal("Output Growth (kt)", worksheet.xi_a_c281); end
  def test_xi_a_n281; assert_in_epsilon(2, worksheet.xi_a_n281, 0.001); end
  def test_xi_a_o281; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_a_o281); end
  def test_xi_a_z281; assert_in_epsilon(3, worksheet.xi_a_z281, 0.001); end
  def test_xi_a_aa281; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa281); end
  def test_xi_a_al281; assert_in_epsilon(4, worksheet.xi_a_al281, 0.001); end
  def test_xi_a_am281; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am281); end
  def test_xi_a_ay281; assert_in_epsilon(5, worksheet.xi_a_ay281, 0.001); end
  def test_xi_a_az281; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az281); end
  def test_xi_a_bk281; assert_in_epsilon(6, worksheet.xi_a_bk281, 0.001); end
  def test_xi_a_bl281; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl281); end
  def test_xi_a_bw281; assert_in_epsilon(7, worksheet.xi_a_bw281, 0.001); end
  def test_xi_a_bx281; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx281); end
  def test_xi_a_ci281; assert_equal("Capacity", worksheet.xi_a_ci281); end
  def test_xi_a_c282; assert_equal("Product type", worksheet.xi_a_c282); end
  def test_xi_a_d282; assert_equal("Description", worksheet.xi_a_d282); end
  def test_xi_a_e282; assert_in_epsilon(2010, worksheet.xi_a_e282, 0.001); end
  def test_xi_a_f282; assert_in_epsilon(2015, worksheet.xi_a_f282, 0.001); end
  def test_xi_a_g282; assert_in_epsilon(2020, worksheet.xi_a_g282, 0.001); end
  def test_xi_a_h282; assert_in_epsilon(2025, worksheet.xi_a_h282, 0.001); end
  def test_xi_a_i282; assert_in_epsilon(2030, worksheet.xi_a_i282, 0.001); end
  def test_xi_a_j282; assert_in_epsilon(2035, worksheet.xi_a_j282, 0.001); end
  def test_xi_a_k282; assert_in_epsilon(2040, worksheet.xi_a_k282, 0.001); end
  def test_xi_a_l282; assert_in_epsilon(2045, worksheet.xi_a_l282, 0.001); end
  def test_xi_a_m282; assert_in_epsilon(2050, worksheet.xi_a_m282, 0.001); end
  def test_xi_a_o282; assert_equal("Industry", worksheet.xi_a_o282); end
  def test_xi_a_p282; assert_equal("Description", worksheet.xi_a_p282); end
  def test_xi_a_q282; assert_in_epsilon(2010, worksheet.xi_a_q282, 0.001); end
  def test_xi_a_r282; assert_in_epsilon(2015, worksheet.xi_a_r282, 0.001); end
  def test_xi_a_s282; assert_in_epsilon(2020, worksheet.xi_a_s282, 0.001); end
  def test_xi_a_t282; assert_in_epsilon(2025, worksheet.xi_a_t282, 0.001); end
  def test_xi_a_u282; assert_in_epsilon(2030, worksheet.xi_a_u282, 0.001); end
  def test_xi_a_v282; assert_in_epsilon(2035, worksheet.xi_a_v282, 0.001); end
  def test_xi_a_w282; assert_in_epsilon(2040, worksheet.xi_a_w282, 0.001); end
  def test_xi_a_x282; assert_in_epsilon(2045, worksheet.xi_a_x282, 0.001); end
  def test_xi_a_y282; assert_in_epsilon(2050, worksheet.xi_a_y282, 0.001); end
  def test_xi_a_z282; assert_equal("Oxygensteel", worksheet.xi_a_z282); end
  def test_xi_a_aa282; assert_equal("Vector", worksheet.xi_a_aa282); end
  def test_xi_a_ab282; assert_equal("Description", worksheet.xi_a_ab282); end
  def test_xi_a_ac282; assert_in_epsilon(2010, worksheet.xi_a_ac282, 0.001); end
  def test_xi_a_ad282; assert_in_epsilon(2015, worksheet.xi_a_ad282, 0.001); end
  def test_xi_a_ae282; assert_in_epsilon(2020, worksheet.xi_a_ae282, 0.001); end
  def test_xi_a_af282; assert_in_epsilon(2025, worksheet.xi_a_af282, 0.001); end
  def test_xi_a_ag282; assert_in_epsilon(2030, worksheet.xi_a_ag282, 0.001); end
  def test_xi_a_ah282; assert_in_epsilon(2035, worksheet.xi_a_ah282, 0.001); end
  def test_xi_a_ai282; assert_in_epsilon(2040, worksheet.xi_a_ai282, 0.001); end
  def test_xi_a_aj282; assert_in_epsilon(2045, worksheet.xi_a_aj282, 0.001); end
  def test_xi_a_ak282; assert_in_epsilon(2050, worksheet.xi_a_ak282, 0.001); end
  def test_xi_a_am282; assert_equal("Industry", worksheet.xi_a_am282); end
  def test_xi_a_an282; assert_equal("Description", worksheet.xi_a_an282); end
  def test_xi_a_ao282; assert_in_epsilon(2010, worksheet.xi_a_ao282, 0.001); end
  def test_xi_a_ap282; assert_in_epsilon(2015, worksheet.xi_a_ap282, 0.001); end
  def test_xi_a_aq282; assert_in_epsilon(2020, worksheet.xi_a_aq282, 0.001); end
  def test_xi_a_ar282; assert_in_epsilon(2025, worksheet.xi_a_ar282, 0.001); end
  def test_xi_a_as282; assert_in_epsilon(2030, worksheet.xi_a_as282, 0.001); end
  def test_xi_a_at282; assert_in_epsilon(2035, worksheet.xi_a_at282, 0.001); end
  def test_xi_a_au282; assert_in_epsilon(2040, worksheet.xi_a_au282, 0.001); end
  def test_xi_a_av282; assert_in_epsilon(2045, worksheet.xi_a_av282, 0.001); end
  def test_xi_a_aw282; assert_in_epsilon(2050, worksheet.xi_a_aw282, 0.001); end
  def test_xi_a_ay282; assert_equal("Industry", worksheet.xi_a_ay282); end
  def test_xi_a_az282; assert_equal("Description", worksheet.xi_a_az282); end
  def test_xi_a_ba282; assert_in_epsilon(2010, worksheet.xi_a_ba282, 0.001); end
  def test_xi_a_bb282; assert_in_epsilon(2015, worksheet.xi_a_bb282, 0.001); end
  def test_xi_a_bc282; assert_in_epsilon(2020, worksheet.xi_a_bc282, 0.001); end
  def test_xi_a_bd282; assert_in_epsilon(2025, worksheet.xi_a_bd282, 0.001); end
  def test_xi_a_be282; assert_in_epsilon(2030, worksheet.xi_a_be282, 0.001); end
  def test_xi_a_bf282; assert_in_epsilon(2035, worksheet.xi_a_bf282, 0.001); end
  def test_xi_a_bg282; assert_in_epsilon(2040, worksheet.xi_a_bg282, 0.001); end
  def test_xi_a_bh282; assert_in_epsilon(2045, worksheet.xi_a_bh282, 0.001); end
  def test_xi_a_bi282; assert_in_epsilon(2050, worksheet.xi_a_bi282, 0.001); end
  def test_xi_a_bk282; assert_equal("Industry", worksheet.xi_a_bk282); end
  def test_xi_a_bl282; assert_equal("Description", worksheet.xi_a_bl282); end
  def test_xi_a_bm282; assert_in_epsilon(2010, worksheet.xi_a_bm282, 0.001); end
  def test_xi_a_bn282; assert_in_epsilon(2015, worksheet.xi_a_bn282, 0.001); end
  def test_xi_a_bo282; assert_in_epsilon(2020, worksheet.xi_a_bo282, 0.001); end
  def test_xi_a_bp282; assert_in_epsilon(2025, worksheet.xi_a_bp282, 0.001); end
  def test_xi_a_bq282; assert_in_epsilon(2030, worksheet.xi_a_bq282, 0.001); end
  def test_xi_a_br282; assert_in_epsilon(2035, worksheet.xi_a_br282, 0.001); end
  def test_xi_a_bs282; assert_in_epsilon(2040, worksheet.xi_a_bs282, 0.001); end
  def test_xi_a_bt282; assert_in_epsilon(2045, worksheet.xi_a_bt282, 0.001); end
  def test_xi_a_bu282; assert_in_epsilon(2050, worksheet.xi_a_bu282, 0.001); end
  def test_xi_a_bw282; assert_equal("Industry", worksheet.xi_a_bw282); end
  def test_xi_a_bx282; assert_equal("Description", worksheet.xi_a_bx282); end
  def test_xi_a_by282; assert_in_epsilon(2010, worksheet.xi_a_by282, 0.001); end
  def test_xi_a_bz282; assert_in_epsilon(2015, worksheet.xi_a_bz282, 0.001); end
  def test_xi_a_ca282; assert_in_epsilon(2020, worksheet.xi_a_ca282, 0.001); end
  def test_xi_a_cb282; assert_in_epsilon(2025, worksheet.xi_a_cb282, 0.001); end
  def test_xi_a_cc282; assert_in_epsilon(2030, worksheet.xi_a_cc282, 0.001); end
  def test_xi_a_cd282; assert_in_epsilon(2035, worksheet.xi_a_cd282, 0.001); end
  def test_xi_a_ce282; assert_in_epsilon(2040, worksheet.xi_a_ce282, 0.001); end
  def test_xi_a_cf282; assert_in_epsilon(2045, worksheet.xi_a_cf282, 0.001); end
  def test_xi_a_cg282; assert_in_epsilon(2050, worksheet.xi_a_cg282, 0.001); end
  def test_xi_a_ci282; assert_equal("Description", worksheet.xi_a_ci282); end
  def test_xi_a_cj282; assert_in_epsilon(2010, worksheet.xi_a_cj282, 0.001); end
  def test_xi_a_ck282; assert_in_epsilon(2015, worksheet.xi_a_ck282, 0.001); end
  def test_xi_a_cl282; assert_in_epsilon(2020, worksheet.xi_a_cl282, 0.001); end
  def test_xi_a_cm282; assert_in_epsilon(2025, worksheet.xi_a_cm282, 0.001); end
  def test_xi_a_cn282; assert_in_epsilon(2030, worksheet.xi_a_cn282, 0.001); end
  def test_xi_a_co282; assert_in_epsilon(2035, worksheet.xi_a_co282, 0.001); end
  def test_xi_a_cp282; assert_in_epsilon(2040, worksheet.xi_a_cp282, 0.001); end
  def test_xi_a_cq282; assert_in_epsilon(2045, worksheet.xi_a_cq282, 0.001); end
  def test_xi_a_cr282; assert_in_epsilon(2050, worksheet.xi_a_cr282, 0.001); end
  def test_xi_a_c283; assert_equal("(ii)", worksheet.xi_a_c283); end
  def test_xi_a_d283; assert_equal("Oxygen Steel", worksheet.xi_a_d283); end
  def test_xi_a_o283; assert_equal("(ii)", worksheet.xi_a_o283); end
  def test_xi_a_p283; assert_equal("Oxygen Steel", worksheet.xi_a_p283); end
  def test_xi_a_q283; assert_in_delta(0.005934201542131165, worksheet.xi_a_q283, 0.001); end
  def test_xi_a_r283; assert_in_delta(0.005934201542131165, worksheet.xi_a_r283, 0.001); end
  def test_xi_a_s283; assert_in_delta(0.005934201542131165, worksheet.xi_a_s283, 0.001); end
  def test_xi_a_t283; assert_in_delta(0.005934201542131165, worksheet.xi_a_t283, 0.001); end
  def test_xi_a_u283; assert_in_delta(0.005934201542131165, worksheet.xi_a_u283, 0.001); end
  def test_xi_a_v283; assert_in_delta(0.005934201542131165, worksheet.xi_a_v283, 0.001); end
  def test_xi_a_w283; assert_in_delta(0.005934201542131165, worksheet.xi_a_w283, 0.001); end
  def test_xi_a_x283; assert_in_delta(0.005934201542131165, worksheet.xi_a_x283, 0.001); end
  def test_xi_a_y283; assert_in_delta(0.005934201542131165, worksheet.xi_a_y283, 0.001); end
  def test_xi_a_aa283; assert_equal("V.01", worksheet.xi_a_aa283); end
  def test_xi_a_ab283; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab283); end
  def test_xi_a_ac283; assert_in_delta(0.08204782728879889, worksheet.xi_a_ac283, 0.001); end
  def test_xi_a_ad283; assert_in_delta(0.08204782728879889, worksheet.xi_a_ad283, 0.001); end
  def test_xi_a_ae283; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae283, 0.001); end
  def test_xi_a_af283; assert_in_delta(0.08204782728879889, worksheet.xi_a_af283, 0.001); end
  def test_xi_a_ag283; assert_in_delta(0.08204782728879889, worksheet.xi_a_ag283, 0.001); end
  def test_xi_a_ah283; assert_in_delta(0.08204782728879889, worksheet.xi_a_ah283, 0.001); end
  def test_xi_a_ai283; assert_in_delta(0.08204782728879889, worksheet.xi_a_ai283, 0.001); end
  def test_xi_a_aj283; assert_in_delta(0.08204782728879889, worksheet.xi_a_aj283, 0.001); end
  def test_xi_a_ak283; assert_in_delta(0.08204782728879889, worksheet.xi_a_ak283, 0.001); end
  def test_xi_a_am283; assert_equal("(ii)", worksheet.xi_a_am283); end
  def test_xi_a_an283; assert_equal("Oxygen Steel", worksheet.xi_a_an283); end
  def test_xi_a_ao283; assert_in_delta(0, (worksheet.xi_a_ao283||0), 0.001); end
  def test_xi_a_ap283; assert_in_delta(0, (worksheet.xi_a_ap283||0), 0.001); end
  def test_xi_a_aq283; assert_in_delta(0, (worksheet.xi_a_aq283||0), 0.001); end
  def test_xi_a_ar283; assert_in_delta(0, (worksheet.xi_a_ar283||0), 0.001); end
  def test_xi_a_as283; assert_in_delta(0, (worksheet.xi_a_as283||0), 0.001); end
  def test_xi_a_at283; assert_in_delta(0, (worksheet.xi_a_at283||0), 0.001); end
  def test_xi_a_au283; assert_in_delta(0, (worksheet.xi_a_au283||0), 0.001); end
  def test_xi_a_av283; assert_in_delta(0, (worksheet.xi_a_av283||0), 0.001); end
  def test_xi_a_aw283; assert_in_delta(0, (worksheet.xi_a_aw283||0), 0.001); end
  def test_xi_a_ay283; assert_equal("(ii)", worksheet.xi_a_ay283); end
  def test_xi_a_az283; assert_equal("Oxygen Steel", worksheet.xi_a_az283); end
  def test_xi_a_bl283; assert_equal("Oxygen Steel", worksheet.xi_a_bl283); end
  def test_xi_a_bx283; assert_equal("Oxygen Steel", worksheet.xi_a_bx283); end
  def test_xi_a_ac290; assert_in_epsilon(17.667755554147792, worksheet.xi_a_ac290, 0.001); end
  def test_xi_a_bm263; assert_in_delta(0, (worksheet.xi_a_bm263||0), 0.001); end
  def test_xi_a_bm283; assert_in_delta(0, (worksheet.xi_a_bm283||0), 0.001); end
  def test_xi_a_by283; assert_in_delta(0, (worksheet.xi_a_by283||0), 0.001); end
  def test_xi_a_ad290; assert_in_epsilon(17.955346389372075, worksheet.xi_a_ad290, 0.001); end
  def test_xi_a_bn263; assert_in_epsilon(-95.35004051150537, worksheet.xi_a_bn263, 0.001); end
  def test_xi_a_bn283; assert_in_epsilon(-3.4914941304948, worksheet.xi_a_bn283, 0.001); end
  def test_xi_a_bz283; assert_in_epsilon(3.4914941304948, worksheet.xi_a_bz283, 0.001); end
  def test_xi_a_ae290; assert_in_epsilon(17.42991070429268, worksheet.xi_a_ae290, 0.001); end
  def test_xi_a_bo263; assert_in_epsilon(-92.55976775529922, worksheet.xi_a_bo263, 0.001); end
  def test_xi_a_bo283; assert_in_epsilon(-6.7786418150203644, worksheet.xi_a_bo283, 0.001); end
  def test_xi_a_ca283; assert_in_epsilon(6.7786418150203644, worksheet.xi_a_ca283, 0.001); end
  def test_xi_a_af290; assert_in_epsilon(17.722435711286632, worksheet.xi_a_af290, 0.001); end
  def test_xi_a_bp263; assert_in_epsilon(-94.11319204813333, worksheet.xi_a_bp263, 0.001); end
  def test_xi_a_bp283; assert_in_epsilon(-10.338610949993438, worksheet.xi_a_bp283, 0.001); end
  def test_xi_a_cb283; assert_in_epsilon(10.338610949993438, worksheet.xi_a_cb283, 0.001); end
  def test_xi_a_ag290; assert_in_epsilon(15.580054430104807, worksheet.xi_a_ag290, 0.001); end
  def test_xi_a_bq263; assert_in_epsilon(-82.73629418596283, worksheet.xi_a_bq263, 0.001); end
  def test_xi_a_bq283; assert_in_epsilon(-12.11843367782626, worksheet.xi_a_bq283, 0.001); end
  def test_xi_a_cc283; assert_in_epsilon(12.11843367782626, worksheet.xi_a_cc283, 0.001); end
  def test_xi_a_ah290; assert_in_epsilon(14.397923182888775, worksheet.xi_a_ah290, 0.001); end
  def test_xi_a_br263; assert_in_epsilon(-76.45870644871462, worksheet.xi_a_br263, 0.001); end
  def test_xi_a_br283; assert_in_epsilon(-13.998689636566041, worksheet.xi_a_br283, 0.001); end
  def test_xi_a_cd283; assert_in_epsilon(13.998689636566041, worksheet.xi_a_cd283, 0.001); end
  def test_xi_a_ai290; assert_in_epsilon(13.306240965237233, worksheet.xi_a_ai290, 0.001); end
  def test_xi_a_bs263; assert_in_epsilon(-70.66143908213365, worksheet.xi_a_bs263, 0.001); end
  def test_xi_a_bs283; assert_in_epsilon(-15.524733821868779, worksheet.xi_a_bs283, 0.001); end
  def test_xi_a_ce283; assert_in_epsilon(15.524733821868779, worksheet.xi_a_ce283, 0.001); end
  def test_xi_a_aj290; assert_in_epsilon(12.21802589642779, worksheet.xi_a_aj290, 0.001); end
  def test_xi_a_bt263; assert_in_epsilon(-64.88258365678644, worksheet.xi_a_bt263, 0.001); end
  def test_xi_a_bt283; assert_in_epsilon(-16.63093284026155, worksheet.xi_a_bt283, 0.001); end
  def test_xi_a_cf283; assert_in_epsilon(16.63093284026155, worksheet.xi_a_cf283, 0.001); end
  def test_xi_a_ak290; assert_in_epsilon(11.099194188006347, worksheet.xi_a_ak290, 0.001); end
  def test_xi_a_bu263; assert_in_epsilon(-58.94114168122604, worksheet.xi_a_bu263, 0.001); end
  def test_xi_a_bu283; assert_in_epsilon(-17.266287386618046, worksheet.xi_a_bu283, 0.001); end
  def test_xi_a_cg283; assert_in_epsilon(17.266287386618046, worksheet.xi_a_cg283, 0.001); end
  def test_xi_a_ci283; assert_equal("Oxygen Steel", worksheet.xi_a_ci283); end
  def test_xi_a_cj283; assert_in_epsilon(6000, worksheet.xi_a_cj283, 0.001); end
  def test_xi_a_ck283; assert_in_epsilon(5000, worksheet.xi_a_ck283, 0.001); end
  def test_xi_a_cl283; assert_in_epsilon(5000, worksheet.xi_a_cl283, 0.001); end
  def test_xi_a_cm283; assert_in_epsilon(5000, worksheet.xi_a_cm283, 0.001); end
  def test_xi_a_cn283; assert_in_epsilon(5000, worksheet.xi_a_cn283, 0.001); end
  def test_xi_a_co283; assert_in_epsilon(5000, worksheet.xi_a_co283, 0.001); end
  def test_xi_a_cp283; assert_in_epsilon(5000, worksheet.xi_a_cp283, 0.001); end
  def test_xi_a_cq283; assert_in_epsilon(5000, worksheet.xi_a_cq283, 0.001); end
  def test_xi_a_cr283; assert_in_epsilon(5000, worksheet.xi_a_cr283, 0.001); end
  def test_xi_a_c284; assert_equal("(iii)", worksheet.xi_a_c284); end
  def test_xi_a_d284; assert_equal("Electric Steel", worksheet.xi_a_d284); end
  def test_xi_a_o284; assert_equal("(iii)", worksheet.xi_a_o284); end
  def test_xi_a_p284; assert_equal("Electric Steel", worksheet.xi_a_p284); end
  def test_xi_a_q284; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q284, 0.001); end
  def test_xi_a_r284; assert_in_delta(0.0024165831003063287, worksheet.xi_a_r284, 0.001); end
  def test_xi_a_s284; assert_in_delta(0.0024165831003063287, worksheet.xi_a_s284, 0.001); end
  def test_xi_a_t284; assert_in_delta(0.0024165831003063287, worksheet.xi_a_t284, 0.001); end
  def test_xi_a_u284; assert_in_delta(0.0024165831003063287, worksheet.xi_a_u284, 0.001); end
  def test_xi_a_v284; assert_in_delta(0.0024165831003063287, worksheet.xi_a_v284, 0.001); end
  def test_xi_a_w284; assert_in_delta(0.0024165831003063287, worksheet.xi_a_w284, 0.001); end
  def test_xi_a_x284; assert_in_delta(0.0024165831003063287, worksheet.xi_a_x284, 0.001); end
  def test_xi_a_y284; assert_in_delta(0.0024165831003063287, worksheet.xi_a_y284, 0.001); end
  def test_xi_a_aa284; assert_equal("V.03", worksheet.xi_a_aa284); end
  def test_xi_a_ab284; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab284); end
  def test_xi_a_ac284; assert_in_delta(0.7978154055943194, worksheet.xi_a_ac284, 0.001); end
  def test_xi_a_ad284; assert_in_delta(0.7978154055943194, worksheet.xi_a_ad284, 0.001); end
  def test_xi_a_ae284; assert_in_delta(0.7978154055943194, worksheet.xi_a_ae284, 0.001); end
  def test_xi_a_af284; assert_in_delta(0.7978154055943194, worksheet.xi_a_af284, 0.001); end
  def test_xi_a_ag284; assert_in_delta(0.7978154055943194, worksheet.xi_a_ag284, 0.001); end
  def test_xi_a_ah284; assert_in_delta(0.7978154055943194, worksheet.xi_a_ah284, 0.001); end
  def test_xi_a_ai284; assert_in_delta(0.7978154055943194, worksheet.xi_a_ai284, 0.001); end
  def test_xi_a_aj284; assert_in_delta(0.7978154055943194, worksheet.xi_a_aj284, 0.001); end
  def test_xi_a_ak284; assert_in_delta(0.7978154055943194, worksheet.xi_a_ak284, 0.001); end
  def test_xi_a_am284; assert_equal("(iii)", worksheet.xi_a_am284); end
  def test_xi_a_an284; assert_equal("Electric Steel", worksheet.xi_a_an284); end
  def test_xi_a_ao284; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao284, 0.001); end
  def test_xi_a_ap284; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap284, 0.001); end
  def test_xi_a_aq284; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq284, 0.001); end
  def test_xi_a_ar284; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar284, 0.001); end
  def test_xi_a_as284; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as284, 0.001); end
  def test_xi_a_at284; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at284, 0.001); end
  def test_xi_a_au284; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au284, 0.001); end
  def test_xi_a_av284; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av284, 0.001); end
  def test_xi_a_aw284; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw284, 0.001); end
  def test_xi_a_ay284; assert_equal("(iii)", worksheet.xi_a_ay284); end
  def test_xi_a_az284; assert_equal("Electric Steel", worksheet.xi_a_az284); end
  def test_xi_a_bl284; assert_equal("Electric Steel", worksheet.xi_a_bl284); end
  def test_xi_a_bx284; assert_equal("Electric Steel", worksheet.xi_a_bx284); end
  def test_xi_a_e284; assert_in_epsilon(2869, worksheet.xi_a_e284, 0.001); end
  def test_xi_a_bm264; assert_in_delta(0, (worksheet.xi_a_bm264||0), 0.001); end
  def test_xi_a_bm284; assert_in_delta(0, (worksheet.xi_a_bm284||0), 0.001); end
  def test_xi_a_by284; assert_in_delta(0, (worksheet.xi_a_by284||0), 0.001); end
  def test_xi_a_f284; assert_in_epsilon(3735.6509, worksheet.xi_a_f284, 0.001); end
  def test_xi_a_bn264; assert_in_epsilon(38.82936817661164, worksheet.xi_a_bn264, 0.001); end
  def test_xi_a_bn284; assert_in_epsilon(-1.2248772094519609, worksheet.xi_a_bn284, 0.001); end
  def test_xi_a_bz284; assert_in_epsilon(1.2248772094519609, worksheet.xi_a_bz284, 0.001); end
  def test_xi_a_g284; assert_in_epsilon(3707.4218, worksheet.xi_a_g284, 0.001); end
  def test_xi_a_bo264; assert_in_epsilon(37.69308624550092, worksheet.xi_a_bo264, 0.001); end
  def test_xi_a_bo284; assert_in_epsilon(-2.3780661115074224, worksheet.xi_a_bo284, 0.001); end
  def test_xi_a_ca284; assert_in_epsilon(2.3780661115074224, worksheet.xi_a_ca284, 0.001); end
  def test_xi_a_h284; assert_in_epsilon(3679.1927, worksheet.xi_a_h284, 0.001); end
  def test_xi_a_bp264; assert_in_epsilon(38.32568675072743, worksheet.xi_a_bp264, 0.001); end
  def test_xi_a_bp284; assert_in_epsilon(-3.626965550202101, worksheet.xi_a_bp284, 0.001); end
  def test_xi_a_cb284; assert_in_epsilon(3.626965550202101, worksheet.xi_a_cb284, 0.001); end
  def test_xi_a_i284; assert_in_epsilon(3650.9636, worksheet.xi_a_i284, 0.001); end
  def test_xi_a_bq264; assert_in_epsilon(33.69267607314289, worksheet.xi_a_bq264, 0.001); end
  def test_xi_a_bq284; assert_in_epsilon(-4.251358493368315, worksheet.xi_a_bq284, 0.001); end
  def test_xi_a_cc284; assert_in_epsilon(4.251358493368315, worksheet.xi_a_cc284, 0.001); end
  def test_xi_a_j284; assert_in_epsilon(3622.7345, worksheet.xi_a_j284, 0.001); end
  def test_xi_a_br264; assert_in_epsilon(31.136255916392372, worksheet.xi_a_br264, 0.001); end
  def test_xi_a_br284; assert_in_epsilon(-4.910985170578357, worksheet.xi_a_br284, 0.001); end
  def test_xi_a_cd284; assert_in_epsilon(4.910985170578357, worksheet.xi_a_cd284, 0.001); end
  def test_xi_a_k284; assert_in_epsilon(3594.5054, worksheet.xi_a_k284, 0.001); end
  def test_xi_a_bs264; assert_in_epsilon(28.77543647900505, worksheet.xi_a_bs264, 0.001); end
  def test_xi_a_bs284; assert_in_epsilon(-5.446348162275257, worksheet.xi_a_bs284, 0.001); end
  def test_xi_a_ce284; assert_in_epsilon(5.446348162275257, worksheet.xi_a_ce284, 0.001); end
  def test_xi_a_l284; assert_in_epsilon(3566.2763, worksheet.xi_a_l284, 0.001); end
  def test_xi_a_bt264; assert_in_epsilon(26.422114930881122, worksheet.xi_a_bt264, 0.001); end
  def test_xi_a_bt284; assert_in_epsilon(-5.834422126058627, worksheet.xi_a_bt284, 0.001); end
  def test_xi_a_cf284; assert_in_epsilon(5.834422126058627, worksheet.xi_a_cf284, 0.001); end
  def test_xi_a_m284; assert_in_epsilon(3538.0472, worksheet.xi_a_m284, 0.001); end
  def test_xi_a_bu264; assert_in_epsilon(24.002583311057947, worksheet.xi_a_bu264, 0.001); end
  def test_xi_a_bu284; assert_in_epsilon(-6.057315613679464, worksheet.xi_a_bu284, 0.001); end
  def test_xi_a_cg284; assert_in_epsilon(6.057315613679464, worksheet.xi_a_cg284, 0.001); end
  def test_xi_a_ci284; assert_equal("Electric Steel", worksheet.xi_a_ci284); end
  def test_xi_a_cj284; assert_in_epsilon(3000, worksheet.xi_a_cj284, 0.001); end
  def test_xi_a_ck284; assert_in_epsilon(4000, worksheet.xi_a_ck284, 0.001); end
  def test_xi_a_cl284; assert_in_epsilon(4000, worksheet.xi_a_cl284, 0.001); end
  def test_xi_a_cm284; assert_in_epsilon(4000, worksheet.xi_a_cm284, 0.001); end
  def test_xi_a_cn284; assert_in_epsilon(4000, worksheet.xi_a_cn284, 0.001); end
  def test_xi_a_co284; assert_in_epsilon(4000, worksheet.xi_a_co284, 0.001); end
  def test_xi_a_cp284; assert_in_epsilon(4000, worksheet.xi_a_cp284, 0.001); end
  def test_xi_a_cq284; assert_in_epsilon(4000, worksheet.xi_a_cq284, 0.001); end
  def test_xi_a_cr284; assert_in_epsilon(4000, worksheet.xi_a_cr284, 0.001); end
  def test_xi_a_d285; assert_equal("Total", worksheet.xi_a_d285); end
  def test_xi_a_e285; assert_in_epsilon(8133, worksheet.xi_a_e285, 0.001); end
  def test_xi_a_f285; assert_in_epsilon(8072.0025000000005, worksheet.xi_a_f285, 0.001); end
  def test_xi_a_g285; assert_in_epsilon(8011.005, worksheet.xi_a_g285, 0.001); end
  def test_xi_a_h285; assert_in_epsilon(7950.0075, worksheet.xi_a_h285, 0.001); end
  def test_xi_a_i285; assert_in_epsilon(7889.01, worksheet.xi_a_i285, 0.001); end
  def test_xi_a_j285; assert_in_epsilon(7828.012500000001, worksheet.xi_a_j285, 0.001); end
  def test_xi_a_k285; assert_in_epsilon(7767.014999999999, worksheet.xi_a_k285, 0.001); end
  def test_xi_a_l285; assert_in_epsilon(7706.0175, worksheet.xi_a_l285, 0.001); end
  def test_xi_a_m285; assert_in_epsilon(7645.0199999999995, worksheet.xi_a_m285, 0.001); end
  def test_xi_a_o285; assert_equal("Total", worksheet.xi_a_o285); end
  def test_xi_a_aa285; assert_equal("V.05", worksheet.xi_a_aa285); end
  def test_xi_a_ab285; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab285); end
  def test_xi_a_ac285; assert_in_delta(0.21102564883744446, worksheet.xi_a_ac285, 0.001); end
  def test_xi_a_ad285; assert_in_delta(0.21102564883744446, worksheet.xi_a_ad285, 0.001); end
  def test_xi_a_ae285; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae285, 0.001); end
  def test_xi_a_af285; assert_in_delta(0.21102564883744446, worksheet.xi_a_af285, 0.001); end
  def test_xi_a_ag285; assert_in_delta(0.21102564883744446, worksheet.xi_a_ag285, 0.001); end
  def test_xi_a_ah285; assert_in_delta(0.21102564883744446, worksheet.xi_a_ah285, 0.001); end
  def test_xi_a_ai285; assert_in_delta(0.21102564883744446, worksheet.xi_a_ai285, 0.001); end
  def test_xi_a_aj285; assert_in_delta(0.21102564883744446, worksheet.xi_a_aj285, 0.001); end
  def test_xi_a_ak285; assert_in_delta(0.21102564883744446, worksheet.xi_a_ak285, 0.001); end
  def test_xi_a_am285; assert_equal("Total", worksheet.xi_a_am285); end
  def test_xi_a_ay285; assert_equal("Total", worksheet.xi_a_ay285); end
  def test_xi_a_ba283; assert_in_epsilon(7.404573633815222, worksheet.xi_a_ba283, 0.001); end
  def test_xi_a_ba284; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_ba284, 0.001); end
  def test_xi_a_ba285; assert_in_epsilon(9.230780077441661, worksheet.xi_a_ba285, 0.001); end
  def test_xi_a_bb283; assert_in_epsilon(6.0997026451961345, worksheet.xi_a_bb283, 0.001); end
  def test_xi_a_bb284; assert_in_epsilon(2.3778563069776606, worksheet.xi_a_bb284, 0.001); end
  def test_xi_a_bb285; assert_in_epsilon(8.477558952173794, worksheet.xi_a_bb285, 0.001); end
  def test_xi_a_bc283; assert_in_epsilon(6.053609174325635, worksheet.xi_a_bc283, 0.001); end
  def test_xi_a_bc284; assert_in_epsilon(2.359887619519391, worksheet.xi_a_bc284, 0.001); end
  def test_xi_a_bc285; assert_in_epsilon(8.413496793845026, worksheet.xi_a_bc285, 0.001); end
  def test_xi_a_bd283; assert_in_epsilon(6.007515703455135, worksheet.xi_a_bd283, 0.001); end
  def test_xi_a_bd284; assert_in_epsilon(2.3419189320611213, worksheet.xi_a_bd284, 0.001); end
  def test_xi_a_bd285; assert_in_epsilon(8.349434635516257, worksheet.xi_a_bd285, 0.001); end
  def test_xi_a_be283; assert_in_epsilon(5.961422232584636, worksheet.xi_a_be283, 0.001); end
  def test_xi_a_be284; assert_in_epsilon(2.323950244602852, worksheet.xi_a_be284, 0.001); end
  def test_xi_a_be285; assert_in_epsilon(8.285372477187488, worksheet.xi_a_be285, 0.001); end
  def test_xi_a_bf283; assert_in_epsilon(5.915328761714136, worksheet.xi_a_bf283, 0.001); end
  def test_xi_a_bf284; assert_in_epsilon(2.3059815571445825, worksheet.xi_a_bf284, 0.001); end
  def test_xi_a_bf285; assert_in_epsilon(8.221310318858718, worksheet.xi_a_bf285, 0.001); end
  def test_xi_a_bg283; assert_in_epsilon(5.869235290843635, worksheet.xi_a_bg283, 0.001); end
  def test_xi_a_bg284; assert_in_epsilon(2.288012869686313, worksheet.xi_a_bg284, 0.001); end
  def test_xi_a_bg285; assert_in_epsilon(8.157248160529948, worksheet.xi_a_bg285, 0.001); end
  def test_xi_a_bh283; assert_in_epsilon(5.823141819973136, worksheet.xi_a_bh283, 0.001); end
  def test_xi_a_bh284; assert_in_epsilon(2.2700441822280437, worksheet.xi_a_bh284, 0.001); end
  def test_xi_a_bh285; assert_in_epsilon(8.093186002201179, worksheet.xi_a_bh285, 0.001); end
  def test_xi_a_bl285; assert_equal("Total", worksheet.xi_a_bl285); end
  def test_xi_a_bm285; assert_in_delta(0, (worksheet.xi_a_bm285||0), 0.001); end
  def test_xi_a_bn285; assert_in_epsilon(-4.716371339946761, worksheet.xi_a_bn285, 0.001); end
  def test_xi_a_bo285; assert_in_epsilon(-9.156707926527787, worksheet.xi_a_bo285, 0.001); end
  def test_xi_a_bp285; assert_in_epsilon(-13.965576500195539, worksheet.xi_a_bp285, 0.001); end
  def test_xi_a_bq285; assert_in_epsilon(-16.369792171194575, worksheet.xi_a_bq285, 0.001); end
  def test_xi_a_br285; assert_in_epsilon(-18.9096748071444, worksheet.xi_a_br285, 0.001); end
  def test_xi_a_bs285; assert_in_epsilon(-20.971081984144035, worksheet.xi_a_bs285, 0.001); end
  def test_xi_a_bt285; assert_in_epsilon(-22.465354966320177, worksheet.xi_a_bt285, 0.001); end
  def test_xi_a_bu285; assert_in_epsilon(-23.32360300029751, worksheet.xi_a_bu285, 0.001); end
  def test_xi_a_bx285; assert_equal("Total", worksheet.xi_a_bx285); end
  def test_xi_a_by285; assert_in_delta(0, (worksheet.xi_a_by285||0), 0.001); end
  def test_xi_a_bz285; assert_in_epsilon(4.716371339946761, worksheet.xi_a_bz285, 0.001); end
  def test_xi_a_ca285; assert_in_epsilon(9.156707926527787, worksheet.xi_a_ca285, 0.001); end
  def test_xi_a_cb285; assert_in_epsilon(13.965576500195539, worksheet.xi_a_cb285, 0.001); end
  def test_xi_a_cc285; assert_in_epsilon(16.369792171194575, worksheet.xi_a_cc285, 0.001); end
  def test_xi_a_cd285; assert_in_epsilon(18.9096748071444, worksheet.xi_a_cd285, 0.001); end
  def test_xi_a_ce285; assert_in_epsilon(20.971081984144035, worksheet.xi_a_ce285, 0.001); end
  def test_xi_a_cf285; assert_in_epsilon(22.465354966320177, worksheet.xi_a_cf285, 0.001); end
  def test_xi_a_cg285; assert_in_epsilon(23.32360300029751, worksheet.xi_a_cg285, 0.001); end
  def test_xi_a_q286; assert_in_epsilon(38.17081383255731, worksheet.xi_a_q286, 0.001); end
  def test_xi_a_r286; assert_in_epsilon(34.76029518552707, worksheet.xi_a_r286, 0.001); end
  def test_xi_a_s286; assert_in_epsilon(34.49762292971704, worksheet.xi_a_s286, 0.001); end
  def test_xi_a_t286; assert_in_epsilon(34.234950673907015, worksheet.xi_a_t286, 0.001); end
  def test_xi_a_u286; assert_in_epsilon(33.972278418096984, worksheet.xi_a_u286, 0.001); end
  def test_xi_a_v286; assert_in_epsilon(33.70960616228696, worksheet.xi_a_v286, 0.001); end
  def test_xi_a_w286; assert_in_epsilon(33.44693390647693, worksheet.xi_a_w286, 0.001); end
  def test_xi_a_x286; assert_in_epsilon(33.184261650666905, worksheet.xi_a_x286, 0.001); end
  def test_xi_a_y286; assert_in_epsilon(32.921589394856866, worksheet.xi_a_y286, 0.001); end
  def test_xi_a_aa286; assert_equal("V.04", worksheet.xi_a_aa286); end
  def test_xi_a_ab286; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab286); end
  def test_xi_a_ac286; assert_in_delta(0.07696335047929354, worksheet.xi_a_ac286, 0.001); end
  def test_xi_a_ad286; assert_in_delta(0.07696335047929354, worksheet.xi_a_ad286, 0.001); end
  def test_xi_a_ae286; assert_in_delta(0.07696335047929354, worksheet.xi_a_ae286, 0.001); end
  def test_xi_a_af286; assert_in_delta(0.07696335047929354, worksheet.xi_a_af286, 0.001); end
  def test_xi_a_ag286; assert_in_delta(0.07696335047929354, worksheet.xi_a_ag286, 0.001); end
  def test_xi_a_ah286; assert_in_delta(0.07696335047929354, worksheet.xi_a_ah286, 0.001); end
  def test_xi_a_ai286; assert_in_delta(0.07696335047929354, worksheet.xi_a_ai286, 0.001); end
  def test_xi_a_aj286; assert_in_delta(0.07696335047929354, worksheet.xi_a_aj286, 0.001); end
  def test_xi_a_ak286; assert_in_delta(0.07696335047929354, worksheet.xi_a_ak286, 0.001); end
  def test_xi_a_bk286; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bk286); end
  def test_xi_a_bl286; assert_equal("Oxygen Steel", worksheet.xi_a_bl286); end
  def test_xi_a_bw286; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bw286); end
  def test_xi_a_bx286; assert_equal("Oxygen Steel", worksheet.xi_a_bx286); end
  def test_xi_a_by286; assert_in_delta(0, (worksheet.xi_a_by286||0), 0.001); end
  def test_xi_a_bz286; assert_in_epsilon(174.36818570691543, worksheet.xi_a_bz286, 0.001); end
  def test_xi_a_ca286; assert_in_epsilon(174.86506063523484, worksheet.xi_a_ca286, 0.001); end
  def test_xi_a_cb286; assert_in_epsilon(179.97845406304202, worksheet.xi_a_cb286, 0.001); end
  def test_xi_a_cc286; assert_in_epsilon(170.38137892870435, worksheet.xi_a_cc286, 0.001); end
  def test_xi_a_cd286; assert_in_epsilon(165.98404715019592, worksheet.xi_a_cd286, 0.001); end
  def test_xi_a_ce286; assert_in_epsilon(161.7128239689177, worksheet.xi_a_ce286, 0.001); end
  def test_xi_a_cf286; assert_in_epsilon(157.04016756196324, worksheet.xi_a_cf286, 0.001); end
  def test_xi_a_cg286; assert_in_epsilon(151.73408013275935, worksheet.xi_a_cg286, 0.001); end
  def test_xi_a_aa287; assert_equal("v.06", worksheet.xi_a_aa287); end
  def test_xi_a_ab287; assert_equal("Blast furnace gas", worksheet.xi_a_ab287); end
  def test_xi_a_ac287; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ac287, 0.001); end
  def test_xi_a_ad287; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ad287, 0.001); end
  def test_xi_a_ae287; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ae287, 0.001); end
  def test_xi_a_af287; assert_in_delta(-0.1132646069606094, worksheet.xi_a_af287, 0.001); end
  def test_xi_a_ag287; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ag287, 0.001); end
  def test_xi_a_ah287; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ah287, 0.001); end
  def test_xi_a_ai287; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ai287, 0.001); end
  def test_xi_a_aj287; assert_in_delta(-0.1132646069606094, worksheet.xi_a_aj287, 0.001); end
  def test_xi_a_ak287; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ak287, 0.001); end
  def test_xi_a_am287; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am287); end
  def test_xi_a_bl287; assert_equal("Electric Steel", worksheet.xi_a_bl287); end
  def test_xi_a_bx287; assert_equal("Electric Steel", worksheet.xi_a_bx287); end
  def test_xi_a_by287; assert_in_delta(0, (worksheet.xi_a_by287||0), 0.001); end
  def test_xi_a_bz287; assert_in_epsilon(-71.7816040157291, worksheet.xi_a_bz287, 0.001); end
  def test_xi_a_ca287; assert_in_epsilon(-69.49213318256292, worksheet.xi_a_ca287, 0.001); end
  def test_xi_a_cb287; assert_in_epsilon(-68.87583424909475, worksheet.xi_a_cb287, 0.001); end
  def test_xi_a_cc287; assert_in_epsilon(-63.618430628344, worksheet.xi_a_cc287, 0.001); end
  def test_xi_a_cd287; assert_in_epsilon(-60.40238379438344, worksheet.xi_a_cd287, 0.001); end
  def test_xi_a_ce287; assert_in_epsilon(-57.50620136529922, worksheet.xi_a_ce287, 0.001); end
  def test_xi_a_cf287; assert_in_epsilon(-54.76480585339192, worksheet.xi_a_cf287, 0.001); end
  def test_xi_a_cg287; assert_in_epsilon(-52.12238074594791, worksheet.xi_a_cg287, 0.001); end
  def test_xi_a_aa288; assert_equal("V.07", worksheet.xi_a_aa288); end
  def test_xi_a_ab288; assert_equal("Heat transport", worksheet.xi_a_ab288); end
  def test_xi_a_ac288; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ac288, 0.001); end
  def test_xi_a_ad288; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ad288, 0.001); end
  def test_xi_a_ae288; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae288, 0.001); end
  def test_xi_a_af288; assert_in_delta(-0.05458762523924703, worksheet.xi_a_af288, 0.001); end
  def test_xi_a_ag288; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ag288, 0.001); end
  def test_xi_a_ah288; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ah288, 0.001); end
  def test_xi_a_ai288; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ai288, 0.001); end
  def test_xi_a_aj288; assert_in_delta(-0.05458762523924703, worksheet.xi_a_aj288, 0.001); end
  def test_xi_a_ak288; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ak288, 0.001); end
  def test_xi_a_am288; assert_equal("Industry", worksheet.xi_a_am288); end
  def test_xi_a_an288; assert_equal("Description", worksheet.xi_a_an288); end
  def test_xi_a_ao288; assert_in_epsilon(2010, worksheet.xi_a_ao288, 0.001); end
  def test_xi_a_ap288; assert_in_epsilon(2015, worksheet.xi_a_ap288, 0.001); end
  def test_xi_a_aq288; assert_in_epsilon(2020, worksheet.xi_a_aq288, 0.001); end
  def test_xi_a_ar288; assert_in_epsilon(2025, worksheet.xi_a_ar288, 0.001); end
  def test_xi_a_as288; assert_in_epsilon(2030, worksheet.xi_a_as288, 0.001); end
  def test_xi_a_at288; assert_in_epsilon(2035, worksheet.xi_a_at288, 0.001); end
  def test_xi_a_au288; assert_in_epsilon(2040, worksheet.xi_a_au288, 0.001); end
  def test_xi_a_av288; assert_in_epsilon(2045, worksheet.xi_a_av288, 0.001); end
  def test_xi_a_aw288; assert_in_epsilon(2050, worksheet.xi_a_aw288, 0.001); end
  def test_xi_a_bl288; assert_equal("Total", worksheet.xi_a_bl288); end
  def test_xi_a_bm288; assert_in_delta(0, (worksheet.xi_a_bm288||0), 0.001); end
  def test_xi_a_bn288; assert_in_epsilon(-61.23704367484049, worksheet.xi_a_bn288, 0.001); end
  def test_xi_a_bo288; assert_in_epsilon(-64.02338943632608, worksheet.xi_a_bo288, 0.001); end
  def test_xi_a_bp288; assert_in_epsilon(-69.75308179760144, worksheet.xi_a_bp288, 0.001); end
  def test_xi_a_bq288; assert_in_epsilon(-65.41341028401452, worksheet.xi_a_bq288, 0.001); end
  def test_xi_a_br288; assert_in_epsilon(-64.23212533946665, worksheet.xi_a_br288, 0.001); end
  def test_xi_a_bs288; assert_in_epsilon(-62.85708458727264, worksheet.xi_a_bs288, 0.001); end
  def test_xi_a_bt288; assert_in_epsilon(-60.92582369222549, worksheet.xi_a_bt288, 0.001); end
  def test_xi_a_bx288; assert_equal("Total", worksheet.xi_a_bx288); end
  def test_xi_a_by288; assert_in_delta(0, (worksheet.xi_a_by288||0), 0.001); end
  def test_xi_a_bz288; assert_in_epsilon(102.58658169118632, worksheet.xi_a_bz288, 0.001); end
  def test_xi_a_ca288; assert_in_epsilon(105.37292745267192, worksheet.xi_a_ca288, 0.001); end
  def test_xi_a_cb288; assert_in_epsilon(111.10261981394727, worksheet.xi_a_cb288, 0.001); end
  def test_xi_a_cc288; assert_in_epsilon(106.76294830036035, worksheet.xi_a_cc288, 0.001); end
  def test_xi_a_cd288; assert_in_epsilon(105.58166335581248, worksheet.xi_a_cd288, 0.001); end
  def test_xi_a_ce288; assert_in_epsilon(104.20662260361847, worksheet.xi_a_ce288, 0.001); end
  def test_xi_a_cf288; assert_in_epsilon(102.27536170857132, worksheet.xi_a_cf288, 0.001); end
  def test_xi_a_aa289; assert_equal("Intensity", worksheet.xi_a_aa289); end
  def test_xi_a_ab289; assert_equal("Intensity", worksheet.xi_a_ab289); end
  def test_xi_a_ac289; assert_in_delta(0.21950983912607056, worksheet.xi_a_ac289, 0.001); end
  def test_xi_a_ad289; assert_in_delta(0.21950983912607056, worksheet.xi_a_ad289, 0.001); end
  def test_xi_a_ae289; assert_in_delta(0.21950983912607056, worksheet.xi_a_ae289, 0.001); end
  def test_xi_a_af289; assert_in_delta(0.21950983912607056, worksheet.xi_a_af289, 0.001); end
  def test_xi_a_ag289; assert_in_delta(0.21950983912607056, worksheet.xi_a_ag289, 0.001); end
  def test_xi_a_ah289; assert_in_delta(0.21950983912607056, worksheet.xi_a_ah289, 0.001); end
  def test_xi_a_ai289; assert_in_delta(0.21950983912607056, worksheet.xi_a_ai289, 0.001); end
  def test_xi_a_aj289; assert_in_delta(0.21950983912607056, worksheet.xi_a_aj289, 0.001); end
  def test_xi_a_ak289; assert_in_delta(0.21950983912607056, worksheet.xi_a_ak289, 0.001); end
  def test_xi_a_am289; assert_equal("(ii)", worksheet.xi_a_am289); end
  def test_xi_a_an289; assert_equal("Oxygen Steel", worksheet.xi_a_an289); end
  def test_xi_a_ao289; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao289, 0.001); end
  def test_xi_a_ap289; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap289, 0.001); end
  def test_xi_a_aq289; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq289, 0.001); end
  def test_xi_a_ar289; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar289, 0.001); end
  def test_xi_a_as289; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as289, 0.001); end
  def test_xi_a_at289; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at289, 0.001); end
  def test_xi_a_au289; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au289, 0.001); end
  def test_xi_a_av289; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av289, 0.001); end
  def test_xi_a_aw289; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw289, 0.001); end
  def test_xi_a_aa290; assert_equal("Cost", worksheet.xi_a_aa290); end
  def test_xi_a_ab290; assert_equal("Cost", worksheet.xi_a_ab290); end
  def test_xi_a_am290; assert_equal("(iii)", worksheet.xi_a_am290); end
  def test_xi_a_an290; assert_equal("Electric Steel", worksheet.xi_a_an290); end
  def test_xi_a_ao290; assert_in_delta(0, (worksheet.xi_a_ao290||0), 0.001); end
  def test_xi_a_ap290; assert_in_delta(0, (worksheet.xi_a_ap290||0), 0.001); end
  def test_xi_a_aq290; assert_in_delta(0, (worksheet.xi_a_aq290||0), 0.001); end
  def test_xi_a_ar290; assert_in_delta(0, (worksheet.xi_a_ar290||0), 0.001); end
  def test_xi_a_as290; assert_in_delta(0, (worksheet.xi_a_as290||0), 0.001); end
  def test_xi_a_at290; assert_in_delta(0, (worksheet.xi_a_at290||0), 0.001); end
  def test_xi_a_au290; assert_in_delta(0, (worksheet.xi_a_au290||0), 0.001); end
  def test_xi_a_av290; assert_in_delta(0, (worksheet.xi_a_av290||0), 0.001); end
  def test_xi_a_aw290; assert_in_delta(0, (worksheet.xi_a_aw290||0), 0.001); end
  def test_xi_a_am291; assert_equal("Total", worksheet.xi_a_am291); end
  def test_xi_a_z292; assert_equal("Electrosteel", worksheet.xi_a_z292); end
  def test_xi_a_aa292; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa292); end
  def test_xi_a_aa293; assert_equal("Vector", worksheet.xi_a_aa293); end
  def test_xi_a_ab293; assert_equal("Description", worksheet.xi_a_ab293); end
  def test_xi_a_ac293; assert_in_epsilon(2010, worksheet.xi_a_ac293, 0.001); end
  def test_xi_a_ad293; assert_in_epsilon(2015, worksheet.xi_a_ad293, 0.001); end
  def test_xi_a_ae293; assert_in_epsilon(2020, worksheet.xi_a_ae293, 0.001); end
  def test_xi_a_af293; assert_in_epsilon(2025, worksheet.xi_a_af293, 0.001); end
  def test_xi_a_ag293; assert_in_epsilon(2030, worksheet.xi_a_ag293, 0.001); end
  def test_xi_a_ah293; assert_in_epsilon(2035, worksheet.xi_a_ah293, 0.001); end
  def test_xi_a_ai293; assert_in_epsilon(2040, worksheet.xi_a_ai293, 0.001); end
  def test_xi_a_aj293; assert_in_epsilon(2045, worksheet.xi_a_aj293, 0.001); end
  def test_xi_a_ak293; assert_in_epsilon(2050, worksheet.xi_a_ak293, 0.001); end
  def test_xi_a_aa294; assert_equal("V.01", worksheet.xi_a_aa294); end
  def test_xi_a_ab294; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab294); end
  def test_xi_a_ac294; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac294, 0.001); end
  def test_xi_a_ad294; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad294, 0.001); end
  def test_xi_a_ae294; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae294, 0.001); end
  def test_xi_a_af294; assert_in_delta(0.37661125507716986, worksheet.xi_a_af294, 0.001); end
  def test_xi_a_ag294; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag294, 0.001); end
  def test_xi_a_ah294; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah294, 0.001); end
  def test_xi_a_ai294; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai294, 0.001); end
  def test_xi_a_aj294; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj294, 0.001); end
  def test_xi_a_ak294; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak294, 0.001); end
  def test_xi_a_aa295; assert_equal("V.03", worksheet.xi_a_aa295); end
  def test_xi_a_ab295; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab295); end
  def test_xi_a_ac295; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac295, 0.001); end
  def test_xi_a_ad295; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad295, 0.001); end
  def test_xi_a_ae295; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae295, 0.001); end
  def test_xi_a_af295; assert_in_delta(0.04200640884510868, worksheet.xi_a_af295, 0.001); end
  def test_xi_a_ag295; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag295, 0.001); end
  def test_xi_a_ah295; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah295, 0.001); end
  def test_xi_a_ai295; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai295, 0.001); end
  def test_xi_a_aj295; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj295, 0.001); end
  def test_xi_a_ak295; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak295, 0.001); end
  def test_xi_a_aa296; assert_equal("V.05", worksheet.xi_a_aa296); end
  def test_xi_a_ab296; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab296); end
  def test_xi_a_ac296; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac296, 0.001); end
  def test_xi_a_ad296; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad296, 0.001); end
  def test_xi_a_ae296; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae296, 0.001); end
  def test_xi_a_af296; assert_in_delta(0.5722074496017227, worksheet.xi_a_af296, 0.001); end
  def test_xi_a_ag296; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag296, 0.001); end
  def test_xi_a_ah296; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah296, 0.001); end
  def test_xi_a_ai296; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai296, 0.001); end
  def test_xi_a_aj296; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj296, 0.001); end
  def test_xi_a_ak296; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak296, 0.001); end
  def test_xi_a_aa297; assert_equal("V.04", worksheet.xi_a_aa297); end
  def test_xi_a_ab297; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab297); end
  def test_xi_a_ac297; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac297, 0.001); end
  def test_xi_a_ad297; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad297, 0.001); end
  def test_xi_a_ae297; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae297, 0.001); end
  def test_xi_a_af297; assert_in_delta(0.009174886475998728, worksheet.xi_a_af297, 0.001); end
  def test_xi_a_ag297; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag297, 0.001); end
  def test_xi_a_ah297; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah297, 0.001); end
  def test_xi_a_ai297; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai297, 0.001); end
  def test_xi_a_aj297; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj297, 0.001); end
  def test_xi_a_ak297; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak297, 0.001); end
  def test_xi_a_aa298; assert_equal("V.03", worksheet.xi_a_aa298); end
  def test_xi_a_ab298; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab298); end
  def test_xi_a_ac298; assert_in_delta(0, (worksheet.xi_a_ac298||0), 0.001); end
  def test_xi_a_ad298; assert_in_delta(0, (worksheet.xi_a_ad298||0), 0.001); end
  def test_xi_a_ae298; assert_in_delta(0, (worksheet.xi_a_ae298||0), 0.001); end
  def test_xi_a_af298; assert_in_delta(0, (worksheet.xi_a_af298||0), 0.001); end
  def test_xi_a_ag298; assert_in_delta(0, (worksheet.xi_a_ag298||0), 0.001); end
  def test_xi_a_ah298; assert_in_delta(0, (worksheet.xi_a_ah298||0), 0.001); end
  def test_xi_a_ai298; assert_in_delta(0, (worksheet.xi_a_ai298||0), 0.001); end
  def test_xi_a_aj298; assert_in_delta(0, (worksheet.xi_a_aj298||0), 0.001); end
  def test_xi_a_ak298; assert_in_delta(0, (worksheet.xi_a_ak298||0), 0.001); end
  def test_xi_a_aa299; assert_equal("V.07", worksheet.xi_a_aa299); end
  def test_xi_a_ab299; assert_equal("Heat transport", worksheet.xi_a_ab299); end
  def test_xi_a_ac299; assert_in_delta(0, (worksheet.xi_a_ac299||0), 0.001); end
  def test_xi_a_ad299; assert_in_delta(0, (worksheet.xi_a_ad299||0), 0.001); end
  def test_xi_a_ae299; assert_in_delta(0, (worksheet.xi_a_ae299||0), 0.001); end
  def test_xi_a_af299; assert_in_delta(0, (worksheet.xi_a_af299||0), 0.001); end
  def test_xi_a_ag299; assert_in_delta(0, (worksheet.xi_a_ag299||0), 0.001); end
  def test_xi_a_ah299; assert_in_delta(0, (worksheet.xi_a_ah299||0), 0.001); end
  def test_xi_a_ai299; assert_in_delta(0, (worksheet.xi_a_ai299||0), 0.001); end
  def test_xi_a_aj299; assert_in_delta(0, (worksheet.xi_a_aj299||0), 0.001); end
  def test_xi_a_ak299; assert_in_delta(0, (worksheet.xi_a_ak299||0), 0.001); end
  def test_xi_a_aa300; assert_equal("Intensity", worksheet.xi_a_aa300); end
  def test_xi_a_ab300; assert_equal("Intensity", worksheet.xi_a_ab300); end
  def test_xi_a_ac300; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac300, 0.001); end
  def test_xi_a_ad300; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad300, 0.001); end
  def test_xi_a_ae300; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae300, 0.001); end
  def test_xi_a_af300; assert_in_delta(0.1305543295866784, worksheet.xi_a_af300, 0.001); end
  def test_xi_a_ag300; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag300, 0.001); end
  def test_xi_a_ah300; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah300, 0.001); end
  def test_xi_a_ai300; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai300, 0.001); end
  def test_xi_a_aj300; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj300, 0.001); end
  def test_xi_a_ak300; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak300, 0.001); end
  def test_xi_a_aa301; assert_equal("Cost", worksheet.xi_a_aa301); end
  def test_xi_a_ab301; assert_equal("Cost", worksheet.xi_a_ab301); end
  def test_xi_a_ac301; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac301, 0.001); end
  def test_xi_a_ad301; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad301, 0.001); end
  def test_xi_a_ae301; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae301, 0.001); end
  def test_xi_a_af301; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af301, 0.001); end
  def test_xi_a_ag301; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag301, 0.001); end
  def test_xi_a_ah301; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah301, 0.001); end
  def test_xi_a_ai301; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai301, 0.001); end
  def test_xi_a_aj301; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj301, 0.001); end
  def test_xi_a_ak301; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak301, 0.001); end
  def test_xi_a_b303; assert_in_epsilon(3, worksheet.xi_a_b303, 0.001); end
  def test_xi_a_c303; assert_equal("Energy efficiency", worksheet.xi_a_c303); end
  def test_xi_a_b304; assert_in_delta(1, worksheet.xi_a_b304, 0.001); end
  def test_xi_a_c304; assert_equal("Output Growth (kt)", worksheet.xi_a_c304); end
  def test_xi_a_n304; assert_in_epsilon(2, worksheet.xi_a_n304, 0.001); end
  def test_xi_a_o304; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_a_o304); end
  def test_xi_a_z304; assert_in_epsilon(3, worksheet.xi_a_z304, 0.001); end
  def test_xi_a_aa304; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa304); end
  def test_xi_a_al304; assert_in_epsilon(4, worksheet.xi_a_al304, 0.001); end
  def test_xi_a_am304; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am304); end
  def test_xi_a_ay304; assert_in_epsilon(5, worksheet.xi_a_ay304, 0.001); end
  def test_xi_a_az304; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az304); end
  def test_xi_a_bk304; assert_in_epsilon(6, worksheet.xi_a_bk304, 0.001); end
  def test_xi_a_bl304; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl304); end
  def test_xi_a_bw304; assert_in_epsilon(7, worksheet.xi_a_bw304, 0.001); end
  def test_xi_a_bx304; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx304); end
  def test_xi_a_ci304; assert_equal("Capacity", worksheet.xi_a_ci304); end
  def test_xi_a_c305; assert_equal("Product type", worksheet.xi_a_c305); end
  def test_xi_a_d305; assert_equal("Description", worksheet.xi_a_d305); end
  def test_xi_a_e305; assert_in_epsilon(2010, worksheet.xi_a_e305, 0.001); end
  def test_xi_a_f305; assert_in_epsilon(2015, worksheet.xi_a_f305, 0.001); end
  def test_xi_a_g305; assert_in_epsilon(2020, worksheet.xi_a_g305, 0.001); end
  def test_xi_a_h305; assert_in_epsilon(2025, worksheet.xi_a_h305, 0.001); end
  def test_xi_a_i305; assert_in_epsilon(2030, worksheet.xi_a_i305, 0.001); end
  def test_xi_a_j305; assert_in_epsilon(2035, worksheet.xi_a_j305, 0.001); end
  def test_xi_a_k305; assert_in_epsilon(2040, worksheet.xi_a_k305, 0.001); end
  def test_xi_a_l305; assert_in_epsilon(2045, worksheet.xi_a_l305, 0.001); end
  def test_xi_a_m305; assert_in_epsilon(2050, worksheet.xi_a_m305, 0.001); end
  def test_xi_a_o305; assert_equal("Industry", worksheet.xi_a_o305); end
  def test_xi_a_p305; assert_equal("Description", worksheet.xi_a_p305); end
  def test_xi_a_q305; assert_in_epsilon(2010, worksheet.xi_a_q305, 0.001); end
  def test_xi_a_r305; assert_in_epsilon(2015, worksheet.xi_a_r305, 0.001); end
  def test_xi_a_s305; assert_in_epsilon(2020, worksheet.xi_a_s305, 0.001); end
  def test_xi_a_t305; assert_in_epsilon(2025, worksheet.xi_a_t305, 0.001); end
  def test_xi_a_u305; assert_in_epsilon(2030, worksheet.xi_a_u305, 0.001); end
  def test_xi_a_v305; assert_in_epsilon(2035, worksheet.xi_a_v305, 0.001); end
  def test_xi_a_w305; assert_in_epsilon(2040, worksheet.xi_a_w305, 0.001); end
  def test_xi_a_x305; assert_in_epsilon(2045, worksheet.xi_a_x305, 0.001); end
  def test_xi_a_y305; assert_in_epsilon(2050, worksheet.xi_a_y305, 0.001); end
  def test_xi_a_z305; assert_equal("Oxygensteel", worksheet.xi_a_z305); end
  def test_xi_a_aa305; assert_equal("Vector", worksheet.xi_a_aa305); end
  def test_xi_a_ab305; assert_equal("Description", worksheet.xi_a_ab305); end
  def test_xi_a_ac305; assert_in_epsilon(2010, worksheet.xi_a_ac305, 0.001); end
  def test_xi_a_ad305; assert_in_epsilon(2015, worksheet.xi_a_ad305, 0.001); end
  def test_xi_a_ae305; assert_in_epsilon(2020, worksheet.xi_a_ae305, 0.001); end
  def test_xi_a_af305; assert_in_epsilon(2025, worksheet.xi_a_af305, 0.001); end
  def test_xi_a_ag305; assert_in_epsilon(2030, worksheet.xi_a_ag305, 0.001); end
  def test_xi_a_ah305; assert_in_epsilon(2035, worksheet.xi_a_ah305, 0.001); end
  def test_xi_a_ai305; assert_in_epsilon(2040, worksheet.xi_a_ai305, 0.001); end
  def test_xi_a_aj305; assert_in_epsilon(2045, worksheet.xi_a_aj305, 0.001); end
  def test_xi_a_ak305; assert_in_epsilon(2050, worksheet.xi_a_ak305, 0.001); end
  def test_xi_a_am305; assert_equal("Industry", worksheet.xi_a_am305); end
  def test_xi_a_an305; assert_equal("Description", worksheet.xi_a_an305); end
  def test_xi_a_ao305; assert_in_epsilon(2010, worksheet.xi_a_ao305, 0.001); end
  def test_xi_a_ap305; assert_in_epsilon(2015, worksheet.xi_a_ap305, 0.001); end
  def test_xi_a_aq305; assert_in_epsilon(2020, worksheet.xi_a_aq305, 0.001); end
  def test_xi_a_ar305; assert_in_epsilon(2025, worksheet.xi_a_ar305, 0.001); end
  def test_xi_a_as305; assert_in_epsilon(2030, worksheet.xi_a_as305, 0.001); end
  def test_xi_a_at305; assert_in_epsilon(2035, worksheet.xi_a_at305, 0.001); end
  def test_xi_a_au305; assert_in_epsilon(2040, worksheet.xi_a_au305, 0.001); end
  def test_xi_a_av305; assert_in_epsilon(2045, worksheet.xi_a_av305, 0.001); end
  def test_xi_a_aw305; assert_in_epsilon(2050, worksheet.xi_a_aw305, 0.001); end
  def test_xi_a_ay305; assert_equal("Industry", worksheet.xi_a_ay305); end
  def test_xi_a_az305; assert_equal("Description", worksheet.xi_a_az305); end
  def test_xi_a_ba305; assert_in_epsilon(2010, worksheet.xi_a_ba305, 0.001); end
  def test_xi_a_bb305; assert_in_epsilon(2015, worksheet.xi_a_bb305, 0.001); end
  def test_xi_a_bc305; assert_in_epsilon(2020, worksheet.xi_a_bc305, 0.001); end
  def test_xi_a_bd305; assert_in_epsilon(2025, worksheet.xi_a_bd305, 0.001); end
  def test_xi_a_be305; assert_in_epsilon(2030, worksheet.xi_a_be305, 0.001); end
  def test_xi_a_bf305; assert_in_epsilon(2035, worksheet.xi_a_bf305, 0.001); end
  def test_xi_a_bg305; assert_in_epsilon(2040, worksheet.xi_a_bg305, 0.001); end
  def test_xi_a_bh305; assert_in_epsilon(2045, worksheet.xi_a_bh305, 0.001); end
  def test_xi_a_bi305; assert_in_epsilon(2050, worksheet.xi_a_bi305, 0.001); end
  def test_xi_a_bk305; assert_equal("Industry", worksheet.xi_a_bk305); end
  def test_xi_a_bl305; assert_equal("Description", worksheet.xi_a_bl305); end
  def test_xi_a_bm305; assert_in_epsilon(2010, worksheet.xi_a_bm305, 0.001); end
  def test_xi_a_bn305; assert_in_epsilon(2015, worksheet.xi_a_bn305, 0.001); end
  def test_xi_a_bo305; assert_in_epsilon(2020, worksheet.xi_a_bo305, 0.001); end
  def test_xi_a_bp305; assert_in_epsilon(2025, worksheet.xi_a_bp305, 0.001); end
  def test_xi_a_bq305; assert_in_epsilon(2030, worksheet.xi_a_bq305, 0.001); end
  def test_xi_a_br305; assert_in_epsilon(2035, worksheet.xi_a_br305, 0.001); end
  def test_xi_a_bs305; assert_in_epsilon(2040, worksheet.xi_a_bs305, 0.001); end
  def test_xi_a_bt305; assert_in_epsilon(2045, worksheet.xi_a_bt305, 0.001); end
  def test_xi_a_bu305; assert_in_epsilon(2050, worksheet.xi_a_bu305, 0.001); end
  def test_xi_a_bw305; assert_equal("Industry", worksheet.xi_a_bw305); end
  def test_xi_a_bx305; assert_equal("Description", worksheet.xi_a_bx305); end
  def test_xi_a_by305; assert_in_epsilon(2010, worksheet.xi_a_by305, 0.001); end
  def test_xi_a_bz305; assert_in_epsilon(2015, worksheet.xi_a_bz305, 0.001); end
  def test_xi_a_ca305; assert_in_epsilon(2020, worksheet.xi_a_ca305, 0.001); end
  def test_xi_a_cb305; assert_in_epsilon(2025, worksheet.xi_a_cb305, 0.001); end
  def test_xi_a_cc305; assert_in_epsilon(2030, worksheet.xi_a_cc305, 0.001); end
  def test_xi_a_cd305; assert_in_epsilon(2035, worksheet.xi_a_cd305, 0.001); end
  def test_xi_a_ce305; assert_in_epsilon(2040, worksheet.xi_a_ce305, 0.001); end
  def test_xi_a_cf305; assert_in_epsilon(2045, worksheet.xi_a_cf305, 0.001); end
  def test_xi_a_cg305; assert_in_epsilon(2050, worksheet.xi_a_cg305, 0.001); end
  def test_xi_a_ci305; assert_equal("Description", worksheet.xi_a_ci305); end
  def test_xi_a_cj305; assert_in_epsilon(2010, worksheet.xi_a_cj305, 0.001); end
  def test_xi_a_ck305; assert_in_epsilon(2015, worksheet.xi_a_ck305, 0.001); end
  def test_xi_a_cl305; assert_in_epsilon(2020, worksheet.xi_a_cl305, 0.001); end
  def test_xi_a_cm305; assert_in_epsilon(2025, worksheet.xi_a_cm305, 0.001); end
  def test_xi_a_cn305; assert_in_epsilon(2030, worksheet.xi_a_cn305, 0.001); end
  def test_xi_a_co305; assert_in_epsilon(2035, worksheet.xi_a_co305, 0.001); end
  def test_xi_a_cp305; assert_in_epsilon(2040, worksheet.xi_a_cp305, 0.001); end
  def test_xi_a_cq305; assert_in_epsilon(2045, worksheet.xi_a_cq305, 0.001); end
  def test_xi_a_cr305; assert_in_epsilon(2050, worksheet.xi_a_cr305, 0.001); end
  def test_xi_a_c306; assert_equal("(ii)", worksheet.xi_a_c306); end
  def test_xi_a_d306; assert_equal("Oxygen Steel", worksheet.xi_a_d306); end
  def test_xi_a_e306; assert_in_epsilon(5264, worksheet.xi_a_e306, 0.001); end
  def test_xi_a_f306; assert_in_epsilon(4336.3516, worksheet.xi_a_f306, 0.001); end
  def test_xi_a_g306; assert_in_epsilon(4303.5832, worksheet.xi_a_g306, 0.001); end
  def test_xi_a_h306; assert_in_epsilon(4270.8148, worksheet.xi_a_h306, 0.001); end
  def test_xi_a_i306; assert_in_epsilon(4238.0464, worksheet.xi_a_i306, 0.001); end
  def test_xi_a_j306; assert_in_epsilon(4205.278, worksheet.xi_a_j306, 0.001); end
  def test_xi_a_k306; assert_in_epsilon(4172.509599999999, worksheet.xi_a_k306, 0.001); end
  def test_xi_a_l306; assert_in_epsilon(4139.7412, worksheet.xi_a_l306, 0.001); end
  def test_xi_a_m306; assert_in_epsilon(4106.9728, worksheet.xi_a_m306, 0.001); end
  def test_xi_a_o306; assert_equal("(ii)", worksheet.xi_a_o306); end
  def test_xi_a_p306; assert_equal("Oxygen Steel", worksheet.xi_a_p306); end
  def test_xi_a_aa306; assert_equal("V.01", worksheet.xi_a_aa306); end
  def test_xi_a_ab306; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab306); end
  def test_xi_a_ac306; assert_in_delta(0.08204782728879889, worksheet.xi_a_ac306, 0.001); end
  def test_xi_a_ad306; assert_in_delta(0.08204782728879889, worksheet.xi_a_ad306, 0.001); end
  def test_xi_a_ae306; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae306, 0.001); end
  def test_xi_a_af306; assert_in_delta(0.08204782728879889, worksheet.xi_a_af306, 0.001); end
  def test_xi_a_ag306; assert_in_delta(0.08204782728879889, worksheet.xi_a_ag306, 0.001); end
  def test_xi_a_ah306; assert_in_delta(0.08204782728879889, worksheet.xi_a_ah306, 0.001); end
  def test_xi_a_ai306; assert_in_delta(0.08204782728879889, worksheet.xi_a_ai306, 0.001); end
  def test_xi_a_aj306; assert_in_delta(0.08204782728879889, worksheet.xi_a_aj306, 0.001); end
  def test_xi_a_ak306; assert_in_delta(0.08204782728879889, worksheet.xi_a_ak306, 0.001); end
  def test_xi_a_am306; assert_equal("(ii)", worksheet.xi_a_am306); end
  def test_xi_a_an306; assert_equal("Oxygen Steel", worksheet.xi_a_an306); end
  def test_xi_a_ao306; assert_in_delta(0, (worksheet.xi_a_ao306||0), 0.001); end
  def test_xi_a_ap306; assert_in_delta(0, (worksheet.xi_a_ap306||0), 0.001); end
  def test_xi_a_aq306; assert_in_delta(0, (worksheet.xi_a_aq306||0), 0.001); end
  def test_xi_a_ar306; assert_in_delta(0, (worksheet.xi_a_ar306||0), 0.001); end
  def test_xi_a_as306; assert_in_delta(0, (worksheet.xi_a_as306||0), 0.001); end
  def test_xi_a_at306; assert_in_delta(0, (worksheet.xi_a_at306||0), 0.001); end
  def test_xi_a_au306; assert_in_delta(0, (worksheet.xi_a_au306||0), 0.001); end
  def test_xi_a_av306; assert_in_delta(0, (worksheet.xi_a_av306||0), 0.001); end
  def test_xi_a_aw306; assert_in_delta(0, (worksheet.xi_a_aw306||0), 0.001); end
  def test_xi_a_ay306; assert_equal("(ii)", worksheet.xi_a_ay306); end
  def test_xi_a_az306; assert_equal("Oxygen Steel", worksheet.xi_a_az306); end
  def test_xi_a_bl306; assert_equal("Oxygen Steel", worksheet.xi_a_bl306); end
  def test_xi_a_bx306; assert_equal("Oxygen Steel", worksheet.xi_a_bx306); end
  def test_xi_a_ba306; assert_in_epsilon(7.404573633815222, worksheet.xi_a_ba306, 0.001); end
  def test_xi_a_ac313; assert_in_epsilon(17.667755554147792, worksheet.xi_a_ac313, 0.001); end
  def test_xi_a_bm286; assert_in_delta(0, (worksheet.xi_a_bm286||0), 0.001); end
  def test_xi_a_bm306; assert_in_delta(0, (worksheet.xi_a_bm306||0), 0.001); end
  def test_xi_a_by306; assert_in_delta(0, (worksheet.xi_a_by306||0), 0.001); end
  def test_xi_a_bb306; assert_in_epsilon(6.064398899237629, worksheet.xi_a_bb306, 0.001); end
  def test_xi_a_ad313; assert_in_epsilon(17.955346389372075, worksheet.xi_a_ad313, 0.001); end
  def test_xi_a_bn286; assert_in_epsilon(-98.84153464200017, worksheet.xi_a_bn286, 0.001); end
  def test_xi_a_bn306; assert_in_epsilon(-2.887756603763421, worksheet.xi_a_bn306, 0.001); end
  def test_xi_a_bz306; assert_in_epsilon(4.299906442103641, worksheet.xi_a_bz306, 0.001); end
  def test_xi_a_bc306; assert_in_epsilon(5.983535240282053, worksheet.xi_a_bc306, 0.001); end
  def test_xi_a_ae313; assert_in_epsilon(17.42991070429268, worksheet.xi_a_ae313, 0.001); end
  def test_xi_a_bo286; assert_in_epsilon(-99.33840957031958, worksheet.xi_a_bo286, 0.001); end
  def test_xi_a_bo306; assert_in_epsilon(-5.564135156495922, worksheet.xi_a_bo306, 0.001); end
  def test_xi_a_ca306; assert_in_epsilon(8.367092518239197, worksheet.xi_a_ca306, 0.001); end
  def test_xi_a_bd306; assert_in_epsilon(5.903205139199904, worksheet.xi_a_bd306, 0.001); end
  def test_xi_a_af313; assert_in_epsilon(17.722435711286632, worksheet.xi_a_af313, 0.001); end
  def test_xi_a_bp286; assert_in_epsilon(-104.45180299812677, worksheet.xi_a_bp286, 0.001); end
  def test_xi_a_bp306; assert_in_epsilon(-8.421660169682127, worksheet.xi_a_bp306, 0.001); end
  def test_xi_a_cb306; assert_in_epsilon(12.594082739891363, worksheet.xi_a_cb306, 0.001); end
  def test_xi_a_be306; assert_in_epsilon(5.823408595991183, worksheet.xi_a_be306, 0.001); end
  def test_xi_a_ag313; assert_in_epsilon(15.580054430104807, worksheet.xi_a_ag313, 0.001); end
  def test_xi_a_bq286; assert_in_epsilon(-94.8547278637891, worksheet.xi_a_bq286, 0.001); end
  def test_xi_a_bq306; assert_in_epsilon(-9.795733889576297, worksheet.xi_a_bq306, 0.001); end
  def test_xi_a_cc306; assert_in_epsilon(15.3162793533144, worksheet.xi_a_cc306, 0.001); end
  def test_xi_a_bf306; assert_in_epsilon(5.744145610655891, worksheet.xi_a_bf306, 0.001); end
  def test_xi_a_ah313; assert_in_epsilon(14.397923182888775, worksheet.xi_a_ah313, 0.001); end
  def test_xi_a_br286; assert_in_epsilon(-90.45739608528066, worksheet.xi_a_br286, 0.001); end
  def test_xi_a_br306; assert_in_epsilon(-11.228115645995786, worksheet.xi_a_br306, 0.001); end
  def test_xi_a_cd306; assert_in_epsilon(18.07544168832559, worksheet.xi_a_cd306, 0.001); end
  def test_xi_a_bg306; assert_in_epsilon(5.665416183194027, worksheet.xi_a_bg306, 0.001); end
  def test_xi_a_ai313; assert_in_epsilon(13.306240965237233, worksheet.xi_a_ai313, 0.001); end
  def test_xi_a_bs286; assert_in_epsilon(-86.18617290400243, worksheet.xi_a_bs286, 0.001); end
  def test_xi_a_bs306; assert_in_epsilon(-12.355100666570536, worksheet.xi_a_bs306, 0.001); end
  def test_xi_a_ce306; assert_in_epsilon(20.507864972554877, worksheet.xi_a_ce306, 0.001); end
  def test_xi_a_bh306; assert_in_epsilon(5.5872203136055925, worksheet.xi_a_bh306, 0.001); end
  def test_xi_a_aj313; assert_in_epsilon(12.21802589642779, worksheet.xi_a_aj313, 0.001); end
  def test_xi_a_bt286; assert_in_epsilon(-81.51351649704799, worksheet.xi_a_bt286, 0.001); end
  def test_xi_a_bt306; assert_in_epsilon(-13.131507388456441, worksheet.xi_a_bt306, 0.001); end
  def test_xi_a_cf306; assert_in_epsilon(22.56836764315819, worksheet.xi_a_cf306, 0.001); end
  def test_xi_a_bi283; assert_in_epsilon(5.777048349102635, worksheet.xi_a_bi283, 0.001); end
  def test_xi_a_bi306; assert_in_epsilon(5.509558001890584, worksheet.xi_a_bi306, 0.001); end
  def test_xi_a_ak313; assert_in_epsilon(11.099194188006347, worksheet.xi_a_ak313, 0.001); end
  def test_xi_a_bu286; assert_in_epsilon(-76.20742906784409, worksheet.xi_a_bu286, 0.001); end
  def test_xi_a_bu306; assert_in_epsilon(-13.525258452850721, worksheet.xi_a_bu306, 0.001); end
  def test_xi_a_cg306; assert_in_epsilon(24.224872341332784, worksheet.xi_a_cg306, 0.001); end
  def test_xi_a_ci306; assert_equal("Oxygen Steel", worksheet.xi_a_ci306); end
  def test_xi_a_cj306; assert_in_epsilon(6000, worksheet.xi_a_cj306, 0.001); end
  def test_xi_a_ck306; assert_in_epsilon(5000, worksheet.xi_a_ck306, 0.001); end
  def test_xi_a_cl306; assert_in_epsilon(5000, worksheet.xi_a_cl306, 0.001); end
  def test_xi_a_cm306; assert_in_epsilon(5000, worksheet.xi_a_cm306, 0.001); end
  def test_xi_a_cn306; assert_in_epsilon(5000, worksheet.xi_a_cn306, 0.001); end
  def test_xi_a_co306; assert_in_epsilon(5000, worksheet.xi_a_co306, 0.001); end
  def test_xi_a_cp306; assert_in_epsilon(5000, worksheet.xi_a_cp306, 0.001); end
  def test_xi_a_cq306; assert_in_epsilon(5000, worksheet.xi_a_cq306, 0.001); end
  def test_xi_a_cr306; assert_in_epsilon(5000, worksheet.xi_a_cr306, 0.001); end
  def test_xi_a_c307; assert_equal("(iii)", worksheet.xi_a_c307); end
  def test_xi_a_d307; assert_equal("Electric Steel", worksheet.xi_a_d307); end
  def test_xi_a_e307; assert_in_epsilon(2869, worksheet.xi_a_e307, 0.001); end
  def test_xi_a_f307; assert_in_epsilon(3735.6509, worksheet.xi_a_f307, 0.001); end
  def test_xi_a_g307; assert_in_epsilon(3707.4218, worksheet.xi_a_g307, 0.001); end
  def test_xi_a_h307; assert_in_epsilon(3679.1927, worksheet.xi_a_h307, 0.001); end
  def test_xi_a_i307; assert_in_epsilon(3650.9636, worksheet.xi_a_i307, 0.001); end
  def test_xi_a_j307; assert_in_epsilon(3622.7345, worksheet.xi_a_j307, 0.001); end
  def test_xi_a_k307; assert_in_epsilon(3594.5054, worksheet.xi_a_k307, 0.001); end
  def test_xi_a_l307; assert_in_epsilon(3566.2763, worksheet.xi_a_l307, 0.001); end
  def test_xi_a_m307; assert_in_epsilon(3538.0472, worksheet.xi_a_m307, 0.001); end
  def test_xi_a_o307; assert_equal("(iii)", worksheet.xi_a_o307); end
  def test_xi_a_p307; assert_equal("Electric Steel", worksheet.xi_a_p307); end
  def test_xi_a_aa307; assert_equal("V.03", worksheet.xi_a_aa307); end
  def test_xi_a_ab307; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab307); end
  def test_xi_a_ac307; assert_in_delta(0.7978154055943194, worksheet.xi_a_ac307, 0.001); end
  def test_xi_a_ad307; assert_in_delta(0.7978154055943194, worksheet.xi_a_ad307, 0.001); end
  def test_xi_a_ae307; assert_in_delta(0.7978154055943194, worksheet.xi_a_ae307, 0.001); end
  def test_xi_a_af307; assert_in_delta(0.7978154055943194, worksheet.xi_a_af307, 0.001); end
  def test_xi_a_ag307; assert_in_delta(0.7978154055943194, worksheet.xi_a_ag307, 0.001); end
  def test_xi_a_ah307; assert_in_delta(0.7978154055943194, worksheet.xi_a_ah307, 0.001); end
  def test_xi_a_ai307; assert_in_delta(0.7978154055943194, worksheet.xi_a_ai307, 0.001); end
  def test_xi_a_aj307; assert_in_delta(0.7978154055943194, worksheet.xi_a_aj307, 0.001); end
  def test_xi_a_ak307; assert_in_delta(0.7978154055943194, worksheet.xi_a_ak307, 0.001); end
  def test_xi_a_am307; assert_equal("(iii)", worksheet.xi_a_am307); end
  def test_xi_a_an307; assert_equal("Electric Steel", worksheet.xi_a_an307); end
  def test_xi_a_ao307; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao307, 0.001); end
  def test_xi_a_ap307; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap307, 0.001); end
  def test_xi_a_aq307; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq307, 0.001); end
  def test_xi_a_ar307; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar307, 0.001); end
  def test_xi_a_as307; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as307, 0.001); end
  def test_xi_a_at307; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at307, 0.001); end
  def test_xi_a_au307; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au307, 0.001); end
  def test_xi_a_av307; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av307, 0.001); end
  def test_xi_a_aw307; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw307, 0.001); end
  def test_xi_a_ay307; assert_equal("(iii)", worksheet.xi_a_ay307); end
  def test_xi_a_az307; assert_equal("Electric Steel", worksheet.xi_a_az307); end
  def test_xi_a_bl307; assert_equal("Electric Steel", worksheet.xi_a_bl307); end
  def test_xi_a_bx307; assert_equal("Electric Steel", worksheet.xi_a_bx307); end
  def test_xi_a_ba307; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_ba307, 0.001); end
  def test_xi_a_bm287; assert_in_delta(0, (worksheet.xi_a_bm287||0), 0.001); end
  def test_xi_a_bm307; assert_in_delta(0, (worksheet.xi_a_bm307||0), 0.001); end
  def test_xi_a_by307; assert_in_delta(0, (worksheet.xi_a_by307||0), 0.001); end
  def test_xi_a_bb307; assert_in_epsilon(2.3704901780731915, worksheet.xi_a_bb307, 0.001); end
  def test_xi_a_bn287; assert_in_epsilon(37.60449096715968, worksheet.xi_a_bn287, 0.001); end
  def test_xi_a_bn307; assert_in_epsilon(-1.0130755253175892, worksheet.xi_a_bn307, 0.001); end
  def test_xi_a_bz307; assert_in_epsilon(1.3077206814963525, worksheet.xi_a_bz307, 0.001); end
  def test_xi_a_bc307; assert_in_epsilon(2.3452666885956592, worksheet.xi_a_bc307, 0.001); end
  def test_xi_a_bo287; assert_in_epsilon(35.3150201339935, worksheet.xi_a_bo287, 0.001); end
  def test_xi_a_bo307; assert_in_epsilon(-1.9519959331956045, worksheet.xi_a_bo307, 0.001); end
  def test_xi_a_ca307; assert_in_epsilon(2.536833170144874, worksheet.xi_a_ca307, 0.001); end
  def test_xi_a_bd307; assert_in_epsilon(2.3201545260033325, worksheet.xi_a_bd307, 0.001); end
  def test_xi_a_bp287; assert_in_epsilon(34.69872120052533, worksheet.xi_a_bp287, 0.001); end
  def test_xi_a_bp307; assert_in_epsilon(-2.9544656877688453, worksheet.xi_a_bp307, 0.001); end
  def test_xi_a_cb307; assert_in_epsilon(3.825041930080399, worksheet.xi_a_cb307, 0.001); end
  def test_xi_a_be307; assert_in_epsilon(2.295153690296212, worksheet.xi_a_be307, 0.001); end
  def test_xi_a_bq287; assert_in_epsilon(29.441317579774577, worksheet.xi_a_bq287, 0.001); end
  def test_xi_a_bq307; assert_in_epsilon(-3.436514782139369, worksheet.xi_a_bq307, 0.001); end
  def test_xi_a_cc307; assert_in_epsilon(4.588376954404968, worksheet.xi_a_cc307, 0.001); end
  def test_xi_a_bf307; assert_in_epsilon(2.2702641814742983, worksheet.xi_a_bf307, 0.001); end
  def test_xi_a_br287; assert_in_epsilon(26.225270745814015, worksheet.xi_a_br287, 0.001); end
  def test_xi_a_br307; assert_in_epsilon(-3.939019355568064, worksheet.xi_a_br307, 0.001); end
  def test_xi_a_cd307; assert_in_epsilon(5.367714382379432, worksheet.xi_a_cd307, 0.001); end
  def test_xi_a_bg307; assert_in_epsilon(2.24548599953759, worksheet.xi_a_bg307, 0.001); end
  def test_xi_a_bs287; assert_in_epsilon(23.329088316729795, worksheet.xi_a_bs287, 0.001); end
  def test_xi_a_bs307; assert_in_epsilon(-4.334385412477388, worksheet.xi_a_bs307, 0.001); end
  def test_xi_a_ce307; assert_in_epsilon(6.035460218426305, worksheet.xi_a_ce307, 0.001); end
  def test_xi_a_bh307; assert_in_epsilon(2.2208191444860876, worksheet.xi_a_bh307, 0.001); end
  def test_xi_a_bt287; assert_in_epsilon(20.587692804822495, worksheet.xi_a_bt287, 0.001); end
  def test_xi_a_bt307; assert_in_epsilon(-4.606762470367144, worksheet.xi_a_bt307, 0.001); end
  def test_xi_a_cf307; assert_in_epsilon(6.575763980045387, worksheet.xi_a_cf307, 0.001); end
  def test_xi_a_bi284; assert_in_epsilon(2.252075494769774, worksheet.xi_a_bi284, 0.001); end
  def test_xi_a_bi307; assert_in_epsilon(2.1962636163197917, worksheet.xi_a_bi307, 0.001); end
  def test_xi_a_bu287; assert_in_epsilon(17.945267697378483, worksheet.xi_a_bu287, 0.001); end
  def test_xi_a_bu307; assert_in_epsilon(-4.744897230715594, worksheet.xi_a_bu307, 0.001); end
  def test_xi_a_cg307; assert_in_epsilon(6.977372368714889, worksheet.xi_a_cg307, 0.001); end
  def test_xi_a_ci307; assert_equal("Electric Steel", worksheet.xi_a_ci307); end
  def test_xi_a_cj307; assert_in_epsilon(3000, worksheet.xi_a_cj307, 0.001); end
  def test_xi_a_ck307; assert_in_epsilon(4000, worksheet.xi_a_ck307, 0.001); end
  def test_xi_a_cl307; assert_in_epsilon(4000, worksheet.xi_a_cl307, 0.001); end
  def test_xi_a_cm307; assert_in_epsilon(4000, worksheet.xi_a_cm307, 0.001); end
  def test_xi_a_cn307; assert_in_epsilon(4000, worksheet.xi_a_cn307, 0.001); end
  def test_xi_a_co307; assert_in_epsilon(4000, worksheet.xi_a_co307, 0.001); end
  def test_xi_a_cp307; assert_in_epsilon(4000, worksheet.xi_a_cp307, 0.001); end
  def test_xi_a_cq307; assert_in_epsilon(4000, worksheet.xi_a_cq307, 0.001); end
  def test_xi_a_cr307; assert_in_epsilon(4000, worksheet.xi_a_cr307, 0.001); end
  def test_xi_a_d308; assert_equal("Total", worksheet.xi_a_d308); end
  def test_xi_a_e308; assert_in_epsilon(8133, worksheet.xi_a_e308, 0.001); end
  def test_xi_a_f308; assert_in_epsilon(8072.0025000000005, worksheet.xi_a_f308, 0.001); end
  def test_xi_a_g308; assert_in_epsilon(8011.005, worksheet.xi_a_g308, 0.001); end
  def test_xi_a_h308; assert_in_epsilon(7950.0075, worksheet.xi_a_h308, 0.001); end
  def test_xi_a_i308; assert_in_epsilon(7889.01, worksheet.xi_a_i308, 0.001); end
  def test_xi_a_j308; assert_in_epsilon(7828.012500000001, worksheet.xi_a_j308, 0.001); end
  def test_xi_a_k308; assert_in_epsilon(7767.014999999999, worksheet.xi_a_k308, 0.001); end
  def test_xi_a_l308; assert_in_epsilon(7706.0175, worksheet.xi_a_l308, 0.001); end
  def test_xi_a_m308; assert_in_epsilon(7645.0199999999995, worksheet.xi_a_m308, 0.001); end
  def test_xi_a_o308; assert_equal("Total", worksheet.xi_a_o308); end
  def test_xi_a_aa308; assert_equal("V.05", worksheet.xi_a_aa308); end
  def test_xi_a_ab308; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab308); end
  def test_xi_a_ac308; assert_in_delta(0.21102564883744446, worksheet.xi_a_ac308, 0.001); end
  def test_xi_a_ad308; assert_in_delta(0.21102564883744446, worksheet.xi_a_ad308, 0.001); end
  def test_xi_a_ae308; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae308, 0.001); end
  def test_xi_a_af308; assert_in_delta(0.21102564883744446, worksheet.xi_a_af308, 0.001); end
  def test_xi_a_ag308; assert_in_delta(0.21102564883744446, worksheet.xi_a_ag308, 0.001); end
  def test_xi_a_ah308; assert_in_delta(0.21102564883744446, worksheet.xi_a_ah308, 0.001); end
  def test_xi_a_ai308; assert_in_delta(0.21102564883744446, worksheet.xi_a_ai308, 0.001); end
  def test_xi_a_aj308; assert_in_delta(0.21102564883744446, worksheet.xi_a_aj308, 0.001); end
  def test_xi_a_ak308; assert_in_delta(0.21102564883744446, worksheet.xi_a_ak308, 0.001); end
  def test_xi_a_am308; assert_equal("Total", worksheet.xi_a_am308); end
  def test_xi_a_ay308; assert_equal("Total", worksheet.xi_a_ay308); end
  def test_xi_a_ba308; assert_in_epsilon(9.230780077441661, worksheet.xi_a_ba308, 0.001); end
  def test_xi_a_bb308; assert_in_epsilon(8.434889077310821, worksheet.xi_a_bb308, 0.001); end
  def test_xi_a_bc308; assert_in_epsilon(8.328801928877713, worksheet.xi_a_bc308, 0.001); end
  def test_xi_a_bd308; assert_in_epsilon(8.223359665203237, worksheet.xi_a_bd308, 0.001); end
  def test_xi_a_be308; assert_in_epsilon(8.118562286287396, worksheet.xi_a_be308, 0.001); end
  def test_xi_a_bf308; assert_in_epsilon(8.01440979213019, worksheet.xi_a_bf308, 0.001); end
  def test_xi_a_bg308; assert_in_epsilon(7.910902182731617, worksheet.xi_a_bg308, 0.001); end
  def test_xi_a_bh308; assert_in_epsilon(7.80803945809168, worksheet.xi_a_bh308, 0.001); end
  def test_xi_a_bl308; assert_equal("Total", worksheet.xi_a_bl308); end
  def test_xi_a_bm308; assert_in_delta(0, (worksheet.xi_a_bm308||0), 0.001); end
  def test_xi_a_bn308; assert_in_epsilon(-3.90083212908101, worksheet.xi_a_bn308, 0.001); end
  def test_xi_a_bo308; assert_in_epsilon(-7.516131089691527, worksheet.xi_a_bo308, 0.001); end
  def test_xi_a_bp308; assert_in_epsilon(-11.376125857450972, worksheet.xi_a_bp308, 0.001); end
  def test_xi_a_bq308; assert_in_epsilon(-13.232248671715666, worksheet.xi_a_bq308, 0.001); end
  def test_xi_a_br308; assert_in_epsilon(-15.16713500156385, worksheet.xi_a_br308, 0.001); end
  def test_xi_a_bs308; assert_in_epsilon(-16.689486079047924, worksheet.xi_a_bs308, 0.001); end
  def test_xi_a_bt308; assert_in_epsilon(-17.738269858823585, worksheet.xi_a_bt308, 0.001); end
  def test_xi_a_bu308; assert_in_epsilon(-18.270155683566315, worksheet.xi_a_bu308, 0.001); end
  def test_xi_a_bx308; assert_equal("Total", worksheet.xi_a_bx308); end
  def test_xi_a_by308; assert_in_delta(0, (worksheet.xi_a_by308||0), 0.001); end
  def test_xi_a_bz308; assert_in_epsilon(5.607627123599993, worksheet.xi_a_bz308, 0.001); end
  def test_xi_a_ca308; assert_in_epsilon(10.90392568838407, worksheet.xi_a_ca308, 0.001); end
  def test_xi_a_cb308; assert_in_epsilon(16.41912466997176, worksheet.xi_a_cb308, 0.001); end
  def test_xi_a_cc308; assert_in_epsilon(19.904656307719367, worksheet.xi_a_cc308, 0.001); end
  def test_xi_a_cd308; assert_in_epsilon(23.443156070705022, worksheet.xi_a_cd308, 0.001); end
  def test_xi_a_ce308; assert_in_epsilon(26.543325190981182, worksheet.xi_a_ce308, 0.001); end
  def test_xi_a_cf308; assert_in_epsilon(29.144131623203577, worksheet.xi_a_cf308, 0.001); end
  def test_xi_a_cg308; assert_in_epsilon(31.202244710047673, worksheet.xi_a_cg308, 0.001); end
  def test_xi_a_q309; assert_in_epsilon(38.17081383255731, worksheet.xi_a_q309, 0.001); end
  def test_xi_a_r309; assert_in_epsilon(34.54304334061753, worksheet.xi_a_r309, 0.001); end
  def test_xi_a_s309; assert_in_epsilon(34.066402643095586, worksheet.xi_a_s309, 0.001); end
  def test_xi_a_t309; assert_in_epsilon(33.593045348771255, worksheet.xi_a_t309, 0.001); end
  def test_xi_a_u309; assert_in_epsilon(33.12297145764456, worksheet.xi_a_u309, 0.001); end
  def test_xi_a_v309; assert_in_epsilon(32.65618096971549, worksheet.xi_a_v309, 0.001); end
  def test_xi_a_w309; assert_in_epsilon(32.19267388498404, worksheet.xi_a_w309, 0.001); end
  def test_xi_a_x309; assert_in_epsilon(31.732450203450227, worksheet.xi_a_x309, 0.001); end
  def test_xi_a_y309; assert_in_epsilon(31.275509925114026, worksheet.xi_a_y309, 0.001); end
  def test_xi_a_aa309; assert_equal("V.04", worksheet.xi_a_aa309); end
  def test_xi_a_ab309; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab309); end
  def test_xi_a_ac309; assert_in_delta(0.07696335047929354, worksheet.xi_a_ac309, 0.001); end
  def test_xi_a_ad309; assert_in_delta(0.07696335047929354, worksheet.xi_a_ad309, 0.001); end
  def test_xi_a_ae309; assert_in_delta(0.07696335047929354, worksheet.xi_a_ae309, 0.001); end
  def test_xi_a_af309; assert_in_delta(0.07696335047929354, worksheet.xi_a_af309, 0.001); end
  def test_xi_a_ag309; assert_in_delta(0.07696335047929354, worksheet.xi_a_ag309, 0.001); end
  def test_xi_a_ah309; assert_in_delta(0.07696335047929354, worksheet.xi_a_ah309, 0.001); end
  def test_xi_a_ai309; assert_in_delta(0.07696335047929354, worksheet.xi_a_ai309, 0.001); end
  def test_xi_a_aj309; assert_in_delta(0.07696335047929354, worksheet.xi_a_aj309, 0.001); end
  def test_xi_a_ak309; assert_in_delta(0.07696335047929354, worksheet.xi_a_ak309, 0.001); end
  def test_xi_a_bk309; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bk309); end
  def test_xi_a_bl309; assert_equal("Oxygen Steel", worksheet.xi_a_bl309); end
  def test_xi_a_bw309; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bw309); end
  def test_xi_a_bx309; assert_equal("Oxygen Steel", worksheet.xi_a_bx309); end
  def test_xi_a_by309; assert_in_delta(0, (worksheet.xi_a_by309||0), 0.001); end
  def test_xi_a_bz309; assert_in_epsilon(178.66809214901906, worksheet.xi_a_bz309, 0.001); end
  def test_xi_a_ca309; assert_in_epsilon(183.23215315347403, worksheet.xi_a_ca309, 0.001); end
  def test_xi_a_cb309; assert_in_epsilon(192.57253680293337, worksheet.xi_a_cb309, 0.001); end
  def test_xi_a_cc309; assert_in_epsilon(185.69765828201875, worksheet.xi_a_cc309, 0.001); end
  def test_xi_a_cd309; assert_in_epsilon(184.0594888385215, worksheet.xi_a_cd309, 0.001); end
  def test_xi_a_ce309; assert_in_epsilon(182.22068894147256, worksheet.xi_a_ce309, 0.001); end
  def test_xi_a_cf309; assert_in_epsilon(179.60853520512143, worksheet.xi_a_cf309, 0.001); end
  def test_xi_a_cg309; assert_in_epsilon(175.95895247409214, worksheet.xi_a_cg309, 0.001); end
  def test_xi_a_aa310; assert_equal("V.06", worksheet.xi_a_aa310); end
  def test_xi_a_ab310; assert_equal("Blast furnace gas", worksheet.xi_a_ab310); end
  def test_xi_a_ac310; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ac310, 0.001); end
  def test_xi_a_ad310; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ad310, 0.001); end
  def test_xi_a_ae310; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ae310, 0.001); end
  def test_xi_a_af310; assert_in_delta(-0.1132646069606094, worksheet.xi_a_af310, 0.001); end
  def test_xi_a_ag310; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ag310, 0.001); end
  def test_xi_a_ah310; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ah310, 0.001); end
  def test_xi_a_ai310; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ai310, 0.001); end
  def test_xi_a_aj310; assert_in_delta(-0.1132646069606094, worksheet.xi_a_aj310, 0.001); end
  def test_xi_a_ak310; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ak310, 0.001); end
  def test_xi_a_am310; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am310); end
  def test_xi_a_bl310; assert_equal("Electric Steel", worksheet.xi_a_bl310); end
  def test_xi_a_bx310; assert_equal("Electric Steel", worksheet.xi_a_bx310); end
  def test_xi_a_by310; assert_in_delta(0, (worksheet.xi_a_by310||0), 0.001); end
  def test_xi_a_bz310; assert_in_epsilon(-70.47388333423275, worksheet.xi_a_bz310, 0.001); end
  def test_xi_a_ca310; assert_in_epsilon(-66.95530001241805, worksheet.xi_a_ca310, 0.001); end
  def test_xi_a_cb310; assert_in_epsilon(-65.05079231901435, worksheet.xi_a_cb310, 0.001); end
  def test_xi_a_cc310; assert_in_epsilon(-59.03005367393904, worksheet.xi_a_cc310, 0.001); end
  def test_xi_a_cd310; assert_in_epsilon(-55.03466941200401, worksheet.xi_a_cd310, 0.001); end
  def test_xi_a_ce310; assert_in_epsilon(-51.47074114687291, worksheet.xi_a_ce310, 0.001); end
  def test_xi_a_cf310; assert_in_epsilon(-48.18904187334653, worksheet.xi_a_cf310, 0.001); end
  def test_xi_a_cg310; assert_in_epsilon(-45.14500837723302, worksheet.xi_a_cg310, 0.001); end
  def test_xi_a_aa311; assert_equal("V.07", worksheet.xi_a_aa311); end
  def test_xi_a_ab311; assert_equal("Heat transport", worksheet.xi_a_ab311); end
  def test_xi_a_ac311; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ac311, 0.001); end
  def test_xi_a_ad311; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ad311, 0.001); end
  def test_xi_a_ae311; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae311, 0.001); end
  def test_xi_a_af311; assert_in_delta(-0.05458762523924703, worksheet.xi_a_af311, 0.001); end
  def test_xi_a_ag311; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ag311, 0.001); end
  def test_xi_a_ah311; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ah311, 0.001); end
  def test_xi_a_ai311; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ai311, 0.001); end
  def test_xi_a_aj311; assert_in_delta(-0.05458762523924703, worksheet.xi_a_aj311, 0.001); end
  def test_xi_a_ak311; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ak311, 0.001); end
  def test_xi_a_am311; assert_equal("Industry", worksheet.xi_a_am311); end
  def test_xi_a_an311; assert_equal("Description", worksheet.xi_a_an311); end
  def test_xi_a_ao311; assert_in_epsilon(2010, worksheet.xi_a_ao311, 0.001); end
  def test_xi_a_ap311; assert_in_epsilon(2015, worksheet.xi_a_ap311, 0.001); end
  def test_xi_a_aq311; assert_in_epsilon(2020, worksheet.xi_a_aq311, 0.001); end
  def test_xi_a_ar311; assert_in_epsilon(2025, worksheet.xi_a_ar311, 0.001); end
  def test_xi_a_as311; assert_in_epsilon(2030, worksheet.xi_a_as311, 0.001); end
  def test_xi_a_at311; assert_in_epsilon(2035, worksheet.xi_a_at311, 0.001); end
  def test_xi_a_au311; assert_in_epsilon(2040, worksheet.xi_a_au311, 0.001); end
  def test_xi_a_av311; assert_in_epsilon(2045, worksheet.xi_a_av311, 0.001); end
  def test_xi_a_aw311; assert_in_epsilon(2050, worksheet.xi_a_aw311, 0.001); end
  def test_xi_a_bl311; assert_equal("Total", worksheet.xi_a_bl311); end
  def test_xi_a_bm311; assert_in_delta(0, (worksheet.xi_a_bm311||0), 0.001); end
  def test_xi_a_bn311; assert_in_epsilon(-65.1378758039215, worksheet.xi_a_bn311, 0.001); end
  def test_xi_a_bo311; assert_in_epsilon(-71.53952052601761, worksheet.xi_a_bo311, 0.001); end
  def test_xi_a_bp311; assert_in_epsilon(-81.12920765505241, worksheet.xi_a_bp311, 0.001); end
  def test_xi_a_bq311; assert_in_epsilon(-78.64565895573018, worksheet.xi_a_bq311, 0.001); end
  def test_xi_a_br311; assert_in_epsilon(-79.3992603410305, worksheet.xi_a_br311, 0.001); end
  def test_xi_a_bs311; assert_in_epsilon(-79.54657066632056, worksheet.xi_a_bs311, 0.001); end
  def test_xi_a_bt311; assert_in_epsilon(-78.66409355104908, worksheet.xi_a_bt311, 0.001); end
  def test_xi_a_bx311; assert_equal("Total", worksheet.xi_a_bx311); end
  def test_xi_a_by311; assert_in_delta(0, (worksheet.xi_a_by311||0), 0.001); end
  def test_xi_a_bz311; assert_in_epsilon(108.19420881478632, worksheet.xi_a_bz311, 0.001); end
  def test_xi_a_ca311; assert_in_epsilon(116.276853141056, worksheet.xi_a_ca311, 0.001); end
  def test_xi_a_cb311; assert_in_epsilon(127.52174448391904, worksheet.xi_a_cb311, 0.001); end
  def test_xi_a_cc311; assert_in_epsilon(126.66760460807971, worksheet.xi_a_cc311, 0.001); end
  def test_xi_a_cd311; assert_in_epsilon(129.0248194265175, worksheet.xi_a_cd311, 0.001); end
  def test_xi_a_ce311; assert_in_epsilon(130.74994779459965, worksheet.xi_a_ce311, 0.001); end
  def test_xi_a_cf311; assert_in_epsilon(131.4194933317749, worksheet.xi_a_cf311, 0.001); end
  def test_xi_a_aa312; assert_equal("Intensity", worksheet.xi_a_aa312); end
  def test_xi_a_ab312; assert_equal("Intensity", worksheet.xi_a_ab312); end
  def test_xi_a_ac312; assert_in_delta(0.21950983912607056, worksheet.xi_a_ac312, 0.001); end
  def test_xi_a_ad312; assert_in_delta(0.21950983912607056, worksheet.xi_a_ad312, 0.001); end
  def test_xi_a_ae312; assert_in_delta(0.21950983912607056, worksheet.xi_a_ae312, 0.001); end
  def test_xi_a_af312; assert_in_delta(0.21950983912607056, worksheet.xi_a_af312, 0.001); end
  def test_xi_a_ag312; assert_in_delta(0.21950983912607056, worksheet.xi_a_ag312, 0.001); end
  def test_xi_a_ah312; assert_in_delta(0.21950983912607056, worksheet.xi_a_ah312, 0.001); end
  def test_xi_a_ai312; assert_in_delta(0.21950983912607056, worksheet.xi_a_ai312, 0.001); end
  def test_xi_a_aj312; assert_in_delta(0.21950983912607056, worksheet.xi_a_aj312, 0.001); end
  def test_xi_a_ak312; assert_in_delta(0.21950983912607056, worksheet.xi_a_ak312, 0.001); end
  def test_xi_a_am312; assert_equal("(ii)", worksheet.xi_a_am312); end
  def test_xi_a_an312; assert_equal("Oxygen Steel", worksheet.xi_a_an312); end
  def test_xi_a_ao312; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao312, 0.001); end
  def test_xi_a_ap312; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap312, 0.001); end
  def test_xi_a_aq312; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq312, 0.001); end
  def test_xi_a_ar312; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar312, 0.001); end
  def test_xi_a_as312; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as312, 0.001); end
  def test_xi_a_at312; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at312, 0.001); end
  def test_xi_a_au312; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au312, 0.001); end
  def test_xi_a_av312; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av312, 0.001); end
  def test_xi_a_aw312; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw312, 0.001); end
  def test_xi_a_aa313; assert_equal("Cost", worksheet.xi_a_aa313); end
  def test_xi_a_ab313; assert_equal("Cost", worksheet.xi_a_ab313); end
  def test_xi_a_am313; assert_equal("(iii)", worksheet.xi_a_am313); end
  def test_xi_a_an313; assert_equal("Electric Steel", worksheet.xi_a_an313); end
  def test_xi_a_ao313; assert_in_delta(0, (worksheet.xi_a_ao313||0), 0.001); end
  def test_xi_a_ap313; assert_in_delta(0, (worksheet.xi_a_ap313||0), 0.001); end
  def test_xi_a_aq313; assert_in_delta(0, (worksheet.xi_a_aq313||0), 0.001); end
  def test_xi_a_ar313; assert_in_delta(0, (worksheet.xi_a_ar313||0), 0.001); end
  def test_xi_a_as313; assert_in_delta(0, (worksheet.xi_a_as313||0), 0.001); end
  def test_xi_a_at313; assert_in_delta(0, (worksheet.xi_a_at313||0), 0.001); end
  def test_xi_a_au313; assert_in_delta(0, (worksheet.xi_a_au313||0), 0.001); end
  def test_xi_a_av313; assert_in_delta(0, (worksheet.xi_a_av313||0), 0.001); end
  def test_xi_a_aw313; assert_in_delta(0, (worksheet.xi_a_aw313||0), 0.001); end
  def test_xi_a_am314; assert_equal("Total", worksheet.xi_a_am314); end
  def test_xi_a_z315; assert_equal("Electrosteel", worksheet.xi_a_z315); end
  def test_xi_a_aa315; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa315); end
  def test_xi_a_aa316; assert_equal("Vector", worksheet.xi_a_aa316); end
  def test_xi_a_ab316; assert_equal("Description", worksheet.xi_a_ab316); end
  def test_xi_a_ac316; assert_in_epsilon(2010, worksheet.xi_a_ac316, 0.001); end
  def test_xi_a_ad316; assert_in_epsilon(2015, worksheet.xi_a_ad316, 0.001); end
  def test_xi_a_ae316; assert_in_epsilon(2020, worksheet.xi_a_ae316, 0.001); end
  def test_xi_a_af316; assert_in_epsilon(2025, worksheet.xi_a_af316, 0.001); end
  def test_xi_a_ag316; assert_in_epsilon(2030, worksheet.xi_a_ag316, 0.001); end
  def test_xi_a_ah316; assert_in_epsilon(2035, worksheet.xi_a_ah316, 0.001); end
  def test_xi_a_ai316; assert_in_epsilon(2040, worksheet.xi_a_ai316, 0.001); end
  def test_xi_a_aj316; assert_in_epsilon(2045, worksheet.xi_a_aj316, 0.001); end
  def test_xi_a_ak316; assert_in_epsilon(2050, worksheet.xi_a_ak316, 0.001); end
  def test_xi_a_aa317; assert_equal("V.01", worksheet.xi_a_aa317); end
  def test_xi_a_ab317; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab317); end
  def test_xi_a_ac317; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac317, 0.001); end
  def test_xi_a_ad317; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad317, 0.001); end
  def test_xi_a_ae317; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae317, 0.001); end
  def test_xi_a_af317; assert_in_delta(0.37661125507716986, worksheet.xi_a_af317, 0.001); end
  def test_xi_a_ag317; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag317, 0.001); end
  def test_xi_a_ah317; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah317, 0.001); end
  def test_xi_a_ai317; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai317, 0.001); end
  def test_xi_a_aj317; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj317, 0.001); end
  def test_xi_a_ak317; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak317, 0.001); end
  def test_xi_a_aa318; assert_equal("V.03", worksheet.xi_a_aa318); end
  def test_xi_a_ab318; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab318); end
  def test_xi_a_ac318; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac318, 0.001); end
  def test_xi_a_ad318; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad318, 0.001); end
  def test_xi_a_ae318; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae318, 0.001); end
  def test_xi_a_af318; assert_in_delta(0.04200640884510868, worksheet.xi_a_af318, 0.001); end
  def test_xi_a_ag318; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag318, 0.001); end
  def test_xi_a_ah318; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah318, 0.001); end
  def test_xi_a_ai318; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai318, 0.001); end
  def test_xi_a_aj318; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj318, 0.001); end
  def test_xi_a_ak318; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak318, 0.001); end
  def test_xi_a_aa319; assert_equal("V.05", worksheet.xi_a_aa319); end
  def test_xi_a_ab319; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab319); end
  def test_xi_a_ac319; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac319, 0.001); end
  def test_xi_a_ad319; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad319, 0.001); end
  def test_xi_a_ae319; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae319, 0.001); end
  def test_xi_a_af319; assert_in_delta(0.5722074496017227, worksheet.xi_a_af319, 0.001); end
  def test_xi_a_ag319; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag319, 0.001); end
  def test_xi_a_ah319; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah319, 0.001); end
  def test_xi_a_ai319; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai319, 0.001); end
  def test_xi_a_aj319; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj319, 0.001); end
  def test_xi_a_ak319; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak319, 0.001); end
  def test_xi_a_aa320; assert_equal("V.04", worksheet.xi_a_aa320); end
  def test_xi_a_ab320; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab320); end
  def test_xi_a_ac320; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac320, 0.001); end
  def test_xi_a_ad320; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad320, 0.001); end
  def test_xi_a_ae320; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae320, 0.001); end
  def test_xi_a_af320; assert_in_delta(0.009174886475998728, worksheet.xi_a_af320, 0.001); end
  def test_xi_a_ag320; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag320, 0.001); end
  def test_xi_a_ah320; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah320, 0.001); end
  def test_xi_a_ai320; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai320, 0.001); end
  def test_xi_a_aj320; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj320, 0.001); end
  def test_xi_a_ak320; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak320, 0.001); end
  def test_xi_a_aa321; assert_equal("V.06", worksheet.xi_a_aa321); end
  def test_xi_a_ab321; assert_equal("Blast furnace gas", worksheet.xi_a_ab321); end
  def test_xi_a_ac321; assert_in_delta(0, (worksheet.xi_a_ac321||0), 0.001); end
  def test_xi_a_ad321; assert_in_delta(0, (worksheet.xi_a_ad321||0), 0.001); end
  def test_xi_a_ae321; assert_in_delta(0, (worksheet.xi_a_ae321||0), 0.001); end
  def test_xi_a_af321; assert_in_delta(0, (worksheet.xi_a_af321||0), 0.001); end
  def test_xi_a_ag321; assert_in_delta(0, (worksheet.xi_a_ag321||0), 0.001); end
  def test_xi_a_ah321; assert_in_delta(0, (worksheet.xi_a_ah321||0), 0.001); end
  def test_xi_a_ai321; assert_in_delta(0, (worksheet.xi_a_ai321||0), 0.001); end
  def test_xi_a_aj321; assert_in_delta(0, (worksheet.xi_a_aj321||0), 0.001); end
  def test_xi_a_ak321; assert_in_delta(0, (worksheet.xi_a_ak321||0), 0.001); end
  def test_xi_a_aa322; assert_equal("V.07", worksheet.xi_a_aa322); end
  def test_xi_a_ab322; assert_equal("Heat transport", worksheet.xi_a_ab322); end
  def test_xi_a_ac322; assert_in_delta(0, (worksheet.xi_a_ac322||0), 0.001); end
  def test_xi_a_ad322; assert_in_delta(0, (worksheet.xi_a_ad322||0), 0.001); end
  def test_xi_a_ae322; assert_in_delta(0, (worksheet.xi_a_ae322||0), 0.001); end
  def test_xi_a_af322; assert_in_delta(0, (worksheet.xi_a_af322||0), 0.001); end
  def test_xi_a_ag322; assert_in_delta(0, (worksheet.xi_a_ag322||0), 0.001); end
  def test_xi_a_ah322; assert_in_delta(0, (worksheet.xi_a_ah322||0), 0.001); end
  def test_xi_a_ai322; assert_in_delta(0, (worksheet.xi_a_ai322||0), 0.001); end
  def test_xi_a_aj322; assert_in_delta(0, (worksheet.xi_a_aj322||0), 0.001); end
  def test_xi_a_ak322; assert_in_delta(0, (worksheet.xi_a_ak322||0), 0.001); end
  def test_xi_a_aa323; assert_equal("Intensity", worksheet.xi_a_aa323); end
  def test_xi_a_ab323; assert_equal("Intensity", worksheet.xi_a_ab323); end
  def test_xi_a_ac323; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac323, 0.001); end
  def test_xi_a_ad323; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad323, 0.001); end
  def test_xi_a_ae323; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae323, 0.001); end
  def test_xi_a_af323; assert_in_delta(0.1305543295866784, worksheet.xi_a_af323, 0.001); end
  def test_xi_a_ag323; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag323, 0.001); end
  def test_xi_a_ah323; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah323, 0.001); end
  def test_xi_a_ai323; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai323, 0.001); end
  def test_xi_a_aj323; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj323, 0.001); end
  def test_xi_a_ak323; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak323, 0.001); end
  def test_xi_a_aa324; assert_equal("Cost", worksheet.xi_a_aa324); end
  def test_xi_a_ab324; assert_equal("Cost", worksheet.xi_a_ab324); end
  def test_xi_a_ac324; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac324, 0.001); end
  def test_xi_a_ad324; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad324, 0.001); end
  def test_xi_a_ae324; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae324, 0.001); end
  def test_xi_a_af324; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af324, 0.001); end
  def test_xi_a_ag324; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag324, 0.001); end
  def test_xi_a_ah324; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah324, 0.001); end
  def test_xi_a_ai324; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai324, 0.001); end
  def test_xi_a_aj324; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj324, 0.001); end
  def test_xi_a_ak324; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak324, 0.001); end
  def test_xi_a_c326; assert_equal("Energy efficiency: Cogeneration", worksheet.xi_a_c326); end
  def test_xi_a_e326; assert_equal("CURRENTLY NOT MODELLED AND TRANSPARENT LINK TO THE NEXT ACTION", worksheet.xi_a_e326); end
  def test_xi_a_b327; assert_in_delta(1, worksheet.xi_a_b327, 0.001); end
  def test_xi_a_c327; assert_equal("Output Growth (kt)", worksheet.xi_a_c327); end
  def test_xi_a_n327; assert_in_epsilon(2, worksheet.xi_a_n327, 0.001); end
  def test_xi_a_o327; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_a_o327); end
  def test_xi_a_z327; assert_in_epsilon(3, worksheet.xi_a_z327, 0.001); end
  def test_xi_a_aa327; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa327); end
  def test_xi_a_al327; assert_in_epsilon(4, worksheet.xi_a_al327, 0.001); end
  def test_xi_a_am327; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am327); end
  def test_xi_a_ay327; assert_in_epsilon(5, worksheet.xi_a_ay327, 0.001); end
  def test_xi_a_az327; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az327); end
  def test_xi_a_bk327; assert_in_epsilon(6, worksheet.xi_a_bk327, 0.001); end
  def test_xi_a_bl327; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl327); end
  def test_xi_a_bw327; assert_in_epsilon(7, worksheet.xi_a_bw327, 0.001); end
  def test_xi_a_bx327; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx327); end
  def test_xi_a_ci327; assert_equal("Capacity", worksheet.xi_a_ci327); end
  def test_xi_a_c328; assert_equal("Product type", worksheet.xi_a_c328); end
  def test_xi_a_d328; assert_equal("Description", worksheet.xi_a_d328); end
  def test_xi_a_e328; assert_in_epsilon(2010, worksheet.xi_a_e328, 0.001); end
  def test_xi_a_f328; assert_in_epsilon(2015, worksheet.xi_a_f328, 0.001); end
  def test_xi_a_g328; assert_in_epsilon(2020, worksheet.xi_a_g328, 0.001); end
  def test_xi_a_h328; assert_in_epsilon(2025, worksheet.xi_a_h328, 0.001); end
  def test_xi_a_i328; assert_in_epsilon(2030, worksheet.xi_a_i328, 0.001); end
  def test_xi_a_j328; assert_in_epsilon(2035, worksheet.xi_a_j328, 0.001); end
  def test_xi_a_k328; assert_in_epsilon(2040, worksheet.xi_a_k328, 0.001); end
  def test_xi_a_l328; assert_in_epsilon(2045, worksheet.xi_a_l328, 0.001); end
  def test_xi_a_m328; assert_in_epsilon(2050, worksheet.xi_a_m328, 0.001); end
  def test_xi_a_o328; assert_equal("Industry", worksheet.xi_a_o328); end
  def test_xi_a_p328; assert_equal("Description", worksheet.xi_a_p328); end
  def test_xi_a_q328; assert_in_epsilon(2010, worksheet.xi_a_q328, 0.001); end
  def test_xi_a_r328; assert_in_epsilon(2015, worksheet.xi_a_r328, 0.001); end
  def test_xi_a_s328; assert_in_epsilon(2020, worksheet.xi_a_s328, 0.001); end
  def test_xi_a_t328; assert_in_epsilon(2025, worksheet.xi_a_t328, 0.001); end
  def test_xi_a_u328; assert_in_epsilon(2030, worksheet.xi_a_u328, 0.001); end
  def test_xi_a_v328; assert_in_epsilon(2035, worksheet.xi_a_v328, 0.001); end
  def test_xi_a_w328; assert_in_epsilon(2040, worksheet.xi_a_w328, 0.001); end
  def test_xi_a_x328; assert_in_epsilon(2045, worksheet.xi_a_x328, 0.001); end
  def test_xi_a_y328; assert_in_epsilon(2050, worksheet.xi_a_y328, 0.001); end
  def test_xi_a_z328; assert_equal("Oxygensteel", worksheet.xi_a_z328); end
  def test_xi_a_aa328; assert_equal("Vector", worksheet.xi_a_aa328); end
  def test_xi_a_ab328; assert_equal("Description", worksheet.xi_a_ab328); end
  def test_xi_a_ac328; assert_in_epsilon(2010, worksheet.xi_a_ac328, 0.001); end
  def test_xi_a_ad328; assert_in_epsilon(2015, worksheet.xi_a_ad328, 0.001); end
  def test_xi_a_ae328; assert_in_epsilon(2020, worksheet.xi_a_ae328, 0.001); end
  def test_xi_a_af328; assert_in_epsilon(2025, worksheet.xi_a_af328, 0.001); end
  def test_xi_a_ag328; assert_in_epsilon(2030, worksheet.xi_a_ag328, 0.001); end
  def test_xi_a_ah328; assert_in_epsilon(2035, worksheet.xi_a_ah328, 0.001); end
  def test_xi_a_ai328; assert_in_epsilon(2040, worksheet.xi_a_ai328, 0.001); end
  def test_xi_a_aj328; assert_in_epsilon(2045, worksheet.xi_a_aj328, 0.001); end
  def test_xi_a_ak328; assert_in_epsilon(2050, worksheet.xi_a_ak328, 0.001); end
  def test_xi_a_am328; assert_equal("Industry", worksheet.xi_a_am328); end
  def test_xi_a_an328; assert_equal("Description", worksheet.xi_a_an328); end
  def test_xi_a_ao328; assert_in_epsilon(2010, worksheet.xi_a_ao328, 0.001); end
  def test_xi_a_ap328; assert_in_epsilon(2015, worksheet.xi_a_ap328, 0.001); end
  def test_xi_a_aq328; assert_in_epsilon(2020, worksheet.xi_a_aq328, 0.001); end
  def test_xi_a_ar328; assert_in_epsilon(2025, worksheet.xi_a_ar328, 0.001); end
  def test_xi_a_as328; assert_in_epsilon(2030, worksheet.xi_a_as328, 0.001); end
  def test_xi_a_at328; assert_in_epsilon(2035, worksheet.xi_a_at328, 0.001); end
  def test_xi_a_au328; assert_in_epsilon(2040, worksheet.xi_a_au328, 0.001); end
  def test_xi_a_av328; assert_in_epsilon(2045, worksheet.xi_a_av328, 0.001); end
  def test_xi_a_aw328; assert_in_epsilon(2050, worksheet.xi_a_aw328, 0.001); end
  def test_xi_a_ay328; assert_equal("Industry", worksheet.xi_a_ay328); end
  def test_xi_a_az328; assert_equal("Description", worksheet.xi_a_az328); end
  def test_xi_a_ba328; assert_in_epsilon(2010, worksheet.xi_a_ba328, 0.001); end
  def test_xi_a_bb328; assert_in_epsilon(2015, worksheet.xi_a_bb328, 0.001); end
  def test_xi_a_bc328; assert_in_epsilon(2020, worksheet.xi_a_bc328, 0.001); end
  def test_xi_a_bd328; assert_in_epsilon(2025, worksheet.xi_a_bd328, 0.001); end
  def test_xi_a_be328; assert_in_epsilon(2030, worksheet.xi_a_be328, 0.001); end
  def test_xi_a_bf328; assert_in_epsilon(2035, worksheet.xi_a_bf328, 0.001); end
  def test_xi_a_bg328; assert_in_epsilon(2040, worksheet.xi_a_bg328, 0.001); end
  def test_xi_a_bh328; assert_in_epsilon(2045, worksheet.xi_a_bh328, 0.001); end
  def test_xi_a_bi328; assert_in_epsilon(2050, worksheet.xi_a_bi328, 0.001); end
  def test_xi_a_bk328; assert_equal("Industry", worksheet.xi_a_bk328); end
  def test_xi_a_bl328; assert_equal("Description", worksheet.xi_a_bl328); end
  def test_xi_a_bm328; assert_in_epsilon(2010, worksheet.xi_a_bm328, 0.001); end
  def test_xi_a_bn328; assert_in_epsilon(2015, worksheet.xi_a_bn328, 0.001); end
  def test_xi_a_bo328; assert_in_epsilon(2020, worksheet.xi_a_bo328, 0.001); end
  def test_xi_a_bp328; assert_in_epsilon(2025, worksheet.xi_a_bp328, 0.001); end
  def test_xi_a_bq328; assert_in_epsilon(2030, worksheet.xi_a_bq328, 0.001); end
  def test_xi_a_br328; assert_in_epsilon(2035, worksheet.xi_a_br328, 0.001); end
  def test_xi_a_bs328; assert_in_epsilon(2040, worksheet.xi_a_bs328, 0.001); end
  def test_xi_a_bt328; assert_in_epsilon(2045, worksheet.xi_a_bt328, 0.001); end
  def test_xi_a_bu328; assert_in_epsilon(2050, worksheet.xi_a_bu328, 0.001); end
  def test_xi_a_bw328; assert_equal("Industry", worksheet.xi_a_bw328); end
  def test_xi_a_bx328; assert_equal("Description", worksheet.xi_a_bx328); end
  def test_xi_a_by328; assert_in_epsilon(2010, worksheet.xi_a_by328, 0.001); end
  def test_xi_a_bz328; assert_in_epsilon(2015, worksheet.xi_a_bz328, 0.001); end
  def test_xi_a_ca328; assert_in_epsilon(2020, worksheet.xi_a_ca328, 0.001); end
  def test_xi_a_cb328; assert_in_epsilon(2025, worksheet.xi_a_cb328, 0.001); end
  def test_xi_a_cc328; assert_in_epsilon(2030, worksheet.xi_a_cc328, 0.001); end
  def test_xi_a_cd328; assert_in_epsilon(2035, worksheet.xi_a_cd328, 0.001); end
  def test_xi_a_ce328; assert_in_epsilon(2040, worksheet.xi_a_ce328, 0.001); end
  def test_xi_a_cf328; assert_in_epsilon(2045, worksheet.xi_a_cf328, 0.001); end
  def test_xi_a_cg328; assert_in_epsilon(2050, worksheet.xi_a_cg328, 0.001); end
  def test_xi_a_ci328; assert_equal("Description", worksheet.xi_a_ci328); end
  def test_xi_a_cj328; assert_in_epsilon(2010, worksheet.xi_a_cj328, 0.001); end
  def test_xi_a_ck328; assert_in_epsilon(2015, worksheet.xi_a_ck328, 0.001); end
  def test_xi_a_cl328; assert_in_epsilon(2020, worksheet.xi_a_cl328, 0.001); end
  def test_xi_a_cm328; assert_in_epsilon(2025, worksheet.xi_a_cm328, 0.001); end
  def test_xi_a_cn328; assert_in_epsilon(2030, worksheet.xi_a_cn328, 0.001); end
  def test_xi_a_co328; assert_in_epsilon(2035, worksheet.xi_a_co328, 0.001); end
  def test_xi_a_cp328; assert_in_epsilon(2040, worksheet.xi_a_cp328, 0.001); end
  def test_xi_a_cq328; assert_in_epsilon(2045, worksheet.xi_a_cq328, 0.001); end
  def test_xi_a_cr328; assert_in_epsilon(2050, worksheet.xi_a_cr328, 0.001); end
  def test_xi_a_c329; assert_equal("(ii)", worksheet.xi_a_c329); end
  def test_xi_a_d329; assert_equal("Oxygen Steel", worksheet.xi_a_d329); end
  def test_xi_a_e329; assert_in_epsilon(5264, worksheet.xi_a_e329, 0.001); end
  def test_xi_a_f329; assert_in_epsilon(4336.3516, worksheet.xi_a_f329, 0.001); end
  def test_xi_a_g329; assert_in_epsilon(4303.5832, worksheet.xi_a_g329, 0.001); end
  def test_xi_a_h329; assert_in_epsilon(4270.8148, worksheet.xi_a_h329, 0.001); end
  def test_xi_a_i329; assert_in_epsilon(4238.0464, worksheet.xi_a_i329, 0.001); end
  def test_xi_a_j329; assert_in_epsilon(4205.278, worksheet.xi_a_j329, 0.001); end
  def test_xi_a_k329; assert_in_epsilon(4172.509599999999, worksheet.xi_a_k329, 0.001); end
  def test_xi_a_l329; assert_in_epsilon(4139.7412, worksheet.xi_a_l329, 0.001); end
  def test_xi_a_m329; assert_in_epsilon(4106.9728, worksheet.xi_a_m329, 0.001); end
  def test_xi_a_o329; assert_equal("(ii)", worksheet.xi_a_o329); end
  def test_xi_a_p329; assert_equal("Oxygen Steel", worksheet.xi_a_p329); end
  def test_xi_a_q329; assert_in_delta(0.005934201542131165, worksheet.xi_a_q329, 0.001); end
  def test_xi_a_r329; assert_in_delta(0.005897112782492845, worksheet.xi_a_r329, 0.001); end
  def test_xi_a_s329; assert_in_delta(0.005860024022854526, worksheet.xi_a_s329, 0.001); end
  def test_xi_a_t329; assert_in_delta(0.005822935263216205, worksheet.xi_a_t329, 0.001); end
  def test_xi_a_u329; assert_in_delta(0.005785846503577885, worksheet.xi_a_u329, 0.001); end
  def test_xi_a_v329; assert_in_delta(0.0057487577439395655, worksheet.xi_a_v329, 0.001); end
  def test_xi_a_w329; assert_in_delta(0.005711668984301246, worksheet.xi_a_w329, 0.001); end
  def test_xi_a_x329; assert_in_delta(0.0056745802246629265, worksheet.xi_a_x329, 0.001); end
  def test_xi_a_y329; assert_in_delta(0.005637491465024606, worksheet.xi_a_y329, 0.001); end
  def test_xi_a_aa329; assert_equal("V.01", worksheet.xi_a_aa329); end
  def test_xi_a_ab329; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab329); end
  def test_xi_a_ac329; assert_in_delta(0.08204782728879889, worksheet.xi_a_ac329, 0.001); end
  def test_xi_a_ad329; assert_in_delta(0.08204782728879889, worksheet.xi_a_ad329, 0.001); end
  def test_xi_a_ae329; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae329, 0.001); end
  def test_xi_a_af329; assert_in_delta(0.08204782728879889, worksheet.xi_a_af329, 0.001); end
  def test_xi_a_ag329; assert_in_delta(0.08204782728879889, worksheet.xi_a_ag329, 0.001); end
  def test_xi_a_ah329; assert_in_delta(0.08204782728879889, worksheet.xi_a_ah329, 0.001); end
  def test_xi_a_ai329; assert_in_delta(0.08204782728879889, worksheet.xi_a_ai329, 0.001); end
  def test_xi_a_aj329; assert_in_delta(0.08204782728879889, worksheet.xi_a_aj329, 0.001); end
  def test_xi_a_ak329; assert_in_delta(0.08204782728879889, worksheet.xi_a_ak329, 0.001); end
  def test_xi_a_am329; assert_equal("(ii)", worksheet.xi_a_am329); end
  def test_xi_a_an329; assert_equal("Oxygen Steel", worksheet.xi_a_an329); end
  def test_xi_a_ao329; assert_in_delta(0, (worksheet.xi_a_ao329||0), 0.001); end
  def test_xi_a_ap329; assert_in_delta(0, (worksheet.xi_a_ap329||0), 0.001); end
  def test_xi_a_aq329; assert_in_delta(0, (worksheet.xi_a_aq329||0), 0.001); end
  def test_xi_a_ar329; assert_in_delta(0, (worksheet.xi_a_ar329||0), 0.001); end
  def test_xi_a_as329; assert_in_delta(0, (worksheet.xi_a_as329||0), 0.001); end
  def test_xi_a_at329; assert_in_delta(0, (worksheet.xi_a_at329||0), 0.001); end
  def test_xi_a_au329; assert_in_delta(0, (worksheet.xi_a_au329||0), 0.001); end
  def test_xi_a_av329; assert_in_delta(0, (worksheet.xi_a_av329||0), 0.001); end
  def test_xi_a_aw329; assert_in_delta(0, (worksheet.xi_a_aw329||0), 0.001); end
  def test_xi_a_ay329; assert_equal("(ii)", worksheet.xi_a_ay329); end
  def test_xi_a_az329; assert_equal("Oxygen Steel", worksheet.xi_a_az329); end
  def test_xi_a_bl329; assert_equal("Oxygen Steel", worksheet.xi_a_bl329); end
  def test_xi_a_bx329; assert_equal("Oxygen Steel", worksheet.xi_a_bx329); end
  def test_xi_a_ba329; assert_in_epsilon(7.404573633815222, worksheet.xi_a_ba329, 0.001); end
  def test_xi_a_ac336; assert_in_epsilon(17.667755554147792, worksheet.xi_a_ac336, 0.001); end
  def test_xi_a_bm309; assert_in_delta(0, (worksheet.xi_a_bm309||0), 0.001); end
  def test_xi_a_bm329; assert_in_delta(0, (worksheet.xi_a_bm329||0), 0.001); end
  def test_xi_a_by329; assert_in_delta(0, (worksheet.xi_a_by329||0), 0.001); end
  def test_xi_a_bb329; assert_in_epsilon(6.064398899237629, worksheet.xi_a_bb329, 0.001); end
  def test_xi_a_ad336; assert_in_epsilon(17.955346389372075, worksheet.xi_a_ad336, 0.001); end
  def test_xi_a_bn309; assert_in_epsilon(-101.72929124576359, worksheet.xi_a_bn309, 0.001); end
  def test_xi_a_bn329; assert_in_delta(0, (worksheet.xi_a_bn329||0), 0.001); end
  def test_xi_a_bz329; assert_in_delta(0, (worksheet.xi_a_bz329||0), 0.001); end
  def test_xi_a_bc329; assert_in_epsilon(5.983535240282053, worksheet.xi_a_bc329, 0.001); end
  def test_xi_a_ae336; assert_in_epsilon(17.42991070429268, worksheet.xi_a_ae336, 0.001); end
  def test_xi_a_bo309; assert_in_epsilon(-104.9025447268155, worksheet.xi_a_bo309, 0.001); end
  def test_xi_a_bo329; assert_in_delta(0, (worksheet.xi_a_bo329||0), 0.001); end
  def test_xi_a_ca329; assert_in_delta(0, (worksheet.xi_a_ca329||0), 0.001); end
  def test_xi_a_bd329; assert_in_epsilon(5.903205139199904, worksheet.xi_a_bd329, 0.001); end
  def test_xi_a_af336; assert_in_epsilon(17.722435711286632, worksheet.xi_a_af336, 0.001); end
  def test_xi_a_bp309; assert_in_epsilon(-112.8734631678089, worksheet.xi_a_bp309, 0.001); end
  def test_xi_a_bp329; assert_in_delta(0, (worksheet.xi_a_bp329||0), 0.001); end
  def test_xi_a_cb329; assert_in_delta(0, (worksheet.xi_a_cb329||0), 0.001); end
  def test_xi_a_be329; assert_in_epsilon(5.823408595991183, worksheet.xi_a_be329, 0.001); end
  def test_xi_a_ag336; assert_in_epsilon(15.580054430104807, worksheet.xi_a_ag336, 0.001); end
  def test_xi_a_bq309; assert_in_epsilon(-104.65046175336539, worksheet.xi_a_bq309, 0.001); end
  def test_xi_a_bq329; assert_in_delta(0, (worksheet.xi_a_bq329||0), 0.001); end
  def test_xi_a_cc329; assert_in_delta(0, (worksheet.xi_a_cc329||0), 0.001); end
  def test_xi_a_bf329; assert_in_epsilon(5.744145610655891, worksheet.xi_a_bf329, 0.001); end
  def test_xi_a_ah336; assert_in_epsilon(14.397923182888775, worksheet.xi_a_ah336, 0.001); end
  def test_xi_a_br309; assert_in_epsilon(-101.68551173127645, worksheet.xi_a_br309, 0.001); end
  def test_xi_a_br329; assert_in_delta(0, (worksheet.xi_a_br329||0), 0.001); end
  def test_xi_a_cd329; assert_in_delta(0, (worksheet.xi_a_cd329||0), 0.001); end
  def test_xi_a_bg329; assert_in_epsilon(5.665416183194027, worksheet.xi_a_bg329, 0.001); end
  def test_xi_a_ai336; assert_in_epsilon(13.306240965237233, worksheet.xi_a_ai336, 0.001); end
  def test_xi_a_bs309; assert_in_epsilon(-98.54127357057297, worksheet.xi_a_bs309, 0.001); end
  def test_xi_a_bs329; assert_in_delta(0, (worksheet.xi_a_bs329||0), 0.001); end
  def test_xi_a_ce329; assert_in_delta(0, (worksheet.xi_a_ce329||0), 0.001); end
  def test_xi_a_bh329; assert_in_epsilon(5.5872203136055925, worksheet.xi_a_bh329, 0.001); end
  def test_xi_a_aj336; assert_in_epsilon(12.21802589642779, worksheet.xi_a_aj336, 0.001); end
  def test_xi_a_bt309; assert_in_epsilon(-94.64502388550443, worksheet.xi_a_bt309, 0.001); end
  def test_xi_a_bt329; assert_in_delta(0, (worksheet.xi_a_bt329||0), 0.001); end
  def test_xi_a_cf329; assert_in_delta(0, (worksheet.xi_a_cf329||0), 0.001); end
  def test_xi_a_bi329; assert_in_epsilon(5.509558001890584, worksheet.xi_a_bi329, 0.001); end
  def test_xi_a_ak336; assert_in_epsilon(11.099194188006347, worksheet.xi_a_ak336, 0.001); end
  def test_xi_a_bu309; assert_in_epsilon(-89.73268752069481, worksheet.xi_a_bu309, 0.001); end
  def test_xi_a_bu329; assert_in_delta(0, (worksheet.xi_a_bu329||0), 0.001); end
  def test_xi_a_cg329; assert_in_delta(0, (worksheet.xi_a_cg329||0), 0.001); end
  def test_xi_a_ci329; assert_equal("Oxygen Steel", worksheet.xi_a_ci329); end
  def test_xi_a_cj329; assert_in_epsilon(6000, worksheet.xi_a_cj329, 0.001); end
  def test_xi_a_ck329; assert_in_epsilon(5000, worksheet.xi_a_ck329, 0.001); end
  def test_xi_a_cl329; assert_in_epsilon(5000, worksheet.xi_a_cl329, 0.001); end
  def test_xi_a_cm329; assert_in_epsilon(5000, worksheet.xi_a_cm329, 0.001); end
  def test_xi_a_cn329; assert_in_epsilon(5000, worksheet.xi_a_cn329, 0.001); end
  def test_xi_a_co329; assert_in_epsilon(5000, worksheet.xi_a_co329, 0.001); end
  def test_xi_a_cp329; assert_in_epsilon(5000, worksheet.xi_a_cp329, 0.001); end
  def test_xi_a_cq329; assert_in_epsilon(5000, worksheet.xi_a_cq329, 0.001); end
  def test_xi_a_cr329; assert_in_epsilon(5000, worksheet.xi_a_cr329, 0.001); end
  def test_xi_a_c330; assert_equal("(iii)", worksheet.xi_a_c330); end
  def test_xi_a_d330; assert_equal("Electric Steel", worksheet.xi_a_d330); end
  def test_xi_a_e330; assert_in_epsilon(2869, worksheet.xi_a_e330, 0.001); end
  def test_xi_a_f330; assert_in_epsilon(3735.6509, worksheet.xi_a_f330, 0.001); end
  def test_xi_a_g330; assert_in_epsilon(3707.4218, worksheet.xi_a_g330, 0.001); end
  def test_xi_a_h330; assert_in_epsilon(3679.1927, worksheet.xi_a_h330, 0.001); end
  def test_xi_a_i330; assert_in_epsilon(3650.9636, worksheet.xi_a_i330, 0.001); end
  def test_xi_a_j330; assert_in_epsilon(3622.7345, worksheet.xi_a_j330, 0.001); end
  def test_xi_a_k330; assert_in_epsilon(3594.5054, worksheet.xi_a_k330, 0.001); end
  def test_xi_a_l330; assert_in_epsilon(3566.2763, worksheet.xi_a_l330, 0.001); end
  def test_xi_a_m330; assert_in_epsilon(3538.0472, worksheet.xi_a_m330, 0.001); end
  def test_xi_a_o330; assert_equal("(iii)", worksheet.xi_a_o330); end
  def test_xi_a_p330; assert_equal("Electric Steel", worksheet.xi_a_p330); end
  def test_xi_a_q307; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q307, 0.001); end
  def test_xi_a_q330; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q330, 0.001); end
  def test_xi_a_r307; assert_in_delta(0.002401479455929414, worksheet.xi_a_r307, 0.001); end
  def test_xi_a_r330; assert_in_delta(0.002401479455929414, worksheet.xi_a_r330, 0.001); end
  def test_xi_a_s307; assert_in_delta(0.0023863758115524997, worksheet.xi_a_s307, 0.001); end
  def test_xi_a_s330; assert_in_delta(0.0023863758115524997, worksheet.xi_a_s330, 0.001); end
  def test_xi_a_t307; assert_in_delta(0.002371272167175585, worksheet.xi_a_t307, 0.001); end
  def test_xi_a_t330; assert_in_delta(0.002371272167175585, worksheet.xi_a_t330, 0.001); end
  def test_xi_a_u307; assert_in_delta(0.0023561685227986703, worksheet.xi_a_u307, 0.001); end
  def test_xi_a_u330; assert_in_delta(0.0023561685227986703, worksheet.xi_a_u330, 0.001); end
  def test_xi_a_v307; assert_in_delta(0.002341064878421756, worksheet.xi_a_v307, 0.001); end
  def test_xi_a_v330; assert_in_delta(0.002341064878421756, worksheet.xi_a_v330, 0.001); end
  def test_xi_a_w307; assert_in_delta(0.0023259612340448413, worksheet.xi_a_w307, 0.001); end
  def test_xi_a_w330; assert_in_delta(0.0023259612340448413, worksheet.xi_a_w330, 0.001); end
  def test_xi_a_x307; assert_in_delta(0.002310857589667927, worksheet.xi_a_x307, 0.001); end
  def test_xi_a_x330; assert_in_delta(0.002310857589667927, worksheet.xi_a_x330, 0.001); end
  def test_xi_a_y307; assert_in_delta(0.0022957539452910123, worksheet.xi_a_y307, 0.001); end
  def test_xi_a_y330; assert_in_delta(0.0022957539452910123, worksheet.xi_a_y330, 0.001); end
  def test_xi_a_aa330; assert_equal("V.03", worksheet.xi_a_aa330); end
  def test_xi_a_ab330; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab330); end
  def test_xi_a_ac330; assert_in_delta(0.7978154055943194, worksheet.xi_a_ac330, 0.001); end
  def test_xi_a_ad330; assert_in_delta(0.7978154055943194, worksheet.xi_a_ad330, 0.001); end
  def test_xi_a_ae330; assert_in_delta(0.7978154055943194, worksheet.xi_a_ae330, 0.001); end
  def test_xi_a_af330; assert_in_delta(0.7978154055943194, worksheet.xi_a_af330, 0.001); end
  def test_xi_a_ag330; assert_in_delta(0.7978154055943194, worksheet.xi_a_ag330, 0.001); end
  def test_xi_a_ah330; assert_in_delta(0.7978154055943194, worksheet.xi_a_ah330, 0.001); end
  def test_xi_a_ai330; assert_in_delta(0.7978154055943194, worksheet.xi_a_ai330, 0.001); end
  def test_xi_a_aj330; assert_in_delta(0.7978154055943194, worksheet.xi_a_aj330, 0.001); end
  def test_xi_a_ak330; assert_in_delta(0.7978154055943194, worksheet.xi_a_ak330, 0.001); end
  def test_xi_a_am330; assert_equal("(iii)", worksheet.xi_a_am330); end
  def test_xi_a_an330; assert_equal("Electric Steel", worksheet.xi_a_an330); end
  def test_xi_a_ao330; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao330, 0.001); end
  def test_xi_a_ap330; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap330, 0.001); end
  def test_xi_a_aq330; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq330, 0.001); end
  def test_xi_a_ar330; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar330, 0.001); end
  def test_xi_a_as330; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as330, 0.001); end
  def test_xi_a_at330; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at330, 0.001); end
  def test_xi_a_au330; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au330, 0.001); end
  def test_xi_a_av330; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av330, 0.001); end
  def test_xi_a_aw330; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw330, 0.001); end
  def test_xi_a_ay330; assert_equal("(iii)", worksheet.xi_a_ay330); end
  def test_xi_a_az330; assert_equal("Electric Steel", worksheet.xi_a_az330); end
  def test_xi_a_bl330; assert_equal("Electric Steel", worksheet.xi_a_bl330); end
  def test_xi_a_bx330; assert_equal("Electric Steel", worksheet.xi_a_bx330); end
  def test_xi_a_ba330; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_ba330, 0.001); end
  def test_xi_a_bm310; assert_in_delta(0, (worksheet.xi_a_bm310||0), 0.001); end
  def test_xi_a_bm330; assert_in_delta(0, (worksheet.xi_a_bm330||0), 0.001); end
  def test_xi_a_by330; assert_in_delta(0, (worksheet.xi_a_by330||0), 0.001); end
  def test_xi_a_bb330; assert_in_epsilon(2.3704901780731915, worksheet.xi_a_bb330, 0.001); end
  def test_xi_a_bn310; assert_in_epsilon(36.59141544184209, worksheet.xi_a_bn310, 0.001); end
  def test_xi_a_bn330; assert_in_delta(0, (worksheet.xi_a_bn330||0), 0.001); end
  def test_xi_a_bz330; assert_in_delta(0, (worksheet.xi_a_bz330||0), 0.001); end
  def test_xi_a_bc330; assert_in_epsilon(2.3452666885956592, worksheet.xi_a_bc330, 0.001); end
  def test_xi_a_bo310; assert_in_epsilon(33.363024200797895, worksheet.xi_a_bo310, 0.001); end
  def test_xi_a_bo330; assert_in_delta(0, (worksheet.xi_a_bo330||0), 0.001); end
  def test_xi_a_ca330; assert_in_delta(0, (worksheet.xi_a_ca330||0), 0.001); end
  def test_xi_a_bd330; assert_in_epsilon(2.3201545260033325, worksheet.xi_a_bd330, 0.001); end
  def test_xi_a_bp310; assert_in_epsilon(31.74425551275648, worksheet.xi_a_bp310, 0.001); end
  def test_xi_a_bp330; assert_in_delta(0, (worksheet.xi_a_bp330||0), 0.001); end
  def test_xi_a_cb330; assert_in_delta(0, (worksheet.xi_a_cb330||0), 0.001); end
  def test_xi_a_be330; assert_in_epsilon(2.295153690296212, worksheet.xi_a_be330, 0.001); end
  def test_xi_a_bq310; assert_in_epsilon(26.004802797635207, worksheet.xi_a_bq310, 0.001); end
  def test_xi_a_bq330; assert_in_delta(0, (worksheet.xi_a_bq330||0), 0.001); end
  def test_xi_a_cc330; assert_in_delta(0, (worksheet.xi_a_cc330||0), 0.001); end
  def test_xi_a_bf330; assert_in_epsilon(2.2702641814742983, worksheet.xi_a_bf330, 0.001); end
  def test_xi_a_br310; assert_in_epsilon(22.28625139024595, worksheet.xi_a_br310, 0.001); end
  def test_xi_a_br330; assert_in_delta(0, (worksheet.xi_a_br330||0), 0.001); end
  def test_xi_a_cd330; assert_in_delta(0, (worksheet.xi_a_cd330||0), 0.001); end
  def test_xi_a_bg330; assert_in_epsilon(2.24548599953759, worksheet.xi_a_bg330, 0.001); end
  def test_xi_a_bs310; assert_in_epsilon(18.994702904252406, worksheet.xi_a_bs310, 0.001); end
  def test_xi_a_bs330; assert_in_delta(0, (worksheet.xi_a_bs330||0), 0.001); end
  def test_xi_a_ce330; assert_in_delta(0, (worksheet.xi_a_ce330||0), 0.001); end
  def test_xi_a_bh330; assert_in_epsilon(2.2208191444860876, worksheet.xi_a_bh330, 0.001); end
  def test_xi_a_bt310; assert_in_epsilon(15.980930334455351, worksheet.xi_a_bt310, 0.001); end
  def test_xi_a_bt330; assert_in_delta(0, (worksheet.xi_a_bt330||0), 0.001); end
  def test_xi_a_cf330; assert_in_delta(0, (worksheet.xi_a_cf330||0), 0.001); end
  def test_xi_a_bi330; assert_in_epsilon(2.1962636163197917, worksheet.xi_a_bi330, 0.001); end
  def test_xi_a_bu310; assert_in_epsilon(13.20037046666289, worksheet.xi_a_bu310, 0.001); end
  def test_xi_a_bu330; assert_in_delta(0, (worksheet.xi_a_bu330||0), 0.001); end
  def test_xi_a_cg330; assert_in_delta(0, (worksheet.xi_a_cg330||0), 0.001); end
  def test_xi_a_ci330; assert_equal("Electric Steel", worksheet.xi_a_ci330); end
  def test_xi_a_cj330; assert_in_epsilon(3000, worksheet.xi_a_cj330, 0.001); end
  def test_xi_a_ck330; assert_in_epsilon(4000, worksheet.xi_a_ck330, 0.001); end
  def test_xi_a_cl330; assert_in_epsilon(4000, worksheet.xi_a_cl330, 0.001); end
  def test_xi_a_cm330; assert_in_epsilon(4000, worksheet.xi_a_cm330, 0.001); end
  def test_xi_a_cn330; assert_in_epsilon(4000, worksheet.xi_a_cn330, 0.001); end
  def test_xi_a_co330; assert_in_epsilon(4000, worksheet.xi_a_co330, 0.001); end
  def test_xi_a_cp330; assert_in_epsilon(4000, worksheet.xi_a_cp330, 0.001); end
  def test_xi_a_cq330; assert_in_epsilon(4000, worksheet.xi_a_cq330, 0.001); end
  def test_xi_a_cr330; assert_in_epsilon(4000, worksheet.xi_a_cr330, 0.001); end
  def test_xi_a_d331; assert_equal("Total", worksheet.xi_a_d331); end
  def test_xi_a_e331; assert_in_epsilon(8133, worksheet.xi_a_e331, 0.001); end
  def test_xi_a_f331; assert_in_epsilon(8072.0025000000005, worksheet.xi_a_f331, 0.001); end
  def test_xi_a_g331; assert_in_epsilon(8011.005, worksheet.xi_a_g331, 0.001); end
  def test_xi_a_h331; assert_in_epsilon(7950.0075, worksheet.xi_a_h331, 0.001); end
  def test_xi_a_i331; assert_in_epsilon(7889.01, worksheet.xi_a_i331, 0.001); end
  def test_xi_a_j331; assert_in_epsilon(7828.012500000001, worksheet.xi_a_j331, 0.001); end
  def test_xi_a_k331; assert_in_epsilon(7767.014999999999, worksheet.xi_a_k331, 0.001); end
  def test_xi_a_l331; assert_in_epsilon(7706.0175, worksheet.xi_a_l331, 0.001); end
  def test_xi_a_m331; assert_in_epsilon(7645.0199999999995, worksheet.xi_a_m331, 0.001); end
  def test_xi_a_o331; assert_equal("Total", worksheet.xi_a_o331); end
  def test_xi_a_aa331; assert_equal("V.05", worksheet.xi_a_aa331); end
  def test_xi_a_ab331; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab331); end
  def test_xi_a_ac331; assert_in_delta(0.21102564883744446, worksheet.xi_a_ac331, 0.001); end
  def test_xi_a_ad331; assert_in_delta(0.21102564883744446, worksheet.xi_a_ad331, 0.001); end
  def test_xi_a_ae331; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae331, 0.001); end
  def test_xi_a_af331; assert_in_delta(0.21102564883744446, worksheet.xi_a_af331, 0.001); end
  def test_xi_a_ag331; assert_in_delta(0.21102564883744446, worksheet.xi_a_ag331, 0.001); end
  def test_xi_a_ah331; assert_in_delta(0.21102564883744446, worksheet.xi_a_ah331, 0.001); end
  def test_xi_a_ai331; assert_in_delta(0.21102564883744446, worksheet.xi_a_ai331, 0.001); end
  def test_xi_a_aj331; assert_in_delta(0.21102564883744446, worksheet.xi_a_aj331, 0.001); end
  def test_xi_a_ak331; assert_in_delta(0.21102564883744446, worksheet.xi_a_ak331, 0.001); end
  def test_xi_a_am331; assert_equal("Total", worksheet.xi_a_am331); end
  def test_xi_a_ay331; assert_equal("Total", worksheet.xi_a_ay331); end
  def test_xi_a_ba331; assert_in_epsilon(9.230780077441661, worksheet.xi_a_ba331, 0.001); end
  def test_xi_a_bb331; assert_in_epsilon(8.434889077310821, worksheet.xi_a_bb331, 0.001); end
  def test_xi_a_bc331; assert_in_epsilon(8.328801928877713, worksheet.xi_a_bc331, 0.001); end
  def test_xi_a_bd331; assert_in_epsilon(8.223359665203237, worksheet.xi_a_bd331, 0.001); end
  def test_xi_a_be331; assert_in_epsilon(8.118562286287396, worksheet.xi_a_be331, 0.001); end
  def test_xi_a_bf331; assert_in_epsilon(8.01440979213019, worksheet.xi_a_bf331, 0.001); end
  def test_xi_a_bg331; assert_in_epsilon(7.910902182731617, worksheet.xi_a_bg331, 0.001); end
  def test_xi_a_bh331; assert_in_epsilon(7.80803945809168, worksheet.xi_a_bh331, 0.001); end
  def test_xi_a_bi331; assert_in_epsilon(7.705821618210376, worksheet.xi_a_bi331, 0.001); end
  def test_xi_a_bl331; assert_equal("Total", worksheet.xi_a_bl331); end
  def test_xi_a_bm331; assert_in_delta(0, (worksheet.xi_a_bm331||0), 0.001); end
  def test_xi_a_bn331; assert_in_delta(0, (worksheet.xi_a_bn331||0), 0.001); end
  def test_xi_a_bo331; assert_in_delta(0, (worksheet.xi_a_bo331||0), 0.001); end
  def test_xi_a_bp331; assert_in_delta(0, (worksheet.xi_a_bp331||0), 0.001); end
  def test_xi_a_bq331; assert_in_delta(0, (worksheet.xi_a_bq331||0), 0.001); end
  def test_xi_a_br331; assert_in_delta(0, (worksheet.xi_a_br331||0), 0.001); end
  def test_xi_a_bs331; assert_in_delta(0, (worksheet.xi_a_bs331||0), 0.001); end
  def test_xi_a_bt331; assert_in_delta(0, (worksheet.xi_a_bt331||0), 0.001); end
  def test_xi_a_bu331; assert_in_delta(0, (worksheet.xi_a_bu331||0), 0.001); end
  def test_xi_a_bx331; assert_equal("Total", worksheet.xi_a_bx331); end
  def test_xi_a_by331; assert_in_delta(0, (worksheet.xi_a_by331||0), 0.001); end
  def test_xi_a_bz331; assert_in_delta(0, (worksheet.xi_a_bz331||0), 0.001); end
  def test_xi_a_ca331; assert_in_delta(0, (worksheet.xi_a_ca331||0), 0.001); end
  def test_xi_a_cb331; assert_in_delta(0, (worksheet.xi_a_cb331||0), 0.001); end
  def test_xi_a_cc331; assert_in_delta(0, (worksheet.xi_a_cc331||0), 0.001); end
  def test_xi_a_cd331; assert_in_delta(0, (worksheet.xi_a_cd331||0), 0.001); end
  def test_xi_a_ce331; assert_in_delta(0, (worksheet.xi_a_ce331||0), 0.001); end
  def test_xi_a_cf331; assert_in_delta(0, (worksheet.xi_a_cf331||0), 0.001); end
  def test_xi_a_cg331; assert_in_delta(0, (worksheet.xi_a_cg331||0), 0.001); end
  def test_xi_a_o332; assert_equal("TWh", worksheet.xi_a_o332); end
  def test_xi_a_q332; assert_in_epsilon(38.17081383255731, worksheet.xi_a_q332, 0.001); end
  def test_xi_a_r332; assert_in_epsilon(34.54304334061753, worksheet.xi_a_r332, 0.001); end
  def test_xi_a_s332; assert_in_epsilon(34.066402643095586, worksheet.xi_a_s332, 0.001); end
  def test_xi_a_t332; assert_in_epsilon(33.593045348771255, worksheet.xi_a_t332, 0.001); end
  def test_xi_a_u332; assert_in_epsilon(33.12297145764456, worksheet.xi_a_u332, 0.001); end
  def test_xi_a_v332; assert_in_epsilon(32.65618096971549, worksheet.xi_a_v332, 0.001); end
  def test_xi_a_w332; assert_in_epsilon(32.19267388498404, worksheet.xi_a_w332, 0.001); end
  def test_xi_a_x332; assert_in_epsilon(31.732450203450227, worksheet.xi_a_x332, 0.001); end
  def test_xi_a_y332; assert_in_epsilon(31.275509925114026, worksheet.xi_a_y332, 0.001); end
  def test_xi_a_aa332; assert_equal("V.04", worksheet.xi_a_aa332); end
  def test_xi_a_ab332; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab332); end
  def test_xi_a_ac332; assert_in_delta(0.07696335047929354, worksheet.xi_a_ac332, 0.001); end
  def test_xi_a_ad332; assert_in_delta(0.07696335047929354, worksheet.xi_a_ad332, 0.001); end
  def test_xi_a_ae332; assert_in_delta(0.07696335047929354, worksheet.xi_a_ae332, 0.001); end
  def test_xi_a_af332; assert_in_delta(0.07696335047929354, worksheet.xi_a_af332, 0.001); end
  def test_xi_a_ag332; assert_in_delta(0.07696335047929354, worksheet.xi_a_ag332, 0.001); end
  def test_xi_a_ah332; assert_in_delta(0.07696335047929354, worksheet.xi_a_ah332, 0.001); end
  def test_xi_a_ai332; assert_in_delta(0.07696335047929354, worksheet.xi_a_ai332, 0.001); end
  def test_xi_a_aj332; assert_in_delta(0.07696335047929354, worksheet.xi_a_aj332, 0.001); end
  def test_xi_a_ak332; assert_in_delta(0.07696335047929354, worksheet.xi_a_ak332, 0.001); end
  def test_xi_a_bk332; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bk332); end
  def test_xi_a_bl332; assert_equal("Oxygen Steel", worksheet.xi_a_bl332); end
  def test_xi_a_bw332; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bw332); end
  def test_xi_a_bx332; assert_equal("Oxygen Steel", worksheet.xi_a_bx332); end
  def test_xi_a_by332; assert_in_delta(0, (worksheet.xi_a_by332||0), 0.001); end
  def test_xi_a_bz332; assert_in_epsilon(178.66809214901906, worksheet.xi_a_bz332, 0.001); end
  def test_xi_a_ca332; assert_in_epsilon(183.23215315347403, worksheet.xi_a_ca332, 0.001); end
  def test_xi_a_cb332; assert_in_epsilon(192.57253680293337, worksheet.xi_a_cb332, 0.001); end
  def test_xi_a_cc332; assert_in_epsilon(185.69765828201875, worksheet.xi_a_cc332, 0.001); end
  def test_xi_a_cd332; assert_in_epsilon(184.0594888385215, worksheet.xi_a_cd332, 0.001); end
  def test_xi_a_ce332; assert_in_epsilon(182.22068894147256, worksheet.xi_a_ce332, 0.001); end
  def test_xi_a_cf332; assert_in_epsilon(179.60853520512143, worksheet.xi_a_cf332, 0.001); end
  def test_xi_a_cg332; assert_in_epsilon(175.95895247409214, worksheet.xi_a_cg332, 0.001); end
  def test_xi_a_aa333; assert_equal("V.06", worksheet.xi_a_aa333); end
  def test_xi_a_ab333; assert_equal("Blast furnace gas", worksheet.xi_a_ab333); end
  def test_xi_a_ac333; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ac333, 0.001); end
  def test_xi_a_ad333; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ad333, 0.001); end
  def test_xi_a_ae333; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ae333, 0.001); end
  def test_xi_a_af333; assert_in_delta(-0.1132646069606094, worksheet.xi_a_af333, 0.001); end
  def test_xi_a_ag333; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ag333, 0.001); end
  def test_xi_a_ah333; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ah333, 0.001); end
  def test_xi_a_ai333; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ai333, 0.001); end
  def test_xi_a_aj333; assert_in_delta(-0.1132646069606094, worksheet.xi_a_aj333, 0.001); end
  def test_xi_a_ak333; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ak333, 0.001); end
  def test_xi_a_am333; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am333); end
  def test_xi_a_bl333; assert_equal("Electric Steel", worksheet.xi_a_bl333); end
  def test_xi_a_bx333; assert_equal("Electric Steel", worksheet.xi_a_bx333); end
  def test_xi_a_by333; assert_in_delta(0, (worksheet.xi_a_by333||0), 0.001); end
  def test_xi_a_bz333; assert_in_epsilon(-70.47388333423275, worksheet.xi_a_bz333, 0.001); end
  def test_xi_a_ca333; assert_in_epsilon(-66.95530001241805, worksheet.xi_a_ca333, 0.001); end
  def test_xi_a_cb333; assert_in_epsilon(-65.05079231901435, worksheet.xi_a_cb333, 0.001); end
  def test_xi_a_cc333; assert_in_epsilon(-59.03005367393904, worksheet.xi_a_cc333, 0.001); end
  def test_xi_a_cd333; assert_in_epsilon(-55.03466941200401, worksheet.xi_a_cd333, 0.001); end
  def test_xi_a_ce333; assert_in_epsilon(-51.47074114687291, worksheet.xi_a_ce333, 0.001); end
  def test_xi_a_cf333; assert_in_epsilon(-48.18904187334653, worksheet.xi_a_cf333, 0.001); end
  def test_xi_a_cg333; assert_in_epsilon(-45.14500837723302, worksheet.xi_a_cg333, 0.001); end
  def test_xi_a_aa334; assert_equal("V.07", worksheet.xi_a_aa334); end
  def test_xi_a_ab334; assert_equal("Heat transport", worksheet.xi_a_ab334); end
  def test_xi_a_ac334; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ac334, 0.001); end
  def test_xi_a_ad334; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ad334, 0.001); end
  def test_xi_a_ae334; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae334, 0.001); end
  def test_xi_a_af334; assert_in_delta(-0.05458762523924703, worksheet.xi_a_af334, 0.001); end
  def test_xi_a_ag334; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ag334, 0.001); end
  def test_xi_a_ah334; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ah334, 0.001); end
  def test_xi_a_ai334; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ai334, 0.001); end
  def test_xi_a_aj334; assert_in_delta(-0.05458762523924703, worksheet.xi_a_aj334, 0.001); end
  def test_xi_a_ak334; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ak334, 0.001); end
  def test_xi_a_am334; assert_equal("Industry", worksheet.xi_a_am334); end
  def test_xi_a_an334; assert_equal("Description", worksheet.xi_a_an334); end
  def test_xi_a_ao334; assert_in_epsilon(2010, worksheet.xi_a_ao334, 0.001); end
  def test_xi_a_ap334; assert_in_epsilon(2015, worksheet.xi_a_ap334, 0.001); end
  def test_xi_a_aq334; assert_in_epsilon(2020, worksheet.xi_a_aq334, 0.001); end
  def test_xi_a_ar334; assert_in_epsilon(2025, worksheet.xi_a_ar334, 0.001); end
  def test_xi_a_as334; assert_in_epsilon(2030, worksheet.xi_a_as334, 0.001); end
  def test_xi_a_at334; assert_in_epsilon(2035, worksheet.xi_a_at334, 0.001); end
  def test_xi_a_au334; assert_in_epsilon(2040, worksheet.xi_a_au334, 0.001); end
  def test_xi_a_av334; assert_in_epsilon(2045, worksheet.xi_a_av334, 0.001); end
  def test_xi_a_aw334; assert_in_epsilon(2050, worksheet.xi_a_aw334, 0.001); end
  def test_xi_a_bl334; assert_equal("Total", worksheet.xi_a_bl334); end
  def test_xi_a_bm334; assert_in_delta(0, (worksheet.xi_a_bm334||0), 0.001); end
  def test_xi_a_bn334; assert_in_epsilon(-65.1378758039215, worksheet.xi_a_bn334, 0.001); end
  def test_xi_a_bo334; assert_in_epsilon(-71.53952052601761, worksheet.xi_a_bo334, 0.001); end
  def test_xi_a_bp334; assert_in_epsilon(-81.12920765505241, worksheet.xi_a_bp334, 0.001); end
  def test_xi_a_bq334; assert_in_epsilon(-78.64565895573018, worksheet.xi_a_bq334, 0.001); end
  def test_xi_a_br334; assert_in_epsilon(-79.3992603410305, worksheet.xi_a_br334, 0.001); end
  def test_xi_a_bs334; assert_in_epsilon(-79.54657066632056, worksheet.xi_a_bs334, 0.001); end
  def test_xi_a_bt334; assert_in_epsilon(-78.66409355104908, worksheet.xi_a_bt334, 0.001); end
  def test_xi_a_bu334; assert_in_epsilon(-76.53231705403192, worksheet.xi_a_bu334, 0.001); end
  def test_xi_a_bx334; assert_equal("Total", worksheet.xi_a_bx334); end
  def test_xi_a_by334; assert_in_delta(0, (worksheet.xi_a_by334||0), 0.001); end
  def test_xi_a_bz334; assert_in_epsilon(108.19420881478632, worksheet.xi_a_bz334, 0.001); end
  def test_xi_a_ca334; assert_in_epsilon(116.276853141056, worksheet.xi_a_ca334, 0.001); end
  def test_xi_a_cb334; assert_in_epsilon(127.52174448391904, worksheet.xi_a_cb334, 0.001); end
  def test_xi_a_cc334; assert_in_epsilon(126.66760460807971, worksheet.xi_a_cc334, 0.001); end
  def test_xi_a_cd334; assert_in_epsilon(129.0248194265175, worksheet.xi_a_cd334, 0.001); end
  def test_xi_a_ce334; assert_in_epsilon(130.74994779459965, worksheet.xi_a_ce334, 0.001); end
  def test_xi_a_cf334; assert_in_epsilon(131.4194933317749, worksheet.xi_a_cf334, 0.001); end
  def test_xi_a_cg334; assert_in_epsilon(130.8139440968591, worksheet.xi_a_cg334, 0.001); end
  def test_xi_a_aa335; assert_equal("Intensity", worksheet.xi_a_aa335); end
  def test_xi_a_ab335; assert_equal("Intensity", worksheet.xi_a_ab335); end
  def test_xi_a_ac335; assert_in_delta(0.21950983912607056, worksheet.xi_a_ac335, 0.001); end
  def test_xi_a_ad335; assert_in_delta(0.21950983912607056, worksheet.xi_a_ad335, 0.001); end
  def test_xi_a_ae335; assert_in_delta(0.21950983912607056, worksheet.xi_a_ae335, 0.001); end
  def test_xi_a_af335; assert_in_delta(0.21950983912607056, worksheet.xi_a_af335, 0.001); end
  def test_xi_a_ag335; assert_in_delta(0.21950983912607056, worksheet.xi_a_ag335, 0.001); end
  def test_xi_a_ah335; assert_in_delta(0.21950983912607056, worksheet.xi_a_ah335, 0.001); end
  def test_xi_a_ai335; assert_in_delta(0.21950983912607056, worksheet.xi_a_ai335, 0.001); end
  def test_xi_a_aj335; assert_in_delta(0.21950983912607056, worksheet.xi_a_aj335, 0.001); end
  def test_xi_a_ak335; assert_in_delta(0.21950983912607056, worksheet.xi_a_ak335, 0.001); end
  def test_xi_a_am335; assert_equal("(ii)", worksheet.xi_a_am335); end
  def test_xi_a_an335; assert_equal("Oxygen Steel", worksheet.xi_a_an335); end
  def test_xi_a_ao335; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao335, 0.001); end
  def test_xi_a_ap335; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap335, 0.001); end
  def test_xi_a_aq335; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq335, 0.001); end
  def test_xi_a_ar335; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar335, 0.001); end
  def test_xi_a_as335; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as335, 0.001); end
  def test_xi_a_at335; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at335, 0.001); end
  def test_xi_a_au335; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au335, 0.001); end
  def test_xi_a_av335; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av335, 0.001); end
  def test_xi_a_aw335; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw335, 0.001); end
  def test_xi_a_aa336; assert_equal("Cost", worksheet.xi_a_aa336); end
  def test_xi_a_ab336; assert_equal("Cost", worksheet.xi_a_ab336); end
  def test_xi_a_am336; assert_equal("(iii)", worksheet.xi_a_am336); end
  def test_xi_a_an336; assert_equal("Electric Steel", worksheet.xi_a_an336); end
  def test_xi_a_ao336; assert_in_delta(0, (worksheet.xi_a_ao336||0), 0.001); end
  def test_xi_a_ap336; assert_in_delta(0, (worksheet.xi_a_ap336||0), 0.001); end
  def test_xi_a_aq336; assert_in_delta(0, (worksheet.xi_a_aq336||0), 0.001); end
  def test_xi_a_ar336; assert_in_delta(0, (worksheet.xi_a_ar336||0), 0.001); end
  def test_xi_a_as336; assert_in_delta(0, (worksheet.xi_a_as336||0), 0.001); end
  def test_xi_a_at336; assert_in_delta(0, (worksheet.xi_a_at336||0), 0.001); end
  def test_xi_a_au336; assert_in_delta(0, (worksheet.xi_a_au336||0), 0.001); end
  def test_xi_a_av336; assert_in_delta(0, (worksheet.xi_a_av336||0), 0.001); end
  def test_xi_a_aw336; assert_in_delta(0, (worksheet.xi_a_aw336||0), 0.001); end
  def test_xi_a_am337; assert_equal("Total", worksheet.xi_a_am337); end
  def test_xi_a_z338; assert_equal("Electrosteel", worksheet.xi_a_z338); end
  def test_xi_a_aa338; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa338); end
  def test_xi_a_aa339; assert_equal("Vector", worksheet.xi_a_aa339); end
  def test_xi_a_ab339; assert_equal("Description", worksheet.xi_a_ab339); end
  def test_xi_a_ac339; assert_in_epsilon(2010, worksheet.xi_a_ac339, 0.001); end
  def test_xi_a_ad339; assert_in_epsilon(2015, worksheet.xi_a_ad339, 0.001); end
  def test_xi_a_ae339; assert_in_epsilon(2020, worksheet.xi_a_ae339, 0.001); end
  def test_xi_a_af339; assert_in_epsilon(2025, worksheet.xi_a_af339, 0.001); end
  def test_xi_a_ag339; assert_in_epsilon(2030, worksheet.xi_a_ag339, 0.001); end
  def test_xi_a_ah339; assert_in_epsilon(2035, worksheet.xi_a_ah339, 0.001); end
  def test_xi_a_ai339; assert_in_epsilon(2040, worksheet.xi_a_ai339, 0.001); end
  def test_xi_a_aj339; assert_in_epsilon(2045, worksheet.xi_a_aj339, 0.001); end
  def test_xi_a_ak339; assert_in_epsilon(2050, worksheet.xi_a_ak339, 0.001); end
  def test_xi_a_aa340; assert_equal("V.01", worksheet.xi_a_aa340); end
  def test_xi_a_ab340; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab340); end
  def test_xi_a_ac340; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac340, 0.001); end
  def test_xi_a_ad340; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad340, 0.001); end
  def test_xi_a_ae340; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae340, 0.001); end
  def test_xi_a_af340; assert_in_delta(0.37661125507716986, worksheet.xi_a_af340, 0.001); end
  def test_xi_a_ag340; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag340, 0.001); end
  def test_xi_a_ah340; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah340, 0.001); end
  def test_xi_a_ai340; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai340, 0.001); end
  def test_xi_a_aj340; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj340, 0.001); end
  def test_xi_a_ak340; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak340, 0.001); end
  def test_xi_a_aa341; assert_equal("V.03", worksheet.xi_a_aa341); end
  def test_xi_a_ab341; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab341); end
  def test_xi_a_ac341; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac341, 0.001); end
  def test_xi_a_ad341; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad341, 0.001); end
  def test_xi_a_ae341; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae341, 0.001); end
  def test_xi_a_af341; assert_in_delta(0.04200640884510868, worksheet.xi_a_af341, 0.001); end
  def test_xi_a_ag341; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag341, 0.001); end
  def test_xi_a_ah341; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah341, 0.001); end
  def test_xi_a_ai341; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai341, 0.001); end
  def test_xi_a_aj341; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj341, 0.001); end
  def test_xi_a_ak341; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak341, 0.001); end
  def test_xi_a_aa342; assert_equal("V.05", worksheet.xi_a_aa342); end
  def test_xi_a_ab342; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab342); end
  def test_xi_a_ac342; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac342, 0.001); end
  def test_xi_a_ad342; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad342, 0.001); end
  def test_xi_a_ae342; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae342, 0.001); end
  def test_xi_a_af342; assert_in_delta(0.5722074496017227, worksheet.xi_a_af342, 0.001); end
  def test_xi_a_ag342; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag342, 0.001); end
  def test_xi_a_ah342; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah342, 0.001); end
  def test_xi_a_ai342; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai342, 0.001); end
  def test_xi_a_aj342; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj342, 0.001); end
  def test_xi_a_ak342; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak342, 0.001); end
  def test_xi_a_aa343; assert_equal("V.04", worksheet.xi_a_aa343); end
  def test_xi_a_ab343; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab343); end
  def test_xi_a_ac343; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac343, 0.001); end
  def test_xi_a_ad343; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad343, 0.001); end
  def test_xi_a_ae343; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae343, 0.001); end
  def test_xi_a_af343; assert_in_delta(0.009174886475998728, worksheet.xi_a_af343, 0.001); end
  def test_xi_a_ag343; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag343, 0.001); end
  def test_xi_a_ah343; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah343, 0.001); end
  def test_xi_a_ai343; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai343, 0.001); end
  def test_xi_a_aj343; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj343, 0.001); end
  def test_xi_a_ak343; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak343, 0.001); end
  def test_xi_a_aa344; assert_equal("V.06", worksheet.xi_a_aa344); end
  def test_xi_a_ab344; assert_equal("Blast furnace gas", worksheet.xi_a_ab344); end
  def test_xi_a_ac344; assert_in_delta(0, (worksheet.xi_a_ac344||0), 0.001); end
  def test_xi_a_ad344; assert_in_delta(0, (worksheet.xi_a_ad344||0), 0.001); end
  def test_xi_a_ae344; assert_in_delta(0, (worksheet.xi_a_ae344||0), 0.001); end
  def test_xi_a_af344; assert_in_delta(0, (worksheet.xi_a_af344||0), 0.001); end
  def test_xi_a_ag344; assert_in_delta(0, (worksheet.xi_a_ag344||0), 0.001); end
  def test_xi_a_ah344; assert_in_delta(0, (worksheet.xi_a_ah344||0), 0.001); end
  def test_xi_a_ai344; assert_in_delta(0, (worksheet.xi_a_ai344||0), 0.001); end
  def test_xi_a_aj344; assert_in_delta(0, (worksheet.xi_a_aj344||0), 0.001); end
  def test_xi_a_ak344; assert_in_delta(0, (worksheet.xi_a_ak344||0), 0.001); end
  def test_xi_a_aa345; assert_equal("V.07", worksheet.xi_a_aa345); end
  def test_xi_a_ab345; assert_equal("Heat transport", worksheet.xi_a_ab345); end
  def test_xi_a_ac345; assert_in_delta(0, (worksheet.xi_a_ac345||0), 0.001); end
  def test_xi_a_ad345; assert_in_delta(0, (worksheet.xi_a_ad345||0), 0.001); end
  def test_xi_a_ae345; assert_in_delta(0, (worksheet.xi_a_ae345||0), 0.001); end
  def test_xi_a_af345; assert_in_delta(0, (worksheet.xi_a_af345||0), 0.001); end
  def test_xi_a_ag345; assert_in_delta(0, (worksheet.xi_a_ag345||0), 0.001); end
  def test_xi_a_ah345; assert_in_delta(0, (worksheet.xi_a_ah345||0), 0.001); end
  def test_xi_a_ai345; assert_in_delta(0, (worksheet.xi_a_ai345||0), 0.001); end
  def test_xi_a_aj345; assert_in_delta(0, (worksheet.xi_a_aj345||0), 0.001); end
  def test_xi_a_ak345; assert_in_delta(0, (worksheet.xi_a_ak345||0), 0.001); end
  def test_xi_a_aa346; assert_equal("Intensity", worksheet.xi_a_aa346); end
  def test_xi_a_ab346; assert_equal("Intensity", worksheet.xi_a_ab346); end
  def test_xi_a_ac346; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac346, 0.001); end
  def test_xi_a_ad346; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad346, 0.001); end
  def test_xi_a_ae346; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae346, 0.001); end
  def test_xi_a_af346; assert_in_delta(0.1305543295866784, worksheet.xi_a_af346, 0.001); end
  def test_xi_a_ag346; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag346, 0.001); end
  def test_xi_a_ah346; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah346, 0.001); end
  def test_xi_a_ai346; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai346, 0.001); end
  def test_xi_a_aj346; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj346, 0.001); end
  def test_xi_a_ak346; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak346, 0.001); end
  def test_xi_a_aa347; assert_equal("Cost", worksheet.xi_a_aa347); end
  def test_xi_a_ab347; assert_equal("Cost", worksheet.xi_a_ab347); end
  def test_xi_a_ac347; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac347, 0.001); end
  def test_xi_a_ad347; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad347, 0.001); end
  def test_xi_a_ae347; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae347, 0.001); end
  def test_xi_a_af347; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af347, 0.001); end
  def test_xi_a_ag347; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag347, 0.001); end
  def test_xi_a_ah347; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah347, 0.001); end
  def test_xi_a_ai347; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai347, 0.001); end
  def test_xi_a_aj347; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj347, 0.001); end
  def test_xi_a_ak347; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak347, 0.001); end
  def test_xi_a_b352; assert_in_epsilon(5, worksheet.xi_a_b352, 0.001); end
  def test_xi_a_c352; assert_equal("Process improvements", worksheet.xi_a_c352); end
  def test_xi_a_c353; assert_equal("Process improvement: Top–gas recirculation and/or Hisarna", worksheet.xi_a_c353); end
  def test_xi_a_b354; assert_in_delta(1, worksheet.xi_a_b354, 0.001); end
  def test_xi_a_c354; assert_equal("Output Growth (kt)", worksheet.xi_a_c354); end
  def test_xi_a_n354; assert_in_epsilon(2, worksheet.xi_a_n354, 0.001); end
  def test_xi_a_o354; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_a_o354); end
  def test_xi_a_z354; assert_in_epsilon(3, worksheet.xi_a_z354, 0.001); end
  def test_xi_a_aa354; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa354); end
  def test_xi_a_al354; assert_in_epsilon(4, worksheet.xi_a_al354, 0.001); end
  def test_xi_a_am354; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am354); end
  def test_xi_a_ay354; assert_in_epsilon(5, worksheet.xi_a_ay354, 0.001); end
  def test_xi_a_az354; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az354); end
  def test_xi_a_bk354; assert_in_epsilon(6, worksheet.xi_a_bk354, 0.001); end
  def test_xi_a_bl354; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl354); end
  def test_xi_a_bw354; assert_in_epsilon(7, worksheet.xi_a_bw354, 0.001); end
  def test_xi_a_bx354; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx354); end
  def test_xi_a_ci354; assert_equal("Capacity", worksheet.xi_a_ci354); end
  def test_xi_a_c355; assert_equal("Product type", worksheet.xi_a_c355); end
  def test_xi_a_d355; assert_equal("Description", worksheet.xi_a_d355); end
  def test_xi_a_e355; assert_in_epsilon(2010, worksheet.xi_a_e355, 0.001); end
  def test_xi_a_f355; assert_in_epsilon(2015, worksheet.xi_a_f355, 0.001); end
  def test_xi_a_g355; assert_in_epsilon(2020, worksheet.xi_a_g355, 0.001); end
  def test_xi_a_h355; assert_in_epsilon(2025, worksheet.xi_a_h355, 0.001); end
  def test_xi_a_i355; assert_in_epsilon(2030, worksheet.xi_a_i355, 0.001); end
  def test_xi_a_j355; assert_in_epsilon(2035, worksheet.xi_a_j355, 0.001); end
  def test_xi_a_k355; assert_in_epsilon(2040, worksheet.xi_a_k355, 0.001); end
  def test_xi_a_l355; assert_in_epsilon(2045, worksheet.xi_a_l355, 0.001); end
  def test_xi_a_m355; assert_in_epsilon(2050, worksheet.xi_a_m355, 0.001); end
  def test_xi_a_o355; assert_equal("Industry", worksheet.xi_a_o355); end
  def test_xi_a_p355; assert_equal("Description", worksheet.xi_a_p355); end
  def test_xi_a_q355; assert_in_epsilon(2010, worksheet.xi_a_q355, 0.001); end
  def test_xi_a_r355; assert_in_epsilon(2015, worksheet.xi_a_r355, 0.001); end
  def test_xi_a_s355; assert_in_epsilon(2020, worksheet.xi_a_s355, 0.001); end
  def test_xi_a_t355; assert_in_epsilon(2025, worksheet.xi_a_t355, 0.001); end
  def test_xi_a_u355; assert_in_epsilon(2030, worksheet.xi_a_u355, 0.001); end
  def test_xi_a_v355; assert_in_epsilon(2035, worksheet.xi_a_v355, 0.001); end
  def test_xi_a_w355; assert_in_epsilon(2040, worksheet.xi_a_w355, 0.001); end
  def test_xi_a_x355; assert_in_epsilon(2045, worksheet.xi_a_x355, 0.001); end
  def test_xi_a_y355; assert_in_epsilon(2050, worksheet.xi_a_y355, 0.001); end
  def test_xi_a_z355; assert_equal("Oxygensteel", worksheet.xi_a_z355); end
  def test_xi_a_aa355; assert_equal("Vector", worksheet.xi_a_aa355); end
  def test_xi_a_ab355; assert_equal("Description", worksheet.xi_a_ab355); end
  def test_xi_a_ac355; assert_in_epsilon(2010, worksheet.xi_a_ac355, 0.001); end
  def test_xi_a_ad355; assert_in_epsilon(2015, worksheet.xi_a_ad355, 0.001); end
  def test_xi_a_ae355; assert_in_epsilon(2020, worksheet.xi_a_ae355, 0.001); end
  def test_xi_a_af355; assert_in_epsilon(2025, worksheet.xi_a_af355, 0.001); end
  def test_xi_a_ag355; assert_in_epsilon(2030, worksheet.xi_a_ag355, 0.001); end
  def test_xi_a_ah355; assert_in_epsilon(2035, worksheet.xi_a_ah355, 0.001); end
  def test_xi_a_ai355; assert_in_epsilon(2040, worksheet.xi_a_ai355, 0.001); end
  def test_xi_a_aj355; assert_in_epsilon(2045, worksheet.xi_a_aj355, 0.001); end
  def test_xi_a_ak355; assert_in_epsilon(2050, worksheet.xi_a_ak355, 0.001); end
  def test_xi_a_am355; assert_equal("Industry", worksheet.xi_a_am355); end
  def test_xi_a_an355; assert_equal("Description", worksheet.xi_a_an355); end
  def test_xi_a_ao355; assert_in_epsilon(2010, worksheet.xi_a_ao355, 0.001); end
  def test_xi_a_ap355; assert_in_epsilon(2015, worksheet.xi_a_ap355, 0.001); end
  def test_xi_a_aq355; assert_in_epsilon(2020, worksheet.xi_a_aq355, 0.001); end
  def test_xi_a_ar355; assert_in_epsilon(2025, worksheet.xi_a_ar355, 0.001); end
  def test_xi_a_as355; assert_in_epsilon(2030, worksheet.xi_a_as355, 0.001); end
  def test_xi_a_at355; assert_in_epsilon(2035, worksheet.xi_a_at355, 0.001); end
  def test_xi_a_au355; assert_in_epsilon(2040, worksheet.xi_a_au355, 0.001); end
  def test_xi_a_av355; assert_in_epsilon(2045, worksheet.xi_a_av355, 0.001); end
  def test_xi_a_aw355; assert_in_epsilon(2050, worksheet.xi_a_aw355, 0.001); end
  def test_xi_a_ay355; assert_equal("Industry", worksheet.xi_a_ay355); end
  def test_xi_a_az355; assert_equal("Description", worksheet.xi_a_az355); end
  def test_xi_a_ba355; assert_in_epsilon(2010, worksheet.xi_a_ba355, 0.001); end
  def test_xi_a_bb355; assert_in_epsilon(2015, worksheet.xi_a_bb355, 0.001); end
  def test_xi_a_bc355; assert_in_epsilon(2020, worksheet.xi_a_bc355, 0.001); end
  def test_xi_a_bd355; assert_in_epsilon(2025, worksheet.xi_a_bd355, 0.001); end
  def test_xi_a_be355; assert_in_epsilon(2030, worksheet.xi_a_be355, 0.001); end
  def test_xi_a_bf355; assert_in_epsilon(2035, worksheet.xi_a_bf355, 0.001); end
  def test_xi_a_bg355; assert_in_epsilon(2040, worksheet.xi_a_bg355, 0.001); end
  def test_xi_a_bh355; assert_in_epsilon(2045, worksheet.xi_a_bh355, 0.001); end
  def test_xi_a_bi355; assert_in_epsilon(2050, worksheet.xi_a_bi355, 0.001); end
  def test_xi_a_bk355; assert_equal("Industry", worksheet.xi_a_bk355); end
  def test_xi_a_bl355; assert_equal("Description", worksheet.xi_a_bl355); end
  def test_xi_a_bm355; assert_in_epsilon(2010, worksheet.xi_a_bm355, 0.001); end
  def test_xi_a_bn355; assert_in_epsilon(2015, worksheet.xi_a_bn355, 0.001); end
  def test_xi_a_bo355; assert_in_epsilon(2020, worksheet.xi_a_bo355, 0.001); end
  def test_xi_a_bp355; assert_in_epsilon(2025, worksheet.xi_a_bp355, 0.001); end
  def test_xi_a_bq355; assert_in_epsilon(2030, worksheet.xi_a_bq355, 0.001); end
  def test_xi_a_br355; assert_in_epsilon(2035, worksheet.xi_a_br355, 0.001); end
  def test_xi_a_bs355; assert_in_epsilon(2040, worksheet.xi_a_bs355, 0.001); end
  def test_xi_a_bt355; assert_in_epsilon(2045, worksheet.xi_a_bt355, 0.001); end
  def test_xi_a_bu355; assert_in_epsilon(2050, worksheet.xi_a_bu355, 0.001); end
  def test_xi_a_bw355; assert_equal("Industry", worksheet.xi_a_bw355); end
  def test_xi_a_bx355; assert_equal("Description", worksheet.xi_a_bx355); end
  def test_xi_a_by355; assert_in_epsilon(2010, worksheet.xi_a_by355, 0.001); end
  def test_xi_a_bz355; assert_in_epsilon(2015, worksheet.xi_a_bz355, 0.001); end
  def test_xi_a_ca355; assert_in_epsilon(2020, worksheet.xi_a_ca355, 0.001); end
  def test_xi_a_cb355; assert_in_epsilon(2025, worksheet.xi_a_cb355, 0.001); end
  def test_xi_a_cc355; assert_in_epsilon(2030, worksheet.xi_a_cc355, 0.001); end
  def test_xi_a_cd355; assert_in_epsilon(2035, worksheet.xi_a_cd355, 0.001); end
  def test_xi_a_ce355; assert_in_epsilon(2040, worksheet.xi_a_ce355, 0.001); end
  def test_xi_a_cf355; assert_in_epsilon(2045, worksheet.xi_a_cf355, 0.001); end
  def test_xi_a_cg355; assert_in_epsilon(2050, worksheet.xi_a_cg355, 0.001); end
  def test_xi_a_ci355; assert_equal("Description", worksheet.xi_a_ci355); end
  def test_xi_a_cj355; assert_in_epsilon(2010, worksheet.xi_a_cj355, 0.001); end
  def test_xi_a_ck355; assert_in_epsilon(2015, worksheet.xi_a_ck355, 0.001); end
  def test_xi_a_cl355; assert_in_epsilon(2020, worksheet.xi_a_cl355, 0.001); end
  def test_xi_a_cm355; assert_in_epsilon(2025, worksheet.xi_a_cm355, 0.001); end
  def test_xi_a_cn355; assert_in_epsilon(2030, worksheet.xi_a_cn355, 0.001); end
  def test_xi_a_co355; assert_in_epsilon(2035, worksheet.xi_a_co355, 0.001); end
  def test_xi_a_cp355; assert_in_epsilon(2040, worksheet.xi_a_cp355, 0.001); end
  def test_xi_a_cq355; assert_in_epsilon(2045, worksheet.xi_a_cq355, 0.001); end
  def test_xi_a_cr355; assert_in_epsilon(2050, worksheet.xi_a_cr355, 0.001); end
  def test_xi_a_c356; assert_equal("(ii)", worksheet.xi_a_c356); end
  def test_xi_a_d356; assert_equal("Oxygen Steel", worksheet.xi_a_d356); end
  def test_xi_a_e356; assert_in_epsilon(5264, worksheet.xi_a_e356, 0.001); end
  def test_xi_a_f356; assert_in_epsilon(4336.3516, worksheet.xi_a_f356, 0.001); end
  def test_xi_a_g356; assert_in_epsilon(4303.5832, worksheet.xi_a_g356, 0.001); end
  def test_xi_a_h356; assert_in_epsilon(4270.8148, worksheet.xi_a_h356, 0.001); end
  def test_xi_a_i356; assert_in_epsilon(4238.0464, worksheet.xi_a_i356, 0.001); end
  def test_xi_a_j356; assert_in_epsilon(4205.278, worksheet.xi_a_j356, 0.001); end
  def test_xi_a_k356; assert_in_epsilon(4172.509599999999, worksheet.xi_a_k356, 0.001); end
  def test_xi_a_l356; assert_in_epsilon(4139.7412, worksheet.xi_a_l356, 0.001); end
  def test_xi_a_m356; assert_in_epsilon(4106.9728, worksheet.xi_a_m356, 0.001); end
  def test_xi_a_o356; assert_equal("(ii)", worksheet.xi_a_o356); end
  def test_xi_a_p356; assert_equal("Oxygen Steel", worksheet.xi_a_p356); end
  def test_xi_a_aa356; assert_equal("V.01", worksheet.xi_a_aa356); end
  def test_xi_a_ab356; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab356); end
  def test_xi_a_am356; assert_equal("(ii)", worksheet.xi_a_am356); end
  def test_xi_a_an356; assert_equal("Oxygen Steel", worksheet.xi_a_an356); end
  def test_xi_a_ao356; assert_in_delta(0, (worksheet.xi_a_ao356||0), 0.001); end
  def test_xi_a_ap356; assert_in_delta(0, (worksheet.xi_a_ap356||0), 0.001); end
  def test_xi_a_aq356; assert_in_delta(0, (worksheet.xi_a_aq356||0), 0.001); end
  def test_xi_a_ar356; assert_in_delta(0, (worksheet.xi_a_ar356||0), 0.001); end
  def test_xi_a_as356; assert_in_delta(0, (worksheet.xi_a_as356||0), 0.001); end
  def test_xi_a_at356; assert_in_delta(0, (worksheet.xi_a_at356||0), 0.001); end
  def test_xi_a_au356; assert_in_delta(0, (worksheet.xi_a_au356||0), 0.001); end
  def test_xi_a_av356; assert_in_delta(0, (worksheet.xi_a_av356||0), 0.001); end
  def test_xi_a_aw356; assert_in_delta(0, (worksheet.xi_a_aw356||0), 0.001); end
  def test_xi_a_ay356; assert_equal("(ii)", worksheet.xi_a_ay356); end
  def test_xi_a_az356; assert_equal("Oxygen Steel", worksheet.xi_a_az356); end
  def test_xi_a_bl356; assert_equal("Oxygen Steel", worksheet.xi_a_bl356); end
  def test_xi_a_bx356; assert_equal("Oxygen Steel", worksheet.xi_a_bx356); end
  def test_xi_a_ba356; assert_in_epsilon(7.404573633815223, worksheet.xi_a_ba356, 0.001); end
  def test_xi_a_ac359; assert_in_delta(0.07696335047929356, worksheet.xi_a_ac359, 0.001); end
  def test_xi_a_ac363; assert_in_epsilon(17.667755554147785, worksheet.xi_a_ac363, 0.001); end
  def test_xi_a_bm332; assert_in_delta(0, (worksheet.xi_a_bm332||0), 0.001); end
  def test_xi_a_bm356; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_a_bm356, 0.001); end
  def test_xi_a_by356; assert_in_delta(-4.192202140984591e-13, worksheet.xi_a_by356, 0.001); end
  def test_xi_a_bb356; assert_in_epsilon(6.064398899237631, worksheet.xi_a_bb356, 0.001); end
  def test_xi_a_ad359; assert_in_delta(0.07696335047929356, worksheet.xi_a_ad359, 0.001); end
  def test_xi_a_ad363; assert_in_epsilon(17.955346389372078, worksheet.xi_a_ad363, 0.001); end
  def test_xi_a_bn332; assert_in_epsilon(-101.72929124576359, worksheet.xi_a_bn332, 0.001); end
  def test_xi_a_bn356; assert_in_delta(1.1368683772161603e-13, worksheet.xi_a_bn356, 0.001); end
  def test_xi_a_bz356; assert_in_delta(-1.1795009413617663e-12, worksheet.xi_a_bz356, 0.001); end
  def test_xi_a_bc356; assert_in_epsilon(5.983535240282053, worksheet.xi_a_bc356, 0.001); end
  def test_xi_a_ae359; assert_in_delta(0.07696335047929354, worksheet.xi_a_ae359, 0.001); end
  def test_xi_a_ae363; assert_in_epsilon(17.42991070429268, worksheet.xi_a_ae363, 0.001); end
  def test_xi_a_bo332; assert_in_epsilon(-104.9025447268155, worksheet.xi_a_bo332, 0.001); end
  def test_xi_a_bo356; assert_in_delta(0, (worksheet.xi_a_bo356||0), 0.001); end
  def test_xi_a_ca356; assert_in_delta(0, (worksheet.xi_a_ca356||0), 0.001); end
  def test_xi_a_bd356; assert_in_epsilon(5.903205139199903, worksheet.xi_a_bd356, 0.001); end
  def test_xi_a_af359; assert_in_delta(0.07696335047929355, worksheet.xi_a_af359, 0.001); end
  def test_xi_a_af363; assert_in_epsilon(17.722435711286636, worksheet.xi_a_af363, 0.001); end
  def test_xi_a_bp332; assert_in_epsilon(-112.8734631678089, worksheet.xi_a_bp332, 0.001); end
  def test_xi_a_bp356; assert_in_delta(0, (worksheet.xi_a_bp356||0), 0.001); end
  def test_xi_a_cb356; assert_in_delta(5.329070518200751e-13, worksheet.xi_a_cb356, 0.001); end
  def test_xi_a_be356; assert_in_epsilon(4.942780636808796, worksheet.xi_a_be356, 0.001); end
  def test_xi_a_ag359; assert_in_delta(0.1020398909895385, worksheet.xi_a_ag359, 0.001); end
  def test_xi_a_ag363; assert_in_epsilon(23.9253380948348, worksheet.xi_a_ag363, 0.001); end
  def test_xi_a_bq332; assert_in_epsilon(-104.65046175336539, worksheet.xi_a_bq332, 0.001); end
  def test_xi_a_bq356; assert_in_epsilon(28.632369399880986, worksheet.xi_a_bq356, 0.001); end
  def test_xi_a_cc356; assert_in_epsilon(499.7444061095514, worksheet.xi_a_cc356, 0.001); end
  def test_xi_a_bf356; assert_in_epsilon(4.875928034258043, worksheet.xi_a_bf356, 0.001); end
  def test_xi_a_ah359; assert_in_delta(0.10203989098953849, worksheet.xi_a_ah359, 0.001); end
  def test_xi_a_ah363; assert_in_epsilon(22.552868808803876, worksheet.xi_a_ah363, 0.001); end
  def test_xi_a_br332; assert_in_epsilon(-101.68551173127645, worksheet.xi_a_br332, 0.001); end
  def test_xi_a_br356; assert_in_epsilon(33.5813023671642, worksheet.xi_a_br356, 0.001); end
  def test_xi_a_cd356; assert_in_epsilon(487.3492434715447, worksheet.xi_a_cd356, 0.001); end
  def test_xi_a_bg356; assert_in_epsilon(4.8095216949773105, worksheet.xi_a_bg356, 0.001); end
  def test_xi_a_ai359; assert_in_delta(0.1020398909895385, worksheet.xi_a_ai359, 0.001); end
  def test_xi_a_ai363; assert_in_epsilon(21.304684789875456, worksheet.xi_a_ai363, 0.001); end
  def test_xi_a_bs332; assert_in_epsilon(-98.54127357057297, worksheet.xi_a_bs332, 0.001); end
  def test_xi_a_bs356; assert_in_epsilon(38.298928680955385, worksheet.xi_a_bs356, 0.001); end
  def test_xi_a_ce356; assert_in_epsilon(475.23776424907425, worksheet.xi_a_ce356, 0.001); end
  def test_xi_a_bh356; assert_in_epsilon(4.743561618966596, worksheet.xi_a_bh356, 0.001); end
  def test_xi_a_aj359; assert_in_delta(0.10203989098953847, worksheet.xi_a_aj359, 0.001); end
  def test_xi_a_aj363; assert_in_epsilon(20.06546333481871, worksheet.xi_a_aj363, 0.001); end
  def test_xi_a_bt332; assert_in_epsilon(-94.64502388550443, worksheet.xi_a_bt332, 0.001); end
  def test_xi_a_bt356; assert_in_epsilon(42.937349653705894, worksheet.xi_a_bt356, 0.001); end
  def test_xi_a_cf356; assert_in_epsilon(463.25786712969204, worksheet.xi_a_cf356, 0.001); end
  def test_xi_a_bi356; assert_in_epsilon(4.678047806225905, worksheet.xi_a_bi356, 0.001); end
  def test_xi_a_ak359; assert_in_delta(0.1020398909895385, worksheet.xi_a_ak359, 0.001); end
  def test_xi_a_ak363; assert_in_epsilon(18.79001532392001, worksheet.xi_a_ak363, 0.001); end
  def test_xi_a_bu332; assert_in_epsilon(-89.73268752069481, worksheet.xi_a_bu332, 0.001); end
  def test_xi_a_bu356; assert_in_epsilon(47.55206383292949, worksheet.xi_a_bu356, 0.001); end
  def test_xi_a_cg356; assert_in_epsilon(451.35405356587785, worksheet.xi_a_cg356, 0.001); end
  def test_xi_a_ci356; assert_equal("Oxygen Steel", worksheet.xi_a_ci356); end
  def test_xi_a_cj356; assert_in_epsilon(6000, worksheet.xi_a_cj356, 0.001); end
  def test_xi_a_ck356; assert_in_epsilon(5000, worksheet.xi_a_ck356, 0.001); end
  def test_xi_a_cl356; assert_in_epsilon(5000, worksheet.xi_a_cl356, 0.001); end
  def test_xi_a_cm356; assert_in_epsilon(5000, worksheet.xi_a_cm356, 0.001); end
  def test_xi_a_cn356; assert_in_epsilon(5000, worksheet.xi_a_cn356, 0.001); end
  def test_xi_a_co356; assert_in_epsilon(5000, worksheet.xi_a_co356, 0.001); end
  def test_xi_a_cp356; assert_in_epsilon(5000, worksheet.xi_a_cp356, 0.001); end
  def test_xi_a_cq356; assert_in_epsilon(5000, worksheet.xi_a_cq356, 0.001); end
  def test_xi_a_cr356; assert_in_epsilon(5000, worksheet.xi_a_cr356, 0.001); end
  def test_xi_a_c357; assert_equal("(iii)", worksheet.xi_a_c357); end
  def test_xi_a_d357; assert_equal("Electric Steel", worksheet.xi_a_d357); end
  def test_xi_a_e357; assert_in_epsilon(2869, worksheet.xi_a_e357, 0.001); end
  def test_xi_a_f357; assert_in_epsilon(3735.6509, worksheet.xi_a_f357, 0.001); end
  def test_xi_a_g357; assert_in_epsilon(3707.4218, worksheet.xi_a_g357, 0.001); end
  def test_xi_a_h357; assert_in_epsilon(3679.1927, worksheet.xi_a_h357, 0.001); end
  def test_xi_a_i357; assert_in_epsilon(3650.9636, worksheet.xi_a_i357, 0.001); end
  def test_xi_a_j357; assert_in_epsilon(3622.7345, worksheet.xi_a_j357, 0.001); end
  def test_xi_a_k357; assert_in_epsilon(3594.5054, worksheet.xi_a_k357, 0.001); end
  def test_xi_a_l357; assert_in_epsilon(3566.2763, worksheet.xi_a_l357, 0.001); end
  def test_xi_a_m357; assert_in_epsilon(3538.0472, worksheet.xi_a_m357, 0.001); end
  def test_xi_a_o357; assert_equal("(iii)", worksheet.xi_a_o357); end
  def test_xi_a_p357; assert_equal("Electric Steel", worksheet.xi_a_p357); end
  def test_xi_a_q357; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q357, 0.001); end
  def test_xi_a_r357; assert_in_delta(0.002401479455929414, worksheet.xi_a_r357, 0.001); end
  def test_xi_a_s357; assert_in_delta(0.0023863758115524997, worksheet.xi_a_s357, 0.001); end
  def test_xi_a_t357; assert_in_delta(0.002371272167175585, worksheet.xi_a_t357, 0.001); end
  def test_xi_a_u357; assert_in_delta(0.0023561685227986703, worksheet.xi_a_u357, 0.001); end
  def test_xi_a_v357; assert_in_delta(0.002341064878421756, worksheet.xi_a_v357, 0.001); end
  def test_xi_a_w357; assert_in_delta(0.0023259612340448413, worksheet.xi_a_w357, 0.001); end
  def test_xi_a_x357; assert_in_delta(0.002310857589667927, worksheet.xi_a_x357, 0.001); end
  def test_xi_a_y357; assert_in_delta(0.0022957539452910123, worksheet.xi_a_y357, 0.001); end
  def test_xi_a_aa357; assert_equal("V.03", worksheet.xi_a_aa357); end
  def test_xi_a_ab357; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab357); end
  def test_xi_a_am357; assert_equal("(iii)", worksheet.xi_a_am357); end
  def test_xi_a_an357; assert_equal("Electric Steel", worksheet.xi_a_an357); end
  def test_xi_a_ao357; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao357, 0.001); end
  def test_xi_a_ap357; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap357, 0.001); end
  def test_xi_a_aq357; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq357, 0.001); end
  def test_xi_a_ar357; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar357, 0.001); end
  def test_xi_a_as357; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as357, 0.001); end
  def test_xi_a_at357; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at357, 0.001); end
  def test_xi_a_au357; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au357, 0.001); end
  def test_xi_a_av357; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av357, 0.001); end
  def test_xi_a_aw357; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw357, 0.001); end
  def test_xi_a_ay357; assert_equal("(iii)", worksheet.xi_a_ay357); end
  def test_xi_a_az357; assert_equal("Electric Steel", worksheet.xi_a_az357); end
  def test_xi_a_bl357; assert_equal("Electric Steel", worksheet.xi_a_bl357); end
  def test_xi_a_bx357; assert_equal("Electric Steel", worksheet.xi_a_bx357); end
  def test_xi_a_ba357; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_ba357, 0.001); end
  def test_xi_a_bm333; assert_in_delta(0, (worksheet.xi_a_bm333||0), 0.001); end
  def test_xi_a_bm357; assert_in_delta(-5.684341886080802e-14, worksheet.xi_a_bm357, 0.001); end
  def test_xi_a_by357; assert_in_delta(5.684341886080802e-14, worksheet.xi_a_by357, 0.001); end
  def test_xi_a_bb357; assert_in_epsilon(2.3704901780731915, worksheet.xi_a_bb357, 0.001); end
  def test_xi_a_bn333; assert_in_epsilon(36.59141544184209, worksheet.xi_a_bn333, 0.001); end
  def test_xi_a_bn357; assert_in_delta(0, (worksheet.xi_a_bn357||0), 0.001); end
  def test_xi_a_bz357; assert_in_delta(0, (worksheet.xi_a_bz357||0), 0.001); end
  def test_xi_a_bc357; assert_in_epsilon(2.3452666885956592, worksheet.xi_a_bc357, 0.001); end
  def test_xi_a_bo333; assert_in_epsilon(33.363024200797895, worksheet.xi_a_bo333, 0.001); end
  def test_xi_a_bo357; assert_in_delta(0, (worksheet.xi_a_bo357||0), 0.001); end
  def test_xi_a_ca357; assert_in_delta(0, (worksheet.xi_a_ca357||0), 0.001); end
  def test_xi_a_bd357; assert_in_epsilon(2.3201545260033325, worksheet.xi_a_bd357, 0.001); end
  def test_xi_a_bp333; assert_in_epsilon(31.74425551275648, worksheet.xi_a_bp333, 0.001); end
  def test_xi_a_bp357; assert_in_delta(5.684341886080802e-14, worksheet.xi_a_bp357, 0.001); end
  def test_xi_a_cb357; assert_in_delta(-5.684341886080802e-14, worksheet.xi_a_cb357, 0.001); end
  def test_xi_a_be357; assert_in_epsilon(2.295153690296212, worksheet.xi_a_be357, 0.001); end
  def test_xi_a_bq333; assert_in_epsilon(26.004802797635207, worksheet.xi_a_bq333, 0.001); end
  def test_xi_a_bq357; assert_in_epsilon(71.78851276433716, worksheet.xi_a_bq357, 0.001); end
  def test_xi_a_cc357; assert_in_epsilon(-71.78851276433716, worksheet.xi_a_cc357, 0.001); end
  def test_xi_a_bf357; assert_in_epsilon(2.2702641814742983, worksheet.xi_a_bf357, 0.001); end
  def test_xi_a_br333; assert_in_epsilon(22.28625139024595, worksheet.xi_a_br333, 0.001); end
  def test_xi_a_br357; assert_in_epsilon(69.16255462246664, worksheet.xi_a_br357, 0.001); end
  def test_xi_a_cd357; assert_in_epsilon(-69.16255462246664, worksheet.xi_a_cd357, 0.001); end
  def test_xi_a_bg357; assert_in_epsilon(2.24548599953759, worksheet.xi_a_bg357, 0.001); end
  def test_xi_a_bs333; assert_in_epsilon(18.994702904252406, worksheet.xi_a_bs333, 0.001); end
  def test_xi_a_bs357; assert_in_epsilon(66.87243104315897, worksheet.xi_a_bs357, 0.001); end
  def test_xi_a_ce357; assert_in_epsilon(-66.87243104315897, worksheet.xi_a_ce357, 0.001); end
  def test_xi_a_bh357; assert_in_epsilon(2.2208191444860876, worksheet.xi_a_bh357, 0.001); end
  def test_xi_a_bt333; assert_in_epsilon(15.980930334455351, worksheet.xi_a_bt333, 0.001); end
  def test_xi_a_bt357; assert_in_epsilon(64.67196126779888, worksheet.xi_a_bt357, 0.001); end
  def test_xi_a_cf357; assert_in_epsilon(-64.67196126779888, worksheet.xi_a_cf357, 0.001); end
  def test_xi_a_bi357; assert_in_epsilon(2.1962636163197917, worksheet.xi_a_bi357, 0.001); end
  def test_xi_a_bu333; assert_in_epsilon(13.20037046666289, worksheet.xi_a_bu333, 0.001); end
  def test_xi_a_bu357; assert_in_epsilon(62.46858560543194, worksheet.xi_a_bu357, 0.001); end
  def test_xi_a_cg357; assert_in_epsilon(-62.46858560543194, worksheet.xi_a_cg357, 0.001); end
  def test_xi_a_ci357; assert_equal("Electric Steel", worksheet.xi_a_ci357); end
  def test_xi_a_cj357; assert_in_epsilon(3000, worksheet.xi_a_cj357, 0.001); end
  def test_xi_a_ck357; assert_in_epsilon(4000, worksheet.xi_a_ck357, 0.001); end
  def test_xi_a_cl357; assert_in_epsilon(4000, worksheet.xi_a_cl357, 0.001); end
  def test_xi_a_cm357; assert_in_epsilon(4000, worksheet.xi_a_cm357, 0.001); end
  def test_xi_a_cn357; assert_in_epsilon(4000, worksheet.xi_a_cn357, 0.001); end
  def test_xi_a_co357; assert_in_epsilon(4000, worksheet.xi_a_co357, 0.001); end
  def test_xi_a_cp357; assert_in_epsilon(4000, worksheet.xi_a_cp357, 0.001); end
  def test_xi_a_cq357; assert_in_epsilon(4000, worksheet.xi_a_cq357, 0.001); end
  def test_xi_a_cr357; assert_in_epsilon(4000, worksheet.xi_a_cr357, 0.001); end
  def test_xi_a_d358; assert_equal("Total", worksheet.xi_a_d358); end
  def test_xi_a_e358; assert_in_epsilon(8133, worksheet.xi_a_e358, 0.001); end
  def test_xi_a_f358; assert_in_epsilon(8072.0025000000005, worksheet.xi_a_f358, 0.001); end
  def test_xi_a_g358; assert_in_epsilon(8011.005, worksheet.xi_a_g358, 0.001); end
  def test_xi_a_h358; assert_in_epsilon(7950.0075, worksheet.xi_a_h358, 0.001); end
  def test_xi_a_i358; assert_in_epsilon(7889.01, worksheet.xi_a_i358, 0.001); end
  def test_xi_a_j358; assert_in_epsilon(7828.012500000001, worksheet.xi_a_j358, 0.001); end
  def test_xi_a_k358; assert_in_epsilon(7767.014999999999, worksheet.xi_a_k358, 0.001); end
  def test_xi_a_l358; assert_in_epsilon(7706.0175, worksheet.xi_a_l358, 0.001); end
  def test_xi_a_m358; assert_in_epsilon(7645.0199999999995, worksheet.xi_a_m358, 0.001); end
  def test_xi_a_o358; assert_equal("Total", worksheet.xi_a_o358); end
  def test_xi_a_aa358; assert_equal("V.05", worksheet.xi_a_aa358); end
  def test_xi_a_ab358; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab358); end
  def test_xi_a_am358; assert_equal("Total", worksheet.xi_a_am358); end
  def test_xi_a_ay358; assert_equal("Total", worksheet.xi_a_ay358); end
  def test_xi_a_ba358; assert_in_epsilon(9.230780077441661, worksheet.xi_a_ba358, 0.001); end
  def test_xi_a_bb358; assert_in_epsilon(8.434889077310823, worksheet.xi_a_bb358, 0.001); end
  def test_xi_a_bc358; assert_in_epsilon(8.328801928877713, worksheet.xi_a_bc358, 0.001); end
  def test_xi_a_bd358; assert_in_epsilon(8.223359665203235, worksheet.xi_a_bd358, 0.001); end
  def test_xi_a_be358; assert_in_epsilon(7.237934327105008, worksheet.xi_a_be358, 0.001); end
  def test_xi_a_bf358; assert_in_epsilon(7.146192215732341, worksheet.xi_a_bf358, 0.001); end
  def test_xi_a_bg358; assert_in_epsilon(7.0550076945149005, worksheet.xi_a_bg358, 0.001); end
  def test_xi_a_bh358; assert_in_epsilon(6.9643807634526835, worksheet.xi_a_bh358, 0.001); end
  def test_xi_a_bl358; assert_equal("Total", worksheet.xi_a_bl358); end
  def test_xi_a_bm358; assert_in_delta(-1.7053025658242404e-13, worksheet.xi_a_bm358, 0.001); end
  def test_xi_a_bn358; assert_in_delta(1.1368683772161603e-13, worksheet.xi_a_bn358, 0.001); end
  def test_xi_a_bo358; assert_in_delta(0, (worksheet.xi_a_bo358||0), 0.001); end
  def test_xi_a_bp358; assert_in_delta(5.684341886080802e-14, worksheet.xi_a_bp358, 0.001); end
  def test_xi_a_bq358; assert_in_epsilon(100.42088216421814, worksheet.xi_a_bq358, 0.001); end
  def test_xi_a_br358; assert_in_epsilon(102.74385698963084, worksheet.xi_a_br358, 0.001); end
  def test_xi_a_bs358; assert_in_epsilon(105.17135972411435, worksheet.xi_a_bs358, 0.001); end
  def test_xi_a_bt358; assert_in_epsilon(107.60931092150477, worksheet.xi_a_bt358, 0.001); end
  def test_xi_a_bu358; assert_in_epsilon(110.02064943836143, worksheet.xi_a_bu358, 0.001); end
  def test_xi_a_bx358; assert_equal("Total", worksheet.xi_a_bx358); end
  def test_xi_a_by358; assert_in_delta(-3.623767952376511e-13, worksheet.xi_a_by358, 0.001); end
  def test_xi_a_bz358; assert_in_delta(-1.1795009413617663e-12, worksheet.xi_a_bz358, 0.001); end
  def test_xi_a_ca358; assert_in_delta(0, (worksheet.xi_a_ca358||0), 0.001); end
  def test_xi_a_cb358; assert_in_delta(4.760636329592671e-13, worksheet.xi_a_cb358, 0.001); end
  def test_xi_a_cc358; assert_in_epsilon(427.95589334521424, worksheet.xi_a_cc358, 0.001); end
  def test_xi_a_cd358; assert_in_epsilon(418.18668884907805, worksheet.xi_a_cd358, 0.001); end
  def test_xi_a_ce358; assert_in_epsilon(408.36533320591525, worksheet.xi_a_ce358, 0.001); end
  def test_xi_a_cf358; assert_in_epsilon(398.58590586189314, worksheet.xi_a_cf358, 0.001); end
  def test_xi_a_cg358; assert_in_epsilon(388.8854679604459, worksheet.xi_a_cg358, 0.001); end
  def test_xi_a_o359; assert_equal("TWh", worksheet.xi_a_o359); end
  def test_xi_a_q359; assert_in_epsilon(38.17081383255731, worksheet.xi_a_q359, 0.001); end
  def test_xi_a_r359; assert_in_epsilon(34.54304334061753, worksheet.xi_a_r359, 0.001); end
  def test_xi_a_s359; assert_in_epsilon(34.066402643095586, worksheet.xi_a_s359, 0.001); end
  def test_xi_a_t359; assert_in_epsilon(33.593045348771255, worksheet.xi_a_t359, 0.001); end
  def test_xi_a_u359; assert_in_epsilon(25.766765674012305, worksheet.xi_a_u359, 0.001); end
  def test_xi_a_v359; assert_in_epsilon(25.403643629339882, worksheet.xi_a_v359, 0.001); end
  def test_xi_a_w359; assert_in_epsilon(25.043075784278287, worksheet.xi_a_w359, 0.001); end
  def test_xi_a_x359; assert_in_epsilon(24.68506213882751, worksheet.xi_a_x359, 0.001); end
  def test_xi_a_y359; assert_in_epsilon(24.329602692987564, worksheet.xi_a_y359, 0.001); end
  def test_xi_a_aa359; assert_equal("V.04", worksheet.xi_a_aa359); end
  def test_xi_a_ab359; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab359); end
  def test_xi_a_bk359; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bk359); end
  def test_xi_a_bl359; assert_equal("Oxygen Steel", worksheet.xi_a_bl359); end
  def test_xi_a_bw359; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bw359); end
  def test_xi_a_bx359; assert_equal("Oxygen Steel", worksheet.xi_a_bx359); end
  def test_xi_a_by359; assert_in_delta(-4.192202140984591e-13, worksheet.xi_a_by359, 0.001); end
  def test_xi_a_bz359; assert_in_epsilon(178.66809214901787, worksheet.xi_a_bz359, 0.001); end
  def test_xi_a_ca359; assert_in_epsilon(183.23215315347403, worksheet.xi_a_ca359, 0.001); end
  def test_xi_a_cb359; assert_in_epsilon(192.5725368029339, worksheet.xi_a_cb359, 0.001); end
  def test_xi_a_cc359; assert_in_epsilon(685.4420643915702, worksheet.xi_a_cc359, 0.001); end
  def test_xi_a_cd359; assert_in_epsilon(671.4087323100662, worksheet.xi_a_cd359, 0.001); end
  def test_xi_a_ce359; assert_in_epsilon(657.4584531905468, worksheet.xi_a_ce359, 0.001); end
  def test_xi_a_cf359; assert_in_epsilon(642.8664023348135, worksheet.xi_a_cf359, 0.001); end
  def test_xi_a_cg359; assert_in_epsilon(627.31300603997, worksheet.xi_a_cg359, 0.001); end
  def test_xi_a_d360; assert_equal("Top gas recylcing : reuse BFG  ", worksheet.xi_a_d360); end
  def test_xi_a_e360; assert_equal("Consumption coal and coke ", worksheet.xi_a_e360); end
  def test_xi_a_h360; assert_in_delta(0.55, worksheet.xi_a_h360, 0.001); end
  def test_xi_a_aa360; assert_equal("v.06", worksheet.xi_a_aa360); end
  def test_xi_a_ab360; assert_equal("Blast furnace gas", worksheet.xi_a_ab360); end
  def test_xi_a_am360; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am360); end
  def test_xi_a_bl360; assert_equal("Electric Steel", worksheet.xi_a_bl360); end
  def test_xi_a_bx360; assert_equal("Electric Steel", worksheet.xi_a_bx360); end
  def test_xi_a_by360; assert_in_delta(5.684341886080802e-14, worksheet.xi_a_by360, 0.001); end
  def test_xi_a_bz360; assert_in_epsilon(-70.47388333423275, worksheet.xi_a_bz360, 0.001); end
  def test_xi_a_ca360; assert_in_epsilon(-66.95530001241805, worksheet.xi_a_ca360, 0.001); end
  def test_xi_a_cb360; assert_in_epsilon(-65.0507923190144, worksheet.xi_a_cb360, 0.001); end
  def test_xi_a_cc360; assert_in_epsilon(-130.8185664382762, worksheet.xi_a_cc360, 0.001); end
  def test_xi_a_cd360; assert_in_epsilon(-124.19722403447065, worksheet.xi_a_cd360, 0.001); end
  def test_xi_a_ce360; assert_in_epsilon(-118.34317219003188, worksheet.xi_a_ce360, 0.001); end
  def test_xi_a_cf360; assert_in_epsilon(-112.8610031411454, worksheet.xi_a_cf360, 0.001); end
  def test_xi_a_cg360; assert_in_epsilon(-107.61359398266495, worksheet.xi_a_cg360, 0.001); end
  def test_xi_a_e361; assert_equal("BFF = 0", worksheet.xi_a_e361); end
  def test_xi_a_o361; assert_equal("Absolute consumption for the oxygen sector (intermediary calculation)", worksheet.xi_a_o361); end
  def test_xi_a_aa361; assert_equal("V.07", worksheet.xi_a_aa361); end
  def test_xi_a_ab361; assert_equal("Heat transport", worksheet.xi_a_ab361); end
  def test_xi_a_am361; assert_equal("Industry", worksheet.xi_a_am361); end
  def test_xi_a_an361; assert_equal("Description", worksheet.xi_a_an361); end
  def test_xi_a_ao361; assert_in_epsilon(2010, worksheet.xi_a_ao361, 0.001); end
  def test_xi_a_ap361; assert_in_epsilon(2015, worksheet.xi_a_ap361, 0.001); end
  def test_xi_a_aq361; assert_in_epsilon(2020, worksheet.xi_a_aq361, 0.001); end
  def test_xi_a_ar361; assert_in_epsilon(2025, worksheet.xi_a_ar361, 0.001); end
  def test_xi_a_as361; assert_in_epsilon(2030, worksheet.xi_a_as361, 0.001); end
  def test_xi_a_at361; assert_in_epsilon(2035, worksheet.xi_a_at361, 0.001); end
  def test_xi_a_au361; assert_in_epsilon(2040, worksheet.xi_a_au361, 0.001); end
  def test_xi_a_av361; assert_in_epsilon(2045, worksheet.xi_a_av361, 0.001); end
  def test_xi_a_aw361; assert_in_epsilon(2050, worksheet.xi_a_aw361, 0.001); end
  def test_xi_a_bl361; assert_equal("Total", worksheet.xi_a_bl361); end
  def test_xi_a_bm361; assert_in_delta(-1.7053025658242404e-13, worksheet.xi_a_bm361, 0.001); end
  def test_xi_a_bn361; assert_in_epsilon(-65.13787580392139, worksheet.xi_a_bn361, 0.001); end
  def test_xi_a_bo361; assert_in_epsilon(-71.53952052601761, worksheet.xi_a_bo361, 0.001); end
  def test_xi_a_bp361; assert_in_epsilon(-81.12920765505235, worksheet.xi_a_bp361, 0.001); end
  def test_xi_a_bq361; assert_in_epsilon(21.775223208487958, worksheet.xi_a_bq361, 0.001); end
  def test_xi_a_br361; assert_in_epsilon(23.344596648600344, worksheet.xi_a_br361, 0.001); end
  def test_xi_a_bs361; assert_in_epsilon(25.62478905779379, worksheet.xi_a_bs361, 0.001); end
  def test_xi_a_bt361; assert_in_epsilon(28.945217370455694, worksheet.xi_a_bt361, 0.001); end
  def test_xi_a_bu361; assert_in_epsilon(33.48833238432951, worksheet.xi_a_bu361, 0.001); end
  def test_xi_a_bx361; assert_equal("Total", worksheet.xi_a_bx361); end
  def test_xi_a_by361; assert_in_delta(-3.623767952376511e-13, worksheet.xi_a_by361, 0.001); end
  def test_xi_a_bz361; assert_in_epsilon(108.19420881478514, worksheet.xi_a_bz361, 0.001); end
  def test_xi_a_ca361; assert_in_epsilon(116.276853141056, worksheet.xi_a_ca361, 0.001); end
  def test_xi_a_cb361; assert_in_epsilon(127.52174448391952, worksheet.xi_a_cb361, 0.001); end
  def test_xi_a_cc361; assert_in_epsilon(554.623497953294, worksheet.xi_a_cc361, 0.001); end
  def test_xi_a_cd361; assert_in_epsilon(547.2115082755955, worksheet.xi_a_cd361, 0.001); end
  def test_xi_a_ce361; assert_in_epsilon(539.1152810005149, worksheet.xi_a_ce361, 0.001); end
  def test_xi_a_cf361; assert_in_epsilon(530.005399193668, worksheet.xi_a_cf361, 0.001); end
  def test_xi_a_q362; assert_in_epsilon(2010, worksheet.xi_a_q362, 0.001); end
  def test_xi_a_r362; assert_in_epsilon(2015, worksheet.xi_a_r362, 0.001); end
  def test_xi_a_s362; assert_in_epsilon(2020, worksheet.xi_a_s362, 0.001); end
  def test_xi_a_t362; assert_in_epsilon(2025, worksheet.xi_a_t362, 0.001); end
  def test_xi_a_u362; assert_in_epsilon(2030, worksheet.xi_a_u362, 0.001); end
  def test_xi_a_v362; assert_in_epsilon(2035, worksheet.xi_a_v362, 0.001); end
  def test_xi_a_w362; assert_in_epsilon(2040, worksheet.xi_a_w362, 0.001); end
  def test_xi_a_x362; assert_in_epsilon(2045, worksheet.xi_a_x362, 0.001); end
  def test_xi_a_y362; assert_in_epsilon(2050, worksheet.xi_a_y362, 0.001); end
  def test_xi_a_aa362; assert_equal("Intensity", worksheet.xi_a_aa362); end
  def test_xi_a_ab362; assert_equal("Intensity", worksheet.xi_a_ab362); end
  def test_xi_a_ac362; assert_in_delta(0.21950983912607058, worksheet.xi_a_ac362, 0.001); end
  def test_xi_a_ad362; assert_in_delta(0.21950983912607064, worksheet.xi_a_ad362, 0.001); end
  def test_xi_a_ae362; assert_in_delta(0.21950983912607056, worksheet.xi_a_ae362, 0.001); end
  def test_xi_a_af362; assert_in_delta(0.21950983912607053, worksheet.xi_a_af362, 0.001); end
  def test_xi_a_ag362; assert_in_delta(0.26228023368741943, worksheet.xi_a_ag362, 0.001); end
  def test_xi_a_ah362; assert_in_delta(0.26228023368741943, worksheet.xi_a_ah362, 0.001); end
  def test_xi_a_ai362; assert_in_delta(0.2622802336874195, worksheet.xi_a_ai362, 0.001); end
  def test_xi_a_aj362; assert_in_delta(0.2622802336874194, worksheet.xi_a_aj362, 0.001); end
  def test_xi_a_ak362; assert_in_delta(0.2622802336874195, worksheet.xi_a_ak362, 0.001); end
  def test_xi_a_am362; assert_equal("(ii)", worksheet.xi_a_am362); end
  def test_xi_a_an362; assert_equal("Oxygen Steel", worksheet.xi_a_an362); end
  def test_xi_a_ao362; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao362, 0.001); end
  def test_xi_a_ap362; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap362, 0.001); end
  def test_xi_a_aq362; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq362, 0.001); end
  def test_xi_a_ar362; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar362, 0.001); end
  def test_xi_a_as362; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as362, 0.001); end
  def test_xi_a_at362; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at362, 0.001); end
  def test_xi_a_au362; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au362, 0.001); end
  def test_xi_a_av362; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av362, 0.001); end
  def test_xi_a_aw362; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw362, 0.001); end
  def test_xi_a_d363; assert_equal("Reasoning", worksheet.xi_a_d363); end
  def test_xi_a_e363; assert_equal("An intermediary table is used to modify the split between vectors in percentages", worksheet.xi_a_e363); end
  def test_xi_a_p363; assert_equal("V.01", worksheet.xi_a_p363); end
  def test_xi_a_aa363; assert_equal("Cost", worksheet.xi_a_aa363); end
  def test_xi_a_ab363; assert_equal("Cost", worksheet.xi_a_ab363); end
  def test_xi_a_am363; assert_equal("(iii)", worksheet.xi_a_am363); end
  def test_xi_a_an363; assert_equal("Electric Steel", worksheet.xi_a_an363); end
  def test_xi_a_ao363; assert_in_delta(0, (worksheet.xi_a_ao363||0), 0.001); end
  def test_xi_a_ap363; assert_in_delta(0, (worksheet.xi_a_ap363||0), 0.001); end
  def test_xi_a_aq363; assert_in_delta(0, (worksheet.xi_a_aq363||0), 0.001); end
  def test_xi_a_ar363; assert_in_delta(0, (worksheet.xi_a_ar363||0), 0.001); end
  def test_xi_a_as363; assert_in_delta(0, (worksheet.xi_a_as363||0), 0.001); end
  def test_xi_a_at363; assert_in_delta(0, (worksheet.xi_a_at363||0), 0.001); end
  def test_xi_a_au363; assert_in_delta(0, (worksheet.xi_a_au363||0), 0.001); end
  def test_xi_a_av363; assert_in_delta(0, (worksheet.xi_a_av363||0), 0.001); end
  def test_xi_a_aw363; assert_in_delta(0, (worksheet.xi_a_aw363||0), 0.001); end
  def test_xi_a_e364; assert_equal("if % reduction (in table) >1%, solid fuel is reduced by 55% (because blast gas energy is now used), else unchanged", worksheet.xi_a_e364); end
  def test_xi_a_p364; assert_equal("V.03", worksheet.xi_a_p364); end
  def test_xi_a_am364; assert_equal("Total", worksheet.xi_a_am364); end
  def test_xi_a_e365; assert_equal("This action therefore cannot be gradual", worksheet.xi_a_e365); end
  def test_xi_a_p365; assert_equal("V.05", worksheet.xi_a_p365); end
  def test_xi_a_z365; assert_equal("Electrosteel", worksheet.xi_a_z365); end
  def test_xi_a_aa365; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa365); end
  def test_xi_a_p366; assert_equal("V.04", worksheet.xi_a_p366); end
  def test_xi_a_aa366; assert_equal("Vector", worksheet.xi_a_aa366); end
  def test_xi_a_ab366; assert_equal("Description", worksheet.xi_a_ab366); end
  def test_xi_a_ac366; assert_in_epsilon(2010, worksheet.xi_a_ac366, 0.001); end
  def test_xi_a_ad366; assert_in_epsilon(2015, worksheet.xi_a_ad366, 0.001); end
  def test_xi_a_ae366; assert_in_epsilon(2020, worksheet.xi_a_ae366, 0.001); end
  def test_xi_a_af366; assert_in_epsilon(2025, worksheet.xi_a_af366, 0.001); end
  def test_xi_a_ag366; assert_in_epsilon(2030, worksheet.xi_a_ag366, 0.001); end
  def test_xi_a_ah366; assert_in_epsilon(2035, worksheet.xi_a_ah366, 0.001); end
  def test_xi_a_ai366; assert_in_epsilon(2040, worksheet.xi_a_ai366, 0.001); end
  def test_xi_a_aj366; assert_in_epsilon(2045, worksheet.xi_a_aj366, 0.001); end
  def test_xi_a_ak366; assert_in_epsilon(2050, worksheet.xi_a_ak366, 0.001); end
  def test_xi_a_p367; assert_equal("v.06", worksheet.xi_a_p367); end
  def test_xi_a_aa367; assert_equal("V.01", worksheet.xi_a_aa367); end
  def test_xi_a_ab367; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab367); end
  def test_xi_a_ac367; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac367, 0.001); end
  def test_xi_a_ad367; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad367, 0.001); end
  def test_xi_a_ae367; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae367, 0.001); end
  def test_xi_a_af367; assert_in_delta(0.37661125507716986, worksheet.xi_a_af367, 0.001); end
  def test_xi_a_ag367; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag367, 0.001); end
  def test_xi_a_ah367; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah367, 0.001); end
  def test_xi_a_ai367; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai367, 0.001); end
  def test_xi_a_aj367; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj367, 0.001); end
  def test_xi_a_ak367; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak367, 0.001); end
  def test_xi_a_p368; assert_equal("V.07", worksheet.xi_a_p368); end
  def test_xi_a_aa368; assert_equal("V.03", worksheet.xi_a_aa368); end
  def test_xi_a_ab368; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab368); end
  def test_xi_a_ac368; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac368, 0.001); end
  def test_xi_a_ad368; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad368, 0.001); end
  def test_xi_a_ae368; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae368, 0.001); end
  def test_xi_a_af368; assert_in_delta(0.04200640884510868, worksheet.xi_a_af368, 0.001); end
  def test_xi_a_ag368; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag368, 0.001); end
  def test_xi_a_ah368; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah368, 0.001); end
  def test_xi_a_ai368; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai368, 0.001); end
  def test_xi_a_aj368; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj368, 0.001); end
  def test_xi_a_ak368; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak368, 0.001); end
  def test_xi_a_aa369; assert_equal("V.05", worksheet.xi_a_aa369); end
  def test_xi_a_ab369; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab369); end
  def test_xi_a_ac369; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac369, 0.001); end
  def test_xi_a_ad369; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad369, 0.001); end
  def test_xi_a_ae369; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae369, 0.001); end
  def test_xi_a_af369; assert_in_delta(0.5722074496017227, worksheet.xi_a_af369, 0.001); end
  def test_xi_a_ag369; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag369, 0.001); end
  def test_xi_a_ah369; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah369, 0.001); end
  def test_xi_a_ai369; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai369, 0.001); end
  def test_xi_a_aj369; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj369, 0.001); end
  def test_xi_a_ak369; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak369, 0.001); end
  def test_xi_a_aa370; assert_equal("V.04", worksheet.xi_a_aa370); end
  def test_xi_a_ab370; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab370); end
  def test_xi_a_ac370; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac370, 0.001); end
  def test_xi_a_ad370; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad370, 0.001); end
  def test_xi_a_ae370; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae370, 0.001); end
  def test_xi_a_af370; assert_in_delta(0.009174886475998728, worksheet.xi_a_af370, 0.001); end
  def test_xi_a_ag370; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag370, 0.001); end
  def test_xi_a_ah370; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah370, 0.001); end
  def test_xi_a_ai370; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai370, 0.001); end
  def test_xi_a_aj370; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj370, 0.001); end
  def test_xi_a_ak370; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak370, 0.001); end
  def test_xi_a_aa371; assert_equal("V.06", worksheet.xi_a_aa371); end
  def test_xi_a_ab371; assert_equal("Blast furnace gas", worksheet.xi_a_ab371); end
  def test_xi_a_ac371; assert_in_delta(0, (worksheet.xi_a_ac371||0), 0.001); end
  def test_xi_a_ad371; assert_in_delta(0, (worksheet.xi_a_ad371||0), 0.001); end
  def test_xi_a_ae371; assert_in_delta(0, (worksheet.xi_a_ae371||0), 0.001); end
  def test_xi_a_af371; assert_in_delta(0, (worksheet.xi_a_af371||0), 0.001); end
  def test_xi_a_ag371; assert_in_delta(0, (worksheet.xi_a_ag371||0), 0.001); end
  def test_xi_a_ah371; assert_in_delta(0, (worksheet.xi_a_ah371||0), 0.001); end
  def test_xi_a_ai371; assert_in_delta(0, (worksheet.xi_a_ai371||0), 0.001); end
  def test_xi_a_aj371; assert_in_delta(0, (worksheet.xi_a_aj371||0), 0.001); end
  def test_xi_a_ak371; assert_in_delta(0, (worksheet.xi_a_ak371||0), 0.001); end
  def test_xi_a_aa372; assert_equal("V.07", worksheet.xi_a_aa372); end
  def test_xi_a_ab372; assert_equal("Heat transport", worksheet.xi_a_ab372); end
  def test_xi_a_ac372; assert_in_delta(0, (worksheet.xi_a_ac372||0), 0.001); end
  def test_xi_a_ad372; assert_in_delta(0, (worksheet.xi_a_ad372||0), 0.001); end
  def test_xi_a_ae372; assert_in_delta(0, (worksheet.xi_a_ae372||0), 0.001); end
  def test_xi_a_af372; assert_in_delta(0, (worksheet.xi_a_af372||0), 0.001); end
  def test_xi_a_ag372; assert_in_delta(0, (worksheet.xi_a_ag372||0), 0.001); end
  def test_xi_a_ah372; assert_in_delta(0, (worksheet.xi_a_ah372||0), 0.001); end
  def test_xi_a_ai372; assert_in_delta(0, (worksheet.xi_a_ai372||0), 0.001); end
  def test_xi_a_aj372; assert_in_delta(0, (worksheet.xi_a_aj372||0), 0.001); end
  def test_xi_a_ak372; assert_in_delta(0, (worksheet.xi_a_ak372||0), 0.001); end
  def test_xi_a_aa373; assert_equal("Intensity", worksheet.xi_a_aa373); end
  def test_xi_a_ab373; assert_equal("Intensity", worksheet.xi_a_ab373); end
  def test_xi_a_ac373; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac373, 0.001); end
  def test_xi_a_ad373; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad373, 0.001); end
  def test_xi_a_ae373; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae373, 0.001); end
  def test_xi_a_af373; assert_in_delta(0.1305543295866784, worksheet.xi_a_af373, 0.001); end
  def test_xi_a_ag373; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag373, 0.001); end
  def test_xi_a_ah373; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah373, 0.001); end
  def test_xi_a_ai373; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai373, 0.001); end
  def test_xi_a_aj373; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj373, 0.001); end
  def test_xi_a_ak373; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak373, 0.001); end
  def test_xi_a_aa374; assert_equal("Cost", worksheet.xi_a_aa374); end
  def test_xi_a_ab374; assert_equal("Cost", worksheet.xi_a_ab374); end
  def test_xi_a_ac374; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac374, 0.001); end
  def test_xi_a_ad374; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad374, 0.001); end
  def test_xi_a_ae374; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae374, 0.001); end
  def test_xi_a_af374; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af374, 0.001); end
  def test_xi_a_ag374; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag374, 0.001); end
  def test_xi_a_ah374; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah374, 0.001); end
  def test_xi_a_ai374; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai374, 0.001); end
  def test_xi_a_aj374; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj374, 0.001); end
  def test_xi_a_ak374; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak374, 0.001); end
  def test_xi_a_c376; assert_equal("Alternative fuels: Gas injection", worksheet.xi_a_c376); end
  def test_xi_a_b377; assert_in_delta(1, worksheet.xi_a_b377, 0.001); end
  def test_xi_a_c377; assert_equal("Output Growth (kt)", worksheet.xi_a_c377); end
  def test_xi_a_n377; assert_in_epsilon(2, worksheet.xi_a_n377, 0.001); end
  def test_xi_a_o377; assert_equal("Energy demand multiplier ( (TWh/kt)", worksheet.xi_a_o377); end
  def test_xi_a_z377; assert_in_epsilon(3, worksheet.xi_a_z377, 0.001); end
  def test_xi_a_aa377; assert_equal("Energy split by vector (%) and intensity (MMtCO2e/TWh)", worksheet.xi_a_aa377); end
  def test_xi_a_al377; assert_in_epsilon(4, worksheet.xi_a_al377, 0.001); end
  def test_xi_a_am377; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am377); end
  def test_xi_a_ay377; assert_in_epsilon(5, worksheet.xi_a_ay377, 0.001); end
  def test_xi_a_az377; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az377); end
  def test_xi_a_bk377; assert_in_epsilon(6, worksheet.xi_a_bk377, 0.001); end
  def test_xi_a_bl377; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl377); end
  def test_xi_a_bw377; assert_in_epsilon(7, worksheet.xi_a_bw377, 0.001); end
  def test_xi_a_bx377; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx377); end
  def test_xi_a_ci377; assert_equal("Capacity", worksheet.xi_a_ci377); end
  def test_xi_a_c378; assert_equal("Product type", worksheet.xi_a_c378); end
  def test_xi_a_d378; assert_equal("Description", worksheet.xi_a_d378); end
  def test_xi_a_e378; assert_in_epsilon(2010, worksheet.xi_a_e378, 0.001); end
  def test_xi_a_f378; assert_in_epsilon(2015, worksheet.xi_a_f378, 0.001); end
  def test_xi_a_g378; assert_in_epsilon(2020, worksheet.xi_a_g378, 0.001); end
  def test_xi_a_h378; assert_in_epsilon(2025, worksheet.xi_a_h378, 0.001); end
  def test_xi_a_i378; assert_in_epsilon(2030, worksheet.xi_a_i378, 0.001); end
  def test_xi_a_j378; assert_in_epsilon(2035, worksheet.xi_a_j378, 0.001); end
  def test_xi_a_k378; assert_in_epsilon(2040, worksheet.xi_a_k378, 0.001); end
  def test_xi_a_l378; assert_in_epsilon(2045, worksheet.xi_a_l378, 0.001); end
  def test_xi_a_m378; assert_in_epsilon(2050, worksheet.xi_a_m378, 0.001); end
  def test_xi_a_o378; assert_equal("Industry", worksheet.xi_a_o378); end
  def test_xi_a_p378; assert_equal("Description", worksheet.xi_a_p378); end
  def test_xi_a_q378; assert_in_epsilon(2010, worksheet.xi_a_q378, 0.001); end
  def test_xi_a_r378; assert_in_epsilon(2015, worksheet.xi_a_r378, 0.001); end
  def test_xi_a_s378; assert_in_epsilon(2020, worksheet.xi_a_s378, 0.001); end
  def test_xi_a_t378; assert_in_epsilon(2025, worksheet.xi_a_t378, 0.001); end
  def test_xi_a_u378; assert_in_epsilon(2030, worksheet.xi_a_u378, 0.001); end
  def test_xi_a_v378; assert_in_epsilon(2035, worksheet.xi_a_v378, 0.001); end
  def test_xi_a_w378; assert_in_epsilon(2040, worksheet.xi_a_w378, 0.001); end
  def test_xi_a_x378; assert_in_epsilon(2045, worksheet.xi_a_x378, 0.001); end
  def test_xi_a_y378; assert_in_epsilon(2050, worksheet.xi_a_y378, 0.001); end
  def test_xi_a_z378; assert_equal("Oxygensteel", worksheet.xi_a_z378); end
  def test_xi_a_aa378; assert_equal("Vector", worksheet.xi_a_aa378); end
  def test_xi_a_ab378; assert_equal("Description", worksheet.xi_a_ab378); end
  def test_xi_a_ac378; assert_in_epsilon(2010, worksheet.xi_a_ac378, 0.001); end
  def test_xi_a_ad378; assert_in_epsilon(2015, worksheet.xi_a_ad378, 0.001); end
  def test_xi_a_ae378; assert_in_epsilon(2020, worksheet.xi_a_ae378, 0.001); end
  def test_xi_a_af378; assert_in_epsilon(2025, worksheet.xi_a_af378, 0.001); end
  def test_xi_a_ag378; assert_in_epsilon(2030, worksheet.xi_a_ag378, 0.001); end
  def test_xi_a_ah378; assert_in_epsilon(2035, worksheet.xi_a_ah378, 0.001); end
  def test_xi_a_ai378; assert_in_epsilon(2040, worksheet.xi_a_ai378, 0.001); end
  def test_xi_a_aj378; assert_in_epsilon(2045, worksheet.xi_a_aj378, 0.001); end
  def test_xi_a_ak378; assert_in_epsilon(2050, worksheet.xi_a_ak378, 0.001); end
  def test_xi_a_am378; assert_equal("Industry", worksheet.xi_a_am378); end
  def test_xi_a_an378; assert_equal("Description", worksheet.xi_a_an378); end
  def test_xi_a_ao378; assert_in_epsilon(2010, worksheet.xi_a_ao378, 0.001); end
  def test_xi_a_ap378; assert_in_epsilon(2015, worksheet.xi_a_ap378, 0.001); end
  def test_xi_a_aq378; assert_in_epsilon(2020, worksheet.xi_a_aq378, 0.001); end
  def test_xi_a_ar378; assert_in_epsilon(2025, worksheet.xi_a_ar378, 0.001); end
  def test_xi_a_as378; assert_in_epsilon(2030, worksheet.xi_a_as378, 0.001); end
  def test_xi_a_at378; assert_in_epsilon(2035, worksheet.xi_a_at378, 0.001); end
  def test_xi_a_au378; assert_in_epsilon(2040, worksheet.xi_a_au378, 0.001); end
  def test_xi_a_av378; assert_in_epsilon(2045, worksheet.xi_a_av378, 0.001); end
  def test_xi_a_aw378; assert_in_epsilon(2050, worksheet.xi_a_aw378, 0.001); end
  def test_xi_a_ay378; assert_equal("Industry", worksheet.xi_a_ay378); end
  def test_xi_a_az378; assert_equal("Description", worksheet.xi_a_az378); end
  def test_xi_a_ba378; assert_in_epsilon(2010, worksheet.xi_a_ba378, 0.001); end
  def test_xi_a_bb378; assert_in_epsilon(2015, worksheet.xi_a_bb378, 0.001); end
  def test_xi_a_bc378; assert_in_epsilon(2020, worksheet.xi_a_bc378, 0.001); end
  def test_xi_a_bd378; assert_in_epsilon(2025, worksheet.xi_a_bd378, 0.001); end
  def test_xi_a_be378; assert_in_epsilon(2030, worksheet.xi_a_be378, 0.001); end
  def test_xi_a_bf378; assert_in_epsilon(2035, worksheet.xi_a_bf378, 0.001); end
  def test_xi_a_bg378; assert_in_epsilon(2040, worksheet.xi_a_bg378, 0.001); end
  def test_xi_a_bh378; assert_in_epsilon(2045, worksheet.xi_a_bh378, 0.001); end
  def test_xi_a_bi378; assert_in_epsilon(2050, worksheet.xi_a_bi378, 0.001); end
  def test_xi_a_bk378; assert_equal("Industry", worksheet.xi_a_bk378); end
  def test_xi_a_bl378; assert_equal("Description", worksheet.xi_a_bl378); end
  def test_xi_a_bm378; assert_in_epsilon(2010, worksheet.xi_a_bm378, 0.001); end
  def test_xi_a_bn378; assert_in_epsilon(2015, worksheet.xi_a_bn378, 0.001); end
  def test_xi_a_bo378; assert_in_epsilon(2020, worksheet.xi_a_bo378, 0.001); end
  def test_xi_a_bp378; assert_in_epsilon(2025, worksheet.xi_a_bp378, 0.001); end
  def test_xi_a_bq378; assert_in_epsilon(2030, worksheet.xi_a_bq378, 0.001); end
  def test_xi_a_br378; assert_in_epsilon(2035, worksheet.xi_a_br378, 0.001); end
  def test_xi_a_bs378; assert_in_epsilon(2040, worksheet.xi_a_bs378, 0.001); end
  def test_xi_a_bt378; assert_in_epsilon(2045, worksheet.xi_a_bt378, 0.001); end
  def test_xi_a_bu378; assert_in_epsilon(2050, worksheet.xi_a_bu378, 0.001); end
  def test_xi_a_bw378; assert_equal("Industry", worksheet.xi_a_bw378); end
  def test_xi_a_bx378; assert_equal("Description", worksheet.xi_a_bx378); end
  def test_xi_a_by378; assert_in_epsilon(2010, worksheet.xi_a_by378, 0.001); end
  def test_xi_a_bz378; assert_in_epsilon(2015, worksheet.xi_a_bz378, 0.001); end
  def test_xi_a_ca378; assert_in_epsilon(2020, worksheet.xi_a_ca378, 0.001); end
  def test_xi_a_cb378; assert_in_epsilon(2025, worksheet.xi_a_cb378, 0.001); end
  def test_xi_a_cc378; assert_in_epsilon(2030, worksheet.xi_a_cc378, 0.001); end
  def test_xi_a_cd378; assert_in_epsilon(2035, worksheet.xi_a_cd378, 0.001); end
  def test_xi_a_ce378; assert_in_epsilon(2040, worksheet.xi_a_ce378, 0.001); end
  def test_xi_a_cf378; assert_in_epsilon(2045, worksheet.xi_a_cf378, 0.001); end
  def test_xi_a_cg378; assert_in_epsilon(2050, worksheet.xi_a_cg378, 0.001); end
  def test_xi_a_ci378; assert_equal("Description", worksheet.xi_a_ci378); end
  def test_xi_a_cj378; assert_in_epsilon(2010, worksheet.xi_a_cj378, 0.001); end
  def test_xi_a_ck378; assert_in_epsilon(2015, worksheet.xi_a_ck378, 0.001); end
  def test_xi_a_cl378; assert_in_epsilon(2020, worksheet.xi_a_cl378, 0.001); end
  def test_xi_a_cm378; assert_in_epsilon(2025, worksheet.xi_a_cm378, 0.001); end
  def test_xi_a_cn378; assert_in_epsilon(2030, worksheet.xi_a_cn378, 0.001); end
  def test_xi_a_co378; assert_in_epsilon(2035, worksheet.xi_a_co378, 0.001); end
  def test_xi_a_cp378; assert_in_epsilon(2040, worksheet.xi_a_cp378, 0.001); end
  def test_xi_a_cq378; assert_in_epsilon(2045, worksheet.xi_a_cq378, 0.001); end
  def test_xi_a_cr378; assert_in_epsilon(2050, worksheet.xi_a_cr378, 0.001); end
  def test_xi_a_c379; assert_equal("(ii)", worksheet.xi_a_c379); end
  def test_xi_a_d379; assert_equal("Oxygen Steel", worksheet.xi_a_d379); end
  def test_xi_a_e379; assert_in_epsilon(5264, worksheet.xi_a_e379, 0.001); end
  def test_xi_a_f379; assert_in_epsilon(4336.3516, worksheet.xi_a_f379, 0.001); end
  def test_xi_a_g379; assert_in_epsilon(4303.5832, worksheet.xi_a_g379, 0.001); end
  def test_xi_a_h379; assert_in_epsilon(4270.8148, worksheet.xi_a_h379, 0.001); end
  def test_xi_a_i379; assert_in_epsilon(4238.0464, worksheet.xi_a_i379, 0.001); end
  def test_xi_a_j379; assert_in_epsilon(4205.278, worksheet.xi_a_j379, 0.001); end
  def test_xi_a_k379; assert_in_epsilon(4172.509599999999, worksheet.xi_a_k379, 0.001); end
  def test_xi_a_l379; assert_in_epsilon(4139.7412, worksheet.xi_a_l379, 0.001); end
  def test_xi_a_m379; assert_in_epsilon(4106.9728, worksheet.xi_a_m379, 0.001); end
  def test_xi_a_o379; assert_equal("(ii)", worksheet.xi_a_o379); end
  def test_xi_a_p379; assert_equal("Oxygen Steel", worksheet.xi_a_p379); end
  def test_xi_a_q379; assert_in_delta(0.005934201542131165, worksheet.xi_a_q379, 0.001); end
  def test_xi_a_r379; assert_in_delta(0.005897112782492845, worksheet.xi_a_r379, 0.001); end
  def test_xi_a_s379; assert_in_delta(0.005860024022854526, worksheet.xi_a_s379, 0.001); end
  def test_xi_a_t379; assert_in_delta(0.005822935263216205, worksheet.xi_a_t379, 0.001); end
  def test_xi_a_u379; assert_in_delta(0.0040500925525045195, worksheet.xi_a_u379, 0.001); end
  def test_xi_a_v379; assert_in_delta(0.004024130420757696, worksheet.xi_a_v379, 0.001); end
  def test_xi_a_w379; assert_in_delta(0.003998168289010872, worksheet.xi_a_w379, 0.001); end
  def test_xi_a_x379; assert_in_delta(0.003972206157264048, worksheet.xi_a_x379, 0.001); end
  def test_xi_a_y379; assert_in_delta(0.003946244025517224, worksheet.xi_a_y379, 0.001); end
  def test_xi_a_aa379; assert_equal("V.01", worksheet.xi_a_aa379); end
  def test_xi_a_ab379; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab379); end
  def test_xi_a_ac379; assert_in_delta(0.0820478272887989, worksheet.xi_a_ac379, 0.001); end
  def test_xi_a_ad379; assert_in_delta(0.08204782728879893, worksheet.xi_a_ad379, 0.001); end
  def test_xi_a_ae379; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae379, 0.001); end
  def test_xi_a_af379; assert_in_delta(0.0820478272887989, worksheet.xi_a_af379, 0.001); end
  def test_xi_a_ag379; assert_in_delta(0.10878101460421724, worksheet.xi_a_ag379, 0.001); end
  def test_xi_a_ah379; assert_in_delta(0.10878101460421724, worksheet.xi_a_ah379, 0.001); end
  def test_xi_a_ai379; assert_in_delta(0.10878101460421725, worksheet.xi_a_ai379, 0.001); end
  def test_xi_a_aj379; assert_in_delta(0.10878101460421723, worksheet.xi_a_aj379, 0.001); end
  def test_xi_a_ak379; assert_in_delta(0.10878101460421724, worksheet.xi_a_ak379, 0.001); end
  def test_xi_a_am379; assert_equal("(ii)", worksheet.xi_a_am379); end
  def test_xi_a_an379; assert_equal("Oxygen Steel", worksheet.xi_a_an379); end
  def test_xi_a_ao379; assert_in_delta(0, (worksheet.xi_a_ao379||0), 0.001); end
  def test_xi_a_ap379; assert_in_delta(0, (worksheet.xi_a_ap379||0), 0.001); end
  def test_xi_a_aq379; assert_in_delta(0, (worksheet.xi_a_aq379||0), 0.001); end
  def test_xi_a_ar379; assert_in_delta(0, (worksheet.xi_a_ar379||0), 0.001); end
  def test_xi_a_as379; assert_in_delta(0, (worksheet.xi_a_as379||0), 0.001); end
  def test_xi_a_at379; assert_in_delta(0, (worksheet.xi_a_at379||0), 0.001); end
  def test_xi_a_au379; assert_in_delta(0, (worksheet.xi_a_au379||0), 0.001); end
  def test_xi_a_av379; assert_in_delta(0, (worksheet.xi_a_av379||0), 0.001); end
  def test_xi_a_aw379; assert_in_delta(0, (worksheet.xi_a_aw379||0), 0.001); end
  def test_xi_a_ay379; assert_equal("(ii)", worksheet.xi_a_ay379); end
  def test_xi_a_az379; assert_equal("Oxygen Steel", worksheet.xi_a_az379); end
  def test_xi_a_ba379; assert_in_epsilon(7.404573633815224, worksheet.xi_a_ba379, 0.001); end
  def test_xi_a_bb379; assert_in_epsilon(6.060899436815026, worksheet.xi_a_bb379, 0.001); end
  def test_xi_a_bc379; assert_in_epsilon(5.976632889800234, worksheet.xi_a_bc379, 0.001); end
  def test_xi_a_bd379; assert_in_epsilon(5.8929954771241295, worksheet.xi_a_bd379, 0.001); end
  def test_xi_a_be379; assert_in_epsilon(4.935929277116749, worksheet.xi_a_be379, 0.001); end
  def test_xi_a_bf379; assert_in_epsilon(4.867484526922122, worksheet.xi_a_bf379, 0.001); end
  def test_xi_a_bg379; assert_in_epsilon(4.799533298170118, worksheet.xi_a_bg379, 0.001); end
  def test_xi_a_bh379; assert_in_epsilon(4.7320750814912165, worksheet.xi_a_bh379, 0.001); end
  def test_xi_a_bi379; assert_in_epsilon(4.665109367515889, worksheet.xi_a_bi379, 0.001); end
  def test_xi_a_bl379; assert_equal("Oxygen Steel", worksheet.xi_a_bl379); end
  def test_xi_a_bx379; assert_equal("Oxygen Steel", worksheet.xi_a_bx379); end
  def test_xi_a_by379; assert_in_delta(0, (worksheet.xi_a_by379||0), 0.001); end
  def test_xi_a_bz379; assert_in_delta(0, (worksheet.xi_a_bz379||0), 0.001); end
  def test_xi_a_ca379; assert_in_delta(0, (worksheet.xi_a_ca379||0), 0.001); end
  def test_xi_a_cb379; assert_in_delta(0, (worksheet.xi_a_cb379||0), 0.001); end
  def test_xi_a_cc379; assert_in_delta(0, (worksheet.xi_a_cc379||0), 0.001); end
  def test_xi_a_cd379; assert_in_delta(0, (worksheet.xi_a_cd379||0), 0.001); end
  def test_xi_a_ce379; assert_in_delta(0, (worksheet.xi_a_ce379||0), 0.001); end
  def test_xi_a_cf379; assert_in_delta(0, (worksheet.xi_a_cf379||0), 0.001); end
  def test_xi_a_cg379; assert_in_delta(0, (worksheet.xi_a_cg379||0), 0.001); end
  def test_xi_a_ci379; assert_equal("Oxygen Steel", worksheet.xi_a_ci379); end
  def test_xi_a_cj379; assert_in_epsilon(6000, worksheet.xi_a_cj379, 0.001); end
  def test_xi_a_ck379; assert_in_epsilon(5000, worksheet.xi_a_ck379, 0.001); end
  def test_xi_a_cl379; assert_in_epsilon(5000, worksheet.xi_a_cl379, 0.001); end
  def test_xi_a_cm379; assert_in_epsilon(5000, worksheet.xi_a_cm379, 0.001); end
  def test_xi_a_cn379; assert_in_epsilon(5000, worksheet.xi_a_cn379, 0.001); end
  def test_xi_a_co379; assert_in_epsilon(5000, worksheet.xi_a_co379, 0.001); end
  def test_xi_a_cp379; assert_in_epsilon(5000, worksheet.xi_a_cp379, 0.001); end
  def test_xi_a_cq379; assert_in_epsilon(5000, worksheet.xi_a_cq379, 0.001); end
  def test_xi_a_cr379; assert_in_epsilon(5000, worksheet.xi_a_cr379, 0.001); end
  def test_xi_a_c380; assert_equal("(iii)", worksheet.xi_a_c380); end
  def test_xi_a_d380; assert_equal("Electric Steel", worksheet.xi_a_d380); end
  def test_xi_a_e380; assert_in_epsilon(2869, worksheet.xi_a_e380, 0.001); end
  def test_xi_a_f380; assert_in_epsilon(3735.6509, worksheet.xi_a_f380, 0.001); end
  def test_xi_a_g380; assert_in_epsilon(3707.4218, worksheet.xi_a_g380, 0.001); end
  def test_xi_a_h380; assert_in_epsilon(3679.1927, worksheet.xi_a_h380, 0.001); end
  def test_xi_a_i380; assert_in_epsilon(3650.9636, worksheet.xi_a_i380, 0.001); end
  def test_xi_a_j380; assert_in_epsilon(3622.7345, worksheet.xi_a_j380, 0.001); end
  def test_xi_a_k380; assert_in_epsilon(3594.5054, worksheet.xi_a_k380, 0.001); end
  def test_xi_a_l380; assert_in_epsilon(3566.2763, worksheet.xi_a_l380, 0.001); end
  def test_xi_a_m380; assert_in_epsilon(3538.0472, worksheet.xi_a_m380, 0.001); end
  def test_xi_a_o380; assert_equal("(iii)", worksheet.xi_a_o380); end
  def test_xi_a_p380; assert_equal("Electric Steel", worksheet.xi_a_p380); end
  def test_xi_a_q380; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q380, 0.001); end
  def test_xi_a_r380; assert_in_delta(0.002401479455929414, worksheet.xi_a_r380, 0.001); end
  def test_xi_a_s380; assert_in_delta(0.0023863758115524997, worksheet.xi_a_s380, 0.001); end
  def test_xi_a_t380; assert_in_delta(0.002371272167175585, worksheet.xi_a_t380, 0.001); end
  def test_xi_a_u380; assert_in_delta(0.0023561685227986703, worksheet.xi_a_u380, 0.001); end
  def test_xi_a_v380; assert_in_delta(0.002341064878421756, worksheet.xi_a_v380, 0.001); end
  def test_xi_a_w380; assert_in_delta(0.0023259612340448413, worksheet.xi_a_w380, 0.001); end
  def test_xi_a_x380; assert_in_delta(0.002310857589667927, worksheet.xi_a_x380, 0.001); end
  def test_xi_a_y380; assert_in_delta(0.0022957539452910123, worksheet.xi_a_y380, 0.001); end
  def test_xi_a_aa380; assert_equal("V.03", worksheet.xi_a_aa380); end
  def test_xi_a_ab380; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab380); end
  def test_xi_a_am380; assert_equal("(iii)", worksheet.xi_a_am380); end
  def test_xi_a_an380; assert_equal("Electric Steel", worksheet.xi_a_an380); end
  def test_xi_a_ao380; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao380, 0.001); end
  def test_xi_a_ap380; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap380, 0.001); end
  def test_xi_a_aq380; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq380, 0.001); end
  def test_xi_a_ar380; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar380, 0.001); end
  def test_xi_a_as380; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as380, 0.001); end
  def test_xi_a_at380; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at380, 0.001); end
  def test_xi_a_au380; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au380, 0.001); end
  def test_xi_a_av380; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av380, 0.001); end
  def test_xi_a_aw380; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw380, 0.001); end
  def test_xi_a_ay380; assert_equal("(iii)", worksheet.xi_a_ay380); end
  def test_xi_a_az380; assert_equal("Electric Steel", worksheet.xi_a_az380); end
  def test_xi_a_ba380; assert_in_epsilon(1.8262064436264394, worksheet.xi_a_ba380, 0.001); end
  def test_xi_a_bb380; assert_in_epsilon(2.3704901780731915, worksheet.xi_a_bb380, 0.001); end
  def test_xi_a_bc380; assert_in_epsilon(2.3452666885956592, worksheet.xi_a_bc380, 0.001); end
  def test_xi_a_bd380; assert_in_epsilon(2.3201545260033325, worksheet.xi_a_bd380, 0.001); end
  def test_xi_a_be380; assert_in_epsilon(2.295153690296212, worksheet.xi_a_be380, 0.001); end
  def test_xi_a_bf380; assert_in_epsilon(2.2702641814742983, worksheet.xi_a_bf380, 0.001); end
  def test_xi_a_bg380; assert_in_epsilon(2.24548599953759, worksheet.xi_a_bg380, 0.001); end
  def test_xi_a_bh380; assert_in_epsilon(2.2208191444860876, worksheet.xi_a_bh380, 0.001); end
  def test_xi_a_bi380; assert_in_epsilon(2.1962636163197917, worksheet.xi_a_bi380, 0.001); end
  def test_xi_a_bl380; assert_equal("Electric Steel", worksheet.xi_a_bl380); end
  def test_xi_a_bx380; assert_equal("Electric Steel", worksheet.xi_a_bx380); end
  def test_xi_a_by380; assert_in_delta(0, (worksheet.xi_a_by380||0), 0.001); end
  def test_xi_a_bz380; assert_in_delta(0, (worksheet.xi_a_bz380||0), 0.001); end
  def test_xi_a_ca380; assert_in_delta(0, (worksheet.xi_a_ca380||0), 0.001); end
  def test_xi_a_cb380; assert_in_delta(0, (worksheet.xi_a_cb380||0), 0.001); end
  def test_xi_a_cc380; assert_in_delta(0, (worksheet.xi_a_cc380||0), 0.001); end
  def test_xi_a_cd380; assert_in_delta(0, (worksheet.xi_a_cd380||0), 0.001); end
  def test_xi_a_ce380; assert_in_delta(0, (worksheet.xi_a_ce380||0), 0.001); end
  def test_xi_a_cf380; assert_in_delta(0, (worksheet.xi_a_cf380||0), 0.001); end
  def test_xi_a_cg380; assert_in_delta(0, (worksheet.xi_a_cg380||0), 0.001); end
  def test_xi_a_ci380; assert_equal("Electric Steel", worksheet.xi_a_ci380); end
  def test_xi_a_cj380; assert_in_epsilon(3000, worksheet.xi_a_cj380, 0.001); end
  def test_xi_a_ck380; assert_in_epsilon(4000, worksheet.xi_a_ck380, 0.001); end
  def test_xi_a_cl380; assert_in_epsilon(4000, worksheet.xi_a_cl380, 0.001); end
  def test_xi_a_cm380; assert_in_epsilon(4000, worksheet.xi_a_cm380, 0.001); end
  def test_xi_a_cn380; assert_in_epsilon(4000, worksheet.xi_a_cn380, 0.001); end
  def test_xi_a_co380; assert_in_epsilon(4000, worksheet.xi_a_co380, 0.001); end
  def test_xi_a_cp380; assert_in_epsilon(4000, worksheet.xi_a_cp380, 0.001); end
  def test_xi_a_cq380; assert_in_epsilon(4000, worksheet.xi_a_cq380, 0.001); end
  def test_xi_a_cr380; assert_in_epsilon(4000, worksheet.xi_a_cr380, 0.001); end
  def test_xi_a_d381; assert_equal("Total", worksheet.xi_a_d381); end
  def test_xi_a_e381; assert_in_epsilon(8133, worksheet.xi_a_e381, 0.001); end
  def test_xi_a_f381; assert_in_epsilon(8072.0025000000005, worksheet.xi_a_f381, 0.001); end
  def test_xi_a_g381; assert_in_epsilon(8011.005, worksheet.xi_a_g381, 0.001); end
  def test_xi_a_h381; assert_in_epsilon(7950.0075, worksheet.xi_a_h381, 0.001); end
  def test_xi_a_i381; assert_in_epsilon(7889.01, worksheet.xi_a_i381, 0.001); end
  def test_xi_a_j381; assert_in_epsilon(7828.012500000001, worksheet.xi_a_j381, 0.001); end
  def test_xi_a_k381; assert_in_epsilon(7767.014999999999, worksheet.xi_a_k381, 0.001); end
  def test_xi_a_l381; assert_in_epsilon(7706.0175, worksheet.xi_a_l381, 0.001); end
  def test_xi_a_m381; assert_in_epsilon(7645.0199999999995, worksheet.xi_a_m381, 0.001); end
  def test_xi_a_o381; assert_equal("Total", worksheet.xi_a_o381); end
  def test_xi_a_aa381; assert_equal("V.05", worksheet.xi_a_aa381); end
  def test_xi_a_ab381; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab381); end
  def test_xi_a_ac381; assert_in_delta(0.2110256488374445, worksheet.xi_a_ac381, 0.001); end
  def test_xi_a_ad381; assert_in_delta(0.21102564883744454, worksheet.xi_a_ad381, 0.001); end
  def test_xi_a_ae381; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae381, 0.001); end
  def test_xi_a_af381; assert_in_delta(0.21102564883744448, worksheet.xi_a_af381, 0.001); end
  def test_xi_a_ag381; assert_in_delta(0.279782962530494, worksheet.xi_a_ag381, 0.001); end
  def test_xi_a_ah381; assert_in_delta(0.279782962530494, worksheet.xi_a_ah381, 0.001); end
  def test_xi_a_ai381; assert_in_delta(0.279782962530494, worksheet.xi_a_ai381, 0.001); end
  def test_xi_a_aj381; assert_in_delta(0.27978296253049395, worksheet.xi_a_aj381, 0.001); end
  def test_xi_a_ak381; assert_in_delta(0.279782962530494, worksheet.xi_a_ak381, 0.001); end
  def test_xi_a_am381; assert_equal("Total", worksheet.xi_a_am381); end
  def test_xi_a_ay381; assert_equal("Total", worksheet.xi_a_ay381); end
  def test_xi_a_ba381; assert_in_epsilon(9.230780077441663, worksheet.xi_a_ba381, 0.001); end
  def test_xi_a_bb381; assert_in_epsilon(8.431389614888218, worksheet.xi_a_bb381, 0.001); end
  def test_xi_a_bc381; assert_in_epsilon(8.321899578395893, worksheet.xi_a_bc381, 0.001); end
  def test_xi_a_bd381; assert_in_epsilon(8.213150003127462, worksheet.xi_a_bd381, 0.001); end
  def test_xi_a_be381; assert_in_epsilon(7.231082967412961, worksheet.xi_a_be381, 0.001); end
  def test_xi_a_bf381; assert_in_epsilon(7.137748708396421, worksheet.xi_a_bf381, 0.001); end
  def test_xi_a_bg381; assert_in_epsilon(7.045019297707708, worksheet.xi_a_bg381, 0.001); end
  def test_xi_a_bh381; assert_in_epsilon(6.952894225977304, worksheet.xi_a_bh381, 0.001); end
  def test_xi_a_bl381; assert_equal("Total", worksheet.xi_a_bl381); end
  def test_xi_a_ac386; assert_in_epsilon(17.66775555414779, worksheet.xi_a_ac386, 0.001); end
  def test_xi_a_bm359; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_a_bm359, 0.001); end
  def test_xi_a_bm379; assert_in_delta(0, (worksheet.xi_a_bm379||0), 0.001); end
  def test_xi_a_bm360; assert_in_delta(-5.684341886080802e-14, worksheet.xi_a_bm360, 0.001); end
  def test_xi_a_bm380; assert_in_delta(2.842170943040401e-14, worksheet.xi_a_bm380, 0.001); end
  def test_xi_a_bm381; assert_in_delta(2.842170943040401e-14, worksheet.xi_a_bm381, 0.001); end
  def test_xi_a_ad386; assert_in_epsilon(18.05761807629653, worksheet.xi_a_ad386, 0.001); end
  def test_xi_a_bn359; assert_in_epsilon(-101.72929124576348, worksheet.xi_a_bn359, 0.001); end
  def test_xi_a_bn379; assert_in_epsilon(2.615286919530547, worksheet.xi_a_bn379, 0.001); end
  def test_xi_a_bn360; assert_in_epsilon(36.59141544184209, worksheet.xi_a_bn360, 0.001); end
  def test_xi_a_bn380; assert_in_delta(0.9174883944189673, worksheet.xi_a_bn380, 0.001); end
  def test_xi_a_bn381; assert_in_epsilon(3.5327753139495144, worksheet.xi_a_bn381, 0.001); end
  def test_xi_a_ae386; assert_in_epsilon(17.647553025111343, worksheet.xi_a_ae386, 0.001); end
  def test_xi_a_bo359; assert_in_epsilon(-104.9025447268155, worksheet.xi_a_bo359, 0.001); end
  def test_xi_a_bo379; assert_in_epsilon(5.4887436567479995, worksheet.xi_a_bo379, 0.001); end
  def test_xi_a_bo360; assert_in_epsilon(33.363024200797895, worksheet.xi_a_bo360, 0.001); end
  def test_xi_a_bo380; assert_in_epsilon(1.9255472764383228, worksheet.xi_a_bo380, 0.001); end
  def test_xi_a_bo381; assert_in_epsilon(7.414290933186322, worksheet.xi_a_bo381, 0.001); end
  def test_xi_a_af386; assert_in_epsilon(18.064015774871187, worksheet.xi_a_af386, 0.001); end
  def test_xi_a_bp359; assert_in_epsilon(-112.8734631678089, worksheet.xi_a_bp359, 0.001); end
  def test_xi_a_bp379; assert_in_epsilon(8.494644647203472, worksheet.xi_a_bp379, 0.001); end
  def test_xi_a_bp360; assert_in_epsilon(31.74425551275654, worksheet.xi_a_bp360, 0.001); end
  def test_xi_a_bp380; assert_in_epsilon(2.980069919028608, worksheet.xi_a_bp380, 0.001); end
  def test_xi_a_bp381; assert_in_epsilon(11.47471456623208, worksheet.xi_a_bp381, 0.001); end
  def test_xi_a_ag386; assert_in_epsilon(24.26773781467336, worksheet.xi_a_ag386, 0.001); end
  def test_xi_a_bq359; assert_in_epsilon(-76.0180923534844, worksheet.xi_a_bq359, 0.001); end
  def test_xi_a_bq379; assert_in_epsilon(5.877113198577774, worksheet.xi_a_bq379, 0.001); end
  def test_xi_a_bq360; assert_in_epsilon(97.79331556197236, worksheet.xi_a_bq360, 0.001); end
  def test_xi_a_bq380; assert_in_epsilon(2.945420149349843, worksheet.xi_a_bq380, 0.001); end
  def test_xi_a_bq381; assert_in_epsilon(8.822533347927617, worksheet.xi_a_bq381, 0.001); end
  def test_xi_a_ah386; assert_in_epsilon(22.95532566623794, worksheet.xi_a_ah386, 0.001); end
  def test_xi_a_br359; assert_in_epsilon(-68.10420936411225, worksheet.xi_a_br359, 0.001); end
  def test_xi_a_br379; assert_in_epsilon(6.810611235005126, worksheet.xi_a_br379, 0.001); end
  def test_xi_a_br360; assert_in_epsilon(91.4488060127126, worksheet.xi_a_br360, 0.001); end
  def test_xi_a_br380; assert_in_epsilon(3.413259347433865, worksheet.xi_a_br380, 0.001); end
  def test_xi_a_br381; assert_in_epsilon(10.223870582438991, worksheet.xi_a_br381, 0.001); end
  def test_xi_a_ai386; assert_in_epsilon(21.756234436404032, worksheet.xi_a_ai386, 0.001); end
  def test_xi_a_bs359; assert_in_epsilon(-60.242344889617584, worksheet.xi_a_bs359, 0.001); end
  def test_xi_a_bs379; assert_in_epsilon(7.532929822121844, worksheet.xi_a_bs379, 0.001); end
  def test_xi_a_bs360; assert_in_epsilon(85.86713394741138, worksheet.xi_a_bs360, 0.001); end
  def test_xi_a_bs380; assert_in_epsilon(3.7752621962574153, worksheet.xi_a_bs380, 0.001); end
  def test_xi_a_bs381; assert_in_epsilon(11.308192018379259, worksheet.xi_a_bs381, 0.001); end
  def test_xi_a_aj386; assert_in_epsilon(20.554767806163184, worksheet.xi_a_aj386, 0.001); end
  def test_xi_a_bt359; assert_in_epsilon(-51.707674231798535, worksheet.xi_a_bt359, 0.001); end
  def test_xi_a_bt379; assert_in_epsilon(8.046076479745693, worksheet.xi_a_bt379, 0.001); end
  def test_xi_a_bt360; assert_in_epsilon(80.65289160225423, worksheet.xi_a_bt360, 0.001); end
  def test_xi_a_bt380; assert_in_epsilon(4.032434800198814, worksheet.xi_a_bt380, 0.001); end
  def test_xi_a_bt381; assert_in_epsilon(12.078511279944507, worksheet.xi_a_bt381, 0.001); end
  def test_xi_a_ak386; assert_in_epsilon(19.305363040024062, worksheet.xi_a_ak386, 0.001); end
  def test_xi_a_bu359; assert_in_epsilon(-42.18062368776532, worksheet.xi_a_bu359, 0.001); end
  def test_xi_a_bu379; assert_in_epsilon(8.35230066614298, worksheet.xi_a_bu379, 0.001); end
  def test_xi_a_bu360; assert_in_epsilon(75.66895607209483, worksheet.xi_a_bu360, 0.001); end
  def test_xi_a_bu380; assert_in_epsilon(4.185904515407174, worksheet.xi_a_bu380, 0.001); end
  def test_xi_a_bu381; assert_in_epsilon(12.538205181550154, worksheet.xi_a_bu381, 0.001); end
  def test_xi_a_bx381; assert_equal("Total", worksheet.xi_a_bx381); end
  def test_xi_a_by381; assert_in_delta(0, (worksheet.xi_a_by381||0), 0.001); end
  def test_xi_a_bz381; assert_in_delta(0, (worksheet.xi_a_bz381||0), 0.001); end
  def test_xi_a_ca381; assert_in_delta(0, (worksheet.xi_a_ca381||0), 0.001); end
  def test_xi_a_cb381; assert_in_delta(0, (worksheet.xi_a_cb381||0), 0.001); end
  def test_xi_a_cc381; assert_in_delta(0, (worksheet.xi_a_cc381||0), 0.001); end
  def test_xi_a_cd381; assert_in_delta(0, (worksheet.xi_a_cd381||0), 0.001); end
  def test_xi_a_ce381; assert_in_delta(0, (worksheet.xi_a_ce381||0), 0.001); end
  def test_xi_a_cf381; assert_in_delta(0, (worksheet.xi_a_cf381||0), 0.001); end
  def test_xi_a_cg381; assert_in_delta(0, (worksheet.xi_a_cg381||0), 0.001); end
  def test_xi_a_o382; assert_equal("TWh", worksheet.xi_a_o382); end
  def test_xi_a_q382; assert_in_epsilon(38.17081383255731, worksheet.xi_a_q382, 0.001); end
  def test_xi_a_r382; assert_in_epsilon(34.54304334061753, worksheet.xi_a_r382, 0.001); end
  def test_xi_a_s382; assert_in_epsilon(34.066402643095586, worksheet.xi_a_s382, 0.001); end
  def test_xi_a_t382; assert_in_epsilon(33.593045348771255, worksheet.xi_a_t382, 0.001); end
  def test_xi_a_u382; assert_in_epsilon(25.766765674012305, worksheet.xi_a_u382, 0.001); end
  def test_xi_a_v382; assert_in_epsilon(25.403643629339882, worksheet.xi_a_v382, 0.001); end
  def test_xi_a_w382; assert_in_epsilon(25.043075784278287, worksheet.xi_a_w382, 0.001); end
  def test_xi_a_x382; assert_in_epsilon(24.68506213882751, worksheet.xi_a_x382, 0.001); end
  def test_xi_a_y382; assert_in_epsilon(24.329602692987564, worksheet.xi_a_y382, 0.001); end
  def test_xi_a_aa382; assert_equal("V.04", worksheet.xi_a_aa382); end
  def test_xi_a_ab382; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab382); end
  def test_xi_a_bk382; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bk382); end
  def test_xi_a_bl382; assert_equal("Oxygen Steel", worksheet.xi_a_bl382); end
  def test_xi_a_bx382; assert_equal("Oxygen Steel", worksheet.xi_a_bx382); end
  def test_xi_a_by382; assert_in_delta(-4.192202140984591e-13, worksheet.xi_a_by382, 0.001); end
  def test_xi_a_bz382; assert_in_epsilon(178.66809214901787, worksheet.xi_a_bz382, 0.001); end
  def test_xi_a_ca382; assert_in_epsilon(183.23215315347403, worksheet.xi_a_ca382, 0.001); end
  def test_xi_a_cb382; assert_in_epsilon(192.5725368029339, worksheet.xi_a_cb382, 0.001); end
  def test_xi_a_cc382; assert_in_epsilon(685.4420643915702, worksheet.xi_a_cc382, 0.001); end
  def test_xi_a_cd382; assert_in_epsilon(671.4087323100662, worksheet.xi_a_cd382, 0.001); end
  def test_xi_a_ce382; assert_in_epsilon(657.4584531905468, worksheet.xi_a_ce382, 0.001); end
  def test_xi_a_cf382; assert_in_epsilon(642.8664023348135, worksheet.xi_a_cf382, 0.001); end
  def test_xi_a_aa383; assert_equal("v.06", worksheet.xi_a_aa383); end
  def test_xi_a_ab383; assert_equal("Blast furnace gas", worksheet.xi_a_ab383); end
  def test_xi_a_ac383; assert_in_delta(-0.11326460696060943, worksheet.xi_a_ac383, 0.001); end
  def test_xi_a_ad383; assert_in_delta(-0.11326460696060946, worksheet.xi_a_ad383, 0.001); end
  def test_xi_a_ae383; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ae383, 0.001); end
  def test_xi_a_af383; assert_in_delta(-0.11326460696060943, worksheet.xi_a_af383, 0.001); end
  def test_xi_a_ag383; assert_in_delta(0, (worksheet.xi_a_ag383||0), 0.001); end
  def test_xi_a_ah383; assert_in_delta(0, (worksheet.xi_a_ah383||0), 0.001); end
  def test_xi_a_ai383; assert_in_delta(0, (worksheet.xi_a_ai383||0), 0.001); end
  def test_xi_a_aj383; assert_in_delta(0, (worksheet.xi_a_aj383||0), 0.001); end
  def test_xi_a_ak383; assert_in_delta(0, (worksheet.xi_a_ak383||0), 0.001); end
  def test_xi_a_am383; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am383); end
  def test_xi_a_bl383; assert_equal("Electric Steel", worksheet.xi_a_bl383); end
  def test_xi_a_bx383; assert_equal("Electric Steel", worksheet.xi_a_bx383); end
  def test_xi_a_by383; assert_in_delta(5.684341886080802e-14, worksheet.xi_a_by383, 0.001); end
  def test_xi_a_bz383; assert_in_epsilon(-70.47388333423275, worksheet.xi_a_bz383, 0.001); end
  def test_xi_a_ca383; assert_in_epsilon(-66.95530001241805, worksheet.xi_a_ca383, 0.001); end
  def test_xi_a_cb383; assert_in_epsilon(-65.0507923190144, worksheet.xi_a_cb383, 0.001); end
  def test_xi_a_cc383; assert_in_epsilon(-130.8185664382762, worksheet.xi_a_cc383, 0.001); end
  def test_xi_a_cd383; assert_in_epsilon(-124.19722403447065, worksheet.xi_a_cd383, 0.001); end
  def test_xi_a_ce383; assert_in_epsilon(-118.34317219003188, worksheet.xi_a_ce383, 0.001); end
  def test_xi_a_cf383; assert_in_epsilon(-112.8610031411454, worksheet.xi_a_cf383, 0.001); end
  def test_xi_a_aa384; assert_equal("V.07", worksheet.xi_a_aa384); end
  def test_xi_a_ab384; assert_equal("Heat transport", worksheet.xi_a_ab384); end
  def test_xi_a_ac384; assert_in_delta(-0.054587625239247047, worksheet.xi_a_ac384, 0.001); end
  def test_xi_a_ad384; assert_in_delta(-0.05458762523924706, worksheet.xi_a_ad384, 0.001); end
  def test_xi_a_ae384; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae384, 0.001); end
  def test_xi_a_af384; assert_in_delta(-0.05458762523924704, worksheet.xi_a_af384, 0.001); end
  def test_xi_a_ag384; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ag384, 0.001); end
  def test_xi_a_ah384; assert_in_delta(-0.07237360762106047, worksheet.xi_a_ah384, 0.001); end
  def test_xi_a_ai384; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ai384, 0.001); end
  def test_xi_a_aj384; assert_in_delta(-0.07237360762106046, worksheet.xi_a_aj384, 0.001); end
  def test_xi_a_ak384; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ak384, 0.001); end
  def test_xi_a_am384; assert_equal("Industry", worksheet.xi_a_am384); end
  def test_xi_a_an384; assert_equal("Description", worksheet.xi_a_an384); end
  def test_xi_a_ao384; assert_in_epsilon(2010, worksheet.xi_a_ao384, 0.001); end
  def test_xi_a_ap384; assert_in_epsilon(2015, worksheet.xi_a_ap384, 0.001); end
  def test_xi_a_aq384; assert_in_epsilon(2020, worksheet.xi_a_aq384, 0.001); end
  def test_xi_a_ar384; assert_in_epsilon(2025, worksheet.xi_a_ar384, 0.001); end
  def test_xi_a_as384; assert_in_epsilon(2030, worksheet.xi_a_as384, 0.001); end
  def test_xi_a_at384; assert_in_epsilon(2035, worksheet.xi_a_at384, 0.001); end
  def test_xi_a_au384; assert_in_epsilon(2040, worksheet.xi_a_au384, 0.001); end
  def test_xi_a_av384; assert_in_epsilon(2045, worksheet.xi_a_av384, 0.001); end
  def test_xi_a_aw384; assert_in_epsilon(2050, worksheet.xi_a_aw384, 0.001); end
  def test_xi_a_bl384; assert_equal("Total", worksheet.xi_a_bl384); end
  def test_xi_a_bm384; assert_in_delta(-1.4210854715202004e-13, worksheet.xi_a_bm384, 0.001); end
  def test_xi_a_bn384; assert_in_epsilon(-61.605100489971875, worksheet.xi_a_bn384, 0.001); end
  def test_xi_a_bo384; assert_in_epsilon(-64.12522959283129, worksheet.xi_a_bo384, 0.001); end
  def test_xi_a_bp384; assert_in_epsilon(-69.65449308882027, worksheet.xi_a_bp384, 0.001); end
  def test_xi_a_bq384; assert_in_epsilon(30.597756556415575, worksheet.xi_a_bq384, 0.001); end
  def test_xi_a_br384; assert_in_epsilon(33.568467231039335, worksheet.xi_a_br384, 0.001); end
  def test_xi_a_bs384; assert_in_epsilon(36.93298107617305, worksheet.xi_a_bs384, 0.001); end
  def test_xi_a_bt384; assert_in_epsilon(41.0237286504002, worksheet.xi_a_bt384, 0.001); end
  def test_xi_a_bx384; assert_equal("Total", worksheet.xi_a_bx384); end
  def test_xi_a_by384; assert_in_delta(-3.623767952376511e-13, worksheet.xi_a_by384, 0.001); end
  def test_xi_a_bz384; assert_in_epsilon(108.19420881478511, worksheet.xi_a_bz384, 0.001); end
  def test_xi_a_ca384; assert_in_epsilon(116.27685314105598, worksheet.xi_a_ca384, 0.001); end
  def test_xi_a_cb384; assert_in_epsilon(127.5217444839195, worksheet.xi_a_cb384, 0.001); end
  def test_xi_a_cc384; assert_in_epsilon(554.623497953294, worksheet.xi_a_cc384, 0.001); end
  def test_xi_a_cd384; assert_in_epsilon(547.2115082755955, worksheet.xi_a_cd384, 0.001); end
  def test_xi_a_ce384; assert_in_epsilon(539.115281000515, worksheet.xi_a_ce384, 0.001); end
  def test_xi_a_cf384; assert_in_epsilon(530.0053991936682, worksheet.xi_a_cf384, 0.001); end
  def test_xi_a_aa385; assert_equal("Intensity", worksheet.xi_a_aa385); end
  def test_xi_a_ab385; assert_equal("Intensity", worksheet.xi_a_ab385); end
  def test_xi_a_ac385; assert_in_delta(0.21950983912607064, worksheet.xi_a_ac385, 0.001); end
  def test_xi_a_ad385; assert_in_delta(0.2193729914545529, worksheet.xi_a_ad385, 0.001); end
  def test_xi_a_ae385; assert_in_delta(0.21923614378303521, worksheet.xi_a_ae385, 0.001); end
  def test_xi_a_af385; assert_in_delta(0.21909929611151752, worksheet.xi_a_af385, 0.001); end
  def test_xi_a_ag385; assert_in_delta(0.26188107451525344, worksheet.xi_a_ag385, 0.001); end
  def test_xi_a_ah385; assert_in_delta(0.26178128472221196, worksheet.xi_a_ah385, 0.001); end
  def test_xi_a_ai385; assert_in_delta(0.26168149492917037, worksheet.xi_a_ai385, 0.001); end
  def test_xi_a_aj385; assert_in_delta(0.2615817051361289, worksheet.xi_a_aj385, 0.001); end
  def test_xi_a_ak385; assert_in_delta(0.2614819153430874, worksheet.xi_a_ak385, 0.001); end
  def test_xi_a_am385; assert_equal("(ii)", worksheet.xi_a_am385); end
  def test_xi_a_an385; assert_equal("Oxygen Steel", worksheet.xi_a_an385); end
  def test_xi_a_ao385; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao385, 0.001); end
  def test_xi_a_ap385; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap385, 0.001); end
  def test_xi_a_aq385; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq385, 0.001); end
  def test_xi_a_ar385; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar385, 0.001); end
  def test_xi_a_as385; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as385, 0.001); end
  def test_xi_a_at385; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at385, 0.001); end
  def test_xi_a_au385; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au385, 0.001); end
  def test_xi_a_av385; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av385, 0.001); end
  def test_xi_a_aw385; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw385, 0.001); end
  def test_xi_a_aa386; assert_equal("Cost", worksheet.xi_a_aa386); end
  def test_xi_a_ab386; assert_equal("Cost", worksheet.xi_a_ab386); end
  def test_xi_a_am386; assert_equal("(iii)", worksheet.xi_a_am386); end
  def test_xi_a_an386; assert_equal("Electric Steel", worksheet.xi_a_an386); end
  def test_xi_a_ao386; assert_in_delta(0, (worksheet.xi_a_ao386||0), 0.001); end
  def test_xi_a_ap386; assert_in_delta(0, (worksheet.xi_a_ap386||0), 0.001); end
  def test_xi_a_aq386; assert_in_delta(0, (worksheet.xi_a_aq386||0), 0.001); end
  def test_xi_a_ar386; assert_in_delta(0, (worksheet.xi_a_ar386||0), 0.001); end
  def test_xi_a_as386; assert_in_delta(0, (worksheet.xi_a_as386||0), 0.001); end
  def test_xi_a_at386; assert_in_delta(0, (worksheet.xi_a_at386||0), 0.001); end
  def test_xi_a_au386; assert_in_delta(0, (worksheet.xi_a_au386||0), 0.001); end
  def test_xi_a_av386; assert_in_delta(0, (worksheet.xi_a_av386||0), 0.001); end
  def test_xi_a_aw386; assert_in_delta(0, (worksheet.xi_a_aw386||0), 0.001); end
  def test_xi_a_am387; assert_equal("Total", worksheet.xi_a_am387); end
  def test_xi_a_z388; assert_equal("Electrosteel", worksheet.xi_a_z388); end
  def test_xi_a_aa388; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa388); end
  def test_xi_a_aa389; assert_equal("Vector", worksheet.xi_a_aa389); end
  def test_xi_a_ab389; assert_equal("Description", worksheet.xi_a_ab389); end
  def test_xi_a_ac389; assert_in_epsilon(2010, worksheet.xi_a_ac389, 0.001); end
  def test_xi_a_ad389; assert_in_epsilon(2015, worksheet.xi_a_ad389, 0.001); end
  def test_xi_a_ae389; assert_in_epsilon(2020, worksheet.xi_a_ae389, 0.001); end
  def test_xi_a_af389; assert_in_epsilon(2025, worksheet.xi_a_af389, 0.001); end
  def test_xi_a_ag389; assert_in_epsilon(2030, worksheet.xi_a_ag389, 0.001); end
  def test_xi_a_ah389; assert_in_epsilon(2035, worksheet.xi_a_ah389, 0.001); end
  def test_xi_a_ai389; assert_in_epsilon(2040, worksheet.xi_a_ai389, 0.001); end
  def test_xi_a_aj389; assert_in_epsilon(2045, worksheet.xi_a_aj389, 0.001); end
  def test_xi_a_ak389; assert_in_epsilon(2050, worksheet.xi_a_ak389, 0.001); end
  def test_xi_a_aa390; assert_equal("V.01", worksheet.xi_a_aa390); end
  def test_xi_a_ab390; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab390); end
  def test_xi_a_ac390; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac390, 0.001); end
  def test_xi_a_ad390; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad390, 0.001); end
  def test_xi_a_ae390; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae390, 0.001); end
  def test_xi_a_af390; assert_in_delta(0.37661125507716986, worksheet.xi_a_af390, 0.001); end
  def test_xi_a_ag390; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag390, 0.001); end
  def test_xi_a_ah390; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah390, 0.001); end
  def test_xi_a_ai390; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai390, 0.001); end
  def test_xi_a_aj390; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj390, 0.001); end
  def test_xi_a_ak390; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak390, 0.001); end
  def test_xi_a_aa391; assert_equal("V.03", worksheet.xi_a_aa391); end
  def test_xi_a_ab391; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab391); end
  def test_xi_a_ac391; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac391, 0.001); end
  def test_xi_a_ad391; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad391, 0.001); end
  def test_xi_a_ae391; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae391, 0.001); end
  def test_xi_a_af391; assert_in_delta(0.04200640884510868, worksheet.xi_a_af391, 0.001); end
  def test_xi_a_ag391; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag391, 0.001); end
  def test_xi_a_ah391; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah391, 0.001); end
  def test_xi_a_ai391; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai391, 0.001); end
  def test_xi_a_aj391; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj391, 0.001); end
  def test_xi_a_ak391; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak391, 0.001); end
  def test_xi_a_aa392; assert_equal("V.05", worksheet.xi_a_aa392); end
  def test_xi_a_ab392; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab392); end
  def test_xi_a_ac392; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac392, 0.001); end
  def test_xi_a_ad392; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad392, 0.001); end
  def test_xi_a_ae392; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae392, 0.001); end
  def test_xi_a_af392; assert_in_delta(0.5722074496017227, worksheet.xi_a_af392, 0.001); end
  def test_xi_a_ag392; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag392, 0.001); end
  def test_xi_a_ah392; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah392, 0.001); end
  def test_xi_a_ai392; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai392, 0.001); end
  def test_xi_a_aj392; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj392, 0.001); end
  def test_xi_a_ak392; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak392, 0.001); end
  def test_xi_a_aa393; assert_equal("V.04", worksheet.xi_a_aa393); end
  def test_xi_a_ab393; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab393); end
  def test_xi_a_ac393; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac393, 0.001); end
  def test_xi_a_ad393; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad393, 0.001); end
  def test_xi_a_ae393; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae393, 0.001); end
  def test_xi_a_af393; assert_in_delta(0.009174886475998728, worksheet.xi_a_af393, 0.001); end
  def test_xi_a_ag393; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag393, 0.001); end
  def test_xi_a_ah393; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah393, 0.001); end
  def test_xi_a_ai393; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai393, 0.001); end
  def test_xi_a_aj393; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj393, 0.001); end
  def test_xi_a_ak393; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak393, 0.001); end
  def test_xi_a_aa394; assert_equal("V.06", worksheet.xi_a_aa394); end
  def test_xi_a_ab394; assert_equal("Blast furnace gas", worksheet.xi_a_ab394); end
  def test_xi_a_ac394; assert_in_delta(0, (worksheet.xi_a_ac394||0), 0.001); end
  def test_xi_a_ad394; assert_in_delta(0, (worksheet.xi_a_ad394||0), 0.001); end
  def test_xi_a_ae394; assert_in_delta(0, (worksheet.xi_a_ae394||0), 0.001); end
  def test_xi_a_af394; assert_in_delta(0, (worksheet.xi_a_af394||0), 0.001); end
  def test_xi_a_ag394; assert_in_delta(0, (worksheet.xi_a_ag394||0), 0.001); end
  def test_xi_a_ah394; assert_in_delta(0, (worksheet.xi_a_ah394||0), 0.001); end
  def test_xi_a_ai394; assert_in_delta(0, (worksheet.xi_a_ai394||0), 0.001); end
  def test_xi_a_aj394; assert_in_delta(0, (worksheet.xi_a_aj394||0), 0.001); end
  def test_xi_a_ak394; assert_in_delta(0, (worksheet.xi_a_ak394||0), 0.001); end
  def test_xi_a_aa395; assert_equal("V.07", worksheet.xi_a_aa395); end
  def test_xi_a_ab395; assert_equal("Heat transport", worksheet.xi_a_ab395); end
  def test_xi_a_ac395; assert_in_delta(0, (worksheet.xi_a_ac395||0), 0.001); end
  def test_xi_a_ad395; assert_in_delta(0, (worksheet.xi_a_ad395||0), 0.001); end
  def test_xi_a_ae395; assert_in_delta(0, (worksheet.xi_a_ae395||0), 0.001); end
  def test_xi_a_af395; assert_in_delta(0, (worksheet.xi_a_af395||0), 0.001); end
  def test_xi_a_ag395; assert_in_delta(0, (worksheet.xi_a_ag395||0), 0.001); end
  def test_xi_a_ah395; assert_in_delta(0, (worksheet.xi_a_ah395||0), 0.001); end
  def test_xi_a_ai395; assert_in_delta(0, (worksheet.xi_a_ai395||0), 0.001); end
  def test_xi_a_aj395; assert_in_delta(0, (worksheet.xi_a_aj395||0), 0.001); end
  def test_xi_a_ak395; assert_in_delta(0, (worksheet.xi_a_ak395||0), 0.001); end
  def test_xi_a_aa396; assert_equal("Intensity", worksheet.xi_a_aa396); end
  def test_xi_a_ab396; assert_equal("Intensity", worksheet.xi_a_ab396); end
  def test_xi_a_ac396; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac396, 0.001); end
  def test_xi_a_ad396; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad396, 0.001); end
  def test_xi_a_ae396; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae396, 0.001); end
  def test_xi_a_af396; assert_in_delta(0.1305543295866784, worksheet.xi_a_af396, 0.001); end
  def test_xi_a_ag396; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag396, 0.001); end
  def test_xi_a_ah396; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah396, 0.001); end
  def test_xi_a_ai396; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai396, 0.001); end
  def test_xi_a_aj396; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj396, 0.001); end
  def test_xi_a_ak396; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak396, 0.001); end
  def test_xi_a_aa397; assert_equal("Cost", worksheet.xi_a_aa397); end
  def test_xi_a_ab397; assert_equal("Cost", worksheet.xi_a_ab397); end
  def test_xi_a_ac397; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac397, 0.001); end
  def test_xi_a_ad397; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad397, 0.001); end
  def test_xi_a_ae397; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae397, 0.001); end
  def test_xi_a_af397; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af397, 0.001); end
  def test_xi_a_ag397; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag397, 0.001); end
  def test_xi_a_ah397; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah397, 0.001); end
  def test_xi_a_ai397; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai397, 0.001); end
  def test_xi_a_aj397; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj397, 0.001); end
  def test_xi_a_ak397; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak397, 0.001); end
  def test_xi_a_b402; assert_in_epsilon(4, worksheet.xi_a_b402, 0.001); end
  def test_xi_a_c402; assert_equal("Alternative fuels: Coal PCI substitution by biomass", worksheet.xi_a_c402); end
  def test_xi_a_b403; assert_in_delta(1, worksheet.xi_a_b403, 0.001); end
  def test_xi_a_c403; assert_equal("Output Growth (kt)", worksheet.xi_a_c403); end
  def test_xi_a_n403; assert_in_epsilon(2, worksheet.xi_a_n403, 0.001); end
  def test_xi_a_o403; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_a_o403); end
  def test_xi_a_z403; assert_in_epsilon(3, worksheet.xi_a_z403, 0.001); end
  def test_xi_a_aa403; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa403); end
  def test_xi_a_al403; assert_in_epsilon(4, worksheet.xi_a_al403, 0.001); end
  def test_xi_a_am403; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am403); end
  def test_xi_a_ay403; assert_in_epsilon(5, worksheet.xi_a_ay403, 0.001); end
  def test_xi_a_az403; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az403); end
  def test_xi_a_bk403; assert_in_epsilon(6, worksheet.xi_a_bk403, 0.001); end
  def test_xi_a_bl403; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl403); end
  def test_xi_a_bw403; assert_in_epsilon(7, worksheet.xi_a_bw403, 0.001); end
  def test_xi_a_bx403; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx403); end
  def test_xi_a_ci403; assert_equal("Capacity", worksheet.xi_a_ci403); end
  def test_xi_a_c404; assert_equal("Product type", worksheet.xi_a_c404); end
  def test_xi_a_d404; assert_equal("Description", worksheet.xi_a_d404); end
  def test_xi_a_e404; assert_in_epsilon(2010, worksheet.xi_a_e404, 0.001); end
  def test_xi_a_f404; assert_in_epsilon(2015, worksheet.xi_a_f404, 0.001); end
  def test_xi_a_g404; assert_in_epsilon(2020, worksheet.xi_a_g404, 0.001); end
  def test_xi_a_h404; assert_in_epsilon(2025, worksheet.xi_a_h404, 0.001); end
  def test_xi_a_i404; assert_in_epsilon(2030, worksheet.xi_a_i404, 0.001); end
  def test_xi_a_j404; assert_in_epsilon(2035, worksheet.xi_a_j404, 0.001); end
  def test_xi_a_k404; assert_in_epsilon(2040, worksheet.xi_a_k404, 0.001); end
  def test_xi_a_l404; assert_in_epsilon(2045, worksheet.xi_a_l404, 0.001); end
  def test_xi_a_m404; assert_in_epsilon(2050, worksheet.xi_a_m404, 0.001); end
  def test_xi_a_o404; assert_equal("Industry", worksheet.xi_a_o404); end
  def test_xi_a_p404; assert_equal("Description", worksheet.xi_a_p404); end
  def test_xi_a_q404; assert_in_epsilon(2010, worksheet.xi_a_q404, 0.001); end
  def test_xi_a_r404; assert_in_epsilon(2015, worksheet.xi_a_r404, 0.001); end
  def test_xi_a_s404; assert_in_epsilon(2020, worksheet.xi_a_s404, 0.001); end
  def test_xi_a_t404; assert_in_epsilon(2025, worksheet.xi_a_t404, 0.001); end
  def test_xi_a_u404; assert_in_epsilon(2030, worksheet.xi_a_u404, 0.001); end
  def test_xi_a_v404; assert_in_epsilon(2035, worksheet.xi_a_v404, 0.001); end
  def test_xi_a_w404; assert_in_epsilon(2040, worksheet.xi_a_w404, 0.001); end
  def test_xi_a_x404; assert_in_epsilon(2045, worksheet.xi_a_x404, 0.001); end
  def test_xi_a_y404; assert_in_epsilon(2050, worksheet.xi_a_y404, 0.001); end
  def test_xi_a_z404; assert_equal("Oxygensteel", worksheet.xi_a_z404); end
  def test_xi_a_aa404; assert_equal("Vector", worksheet.xi_a_aa404); end
  def test_xi_a_ab404; assert_equal("Description", worksheet.xi_a_ab404); end
  def test_xi_a_ac404; assert_in_epsilon(2010, worksheet.xi_a_ac404, 0.001); end
  def test_xi_a_ad404; assert_in_epsilon(2015, worksheet.xi_a_ad404, 0.001); end
  def test_xi_a_ae404; assert_in_epsilon(2020, worksheet.xi_a_ae404, 0.001); end
  def test_xi_a_af404; assert_in_epsilon(2025, worksheet.xi_a_af404, 0.001); end
  def test_xi_a_ag404; assert_in_epsilon(2030, worksheet.xi_a_ag404, 0.001); end
  def test_xi_a_ah404; assert_in_epsilon(2035, worksheet.xi_a_ah404, 0.001); end
  def test_xi_a_ai404; assert_in_epsilon(2040, worksheet.xi_a_ai404, 0.001); end
  def test_xi_a_aj404; assert_in_epsilon(2045, worksheet.xi_a_aj404, 0.001); end
  def test_xi_a_ak404; assert_in_epsilon(2050, worksheet.xi_a_ak404, 0.001); end
  def test_xi_a_am404; assert_equal("Industry", worksheet.xi_a_am404); end
  def test_xi_a_an404; assert_equal("Description", worksheet.xi_a_an404); end
  def test_xi_a_ao404; assert_in_epsilon(2010, worksheet.xi_a_ao404, 0.001); end
  def test_xi_a_ap404; assert_in_epsilon(2015, worksheet.xi_a_ap404, 0.001); end
  def test_xi_a_aq404; assert_in_epsilon(2020, worksheet.xi_a_aq404, 0.001); end
  def test_xi_a_ar404; assert_in_epsilon(2025, worksheet.xi_a_ar404, 0.001); end
  def test_xi_a_as404; assert_in_epsilon(2030, worksheet.xi_a_as404, 0.001); end
  def test_xi_a_at404; assert_in_epsilon(2035, worksheet.xi_a_at404, 0.001); end
  def test_xi_a_au404; assert_in_epsilon(2040, worksheet.xi_a_au404, 0.001); end
  def test_xi_a_av404; assert_in_epsilon(2045, worksheet.xi_a_av404, 0.001); end
  def test_xi_a_aw404; assert_in_epsilon(2050, worksheet.xi_a_aw404, 0.001); end
  def test_xi_a_ay404; assert_equal("Industry", worksheet.xi_a_ay404); end
  def test_xi_a_az404; assert_equal("Description", worksheet.xi_a_az404); end
  def test_xi_a_ba404; assert_in_epsilon(2010, worksheet.xi_a_ba404, 0.001); end
  def test_xi_a_bb404; assert_in_epsilon(2015, worksheet.xi_a_bb404, 0.001); end
  def test_xi_a_bc404; assert_in_epsilon(2020, worksheet.xi_a_bc404, 0.001); end
  def test_xi_a_bd404; assert_in_epsilon(2025, worksheet.xi_a_bd404, 0.001); end
  def test_xi_a_be404; assert_in_epsilon(2030, worksheet.xi_a_be404, 0.001); end
  def test_xi_a_bf404; assert_in_epsilon(2035, worksheet.xi_a_bf404, 0.001); end
  def test_xi_a_bg404; assert_in_epsilon(2040, worksheet.xi_a_bg404, 0.001); end
  def test_xi_a_bh404; assert_in_epsilon(2045, worksheet.xi_a_bh404, 0.001); end
  def test_xi_a_bi404; assert_in_epsilon(2050, worksheet.xi_a_bi404, 0.001); end
  def test_xi_a_bk404; assert_equal("Industry", worksheet.xi_a_bk404); end
  def test_xi_a_bl404; assert_equal("Description", worksheet.xi_a_bl404); end
  def test_xi_a_bm404; assert_in_epsilon(2010, worksheet.xi_a_bm404, 0.001); end
  def test_xi_a_bn404; assert_in_epsilon(2015, worksheet.xi_a_bn404, 0.001); end
  def test_xi_a_bo404; assert_in_epsilon(2020, worksheet.xi_a_bo404, 0.001); end
  def test_xi_a_bp404; assert_in_epsilon(2025, worksheet.xi_a_bp404, 0.001); end
  def test_xi_a_bq404; assert_in_epsilon(2030, worksheet.xi_a_bq404, 0.001); end
  def test_xi_a_br404; assert_in_epsilon(2035, worksheet.xi_a_br404, 0.001); end
  def test_xi_a_bs404; assert_in_epsilon(2040, worksheet.xi_a_bs404, 0.001); end
  def test_xi_a_bt404; assert_in_epsilon(2045, worksheet.xi_a_bt404, 0.001); end
  def test_xi_a_bu404; assert_in_epsilon(2050, worksheet.xi_a_bu404, 0.001); end
  def test_xi_a_bw404; assert_equal("Industry", worksheet.xi_a_bw404); end
  def test_xi_a_bx404; assert_equal("Description", worksheet.xi_a_bx404); end
  def test_xi_a_by404; assert_in_epsilon(2010, worksheet.xi_a_by404, 0.001); end
  def test_xi_a_bz404; assert_in_epsilon(2015, worksheet.xi_a_bz404, 0.001); end
  def test_xi_a_ca404; assert_in_epsilon(2020, worksheet.xi_a_ca404, 0.001); end
  def test_xi_a_cb404; assert_in_epsilon(2025, worksheet.xi_a_cb404, 0.001); end
  def test_xi_a_cc404; assert_in_epsilon(2030, worksheet.xi_a_cc404, 0.001); end
  def test_xi_a_cd404; assert_in_epsilon(2035, worksheet.xi_a_cd404, 0.001); end
  def test_xi_a_ce404; assert_in_epsilon(2040, worksheet.xi_a_ce404, 0.001); end
  def test_xi_a_cf404; assert_in_epsilon(2045, worksheet.xi_a_cf404, 0.001); end
  def test_xi_a_cg404; assert_in_epsilon(2050, worksheet.xi_a_cg404, 0.001); end
  def test_xi_a_ci404; assert_equal("Description", worksheet.xi_a_ci404); end
  def test_xi_a_cj404; assert_in_epsilon(2010, worksheet.xi_a_cj404, 0.001); end
  def test_xi_a_ck404; assert_in_epsilon(2015, worksheet.xi_a_ck404, 0.001); end
  def test_xi_a_cl404; assert_in_epsilon(2020, worksheet.xi_a_cl404, 0.001); end
  def test_xi_a_cm404; assert_in_epsilon(2025, worksheet.xi_a_cm404, 0.001); end
  def test_xi_a_cn404; assert_in_epsilon(2030, worksheet.xi_a_cn404, 0.001); end
  def test_xi_a_co404; assert_in_epsilon(2035, worksheet.xi_a_co404, 0.001); end
  def test_xi_a_cp404; assert_in_epsilon(2040, worksheet.xi_a_cp404, 0.001); end
  def test_xi_a_cq404; assert_in_epsilon(2045, worksheet.xi_a_cq404, 0.001); end
  def test_xi_a_cr404; assert_in_epsilon(2050, worksheet.xi_a_cr404, 0.001); end
  def test_xi_a_c405; assert_equal("(ii)", worksheet.xi_a_c405); end
  def test_xi_a_d405; assert_equal("Oxygen Steel", worksheet.xi_a_d405); end
  def test_xi_a_e405; assert_in_epsilon(5264, worksheet.xi_a_e405, 0.001); end
  def test_xi_a_f405; assert_in_epsilon(4336.3516, worksheet.xi_a_f405, 0.001); end
  def test_xi_a_g405; assert_in_epsilon(4303.5832, worksheet.xi_a_g405, 0.001); end
  def test_xi_a_h405; assert_in_epsilon(4270.8148, worksheet.xi_a_h405, 0.001); end
  def test_xi_a_i405; assert_in_epsilon(4238.0464, worksheet.xi_a_i405, 0.001); end
  def test_xi_a_j405; assert_in_epsilon(4205.278, worksheet.xi_a_j405, 0.001); end
  def test_xi_a_k405; assert_in_epsilon(4172.509599999999, worksheet.xi_a_k405, 0.001); end
  def test_xi_a_l405; assert_in_epsilon(4139.7412, worksheet.xi_a_l405, 0.001); end
  def test_xi_a_m405; assert_in_epsilon(4106.9728, worksheet.xi_a_m405, 0.001); end
  def test_xi_a_o405; assert_equal("(ii)", worksheet.xi_a_o405); end
  def test_xi_a_p405; assert_equal("Oxygen Steel", worksheet.xi_a_p405); end
  def test_xi_a_q405; assert_in_delta(0.005934201542131165, worksheet.xi_a_q405, 0.001); end
  def test_xi_a_r405; assert_in_delta(0.005897112782492845, worksheet.xi_a_r405, 0.001); end
  def test_xi_a_s405; assert_in_delta(0.005860024022854526, worksheet.xi_a_s405, 0.001); end
  def test_xi_a_t405; assert_in_delta(0.005822935263216205, worksheet.xi_a_t405, 0.001); end
  def test_xi_a_u405; assert_in_delta(0.0040500925525045195, worksheet.xi_a_u405, 0.001); end
  def test_xi_a_v405; assert_in_delta(0.004024130420757696, worksheet.xi_a_v405, 0.001); end
  def test_xi_a_w405; assert_in_delta(0.003998168289010872, worksheet.xi_a_w405, 0.001); end
  def test_xi_a_x405; assert_in_delta(0.003972206157264048, worksheet.xi_a_x405, 0.001); end
  def test_xi_a_y405; assert_in_delta(0.003946244025517224, worksheet.xi_a_y405, 0.001); end
  def test_xi_a_aa405; assert_equal("V.01", worksheet.xi_a_aa405); end
  def test_xi_a_ab405; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab405); end
  def test_xi_a_ac405; assert_in_delta(0.0820478272887989, worksheet.xi_a_ac405, 0.001); end
  def test_xi_a_ad405; assert_in_delta(0.08204782728879893, worksheet.xi_a_ad405, 0.001); end
  def test_xi_a_ae405; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae405, 0.001); end
  def test_xi_a_af405; assert_in_delta(0.0820478272887989, worksheet.xi_a_af405, 0.001); end
  def test_xi_a_ag405; assert_in_delta(0.10878101460421724, worksheet.xi_a_ag405, 0.001); end
  def test_xi_a_ah405; assert_in_delta(0.10878101460421724, worksheet.xi_a_ah405, 0.001); end
  def test_xi_a_ai405; assert_in_delta(0.10878101460421725, worksheet.xi_a_ai405, 0.001); end
  def test_xi_a_aj405; assert_in_delta(0.10878101460421723, worksheet.xi_a_aj405, 0.001); end
  def test_xi_a_ak405; assert_in_delta(0.10878101460421724, worksheet.xi_a_ak405, 0.001); end
  def test_xi_a_am405; assert_equal("(ii)", worksheet.xi_a_am405); end
  def test_xi_a_an405; assert_equal("Oxygen Steel", worksheet.xi_a_an405); end
  def test_xi_a_ao405; assert_in_delta(0, (worksheet.xi_a_ao405||0), 0.001); end
  def test_xi_a_ap405; assert_in_delta(0, (worksheet.xi_a_ap405||0), 0.001); end
  def test_xi_a_aq405; assert_in_delta(0, (worksheet.xi_a_aq405||0), 0.001); end
  def test_xi_a_ar405; assert_in_delta(0, (worksheet.xi_a_ar405||0), 0.001); end
  def test_xi_a_as405; assert_in_delta(0, (worksheet.xi_a_as405||0), 0.001); end
  def test_xi_a_at405; assert_in_delta(0, (worksheet.xi_a_at405||0), 0.001); end
  def test_xi_a_au405; assert_in_delta(0, (worksheet.xi_a_au405||0), 0.001); end
  def test_xi_a_av405; assert_in_delta(0, (worksheet.xi_a_av405||0), 0.001); end
  def test_xi_a_aw405; assert_in_delta(0, (worksheet.xi_a_aw405||0), 0.001); end
  def test_xi_a_az405; assert_equal("Oxygen Steel", worksheet.xi_a_az405); end
  def test_xi_a_bl405; assert_equal("Oxygen Steel", worksheet.xi_a_bl405); end
  def test_xi_a_bx405; assert_equal("Oxygen Steel", worksheet.xi_a_bx405); end
  def test_xi_a_by405; assert_in_delta(0, (worksheet.xi_a_by405||0), 0.001); end
  def test_xi_a_bz405; assert_in_delta(0, (worksheet.xi_a_bz405||0), 0.001); end
  def test_xi_a_ca405; assert_in_delta(0, (worksheet.xi_a_ca405||0), 0.001); end
  def test_xi_a_cb405; assert_in_delta(0, (worksheet.xi_a_cb405||0), 0.001); end
  def test_xi_a_cc405; assert_in_delta(0, (worksheet.xi_a_cc405||0), 0.001); end
  def test_xi_a_cd405; assert_in_delta(0, (worksheet.xi_a_cd405||0), 0.001); end
  def test_xi_a_ce405; assert_in_delta(0, (worksheet.xi_a_ce405||0), 0.001); end
  def test_xi_a_cf405; assert_in_delta(0, (worksheet.xi_a_cf405||0), 0.001); end
  def test_xi_a_cg405; assert_in_delta(0, (worksheet.xi_a_cg405||0), 0.001); end
  def test_xi_a_ci405; assert_equal("Oxygen Steel", worksheet.xi_a_ci405); end
  def test_xi_a_cj405; assert_in_epsilon(6000, worksheet.xi_a_cj405, 0.001); end
  def test_xi_a_ck405; assert_in_epsilon(5000, worksheet.xi_a_ck405, 0.001); end
  def test_xi_a_cl405; assert_in_epsilon(5000, worksheet.xi_a_cl405, 0.001); end
  def test_xi_a_cm405; assert_in_epsilon(5000, worksheet.xi_a_cm405, 0.001); end
  def test_xi_a_cn405; assert_in_epsilon(5000, worksheet.xi_a_cn405, 0.001); end
  def test_xi_a_co405; assert_in_epsilon(5000, worksheet.xi_a_co405, 0.001); end
  def test_xi_a_cp405; assert_in_epsilon(5000, worksheet.xi_a_cp405, 0.001); end
  def test_xi_a_cq405; assert_in_epsilon(5000, worksheet.xi_a_cq405, 0.001); end
  def test_xi_a_cr405; assert_in_epsilon(5000, worksheet.xi_a_cr405, 0.001); end
  def test_xi_a_c406; assert_equal("(iii)", worksheet.xi_a_c406); end
  def test_xi_a_d406; assert_equal("Electric Steel", worksheet.xi_a_d406); end
  def test_xi_a_e406; assert_in_epsilon(2869, worksheet.xi_a_e406, 0.001); end
  def test_xi_a_f406; assert_in_epsilon(3735.6509, worksheet.xi_a_f406, 0.001); end
  def test_xi_a_g406; assert_in_epsilon(3707.4218, worksheet.xi_a_g406, 0.001); end
  def test_xi_a_h406; assert_in_epsilon(3679.1927, worksheet.xi_a_h406, 0.001); end
  def test_xi_a_i406; assert_in_epsilon(3650.9636, worksheet.xi_a_i406, 0.001); end
  def test_xi_a_j406; assert_in_epsilon(3622.7345, worksheet.xi_a_j406, 0.001); end
  def test_xi_a_k406; assert_in_epsilon(3594.5054, worksheet.xi_a_k406, 0.001); end
  def test_xi_a_l406; assert_in_epsilon(3566.2763, worksheet.xi_a_l406, 0.001); end
  def test_xi_a_m406; assert_in_epsilon(3538.0472, worksheet.xi_a_m406, 0.001); end
  def test_xi_a_o406; assert_equal("(iii)", worksheet.xi_a_o406); end
  def test_xi_a_p406; assert_equal("Electric Steel", worksheet.xi_a_p406); end
  def test_xi_a_q406; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q406, 0.001); end
  def test_xi_a_r406; assert_in_delta(0.002401479455929414, worksheet.xi_a_r406, 0.001); end
  def test_xi_a_s406; assert_in_delta(0.0023863758115524997, worksheet.xi_a_s406, 0.001); end
  def test_xi_a_t406; assert_in_delta(0.002371272167175585, worksheet.xi_a_t406, 0.001); end
  def test_xi_a_u406; assert_in_delta(0.0023561685227986703, worksheet.xi_a_u406, 0.001); end
  def test_xi_a_v406; assert_in_delta(0.002341064878421756, worksheet.xi_a_v406, 0.001); end
  def test_xi_a_w406; assert_in_delta(0.0023259612340448413, worksheet.xi_a_w406, 0.001); end
  def test_xi_a_x406; assert_in_delta(0.002310857589667927, worksheet.xi_a_x406, 0.001); end
  def test_xi_a_y406; assert_in_delta(0.0022957539452910123, worksheet.xi_a_y406, 0.001); end
  def test_xi_a_aa406; assert_equal("V.03", worksheet.xi_a_aa406); end
  def test_xi_a_ab406; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab406); end
  def test_xi_a_am406; assert_equal("(iii)", worksheet.xi_a_am406); end
  def test_xi_a_an406; assert_equal("Electric Steel", worksheet.xi_a_an406); end
  def test_xi_a_ao406; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao406, 0.001); end
  def test_xi_a_ap406; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap406, 0.001); end
  def test_xi_a_aq406; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq406, 0.001); end
  def test_xi_a_ar406; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar406, 0.001); end
  def test_xi_a_as406; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as406, 0.001); end
  def test_xi_a_at406; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at406, 0.001); end
  def test_xi_a_au406; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au406, 0.001); end
  def test_xi_a_av406; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av406, 0.001); end
  def test_xi_a_aw406; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw406, 0.001); end
  def test_xi_a_az406; assert_equal("Electric Steel", worksheet.xi_a_az406); end
  def test_xi_a_bl406; assert_equal("Electric Steel", worksheet.xi_a_bl406); end
  def test_xi_a_bx406; assert_equal("Electric Steel", worksheet.xi_a_bx406); end
  def test_xi_a_by406; assert_in_delta(0, (worksheet.xi_a_by406||0), 0.001); end
  def test_xi_a_bz406; assert_in_delta(0, (worksheet.xi_a_bz406||0), 0.001); end
  def test_xi_a_ca406; assert_in_delta(0, (worksheet.xi_a_ca406||0), 0.001); end
  def test_xi_a_cb406; assert_in_delta(0, (worksheet.xi_a_cb406||0), 0.001); end
  def test_xi_a_cc406; assert_in_delta(0, (worksheet.xi_a_cc406||0), 0.001); end
  def test_xi_a_cd406; assert_in_delta(0, (worksheet.xi_a_cd406||0), 0.001); end
  def test_xi_a_ce406; assert_in_delta(0, (worksheet.xi_a_ce406||0), 0.001); end
  def test_xi_a_cf406; assert_in_delta(0, (worksheet.xi_a_cf406||0), 0.001); end
  def test_xi_a_cg406; assert_in_delta(0, (worksheet.xi_a_cg406||0), 0.001); end
  def test_xi_a_ci406; assert_equal("Electric Steel", worksheet.xi_a_ci406); end
  def test_xi_a_cj406; assert_in_epsilon(3000, worksheet.xi_a_cj406, 0.001); end
  def test_xi_a_ck406; assert_in_epsilon(4000, worksheet.xi_a_ck406, 0.001); end
  def test_xi_a_cl406; assert_in_epsilon(4000, worksheet.xi_a_cl406, 0.001); end
  def test_xi_a_cm406; assert_in_epsilon(4000, worksheet.xi_a_cm406, 0.001); end
  def test_xi_a_cn406; assert_in_epsilon(4000, worksheet.xi_a_cn406, 0.001); end
  def test_xi_a_co406; assert_in_epsilon(4000, worksheet.xi_a_co406, 0.001); end
  def test_xi_a_cp406; assert_in_epsilon(4000, worksheet.xi_a_cp406, 0.001); end
  def test_xi_a_cq406; assert_in_epsilon(4000, worksheet.xi_a_cq406, 0.001); end
  def test_xi_a_cr406; assert_in_epsilon(4000, worksheet.xi_a_cr406, 0.001); end
  def test_xi_a_d407; assert_equal("Total", worksheet.xi_a_d407); end
  def test_xi_a_e407; assert_in_epsilon(8133, worksheet.xi_a_e407, 0.001); end
  def test_xi_a_f407; assert_in_epsilon(8072.0025000000005, worksheet.xi_a_f407, 0.001); end
  def test_xi_a_g407; assert_in_epsilon(8011.005, worksheet.xi_a_g407, 0.001); end
  def test_xi_a_h407; assert_in_epsilon(7950.0075, worksheet.xi_a_h407, 0.001); end
  def test_xi_a_i407; assert_in_epsilon(7889.01, worksheet.xi_a_i407, 0.001); end
  def test_xi_a_j407; assert_in_epsilon(7828.012500000001, worksheet.xi_a_j407, 0.001); end
  def test_xi_a_k407; assert_in_epsilon(7767.014999999999, worksheet.xi_a_k407, 0.001); end
  def test_xi_a_l407; assert_in_epsilon(7706.0175, worksheet.xi_a_l407, 0.001); end
  def test_xi_a_m407; assert_in_epsilon(7645.0199999999995, worksheet.xi_a_m407, 0.001); end
  def test_xi_a_o407; assert_equal("Total", worksheet.xi_a_o407); end
  def test_xi_a_aa407; assert_equal("V.05", worksheet.xi_a_aa407); end
  def test_xi_a_ab407; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab407); end
  def test_xi_a_ac407; assert_in_delta(0.2110256488374445, worksheet.xi_a_ac407, 0.001); end
  def test_xi_a_ad407; assert_in_delta(0.21102564883744454, worksheet.xi_a_ad407, 0.001); end
  def test_xi_a_ae407; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae407, 0.001); end
  def test_xi_a_af407; assert_in_delta(0.21102564883744448, worksheet.xi_a_af407, 0.001); end
  def test_xi_a_ag407; assert_in_delta(0.279782962530494, worksheet.xi_a_ag407, 0.001); end
  def test_xi_a_ah407; assert_in_delta(0.279782962530494, worksheet.xi_a_ah407, 0.001); end
  def test_xi_a_ai407; assert_in_delta(0.279782962530494, worksheet.xi_a_ai407, 0.001); end
  def test_xi_a_aj407; assert_in_delta(0.27978296253049395, worksheet.xi_a_aj407, 0.001); end
  def test_xi_a_ak407; assert_in_delta(0.279782962530494, worksheet.xi_a_ak407, 0.001); end
  def test_xi_a_am407; assert_equal("Total", worksheet.xi_a_am407); end
  def test_xi_a_az407; assert_equal("Total", worksheet.xi_a_az407); end
  def test_xi_a_bl407; assert_equal("Total", worksheet.xi_a_bl407); end
  def test_xi_a_bm407; assert_in_delta(0, (worksheet.xi_a_bm407||0), 0.001); end
  def test_xi_a_bn407; assert_in_epsilon(-6.228221101582591, worksheet.xi_a_bn407, 0.001); end
  def test_xi_a_bo407; assert_in_epsilon(-11.28992094277885, worksheet.xi_a_bo407, 0.001); end
  def test_xi_a_bp407; assert_in_epsilon(-14.91894791752236, worksheet.xi_a_bp407, 0.001); end
  def test_xi_a_bq407; assert_in_epsilon(-9.569999024321874, worksheet.xi_a_bq407, 0.001); end
  def test_xi_a_br407; assert_in_epsilon(-11.451399612056662, worksheet.xi_a_br407, 0.001); end
  def test_xi_a_bs407; assert_in_epsilon(-13.12944729898615, worksheet.xi_a_bs407, 0.001); end
  def test_xi_a_bt407; assert_in_epsilon(-14.605335937416498, worksheet.xi_a_bt407, 0.001); end
  def test_xi_a_bu407; assert_in_epsilon(-15.88060847916347, worksheet.xi_a_bu407, 0.001); end
  def test_xi_a_bx407; assert_equal("Total", worksheet.xi_a_bx407); end
  def test_xi_a_by407; assert_in_delta(0, (worksheet.xi_a_by407||0), 0.001); end
  def test_xi_a_bz407; assert_in_delta(0, (worksheet.xi_a_bz407||0), 0.001); end
  def test_xi_a_ca407; assert_in_delta(0, (worksheet.xi_a_ca407||0), 0.001); end
  def test_xi_a_cb407; assert_in_delta(0, (worksheet.xi_a_cb407||0), 0.001); end
  def test_xi_a_cc407; assert_in_delta(0, (worksheet.xi_a_cc407||0), 0.001); end
  def test_xi_a_cd407; assert_in_delta(0, (worksheet.xi_a_cd407||0), 0.001); end
  def test_xi_a_ce407; assert_in_delta(0, (worksheet.xi_a_ce407||0), 0.001); end
  def test_xi_a_cf407; assert_in_delta(0, (worksheet.xi_a_cf407||0), 0.001); end
  def test_xi_a_cg407; assert_in_delta(0, (worksheet.xi_a_cg407||0), 0.001); end
  def test_xi_a_o408; assert_equal("TWh", worksheet.xi_a_o408); end
  def test_xi_a_q408; assert_in_epsilon(38.17081383255731, worksheet.xi_a_q408, 0.001); end
  def test_xi_a_r408; assert_in_epsilon(34.54304334061753, worksheet.xi_a_r408, 0.001); end
  def test_xi_a_s408; assert_in_epsilon(34.066402643095586, worksheet.xi_a_s408, 0.001); end
  def test_xi_a_t408; assert_in_epsilon(33.593045348771255, worksheet.xi_a_t408, 0.001); end
  def test_xi_a_u408; assert_in_epsilon(25.766765674012305, worksheet.xi_a_u408, 0.001); end
  def test_xi_a_v408; assert_in_epsilon(25.403643629339882, worksheet.xi_a_v408, 0.001); end
  def test_xi_a_w408; assert_in_epsilon(25.043075784278287, worksheet.xi_a_w408, 0.001); end
  def test_xi_a_x408; assert_in_epsilon(24.68506213882751, worksheet.xi_a_x408, 0.001); end
  def test_xi_a_y408; assert_in_epsilon(24.329602692987564, worksheet.xi_a_y408, 0.001); end
  def test_xi_a_aa408; assert_equal("V.04", worksheet.xi_a_aa408); end
  def test_xi_a_ab408; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab408); end
  def test_xi_a_ac408; assert_in_delta(0.0769633504792937, worksheet.xi_a_ac408, 0.001); end
  def test_xi_a_ad408; assert_in_delta(0.07995515825027222, worksheet.xi_a_ad408, 0.001); end
  def test_xi_a_ae408; assert_in_delta(0.08294696602125096, worksheet.xi_a_ae408, 0.001); end
  def test_xi_a_af408; assert_in_delta(0.0859387737922297, worksheet.xi_a_af408, 0.001); end
  def test_xi_a_ag408; assert_in_delta(0.11076643708199085, worksheet.xi_a_ag408, 0.001); end
  def test_xi_a_ah408; assert_in_delta(0.11294807360510395, worksheet.xi_a_ah408, 0.001); end
  def test_xi_a_ai408; assert_in_delta(0.1151297101282166, worksheet.xi_a_ai408, 0.001); end
  def test_xi_a_aj408; assert_in_delta(0.11731134665133003, worksheet.xi_a_aj408, 0.001); end
  def test_xi_a_ak408; assert_in_delta(0.11949298317444279, worksheet.xi_a_ak408, 0.001); end
  def test_xi_a_ay408; assert_equal("Process", worksheet.xi_a_ay408); end
  def test_xi_a_az408; assert_equal("Oxygen Steel", worksheet.xi_a_az408); end
  def test_xi_a_bk408; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bk408); end
  def test_xi_a_bl408; assert_equal("Oxygen Steel", worksheet.xi_a_bl408); end
  def test_xi_a_bw408; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bw408); end
  def test_xi_a_bx408; assert_equal("Oxygen Steel", worksheet.xi_a_bx408); end
  def test_xi_a_by408; assert_in_delta(-4.192202140984591e-13, worksheet.xi_a_by408, 0.001); end
  def test_xi_a_bz408; assert_in_epsilon(178.66809214901787, worksheet.xi_a_bz408, 0.001); end
  def test_xi_a_ca408; assert_in_epsilon(183.23215315347403, worksheet.xi_a_ca408, 0.001); end
  def test_xi_a_cb408; assert_in_epsilon(192.5725368029339, worksheet.xi_a_cb408, 0.001); end
  def test_xi_a_cc408; assert_in_epsilon(685.4420643915702, worksheet.xi_a_cc408, 0.001); end
  def test_xi_a_cd408; assert_in_epsilon(671.4087323100662, worksheet.xi_a_cd408, 0.001); end
  def test_xi_a_ce408; assert_in_epsilon(657.4584531905468, worksheet.xi_a_ce408, 0.001); end
  def test_xi_a_cf408; assert_in_epsilon(642.8664023348135, worksheet.xi_a_cf408, 0.001); end
  def test_xi_a_cg408; assert_in_epsilon(627.31300603997, worksheet.xi_a_cg408, 0.001); end
  def test_xi_a_aa409; assert_equal("V.06", worksheet.xi_a_aa409); end
  def test_xi_a_ab409; assert_equal("Blast furnace gas", worksheet.xi_a_ab409); end
  def test_xi_a_ac409; assert_in_delta(-0.11326460696060943, worksheet.xi_a_ac409, 0.001); end
  def test_xi_a_ad409; assert_in_delta(-0.11326460696060946, worksheet.xi_a_ad409, 0.001); end
  def test_xi_a_ae409; assert_in_delta(-0.1132646069606094, worksheet.xi_a_ae409, 0.001); end
  def test_xi_a_af409; assert_in_delta(-0.11326460696060943, worksheet.xi_a_af409, 0.001); end
  def test_xi_a_ag409; assert_in_delta(0, (worksheet.xi_a_ag409||0), 0.001); end
  def test_xi_a_ah409; assert_in_delta(0, (worksheet.xi_a_ah409||0), 0.001); end
  def test_xi_a_ai409; assert_in_delta(0, (worksheet.xi_a_ai409||0), 0.001); end
  def test_xi_a_aj409; assert_in_delta(0, (worksheet.xi_a_aj409||0), 0.001); end
  def test_xi_a_ak409; assert_in_delta(0, (worksheet.xi_a_ak409||0), 0.001); end
  def test_xi_a_am409; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am409); end
  def test_xi_a_az409; assert_equal("Electric Steel", worksheet.xi_a_az409); end
  def test_xi_a_bl409; assert_equal("Electric Steel", worksheet.xi_a_bl409); end
  def test_xi_a_bx409; assert_equal("Electric Steel", worksheet.xi_a_bx409); end
  def test_xi_a_by409; assert_in_delta(5.684341886080802e-14, worksheet.xi_a_by409, 0.001); end
  def test_xi_a_bz409; assert_in_epsilon(-70.47388333423275, worksheet.xi_a_bz409, 0.001); end
  def test_xi_a_ca409; assert_in_epsilon(-66.95530001241805, worksheet.xi_a_ca409, 0.001); end
  def test_xi_a_cb409; assert_in_epsilon(-65.0507923190144, worksheet.xi_a_cb409, 0.001); end
  def test_xi_a_cc409; assert_in_epsilon(-130.8185664382762, worksheet.xi_a_cc409, 0.001); end
  def test_xi_a_cd409; assert_in_epsilon(-124.19722403447065, worksheet.xi_a_cd409, 0.001); end
  def test_xi_a_ce409; assert_in_epsilon(-118.34317219003188, worksheet.xi_a_ce409, 0.001); end
  def test_xi_a_cf409; assert_in_epsilon(-112.8610031411454, worksheet.xi_a_cf409, 0.001); end
  def test_xi_a_cg409; assert_in_epsilon(-107.61359398266495, worksheet.xi_a_cg409, 0.001); end
  def test_xi_a_aa410; assert_equal("V.07", worksheet.xi_a_aa410); end
  def test_xi_a_ab410; assert_equal("Heat transport", worksheet.xi_a_ab410); end
  def test_xi_a_ac410; assert_in_delta(-0.054587625239247047, worksheet.xi_a_ac410, 0.001); end
  def test_xi_a_ad410; assert_in_delta(-0.05458762523924706, worksheet.xi_a_ad410, 0.001); end
  def test_xi_a_ae410; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae410, 0.001); end
  def test_xi_a_af410; assert_in_delta(-0.05458762523924704, worksheet.xi_a_af410, 0.001); end
  def test_xi_a_ag410; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ag410, 0.001); end
  def test_xi_a_ah410; assert_in_delta(-0.07237360762106047, worksheet.xi_a_ah410, 0.001); end
  def test_xi_a_ai410; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ai410, 0.001); end
  def test_xi_a_aj410; assert_in_delta(-0.07237360762106046, worksheet.xi_a_aj410, 0.001); end
  def test_xi_a_ak410; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ak410, 0.001); end
  def test_xi_a_am410; assert_equal("Industry", worksheet.xi_a_am410); end
  def test_xi_a_an410; assert_equal("Description", worksheet.xi_a_an410); end
  def test_xi_a_ao410; assert_in_epsilon(2010, worksheet.xi_a_ao410, 0.001); end
  def test_xi_a_ap410; assert_in_epsilon(2015, worksheet.xi_a_ap410, 0.001); end
  def test_xi_a_aq410; assert_in_epsilon(2020, worksheet.xi_a_aq410, 0.001); end
  def test_xi_a_ar410; assert_in_epsilon(2025, worksheet.xi_a_ar410, 0.001); end
  def test_xi_a_as410; assert_in_epsilon(2030, worksheet.xi_a_as410, 0.001); end
  def test_xi_a_at410; assert_in_epsilon(2035, worksheet.xi_a_at410, 0.001); end
  def test_xi_a_au410; assert_in_epsilon(2040, worksheet.xi_a_au410, 0.001); end
  def test_xi_a_av410; assert_in_epsilon(2045, worksheet.xi_a_av410, 0.001); end
  def test_xi_a_aw410; assert_in_epsilon(2050, worksheet.xi_a_aw410, 0.001); end
  def test_xi_a_az410; assert_equal("Total", worksheet.xi_a_az410); end
  def test_xi_a_bl410; assert_equal("Total", worksheet.xi_a_bl410); end
  def test_xi_a_bm410; assert_in_delta(-1.4210854715202004e-13, worksheet.xi_a_bm410, 0.001); end
  def test_xi_a_bn410; assert_in_epsilon(-67.83332159155447, worksheet.xi_a_bn410, 0.001); end
  def test_xi_a_bo410; assert_in_epsilon(-75.41515053561014, worksheet.xi_a_bo410, 0.001); end
  def test_xi_a_bp410; assert_in_epsilon(-84.57344100634263, worksheet.xi_a_bp410, 0.001); end
  def test_xi_a_bq410; assert_in_epsilon(21.027757532093702, worksheet.xi_a_bq410, 0.001); end
  def test_xi_a_br410; assert_in_epsilon(22.117067618982674, worksheet.xi_a_br410, 0.001); end
  def test_xi_a_bs410; assert_in_epsilon(23.8035337771869, worksheet.xi_a_bs410, 0.001); end
  def test_xi_a_bt410; assert_in_epsilon(26.418392712983703, worksheet.xi_a_bt410, 0.001); end
  def test_xi_a_bx410; assert_equal("Total", worksheet.xi_a_bx410); end
  def test_xi_a_by410; assert_in_delta(-3.623767952376511e-13, worksheet.xi_a_by410, 0.001); end
  def test_xi_a_bz410; assert_in_epsilon(108.19420881478511, worksheet.xi_a_bz410, 0.001); end
  def test_xi_a_ca410; assert_in_epsilon(116.27685314105598, worksheet.xi_a_ca410, 0.001); end
  def test_xi_a_cb410; assert_in_epsilon(127.5217444839195, worksheet.xi_a_cb410, 0.001); end
  def test_xi_a_cc410; assert_in_epsilon(554.623497953294, worksheet.xi_a_cc410, 0.001); end
  def test_xi_a_cd410; assert_in_epsilon(547.2115082755955, worksheet.xi_a_cd410, 0.001); end
  def test_xi_a_ce410; assert_in_epsilon(539.115281000515, worksheet.xi_a_ce410, 0.001); end
  def test_xi_a_cf410; assert_in_epsilon(530.0053991936682, worksheet.xi_a_cf410, 0.001); end
  def test_xi_a_aa411; assert_equal("V.10", worksheet.xi_a_aa411); end
  def test_xi_a_ab411; assert_equal("Biomass", worksheet.xi_a_ab411); end
  def test_xi_a_am411; assert_equal("(ii)", worksheet.xi_a_am411); end
  def test_xi_a_an411; assert_equal("Oxygen Steel", worksheet.xi_a_an411); end
  def test_xi_a_ao411; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao411, 0.001); end
  def test_xi_a_ap411; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap411, 0.001); end
  def test_xi_a_aq411; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq411, 0.001); end
  def test_xi_a_ar411; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar411, 0.001); end
  def test_xi_a_as411; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as411, 0.001); end
  def test_xi_a_at411; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at411, 0.001); end
  def test_xi_a_au411; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au411, 0.001); end
  def test_xi_a_av411; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av411, 0.001); end
  def test_xi_a_aw411; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw411, 0.001); end
  def test_xi_a_ay411; assert_equal("Fugitive", worksheet.xi_a_ay411); end
  def test_xi_a_az411; assert_equal("Oxygen Steel", worksheet.xi_a_az411); end
  def test_xi_a_aa412; assert_equal("Intensity", worksheet.xi_a_aa412); end
  def test_xi_a_ab412; assert_equal("Intensity", worksheet.xi_a_ab412); end
  def test_xi_a_ac412; assert_in_delta(0.21950983912607064, worksheet.xi_a_ac412, 0.001); end
  def test_xi_a_ad412; assert_in_delta(0.2147828440467574, worksheet.xi_a_ad412, 0.001); end
  def test_xi_a_ae412; assert_in_delta(0.2100904046568379, worksheet.xi_a_ae412, 0.001); end
  def test_xi_a_af412; assert_in_delta(0.2054325209563121, worksheet.xi_a_af412, 0.001); end
  def test_xi_a_ag412; assert_in_delta(0.24864365813273437, worksheet.xi_a_ag412, 0.001); end
  def test_xi_a_ah412; assert_in_delta(0.2452975095631423, worksheet.xi_a_ah412, 0.001); end
  def test_xi_a_ai412; assert_in_delta(0.24197655912118193, worksheet.xi_a_ai412, 0.001); end
  def test_xi_a_aj412; assert_in_delta(0.23868080680685333, worksheet.xi_a_aj412, 0.001); end
  def test_xi_a_ak412; assert_in_delta(0.23541025262015636, worksheet.xi_a_ak412, 0.001); end
  def test_xi_a_am412; assert_equal("(iii)", worksheet.xi_a_am412); end
  def test_xi_a_an412; assert_equal("Electric Steel", worksheet.xi_a_an412); end
  def test_xi_a_ao412; assert_in_delta(0, (worksheet.xi_a_ao412||0), 0.001); end
  def test_xi_a_ap412; assert_in_delta(0, (worksheet.xi_a_ap412||0), 0.001); end
  def test_xi_a_aq412; assert_in_delta(0, (worksheet.xi_a_aq412||0), 0.001); end
  def test_xi_a_ar412; assert_in_delta(0, (worksheet.xi_a_ar412||0), 0.001); end
  def test_xi_a_as412; assert_in_delta(0, (worksheet.xi_a_as412||0), 0.001); end
  def test_xi_a_at412; assert_in_delta(0, (worksheet.xi_a_at412||0), 0.001); end
  def test_xi_a_au412; assert_in_delta(0, (worksheet.xi_a_au412||0), 0.001); end
  def test_xi_a_av412; assert_in_delta(0, (worksheet.xi_a_av412||0), 0.001); end
  def test_xi_a_aw412; assert_in_delta(0, (worksheet.xi_a_aw412||0), 0.001); end
  def test_xi_a_az412; assert_equal("Electric Steel", worksheet.xi_a_az412); end
  def test_xi_a_aa413; assert_equal("Cost", worksheet.xi_a_aa413); end
  def test_xi_a_ab413; assert_equal("Cost", worksheet.xi_a_ab413); end
  def test_xi_a_am413; assert_equal("Total", worksheet.xi_a_am413); end
  def test_xi_a_az413; assert_equal("Total", worksheet.xi_a_az413); end
  def test_xi_a_ba411; assert_in_delta(0.547604979315071, worksheet.xi_a_ba411, 0.001); end
  def test_xi_a_ba412; assert_in_delta(0, (worksheet.xi_a_ba412||0), 0.001); end
  def test_xi_a_ba413; assert_in_delta(0.547604979315071, worksheet.xi_a_ba413, 0.001); end
  def test_xi_a_bb411; assert_in_delta(0.4511032918352726, worksheet.xi_a_bb411, 0.001); end
  def test_xi_a_bb412; assert_in_delta(0, (worksheet.xi_a_bb412||0), 0.001); end
  def test_xi_a_bb413; assert_in_delta(0.4511032918352726, worksheet.xi_a_bb413, 0.001); end
  def test_xi_a_bc411; assert_in_delta(0.4476944508390363, worksheet.xi_a_bc411, 0.001); end
  def test_xi_a_bc412; assert_in_delta(0, (worksheet.xi_a_bc412||0), 0.001); end
  def test_xi_a_bc413; assert_in_delta(0.4476944508390363, worksheet.xi_a_bc413, 0.001); end
  def test_xi_a_bd411; assert_in_delta(0.44428560984279997, worksheet.xi_a_bd411, 0.001); end
  def test_xi_a_bd412; assert_in_delta(0, (worksheet.xi_a_bd412||0), 0.001); end
  def test_xi_a_bd413; assert_in_delta(0.44428560984279997, worksheet.xi_a_bd413, 0.001); end
  def test_xi_a_be411; assert_in_delta(0.4408767688465637, worksheet.xi_a_be411, 0.001); end
  def test_xi_a_be412; assert_in_delta(0, (worksheet.xi_a_be412||0), 0.001); end
  def test_xi_a_be413; assert_in_delta(0.4408767688465637, worksheet.xi_a_be413, 0.001); end
  def test_xi_a_bf411; assert_in_delta(0.4374679278503274, worksheet.xi_a_bf411, 0.001); end
  def test_xi_a_bf412; assert_in_delta(0, (worksheet.xi_a_bf412||0), 0.001); end
  def test_xi_a_bf413; assert_in_delta(0.4374679278503274, worksheet.xi_a_bf413, 0.001); end
  def test_xi_a_bg411; assert_in_delta(0.43405908685409095, worksheet.xi_a_bg411, 0.001); end
  def test_xi_a_bg412; assert_in_delta(0, (worksheet.xi_a_bg412||0), 0.001); end
  def test_xi_a_bg413; assert_in_delta(0.43405908685409095, worksheet.xi_a_bg413, 0.001); end
  def test_xi_a_bh411; assert_in_delta(0.4306502458578548, worksheet.xi_a_bh411, 0.001); end
  def test_xi_a_bh412; assert_in_delta(0, (worksheet.xi_a_bh412||0), 0.001); end
  def test_xi_a_bh413; assert_in_delta(0.4306502458578548, worksheet.xi_a_bh413, 0.001); end
  def test_xi_a_bi411; assert_in_delta(0.4272414048616183, worksheet.xi_a_bi411, 0.001); end
  def test_xi_a_bi412; assert_in_delta(0, (worksheet.xi_a_bi412||0), 0.001); end
  def test_xi_a_bi413; assert_in_delta(0.4272414048616183, worksheet.xi_a_bi413, 0.001); end
  def test_xi_a_z415; assert_equal("Electrosteel", worksheet.xi_a_z415); end
  def test_xi_a_aa415; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa415); end
  def test_xi_a_ay415; assert_equal("Total", worksheet.xi_a_ay415); end
  def test_xi_a_az415; assert_equal("Oxygen Steel", worksheet.xi_a_az415); end
  def test_xi_a_ba405; assert_in_epsilon(6.856968654500153, worksheet.xi_a_ba405, 0.001); end
  def test_xi_a_ba408; assert_in_delta(0, (worksheet.xi_a_ba408||0), 0.001); end
  def test_xi_a_ba415; assert_in_epsilon(7.4045736338152235, worksheet.xi_a_ba415, 0.001); end
  def test_xi_a_bb405; assert_in_epsilon(5.492417104549999, worksheet.xi_a_bb405, 0.001); end
  def test_xi_a_bb408; assert_in_delta(0, (worksheet.xi_a_bb408||0), 0.001); end
  def test_xi_a_bb415; assert_in_epsilon(5.943520396385272, worksheet.xi_a_bb415, 0.001); end
  def test_xi_a_bc405; assert_in_epsilon(5.298291120800074, worksheet.xi_a_bc405, 0.001); end
  def test_xi_a_bc408; assert_in_delta(0, (worksheet.xi_a_bc408||0), 0.001); end
  def test_xi_a_bc415; assert_in_epsilon(5.74598557163911, worksheet.xi_a_bc415, 0.001); end
  def test_xi_a_bd405; assert_in_epsilon(5.108835235259777, worksheet.xi_a_bd405, 0.001); end
  def test_xi_a_bd408; assert_in_delta(0, (worksheet.xi_a_bd408||0), 0.001); end
  def test_xi_a_bd415; assert_in_epsilon(5.553120845102577, worksheet.xi_a_bd415, 0.001); end
  def test_xi_a_be405; assert_in_epsilon(4.267839137378837, worksheet.xi_a_be405, 0.001); end
  def test_xi_a_be408; assert_in_delta(0, (worksheet.xi_a_be408||0), 0.001); end
  def test_xi_a_be415; assert_in_epsilon(4.7087159062254, worksheet.xi_a_be415, 0.001); end
  def test_xi_a_bf405; assert_in_epsilon(4.1510684777516085, worksheet.xi_a_bf405, 0.001); end
  def test_xi_a_bf408; assert_in_delta(0, (worksheet.xi_a_bf408||0), 0.001); end
  def test_xi_a_bf415; assert_in_epsilon(4.5885364056019355, worksheet.xi_a_bf415, 0.001); end
  def test_xi_a_bg405; assert_in_epsilon(4.03674867751894, worksheet.xi_a_bg405, 0.001); end
  def test_xi_a_bg408; assert_in_delta(0, (worksheet.xi_a_bg408||0), 0.001); end
  def test_xi_a_bg415; assert_in_epsilon(4.47080776437303, worksheet.xi_a_bg415, 0.001); end
  def test_xi_a_bh405; assert_in_epsilon(3.924844628005321, worksheet.xi_a_bh405, 0.001); end
  def test_xi_a_bh408; assert_in_delta(0, (worksheet.xi_a_bh408||0), 0.001); end
  def test_xi_a_bh415; assert_in_epsilon(4.355494873863176, worksheet.xi_a_bh415, 0.001); end
  def test_xi_a_aa416; assert_equal("Vector", worksheet.xi_a_aa416); end
  def test_xi_a_ab416; assert_equal("Description", worksheet.xi_a_ab416); end
  def test_xi_a_ac416; assert_in_epsilon(2010, worksheet.xi_a_ac416, 0.001); end
  def test_xi_a_ad416; assert_in_epsilon(2015, worksheet.xi_a_ad416, 0.001); end
  def test_xi_a_ae416; assert_in_epsilon(2020, worksheet.xi_a_ae416, 0.001); end
  def test_xi_a_af416; assert_in_epsilon(2025, worksheet.xi_a_af416, 0.001); end
  def test_xi_a_ag416; assert_in_epsilon(2030, worksheet.xi_a_ag416, 0.001); end
  def test_xi_a_ah416; assert_in_epsilon(2035, worksheet.xi_a_ah416, 0.001); end
  def test_xi_a_ai416; assert_in_epsilon(2040, worksheet.xi_a_ai416, 0.001); end
  def test_xi_a_aj416; assert_in_epsilon(2045, worksheet.xi_a_aj416, 0.001); end
  def test_xi_a_ak416; assert_in_epsilon(2050, worksheet.xi_a_ak416, 0.001); end
  def test_xi_a_az416; assert_equal("Electric Steel", worksheet.xi_a_az416); end
  def test_xi_a_ba406; assert_in_delta(0.9051562640147889, worksheet.xi_a_ba406, 0.001); end
  def test_xi_a_ba409; assert_in_delta(0.9210501796116506, worksheet.xi_a_ba409, 0.001); end
  def test_xi_a_ba416; assert_in_epsilon(1.8262064436264396, worksheet.xi_a_ba416, 0.001); end
  def test_xi_a_bb406; assert_in_epsilon(1.1712144958105828, worksheet.xi_a_bb406, 0.001); end
  def test_xi_a_bb409; assert_in_epsilon(1.1992756822626085, worksheet.xi_a_bb409, 0.001); end
  def test_xi_a_bb416; assert_in_epsilon(2.370490178073191, worksheet.xi_a_bb416, 0.001); end
  def test_xi_a_bc406; assert_in_epsilon(1.1550535429748334, worksheet.xi_a_bc406, 0.001); end
  def test_xi_a_bc409; assert_in_epsilon(1.1902131456208256, worksheet.xi_a_bc409, 0.001); end
  def test_xi_a_bc416; assert_in_epsilon(2.3452666885956592, worksheet.xi_a_bc416, 0.001); end
  def test_xi_a_bd406; assert_in_epsilon(1.1390039170242898, worksheet.xi_a_bd406, 0.001); end
  def test_xi_a_bd409; assert_in_epsilon(1.1811506089790427, worksheet.xi_a_bd409, 0.001); end
  def test_xi_a_bd416; assert_in_epsilon(2.3201545260033325, worksheet.xi_a_bd416, 0.001); end
  def test_xi_a_be406; assert_in_epsilon(1.1230656179589524, worksheet.xi_a_be406, 0.001); end
  def test_xi_a_be409; assert_in_epsilon(1.1720880723372598, worksheet.xi_a_be409, 0.001); end
  def test_xi_a_be416; assert_in_epsilon(2.295153690296212, worksheet.xi_a_be416, 0.001); end
  def test_xi_a_bf406; assert_in_epsilon(1.1072386457788213, worksheet.xi_a_bf406, 0.001); end
  def test_xi_a_bf409; assert_in_epsilon(1.1630255356954768, worksheet.xi_a_bf409, 0.001); end
  def test_xi_a_bf416; assert_in_epsilon(2.270264181474298, worksheet.xi_a_bf416, 0.001); end
  def test_xi_a_bg406; assert_in_epsilon(1.091523000483896, worksheet.xi_a_bg406, 0.001); end
  def test_xi_a_bg409; assert_in_epsilon(1.153962999053694, worksheet.xi_a_bg409, 0.001); end
  def test_xi_a_bg416; assert_in_epsilon(2.24548599953759, worksheet.xi_a_bg416, 0.001); end
  def test_xi_a_bh406; assert_in_epsilon(1.0759186820741768, worksheet.xi_a_bh406, 0.001); end
  def test_xi_a_bh409; assert_in_epsilon(1.144900462411911, worksheet.xi_a_bh409, 0.001); end
  def test_xi_a_bh416; assert_in_epsilon(2.2208191444860876, worksheet.xi_a_bh416, 0.001); end
  def test_xi_a_aa417; assert_equal("V.01", worksheet.xi_a_aa417); end
  def test_xi_a_ab417; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab417); end
  def test_xi_a_ac417; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac417, 0.001); end
  def test_xi_a_ad417; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad417, 0.001); end
  def test_xi_a_ae417; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae417, 0.001); end
  def test_xi_a_af417; assert_in_delta(0.37661125507716986, worksheet.xi_a_af417, 0.001); end
  def test_xi_a_ag417; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag417, 0.001); end
  def test_xi_a_ah417; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah417, 0.001); end
  def test_xi_a_ai417; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai417, 0.001); end
  def test_xi_a_aj417; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj417, 0.001); end
  def test_xi_a_ak417; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak417, 0.001); end
  def test_xi_a_az417; assert_equal("Total", worksheet.xi_a_az417); end
  def test_xi_a_ba417; assert_in_epsilon(9.230780077441663, worksheet.xi_a_ba417, 0.001); end
  def test_xi_a_bb417; assert_in_epsilon(8.314010574458463, worksheet.xi_a_bb417, 0.001); end
  def test_xi_a_bc417; assert_in_epsilon(8.09125226023477, worksheet.xi_a_bc417, 0.001); end
  def test_xi_a_bd417; assert_in_epsilon(7.87327537110591, worksheet.xi_a_bd417, 0.001); end
  def test_xi_a_be417; assert_in_epsilon(7.0038695965216125, worksheet.xi_a_be417, 0.001); end
  def test_xi_a_bf417; assert_in_epsilon(6.858800587076233, worksheet.xi_a_bf417, 0.001); end
  def test_xi_a_bg417; assert_in_epsilon(6.71629376391062, worksheet.xi_a_bg417, 0.001); end
  def test_xi_a_bh417; assert_in_epsilon(6.576314018349263, worksheet.xi_a_bh417, 0.001); end
  def test_xi_a_aa418; assert_equal("V.03", worksheet.xi_a_aa418); end
  def test_xi_a_ab418; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab418); end
  def test_xi_a_ac418; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac418, 0.001); end
  def test_xi_a_ad418; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad418, 0.001); end
  def test_xi_a_ae418; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae418, 0.001); end
  def test_xi_a_af418; assert_in_delta(0.04200640884510868, worksheet.xi_a_af418, 0.001); end
  def test_xi_a_ag418; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag418, 0.001); end
  def test_xi_a_ah418; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah418, 0.001); end
  def test_xi_a_ai418; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai418, 0.001); end
  def test_xi_a_aj418; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj418, 0.001); end
  def test_xi_a_ak418; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak418, 0.001); end
  def test_xi_a_aa419; assert_equal("V.05", worksheet.xi_a_aa419); end
  def test_xi_a_ab419; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab419); end
  def test_xi_a_ac419; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac419, 0.001); end
  def test_xi_a_ad419; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad419, 0.001); end
  def test_xi_a_ae419; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae419, 0.001); end
  def test_xi_a_af419; assert_in_delta(0.5722074496017227, worksheet.xi_a_af419, 0.001); end
  def test_xi_a_ag419; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag419, 0.001); end
  def test_xi_a_ah419; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah419, 0.001); end
  def test_xi_a_ai419; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai419, 0.001); end
  def test_xi_a_aj419; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj419, 0.001); end
  def test_xi_a_ak419; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak419, 0.001); end
  def test_xi_a_aa420; assert_equal("V.04", worksheet.xi_a_aa420); end
  def test_xi_a_ab420; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab420); end
  def test_xi_a_ac420; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac420, 0.001); end
  def test_xi_a_ad420; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad420, 0.001); end
  def test_xi_a_ae420; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae420, 0.001); end
  def test_xi_a_af420; assert_in_delta(0.009174886475998728, worksheet.xi_a_af420, 0.001); end
  def test_xi_a_ag420; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag420, 0.001); end
  def test_xi_a_ah420; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah420, 0.001); end
  def test_xi_a_ai420; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai420, 0.001); end
  def test_xi_a_aj420; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj420, 0.001); end
  def test_xi_a_ak420; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak420, 0.001); end
  def test_xi_a_aa421; assert_equal("V.06", worksheet.xi_a_aa421); end
  def test_xi_a_ab421; assert_equal("Blast furnace gas", worksheet.xi_a_ab421); end
  def test_xi_a_ac421; assert_in_delta(0, (worksheet.xi_a_ac421||0), 0.001); end
  def test_xi_a_ad421; assert_in_delta(0, (worksheet.xi_a_ad421||0), 0.001); end
  def test_xi_a_ae421; assert_in_delta(0, (worksheet.xi_a_ae421||0), 0.001); end
  def test_xi_a_af421; assert_in_delta(0, (worksheet.xi_a_af421||0), 0.001); end
  def test_xi_a_ag421; assert_in_delta(0, (worksheet.xi_a_ag421||0), 0.001); end
  def test_xi_a_ah421; assert_in_delta(0, (worksheet.xi_a_ah421||0), 0.001); end
  def test_xi_a_ai421; assert_in_delta(0, (worksheet.xi_a_ai421||0), 0.001); end
  def test_xi_a_aj421; assert_in_delta(0, (worksheet.xi_a_aj421||0), 0.001); end
  def test_xi_a_ak421; assert_in_delta(0, (worksheet.xi_a_ak421||0), 0.001); end
  def test_xi_a_aa422; assert_equal("V.07", worksheet.xi_a_aa422); end
  def test_xi_a_ab422; assert_equal("Heat transport", worksheet.xi_a_ab422); end
  def test_xi_a_ac422; assert_in_delta(0, (worksheet.xi_a_ac422||0), 0.001); end
  def test_xi_a_ad422; assert_in_delta(0, (worksheet.xi_a_ad422||0), 0.001); end
  def test_xi_a_ae422; assert_in_delta(0, (worksheet.xi_a_ae422||0), 0.001); end
  def test_xi_a_af422; assert_in_delta(0, (worksheet.xi_a_af422||0), 0.001); end
  def test_xi_a_ag422; assert_in_delta(0, (worksheet.xi_a_ag422||0), 0.001); end
  def test_xi_a_ah422; assert_in_delta(0, (worksheet.xi_a_ah422||0), 0.001); end
  def test_xi_a_ai422; assert_in_delta(0, (worksheet.xi_a_ai422||0), 0.001); end
  def test_xi_a_aj422; assert_in_delta(0, (worksheet.xi_a_aj422||0), 0.001); end
  def test_xi_a_ak422; assert_in_delta(0, (worksheet.xi_a_ak422||0), 0.001); end
  def test_xi_a_aa423; assert_equal("Intensity", worksheet.xi_a_aa423); end
  def test_xi_a_ab423; assert_equal("Intensity", worksheet.xi_a_ab423); end
  def test_xi_a_ac423; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac423, 0.001); end
  def test_xi_a_ad423; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad423, 0.001); end
  def test_xi_a_ae423; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae423, 0.001); end
  def test_xi_a_af423; assert_in_delta(0.1305543295866784, worksheet.xi_a_af423, 0.001); end
  def test_xi_a_ag423; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag423, 0.001); end
  def test_xi_a_ah423; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah423, 0.001); end
  def test_xi_a_ai423; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai423, 0.001); end
  def test_xi_a_aj423; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj423, 0.001); end
  def test_xi_a_ak423; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak423, 0.001); end
  def test_xi_a_aa424; assert_equal("Cost", worksheet.xi_a_aa424); end
  def test_xi_a_ab424; assert_equal("Cost", worksheet.xi_a_ab424); end
  def test_xi_a_ac424; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac424, 0.001); end
  def test_xi_a_ad424; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad424, 0.001); end
  def test_xi_a_ae424; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae424, 0.001); end
  def test_xi_a_af424; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af424, 0.001); end
  def test_xi_a_ag424; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag424, 0.001); end
  def test_xi_a_ah424; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah424, 0.001); end
  def test_xi_a_ai424; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai424, 0.001); end
  def test_xi_a_aj424; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj424, 0.001); end
  def test_xi_a_ak424; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak424, 0.001); end
  def test_xi_a_b427; assert_in_epsilon(6, worksheet.xi_a_b427, 0.001); end
  def test_xi_a_c427; assert_equal("Steel CCS intensity", worksheet.xi_a_c427); end
  def test_xi_a_c428; assert_equal("CCS impact", worksheet.xi_a_c428); end
  def test_xi_a_b430; assert_in_delta(1, worksheet.xi_a_b430, 0.001); end
  def test_xi_a_c430; assert_equal("Output Growth (kt)", worksheet.xi_a_c430); end
  def test_xi_a_n430; assert_in_epsilon(2, worksheet.xi_a_n430, 0.001); end
  def test_xi_a_o430; assert_equal("Energy demand multiplier ( (TWh/kt)", worksheet.xi_a_o430); end
  def test_xi_a_z430; assert_in_epsilon(3, worksheet.xi_a_z430, 0.001); end
  def test_xi_a_aa430; assert_equal("Energy split by vector (%) and intensity (MMtCO2e/TWh)", worksheet.xi_a_aa430); end
  def test_xi_a_al430; assert_in_epsilon(4, worksheet.xi_a_al430, 0.001); end
  def test_xi_a_am430; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am430); end
  def test_xi_a_ay430; assert_in_epsilon(5, worksheet.xi_a_ay430, 0.001); end
  def test_xi_a_az430; assert_equal("Emissions (MMtCO2e)", worksheet.xi_a_az430); end
  def test_xi_a_bk430; assert_in_epsilon(6, worksheet.xi_a_bk430, 0.001); end
  def test_xi_a_bl430; assert_equal("Costs : Energy (MEUR)", worksheet.xi_a_bl430); end
  def test_xi_a_bw430; assert_in_epsilon(7, worksheet.xi_a_bw430, 0.001); end
  def test_xi_a_bx430; assert_equal("Costs : Capex (MEUR)", worksheet.xi_a_bx430); end
  def test_xi_a_c431; assert_equal("Product type", worksheet.xi_a_c431); end
  def test_xi_a_d431; assert_equal("Description", worksheet.xi_a_d431); end
  def test_xi_a_e431; assert_in_epsilon(2010, worksheet.xi_a_e431, 0.001); end
  def test_xi_a_f431; assert_in_epsilon(2015, worksheet.xi_a_f431, 0.001); end
  def test_xi_a_g431; assert_in_epsilon(2020, worksheet.xi_a_g431, 0.001); end
  def test_xi_a_h431; assert_in_epsilon(2025, worksheet.xi_a_h431, 0.001); end
  def test_xi_a_i431; assert_in_epsilon(2030, worksheet.xi_a_i431, 0.001); end
  def test_xi_a_j431; assert_in_epsilon(2035, worksheet.xi_a_j431, 0.001); end
  def test_xi_a_k431; assert_in_epsilon(2040, worksheet.xi_a_k431, 0.001); end
  def test_xi_a_l431; assert_in_epsilon(2045, worksheet.xi_a_l431, 0.001); end
  def test_xi_a_m431; assert_in_epsilon(2050, worksheet.xi_a_m431, 0.001); end
  def test_xi_a_o431; assert_equal("Industry", worksheet.xi_a_o431); end
  def test_xi_a_p431; assert_equal("Description", worksheet.xi_a_p431); end
  def test_xi_a_q431; assert_in_epsilon(2010, worksheet.xi_a_q431, 0.001); end
  def test_xi_a_r431; assert_in_epsilon(2015, worksheet.xi_a_r431, 0.001); end
  def test_xi_a_s431; assert_in_epsilon(2020, worksheet.xi_a_s431, 0.001); end
  def test_xi_a_t431; assert_in_epsilon(2025, worksheet.xi_a_t431, 0.001); end
  def test_xi_a_u431; assert_in_epsilon(2030, worksheet.xi_a_u431, 0.001); end
  def test_xi_a_v431; assert_in_epsilon(2035, worksheet.xi_a_v431, 0.001); end
  def test_xi_a_w431; assert_in_epsilon(2040, worksheet.xi_a_w431, 0.001); end
  def test_xi_a_x431; assert_in_epsilon(2045, worksheet.xi_a_x431, 0.001); end
  def test_xi_a_y431; assert_in_epsilon(2050, worksheet.xi_a_y431, 0.001); end
  def test_xi_a_z431; assert_equal("Oxygensteel", worksheet.xi_a_z431); end
  def test_xi_a_aa431; assert_equal("Vector", worksheet.xi_a_aa431); end
  def test_xi_a_ab431; assert_equal("Description", worksheet.xi_a_ab431); end
  def test_xi_a_ac431; assert_in_epsilon(2010, worksheet.xi_a_ac431, 0.001); end
  def test_xi_a_ad431; assert_in_epsilon(2015, worksheet.xi_a_ad431, 0.001); end
  def test_xi_a_ae431; assert_in_epsilon(2020, worksheet.xi_a_ae431, 0.001); end
  def test_xi_a_af431; assert_in_epsilon(2025, worksheet.xi_a_af431, 0.001); end
  def test_xi_a_ag431; assert_in_epsilon(2030, worksheet.xi_a_ag431, 0.001); end
  def test_xi_a_ah431; assert_in_epsilon(2035, worksheet.xi_a_ah431, 0.001); end
  def test_xi_a_ai431; assert_in_epsilon(2040, worksheet.xi_a_ai431, 0.001); end
  def test_xi_a_aj431; assert_in_epsilon(2045, worksheet.xi_a_aj431, 0.001); end
  def test_xi_a_ak431; assert_in_epsilon(2050, worksheet.xi_a_ak431, 0.001); end
  def test_xi_a_am431; assert_equal("Industry", worksheet.xi_a_am431); end
  def test_xi_a_an431; assert_equal("Description", worksheet.xi_a_an431); end
  def test_xi_a_ao431; assert_in_epsilon(2010, worksheet.xi_a_ao431, 0.001); end
  def test_xi_a_ap431; assert_in_epsilon(2015, worksheet.xi_a_ap431, 0.001); end
  def test_xi_a_aq431; assert_in_epsilon(2020, worksheet.xi_a_aq431, 0.001); end
  def test_xi_a_ar431; assert_in_epsilon(2025, worksheet.xi_a_ar431, 0.001); end
  def test_xi_a_as431; assert_in_epsilon(2030, worksheet.xi_a_as431, 0.001); end
  def test_xi_a_at431; assert_in_epsilon(2035, worksheet.xi_a_at431, 0.001); end
  def test_xi_a_au431; assert_in_epsilon(2040, worksheet.xi_a_au431, 0.001); end
  def test_xi_a_av431; assert_in_epsilon(2045, worksheet.xi_a_av431, 0.001); end
  def test_xi_a_aw431; assert_in_epsilon(2050, worksheet.xi_a_aw431, 0.001); end
  def test_xi_a_ay431; assert_equal("Industry", worksheet.xi_a_ay431); end
  def test_xi_a_az431; assert_equal("Description", worksheet.xi_a_az431); end
  def test_xi_a_ba431; assert_in_epsilon(2010, worksheet.xi_a_ba431, 0.001); end
  def test_xi_a_bb431; assert_in_epsilon(2015, worksheet.xi_a_bb431, 0.001); end
  def test_xi_a_bc431; assert_in_epsilon(2020, worksheet.xi_a_bc431, 0.001); end
  def test_xi_a_bd431; assert_in_epsilon(2025, worksheet.xi_a_bd431, 0.001); end
  def test_xi_a_be431; assert_in_epsilon(2030, worksheet.xi_a_be431, 0.001); end
  def test_xi_a_bf431; assert_in_epsilon(2035, worksheet.xi_a_bf431, 0.001); end
  def test_xi_a_bg431; assert_in_epsilon(2040, worksheet.xi_a_bg431, 0.001); end
  def test_xi_a_bh431; assert_in_epsilon(2045, worksheet.xi_a_bh431, 0.001); end
  def test_xi_a_bi431; assert_in_epsilon(2050, worksheet.xi_a_bi431, 0.001); end
  def test_xi_a_bk431; assert_equal("Industry", worksheet.xi_a_bk431); end
  def test_xi_a_bl431; assert_equal("Description", worksheet.xi_a_bl431); end
  def test_xi_a_bm431; assert_in_epsilon(2010, worksheet.xi_a_bm431, 0.001); end
  def test_xi_a_bn431; assert_in_epsilon(2015, worksheet.xi_a_bn431, 0.001); end
  def test_xi_a_bo431; assert_in_epsilon(2020, worksheet.xi_a_bo431, 0.001); end
  def test_xi_a_bp431; assert_in_epsilon(2025, worksheet.xi_a_bp431, 0.001); end
  def test_xi_a_bq431; assert_in_epsilon(2030, worksheet.xi_a_bq431, 0.001); end
  def test_xi_a_br431; assert_in_epsilon(2035, worksheet.xi_a_br431, 0.001); end
  def test_xi_a_bs431; assert_in_epsilon(2040, worksheet.xi_a_bs431, 0.001); end
  def test_xi_a_bt431; assert_in_epsilon(2045, worksheet.xi_a_bt431, 0.001); end
  def test_xi_a_bu431; assert_in_epsilon(2050, worksheet.xi_a_bu431, 0.001); end
  def test_xi_a_bw431; assert_equal("Industry", worksheet.xi_a_bw431); end
  def test_xi_a_bx431; assert_equal("Description", worksheet.xi_a_bx431); end
  def test_xi_a_by431; assert_in_epsilon(2010, worksheet.xi_a_by431, 0.001); end
  def test_xi_a_bz431; assert_in_epsilon(2015, worksheet.xi_a_bz431, 0.001); end
  def test_xi_a_ca431; assert_in_epsilon(2020, worksheet.xi_a_ca431, 0.001); end
  def test_xi_a_cb431; assert_in_epsilon(2025, worksheet.xi_a_cb431, 0.001); end
  def test_xi_a_cc431; assert_in_epsilon(2030, worksheet.xi_a_cc431, 0.001); end
  def test_xi_a_cd431; assert_in_epsilon(2035, worksheet.xi_a_cd431, 0.001); end
  def test_xi_a_ce431; assert_in_epsilon(2040, worksheet.xi_a_ce431, 0.001); end
  def test_xi_a_cf431; assert_in_epsilon(2045, worksheet.xi_a_cf431, 0.001); end
  def test_xi_a_cg431; assert_in_epsilon(2050, worksheet.xi_a_cg431, 0.001); end
  def test_xi_a_c432; assert_equal("(ii)", worksheet.xi_a_c432); end
  def test_xi_a_d432; assert_equal("Oxygen Steel", worksheet.xi_a_d432); end
  def test_xi_a_e432; assert_in_epsilon(5264, worksheet.xi_a_e432, 0.001); end
  def test_xi_a_f432; assert_in_epsilon(4336.3516, worksheet.xi_a_f432, 0.001); end
  def test_xi_a_g432; assert_in_epsilon(4303.5832, worksheet.xi_a_g432, 0.001); end
  def test_xi_a_h432; assert_in_epsilon(4270.8148, worksheet.xi_a_h432, 0.001); end
  def test_xi_a_i432; assert_in_epsilon(4238.0464, worksheet.xi_a_i432, 0.001); end
  def test_xi_a_j432; assert_in_epsilon(4205.278, worksheet.xi_a_j432, 0.001); end
  def test_xi_a_k432; assert_in_epsilon(4172.509599999999, worksheet.xi_a_k432, 0.001); end
  def test_xi_a_l432; assert_in_epsilon(4139.7412, worksheet.xi_a_l432, 0.001); end
  def test_xi_a_m432; assert_in_epsilon(4106.9728, worksheet.xi_a_m432, 0.001); end
  def test_xi_a_o432; assert_equal("(ii)", worksheet.xi_a_o432); end
  def test_xi_a_p432; assert_equal("Oxygen Steel", worksheet.xi_a_p432); end
  def test_xi_a_aa432; assert_equal("V.01", worksheet.xi_a_aa432); end
  def test_xi_a_ab432; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab432); end
  def test_xi_a_ac432; assert_in_delta(0.0820478272887989, worksheet.xi_a_ac432, 0.001); end
  def test_xi_a_ad432; assert_in_delta(0.08204782728879893, worksheet.xi_a_ad432, 0.001); end
  def test_xi_a_ae432; assert_in_delta(0.08204782728879889, worksheet.xi_a_ae432, 0.001); end
  def test_xi_a_af432; assert_in_delta(0.0820478272887989, worksheet.xi_a_af432, 0.001); end
  def test_xi_a_ag432; assert_in_delta(0.10878101460421724, worksheet.xi_a_ag432, 0.001); end
  def test_xi_a_ah432; assert_in_delta(0.10878101460421724, worksheet.xi_a_ah432, 0.001); end
  def test_xi_a_ai432; assert_in_delta(0.10878101460421725, worksheet.xi_a_ai432, 0.001); end
  def test_xi_a_aj432; assert_in_delta(0.10878101460421723, worksheet.xi_a_aj432, 0.001); end
  def test_xi_a_ak432; assert_in_delta(0.10878101460421724, worksheet.xi_a_ak432, 0.001); end
  def test_xi_a_am432; assert_equal("(ii)", worksheet.xi_a_am432); end
  def test_xi_a_an432; assert_equal("Oxygen Steel", worksheet.xi_a_an432); end
  def test_xi_a_ao432; assert_in_delta(0, (worksheet.xi_a_ao432||0), 0.001); end
  def test_xi_a_ap432; assert_in_delta(0, (worksheet.xi_a_ap432||0), 0.001); end
  def test_xi_a_aq432; assert_in_delta(0, (worksheet.xi_a_aq432||0), 0.001); end
  def test_xi_a_ar432; assert_in_delta(0, (worksheet.xi_a_ar432||0), 0.001); end
  def test_xi_a_as432; assert_in_delta(0, (worksheet.xi_a_as432||0), 0.001); end
  def test_xi_a_at432; assert_in_delta(0, (worksheet.xi_a_at432||0), 0.001); end
  def test_xi_a_au432; assert_in_delta(0, (worksheet.xi_a_au432||0), 0.001); end
  def test_xi_a_av432; assert_in_delta(0, (worksheet.xi_a_av432||0), 0.001); end
  def test_xi_a_aw432; assert_in_delta(0, (worksheet.xi_a_aw432||0), 0.001); end
  def test_xi_a_az432; assert_equal("Oxygen Steel", worksheet.xi_a_az432); end
  def test_xi_a_bl432; assert_equal("Oxygen Steel", worksheet.xi_a_bl432); end
  def test_xi_a_bx432; assert_equal("Oxygen Steel", worksheet.xi_a_bx432); end
  def test_xi_a_c433; assert_equal("(iii)", worksheet.xi_a_c433); end
  def test_xi_a_d433; assert_equal("Electric Steel", worksheet.xi_a_d433); end
  def test_xi_a_e433; assert_in_epsilon(2869, worksheet.xi_a_e433, 0.001); end
  def test_xi_a_f433; assert_in_epsilon(3735.6509, worksheet.xi_a_f433, 0.001); end
  def test_xi_a_g433; assert_in_epsilon(3707.4218, worksheet.xi_a_g433, 0.001); end
  def test_xi_a_h433; assert_in_epsilon(3679.1927, worksheet.xi_a_h433, 0.001); end
  def test_xi_a_i433; assert_in_epsilon(3650.9636, worksheet.xi_a_i433, 0.001); end
  def test_xi_a_j433; assert_in_epsilon(3622.7345, worksheet.xi_a_j433, 0.001); end
  def test_xi_a_k433; assert_in_epsilon(3594.5054, worksheet.xi_a_k433, 0.001); end
  def test_xi_a_l433; assert_in_epsilon(3566.2763, worksheet.xi_a_l433, 0.001); end
  def test_xi_a_m433; assert_in_epsilon(3538.0472, worksheet.xi_a_m433, 0.001); end
  def test_xi_a_o433; assert_equal("(iii)", worksheet.xi_a_o433); end
  def test_xi_a_p433; assert_equal("Electric Steel", worksheet.xi_a_p433); end
  def test_xi_a_aa433; assert_equal("V.03", worksheet.xi_a_aa433); end
  def test_xi_a_ab433; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab433); end
  def test_xi_a_ac433; assert_in_delta(0.7978154055943195, worksheet.xi_a_ac433, 0.001); end
  def test_xi_a_ad433; assert_in_delta(0.7799206553641533, worksheet.xi_a_ad433, 0.001); end
  def test_xi_a_ae433; assert_in_delta(0.7621380979253984, worksheet.xi_a_ae433, 0.001); end
  def test_xi_a_af433; assert_in_delta(0.7444677332780556, worksheet.xi_a_af433, 0.001); end
  def test_xi_a_ag433; assert_in_delta(0.5300649538990316, worksheet.xi_a_ag433, 0.001); end
  def test_xi_a_ah433; assert_in_delta(0.5173432859236287, worksheet.xi_a_ah433, 0.001); end
  def test_xi_a_ai433; assert_in_delta(0.5047034293178426, worksheet.xi_a_ai433, 0.001); end
  def test_xi_a_aj433; assert_in_delta(0.4921453840816731, worksheet.xi_a_aj433, 0.001); end
  def test_xi_a_ak433; assert_in_delta(0.47966915021512047, worksheet.xi_a_ak433, 0.001); end
  def test_xi_a_am433; assert_equal("(iii)", worksheet.xi_a_am433); end
  def test_xi_a_an433; assert_equal("Electric Steel", worksheet.xi_a_an433); end
  def test_xi_a_ao433; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ao433, 0.001); end
  def test_xi_a_ap433; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ap433, 0.001); end
  def test_xi_a_aq433; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aq433, 0.001); end
  def test_xi_a_ar433; assert_in_delta(0.0003210352665080692, worksheet.xi_a_ar433, 0.001); end
  def test_xi_a_as433; assert_in_delta(0.0003210352665080692, worksheet.xi_a_as433, 0.001); end
  def test_xi_a_at433; assert_in_delta(0.0003210352665080692, worksheet.xi_a_at433, 0.001); end
  def test_xi_a_au433; assert_in_delta(0.0003210352665080692, worksheet.xi_a_au433, 0.001); end
  def test_xi_a_av433; assert_in_delta(0.0003210352665080692, worksheet.xi_a_av433, 0.001); end
  def test_xi_a_aw433; assert_in_delta(0.0003210352665080692, worksheet.xi_a_aw433, 0.001); end
  def test_xi_a_az433; assert_equal("Electric Steel", worksheet.xi_a_az433); end
  def test_xi_a_bl433; assert_equal("Electric Steel", worksheet.xi_a_bl433); end
  def test_xi_a_bx433; assert_equal("Electric Steel", worksheet.xi_a_bx433); end
  def test_xi_a_d434; assert_equal("Total", worksheet.xi_a_d434); end
  def test_xi_a_e434; assert_in_epsilon(8133, worksheet.xi_a_e434, 0.001); end
  def test_xi_a_f434; assert_in_epsilon(8072.0025000000005, worksheet.xi_a_f434, 0.001); end
  def test_xi_a_g434; assert_in_epsilon(8011.005, worksheet.xi_a_g434, 0.001); end
  def test_xi_a_h434; assert_in_epsilon(7950.0075, worksheet.xi_a_h434, 0.001); end
  def test_xi_a_i434; assert_in_epsilon(7889.01, worksheet.xi_a_i434, 0.001); end
  def test_xi_a_j434; assert_in_epsilon(7828.012500000001, worksheet.xi_a_j434, 0.001); end
  def test_xi_a_k434; assert_in_epsilon(7767.014999999999, worksheet.xi_a_k434, 0.001); end
  def test_xi_a_l434; assert_in_epsilon(7706.0175, worksheet.xi_a_l434, 0.001); end
  def test_xi_a_m434; assert_in_epsilon(7645.0199999999995, worksheet.xi_a_m434, 0.001); end
  def test_xi_a_o434; assert_equal("Total", worksheet.xi_a_o434); end
  def test_xi_a_aa434; assert_equal("V.05", worksheet.xi_a_aa434); end
  def test_xi_a_ab434; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab434); end
  def test_xi_a_ac434; assert_in_delta(0.2110256488374445, worksheet.xi_a_ac434, 0.001); end
  def test_xi_a_ad434; assert_in_delta(0.21102564883744454, worksheet.xi_a_ad434, 0.001); end
  def test_xi_a_ae434; assert_in_delta(0.21102564883744446, worksheet.xi_a_ae434, 0.001); end
  def test_xi_a_af434; assert_in_delta(0.21102564883744448, worksheet.xi_a_af434, 0.001); end
  def test_xi_a_ag434; assert_in_delta(0.279782962530494, worksheet.xi_a_ag434, 0.001); end
  def test_xi_a_ah434; assert_in_delta(0.279782962530494, worksheet.xi_a_ah434, 0.001); end
  def test_xi_a_ai434; assert_in_delta(0.279782962530494, worksheet.xi_a_ai434, 0.001); end
  def test_xi_a_aj434; assert_in_delta(0.27978296253049395, worksheet.xi_a_aj434, 0.001); end
  def test_xi_a_ak434; assert_in_delta(0.279782962530494, worksheet.xi_a_ak434, 0.001); end
  def test_xi_a_am434; assert_equal("Total", worksheet.xi_a_am434); end
  def test_xi_a_az434; assert_equal("Total", worksheet.xi_a_az434); end
  def test_xi_a_ba432; assert_in_epsilon(6.856968654500153, worksheet.xi_a_ba432, 0.001); end
  def test_xi_a_ba433; assert_in_delta(0.9051562640147889, worksheet.xi_a_ba433, 0.001); end
  def test_xi_a_ba434; assert_in_epsilon(7.7621249185149415, worksheet.xi_a_ba434, 0.001); end
  def test_xi_a_bb432; assert_in_epsilon(5.492417104549999, worksheet.xi_a_bb432, 0.001); end
  def test_xi_a_bb433; assert_in_epsilon(1.1712144958105828, worksheet.xi_a_bb433, 0.001); end
  def test_xi_a_bb434; assert_in_epsilon(6.663631600360582, worksheet.xi_a_bb434, 0.001); end
  def test_xi_a_bc432; assert_in_epsilon(5.298291120800074, worksheet.xi_a_bc432, 0.001); end
  def test_xi_a_bc433; assert_in_epsilon(1.1550535429748334, worksheet.xi_a_bc433, 0.001); end
  def test_xi_a_bc434; assert_in_epsilon(6.4533446637749075, worksheet.xi_a_bc434, 0.001); end
  def test_xi_a_bd432; assert_in_epsilon(5.108835235259777, worksheet.xi_a_bd432, 0.001); end
  def test_xi_a_bd433; assert_in_epsilon(1.1390039170242898, worksheet.xi_a_bd433, 0.001); end
  def test_xi_a_bd434; assert_in_epsilon(6.247839152284067, worksheet.xi_a_bd434, 0.001); end
  def test_xi_a_be432; assert_in_epsilon(4.267839137378837, worksheet.xi_a_be432, 0.001); end
  def test_xi_a_be433; assert_in_epsilon(1.1230656179589524, worksheet.xi_a_be433, 0.001); end
  def test_xi_a_be434; assert_in_epsilon(5.39090475533779, worksheet.xi_a_be434, 0.001); end
  def test_xi_a_bf432; assert_in_epsilon(4.1510684777516085, worksheet.xi_a_bf432, 0.001); end
  def test_xi_a_bf433; assert_in_epsilon(1.1072386457788213, worksheet.xi_a_bf433, 0.001); end
  def test_xi_a_bf434; assert_in_epsilon(5.25830712353043, worksheet.xi_a_bf434, 0.001); end
  def test_xi_a_bg432; assert_in_epsilon(4.03674867751894, worksheet.xi_a_bg432, 0.001); end
  def test_xi_a_bg433; assert_in_epsilon(1.091523000483896, worksheet.xi_a_bg433, 0.001); end
  def test_xi_a_bg434; assert_in_epsilon(5.128271678002836, worksheet.xi_a_bg434, 0.001); end
  def test_xi_a_bh432; assert_in_epsilon(3.924844628005321, worksheet.xi_a_bh432, 0.001); end
  def test_xi_a_bh433; assert_in_epsilon(1.0759186820741768, worksheet.xi_a_bh433, 0.001); end
  def test_xi_a_bh434; assert_in_epsilon(5.000763310079497, worksheet.xi_a_bh434, 0.001); end
  def test_xi_a_bi405; assert_in_epsilon(3.8153214777791433, worksheet.xi_a_bi405, 0.001); end
  def test_xi_a_bi432; assert_in_delta(0.5722982216668716, worksheet.xi_a_bi432, 0.001); end
  def test_xi_a_bi406; assert_in_epsilon(1.0604256905496638, worksheet.xi_a_bi406, 0.001); end
  def test_xi_a_bi433; assert_in_epsilon(1.0604256905496638, worksheet.xi_a_bi433, 0.001); end
  def test_xi_a_bi434; assert_in_epsilon(1.6327239122165356, worksheet.xi_a_bi434, 0.001); end
  def test_xi_a_bl434; assert_equal("Total", worksheet.xi_a_bl434); end
  def test_xi_a_bm434; assert_in_delta(0, (worksheet.xi_a_bm434||0), 0.001); end
  def test_xi_a_bn434; assert_in_epsilon(20.110329101957802, worksheet.xi_a_bn434, 0.001); end
  def test_xi_a_bo434; assert_in_epsilon(42.92040078851744, worksheet.xi_a_bo434, 0.001); end
  def test_xi_a_bp434; assert_in_epsilon(68.2622265050662, worksheet.xi_a_bp434, 0.001); end
  def test_xi_a_bq434; assert_in_epsilon(54.44062487110506, worksheet.xi_a_bq434, 0.001); end
  def test_xi_a_br434; assert_in_epsilon(67.65687507594129, worksheet.xi_a_br434, 0.001); end
  def test_xi_a_bs434; assert_in_epsilon(80.69698842834157, worksheet.xi_a_bs434, 0.001); end
  def test_xi_a_bt434; assert_in_epsilon(93.55228756382587, worksheet.xi_a_bt434, 0.001); end
  def test_xi_a_bu434; assert_in_epsilon(130.84854880502013, worksheet.xi_a_bu434, 0.001); end
  def test_xi_a_bx434; assert_equal("Total", worksheet.xi_a_bx434); end
  def test_xi_a_by434; assert_in_delta(0, (worksheet.xi_a_by434||0), 0.001); end
  def test_xi_a_bz434; assert_in_epsilon(-20.110329101957802, worksheet.xi_a_bz434, 0.001); end
  def test_xi_a_ca434; assert_in_epsilon(-42.92040078851744, worksheet.xi_a_ca434, 0.001); end
  def test_xi_a_cb434; assert_in_epsilon(-68.2622265050662, worksheet.xi_a_cb434, 0.001); end
  def test_xi_a_cc434; assert_in_epsilon(-54.44062487110506, worksheet.xi_a_cc434, 0.001); end
  def test_xi_a_cd434; assert_in_epsilon(-67.65687507594129, worksheet.xi_a_cd434, 0.001); end
  def test_xi_a_ce434; assert_in_epsilon(-80.69698842834157, worksheet.xi_a_ce434, 0.001); end
  def test_xi_a_cf434; assert_in_epsilon(-93.55228756382587, worksheet.xi_a_cf434, 0.001); end
  def test_xi_a_cg434; assert_in_epsilon(30.495891794030882, worksheet.xi_a_cg434, 0.001); end
  def test_xi_a_o435; assert_equal("TWh", worksheet.xi_a_o435); end
  def test_xi_a_q433; assert_in_delta(0.0024165831003063287, worksheet.xi_a_q433, 0.001); end
  def test_xi_a_q435; assert_in_epsilon(38.17081383255731, worksheet.xi_a_q435, 0.001); end
  def test_xi_a_r433; assert_in_delta(0.002401479455929414, worksheet.xi_a_r433, 0.001); end
  def test_xi_a_r435; assert_in_epsilon(34.54304334061753, worksheet.xi_a_r435, 0.001); end
  def test_xi_a_s433; assert_in_delta(0.0023863758115524997, worksheet.xi_a_s433, 0.001); end
  def test_xi_a_s435; assert_in_epsilon(34.066402643095586, worksheet.xi_a_s435, 0.001); end
  def test_xi_a_t433; assert_in_delta(0.002371272167175585, worksheet.xi_a_t433, 0.001); end
  def test_xi_a_t435; assert_in_epsilon(33.593045348771255, worksheet.xi_a_t435, 0.001); end
  def test_xi_a_u433; assert_in_delta(0.0023561685227986703, worksheet.xi_a_u433, 0.001); end
  def test_xi_a_u435; assert_in_epsilon(25.766765674012305, worksheet.xi_a_u435, 0.001); end
  def test_xi_a_v433; assert_in_delta(0.002341064878421756, worksheet.xi_a_v433, 0.001); end
  def test_xi_a_v435; assert_in_epsilon(25.403643629339882, worksheet.xi_a_v435, 0.001); end
  def test_xi_a_w433; assert_in_delta(0.0023259612340448413, worksheet.xi_a_w433, 0.001); end
  def test_xi_a_w435; assert_in_epsilon(25.043075784278287, worksheet.xi_a_w435, 0.001); end
  def test_xi_a_x433; assert_in_delta(0.002310857589667927, worksheet.xi_a_x433, 0.001); end
  def test_xi_a_x435; assert_in_epsilon(24.68506213882751, worksheet.xi_a_x435, 0.001); end
  def test_xi_a_y433; assert_in_delta(0.0022957539452910123, worksheet.xi_a_y433, 0.001); end
  def test_xi_a_y435; assert_in_epsilon(25.399800367504614, worksheet.xi_a_y435, 0.001); end
  def test_xi_a_aa435; assert_equal("V.04", worksheet.xi_a_aa435); end
  def test_xi_a_ab435; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab435); end
  def test_xi_a_ac435; assert_in_delta(0.0769633504792937, worksheet.xi_a_ac435, 0.001); end
  def test_xi_a_ad435; assert_in_delta(0.07995515825027222, worksheet.xi_a_ad435, 0.001); end
  def test_xi_a_ae435; assert_in_delta(0.08294696602125096, worksheet.xi_a_ae435, 0.001); end
  def test_xi_a_af435; assert_in_delta(0.0859387737922297, worksheet.xi_a_af435, 0.001); end
  def test_xi_a_ag435; assert_in_delta(0.11076643708199085, worksheet.xi_a_ag435, 0.001); end
  def test_xi_a_ah435; assert_in_delta(0.11294807360510395, worksheet.xi_a_ah435, 0.001); end
  def test_xi_a_ai435; assert_in_delta(0.1151297101282166, worksheet.xi_a_ai435, 0.001); end
  def test_xi_a_aj435; assert_in_delta(0.11731134665133003, worksheet.xi_a_aj435, 0.001); end
  def test_xi_a_ak435; assert_in_delta(0.11949298317444279, worksheet.xi_a_ak435, 0.001); end
  def test_xi_a_ay435; assert_equal("Process", worksheet.xi_a_ay435); end
  def test_xi_a_az435; assert_equal("Oxygen Steel", worksheet.xi_a_az435); end
  def test_xi_a_bk435; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bk435); end
  def test_xi_a_bl435; assert_equal("Oxygen Steel", worksheet.xi_a_bl435); end
  def test_xi_a_ac439; assert_in_epsilon(17.66775555414779, worksheet.xi_a_ac439, 0.001); end
  def test_xi_a_ac413; assert_in_epsilon(17.66775555414779, worksheet.xi_a_ac413, 0.001); end
  def test_xi_a_bm382; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_a_bm382, 0.001); end
  def test_xi_a_bm405; assert_in_delta(0, (worksheet.xi_a_bm405||0), 0.001); end
  def test_xi_a_bm408; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_a_bm408, 0.001); end
  def test_xi_a_bm432; assert_in_delta(0, (worksheet.xi_a_bm432||0), 0.001); end
  def test_xi_a_bm435; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_a_bm435, 0.001); end
  def test_xi_a_ad439; assert_in_epsilon(18.459496621376893, worksheet.xi_a_ad439, 0.001); end
  def test_xi_a_ad413; assert_in_epsilon(17.87731488065253, worksheet.xi_a_ad413, 0.001); end
  def test_xi_a_bn382; assert_in_epsilon(-99.11400432623293, worksheet.xi_a_bn382, 0.001); end
  def test_xi_a_bn405; assert_in_epsilon(-4.610705106151556, worksheet.xi_a_bn405, 0.001); end
  def test_xi_a_bn408; assert_in_epsilon(-103.72470943238449, worksheet.xi_a_bn408, 0.001); end
  def test_xi_a_bn432; assert_in_epsilon(14.887524955275637, worksheet.xi_a_bn432, 0.001); end
  def test_xi_a_bn435; assert_in_epsilon(-88.83718447710885, worksheet.xi_a_bn435, 0.001); end
  def test_xi_a_ae439; assert_in_epsilon(18.576047887839366, worksheet.xi_a_ae439, 0.001); end
  def test_xi_a_ae413; assert_in_epsilon(17.31614377532761, worksheet.xi_a_ae413, 0.001); end
  def test_xi_a_bo382; assert_in_epsilon(-99.4138010700675, worksheet.xi_a_bo382, 0.001); end
  def test_xi_a_bo405; assert_in_epsilon(-8.357843321537018, worksheet.xi_a_bo405, 0.001); end
  def test_xi_a_bo408; assert_in_epsilon(-107.77164439160453, worksheet.xi_a_bo408, 0.001); end
  def test_xi_a_bo432; assert_in_epsilon(31.773648983560406, worksheet.xi_a_bo432, 0.001); end
  def test_xi_a_bo435; assert_in_epsilon(-75.99799540804412, worksheet.xi_a_bo435, 0.001); end
  def test_xi_a_af439; assert_in_epsilon(19.651942026680775, worksheet.xi_a_af439, 0.001); end
  def test_xi_a_af413; assert_in_epsilon(17.619907544651802, worksheet.xi_a_af413, 0.001); end
  def test_xi_a_bp382; assert_in_epsilon(-104.37881852060542, worksheet.xi_a_bp382, 0.001); end
  def test_xi_a_bp405; assert_in_epsilon(-11.0443846195908, worksheet.xi_a_bp405, 0.001); end
  def test_xi_a_bp408; assert_in_epsilon(-115.42320314019622, worksheet.xi_a_bp408, 0.001); end
  def test_xi_a_bp432; assert_in_epsilon(50.53401142490088, worksheet.xi_a_bp432, 0.001); end
  def test_xi_a_bp435; assert_in_epsilon(-64.88919171529534, worksheet.xi_a_bp435, 0.001); end
  def test_xi_a_ag439; assert_in_epsilon(26.00915256631363, worksheet.xi_a_ag439, 0.001); end
  def test_xi_a_ag413; assert_in_epsilon(23.896329189105195, worksheet.xi_a_ag413, 0.001); end
  def test_xi_a_bq382; assert_in_epsilon(-70.14097915490663, worksheet.xi_a_bq382, 0.001); end
  def test_xi_a_bq405; assert_in_epsilon(-6.375035985489376, worksheet.xi_a_bq405, 0.001); end
  def test_xi_a_bq408; assert_in_epsilon(-76.51601514039601, worksheet.xi_a_bq408, 0.001); end
  def test_xi_a_bq432; assert_in_epsilon(36.265514943499625, worksheet.xi_a_bq432, 0.001); end
  def test_xi_a_bq435; assert_in_epsilon(-40.25050019689638, worksheet.xi_a_bq435, 0.001); end
  def test_xi_a_ah439; assert_in_epsilon(25.167822278297567, worksheet.xi_a_ah439, 0.001); end
  def test_xi_a_ah413; assert_in_epsilon(22.50454782589574, worksheet.xi_a_ah413, 0.001); end
  def test_xi_a_br382; assert_in_epsilon(-61.293598129107124, worksheet.xi_a_br382, 0.001); end
  def test_xi_a_br405; assert_in_epsilon(-7.628327278356551, worksheet.xi_a_br405, 0.001); end
  def test_xi_a_br408; assert_in_epsilon(-68.92192540746368, worksheet.xi_a_br408, 0.001); end
  def test_xi_a_br432; assert_in_epsilon(45.06949396532946, worksheet.xi_a_br432, 0.001); end
  def test_xi_a_br435; assert_in_epsilon(-23.85243144213422, worksheet.xi_a_br435, 0.001); end
  def test_xi_a_ai439; assert_in_epsilon(24.45428725193612, worksheet.xi_a_ai439, 0.001); end
  def test_xi_a_ai413; assert_in_epsilon(21.231959885942118, worksheet.xi_a_ai413, 0.001); end
  def test_xi_a_bs382; assert_in_epsilon(-52.70941506749574, worksheet.xi_a_bs382, 0.001); end
  def test_xi_a_bs405; assert_in_epsilon(-8.746155437205346, worksheet.xi_a_bs405, 0.001); end
  def test_xi_a_bs408; assert_in_epsilon(-61.455570504701086, worksheet.xi_a_bs408, 0.001); end
  def test_xi_a_bs432; assert_in_epsilon(53.75613977011341, worksheet.xi_a_bs432, 0.001); end
  def test_xi_a_bs435; assert_in_epsilon(-7.699430734587679, worksheet.xi_a_bs435, 0.001); end
  def test_xi_a_aj439; assert_in_epsilon(23.752934826461363, worksheet.xi_a_aj439, 0.001); end
  def test_xi_a_aj413; assert_in_epsilon(19.96310083545528, worksheet.xi_a_aj413, 0.001); end
  def test_xi_a_bt382; assert_in_epsilon(-43.66159775205284, worksheet.xi_a_bt382, 0.001); end
  def test_xi_a_bt405; assert_in_epsilon(-9.729315744396217, worksheet.xi_a_bt405, 0.001); end
  def test_xi_a_bt408; assert_in_epsilon(-53.39091349644906, worksheet.xi_a_bt408, 0.001); end
  def test_xi_a_bt432; assert_in_epsilon(62.31967194860806, worksheet.xi_a_bt432, 0.001); end
  def test_xi_a_bt435; assert_in_epsilon(8.928758452159002, worksheet.xi_a_bt435, 0.001); end
  def test_xi_a_ak439; assert_in_epsilon(23.018281422460177, worksheet.xi_a_ak439, 0.001); end
  def test_xi_a_ak413; assert_in_epsilon(18.65263522200093, worksheet.xi_a_ak413, 0.001); end
  def test_xi_a_bu382; assert_in_epsilon(-33.82832302162234, worksheet.xi_a_bu382, 0.001); end
  def test_xi_a_bu405; assert_in_epsilon(-10.578836034239657, worksheet.xi_a_bu405, 0.001); end
  def test_xi_a_bu408; assert_in_epsilon(-44.407159055861996, worksheet.xi_a_bu408, 0.001); end
  def test_xi_a_bu432; assert_in_epsilon(95.3886494552716, worksheet.xi_a_bu432, 0.001); end
  def test_xi_a_bu435; assert_in_epsilon(50.98149039940961, worksheet.xi_a_bu435, 0.001); end
  def test_xi_a_bw435; assert_equal("Cum Cost vs baseline", worksheet.xi_a_bw435); end
  def test_xi_a_bx435; assert_equal("Oxygen Steel", worksheet.xi_a_bx435); end
  def test_xi_a_by432; assert_in_delta(0, (worksheet.xi_a_by432||0), 0.001); end
  def test_xi_a_by435; assert_in_delta(-4.192202140984591e-13, worksheet.xi_a_by435, 0.001); end
  def test_xi_a_bz432; assert_in_epsilon(-14.887524955275637, worksheet.xi_a_bz432, 0.001); end
  def test_xi_a_bz435; assert_in_epsilon(163.78056719374223, worksheet.xi_a_bz435, 0.001); end
  def test_xi_a_ca432; assert_in_epsilon(-31.773648983560406, worksheet.xi_a_ca432, 0.001); end
  def test_xi_a_ca435; assert_in_epsilon(151.45850416991362, worksheet.xi_a_ca435, 0.001); end
  def test_xi_a_cb432; assert_in_epsilon(-50.53401142490088, worksheet.xi_a_cb432, 0.001); end
  def test_xi_a_cb435; assert_in_epsilon(142.03852537803303, worksheet.xi_a_cb435, 0.001); end
  def test_xi_a_cc432; assert_in_epsilon(-36.265514943499625, worksheet.xi_a_cc432, 0.001); end
  def test_xi_a_cc435; assert_in_epsilon(649.1765494480705, worksheet.xi_a_cc435, 0.001); end
  def test_xi_a_cd432; assert_in_epsilon(-45.06949396532946, worksheet.xi_a_cd432, 0.001); end
  def test_xi_a_cd435; assert_in_epsilon(626.3392383447367, worksheet.xi_a_cd435, 0.001); end
  def test_xi_a_ce432; assert_in_epsilon(-53.75613977011341, worksheet.xi_a_ce432, 0.001); end
  def test_xi_a_ce435; assert_in_epsilon(603.7023134204335, worksheet.xi_a_ce435, 0.001); end
  def test_xi_a_cf432; assert_in_epsilon(-62.31967194860806, worksheet.xi_a_cf432, 0.001); end
  def test_xi_a_cf435; assert_in_epsilon(580.5467303862055, worksheet.xi_a_cf435, 0.001); end
  def test_xi_a_cg432; assert_in_epsilon(65.95579114377941, worksheet.xi_a_cg432, 0.001); end
  def test_xi_a_cg435; assert_in_epsilon(693.2687971837494, worksheet.xi_a_cg435, 0.001); end
  def test_xi_a_aa436; assert_equal("V.06", worksheet.xi_a_aa436); end
  def test_xi_a_ab436; assert_equal("Blast furnace gas", worksheet.xi_a_ab436); end
  def test_xi_a_am436; assert_equal("Fugitive emissions intensity (MMtCO2e/Kt)", worksheet.xi_a_am436); end
  def test_xi_a_az436; assert_equal("Electric Steel", worksheet.xi_a_az436); end
  def test_xi_a_bl436; assert_equal("Electric Steel", worksheet.xi_a_bl436); end
  def test_xi_a_bm383; assert_in_delta(-2.842170943040401e-14, worksheet.xi_a_bm383, 0.001); end
  def test_xi_a_bm406; assert_in_delta(0, (worksheet.xi_a_bm406||0), 0.001); end
  def test_xi_a_bm409; assert_in_delta(-2.842170943040401e-14, worksheet.xi_a_bm409, 0.001); end
  def test_xi_a_bm433; assert_in_delta(0, (worksheet.xi_a_bm433||0), 0.001); end
  def test_xi_a_bm436; assert_in_delta(-2.842170943040401e-14, worksheet.xi_a_bm436, 0.001); end
  def test_xi_a_bn383; assert_in_epsilon(37.508903836261055, worksheet.xi_a_bn383, 0.001); end
  def test_xi_a_bn406; assert_in_epsilon(-1.6175159954310345, worksheet.xi_a_bn406, 0.001); end
  def test_xi_a_bn409; assert_in_epsilon(35.89138784083002, worksheet.xi_a_bn409, 0.001); end
  def test_xi_a_bn433; assert_in_epsilon(5.222804146682165, worksheet.xi_a_bn433, 0.001); end
  def test_xi_a_bn436; assert_in_epsilon(41.114191987512186, worksheet.xi_a_bn436, 0.001); end
  def test_xi_a_bo383; assert_in_epsilon(35.28857147723622, worksheet.xi_a_bo383, 0.001); end
  def test_xi_a_bo406; assert_in_epsilon(-2.932077621241831, worksheet.xi_a_bo406, 0.001); end
  def test_xi_a_bo409; assert_in_epsilon(32.35649385599439, worksheet.xi_a_bo409, 0.001); end
  def test_xi_a_bo433; assert_in_epsilon(11.146751804957034, worksheet.xi_a_bo433, 0.001); end
  def test_xi_a_bo436; assert_in_epsilon(43.50324566095142, worksheet.xi_a_bo436, 0.001); end
  def test_xi_a_bp383; assert_in_epsilon(34.72432543178515, worksheet.xi_a_bp383, 0.001); end
  def test_xi_a_bp406; assert_in_epsilon(-3.8745632979315587, worksheet.xi_a_bp406, 0.001); end
  def test_xi_a_bp409; assert_in_epsilon(30.849762133853588, worksheet.xi_a_bp409, 0.001); end
  def test_xi_a_bp433; assert_in_epsilon(17.728215080165313, worksheet.xi_a_bp433, 0.001); end
  def test_xi_a_bp436; assert_in_epsilon(48.5779772140189, worksheet.xi_a_bp436, 0.001); end
  def test_xi_a_bq383; assert_in_epsilon(100.7387357113222, worksheet.xi_a_bq383, 0.001); end
  def test_xi_a_bq406; assert_in_epsilon(-3.1949630388324977, worksheet.xi_a_bq406, 0.001); end
  def test_xi_a_bq409; assert_in_epsilon(97.54377267248971, worksheet.xi_a_bq409, 0.001); end
  def test_xi_a_bq433; assert_in_epsilon(18.175109927605433, worksheet.xi_a_bq433, 0.001); end
  def test_xi_a_bq436; assert_in_epsilon(115.71888260009514, worksheet.xi_a_bq436, 0.001); end
  def test_xi_a_br383; assert_in_epsilon(94.86206536014646, worksheet.xi_a_br383, 0.001); end
  def test_xi_a_br406; assert_in_epsilon(-3.823072333700111, worksheet.xi_a_br406, 0.001); end
  def test_xi_a_br409; assert_in_epsilon(91.03899302644635, worksheet.xi_a_br409, 0.001); end
  def test_xi_a_br433; assert_in_epsilon(22.58738111061183, worksheet.xi_a_br433, 0.001); end
  def test_xi_a_br436; assert_in_epsilon(113.62637413705818, worksheet.xi_a_br436, 0.001); end
  def test_xi_a_bs383; assert_in_epsilon(89.64239614366879, worksheet.xi_a_bs383, 0.001); end
  def test_xi_a_bs406; assert_in_epsilon(-4.383291861780805, worksheet.xi_a_bs406, 0.001); end
  def test_xi_a_bs409; assert_in_epsilon(85.25910428188799, worksheet.xi_a_bs409, 0.001); end
  def test_xi_a_bs433; assert_in_epsilon(26.940848658228163, worksheet.xi_a_bs433, 0.001); end
  def test_xi_a_bs436; assert_in_epsilon(112.19995294011615, worksheet.xi_a_bs436, 0.001); end
  def test_xi_a_bt383; assert_in_epsilon(84.68532640245304, worksheet.xi_a_bt383, 0.001); end
  def test_xi_a_bt406; assert_in_epsilon(-4.876020193020281, worksheet.xi_a_bt406, 0.001); end
  def test_xi_a_bt409; assert_in_epsilon(79.80930620943276, worksheet.xi_a_bt409, 0.001); end
  def test_xi_a_bt433; assert_in_epsilon(31.23261561521781, worksheet.xi_a_bt433, 0.001); end
  def test_xi_a_bt436; assert_in_epsilon(111.04192182465057, worksheet.xi_a_bt436, 0.001); end
  def test_xi_a_bu383; assert_in_epsilon(79.854860587502, worksheet.xi_a_bu383, 0.001); end
  def test_xi_a_bu406; assert_in_epsilon(-5.301772444923813, worksheet.xi_a_bu406, 0.001); end
  def test_xi_a_bu409; assert_in_epsilon(74.55308814257819, worksheet.xi_a_bu409, 0.001); end
  def test_xi_a_bu433; assert_in_epsilon(35.459899349748525, worksheet.xi_a_bu433, 0.001); end
  def test_xi_a_bu436; assert_in_epsilon(110.01298749232672, worksheet.xi_a_bu436, 0.001); end
  def test_xi_a_bx436; assert_equal("Electric Steel", worksheet.xi_a_bx436); end
  def test_xi_a_by433; assert_in_delta(0, (worksheet.xi_a_by433||0), 0.001); end
  def test_xi_a_by436; assert_in_delta(5.684341886080802e-14, worksheet.xi_a_by436, 0.001); end
  def test_xi_a_bz433; assert_in_epsilon(-5.222804146682165, worksheet.xi_a_bz433, 0.001); end
  def test_xi_a_bz436; assert_in_epsilon(-75.69668748091492, worksheet.xi_a_bz436, 0.001); end
  def test_xi_a_ca433; assert_in_epsilon(-11.146751804957034, worksheet.xi_a_ca433, 0.001); end
  def test_xi_a_ca436; assert_in_epsilon(-78.10205181737508, worksheet.xi_a_ca436, 0.001); end
  def test_xi_a_cb433; assert_in_epsilon(-17.728215080165313, worksheet.xi_a_cb433, 0.001); end
  def test_xi_a_cb436; assert_in_epsilon(-82.77900739917972, worksheet.xi_a_cb436, 0.001); end
  def test_xi_a_cc433; assert_in_epsilon(-18.175109927605433, worksheet.xi_a_cc433, 0.001); end
  def test_xi_a_cc436; assert_in_epsilon(-148.99367636588164, worksheet.xi_a_cc436, 0.001); end
  def test_xi_a_cd433; assert_in_epsilon(-22.58738111061183, worksheet.xi_a_cd433, 0.001); end
  def test_xi_a_cd436; assert_in_epsilon(-146.78460514508248, worksheet.xi_a_cd436, 0.001); end
  def test_xi_a_ce433; assert_in_epsilon(-26.940848658228163, worksheet.xi_a_ce433, 0.001); end
  def test_xi_a_ce436; assert_in_epsilon(-145.28402084826004, worksheet.xi_a_ce436, 0.001); end
  def test_xi_a_cf433; assert_in_epsilon(-31.23261561521781, worksheet.xi_a_cf433, 0.001); end
  def test_xi_a_cf436; assert_in_epsilon(-144.0936187563632, worksheet.xi_a_cf436, 0.001); end
  def test_xi_a_cg433; assert_in_epsilon(-35.459899349748525, worksheet.xi_a_cg433, 0.001); end
  def test_xi_a_cg436; assert_in_epsilon(-143.07349333241348, worksheet.xi_a_cg436, 0.001); end
  def test_xi_a_aa437; assert_equal("V.07", worksheet.xi_a_aa437); end
  def test_xi_a_ab437; assert_equal("Heat transport", worksheet.xi_a_ab437); end
  def test_xi_a_ac437; assert_in_delta(-0.054587625239247047, worksheet.xi_a_ac437, 0.001); end
  def test_xi_a_ad437; assert_in_delta(-0.05458762523924706, worksheet.xi_a_ad437, 0.001); end
  def test_xi_a_ae437; assert_in_delta(-0.05458762523924703, worksheet.xi_a_ae437, 0.001); end
  def test_xi_a_af437; assert_in_delta(-0.05458762523924704, worksheet.xi_a_af437, 0.001); end
  def test_xi_a_ag437; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ag437, 0.001); end
  def test_xi_a_ah437; assert_in_delta(-0.07237360762106047, worksheet.xi_a_ah437, 0.001); end
  def test_xi_a_ai437; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ai437, 0.001); end
  def test_xi_a_aj437; assert_in_delta(-0.07237360762106046, worksheet.xi_a_aj437, 0.001); end
  def test_xi_a_ak437; assert_in_delta(-0.07237360762106049, worksheet.xi_a_ak437, 0.001); end
  def test_xi_a_am437; assert_equal("Industry", worksheet.xi_a_am437); end
  def test_xi_a_an437; assert_equal("Description", worksheet.xi_a_an437); end
  def test_xi_a_ao437; assert_in_epsilon(2010, worksheet.xi_a_ao437, 0.001); end
  def test_xi_a_ap437; assert_in_epsilon(2015, worksheet.xi_a_ap437, 0.001); end
  def test_xi_a_aq437; assert_in_epsilon(2020, worksheet.xi_a_aq437, 0.001); end
  def test_xi_a_ar437; assert_in_epsilon(2025, worksheet.xi_a_ar437, 0.001); end
  def test_xi_a_as437; assert_in_epsilon(2030, worksheet.xi_a_as437, 0.001); end
  def test_xi_a_at437; assert_in_epsilon(2035, worksheet.xi_a_at437, 0.001); end
  def test_xi_a_au437; assert_in_epsilon(2040, worksheet.xi_a_au437, 0.001); end
  def test_xi_a_av437; assert_in_epsilon(2045, worksheet.xi_a_av437, 0.001); end
  def test_xi_a_aw437; assert_in_epsilon(2050, worksheet.xi_a_aw437, 0.001); end
  def test_xi_a_az437; assert_equal("Total", worksheet.xi_a_az437); end
  def test_xi_a_ba435; assert_in_delta(0, (worksheet.xi_a_ba435||0), 0.001); end
  def test_xi_a_ba436; assert_in_delta(0.9210501796116506, worksheet.xi_a_ba436, 0.001); end
  def test_xi_a_ba437; assert_in_delta(0.9210501796116506, worksheet.xi_a_ba437, 0.001); end
  def test_xi_a_bb435; assert_in_delta(0, (worksheet.xi_a_bb435||0), 0.001); end
  def test_xi_a_bb436; assert_in_epsilon(1.1992756822626085, worksheet.xi_a_bb436, 0.001); end
  def test_xi_a_bb437; assert_in_epsilon(1.1992756822626085, worksheet.xi_a_bb437, 0.001); end
  def test_xi_a_bc435; assert_in_delta(0, (worksheet.xi_a_bc435||0), 0.001); end
  def test_xi_a_bc436; assert_in_epsilon(1.1902131456208256, worksheet.xi_a_bc436, 0.001); end
  def test_xi_a_bc437; assert_in_epsilon(1.1902131456208256, worksheet.xi_a_bc437, 0.001); end
  def test_xi_a_bd435; assert_in_delta(0, (worksheet.xi_a_bd435||0), 0.001); end
  def test_xi_a_bd436; assert_in_epsilon(1.1811506089790427, worksheet.xi_a_bd436, 0.001); end
  def test_xi_a_bd437; assert_in_epsilon(1.1811506089790427, worksheet.xi_a_bd437, 0.001); end
  def test_xi_a_be435; assert_in_delta(0, (worksheet.xi_a_be435||0), 0.001); end
  def test_xi_a_be436; assert_in_epsilon(1.1720880723372598, worksheet.xi_a_be436, 0.001); end
  def test_xi_a_be437; assert_in_epsilon(1.1720880723372598, worksheet.xi_a_be437, 0.001); end
  def test_xi_a_bf435; assert_in_delta(0, (worksheet.xi_a_bf435||0), 0.001); end
  def test_xi_a_bf436; assert_in_epsilon(1.1630255356954768, worksheet.xi_a_bf436, 0.001); end
  def test_xi_a_bf437; assert_in_epsilon(1.1630255356954768, worksheet.xi_a_bf437, 0.001); end
  def test_xi_a_bg435; assert_in_delta(0, (worksheet.xi_a_bg435||0), 0.001); end
  def test_xi_a_bg436; assert_in_epsilon(1.153962999053694, worksheet.xi_a_bg436, 0.001); end
  def test_xi_a_bg437; assert_in_epsilon(1.153962999053694, worksheet.xi_a_bg437, 0.001); end
  def test_xi_a_bh435; assert_in_delta(0, (worksheet.xi_a_bh435||0), 0.001); end
  def test_xi_a_bh436; assert_in_epsilon(1.144900462411911, worksheet.xi_a_bh436, 0.001); end
  def test_xi_a_bh437; assert_in_epsilon(1.144900462411911, worksheet.xi_a_bh437, 0.001); end
  def test_xi_a_bi408; assert_in_delta(0, (worksheet.xi_a_bi408||0), 0.001); end
  def test_xi_a_bi435; assert_in_delta(0, (worksheet.xi_a_bi435||0), 0.001); end
  def test_xi_a_bi409; assert_in_epsilon(1.135837925770128, worksheet.xi_a_bi409, 0.001); end
  def test_xi_a_bi436; assert_in_epsilon(1.135837925770128, worksheet.xi_a_bi436, 0.001); end
  def test_xi_a_bi437; assert_in_epsilon(1.135837925770128, worksheet.xi_a_bi437, 0.001); end
  def test_xi_a_bl437; assert_equal("Total", worksheet.xi_a_bl437); end
  def test_xi_a_bm437; assert_in_delta(-1.4210854715202004e-13, worksheet.xi_a_bm437, 0.001); end
  def test_xi_a_bn437; assert_in_epsilon(-47.72299248959666, worksheet.xi_a_bn437, 0.001); end
  def test_xi_a_bo437; assert_in_epsilon(-32.4947497470927, worksheet.xi_a_bo437, 0.001); end
  def test_xi_a_bp437; assert_in_epsilon(-16.31121450127644, worksheet.xi_a_bp437, 0.001); end
  def test_xi_a_bq437; assert_in_epsilon(75.46838240319876, worksheet.xi_a_bq437, 0.001); end
  def test_xi_a_br437; assert_in_epsilon(89.77394269492396, worksheet.xi_a_br437, 0.001); end
  def test_xi_a_bs437; assert_in_epsilon(104.50052220552847, worksheet.xi_a_bs437, 0.001); end
  def test_xi_a_bt437; assert_in_epsilon(119.97068027680957, worksheet.xi_a_bt437, 0.001); end
  def test_xi_a_bx437; assert_equal("Total", worksheet.xi_a_bx437); end
  def test_xi_a_bz437; assert_in_epsilon(88.08387971282731, worksheet.xi_a_bz437, 0.001); end
  def test_xi_a_ca437; assert_in_epsilon(73.35645235253854, worksheet.xi_a_ca437, 0.001); end
  def test_xi_a_cb437; assert_in_epsilon(59.25951797885331, worksheet.xi_a_cb437, 0.001); end
  def test_xi_a_cc437; assert_in_epsilon(500.1828730821889, worksheet.xi_a_cc437, 0.001); end
  def test_xi_a_cd437; assert_in_epsilon(479.55463319965423, worksheet.xi_a_cd437, 0.001); end
  def test_xi_a_ce437; assert_in_epsilon(458.4182925721734, worksheet.xi_a_ce437, 0.001); end
  def test_xi_a_cf437; assert_in_epsilon(436.4531116298423, worksheet.xi_a_cf437, 0.001); end
  def test_xi_a_aa438; assert_equal("Intensity", worksheet.xi_a_aa438); end
  def test_xi_a_ab438; assert_equal("Intensity", worksheet.xi_a_ab438); end
  def test_xi_a_ac438; assert_in_delta(0.21950983912607064, worksheet.xi_a_ac438, 0.001); end
  def test_xi_a_ad438; assert_in_delta(0.2264790100849759, worksheet.xi_a_ad438, 0.001); end
  def test_xi_a_ae438; assert_in_delta(0.2333946852950955, worksheet.xi_a_ae438, 0.001); end
  def test_xi_a_af438; assert_in_delta(0.24025686475642843, worksheet.xi_a_af438, 0.001); end
  def test_xi_a_ag438; assert_in_delta(0.2823739517751641, worksheet.xi_a_ag438, 0.001); end
  def test_xi_a_ah438; assert_in_delta(0.2872998580867897, worksheet.xi_a_ah438, 0.001); end
  def test_xi_a_ai438; assert_in_delta(0.2921867551142912, worksheet.xi_a_ai438, 0.001); end
  def test_xi_a_aj438; assert_in_delta(0.2970346428576683, worksheet.xi_a_aj438, 0.001); end
  def test_xi_a_ak438; assert_in_delta(0.3018435213169215, worksheet.xi_a_ak438, 0.001); end
  def test_xi_a_am438; assert_equal("(ii)", worksheet.xi_a_am438); end
  def test_xi_a_an438; assert_equal("Oxygen Steel", worksheet.xi_a_an438); end
  def test_xi_a_ao438; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ao438, 0.001); end
  def test_xi_a_ap438; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ap438, 0.001); end
  def test_xi_a_aq438; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aq438, 0.001); end
  def test_xi_a_ar438; assert_in_delta(0.00010402830154161683, worksheet.xi_a_ar438, 0.001); end
  def test_xi_a_as438; assert_in_delta(0.00010402830154161683, worksheet.xi_a_as438, 0.001); end
  def test_xi_a_at438; assert_in_delta(0.00010402830154161683, worksheet.xi_a_at438, 0.001); end
  def test_xi_a_au438; assert_in_delta(0.00010402830154161683, worksheet.xi_a_au438, 0.001); end
  def test_xi_a_av438; assert_in_delta(0.00010402830154161683, worksheet.xi_a_av438, 0.001); end
  def test_xi_a_aw438; assert_in_delta(0.00010402830154161683, worksheet.xi_a_aw438, 0.001); end
  def test_xi_a_ay438; assert_equal("Fugitive", worksheet.xi_a_ay438); end
  def test_xi_a_az438; assert_equal("Oxygen Steel", worksheet.xi_a_az438); end
  def test_xi_a_aa439; assert_equal("Cost", worksheet.xi_a_aa439); end
  def test_xi_a_ab439; assert_equal("Cost", worksheet.xi_a_ab439); end
  def test_xi_a_am439; assert_equal("(iii)", worksheet.xi_a_am439); end
  def test_xi_a_an439; assert_equal("Electric Steel", worksheet.xi_a_an439); end
  def test_xi_a_ao439; assert_in_delta(0, (worksheet.xi_a_ao439||0), 0.001); end
  def test_xi_a_ap439; assert_in_delta(0, (worksheet.xi_a_ap439||0), 0.001); end
  def test_xi_a_aq439; assert_in_delta(0, (worksheet.xi_a_aq439||0), 0.001); end
  def test_xi_a_ar439; assert_in_delta(0, (worksheet.xi_a_ar439||0), 0.001); end
  def test_xi_a_as439; assert_in_delta(0, (worksheet.xi_a_as439||0), 0.001); end
  def test_xi_a_at439; assert_in_delta(0, (worksheet.xi_a_at439||0), 0.001); end
  def test_xi_a_au439; assert_in_delta(0, (worksheet.xi_a_au439||0), 0.001); end
  def test_xi_a_av439; assert_in_delta(0, (worksheet.xi_a_av439||0), 0.001); end
  def test_xi_a_aw439; assert_in_delta(0, (worksheet.xi_a_aw439||0), 0.001); end
  def test_xi_a_az439; assert_equal("Electric Steel", worksheet.xi_a_az439); end
  def test_xi_a_am440; assert_equal("Total", worksheet.xi_a_am440); end
  def test_xi_a_az440; assert_equal("Total", worksheet.xi_a_az440); end
  def test_xi_a_z441; assert_equal("Electrosteel", worksheet.xi_a_z441); end
  def test_xi_a_aa441; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_a_aa441); end
  def test_xi_a_ay441; assert_equal("Total", worksheet.xi_a_ay441); end
  def test_xi_a_az441; assert_equal("Oxygen Steel", worksheet.xi_a_az441); end
  def test_xi_a_ba438; assert_in_delta(0.547604979315071, worksheet.xi_a_ba438, 0.001); end
  def test_xi_a_ba441; assert_in_epsilon(7.4045736338152235, worksheet.xi_a_ba441, 0.001); end
  def test_xi_a_bb438; assert_in_delta(0.4511032918352726, worksheet.xi_a_bb438, 0.001); end
  def test_xi_a_bb441; assert_in_epsilon(5.943520396385272, worksheet.xi_a_bb441, 0.001); end
  def test_xi_a_bc438; assert_in_delta(0.4476944508390363, worksheet.xi_a_bc438, 0.001); end
  def test_xi_a_bc441; assert_in_epsilon(5.74598557163911, worksheet.xi_a_bc441, 0.001); end
  def test_xi_a_bd438; assert_in_delta(0.44428560984279997, worksheet.xi_a_bd438, 0.001); end
  def test_xi_a_bd441; assert_in_epsilon(5.553120845102577, worksheet.xi_a_bd441, 0.001); end
  def test_xi_a_be438; assert_in_delta(0.4408767688465637, worksheet.xi_a_be438, 0.001); end
  def test_xi_a_be441; assert_in_epsilon(4.7087159062254, worksheet.xi_a_be441, 0.001); end
  def test_xi_a_bf438; assert_in_delta(0.4374679278503274, worksheet.xi_a_bf438, 0.001); end
  def test_xi_a_bf441; assert_in_epsilon(4.5885364056019355, worksheet.xi_a_bf441, 0.001); end
  def test_xi_a_bg438; assert_in_delta(0.43405908685409095, worksheet.xi_a_bg438, 0.001); end
  def test_xi_a_bg441; assert_in_epsilon(4.47080776437303, worksheet.xi_a_bg441, 0.001); end
  def test_xi_a_bh438; assert_in_delta(0.4306502458578548, worksheet.xi_a_bh438, 0.001); end
  def test_xi_a_bh441; assert_in_epsilon(4.355494873863176, worksheet.xi_a_bh441, 0.001); end
  def test_xi_a_b442; assert_equal("Cost of industrial CCS capture", worksheet.xi_a_b442); end
  def test_xi_a_aa442; assert_equal("Vector", worksheet.xi_a_aa442); end
  def test_xi_a_ab442; assert_equal("Description", worksheet.xi_a_ab442); end
  def test_xi_a_ac442; assert_in_epsilon(2010, worksheet.xi_a_ac442, 0.001); end
  def test_xi_a_ad442; assert_in_epsilon(2015, worksheet.xi_a_ad442, 0.001); end
  def test_xi_a_ae442; assert_in_epsilon(2020, worksheet.xi_a_ae442, 0.001); end
  def test_xi_a_af442; assert_in_epsilon(2025, worksheet.xi_a_af442, 0.001); end
  def test_xi_a_ag442; assert_in_epsilon(2030, worksheet.xi_a_ag442, 0.001); end
  def test_xi_a_ah442; assert_in_epsilon(2035, worksheet.xi_a_ah442, 0.001); end
  def test_xi_a_ai442; assert_in_epsilon(2040, worksheet.xi_a_ai442, 0.001); end
  def test_xi_a_aj442; assert_in_epsilon(2045, worksheet.xi_a_aj442, 0.001); end
  def test_xi_a_ak442; assert_in_epsilon(2050, worksheet.xi_a_ak442, 0.001); end
  def test_xi_a_az442; assert_equal("Electric Steel", worksheet.xi_a_az442); end
  def test_xi_a_ba439; assert_in_delta(0, (worksheet.xi_a_ba439||0), 0.001); end
  def test_xi_a_ba442; assert_in_epsilon(1.8262064436264396, worksheet.xi_a_ba442, 0.001); end
  def test_xi_a_bb439; assert_in_delta(0, (worksheet.xi_a_bb439||0), 0.001); end
  def test_xi_a_bb442; assert_in_epsilon(2.370490178073191, worksheet.xi_a_bb442, 0.001); end
  def test_xi_a_bc439; assert_in_delta(0, (worksheet.xi_a_bc439||0), 0.001); end
  def test_xi_a_bc442; assert_in_epsilon(2.3452666885956592, worksheet.xi_a_bc442, 0.001); end
  def test_xi_a_bd439; assert_in_delta(0, (worksheet.xi_a_bd439||0), 0.001); end
  def test_xi_a_bd442; assert_in_epsilon(2.3201545260033325, worksheet.xi_a_bd442, 0.001); end
  def test_xi_a_be439; assert_in_delta(0, (worksheet.xi_a_be439||0), 0.001); end
  def test_xi_a_be442; assert_in_epsilon(2.295153690296212, worksheet.xi_a_be442, 0.001); end
  def test_xi_a_bf439; assert_in_delta(0, (worksheet.xi_a_bf439||0), 0.001); end
  def test_xi_a_bf442; assert_in_epsilon(2.270264181474298, worksheet.xi_a_bf442, 0.001); end
  def test_xi_a_bg439; assert_in_delta(0, (worksheet.xi_a_bg439||0), 0.001); end
  def test_xi_a_bg442; assert_in_epsilon(2.24548599953759, worksheet.xi_a_bg442, 0.001); end
  def test_xi_a_bh439; assert_in_delta(0, (worksheet.xi_a_bh439||0), 0.001); end
  def test_xi_a_bh442; assert_in_epsilon(2.2208191444860876, worksheet.xi_a_bh442, 0.001); end
  def test_xi_a_b443; assert_equal("L", worksheet.xi_a_b443); end
  def test_xi_a_c443; assert_equal("Capital cost of industrial CCS capture", worksheet.xi_a_c443); end
  def test_xi_a_aa443; assert_equal("V.01", worksheet.xi_a_aa443); end
  def test_xi_a_ab443; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_ab443); end
  def test_xi_a_ac443; assert_in_delta(0.37661125507716986, worksheet.xi_a_ac443, 0.001); end
  def test_xi_a_ad443; assert_in_delta(0.37661125507716986, worksheet.xi_a_ad443, 0.001); end
  def test_xi_a_ae443; assert_in_delta(0.37661125507716986, worksheet.xi_a_ae443, 0.001); end
  def test_xi_a_af443; assert_in_delta(0.37661125507716986, worksheet.xi_a_af443, 0.001); end
  def test_xi_a_ag443; assert_in_delta(0.37661125507716986, worksheet.xi_a_ag443, 0.001); end
  def test_xi_a_ah443; assert_in_delta(0.37661125507716986, worksheet.xi_a_ah443, 0.001); end
  def test_xi_a_ai443; assert_in_delta(0.37661125507716986, worksheet.xi_a_ai443, 0.001); end
  def test_xi_a_aj443; assert_in_delta(0.37661125507716986, worksheet.xi_a_aj443, 0.001); end
  def test_xi_a_ak443; assert_in_delta(0.37661125507716986, worksheet.xi_a_ak443, 0.001); end
  def test_xi_a_az443; assert_equal("Total", worksheet.xi_a_az443); end
  def test_xi_a_ba443; assert_in_epsilon(9.230780077441663, worksheet.xi_a_ba443, 0.001); end
  def test_xi_a_bb443; assert_in_epsilon(8.314010574458463, worksheet.xi_a_bb443, 0.001); end
  def test_xi_a_bc443; assert_in_epsilon(8.09125226023477, worksheet.xi_a_bc443, 0.001); end
  def test_xi_a_bd443; assert_in_epsilon(7.87327537110591, worksheet.xi_a_bd443, 0.001); end
  def test_xi_a_be443; assert_in_epsilon(7.0038695965216125, worksheet.xi_a_be443, 0.001); end
  def test_xi_a_bf443; assert_in_epsilon(6.858800587076233, worksheet.xi_a_bf443, 0.001); end
  def test_xi_a_bg443; assert_in_epsilon(6.71629376391062, worksheet.xi_a_bg443, 0.001); end
  def test_xi_a_bh443; assert_in_epsilon(6.576314018349263, worksheet.xi_a_bh443, 0.001); end
  def test_xi_a_b444; assert_equal("H", worksheet.xi_a_b444); end
  def test_xi_a_c444; assert_equal("Capital cost of industrial CCS capture", worksheet.xi_a_c444); end
  def test_xi_a_aa444; assert_equal("V.03", worksheet.xi_a_aa444); end
  def test_xi_a_ab444; assert_equal("Solid hydrocarbons", worksheet.xi_a_ab444); end
  def test_xi_a_ac444; assert_in_delta(0.04200640884510868, worksheet.xi_a_ac444, 0.001); end
  def test_xi_a_ad444; assert_in_delta(0.04200640884510868, worksheet.xi_a_ad444, 0.001); end
  def test_xi_a_ae444; assert_in_delta(0.04200640884510868, worksheet.xi_a_ae444, 0.001); end
  def test_xi_a_af444; assert_in_delta(0.04200640884510868, worksheet.xi_a_af444, 0.001); end
  def test_xi_a_ag444; assert_in_delta(0.04200640884510868, worksheet.xi_a_ag444, 0.001); end
  def test_xi_a_ah444; assert_in_delta(0.04200640884510868, worksheet.xi_a_ah444, 0.001); end
  def test_xi_a_ai444; assert_in_delta(0.04200640884510868, worksheet.xi_a_ai444, 0.001); end
  def test_xi_a_aj444; assert_in_delta(0.04200640884510868, worksheet.xi_a_aj444, 0.001); end
  def test_xi_a_ak444; assert_in_delta(0.04200640884510868, worksheet.xi_a_ak444, 0.001); end
  def test_xi_a_b445; assert_equal("L", worksheet.xi_a_b445); end
  def test_xi_a_c445; assert_equal("Operating cost of industrial CCS capture", worksheet.xi_a_c445); end
  def test_xi_a_aa445; assert_equal("V.05", worksheet.xi_a_aa445); end
  def test_xi_a_ab445; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_ab445); end
  def test_xi_a_ac445; assert_in_delta(0.5722074496017227, worksheet.xi_a_ac445, 0.001); end
  def test_xi_a_ad445; assert_in_delta(0.5722074496017227, worksheet.xi_a_ad445, 0.001); end
  def test_xi_a_ae445; assert_in_delta(0.5722074496017227, worksheet.xi_a_ae445, 0.001); end
  def test_xi_a_af445; assert_in_delta(0.5722074496017227, worksheet.xi_a_af445, 0.001); end
  def test_xi_a_ag445; assert_in_delta(0.5722074496017227, worksheet.xi_a_ag445, 0.001); end
  def test_xi_a_ah445; assert_in_delta(0.5722074496017227, worksheet.xi_a_ah445, 0.001); end
  def test_xi_a_ai445; assert_in_delta(0.5722074496017227, worksheet.xi_a_ai445, 0.001); end
  def test_xi_a_aj445; assert_in_delta(0.5722074496017227, worksheet.xi_a_aj445, 0.001); end
  def test_xi_a_ak445; assert_in_delta(0.5722074496017227, worksheet.xi_a_ak445, 0.001); end
  def test_xi_a_b446; assert_equal("H", worksheet.xi_a_b446); end
  def test_xi_a_c446; assert_equal("Operating cost of industrial CCS capture", worksheet.xi_a_c446); end
  def test_xi_a_aa446; assert_equal("V.04", worksheet.xi_a_aa446); end
  def test_xi_a_ab446; assert_equal("Liquid hydrocarbons", worksheet.xi_a_ab446); end
  def test_xi_a_ac446; assert_in_delta(0.009174886475998728, worksheet.xi_a_ac446, 0.001); end
  def test_xi_a_ad446; assert_in_delta(0.009174886475998728, worksheet.xi_a_ad446, 0.001); end
  def test_xi_a_ae446; assert_in_delta(0.009174886475998728, worksheet.xi_a_ae446, 0.001); end
  def test_xi_a_af446; assert_in_delta(0.009174886475998728, worksheet.xi_a_af446, 0.001); end
  def test_xi_a_ag446; assert_in_delta(0.009174886475998728, worksheet.xi_a_ag446, 0.001); end
  def test_xi_a_ah446; assert_in_delta(0.009174886475998728, worksheet.xi_a_ah446, 0.001); end
  def test_xi_a_ai446; assert_in_delta(0.009174886475998728, worksheet.xi_a_ai446, 0.001); end
  def test_xi_a_aj446; assert_in_delta(0.009174886475998728, worksheet.xi_a_aj446, 0.001); end
  def test_xi_a_ak446; assert_in_delta(0.009174886475998728, worksheet.xi_a_ak446, 0.001); end
  def test_xi_a_aa447; assert_equal("V.06", worksheet.xi_a_aa447); end
  def test_xi_a_ab447; assert_equal("Blast furnace gas", worksheet.xi_a_ab447); end
  def test_xi_a_ac447; assert_in_delta(0, (worksheet.xi_a_ac447||0), 0.001); end
  def test_xi_a_ad447; assert_in_delta(0, (worksheet.xi_a_ad447||0), 0.001); end
  def test_xi_a_ae447; assert_in_delta(0, (worksheet.xi_a_ae447||0), 0.001); end
  def test_xi_a_af447; assert_in_delta(0, (worksheet.xi_a_af447||0), 0.001); end
  def test_xi_a_ag447; assert_in_delta(0, (worksheet.xi_a_ag447||0), 0.001); end
  def test_xi_a_ah447; assert_in_delta(0, (worksheet.xi_a_ah447||0), 0.001); end
  def test_xi_a_ai447; assert_in_delta(0, (worksheet.xi_a_ai447||0), 0.001); end
  def test_xi_a_aj447; assert_in_delta(0, (worksheet.xi_a_aj447||0), 0.001); end
  def test_xi_a_ak447; assert_in_delta(0, (worksheet.xi_a_ak447||0), 0.001); end
  def test_xi_a_aa448; assert_equal("V.07", worksheet.xi_a_aa448); end
  def test_xi_a_ab448; assert_equal("Heat transport", worksheet.xi_a_ab448); end
  def test_xi_a_ac448; assert_in_delta(0, (worksheet.xi_a_ac448||0), 0.001); end
  def test_xi_a_ad448; assert_in_delta(0, (worksheet.xi_a_ad448||0), 0.001); end
  def test_xi_a_ae448; assert_in_delta(0, (worksheet.xi_a_ae448||0), 0.001); end
  def test_xi_a_af448; assert_in_delta(0, (worksheet.xi_a_af448||0), 0.001); end
  def test_xi_a_ag448; assert_in_delta(0, (worksheet.xi_a_ag448||0), 0.001); end
  def test_xi_a_ah448; assert_in_delta(0, (worksheet.xi_a_ah448||0), 0.001); end
  def test_xi_a_ai448; assert_in_delta(0, (worksheet.xi_a_ai448||0), 0.001); end
  def test_xi_a_aj448; assert_in_delta(0, (worksheet.xi_a_aj448||0), 0.001); end
  def test_xi_a_ak448; assert_in_delta(0, (worksheet.xi_a_ak448||0), 0.001); end
  def test_xi_a_b449; assert_equal("Outputs", worksheet.xi_a_b449); end
  def test_xi_a_aa449; assert_equal("Intensity", worksheet.xi_a_aa449); end
  def test_xi_a_ab449; assert_equal("Intensity", worksheet.xi_a_ab449); end
  def test_xi_a_ac449; assert_in_delta(0.1305543295866784, worksheet.xi_a_ac449, 0.001); end
  def test_xi_a_ad449; assert_in_delta(0.1305543295866784, worksheet.xi_a_ad449, 0.001); end
  def test_xi_a_ae449; assert_in_delta(0.1305543295866784, worksheet.xi_a_ae449, 0.001); end
  def test_xi_a_af449; assert_in_delta(0.1305543295866784, worksheet.xi_a_af449, 0.001); end
  def test_xi_a_ag449; assert_in_delta(0.1305543295866784, worksheet.xi_a_ag449, 0.001); end
  def test_xi_a_ah449; assert_in_delta(0.1305543295866784, worksheet.xi_a_ah449, 0.001); end
  def test_xi_a_ai449; assert_in_delta(0.1305543295866784, worksheet.xi_a_ai449, 0.001); end
  def test_xi_a_aj449; assert_in_delta(0.1305543295866784, worksheet.xi_a_aj449, 0.001); end
  def test_xi_a_ak449; assert_in_delta(0.1305543295866784, worksheet.xi_a_ak449, 0.001); end
  def test_xi_a_aa450; assert_equal("Cost", worksheet.xi_a_aa450); end
  def test_xi_a_ab450; assert_equal("Cost", worksheet.xi_a_ab450); end
  def test_xi_a_ac450; assert_in_epsilon(39.801388279893324, worksheet.xi_a_ac450, 0.001); end
  def test_xi_a_ad450; assert_in_epsilon(44.377662918782015, worksheet.xi_a_ad450, 0.001); end
  def test_xi_a_ae450; assert_in_epsilon(47.75558031578417, worksheet.xi_a_ae450, 0.001); end
  def test_xi_a_af450; assert_in_epsilon(56.10811707807261, worksheet.xi_a_af450, 0.001); end
  def test_xi_a_ag450; assert_in_epsilon(54.504148805258126, worksheet.xi_a_ag450, 0.001); end
  def test_xi_a_ah450; assert_in_epsilon(51.93412696029573, worksheet.xi_a_ah450, 0.001); end
  def test_xi_a_ai450; assert_in_epsilon(49.85585932067903, worksheet.xi_a_ai450, 0.001); end
  def test_xi_a_aj450; assert_in_epsilon(47.87008662080294, worksheet.xi_a_aj450, 0.001); end
  def test_xi_a_ak450; assert_in_epsilon(45.820359399765564, worksheet.xi_a_ak450, 0.001); end
  def test_xi_a_c451; assert_equal("Energy produced and required", worksheet.xi_a_c451); end
  def test_xi_a_o451; assert_equal("TWh", worksheet.xi_a_o451); end
  def test_xi_a_c453; assert_equal("Vector", worksheet.xi_a_c453); end
  def test_xi_a_d453; assert_equal("Name", worksheet.xi_a_d453); end
  def test_xi_a_e453; assert_equal("Notes", worksheet.xi_a_e453); end
  def test_xi_a_f453; assert_equal("2010", worksheet.xi_a_f453); end
  def test_xi_a_g453; assert_equal("2015", worksheet.xi_a_g453); end
  def test_xi_a_h453; assert_equal("2020", worksheet.xi_a_h453); end
  def test_xi_a_i453; assert_equal("2025", worksheet.xi_a_i453); end
  def test_xi_a_j453; assert_equal("2030", worksheet.xi_a_j453); end
  def test_xi_a_k453; assert_equal("2035", worksheet.xi_a_k453); end
  def test_xi_a_l453; assert_equal("2040", worksheet.xi_a_l453); end
  def test_xi_a_m453; assert_equal("2045", worksheet.xi_a_m453); end
  def test_xi_a_n453; assert_equal("2050", worksheet.xi_a_n453); end
  def test_xi_a_c454; assert_equal("I.01", worksheet.xi_a_c454); end
  def test_xi_a_d454; assert_equal("Industry Heat", worksheet.xi_a_d454); end
  def test_xi_a_c455; assert_equal("I.02", worksheet.xi_a_c455); end
  def test_xi_a_d455; assert_equal("Industry Power", worksheet.xi_a_d455); end
  def test_xi_a_c456; assert_equal("I.03", worksheet.xi_a_c456); end
  def test_xi_a_d456; assert_equal("Industry CHP", worksheet.xi_a_d456); end
  def test_xi_a_f456; assert_in_delta(0, (worksheet.xi_a_f456||0), 0.001); end
  def test_xi_a_g456; assert_in_delta(0, (worksheet.xi_a_g456||0), 0.001); end
  def test_xi_a_h456; assert_in_delta(0, (worksheet.xi_a_h456||0), 0.001); end
  def test_xi_a_i456; assert_in_delta(0, (worksheet.xi_a_i456||0), 0.001); end
  def test_xi_a_j456; assert_in_delta(0, (worksheet.xi_a_j456||0), 0.001); end
  def test_xi_a_k456; assert_in_delta(0, (worksheet.xi_a_k456||0), 0.001); end
  def test_xi_a_l456; assert_in_delta(0, (worksheet.xi_a_l456||0), 0.001); end
  def test_xi_a_m456; assert_in_delta(0, (worksheet.xi_a_m456||0), 0.001); end
  def test_xi_a_n456; assert_in_delta(0, (worksheet.xi_a_n456||0), 0.001); end
  def test_xi_a_c457; assert_equal("V.01", worksheet.xi_a_c457); end
  def test_xi_a_d457; assert_equal("Electricity (delivered to end user)", worksheet.xi_a_d457); end
  def test_xi_a_c458; assert_equal("V.03", worksheet.xi_a_c458); end
  def test_xi_a_d458; assert_equal("Solid hydrocarbons", worksheet.xi_a_d458); end
  def test_xi_a_c459; assert_equal("V.05", worksheet.xi_a_c459); end
  def test_xi_a_d459; assert_equal("Gaseous hydrocarbons", worksheet.xi_a_d459); end
  def test_xi_a_c460; assert_equal("V.04", worksheet.xi_a_c460); end
  def test_xi_a_d460; assert_equal("Liquid hydrocarbons", worksheet.xi_a_d460); end
  def test_xi_a_c461; assert_equal("V.07", worksheet.xi_a_c461); end
  def test_xi_a_d461; assert_equal("Heat transport", worksheet.xi_a_d461); end
  def test_xi_a_c462; assert_equal("Total", worksheet.xi_a_c462); end
  def test_xi_a_f462; assert_in_epsilon(-1.6059000000000008, worksheet.xi_a_f462, 0.001); end
  def test_xi_a_g462; assert_in_epsilon(-1.6059000000000008, worksheet.xi_a_g462, 0.001); end
  def test_xi_a_h462; assert_in_epsilon(-1.6059000000000028, worksheet.xi_a_h462, 0.001); end
  def test_xi_a_i462; assert_in_epsilon(-1.6058999999999959, worksheet.xi_a_i462, 0.001); end
  def test_xi_a_j462; assert_in_epsilon(-1.6059000000000014, worksheet.xi_a_j462, 0.001); end
  def test_xi_a_k462; assert_in_epsilon(-1.605899999999995, worksheet.xi_a_k462, 0.001); end
  def test_xi_a_l462; assert_in_epsilon(-1.6059000000000032, worksheet.xi_a_l462, 0.001); end
  def test_xi_a_m462; assert_in_epsilon(-1.6058999999999994, worksheet.xi_a_m462, 0.001); end
  def test_xi_a_n462; assert_in_epsilon(-1.605899999999997, worksheet.xi_a_n462, 0.001); end
  def test_xi_a_b464; assert_equal("Emissions", worksheet.xi_a_b464); end
  def test_xi_a_c466; assert_equal("Emissions produced", worksheet.xi_a_c466); end
  def test_xi_a_o466; assert_equal("Mt CO2e", worksheet.xi_a_o466); end
  def test_xi_a_c468; assert_equal("GHG", worksheet.xi_a_c468); end
  def test_xi_a_d468; assert_equal("IPCC Sector", worksheet.xi_a_d468); end
  def test_xi_a_e468; assert_equal("Notes", worksheet.xi_a_e468); end
  def test_xi_a_f468; assert_equal("2010", worksheet.xi_a_f468); end
  def test_xi_a_g468; assert_equal("2015", worksheet.xi_a_g468); end
  def test_xi_a_h468; assert_equal("2020", worksheet.xi_a_h468); end
  def test_xi_a_i468; assert_equal("2025", worksheet.xi_a_i468); end
  def test_xi_a_j468; assert_equal("2030", worksheet.xi_a_j468); end
  def test_xi_a_k468; assert_equal("2035", worksheet.xi_a_k468); end
  def test_xi_a_l468; assert_equal("2040", worksheet.xi_a_l468); end
  def test_xi_a_m468; assert_equal("2045", worksheet.xi_a_m468); end
  def test_xi_a_n468; assert_equal("2050", worksheet.xi_a_n468); end
  def test_xi_a_c469; assert_equal("CO2", worksheet.xi_a_c469); end
  def test_xi_a_d469; assert_equal("1A", worksheet.xi_a_d469); end
  def test_xi_a_e469; assert_equal("Fuel Combustion", worksheet.xi_a_e469); end
  def test_xi_a_ba407; assert_in_epsilon(7.7621249185149415, worksheet.xi_a_ba407, 0.001); end
  def test_xi_a_f469; assert_in_epsilon(7.7621249185149415, worksheet.xi_a_f469, 0.001); end
  def test_xi_a_bb407; assert_in_epsilon(6.663631600360582, worksheet.xi_a_bb407, 0.001); end
  def test_xi_a_g469; assert_in_epsilon(6.663631600360582, worksheet.xi_a_g469, 0.001); end
  def test_xi_a_bc407; assert_in_epsilon(6.4533446637749075, worksheet.xi_a_bc407, 0.001); end
  def test_xi_a_h469; assert_in_epsilon(6.4533446637749075, worksheet.xi_a_h469, 0.001); end
  def test_xi_a_bd407; assert_in_epsilon(6.247839152284067, worksheet.xi_a_bd407, 0.001); end
  def test_xi_a_i469; assert_in_epsilon(6.247839152284067, worksheet.xi_a_i469, 0.001); end
  def test_xi_a_be407; assert_in_epsilon(5.39090475533779, worksheet.xi_a_be407, 0.001); end
  def test_xi_a_j469; assert_in_epsilon(5.39090475533779, worksheet.xi_a_j469, 0.001); end
  def test_xi_a_bf407; assert_in_epsilon(5.25830712353043, worksheet.xi_a_bf407, 0.001); end
  def test_xi_a_k469; assert_in_epsilon(5.25830712353043, worksheet.xi_a_k469, 0.001); end
  def test_xi_a_bg407; assert_in_epsilon(5.128271678002836, worksheet.xi_a_bg407, 0.001); end
  def test_xi_a_l469; assert_in_epsilon(5.128271678002836, worksheet.xi_a_l469, 0.001); end
  def test_xi_a_bh407; assert_in_epsilon(5.000763310079497, worksheet.xi_a_bh407, 0.001); end
  def test_xi_a_m469; assert_in_epsilon(5.000763310079497, worksheet.xi_a_m469, 0.001); end
  def test_xi_a_bi407; assert_in_epsilon(4.875747168328807, worksheet.xi_a_bi407, 0.001); end
  def test_xi_a_n469; assert_in_epsilon(4.875747168328807, worksheet.xi_a_n469, 0.001); end
  def test_xi_a_c470; assert_equal("CH4", worksheet.xi_a_c470); end
  def test_xi_a_d470; assert_equal("1A", worksheet.xi_a_d470); end
  def test_xi_a_e470; assert_equal("Fuel Combustion", worksheet.xi_a_e470); end
  def test_xi_a_c471; assert_equal("N2O", worksheet.xi_a_c471); end
  def test_xi_a_d471; assert_equal("1A", worksheet.xi_a_d471); end
  def test_xi_a_e471; assert_equal("Fuel Combustion", worksheet.xi_a_e471); end
  def test_xi_a_c472; assert_equal("CO2", worksheet.xi_a_c472); end
  def test_xi_a_d472; assert_equal("1B", worksheet.xi_a_d472); end
  def test_xi_a_e472; assert_equal("Fugitive Emissions from Fuels", worksheet.xi_a_e472); end
  def test_xi_a_ba440; assert_in_delta(0.547604979315071, worksheet.xi_a_ba440, 0.001); end
  def test_xi_a_f472; assert_in_delta(0.547604979315071, worksheet.xi_a_f472, 0.001); end
  def test_xi_a_bb440; assert_in_delta(0.4511032918352726, worksheet.xi_a_bb440, 0.001); end
  def test_xi_a_g472; assert_in_delta(0.4511032918352726, worksheet.xi_a_g472, 0.001); end
  def test_xi_a_bc440; assert_in_delta(0.4476944508390363, worksheet.xi_a_bc440, 0.001); end
  def test_xi_a_h472; assert_in_delta(0.4476944508390363, worksheet.xi_a_h472, 0.001); end
  def test_xi_a_bd440; assert_in_delta(0.44428560984279997, worksheet.xi_a_bd440, 0.001); end
  def test_xi_a_i472; assert_in_delta(0.44428560984279997, worksheet.xi_a_i472, 0.001); end
  def test_xi_a_be440; assert_in_delta(0.4408767688465637, worksheet.xi_a_be440, 0.001); end
  def test_xi_a_j472; assert_in_delta(0.4408767688465637, worksheet.xi_a_j472, 0.001); end
  def test_xi_a_bf440; assert_in_delta(0.4374679278503274, worksheet.xi_a_bf440, 0.001); end
  def test_xi_a_k472; assert_in_delta(0.4374679278503274, worksheet.xi_a_k472, 0.001); end
  def test_xi_a_bg440; assert_in_delta(0.43405908685409095, worksheet.xi_a_bg440, 0.001); end
  def test_xi_a_l472; assert_in_delta(0.43405908685409095, worksheet.xi_a_l472, 0.001); end
  def test_xi_a_bh440; assert_in_delta(0.4306502458578548, worksheet.xi_a_bh440, 0.001); end
  def test_xi_a_m472; assert_in_delta(0.4306502458578548, worksheet.xi_a_m472, 0.001); end
  def test_xi_a_bi438; assert_in_delta(0.4272414048616183, worksheet.xi_a_bi438, 0.001); end
  def test_xi_a_bi439; assert_in_delta(0, (worksheet.xi_a_bi439||0), 0.001); end
  def test_xi_a_bi440; assert_in_delta(0.4272414048616183, worksheet.xi_a_bi440, 0.001); end
  def test_xi_a_n472; assert_in_delta(0.4272414048616183, worksheet.xi_a_n472, 0.001); end
  def test_xi_a_c473; assert_equal("CO2", worksheet.xi_a_c473); end
  def test_xi_a_d473; assert_in_epsilon(2, worksheet.xi_a_d473, 0.001); end
  def test_xi_a_e473; assert_equal("Industrial Processes", worksheet.xi_a_e473); end
  def test_xi_a_ba410; assert_in_delta(0.9210501796116506, worksheet.xi_a_ba410, 0.001); end
  def test_xi_a_f473; assert_in_delta(0.9210501796116506, worksheet.xi_a_f473, 0.001); end
  def test_xi_a_bb410; assert_in_epsilon(1.1992756822626085, worksheet.xi_a_bb410, 0.001); end
  def test_xi_a_g473; assert_in_epsilon(1.1992756822626085, worksheet.xi_a_g473, 0.001); end
  def test_xi_a_bc410; assert_in_epsilon(1.1902131456208256, worksheet.xi_a_bc410, 0.001); end
  def test_xi_a_h473; assert_in_epsilon(1.1902131456208256, worksheet.xi_a_h473, 0.001); end
  def test_xi_a_bd410; assert_in_epsilon(1.1811506089790427, worksheet.xi_a_bd410, 0.001); end
  def test_xi_a_i473; assert_in_epsilon(1.1811506089790427, worksheet.xi_a_i473, 0.001); end
  def test_xi_a_be410; assert_in_epsilon(1.1720880723372598, worksheet.xi_a_be410, 0.001); end
  def test_xi_a_j473; assert_in_epsilon(1.1720880723372598, worksheet.xi_a_j473, 0.001); end
  def test_xi_a_bf410; assert_in_epsilon(1.1630255356954768, worksheet.xi_a_bf410, 0.001); end
  def test_xi_a_k473; assert_in_epsilon(1.1630255356954768, worksheet.xi_a_k473, 0.001); end
  def test_xi_a_bg410; assert_in_epsilon(1.153962999053694, worksheet.xi_a_bg410, 0.001); end
  def test_xi_a_l473; assert_in_epsilon(1.153962999053694, worksheet.xi_a_l473, 0.001); end
  def test_xi_a_bh410; assert_in_epsilon(1.144900462411911, worksheet.xi_a_bh410, 0.001); end
  def test_xi_a_m473; assert_in_epsilon(1.144900462411911, worksheet.xi_a_m473, 0.001); end
  def test_xi_a_bi410; assert_in_epsilon(1.135837925770128, worksheet.xi_a_bi410, 0.001); end
  def test_xi_a_n473; assert_in_epsilon(1.135837925770128, worksheet.xi_a_n473, 0.001); end
  def test_xi_a_c474; assert_equal("CH4", worksheet.xi_a_c474); end
  def test_xi_a_d474; assert_in_epsilon(2, worksheet.xi_a_d474, 0.001); end
  def test_xi_a_e474; assert_equal("Industrial Processes", worksheet.xi_a_e474); end
  def test_xi_a_c475; assert_equal("N2O", worksheet.xi_a_c475); end
  def test_xi_a_d475; assert_in_epsilon(2, worksheet.xi_a_d475, 0.001); end
  def test_xi_a_e475; assert_equal("Industrial Processes", worksheet.xi_a_e475); end
  def test_xi_a_c476; assert_equal("F", worksheet.xi_a_c476); end
  def test_xi_a_d476; assert_in_epsilon(2, worksheet.xi_a_d476, 0.001); end
  def test_xi_a_e476; assert_equal("Industrial Processes", worksheet.xi_a_e476); end
  def test_xi_a_c477; assert_equal("CO2", worksheet.xi_a_c477); end
  def test_xi_a_d477; assert_equal("X3", worksheet.xi_a_d477); end
  def test_xi_a_e477; assert_equal("Carbon capture", worksheet.xi_a_e477); end
  def test_xi_a_g477; assert_in_delta(0, (worksheet.xi_a_g477||0), 0.001); end
  def test_xi_a_h477; assert_in_delta(0, (worksheet.xi_a_h477||0), 0.001); end
  def test_xi_a_i477; assert_in_delta(0, (worksheet.xi_a_i477||0), 0.001); end
  def test_xi_a_j477; assert_in_delta(0, (worksheet.xi_a_j477||0), 0.001); end
  def test_xi_a_k477; assert_in_delta(0, (worksheet.xi_a_k477||0), 0.001); end
  def test_xi_a_l477; assert_in_delta(0, (worksheet.xi_a_l477||0), 0.001); end
  def test_xi_a_m477; assert_in_delta(0, (worksheet.xi_a_m477||0), 0.001); end
  def test_xi_a_n477; assert_in_epsilon(-3.243023256112272, worksheet.xi_a_n477, 0.001); end
  def test_xi_a_c478; assert_equal("Total", worksheet.xi_a_c478); end
  def test_xi_a_f478; assert_in_epsilon(9.230780077441663, worksheet.xi_a_f478, 0.001); end
  def test_xi_a_g478; assert_in_epsilon(8.314010574458463, worksheet.xi_a_g478, 0.001); end
  def test_xi_a_h478; assert_in_epsilon(8.09125226023477, worksheet.xi_a_h478, 0.001); end
  def test_xi_a_i478; assert_in_epsilon(7.87327537110591, worksheet.xi_a_i478, 0.001); end
  def test_xi_a_j478; assert_in_epsilon(7.0038695965216125, worksheet.xi_a_j478, 0.001); end
  def test_xi_a_k478; assert_in_epsilon(6.858800587076233, worksheet.xi_a_k478, 0.001); end
  def test_xi_a_l478; assert_in_epsilon(6.71629376391062, worksheet.xi_a_l478, 0.001); end
  def test_xi_a_m478; assert_in_epsilon(6.576314018349263, worksheet.xi_a_m478, 0.001); end
  def test_xi_a_n478; assert_in_epsilon(3.1958032428482817, worksheet.xi_a_n478, 0.001); end
  def test_xi_a_e480; assert_equal("Before applying levers", worksheet.xi_a_e480); end
  def test_xi_a_f480; assert_in_epsilon(9.230780077441661, worksheet.xi_a_f480, 0.001); end
  def test_xi_a_g480; assert_in_epsilon(9.230780077441661, worksheet.xi_a_g480, 0.001); end
  def test_xi_a_h480; assert_in_epsilon(9.230780077441661, worksheet.xi_a_h480, 0.001); end
  def test_xi_a_i480; assert_in_epsilon(9.230780077441661, worksheet.xi_a_i480, 0.001); end
  def test_xi_a_j480; assert_in_epsilon(9.230780077441661, worksheet.xi_a_j480, 0.001); end
  def test_xi_a_k480; assert_in_epsilon(9.230780077441661, worksheet.xi_a_k480, 0.001); end
  def test_xi_a_l480; assert_in_epsilon(9.230780077441661, worksheet.xi_a_l480, 0.001); end
  def test_xi_a_m480; assert_in_epsilon(9.230780077441661, worksheet.xi_a_m480, 0.001); end
  def test_xi_a_bi238; assert_in_epsilon(9.230780077441661, worksheet.xi_a_bi238, 0.001); end
  def test_xi_a_n480; assert_in_epsilon(9.230780077441661, worksheet.xi_a_n480, 0.001); end
  def test_xi_a_e481; assert_equal("CO2 intensity improvement", worksheet.xi_a_e481); end
  def test_xi_a_g481; assert_in_delta(0.001029981169413471, worksheet.xi_a_g481, 0.001); end
  def test_xi_a_h481; assert_in_delta(0.001010017127718029, worksheet.xi_a_h481, 0.001); end
  def test_xi_a_i481; assert_in_delta(0.0009903481689930368, worksheet.xi_a_i481, 0.001); end
  def test_xi_a_j481; assert_in_delta(0.0008878008262787868, worksheet.xi_a_j481, 0.001); end
  def test_xi_a_k481; assert_in_delta(0.0008761867187969146, worksheet.xi_a_k481, 0.001); end
  def test_xi_a_l481; assert_in_delta(0.0008647200712127659, worksheet.xi_a_l481, 0.001); end
  def test_xi_a_m481; assert_in_delta(0.0008533998292048082, worksheet.xi_a_m481, 0.001); end
  def test_xi_a_n481; assert_in_delta(0.0004180241834355282, worksheet.xi_a_n481, 0.001); end
  def test_xi_a_f481; assert_in_delta(0.001134978492246608, worksheet.xi_a_f481, 0.001); end
  def test_xi_a_g482; assert_in_delta(-0.09251040751028017, worksheet.xi_a_g482, 0.001); end
  def test_xi_a_h482; assert_in_delta(-0.11010020487809158, worksheet.xi_a_h482, 0.001); end
  def test_xi_a_i482; assert_in_delta(-0.12743001232321674, worksheet.xi_a_i482, 0.001); end
  def test_xi_a_j482; assert_in_delta(-0.2177818061367409, worksheet.xi_a_j482, 0.001); end
  def test_xi_a_k482; assert_in_delta(-0.22801469386211348, worksheet.xi_a_k482, 0.001); end
  def test_xi_a_l482; assert_in_delta(-0.2381176585107663, worksheet.xi_a_l482, 0.001); end
  def test_xi_a_m482; assert_in_delta(-0.24809162901795187, worksheet.xi_a_m482, 0.001); end
  def test_xi_a_n482; assert_in_delta(-0.6316897753647477, worksheet.xi_a_n482, 0.001); end
  def test_xi_a_b483; assert_equal("Costs", worksheet.xi_a_b483); end
  def test_xi_a_c485; assert_equal("Costs of this physical change", worksheet.xi_a_c485); end
  def test_xi_a_o485; assert_equal("MEUR", worksheet.xi_a_o485); end
  def test_xi_a_c487; assert_equal("Vector", worksheet.xi_a_c487); end
  def test_xi_a_d487; assert_equal("Name", worksheet.xi_a_d487); end
  def test_xi_a_e487; assert_equal("Notes", worksheet.xi_a_e487); end
  def test_xi_a_f487; assert_equal("2010", worksheet.xi_a_f487); end
  def test_xi_a_g487; assert_equal("2015", worksheet.xi_a_g487); end
  def test_xi_a_h487; assert_equal("2020", worksheet.xi_a_h487); end
  def test_xi_a_i487; assert_equal("2025", worksheet.xi_a_i487); end
  def test_xi_a_j487; assert_equal("2030", worksheet.xi_a_j487); end
  def test_xi_a_k487; assert_equal("2035", worksheet.xi_a_k487); end
  def test_xi_a_l487; assert_equal("2040", worksheet.xi_a_l487); end
  def test_xi_a_m487; assert_equal("2045", worksheet.xi_a_m487); end
  def test_xi_a_n487; assert_equal("2050", worksheet.xi_a_n487); end
  def test_xi_a_c488; assert_equal("C1.Low", worksheet.xi_a_c488); end
  def test_xi_a_d488; assert_equal("Low estimate of capital costs in that year", worksheet.xi_a_d488); end
  def test_xi_a_by437; assert_in_delta(-3.623767952376511e-13, worksheet.xi_a_by437, 0.001); end
  def test_xi_a_f488; assert_in_delta(-3.623767952376511e-13, worksheet.xi_a_f488, 0.001); end
  def test_xi_a_g488; assert_in_epsilon(74.87129775590321, worksheet.xi_a_g488, 0.001); end
  def test_xi_a_h488; assert_in_epsilon(62.35298449965776, worksheet.xi_a_h488, 0.001); end
  def test_xi_a_i488; assert_in_epsilon(50.37059028202531, worksheet.xi_a_i488, 0.001); end
  def test_xi_a_j488; assert_in_epsilon(425.15544211986054, worksheet.xi_a_j488, 0.001); end
  def test_xi_a_k488; assert_in_epsilon(407.6214382197061, worksheet.xi_a_k488, 0.001); end
  def test_xi_a_l488; assert_in_epsilon(389.6555486863474, worksheet.xi_a_l488, 0.001); end
  def test_xi_a_m488; assert_in_epsilon(370.9851448853659, worksheet.xi_a_m488, 0.001); end
  def test_xi_a_q488; assert_in_epsilon(1134.8550567848645, worksheet.xi_a_q488, 0.001); end
  def test_xi_a_c489; assert_equal("C1.High", worksheet.xi_a_c489); end
  def test_xi_a_d489; assert_equal("High estimate of capital costs in that year", worksheet.xi_a_d489); end
  def test_xi_a_f489; assert_in_delta(-3.623767952376511e-13, worksheet.xi_a_f489, 0.001); end
  def test_xi_a_g489; assert_in_epsilon(101.2964616697514, worksheet.xi_a_g489, 0.001); end
  def test_xi_a_h489; assert_in_epsilon(84.35992020541931, worksheet.xi_a_h489, 0.001); end
  def test_xi_a_i489; assert_in_epsilon(68.1484456756813, worksheet.xi_a_i489, 0.001); end
  def test_xi_a_j489; assert_in_epsilon(575.2103040445172, worksheet.xi_a_j489, 0.001); end
  def test_xi_a_k489; assert_in_epsilon(551.4878281796023, worksheet.xi_a_k489, 0.001); end
  def test_xi_a_l489; assert_in_epsilon(527.1810364579994, worksheet.xi_a_l489, 0.001); end
  def test_xi_a_m489; assert_in_epsilon(501.9210783743186, worksheet.xi_a_m489, 0.001); end
  def test_xi_a_c490; assert_equal("C2.Low", worksheet.xi_a_c490); end
  def test_xi_a_d490; assert_equal("Low estimate of O&M costs in that year", worksheet.xi_a_d490); end
  def test_xi_a_c491; assert_equal("C2.High", worksheet.xi_a_c491); end
  def test_xi_a_d491; assert_equal("High estimate of O&M costs in that year", worksheet.xi_a_d491); end
  def test_xi_a_c492; assert_equal("C3.Low", worksheet.xi_a_c492); end
  def test_xi_a_d492; assert_equal("Low estimate of fuel costs in that year", worksheet.xi_a_d492); end
  def test_xi_a_g492; assert_in_epsilon(542.0001130624742, worksheet.xi_a_g492, 0.001); end
  def test_xi_a_h492; assert_in_epsilon(537.8962578348769, worksheet.xi_a_h492, 0.001); end
  def test_xi_a_i492; assert_in_epsilon(561.1432927396543, worksheet.xi_a_i492, 0.001); end
  def test_xi_a_j492; assert_in_epsilon(569.6459786224633, worksheet.xi_a_j492, 0.001); end
  def test_xi_a_k492; assert_in_epsilon(543.4512298717676, worksheet.xi_a_k492, 0.001); end
  def test_xi_a_l492; assert_in_epsilon(520.5489835656347, worksheet.xi_a_l492, 0.001); end
  def test_xi_a_m492; assert_in_epsilon(498.391271345111, worksheet.xi_a_m492, 0.001); end
  def test_xi_a_c493; assert_equal("C3.High", worksheet.xi_a_c493); end
  def test_xi_a_d493; assert_equal("High estimate of fuel costs in that year", worksheet.xi_a_d493); end
  def test_xi_a_g493; assert_in_epsilon(733.2942706139356, worksheet.xi_a_g493, 0.001); end
  def test_xi_a_h493; assert_in_epsilon(727.7419958942452, worksheet.xi_a_h493, 0.001); end
  def test_xi_a_i493; assert_in_epsilon(759.1938666477675, worksheet.xi_a_i493, 0.001); end
  def test_xi_a_j493; assert_in_epsilon(770.697500489215, worksheet.xi_a_j493, 0.001); end
  def test_xi_a_k493; assert_in_epsilon(735.2575462970973, worksheet.xi_a_k493, 0.001); end
  def test_xi_a_l493; assert_in_epsilon(704.2721542358586, worksheet.xi_a_l493, 0.001); end
  def test_xi_a_m493; assert_in_epsilon(674.2940729963266, worksheet.xi_a_m493, 0.001); end
  def test_xi_a_b497; assert_equal("Emissions for each trajectory", worksheet.xi_a_b497); end
  def test_xi_a_c498; assert_equal("MtCO2 (needs to be updated manually)", worksheet.xi_a_c498); end
  def test_xi_a_f498; assert_equal("2010", worksheet.xi_a_f498); end
  def test_xi_a_g498; assert_equal("2015", worksheet.xi_a_g498); end
  def test_xi_a_h498; assert_equal("2020", worksheet.xi_a_h498); end
  def test_xi_a_i498; assert_equal("2025", worksheet.xi_a_i498); end
  def test_xi_a_j498; assert_equal("2030", worksheet.xi_a_j498); end
  def test_xi_a_k498; assert_equal("2035", worksheet.xi_a_k498); end
  def test_xi_a_l498; assert_equal("2040", worksheet.xi_a_l498); end
  def test_xi_a_m498; assert_equal("2045", worksheet.xi_a_m498); end
  def test_xi_a_n498; assert_equal("2050", worksheet.xi_a_n498); end
  def test_xi_a_o498; assert_equal("% evolution (for graphs)", worksheet.xi_a_o498); end
  def test_xi_a_d499; assert_equal("High", worksheet.xi_a_d499); end
  def test_xi_a_e499; assert_equal("Base Case", worksheet.xi_a_e499); end
  def test_xi_a_f499; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f499, 0.001); end
  def test_xi_a_g499; assert_in_epsilon(5.839935266373574, worksheet.xi_a_g499, 0.001); end
  def test_xi_a_h499; assert_in_epsilon(5.9745567254296015, worksheet.xi_a_h499, 0.001); end
  def test_xi_a_i499; assert_in_epsilon(6.1122814615617855, worksheet.xi_a_i499, 0.001); end
  def test_xi_a_j499; assert_in_epsilon(6.253181011126059, worksheet.xi_a_j499, 0.001); end
  def test_xi_a_k499; assert_in_epsilon(6.3973285595255085, worksheet.xi_a_k499, 0.001); end
  def test_xi_a_l499; assert_in_epsilon(6.544798979223997, worksheet.xi_a_l499, 0.001); end
  def test_xi_a_m499; assert_in_epsilon(6.695668868636085, worksheet.xi_a_m499, 0.001); end
  def test_xi_a_n499; assert_in_epsilon(6.850016591913427, worksheet.xi_a_n499, 0.001); end
  def test_xi_a_o499; assert_in_delta(0.20000000000000503, worksheet.xi_a_o499, 0.001); end
  def test_xi_a_d500; assert_equal("High", worksheet.xi_a_d500); end
  def test_xi_a_e500; assert_in_delta(1, worksheet.xi_a_e500, 0.001); end
  def test_xi_a_f500; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f500, 0.001); end
  def test_xi_a_g500; assert_in_epsilon(5.31714207565003, worksheet.xi_a_g500, 0.001); end
  def test_xi_a_h500; assert_in_epsilon(5.439712171307391, worksheet.xi_a_h500, 0.001); end
  def test_xi_a_i500; assert_in_epsilon(5.565107737515605, worksheet.xi_a_i500, 0.001); end
  def test_xi_a_j500; assert_in_epsilon(5.69339390666925, worksheet.xi_a_j500, 0.001); end
  def test_xi_a_k500; assert_in_epsilon(5.824637312586738, worksheet.xi_a_k500, 0.001); end
  def test_xi_a_l500; assert_in_epsilon(5.958906125120941, worksheet.xi_a_l500, 0.001); end
  def test_xi_a_m500; assert_in_epsilon(6.096270085567685, worksheet.xi_a_m500, 0.001); end
  def test_xi_a_n500; assert_in_epsilon(6.236800542890435, worksheet.xi_a_n500, 0.001); end
  def test_xi_a_o500; assert_in_delta(0.09257555088315349, worksheet.xi_a_o500, 0.001); end
  def test_xi_a_d501; assert_equal("High", worksheet.xi_a_d501); end
  def test_xi_a_e501; assert_in_epsilon(2, worksheet.xi_a_e501, 0.001); end
  def test_xi_a_f501; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f501, 0.001); end
  def test_xi_a_g501; assert_in_epsilon(5.083344295669511, worksheet.xi_a_g501, 0.001); end
  def test_xi_a_h501; assert_in_epsilon(4.9699647351761636, worksheet.xi_a_h501, 0.001); end
  def test_xi_a_i501; assert_in_epsilon(4.857281016284083, worksheet.xi_a_i501, 0.001); end
  def test_xi_a_j501; assert_in_epsilon(4.713143314585775, worksheet.xi_a_j501, 0.001); end
  def test_xi_a_k501; assert_in_epsilon(4.648232459701092, worksheet.xi_a_k501, 0.001); end
  def test_xi_a_l501; assert_in_epsilon(4.583302155140379, worksheet.xi_a_l501, 0.001); end
  def test_xi_a_m501; assert_in_epsilon(4.518392436095238, worksheet.xi_a_m501, 0.001); end
  def test_xi_a_n501; assert_in_epsilon(1.8509005485756118, worksheet.xi_a_n501, 0.001); end
  def test_xi_a_o501; assert_in_delta(-0.6757554338024858, worksheet.xi_a_o501, 0.001); end
  def test_xi_a_d502; assert_equal("High", worksheet.xi_a_d502); end
  def test_xi_a_e502; assert_in_epsilon(3, worksheet.xi_a_e502, 0.001); end
  def test_xi_a_f502; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f502, 0.001); end
  def test_xi_a_g502; assert_in_epsilon(5.063074941989786, worksheet.xi_a_g502, 0.001); end
  def test_xi_a_h502; assert_in_epsilon(4.930419186302261, worksheet.xi_a_h502, 0.001); end
  def test_xi_a_i502; assert_in_epsilon(4.799445489328465, worksheet.xi_a_i502, 0.001); end
  def test_xi_a_j502; assert_in_epsilon(3.7023173336827755, worksheet.xi_a_j502, 0.001); end
  def test_xi_a_k502; assert_in_epsilon(3.168547348041707, worksheet.xi_a_k502, 0.001); end
  def test_xi_a_l502; assert_in_epsilon(2.6627475926241146, worksheet.xi_a_l502, 0.001); end
  def test_xi_a_m502; assert_in_epsilon(2.1847080662702396, worksheet.xi_a_m502, 0.001); end
  def test_xi_a_n502; assert_in_epsilon(1.7341936624053726, worksheet.xi_a_n502, 0.001); end
  def test_xi_a_o502; assert_in_delta(-0.6962003862380197, worksheet.xi_a_o502, 0.001); end
  def test_xi_a_d503; assert_equal("High", worksheet.xi_a_d503); end
  def test_xi_a_e503; assert_in_epsilon(4, worksheet.xi_a_e503, 0.001); end
  def test_xi_a_f503; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f503, 0.001); end
  def test_xi_a_g503; assert_in_epsilon(5.010920510266677, worksheet.xi_a_g503, 0.001); end
  def test_xi_a_h503; assert_in_epsilon(4.120603441866803, worksheet.xi_a_h503, 0.001); end
  def test_xi_a_i503; assert_in_epsilon(3.352882997669712, worksheet.xi_a_i503, 0.001); end
  def test_xi_a_j503; assert_in_epsilon(2.7025498603029003, worksheet.xi_a_j503, 0.001); end
  def test_xi_a_k503; assert_in_epsilon(2.700798065406742, worksheet.xi_a_k503, 0.001); end
  def test_xi_a_l503; assert_in_epsilon(2.698297228914094, worksheet.xi_a_l503, 0.001); end
  def test_xi_a_m503; assert_in_epsilon(2.6950314479544586, worksheet.xi_a_m503, 0.001); end
  def test_xi_a_n503; assert_in_delta(0.4036477338784539, worksheet.xi_a_n503, 0.001); end
  def test_xi_a_o503; assert_in_delta(-0.9292881595022758, worksheet.xi_a_o503, 0.001); end
  def test_xi_a_d504; assert_equal("Medium", worksheet.xi_a_d504); end
  def test_xi_a_e504; assert_equal("Base Case", worksheet.xi_a_e504); end
  def test_xi_a_f504; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f504, 0.001); end
  def test_xi_a_g504; assert_in_epsilon(5.708347159927832, worksheet.xi_a_g504, 0.001); end
  def test_xi_a_h504; assert_in_epsilon(5.708347159927832, worksheet.xi_a_h504, 0.001); end
  def test_xi_a_i504; assert_in_epsilon(5.708347159927832, worksheet.xi_a_i504, 0.001); end
  def test_xi_a_j504; assert_in_epsilon(5.708347159927832, worksheet.xi_a_j504, 0.001); end
  def test_xi_a_k504; assert_in_epsilon(5.708347159927832, worksheet.xi_a_k504, 0.001); end
  def test_xi_a_l504; assert_in_epsilon(5.708347159927832, worksheet.xi_a_l504, 0.001); end
  def test_xi_a_m504; assert_in_epsilon(5.708347159927832, worksheet.xi_a_m504, 0.001); end
  def test_xi_a_n504; assert_in_epsilon(5.708347159927832, worksheet.xi_a_n504, 0.001); end
  def test_xi_a_o504; assert_in_delta(0, (worksheet.xi_a_o504||0), 0.001); end
  def test_xi_a_d505; assert_equal("Medium", worksheet.xi_a_d505); end
  def test_xi_a_e505; assert_in_delta(1, worksheet.xi_a_e505, 0.001); end
  def test_xi_a_f505; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f505, 0.001); end
  def test_xi_a_g505; assert_in_epsilon(5.197333785742009, worksheet.xi_a_g505, 0.001); end
  def test_xi_a_h505; assert_in_epsilon(5.197333785742009, worksheet.xi_a_h505, 0.001); end
  def test_xi_a_i505; assert_in_epsilon(5.197333785742009, worksheet.xi_a_i505, 0.001); end
  def test_xi_a_j505; assert_in_epsilon(5.197333785742009, worksheet.xi_a_j505, 0.001); end
  def test_xi_a_k505; assert_in_epsilon(5.197333785742009, worksheet.xi_a_k505, 0.001); end
  def test_xi_a_l505; assert_in_epsilon(5.197333785742009, worksheet.xi_a_l505, 0.001); end
  def test_xi_a_m505; assert_in_epsilon(5.197333785742009, worksheet.xi_a_m505, 0.001); end
  def test_xi_a_n505; assert_in_epsilon(5.197333785742009, worksheet.xi_a_n505, 0.001); end
  def test_xi_a_o505; assert_in_delta(-0.08952037426404238, worksheet.xi_a_o505, 0.001); end
  def test_xi_a_d506; assert_equal("Medium", worksheet.xi_a_d506); end
  def test_xi_a_e506; assert_in_epsilon(2, worksheet.xi_a_e506, 0.001); end
  def test_xi_a_f506; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f506, 0.001); end
  def test_xi_a_g506; assert_in_epsilon(4.968804044833086, worksheet.xi_a_g506, 0.001); end
  def test_xi_a_h506; assert_in_epsilon(4.748516983733946, worksheet.xi_a_h506, 0.001); end
  def test_xi_a_i506; assert_in_epsilon(4.536284277588211, worksheet.xi_a_i506, 0.001); end
  def test_xi_a_j506; assert_in_epsilon(4.302491516922153, worksheet.xi_a_j506, 0.001); end
  def test_xi_a_k506; assert_in_epsilon(4.1476257336370255, worksheet.xi_a_k506, 0.001); end
  def test_xi_a_l506; assert_in_epsilon(3.9975375750178954, worksheet.xi_a_l506, 0.001); end
  def test_xi_a_m506; assert_in_epsilon(3.8521248789409763, worksheet.xi_a_m506, 0.001); end
  def test_xi_a_n506; assert_in_epsilon(1.5424171238130029, worksheet.xi_a_n506, 0.001); end
  def test_xi_a_o506; assert_in_delta(-0.729796194835406, worksheet.xi_a_o506, 0.001); end
  def test_xi_a_d507; assert_equal("Medium", worksheet.xi_a_d507); end
  def test_xi_a_e507; assert_in_epsilon(3, worksheet.xi_a_e507, 0.001); end
  def test_xi_a_f507; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f507, 0.001); end
  def test_xi_a_g507; assert_in_epsilon(4.948991409549702, worksheet.xi_a_g507, 0.001); end
  def test_xi_a_h507; assert_in_epsilon(4.71073347409861, worksheet.xi_a_h507, 0.001); end
  def test_xi_a_i507; assert_in_epsilon(4.482270850995178, worksheet.xi_a_i507, 0.001); end
  def test_xi_a_j507; assert_in_epsilon(3.3797378645007212, worksheet.xi_a_j507, 0.001); end
  def test_xi_a_k507; assert_in_epsilon(2.8273001905395754, worksheet.xi_a_k507, 0.001); end
  def test_xi_a_l507; assert_in_epsilon(2.3224376648101046, worksheet.xi_a_l507, 0.001); end
  def test_xi_a_m507; assert_in_epsilon(1.8625580700058602, worksheet.xi_a_m507, 0.001); end
  def test_xi_a_n507; assert_in_epsilon(1.4451613853378054, worksheet.xi_a_n507, 0.001); end
  def test_xi_a_o507; assert_in_delta(-0.7468336551983505, worksheet.xi_a_o507, 0.001); end
  def test_xi_a_d508; assert_equal("Medium", worksheet.xi_a_d508); end
  def test_xi_a_e508; assert_in_epsilon(4, worksheet.xi_a_e508, 0.001); end
  def test_xi_a_f508; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f508, 0.001); end
  def test_xi_a_g508; assert_in_epsilon(4.898012145461192, worksheet.xi_a_g508, 0.001); end
  def test_xi_a_h508; assert_in_epsilon(3.9370008580641387, worksheet.xi_a_h508, 0.001); end
  def test_xi_a_i508; assert_in_epsilon(3.131305431152018, worksheet.xi_a_i508, 0.001); end
  def test_xi_a_j508; assert_in_epsilon(2.467079202117219, worksheet.xi_a_j508, 0.001); end
  def test_xi_a_k508; assert_in_epsilon(2.4099267096806183, worksheet.xi_a_k508, 0.001); end
  def test_xi_a_l508; assert_in_epsilon(2.353443913588189, worksheet.xi_a_l508, 0.001); end
  def test_xi_a_m508; assert_in_epsilon(2.297630813839932, worksheet.xi_a_m508, 0.001); end
  def test_xi_a_n508; assert_in_delta(0.33637311156537697, worksheet.xi_a_n508, 0.001); end
  def test_xi_a_o508; assert_in_delta(-0.9410734662518968, worksheet.xi_a_o508, 0.001); end
  def test_xi_a_d509; assert_equal("Low", worksheet.xi_a_d509); end
  def test_xi_a_e509; assert_equal("Base Case", worksheet.xi_a_e509); end
  def test_xi_a_f509; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f509, 0.001); end
  def test_xi_a_g509; assert_in_epsilon(5.234577425669723, worksheet.xi_a_g509, 0.001); end
  def test_xi_a_h509; assert_in_epsilon(4.800128663807034, worksheet.xi_a_h509, 0.001); end
  def test_xi_a_i509; assert_in_epsilon(4.401737392613685, worksheet.xi_a_i509, 0.001); end
  def test_xi_a_j509; assert_in_epsilon(4.036410986151937, worksheet.xi_a_j509, 0.001); end
  def test_xi_a_k509; assert_in_epsilon(3.7014051943370796, worksheet.xi_a_k509, 0.001); end
  def test_xi_a_l509; assert_in_epsilon(3.394203528745873, worksheet.xi_a_l509, 0.001); end
  def test_xi_a_m509; assert_in_epsilon(3.1124983593195275, worksheet.xi_a_m509, 0.001); end
  def test_xi_a_n509; assert_in_epsilon(2.854173579963912, worksheet.xi_a_n509, 0.001); end
  def test_xi_a_o509; assert_in_delta(-0.5000000000000007, worksheet.xi_a_o509, 0.001); end
  def test_xi_a_d510; assert_equal("Low", worksheet.xi_a_d510); end
  def test_xi_a_e510; assert_in_delta(1, worksheet.xi_a_e510, 0.001); end
  def test_xi_a_f510; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f510, 0.001); end
  def test_xi_a_g510; assert_in_epsilon(4.765976095409662, worksheet.xi_a_g510, 0.001); end
  def test_xi_a_h510; assert_in_epsilon(4.370419349307471, worksheet.xi_a_h510, 0.001); end
  def test_xi_a_i510; assert_in_epsilon(4.007692213814877, worksheet.xi_a_i510, 0.001); end
  def test_xi_a_j510; assert_in_epsilon(3.6750699639881224, worksheet.xi_a_j510, 0.001); end
  def test_xi_a_k510; assert_in_epsilon(3.370054016037153, worksheet.xi_a_k510, 0.001); end
  def test_xi_a_l510; assert_in_epsilon(3.0903531585242088, worksheet.xi_a_l510, 0.001); end
  def test_xi_a_m510; assert_in_epsilon(2.8338663412970253, worksheet.xi_a_m510, 0.001); end
  def test_xi_a_n510; assert_in_epsilon(2.5986668928710004, worksheet.xi_a_n510, 0.001); end
  def test_xi_a_o510; assert_in_delta(-0.5447601871320219, worksheet.xi_a_o510, 0.001); end
  def test_xi_a_d511; assert_equal("Low", worksheet.xi_a_d511); end
  def test_xi_a_e511; assert_in_epsilon(2, worksheet.xi_a_e511, 0.001); end
  def test_xi_a_f511; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f511, 0.001); end
  def test_xi_a_g511; assert_in_epsilon(4.556413399003664, worksheet.xi_a_g511, 0.001); end
  def test_xi_a_h511; assert_in_epsilon(3.993010909393255, worksheet.xi_a_h511, 0.001); end
  def test_xi_a_i511; assert_in_epsilon(3.497953360012188, worksheet.xi_a_i511, 0.001); end
  def test_xi_a_j511; assert_in_epsilon(3.0423209276132472, worksheet.xi_a_j511, 0.001); end
  def test_xi_a_k511; assert_in_epsilon(2.6894025546344515, worksheet.xi_a_k511, 0.001); end
  def test_xi_a_l511; assert_in_epsilon(2.376950063351, worksheet.xi_a_l511, 0.001); end
  def test_xi_a_m511; assert_in_epsilon(2.1003859838386747, worksheet.xi_a_m511, 0.001); end
  def test_xi_a_n511; assert_in_delta(0.7712085619065006, worksheet.xi_a_n511, 0.001); end
  def test_xi_a_o511; assert_in_delta(-0.8648980974177032, worksheet.xi_a_o511, 0.001); end
  def test_xi_a_d512; assert_equal("Low", worksheet.xi_a_d512); end
  def test_xi_a_e512; assert_in_epsilon(3, worksheet.xi_a_e512, 0.001); end
  def test_xi_a_f512; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f512, 0.001); end
  def test_xi_a_g512; assert_in_epsilon(4.5382451323422615, worksheet.xi_a_g512, 0.001); end
  def test_xi_a_h512; assert_in_epsilon(3.9612388915851975, worksheet.xi_a_h512, 0.001); end
  def test_xi_a_i512; assert_in_epsilon(3.4563033144076116, worksheet.xi_a_i512, 0.001); end
  def test_xi_a_j512; assert_in_epsilon(2.3898355626214, worksheet.xi_a_j512, 0.001); end
  def test_xi_a_k512; assert_in_epsilon(1.8332773599820276, worksheet.xi_a_k512, 0.001); end
  def test_xi_a_l512; assert_in_epsilon(1.380929697571239, worksheet.xi_a_l512, 0.001); end
  def test_xi_a_m512; assert_in_epsilon(1.015566988939733, worksheet.xi_a_m512, 0.001); end
  def test_xi_a_n512; assert_in_delta(0.7225806926689018, worksheet.xi_a_n512, 0.001); end
  def test_xi_a_o512; assert_in_delta(-0.8734168275991755, worksheet.xi_a_o512, 0.001); end
  def test_xi_a_d513; assert_equal("Low", worksheet.xi_a_d513); end
  def test_xi_a_e513; assert_in_epsilon(4, worksheet.xi_a_e513, 0.001); end
  def test_xi_a_f513; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f513, 0.001); end
  def test_xi_a_g513; assert_in_epsilon(4.4914969410535, worksheet.xi_a_g513, 0.001); end
  def test_xi_a_h513; assert_in_epsilon(3.310609908396931, worksheet.xi_a_h513, 0.001); end
  def test_xi_a_i513; assert_in_epsilon(2.4145665667906604, worksheet.xi_a_i513, 0.001); end
  def test_xi_a_j513; assert_in_epsilon(1.744488433541381, worksheet.xi_a_j513, 0.001); end
  def test_xi_a_k513; assert_in_epsilon(1.5626441404618916, worksheet.xi_a_k513, 0.001); end
  def test_xi_a_l513; assert_in_epsilon(1.3993661233994605, worksheet.xi_a_l513, 0.001); end
  def test_xi_a_m513; assert_in_epsilon(1.252792084651206, worksheet.xi_a_m513, 0.001); end
  def test_xi_a_n513; assert_in_delta(0.16818655578268826, worksheet.xi_a_n513, 0.001); end
  def test_xi_a_o513; assert_in_delta(-0.9705367331259483, worksheet.xi_a_o513, 0.001); end
  def test_xi_a_b515; assert_equal("Summary slide with lever ambition for each trajectory", worksheet.xi_a_b515); end
  def test_xi_a_c516; assert_equal("MtCO2", worksheet.xi_a_c516); end
  def test_xi_a_f516; assert_equal("2010 Orig", worksheet.xi_a_f516); end
  def test_xi_a_g516; assert_equal("Demand 1", worksheet.xi_a_g516); end
  def test_xi_a_h516; assert_equal("Demand 2", worksheet.xi_a_h516); end
  def test_xi_a_i516; assert_equal("Demand 3", worksheet.xi_a_i516); end
  def test_xi_a_j516; assert_equal("Residual", worksheet.xi_a_j516); end
  def test_xi_a_k516; assert_equal("General objectives", worksheet.xi_a_k516); end
  def test_xi_a_d517; assert_equal("Demand", worksheet.xi_a_d517); end
  def test_xi_a_f517; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f517, 0.001); end
  def test_xi_a_g517; assert_in_epsilon(6.850016591913427, worksheet.xi_a_g517, 0.001); end
  def test_xi_a_h517; assert_in_epsilon(5.708347159927832, worksheet.xi_a_h517, 0.001); end
  def test_xi_a_i517; assert_in_epsilon(2.854173579963912, worksheet.xi_a_i517, 0.001); end
  def test_xi_a_d518; assert_equal("Ambition 1", worksheet.xi_a_d518); end
  def test_xi_a_g518; assert_in_epsilon(6.236800542890435, worksheet.xi_a_g518, 0.001); end
  def test_xi_a_h518; assert_in_epsilon(5.197333785742009, worksheet.xi_a_h518, 0.001); end
  def test_xi_a_i518; assert_in_epsilon(2.5986668928710004, worksheet.xi_a_i518, 0.001); end
  def test_xi_a_j518; assert_in_delta(0.16818655578268826, worksheet.xi_a_j518, 0.001); end
  def test_xi_a_k518; assert_in_delta(0.28541735799639184, worksheet.xi_a_k518, 0.001); end
  def test_xi_a_d519; assert_equal("Ambition 2", worksheet.xi_a_d519); end
  def test_xi_a_g519; assert_in_epsilon(1.8509005485756118, worksheet.xi_a_g519, 0.001); end
  def test_xi_a_h519; assert_in_epsilon(1.5424171238130029, worksheet.xi_a_h519, 0.001); end
  def test_xi_a_i519; assert_in_delta(0.7712085619065006, worksheet.xi_a_i519, 0.001); end
  def test_xi_a_d520; assert_equal("Ambition 3", worksheet.xi_a_d520); end
  def test_xi_a_g520; assert_in_epsilon(1.7341936624053726, worksheet.xi_a_g520, 0.001); end
  def test_xi_a_h520; assert_in_epsilon(1.4451613853378054, worksheet.xi_a_h520, 0.001); end
  def test_xi_a_i520; assert_in_delta(0.7225806926689018, worksheet.xi_a_i520, 0.001); end
  def test_xi_a_d521; assert_equal("Ambition 4", worksheet.xi_a_d521); end
  def test_xi_a_g521; assert_in_delta(0.4036477338784539, worksheet.xi_a_g521, 0.001); end
  def test_xi_a_h521; assert_in_delta(0.33637311156537697, worksheet.xi_a_h521, 0.001); end
  def test_xi_a_i521; assert_in_delta(0.16818655578268826, worksheet.xi_a_i521, 0.001); end
  def test_xi_a_c523; assert_equal("MtCO2 delta (for graphs)", worksheet.xi_a_c523); end
  def test_xi_a_f523; assert_equal("2010 Orig", worksheet.xi_a_f523); end
  def test_xi_a_g523; assert_equal("Demand 1", worksheet.xi_a_g523); end
  def test_xi_a_h523; assert_equal("Demand 2", worksheet.xi_a_h523); end
  def test_xi_a_i523; assert_equal("Demand 3", worksheet.xi_a_i523); end
  def test_xi_a_j523; assert_equal("Residual", worksheet.xi_a_j523); end
  def test_xi_a_k523; assert_equal("General objectives", worksheet.xi_a_k523); end
  def test_xi_a_d524; assert_equal("Demand", worksheet.xi_a_d524); end
  def test_xi_a_f524; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f524, 0.001); end
  def test_xi_a_d525; assert_equal("Ambition 1", worksheet.xi_a_d525); end
  def test_xi_a_g525; assert_in_delta(0.6132160490229914, worksheet.xi_a_g525, 0.001); end
  def test_xi_a_h525; assert_in_delta(0.5110133741858229, worksheet.xi_a_h525, 0.001); end
  def test_xi_a_i525; assert_in_delta(0.25550668709291147, worksheet.xi_a_i525, 0.001); end
  def test_xi_a_d526; assert_equal("Ambition 2", worksheet.xi_a_d526); end
  def test_xi_a_g526; assert_in_epsilon(4.385899994314824, worksheet.xi_a_g526, 0.001); end
  def test_xi_a_h526; assert_in_epsilon(3.654916661929006, worksheet.xi_a_h526, 0.001); end
  def test_xi_a_i526; assert_in_epsilon(1.8274583309644998, worksheet.xi_a_i526, 0.001); end
  def test_xi_a_d527; assert_equal("Ambition 3", worksheet.xi_a_d527); end
  def test_xi_a_g527; assert_in_delta(0.11670688617023917, worksheet.xi_a_g527, 0.001); end
  def test_xi_a_h527; assert_in_delta(0.09725573847519753, worksheet.xi_a_h527, 0.001); end
  def test_xi_a_i527; assert_in_delta(0.048627869237598764, worksheet.xi_a_i527, 0.001); end
  def test_xi_a_d528; assert_equal("Ambition 4", worksheet.xi_a_d528); end
  def test_xi_a_g528; assert_in_epsilon(1.3305459285269188, worksheet.xi_a_g528, 0.001); end
  def test_xi_a_h528; assert_in_epsilon(1.1087882737724284, worksheet.xi_a_h528, 0.001); end
  def test_xi_a_i528; assert_in_delta(0.5543941368862135, worksheet.xi_a_i528, 0.001); end
  def test_xi_a_d529; assert_equal("Residual", worksheet.xi_a_d529); end
  def test_xi_a_g529; assert_in_delta(0.4036477338784543, worksheet.xi_a_g529, 0.001); end
  def test_xi_a_h529; assert_in_delta(0.3363731115653774, worksheet.xi_a_h529, 0.001); end
  def test_xi_a_i529; assert_in_delta(0.16818655578268782, worksheet.xi_a_i529, 0.001); end
  def test_xi_a_l529; assert_in_delta(0.9410734662518967, worksheet.xi_a_l529, 0.001); end
  def test_xi_a_m529; assert_in_delta(0.9410734662518966, worksheet.xi_a_m529, 0.001); end
  def test_xi_a_n529; assert_in_delta(0.9410734662518968, worksheet.xi_a_n529, 0.001); end
  def test_xi_a_b531; assert_equal("Add on to model negatives (a split needs to be manually added at the place with a negative, the residual must not be used anymore in this case)", worksheet.xi_a_b531); end
  def test_xi_a_c532; assert_equal("MtCO2 delta (for graphs)", worksheet.xi_a_c532); end
  def test_xi_a_f532; assert_equal("2010 Orig", worksheet.xi_a_f532); end
  def test_xi_a_g532; assert_equal("Demand 1", worksheet.xi_a_g532); end
  def test_xi_a_h532; assert_equal("Demand 2", worksheet.xi_a_h532); end
  def test_xi_a_i532; assert_equal("Demand 3", worksheet.xi_a_i532); end
  def test_xi_a_j532; assert_equal("Residual", worksheet.xi_a_j532); end
  def test_xi_a_k532; assert_equal("General objectives", worksheet.xi_a_k532); end
  def test_xi_a_d533; assert_equal("Demande", worksheet.xi_a_d533); end
  def test_xi_a_f533; assert_in_epsilon(5.708347159927832, worksheet.xi_a_f533, 0.001); end
  def test_xi_a_d534; assert_equal("Lever 1", worksheet.xi_a_d534); end
  def test_xi_a_g534; assert_in_delta(0.6132160490229914, worksheet.xi_a_g534, 0.001); end
  def test_xi_a_h534; assert_in_delta(0.5110133741858229, worksheet.xi_a_h534, 0.001); end
  def test_xi_a_i534; assert_in_delta(0.25550668709291147, worksheet.xi_a_i534, 0.001); end
  def test_xi_a_d535; assert_equal("Lever 2", worksheet.xi_a_d535); end
  def test_xi_a_g535; assert_in_epsilon(4.385899994314824, worksheet.xi_a_g535, 0.001); end
  def test_xi_a_h535; assert_in_epsilon(3.654916661929006, worksheet.xi_a_h535, 0.001); end
  def test_xi_a_i535; assert_in_epsilon(1.8274583309644998, worksheet.xi_a_i535, 0.001); end
  def test_xi_a_d536; assert_equal("Lever 3 ", worksheet.xi_a_d536); end
  def test_xi_a_g536; assert_in_delta(0.11670688617023917, worksheet.xi_a_g536, 0.001); end
  def test_xi_a_h536; assert_in_delta(0.09725573847519753, worksheet.xi_a_h536, 0.001); end
  def test_xi_a_i536; assert_in_delta(0.048627869237598764, worksheet.xi_a_i536, 0.001); end
  def test_xi_a_d537; assert_equal("Lever 4 positive", worksheet.xi_a_d537); end
  def test_xi_a_g537; assert_in_epsilon(-5.115822929508054, worksheet.xi_a_g537, 0.001); end
  def test_xi_a_h537; assert_in_epsilon(-4.263185774590026, worksheet.xi_a_h537, 0.001); end
  def test_xi_a_i537; assert_in_epsilon(-2.1315928872950103, worksheet.xi_a_i537, 0.001); end
  def test_xi_a_d538; assert_equal("Lever negative", worksheet.xi_a_d538); end
  def test_xi_a_g538; assert_in_delta(0.4036477338784543, worksheet.xi_a_g538, 0.001); end
  def test_xi_a_h538; assert_in_delta(0.3363731115653774, worksheet.xi_a_h538, 0.001); end
  def test_xi_a_i538; assert_in_delta(0.16818655578268782, worksheet.xi_a_i538, 0.001); end
  def test_xi_a_d539; assert_equal("Residual", worksheet.xi_a_d539); end
  def test_xi_a_l539; assert_in_delta(0.9410734662518967, worksheet.xi_a_l539, 0.001); end
  def test_xi_a_m539; assert_in_delta(0.9410734662518966, worksheet.xi_a_m539, 0.001); end
  def test_xi_a_n539; assert_in_delta(0.9410734662518968, worksheet.xi_a_n539, 0.001); end
  def test_xi_a_b543; assert_equal("CO2 Waterfall", worksheet.xi_a_b543); end
  def test_xi_a_f544; assert_equal("2010 Orig", worksheet.xi_a_f544); end
  def test_xi_a_g544; assert_equal("2050 Orig", worksheet.xi_a_g544); end
  def test_xi_a_h544; assert_equal("EAF mix", worksheet.xi_a_h544); end
  def test_xi_a_i544; assert_equal("Hard steal", worksheet.xi_a_i544); end
  def test_xi_a_j544; assert_equal("Energy efficiency", worksheet.xi_a_j544); end
  def test_xi_a_k544; assert_equal("Top–gas/Hisarna", worksheet.xi_a_k544); end
  def test_xi_a_l544; assert_equal("Gas injection", worksheet.xi_a_l544); end
  def test_xi_a_m544; assert_equal("Biomass", worksheet.xi_a_m544); end
  def test_xi_a_n544; assert_equal("CCS", worksheet.xi_a_n544); end
  def test_xi_a_c545; assert_equal("MtCO2", worksheet.xi_a_c545); end
  def test_xi_a_f545; assert_in_epsilon(9.230780077441661, worksheet.xi_a_f545, 0.001); end
  def test_xi_a_g545; assert_in_epsilon(9.230780077441661, worksheet.xi_a_g545, 0.001); end
  def test_xi_a_bi262; assert_in_epsilon(8.541621110502565, worksheet.xi_a_bi262, 0.001); end
  def test_xi_a_h545; assert_in_epsilon(8.541621110502565, worksheet.xi_a_h545, 0.001); end
  def test_xi_a_bi285; assert_in_epsilon(8.029123843872409, worksheet.xi_a_bi285, 0.001); end
  def test_xi_a_i545; assert_in_epsilon(8.029123843872409, worksheet.xi_a_i545, 0.001); end
  def test_xi_a_bi308; assert_in_epsilon(7.705821618210376, worksheet.xi_a_bi308, 0.001); end
  def test_xi_a_j545; assert_in_epsilon(7.705821618210376, worksheet.xi_a_j545, 0.001); end
  def test_xi_a_bi358; assert_in_epsilon(6.874311422545697, worksheet.xi_a_bi358, 0.001); end
  def test_xi_a_k545; assert_in_epsilon(6.874311422545697, worksheet.xi_a_k545, 0.001); end
  def test_xi_a_bi381; assert_in_epsilon(6.861372983835681, worksheet.xi_a_bi381, 0.001); end
  def test_xi_a_l545; assert_in_epsilon(6.861372983835681, worksheet.xi_a_l545, 0.001); end
  def test_xi_a_bi415; assert_in_epsilon(4.242562882640762, worksheet.xi_a_bi415, 0.001); end
  def test_xi_a_bi416; assert_in_epsilon(2.1962636163197917, worksheet.xi_a_bi416, 0.001); end
  def test_xi_a_bi417; assert_in_epsilon(6.4388264989605535, worksheet.xi_a_bi417, 0.001); end
  def test_xi_a_m545; assert_in_epsilon(6.4388264989605535, worksheet.xi_a_m545, 0.001); end
  def test_xi_a_bi441; assert_in_delta(0.9995396265284899, worksheet.xi_a_bi441, 0.001); end
  def test_xi_a_bi442; assert_in_epsilon(2.1962636163197917, worksheet.xi_a_bi442, 0.001); end
  def test_xi_a_bi443; assert_in_epsilon(3.1958032428482817, worksheet.xi_a_bi443, 0.001); end
  def test_xi_a_n545; assert_in_epsilon(3.1958032428482817, worksheet.xi_a_n545, 0.001); end
  def test_xi_a_c546; assert_equal("MtCO2 delta (for graphs)", worksheet.xi_a_c546); end
  def test_xi_a_f546; assert_in_epsilon(9.230780077441661, worksheet.xi_a_f546, 0.001); end
  def test_xi_a_g546; assert_in_delta(0, (worksheet.xi_a_g546||0), 0.001); end
  def test_xi_a_c547; assert_equal("% evolutions (for graphs)", worksheet.xi_a_c547); end
  def test_xi_a_g547; assert_in_delta(0, (worksheet.xi_a_g547||0), 0.001); end
  def test_xi_a_h547; assert_in_delta(-0.07465880035678406, worksheet.xi_a_h547, 0.001); end
  def test_xi_a_i547; assert_in_delta(-0.05552047197859318, worksheet.xi_a_i547, 0.001); end
  def test_xi_a_j547; assert_in_delta(-0.03502436662445513, worksheet.xi_a_j547, 0.001); end
  def test_xi_a_k547; assert_in_delta(-0.09008016534775189, worksheet.xi_a_k547, 0.001); end
  def test_xi_a_l547; assert_in_delta(-0.0014016625465528277, worksheet.xi_a_l547, 0.001); end
  def test_xi_a_m547; assert_in_delta(-0.04577581540565066, worksheet.xi_a_m547, 0.001); end
  def test_xi_a_n547; assert_in_delta(-0.351327106583075, worksheet.xi_a_n547, 0.001); end
  def test_xi_a_o547; assert_in_delta(-0.6537883888428627, worksheet.xi_a_o547, 0.001); end
  def test_xi_a_b550; assert_equal("Cost summary", worksheet.xi_a_b550); end
  def test_xi_a_f551; assert_equal("2010 Orig", worksheet.xi_a_f551); end
  def test_xi_a_g551; assert_equal("2050 Orig", worksheet.xi_a_g551); end
  def test_xi_a_h551; assert_equal("EAF mix", worksheet.xi_a_h551); end
  def test_xi_a_i551; assert_equal("Hard steal", worksheet.xi_a_i551); end
  def test_xi_a_j551; assert_equal("Energy efficiency", worksheet.xi_a_j551); end
  def test_xi_a_k551; assert_equal("Top–gas/Hisarna", worksheet.xi_a_k551); end
  def test_xi_a_l551; assert_equal("Gas injection", worksheet.xi_a_l551); end
  def test_xi_a_m551; assert_equal("Biomass", worksheet.xi_a_m551); end
  def test_xi_a_n551; assert_equal("CCS", worksheet.xi_a_n551); end
  def test_xi_a_c552; assert_equal("€ M", worksheet.xi_a_c552); end
  def test_xi_a_d552; assert_equal("Energy", worksheet.xi_a_d552); end
  def test_xi_a_f552; assert_in_epsilon(551.8989331525323, worksheet.xi_a_f552, 0.001); end
  def test_xi_a_bu238; assert_in_epsilon(423.66527504179237, worksheet.xi_a_bu238, 0.001); end
  def test_xi_a_g552; assert_in_epsilon(423.66527504179237, worksheet.xi_a_g552, 0.001); end
  def test_xi_a_d553; assert_equal("Capex", worksheet.xi_a_d553); end
  def test_xi_a_f553; assert_in_delta(0, (worksheet.xi_a_f553||0), 0.001); end
  def test_xi_a_g553; assert_in_delta(0, (worksheet.xi_a_g553||0), 0.001); end
  def test_xi_a_cg265; assert_in_epsilon(76.28809638651393, worksheet.xi_a_cg265, 0.001); end
  def test_xi_a_h553; assert_in_epsilon(76.28809638651393, worksheet.xi_a_h553, 0.001); end
  def test_xi_a_cg288; assert_in_epsilon(99.61169938681144, worksheet.xi_a_cg288, 0.001); end
  def test_xi_a_i553; assert_in_epsilon(99.61169938681144, worksheet.xi_a_i553, 0.001); end
  def test_xi_a_cg311; assert_in_epsilon(130.8139440968591, worksheet.xi_a_cg311, 0.001); end
  def test_xi_a_j553; assert_in_epsilon(130.8139440968591, worksheet.xi_a_j553, 0.001); end
  def test_xi_a_cg361; assert_in_epsilon(519.699412057305, worksheet.xi_a_cg361, 0.001); end
  def test_xi_a_k553; assert_in_epsilon(519.699412057305, worksheet.xi_a_k553, 0.001); end
  def test_xi_a_l553; assert_in_epsilon(519.699412057305, worksheet.xi_a_l553, 0.001); end
  def test_xi_a_m553; assert_in_epsilon(519.699412057305, worksheet.xi_a_m553, 0.001); end
  def test_xi_a_n553; assert_in_epsilon(550.1953038513359, worksheet.xi_a_n553, 0.001); end
  def test_xi_a_d554; assert_equal("Total", worksheet.xi_a_d554); end
  def test_xi_a_bu265; assert_in_epsilon(-34.938558370168096, worksheet.xi_a_bu265, 0.001); end
  def test_xi_a_h552; assert_in_epsilon(388.7267166716243, worksheet.xi_a_h552, 0.001); end
  def test_xi_a_h554; assert_in_epsilon(465.0148130581382, worksheet.xi_a_h554, 0.001); end
  def test_xi_a_bu288; assert_in_epsilon(-58.262161370465606, worksheet.xi_a_bu288, 0.001); end
  def test_xi_a_i552; assert_in_epsilon(365.40311367132676, worksheet.xi_a_i552, 0.001); end
  def test_xi_a_i554; assert_in_epsilon(465.0148130581382, worksheet.xi_a_i554, 0.001); end
  def test_xi_a_bu311; assert_in_epsilon(-76.53231705403192, worksheet.xi_a_bu311, 0.001); end
  def test_xi_a_j552; assert_in_epsilon(347.13295798776045, worksheet.xi_a_j552, 0.001); end
  def test_xi_a_j554; assert_in_epsilon(477.9469020846195, worksheet.xi_a_j554, 0.001); end
  def test_xi_a_k552; assert_in_epsilon(457.1536074261219, worksheet.xi_a_k552, 0.001); end
  def test_xi_a_k554; assert_in_epsilon(976.8530194834269, worksheet.xi_a_k554, 0.001); end
  def test_xi_a_bu384; assert_in_epsilon(46.026537565879664, worksheet.xi_a_bu384, 0.001); end
  def test_xi_a_l552; assert_in_epsilon(469.69181260767203, worksheet.xi_a_l552, 0.001); end
  def test_xi_a_l554; assert_in_epsilon(989.391224664977, worksheet.xi_a_l554, 0.001); end
  def test_xi_a_bu410; assert_in_epsilon(30.145929086716194, worksheet.xi_a_bu410, 0.001); end
  def test_xi_a_m552; assert_in_epsilon(453.81120412850856, worksheet.xi_a_m552, 0.001); end
  def test_xi_a_m554; assert_in_epsilon(973.5106161858137, worksheet.xi_a_m554, 0.001); end
  def test_xi_a_n554; assert_in_epsilon(1134.8550567848647, worksheet.xi_a_n554, 0.001); end
  def test_xi_a_c555; assert_equal("€ M delta", worksheet.xi_a_c555); end
  def test_xi_a_d555; assert_equal("Energy", worksheet.xi_a_d555); end
  def test_xi_a_g555; assert_in_epsilon(-128.23365811073995, worksheet.xi_a_g555, 0.001); end
  def test_xi_a_h555; assert_in_epsilon(-34.938558370168096, worksheet.xi_a_h555, 0.001); end
  def test_xi_a_i555; assert_in_epsilon(-23.32360300029751, worksheet.xi_a_i555, 0.001); end
  def test_xi_a_j555; assert_in_epsilon(-18.270155683566315, worksheet.xi_a_j555, 0.001); end
  def test_xi_a_k555; assert_in_epsilon(110.02064943836143, worksheet.xi_a_k555, 0.001); end
  def test_xi_a_l555; assert_in_epsilon(12.538205181550154, worksheet.xi_a_l555, 0.001); end
  def test_xi_a_m555; assert_in_epsilon(-15.88060847916347, worksheet.xi_a_m555, 0.001); end
  def test_xi_a_n555; assert_in_epsilon(130.84854880502013, worksheet.xi_a_n555, 0.001); end
  def test_xi_a_d556; assert_equal("Capex", worksheet.xi_a_d556); end
  def test_xi_a_g556; assert_in_delta(0, (worksheet.xi_a_g556||0), 0.001); end
  def test_xi_a_h556; assert_in_epsilon(76.28809638651393, worksheet.xi_a_h556, 0.001); end
  def test_xi_a_i556; assert_in_epsilon(23.32360300029751, worksheet.xi_a_i556, 0.001); end
  def test_xi_a_j556; assert_in_epsilon(31.202244710047665, worksheet.xi_a_j556, 0.001); end
  def test_xi_a_k556; assert_in_epsilon(388.8854679604459, worksheet.xi_a_k556, 0.001); end
  def test_xi_a_l556; assert_in_delta(0, (worksheet.xi_a_l556||0), 0.001); end
  def test_xi_a_m556; assert_in_delta(0, (worksheet.xi_a_m556||0), 0.001); end
  def test_xi_a_n556; assert_in_epsilon(30.495891794030854, worksheet.xi_a_n556, 0.001); end
  def test_xi_a_d557; assert_equal("Total", worksheet.xi_a_d557); end
  def test_xi_a_g554; assert_in_epsilon(423.66527504179237, worksheet.xi_a_g554, 0.001); end
  def test_xi_a_f554; assert_in_epsilon(551.8989331525323, worksheet.xi_a_f554, 0.001); end
  def test_xi_a_g557; assert_in_epsilon(-128.23365811073995, worksheet.xi_a_g557, 0.001); end
  def test_xi_a_h557; assert_in_epsilon(41.34953801634583, worksheet.xi_a_h557, 0.001); end
  def test_xi_a_i557; assert_in_delta(0, (worksheet.xi_a_i557||0), 0.001); end
  def test_xi_a_j557; assert_in_epsilon(12.932089026481322, worksheet.xi_a_j557, 0.001); end
  def test_xi_a_k557; assert_in_epsilon(498.9061173988074, worksheet.xi_a_k557, 0.001); end
  def test_xi_a_l557; assert_in_epsilon(12.538205181550097, worksheet.xi_a_l557, 0.001); end
  def test_xi_a_m557; assert_in_epsilon(-15.880608479163357, worksheet.xi_a_m557, 0.001); end
  def test_xi_a_n557; assert_in_epsilon(161.34444059905104, worksheet.xi_a_n557, 0.001); end
  def test_xi_a_h558; assert_in_delta(0.07492230104550276, worksheet.xi_a_h558, 0.001); end
  def test_xi_a_i558; assert_in_delta(0, (worksheet.xi_a_i558||0), 0.001); end
  def test_xi_a_j558; assert_in_delta(0.02343198772393203, worksheet.xi_a_j558, 0.001); end
  def test_xi_a_k558; assert_in_delta(0.9039809418528466, worksheet.xi_a_k558, 0.001); end
  def test_xi_a_l558; assert_in_delta(0.022718299363127817, worksheet.xi_a_l558, 0.001); end
  def test_xi_a_m558; assert_in_delta(-0.0287744866409704, worksheet.xi_a_m558, 0.001); end
  def test_xi_a_n558; assert_in_delta(0.29234417917321665, worksheet.xi_a_n558, 0.001); end
  def test_xi_a_b560; assert_equal("Cost abbatement curve", worksheet.xi_a_b560); end
  def test_xi_a_g561; assert_equal("2050 Orig", worksheet.xi_a_g561); end
  def test_xi_a_h561; assert_equal("EAF mix", worksheet.xi_a_h561); end
  def test_xi_a_i561; assert_equal("Hard steal", worksheet.xi_a_i561); end
  def test_xi_a_j561; assert_equal("Energy efficiency", worksheet.xi_a_j561); end
  def test_xi_a_k561; assert_equal("Top–gas/Hisarna", worksheet.xi_a_k561); end
  def test_xi_a_l561; assert_equal("Gas injection", worksheet.xi_a_l561); end
  def test_xi_a_m561; assert_equal("Biomass", worksheet.xi_a_m561); end
  def test_xi_a_n561; assert_equal("CCS", worksheet.xi_a_n561); end
  def test_xi_a_c562; assert_equal("€ M/ Mt CO2", worksheet.xi_a_c562); end
  def test_xi_a_e562; assert_equal("Energy", worksheet.xi_a_e562); end
  def test_xi_a_h546; assert_in_delta(-0.6891589669390967, worksheet.xi_a_h546, 0.001); end
  def test_xi_a_h562; assert_in_epsilon(50.69738630166548, worksheet.xi_a_h562, 0.001); end
  def test_xi_a_i546; assert_in_delta(-0.5124972666301559, worksheet.xi_a_i546, 0.001); end
  def test_xi_a_i562; assert_in_epsilon(45.50971199057927, worksheet.xi_a_i562, 0.001); end
  def test_xi_a_j546; assert_in_delta(-0.32330222566203304, worksheet.xi_a_j546, 0.001); end
  def test_xi_a_j562; assert_in_epsilon(56.51107302510559, worksheet.xi_a_j562, 0.001); end
  def test_xi_a_k546; assert_in_delta(-0.8315101956646789, worksheet.xi_a_k546, 0.001); end
  def test_xi_a_k562; assert_in_epsilon(-132.31425184199327, worksheet.xi_a_k562, 0.001); end
  def test_xi_a_l546; assert_in_delta(-0.012938438710015987, worksheet.xi_a_l546, 0.001); end
  def test_xi_a_l562; assert_in_epsilon(-969.0663195586341, worksheet.xi_a_l562, 0.001); end
  def test_xi_a_m546; assert_in_delta(-0.42254648487512725, worksheet.xi_a_m546, 0.001); end
  def test_xi_a_m562; assert_in_epsilon(37.58310398406598, worksheet.xi_a_m562, 0.001); end
  def test_xi_a_n546; assert_in_epsilon(-3.243023256112272, worksheet.xi_a_n546, 0.001); end
  def test_xi_a_n562; assert_in_epsilon(-40.34770597417209, worksheet.xi_a_n562, 0.001); end
  def test_xi_a_e563; assert_equal("Capex", worksheet.xi_a_e563); end
  def test_xi_a_h563; assert_in_epsilon(-110.69738630166552, worksheet.xi_a_h563, 0.001); end
  def test_xi_a_i563; assert_in_epsilon(-45.50971199057927, worksheet.xi_a_i563, 0.001); end
  def test_xi_a_j563; assert_in_epsilon(-96.51107302510567, worksheet.xi_a_j563, 0.001); end
  def test_xi_a_k563; assert_in_epsilon(-467.68574815800673, worksheet.xi_a_k563, 0.001); end
  def test_xi_a_l563; assert_in_delta(0, (worksheet.xi_a_l563||0), 0.001); end
  def test_xi_a_m563; assert_in_delta(0, (worksheet.xi_a_m563||0), 0.001); end
  def test_xi_a_n563; assert_in_epsilon(-9.403537805827902, worksheet.xi_a_n563, 0.001); end
  def test_xi_a_e564; assert_equal("Total", worksheet.xi_a_e564); end
  def test_xi_a_h564; assert_in_epsilon(-60.000000000000036, worksheet.xi_a_h564, 0.001); end
  def test_xi_a_i564; assert_in_delta(0, (worksheet.xi_a_i564||0), 0.001); end
  def test_xi_a_j564; assert_in_epsilon(-40.000000000000085, worksheet.xi_a_j564, 0.001); end
  def test_xi_a_k564; assert_in_epsilon(-600, worksheet.xi_a_k564, 0.001); end
  def test_xi_a_l564; assert_in_epsilon(-969.0663195586341, worksheet.xi_a_l564, 0.001); end
  def test_xi_a_m564; assert_in_epsilon(37.58310398406598, worksheet.xi_a_m564, 0.001); end
  def test_xi_a_n564; assert_in_epsilon(-49.75124377999999, worksheet.xi_a_n564, 0.001); end
  def test_xi_a_c566; assert_equal("€ M/ Mt CO2 Columns manually reordered (for graphs)", worksheet.xi_a_c566); end
  def test_xi_a_g567; assert_equal("Hard steal", worksheet.xi_a_g567); end
  def test_xi_a_h567; assert_equal("Energy efficiency", worksheet.xi_a_h567); end
  def test_xi_a_i567; assert_equal("CCS", worksheet.xi_a_i567); end
  def test_xi_a_j567; assert_equal("EAF mix", worksheet.xi_a_j567); end
  def test_xi_a_k567; assert_equal("Biomass", worksheet.xi_a_k567); end
  def test_xi_a_l567; assert_equal("Top–gas/Hisarna", worksheet.xi_a_l567); end
  def test_xi_a_m567; assert_equal("Gas injection", worksheet.xi_a_m567); end
  def test_xi_a_e568; assert_equal("tCO2e reduction", worksheet.xi_a_e568); end
  def test_xi_a_g568; assert_in_delta(0.5124972666301559, worksheet.xi_a_g568, 0.001); end
  def test_xi_a_h568; assert_in_delta(0.32330222566203304, worksheet.xi_a_h568, 0.001); end
  def test_xi_a_i568; assert_in_epsilon(3.243023256112272, worksheet.xi_a_i568, 0.001); end
  def test_xi_a_j568; assert_in_delta(0.6891589669390967, worksheet.xi_a_j568, 0.001); end
  def test_xi_a_k568; assert_in_delta(0.42254648487512725, worksheet.xi_a_k568, 0.001); end
  def test_xi_a_l568; assert_in_delta(0.8315101956646789, worksheet.xi_a_l568, 0.001); end
  def test_xi_a_m568; assert_in_delta(0.012938438710015987, worksheet.xi_a_m568, 0.001); end
  def test_xi_a_e569; assert_equal("%tCO2e reduction", worksheet.xi_a_e569); end
  def test_xi_a_g569; assert_in_delta(0.05552047197859318, worksheet.xi_a_g569, 0.001); end
  def test_xi_a_h569; assert_in_delta(0.03502436662445513, worksheet.xi_a_h569, 0.001); end
  def test_xi_a_i569; assert_in_delta(0.351327106583075, worksheet.xi_a_i569, 0.001); end
  def test_xi_a_j569; assert_in_delta(0.07465880035678406, worksheet.xi_a_j569, 0.001); end
  def test_xi_a_k569; assert_in_delta(0.04577581540565066, worksheet.xi_a_k569, 0.001); end
  def test_xi_a_l569; assert_in_delta(0.09008016534775189, worksheet.xi_a_l569, 0.001); end
  def test_xi_a_m569; assert_in_delta(0.0014016625465528277, worksheet.xi_a_m569, 0.001); end
  def test_xi_a_q569; assert_in_delta(0.0014016625465528277, worksheet.xi_a_q569, 0.001); end
  def test_xi_a_r569; assert_equal("if you add the 2010-2050 % increase, you reach the total % reduction vs 2010", worksheet.xi_a_r569); end
  def test_xi_a_s569; assert_in_delta(0.0014016625465528277, worksheet.xi_a_s569, 0.001); end
  def test_xi_a_e570; assert_equal("MEUR/tCO2e", worksheet.xi_a_e570); end
  def test_xi_a_g570; assert_in_delta(0, (worksheet.xi_a_g570||0), 0.001); end
  def test_xi_a_h570; assert_in_epsilon(40.000000000000085, worksheet.xi_a_h570, 0.001); end
  def test_xi_a_i570; assert_in_epsilon(49.75124377999999, worksheet.xi_a_i570, 0.001); end
  def test_xi_a_j570; assert_in_epsilon(60.000000000000036, worksheet.xi_a_j570, 0.001); end
  def test_xi_a_k570; assert_in_epsilon(-37.58310398406598, worksheet.xi_a_k570, 0.001); end
  def test_xi_a_l570; assert_in_epsilon(600, worksheet.xi_a_l570, 0.001); end
  def test_xi_a_m570; assert_in_epsilon(969.0663195586341, worksheet.xi_a_m570, 0.001); end
  def test_xi_a_bu437; assert_in_epsilon(160.99447789173632, worksheet.xi_a_bu437, 0.001); end
  def test_xi_a_n552; assert_in_epsilon(584.6597529335287, worksheet.xi_a_n552, 0.001); end
  def test_xi_a_o570; assert_in_epsilon(711.1897817430722, worksheet.xi_a_o570, 0.001); end
  def test_xi_a_b574; assert_equal("Capex build up", worksheet.xi_a_b574); end
  def test_xi_a_d575; assert_equal("Dynamic", worksheet.xi_a_d575); end
  def test_xi_a_f575; assert_equal("Ref", worksheet.xi_a_f575); end
  def test_xi_a_g575; assert_equal("Core", worksheet.xi_a_g575); end
  def test_xi_b_a1; assert_equal("XI", worksheet.xi_b_a1); end
  def test_xi_b_b1; assert_equal("Industry", worksheet.xi_b_b1); end
  def test_xi_b_o1; assert_equal("CONTROL PANEL", worksheet.xi_b_o1); end
  def test_xi_b_a2; assert_equal("XI.b", worksheet.xi_b_a2); end
  def test_xi_b_b2; assert_equal("Cement Industry", worksheet.xi_b_b2); end
  def test_xi_b_b4; assert_equal("Trajectory choice", worksheet.xi_b_b4); end
  def test_xi_b_d7; assert_equal("Component", worksheet.xi_b_d7); end
  def test_xi_b_e7; assert_equal("Trajectory", worksheet.xi_b_e7); end
  def test_xi_b_f7; assert_equal("Notes", worksheet.xi_b_f7); end
  def test_xi_b_c8; assert_equal("(i)", worksheet.xi_b_c8); end
  def test_xi_b_d8; assert_equal("Cement Output Growth", worksheet.xi_b_d8); end
  def test_xi_b_f8; assert_equal("(1 for high, 3 for low)", worksheet.xi_b_f8); end
  def test_xi_b_c9; assert_equal("(ii)", worksheet.xi_b_c9); end
  def test_xi_b_d9; assert_equal("Cement Energy intensity", worksheet.xi_b_d9); end
  def test_xi_b_f9; assert_equal("(1 for not ambition, 4 for ambitious)", worksheet.xi_b_f9); end
  def test_xi_b_c10; assert_equal("     1", worksheet.xi_b_c10); end
  def test_xi_b_d10; assert_equal("Product Mix", worksheet.xi_b_d10); end
  def test_control_h37; assert_in_epsilon(30, worksheet.control_h37, 0.001); end
  def test_xi_b_e9; assert_in_epsilon(3, worksheet.xi_b_e9, 0.001); end
  def test_xi_b_e10; assert_in_epsilon(3, worksheet.xi_b_e10, 0.001); end
  def test_xi_b_f10; assert_equal("(by default, same as global)", worksheet.xi_b_f10); end
  def test_xi_b_c11; assert_equal("     2", worksheet.xi_b_c11); end
  def test_xi_b_d11; assert_equal("Energy efficiency", worksheet.xi_b_d11); end
  def test_xi_b_e11; assert_in_epsilon(3, worksheet.xi_b_e11, 0.001); end
  def test_xi_b_f11; assert_equal("(by default, same as global)", worksheet.xi_b_f11); end
  def test_xi_b_c12; assert_equal("     3", worksheet.xi_b_c12); end
  def test_xi_b_d12; assert_equal("Energy efficiency: Cogen", worksheet.xi_b_d12); end
  def test_xi_b_e12; assert_in_epsilon(3, worksheet.xi_b_e12, 0.001); end
  def test_xi_b_f12; assert_equal("(by default, same as global)", worksheet.xi_b_f12); end
  def test_xi_b_c13; assert_equal("     4", worksheet.xi_b_c13); end
  def test_xi_b_d13; assert_equal("Alternative fuels", worksheet.xi_b_d13); end
  def test_xi_b_e13; assert_in_epsilon(3, worksheet.xi_b_e13, 0.001); end
  def test_xi_b_f13; assert_equal("(by default, same as global)", worksheet.xi_b_f13); end
  def test_xi_b_c14; assert_equal("(iii)", worksheet.xi_b_c14); end
  def test_xi_b_d14; assert_equal("Cement CCS intensity", worksheet.xi_b_d14); end
  def test_xi_b_f14; assert_equal("(1 for not ambition, 4 for ambitious)", worksheet.xi_b_f14); end
  def test_xi_b_b17; assert_equal("Trajectory assumptions", worksheet.xi_b_b17); end
  def test_xi_b_b19; assert_equal("(Ia) Cement Output Growth", worksheet.xi_b_b19); end
  def test_xi_b_c21; assert_equal("Trajectories definition (relative to production)(% CAGR)", worksheet.xi_b_c21); end
  def test_xi_b_c22; assert_equal("Product type", worksheet.xi_b_c22); end
  def test_xi_b_d22; assert_equal("Trajectory", worksheet.xi_b_d22); end
  def test_xi_b_e22; assert_in_epsilon(2010, worksheet.xi_b_e22, 0.001); end
  def test_xi_b_f22; assert_in_epsilon(2015, worksheet.xi_b_f22, 0.001); end
  def test_xi_b_g22; assert_in_epsilon(2020, worksheet.xi_b_g22, 0.001); end
  def test_xi_b_h22; assert_in_epsilon(2025, worksheet.xi_b_h22, 0.001); end
  def test_xi_b_i22; assert_in_epsilon(2030, worksheet.xi_b_i22, 0.001); end
  def test_xi_b_j22; assert_in_epsilon(2035, worksheet.xi_b_j22, 0.001); end
  def test_xi_b_k22; assert_in_epsilon(2040, worksheet.xi_b_k22, 0.001); end
  def test_xi_b_l22; assert_in_epsilon(2045, worksheet.xi_b_l22, 0.001); end
  def test_xi_b_m22; assert_in_epsilon(2050, worksheet.xi_b_m22, 0.001); end
  def test_xi_b_r22; assert_equal("Trajectory", worksheet.xi_b_r22); end
  def test_xi_b_s22; assert_in_epsilon(2010, worksheet.xi_b_s22, 0.001); end
  def test_xi_b_t22; assert_in_epsilon(2015, worksheet.xi_b_t22, 0.001); end
  def test_xi_b_u22; assert_in_epsilon(2020, worksheet.xi_b_u22, 0.001); end
  def test_xi_b_v22; assert_in_epsilon(2025, worksheet.xi_b_v22, 0.001); end
  def test_xi_b_w22; assert_in_epsilon(2030, worksheet.xi_b_w22, 0.001); end
  def test_xi_b_x22; assert_in_epsilon(2035, worksheet.xi_b_x22, 0.001); end
  def test_xi_b_y22; assert_in_epsilon(2040, worksheet.xi_b_y22, 0.001); end
  def test_xi_b_z22; assert_in_epsilon(2045, worksheet.xi_b_z22, 0.001); end
  def test_xi_b_aa22; assert_in_epsilon(2050, worksheet.xi_b_aa22, 0.001); end
  def test_xi_b_c23; assert_equal("Cement", worksheet.xi_b_c23); end
  def test_xi_b_d23; assert_in_delta(1, worksheet.xi_b_d23, 0.001); end
  def test_xi_b_f23; assert_in_delta(0.028346722100213606, worksheet.xi_b_f23, 0.001); end
  def test_xi_b_g23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_g23, 0.001); end
  def test_xi_b_h23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_h23, 0.001); end
  def test_xi_b_i23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_i23, 0.001); end
  def test_xi_b_j23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_j23, 0.001); end
  def test_xi_b_k23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_k23, 0.001); end
  def test_xi_b_l23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_l23, 0.001); end
  def test_xi_b_m23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_m23, 0.001); end
  def test_xi_b_o23; assert_in_delta(0.1, worksheet.xi_b_o23, 0.001); end
  def test_xi_b_p23; assert_in_delta(0.25001849812403987, worksheet.xi_b_p23, 0.001); end
  def test_xi_b_r23; assert_in_delta(1, worksheet.xi_b_r23, 0.001); end
  def test_xi_b_t23; assert_in_delta(0.006, worksheet.xi_b_t23, 0.001); end
  def test_xi_b_u23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_u23, 0.001); end
  def test_xi_b_v23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_v23, 0.001); end
  def test_xi_b_w23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_w23, 0.001); end
  def test_xi_b_x23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_x23, 0.001); end
  def test_xi_b_y23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_y23, 0.001); end
  def test_xi_b_z23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_z23, 0.001); end
  def test_xi_b_aa23; assert_in_delta(0.0023855955106328874, worksheet.xi_b_aa23, 0.001); end
  def test_xi_b_d24; assert_in_epsilon(2, worksheet.xi_b_d24, 0.001); end
  def test_xi_b_f24; assert_in_delta(0, (worksheet.xi_b_f24||0), 0.001); end
  def test_xi_b_g24; assert_in_delta(0, (worksheet.xi_b_g24||0), 0.001); end
  def test_xi_b_h24; assert_in_delta(-0.05903748446878587, worksheet.xi_b_h24, 0.001); end
  def test_xi_b_i24; assert_in_delta(0, (worksheet.xi_b_i24||0), 0.001); end
  def test_xi_b_j24; assert_in_delta(0, (worksheet.xi_b_j24||0), 0.001); end
  def test_xi_b_k24; assert_in_delta(0, (worksheet.xi_b_k24||0), 0.001); end
  def test_xi_b_l24; assert_in_delta(0, (worksheet.xi_b_l24||0), 0.001); end
  def test_xi_b_m24; assert_in_delta(0, (worksheet.xi_b_m24||0), 0.001); end
  def test_xi_b_o24; assert_in_delta(0, (worksheet.xi_b_o24||0), 0.001); end
  def test_xi_b_p24; assert_in_delta(-0.2623308598865125, worksheet.xi_b_p24, 0.001); end
  def test_xi_b_r24; assert_in_epsilon(2, worksheet.xi_b_r24, 0.001); end
  def test_xi_b_t24; assert_in_delta(0, (worksheet.xi_b_t24||0), 0.001); end
  def test_xi_b_u24; assert_in_delta(-0.047, worksheet.xi_b_u24, 0.001); end
  def test_xi_b_v24; assert_in_delta(0, (worksheet.xi_b_v24||0), 0.001); end
  def test_xi_b_w24; assert_in_delta(0, (worksheet.xi_b_w24||0), 0.001); end
  def test_xi_b_x24; assert_in_delta(0, (worksheet.xi_b_x24||0), 0.001); end
  def test_xi_b_y24; assert_in_delta(0, (worksheet.xi_b_y24||0), 0.001); end
  def test_xi_b_z24; assert_in_delta(0, (worksheet.xi_b_z24||0), 0.001); end
  def test_xi_b_aa24; assert_in_delta(0, (worksheet.xi_b_aa24||0), 0.001); end
  def test_xi_b_d25; assert_in_epsilon(3, worksheet.xi_b_d25, 0.001); end
  def test_xi_b_f25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_f25, 0.001); end
  def test_xi_b_g25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_g25, 0.001); end
  def test_xi_b_h25; assert_in_delta(-0.05903748446878587, worksheet.xi_b_h25, 0.001); end
  def test_xi_b_i25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_i25, 0.001); end
  def test_xi_b_j25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_j25, 0.001); end
  def test_xi_b_k25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_k25, 0.001); end
  def test_xi_b_l25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_l25, 0.001); end
  def test_xi_b_m25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_m25, 0.001); end
  def test_xi_b_o25; assert_in_delta(-0.1, worksheet.xi_b_o25, 0.001); end
  def test_xi_b_p25; assert_in_delta(-0.32729630806857934, worksheet.xi_b_p25, 0.001); end
  def test_xi_b_r25; assert_in_epsilon(3, worksheet.xi_b_r25, 0.001); end
  def test_xi_b_t25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_t25, 0.001); end
  def test_xi_b_u25; assert_in_delta(-0.047, worksheet.xi_b_u25, 0.001); end
  def test_xi_b_v25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_v25, 0.001); end
  def test_xi_b_w25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_w25, 0.001); end
  def test_xi_b_x25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_x25, 0.001); end
  def test_xi_b_y25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_y25, 0.001); end
  def test_xi_b_z25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_z25, 0.001); end
  def test_xi_b_aa25; assert_in_delta(-0.002630546923292343, worksheet.xi_b_aa25, 0.001); end
  def test_xi_b_c26; assert_equal("Chosen trajectory (% CAGR)", worksheet.xi_b_c26); end
  def test_xi_b_r26; assert_equal("flat", worksheet.xi_b_r26); end
  def test_xi_b_t26; assert_in_delta(0, (worksheet.xi_b_t26||0), 0.001); end
  def test_xi_b_u26; assert_in_delta(0, (worksheet.xi_b_u26||0), 0.001); end
  def test_xi_b_v26; assert_in_delta(0, (worksheet.xi_b_v26||0), 0.001); end
  def test_xi_b_w26; assert_in_delta(0, (worksheet.xi_b_w26||0), 0.001); end
  def test_xi_b_x26; assert_in_delta(0, (worksheet.xi_b_x26||0), 0.001); end
  def test_xi_b_y26; assert_in_delta(0, (worksheet.xi_b_y26||0), 0.001); end
  def test_xi_b_z26; assert_in_delta(0, (worksheet.xi_b_z26||0), 0.001); end
  def test_xi_b_aa26; assert_in_delta(0, (worksheet.xi_b_aa26||0), 0.001); end
  def test_xi_b_c27; assert_equal("Product type", worksheet.xi_b_c27); end
  def test_xi_b_d27; assert_equal("Description", worksheet.xi_b_d27); end
  def test_xi_b_e27; assert_in_epsilon(2010, worksheet.xi_b_e27, 0.001); end
  def test_xi_b_f27; assert_in_epsilon(2015, worksheet.xi_b_f27, 0.001); end
  def test_xi_b_g27; assert_in_epsilon(2020, worksheet.xi_b_g27, 0.001); end
  def test_xi_b_h27; assert_in_epsilon(2025, worksheet.xi_b_h27, 0.001); end
  def test_xi_b_i27; assert_in_epsilon(2030, worksheet.xi_b_i27, 0.001); end
  def test_xi_b_j27; assert_in_epsilon(2035, worksheet.xi_b_j27, 0.001); end
  def test_xi_b_k27; assert_in_epsilon(2040, worksheet.xi_b_k27, 0.001); end
  def test_xi_b_l27; assert_in_epsilon(2045, worksheet.xi_b_l27, 0.001); end
  def test_xi_b_m27; assert_in_epsilon(2050, worksheet.xi_b_m27, 0.001); end
  def test_xi_b_c28; assert_equal("(i)", worksheet.xi_b_c28); end
  def test_xi_b_d28; assert_equal("Cement", worksheet.xi_b_d28); end
  def test_xi_b_f28; assert_in_delta(0.028346722100213606, worksheet.xi_b_f28, 0.001); end
  def test_xi_b_g28; assert_in_delta(0.0023855955106328874, worksheet.xi_b_g28, 0.001); end
  def test_xi_b_h28; assert_in_delta(0.0023855955106328874, worksheet.xi_b_h28, 0.001); end
  def test_xi_b_i28; assert_in_delta(0.0023855955106328874, worksheet.xi_b_i28, 0.001); end
  def test_xi_b_j28; assert_in_delta(0.0023855955106328874, worksheet.xi_b_j28, 0.001); end
  def test_xi_b_k28; assert_in_delta(0.0023855955106328874, worksheet.xi_b_k28, 0.001); end
  def test_xi_b_l28; assert_in_delta(0.0023855955106328874, worksheet.xi_b_l28, 0.001); end
  def test_xi_b_m28; assert_in_delta(0.0023855955106328874, worksheet.xi_b_m28, 0.001); end
  def test_xi_b_b32; assert_equal("(Ib) Cement Energy intensity", worksheet.xi_b_b32); end
  def test_xi_b_b33; assert_in_delta(1, worksheet.xi_b_b33, 0.001); end
  def test_xi_b_c33; assert_equal("Product mix", worksheet.xi_b_c33); end
  def test_xi_b_c34; assert_equal("There is no additional clinker substitution potential as Wallonia is already below the European 2050 target", worksheet.xi_b_c34); end
  def test_xi_b_c35; assert_equal("% clinker", worksheet.xi_b_c35); end
  def test_xi_b_d35; assert_in_delta(1, worksheet.xi_b_d35, 0.001); end
  def test_xi_b_e35; assert_in_delta(0.67, worksheet.xi_b_e35, 0.001); end
  def test_xi_b_f35; assert_in_delta(0.6837500000000001, worksheet.xi_b_f35, 0.001); end
  def test_xi_b_g35; assert_in_delta(0.6975, worksheet.xi_b_g35, 0.001); end
  def test_xi_b_h35; assert_in_delta(0.71125, worksheet.xi_b_h35, 0.001); end
  def test_xi_b_i35; assert_in_delta(0.7250000000000001, worksheet.xi_b_i35, 0.001); end
  def test_xi_b_j35; assert_in_delta(0.73875, worksheet.xi_b_j35, 0.001); end
  def test_xi_b_k35; assert_in_delta(0.7525000000000001, worksheet.xi_b_k35, 0.001); end
  def test_xi_b_l35; assert_in_delta(0.76625, worksheet.xi_b_l35, 0.001); end
  def test_xi_b_m35; assert_in_delta(0.78, worksheet.xi_b_m35, 0.001); end
  def test_xi_b_d36; assert_in_epsilon(2, worksheet.xi_b_d36, 0.001); end
  def test_xi_b_e36; assert_in_delta(0.67, worksheet.xi_b_e36, 0.001); end
  def test_xi_b_f36; assert_in_delta(0.67, worksheet.xi_b_f36, 0.001); end
  def test_xi_b_g36; assert_in_delta(0.67, worksheet.xi_b_g36, 0.001); end
  def test_xi_b_h36; assert_in_delta(0.67, worksheet.xi_b_h36, 0.001); end
  def test_xi_b_i36; assert_in_delta(0.67, worksheet.xi_b_i36, 0.001); end
  def test_xi_b_j36; assert_in_delta(0.67, worksheet.xi_b_j36, 0.001); end
  def test_xi_b_k36; assert_in_delta(0.67, worksheet.xi_b_k36, 0.001); end
  def test_xi_b_l36; assert_in_delta(0.67, worksheet.xi_b_l36, 0.001); end
  def test_xi_b_m36; assert_in_delta(0.67, worksheet.xi_b_m36, 0.001); end
  def test_xi_b_d37; assert_in_epsilon(3, worksheet.xi_b_d37, 0.001); end
  def test_xi_b_e37; assert_in_delta(0.67, worksheet.xi_b_e37, 0.001); end
  def test_xi_b_f37; assert_in_delta(0.6231875, worksheet.xi_b_f37, 0.001); end
  def test_xi_b_g37; assert_in_delta(0.5763750000000001, worksheet.xi_b_g37, 0.001); end
  def test_xi_b_h37; assert_in_delta(0.5295625, worksheet.xi_b_h37, 0.001); end
  def test_xi_b_i37; assert_in_delta(0.48275, worksheet.xi_b_i37, 0.001); end
  def test_xi_b_j37; assert_in_delta(0.43593750000000003, worksheet.xi_b_j37, 0.001); end
  def test_xi_b_k37; assert_in_delta(0.389125, worksheet.xi_b_k37, 0.001); end
  def test_xi_b_l37; assert_in_delta(0.3423125, worksheet.xi_b_l37, 0.001); end
  def test_xi_b_m37; assert_in_delta(0.2955, worksheet.xi_b_m37, 0.001); end
  def test_xi_b_d38; assert_in_epsilon(4, worksheet.xi_b_d38, 0.001); end
  def test_xi_b_e38; assert_in_delta(0.67, worksheet.xi_b_e38, 0.001); end
  def test_xi_b_f38; assert_in_delta(0.59875, worksheet.xi_b_f38, 0.001); end
  def test_xi_b_g38; assert_in_delta(0.5275000000000001, worksheet.xi_b_g38, 0.001); end
  def test_xi_b_h38; assert_in_delta(0.45625000000000004, worksheet.xi_b_h38, 0.001); end
  def test_xi_b_i38; assert_in_delta(0.385, worksheet.xi_b_i38, 0.001); end
  def test_xi_b_j38; assert_in_delta(0.31375, worksheet.xi_b_j38, 0.001); end
  def test_xi_b_k38; assert_in_delta(0.2425, worksheet.xi_b_k38, 0.001); end
  def test_xi_b_l38; assert_in_delta(0.17124999999999996, worksheet.xi_b_l38, 0.001); end
  def test_xi_b_m38; assert_in_delta(0.1, worksheet.xi_b_m38, 0.001); end
  def test_xi_b_c40; assert_equal("%reduction", worksheet.xi_b_c40); end
  def test_xi_b_d40; assert_equal("Type", worksheet.xi_b_d40); end
  def test_xi_b_e40; assert_in_epsilon(2010, worksheet.xi_b_e40, 0.001); end
  def test_xi_b_f40; assert_in_epsilon(2015, worksheet.xi_b_f40, 0.001); end
  def test_xi_b_g40; assert_in_epsilon(2020, worksheet.xi_b_g40, 0.001); end
  def test_xi_b_h40; assert_in_epsilon(2025, worksheet.xi_b_h40, 0.001); end
  def test_xi_b_i40; assert_in_epsilon(2030, worksheet.xi_b_i40, 0.001); end
  def test_xi_b_j40; assert_in_epsilon(2035, worksheet.xi_b_j40, 0.001); end
  def test_xi_b_k40; assert_in_epsilon(2040, worksheet.xi_b_k40, 0.001); end
  def test_xi_b_l40; assert_in_epsilon(2045, worksheet.xi_b_l40, 0.001); end
  def test_xi_b_m40; assert_in_epsilon(2050, worksheet.xi_b_m40, 0.001); end
  def test_xi_b_d41; assert_in_delta(1, worksheet.xi_b_d41, 0.001); end
  def test_xi_b_e41; assert_in_delta(0, (worksheet.xi_b_e41||0), 0.001); end
  def test_xi_b_f41; assert_in_delta(0.02052238805970149, worksheet.xi_b_f41, 0.001); end
  def test_xi_b_g41; assert_in_delta(0.04104477611940298, worksheet.xi_b_g41, 0.001); end
  def test_xi_b_h41; assert_in_delta(0.061567164179104475, worksheet.xi_b_h41, 0.001); end
  def test_xi_b_i41; assert_in_delta(0.08208955223880596, worksheet.xi_b_i41, 0.001); end
  def test_xi_b_j41; assert_in_delta(0.10261194029850744, worksheet.xi_b_j41, 0.001); end
  def test_xi_b_k41; assert_in_delta(0.12313432835820895, worksheet.xi_b_k41, 0.001); end
  def test_xi_b_l41; assert_in_delta(0.14365671641791042, worksheet.xi_b_l41, 0.001); end
  def test_xi_b_m41; assert_in_delta(0.16417910447761191, worksheet.xi_b_m41, 0.001); end
  def test_xi_b_d42; assert_in_epsilon(2, worksheet.xi_b_d42, 0.001); end
  def test_xi_b_e42; assert_in_delta(0, (worksheet.xi_b_e42||0), 0.001); end
  def test_xi_b_f42; assert_in_delta(0, (worksheet.xi_b_f42||0), 0.001); end
  def test_xi_b_g42; assert_in_delta(0, (worksheet.xi_b_g42||0), 0.001); end
  def test_xi_b_h42; assert_in_delta(0, (worksheet.xi_b_h42||0), 0.001); end
  def test_xi_b_i42; assert_in_delta(0, (worksheet.xi_b_i42||0), 0.001); end
  def test_xi_b_j42; assert_in_delta(0, (worksheet.xi_b_j42||0), 0.001); end
  def test_xi_b_k42; assert_in_delta(0, (worksheet.xi_b_k42||0), 0.001); end
  def test_xi_b_l42; assert_in_delta(0, (worksheet.xi_b_l42||0), 0.001); end
  def test_xi_b_m42; assert_in_delta(0, (worksheet.xi_b_m42||0), 0.001); end
  def test_xi_b_n42; assert_equal("half level 3", worksheet.xi_b_n42); end
  def test_xi_b_d43; assert_in_epsilon(3, worksheet.xi_b_d43, 0.001); end
  def test_xi_b_e43; assert_in_delta(0, (worksheet.xi_b_e43||0), 0.001); end
  def test_xi_b_f43; assert_in_delta(-0.06986940298507463, worksheet.xi_b_f43, 0.001); end
  def test_xi_b_g43; assert_in_delta(-0.13973880597014926, worksheet.xi_b_g43, 0.001); end
  def test_xi_b_h43; assert_in_delta(-0.2096082089552239, worksheet.xi_b_h43, 0.001); end
  def test_xi_b_i43; assert_in_delta(-0.2794776119402985, worksheet.xi_b_i43, 0.001); end
  def test_xi_b_j43; assert_in_delta(-0.3493470149253731, worksheet.xi_b_j43, 0.001); end
  def test_xi_b_k43; assert_in_delta(-0.4192164179104478, worksheet.xi_b_k43, 0.001); end
  def test_xi_b_l43; assert_in_delta(-0.48908582089552244, worksheet.xi_b_l43, 0.001); end
  def test_xi_b_m43; assert_in_delta(-0.558955223880597, worksheet.xi_b_m43, 0.001); end
  def test_xi_b_n43; assert_equal("all except prefabriqué industry", worksheet.xi_b_n43); end
  def test_xi_b_d44; assert_in_epsilon(4, worksheet.xi_b_d44, 0.001); end
  def test_xi_b_e44; assert_in_delta(0, (worksheet.xi_b_e44||0), 0.001); end
  def test_xi_b_f44; assert_in_delta(-0.10634328358208955, worksheet.xi_b_f44, 0.001); end
  def test_xi_b_g44; assert_in_delta(-0.2126865671641791, worksheet.xi_b_g44, 0.001); end
  def test_xi_b_h44; assert_in_delta(-0.31902985074626866, worksheet.xi_b_h44, 0.001); end
  def test_xi_b_i44; assert_in_delta(-0.4253731343283582, worksheet.xi_b_i44, 0.001); end
  def test_xi_b_j44; assert_in_delta(-0.5317164179104478, worksheet.xi_b_j44, 0.001); end
  def test_xi_b_k44; assert_in_delta(-0.6380597014925373, worksheet.xi_b_k44, 0.001); end
  def test_xi_b_l44; assert_in_delta(-0.7444029850746269, worksheet.xi_b_l44, 0.001); end
  def test_xi_b_m44; assert_in_delta(-0.8507462686567164, worksheet.xi_b_m44, 0.001); end
  def test_xi_b_n44; assert_in_delta(1, worksheet.xi_b_n44, 0.001); end
  def test_xi_b_b46; assert_in_delta(1, worksheet.xi_b_b46, 0.001); end
  def test_xi_b_c46; assert_equal("Energy efficiency", worksheet.xi_b_c46); end
  def test_xi_b_c47; assert_equal("Definition", worksheet.xi_b_c47); end
  def test_xi_b_c48; assert_equal("Improvement in energy efficiency is expected worldwide", worksheet.xi_b_c48); end
  def test_xi_b_c49; assert_equal("Assumption, linear progression", worksheet.xi_b_c49); end
  def test_xi_b_c51; assert_equal("CO2", worksheet.xi_b_c51); end
  def test_xi_b_d51; assert_equal("Type", worksheet.xi_b_d51); end
  def test_xi_b_e51; assert_in_epsilon(2010, worksheet.xi_b_e51, 0.001); end
  def test_xi_b_f51; assert_in_epsilon(2015, worksheet.xi_b_f51, 0.001); end
  def test_xi_b_g51; assert_in_epsilon(2020, worksheet.xi_b_g51, 0.001); end
  def test_xi_b_h51; assert_in_epsilon(2025, worksheet.xi_b_h51, 0.001); end
  def test_xi_b_i51; assert_in_epsilon(2030, worksheet.xi_b_i51, 0.001); end
  def test_xi_b_j51; assert_in_epsilon(2035, worksheet.xi_b_j51, 0.001); end
  def test_xi_b_k51; assert_in_epsilon(2040, worksheet.xi_b_k51, 0.001); end
  def test_xi_b_l51; assert_in_epsilon(2045, worksheet.xi_b_l51, 0.001); end
  def test_xi_b_m51; assert_in_epsilon(2050, worksheet.xi_b_m51, 0.001); end
  def test_xi_b_d52; assert_in_delta(1, worksheet.xi_b_d52, 0.001); end
  def test_xi_b_e52; assert_in_delta(0, (worksheet.xi_b_e52||0), 0.001); end
  def test_xi_b_f52; assert_in_delta(0.12283028773012347, worksheet.xi_b_f52, 0.001); end
  def test_xi_b_g52; assert_in_delta(0.1426813252180117, worksheet.xi_b_g52, 0.001); end
  def test_xi_b_h52; assert_in_delta(0.1426813252180117, worksheet.xi_b_h52, 0.001); end
  def test_xi_b_i52; assert_in_delta(0.1426813252180117, worksheet.xi_b_i52, 0.001); end
  def test_xi_b_j52; assert_in_delta(0.1426813252180117, worksheet.xi_b_j52, 0.001); end
  def test_xi_b_k52; assert_in_delta(0.1426813252180117, worksheet.xi_b_k52, 0.001); end
  def test_xi_b_l52; assert_in_delta(0.1426813252180117, worksheet.xi_b_l52, 0.001); end
  def test_xi_b_m52; assert_in_delta(0.1426813252180117, worksheet.xi_b_m52, 0.001); end
  def test_xi_b_d53; assert_in_epsilon(2, worksheet.xi_b_d53, 0.001); end
  def test_xi_b_e53; assert_in_delta(0, (worksheet.xi_b_e53||0), 0.001); end
  def test_xi_b_f53; assert_in_delta(0.12283028773012347, worksheet.xi_b_f53, 0.001); end
  def test_xi_b_g53; assert_in_delta(0.1426813252180117, worksheet.xi_b_g53, 0.001); end
  def test_xi_b_h53; assert_in_delta(0.1526068439619558, worksheet.xi_b_h53, 0.001); end
  def test_xi_b_i53; assert_in_delta(0.16749512207787198, worksheet.xi_b_i53, 0.001); end
  def test_xi_b_j53; assert_in_delta(0.17245788144984406, worksheet.xi_b_j53, 0.001); end
  def test_xi_b_k53; assert_in_delta(0.1774206408218161, worksheet.xi_b_k53, 0.001); end
  def test_xi_b_l53; assert_in_delta(0.18238340019378815, worksheet.xi_b_l53, 0.001); end
  def test_xi_b_m53; assert_in_delta(0.175, worksheet.xi_b_m53, 0.001); end
  def test_xi_b_n53; assert_in_delta(0.5, worksheet.xi_b_n53, 0.001); end
  def test_xi_b_d54; assert_in_epsilon(3, worksheet.xi_b_d54, 0.001); end
  def test_xi_b_e54; assert_in_delta(0, (worksheet.xi_b_e54||0), 0.001); end
  def test_xi_b_f54; assert_in_delta(0.24566057546024694, worksheet.xi_b_f54, 0.001); end
  def test_xi_b_g54; assert_in_delta(0.2853626504360234, worksheet.xi_b_g54, 0.001); end
  def test_xi_b_h54; assert_in_delta(0.3052136879239116, worksheet.xi_b_h54, 0.001); end
  def test_xi_b_i54; assert_in_delta(0.33499024415574397, worksheet.xi_b_i54, 0.001); end
  def test_xi_b_j54; assert_in_delta(0.3449157628996881, worksheet.xi_b_j54, 0.001); end
  def test_xi_b_k54; assert_in_delta(0.3548412816436322, worksheet.xi_b_k54, 0.001); end
  def test_xi_b_l54; assert_in_delta(0.3647668003875763, worksheet.xi_b_l54, 0.001); end
  def test_xi_b_m54; assert_in_delta(0.35, worksheet.xi_b_m54, 0.001); end
  def test_xi_b_n54; assert_equal("Based on IEA", worksheet.xi_b_n54); end
  def test_xi_b_d55; assert_in_epsilon(4, worksheet.xi_b_d55, 0.001); end
  def test_xi_b_e55; assert_in_delta(0, (worksheet.xi_b_e55||0), 0.001); end
  def test_xi_b_f55; assert_in_delta(0.29479269055229634, worksheet.xi_b_f55, 0.001); end
  def test_xi_b_g55; assert_in_delta(0.342435180523228, worksheet.xi_b_g55, 0.001); end
  def test_xi_b_h55; assert_in_delta(0.3662564255086939, worksheet.xi_b_h55, 0.001); end
  def test_xi_b_i55; assert_in_delta(0.40198829298689276, worksheet.xi_b_i55, 0.001); end
  def test_xi_b_j55; assert_in_delta(0.4138989154796257, worksheet.xi_b_j55, 0.001); end
  def test_xi_b_k55; assert_in_delta(0.42580953797235865, worksheet.xi_b_k55, 0.001); end
  def test_xi_b_l55; assert_in_delta(0.43772016046509155, worksheet.xi_b_l55, 0.001); end
  def test_xi_b_m55; assert_in_delta(0.42, worksheet.xi_b_m55, 0.001); end
  def test_xi_b_n55; assert_in_epsilon(1.2, worksheet.xi_b_n55, 0.001); end
  def test_xi_b_b57; assert_in_epsilon(3, worksheet.xi_b_b57, 0.001); end
  def test_xi_b_c57; assert_equal("Cogen", worksheet.xi_b_c57); end
  def test_xi_b_c58; assert_equal("Definition", worksheet.xi_b_c58); end
  def test_xi_b_c60; assert_equal("Percentage of electricity which can be produced in-house", worksheet.xi_b_c60); end
  def test_xi_b_m60; assert_in_delta(1, worksheet.xi_b_m60, 0.001); end
  def test_xi_b_c61; assert_equal("% increase of kwh ", worksheet.xi_b_c61); end
  def test_xi_b_m61; assert_in_delta(0.85, worksheet.xi_b_m61, 0.001); end
  def test_xi_b_c63; assert_equal("Applied to all consumptions", worksheet.xi_b_c63); end
  def test_xi_b_d64; assert_equal("Type", worksheet.xi_b_d64); end
  def test_xi_b_e64; assert_in_epsilon(2010, worksheet.xi_b_e64, 0.001); end
  def test_xi_b_f64; assert_in_epsilon(2015, worksheet.xi_b_f64, 0.001); end
  def test_xi_b_g64; assert_in_epsilon(2020, worksheet.xi_b_g64, 0.001); end
  def test_xi_b_h64; assert_in_epsilon(2025, worksheet.xi_b_h64, 0.001); end
  def test_xi_b_i64; assert_in_epsilon(2030, worksheet.xi_b_i64, 0.001); end
  def test_xi_b_j64; assert_in_epsilon(2035, worksheet.xi_b_j64, 0.001); end
  def test_xi_b_k64; assert_in_epsilon(2040, worksheet.xi_b_k64, 0.001); end
  def test_xi_b_l64; assert_in_epsilon(2045, worksheet.xi_b_l64, 0.001); end
  def test_xi_b_m64; assert_in_epsilon(2050, worksheet.xi_b_m64, 0.001); end
  def test_xi_b_d65; assert_in_delta(1, worksheet.xi_b_d65, 0.001); end
  def test_xi_b_e65; assert_in_delta(0, (worksheet.xi_b_e65||0), 0.001); end
  def test_xi_b_f65; assert_in_delta(0, (worksheet.xi_b_f65||0), 0.001); end
  def test_xi_b_g65; assert_in_delta(0, (worksheet.xi_b_g65||0), 0.001); end
  def test_xi_b_h65; assert_in_delta(0, (worksheet.xi_b_h65||0), 0.001); end
  def test_xi_b_i65; assert_in_delta(0, (worksheet.xi_b_i65||0), 0.001); end
  def test_xi_b_j65; assert_in_delta(0, (worksheet.xi_b_j65||0), 0.001); end
  def test_xi_b_k65; assert_in_delta(0, (worksheet.xi_b_k65||0), 0.001); end
  def test_xi_b_l65; assert_in_delta(0, (worksheet.xi_b_l65||0), 0.001); end
  def test_xi_b_m65; assert_in_delta(0, (worksheet.xi_b_m65||0), 0.001); end
  def test_xi_b_n65; assert_equal("Proportion of electricity production made through cogen", worksheet.xi_b_n65); end
  def test_xi_b_d66; assert_in_epsilon(2, worksheet.xi_b_d66, 0.001); end
  def test_xi_b_e66; assert_in_delta(0, (worksheet.xi_b_e66||0), 0.001); end
  def test_xi_b_f66; assert_in_delta(0, (worksheet.xi_b_f66||0), 0.001); end
  def test_xi_b_g66; assert_in_delta(0, (worksheet.xi_b_g66||0), 0.001); end
  def test_xi_b_h66; assert_in_delta(0, (worksheet.xi_b_h66||0), 0.001); end
  def test_xi_b_i66; assert_in_delta(0, (worksheet.xi_b_i66||0), 0.001); end
  def test_xi_b_j66; assert_in_delta(0, (worksheet.xi_b_j66||0), 0.001); end
  def test_xi_b_k66; assert_in_delta(0, (worksheet.xi_b_k66||0), 0.001); end
  def test_xi_b_l66; assert_in_delta(0, (worksheet.xi_b_l66||0), 0.001); end
  def test_xi_b_m66; assert_in_delta(0, (worksheet.xi_b_m66||0), 0.001); end
  def test_xi_b_n66; assert_equal("Proportion of electricity production made through cogen", worksheet.xi_b_n66); end
  def test_xi_b_d67; assert_in_epsilon(3, worksheet.xi_b_d67, 0.001); end
  def test_xi_b_e67; assert_in_delta(0, (worksheet.xi_b_e67||0), 0.001); end
  def test_xi_b_f67; assert_in_delta(0, (worksheet.xi_b_f67||0), 0.001); end
  def test_xi_b_g67; assert_in_delta(0, (worksheet.xi_b_g67||0), 0.001); end
  def test_xi_b_h67; assert_in_delta(0, (worksheet.xi_b_h67||0), 0.001); end
  def test_xi_b_i67; assert_in_delta(0, (worksheet.xi_b_i67||0), 0.001); end
  def test_xi_b_j67; assert_in_delta(0, (worksheet.xi_b_j67||0), 0.001); end
  def test_xi_b_k67; assert_in_delta(0, (worksheet.xi_b_k67||0), 0.001); end
  def test_xi_b_l67; assert_in_delta(0, (worksheet.xi_b_l67||0), 0.001); end
  def test_xi_b_m67; assert_in_delta(0, (worksheet.xi_b_m67||0), 0.001); end
  def test_xi_b_n67; assert_equal("Proportion of electricity production made through cogen", worksheet.xi_b_n67); end
  def test_xi_b_d68; assert_in_epsilon(4, worksheet.xi_b_d68, 0.001); end
  def test_xi_b_e68; assert_in_delta(0, (worksheet.xi_b_e68||0), 0.001); end
  def test_xi_b_f68; assert_in_delta(0, (worksheet.xi_b_f68||0), 0.001); end
  def test_xi_b_g68; assert_in_delta(0, (worksheet.xi_b_g68||0), 0.001); end
  def test_xi_b_h68; assert_in_delta(0, (worksheet.xi_b_h68||0), 0.001); end
  def test_xi_b_i68; assert_in_delta(0, (worksheet.xi_b_i68||0), 0.001); end
  def test_xi_b_j68; assert_in_delta(0, (worksheet.xi_b_j68||0), 0.001); end
  def test_xi_b_k68; assert_in_delta(0, (worksheet.xi_b_k68||0), 0.001); end
  def test_xi_b_l68; assert_in_delta(0, (worksheet.xi_b_l68||0), 0.001); end
  def test_xi_b_m68; assert_in_delta(0, (worksheet.xi_b_m68||0), 0.001); end
  def test_xi_b_n68; assert_equal("Proportion of electricity production made through cogen", worksheet.xi_b_n68); end
  def test_xi_b_b71; assert_in_epsilon(2, worksheet.xi_b_b71, 0.001); end
  def test_xi_b_c71; assert_equal("Alternative fuels", worksheet.xi_b_c71); end
  def test_xi_b_c72; assert_equal("Definition", worksheet.xi_b_c72); end
  def test_xi_b_c73; assert_equal("Share of alternative fuels and biomass", worksheet.xi_b_c73); end
  def test_xi_b_c74; assert_equal("Applied to all volumes", worksheet.xi_b_c74); end
  def test_xi_b_d76; assert_equal("Type", worksheet.xi_b_d76); end
  def test_xi_b_e76; assert_in_epsilon(2010, worksheet.xi_b_e76, 0.001); end
  def test_xi_b_f76; assert_in_epsilon(2015, worksheet.xi_b_f76, 0.001); end
  def test_xi_b_g76; assert_in_epsilon(2020, worksheet.xi_b_g76, 0.001); end
  def test_xi_b_h76; assert_in_epsilon(2025, worksheet.xi_b_h76, 0.001); end
  def test_xi_b_i76; assert_in_epsilon(2030, worksheet.xi_b_i76, 0.001); end
  def test_xi_b_j76; assert_in_epsilon(2035, worksheet.xi_b_j76, 0.001); end
  def test_xi_b_k76; assert_in_epsilon(2040, worksheet.xi_b_k76, 0.001); end
  def test_xi_b_l76; assert_in_epsilon(2045, worksheet.xi_b_l76, 0.001); end
  def test_xi_b_m76; assert_in_epsilon(2050, worksheet.xi_b_m76, 0.001); end
  def test_xi_b_n76; assert_equal("Biomass is limited by supply rather than by demand, it is therefore modelled accross all sectors in a consolidated manner, the potential in this sector would be ", worksheet.xi_b_n76); end
  def test_xi_b_d77; assert_in_delta(1, worksheet.xi_b_d77, 0.001); end
  def test_xi_b_e77; assert_in_delta(0.15599776232717974, worksheet.xi_b_e77, 0.001); end
  def test_xi_b_f77; assert_in_delta(0.13649804203628227, worksheet.xi_b_f77, 0.001); end
  def test_xi_b_g77; assert_in_delta(0.1169983217453848, worksheet.xi_b_g77, 0.001); end
  def test_xi_b_h77; assert_in_delta(0.09749860145448734, worksheet.xi_b_h77, 0.001); end
  def test_xi_b_i77; assert_in_delta(0.07799888116358987, worksheet.xi_b_i77, 0.001); end
  def test_xi_b_j77; assert_in_delta(0.05849916087269241, worksheet.xi_b_j77, 0.001); end
  def test_xi_b_k77; assert_in_delta(0.03899944058179494, worksheet.xi_b_k77, 0.001); end
  def test_xi_b_l77; assert_in_delta(0.01949972029089747, worksheet.xi_b_l77, 0.001); end
  def test_xi_b_m77; assert_in_delta(0, (worksheet.xi_b_m77||0), 0.001); end
  def test_xi_b_n77; assert_in_delta(0, (worksheet.xi_b_n77||0), 0.001); end
  def test_xi_b_d78; assert_in_epsilon(2, worksheet.xi_b_d78, 0.001); end
  def test_xi_b_e78; assert_in_delta(0.15599776232717974, worksheet.xi_b_e78, 0.001); end
  def test_xi_b_f78; assert_in_delta(0.18774804203628226, worksheet.xi_b_f78, 0.001); end
  def test_xi_b_g78; assert_in_delta(0.2194983217453848, worksheet.xi_b_g78, 0.001); end
  def test_xi_b_h78; assert_in_delta(0.25124860145448735, worksheet.xi_b_h78, 0.001); end
  def test_xi_b_i78; assert_in_delta(0.28299888116358984, worksheet.xi_b_i78, 0.001); end
  def test_xi_b_j78; assert_in_delta(0.3147491608726924, worksheet.xi_b_j78, 0.001); end
  def test_xi_b_k78; assert_in_delta(0.34649944058179494, worksheet.xi_b_k78, 0.001); end
  def test_xi_b_l78; assert_in_delta(0.3782497202908975, worksheet.xi_b_l78, 0.001); end
  def test_xi_b_m78; assert_in_delta(0.41, worksheet.xi_b_m78, 0.001); end
  def test_xi_b_n78; assert_in_delta(0.41, worksheet.xi_b_n78, 0.001); end
  def test_xi_b_d79; assert_in_epsilon(3, worksheet.xi_b_d79, 0.001); end
  def test_xi_b_e79; assert_in_delta(0.15599776232717974, worksheet.xi_b_e79, 0.001); end
  def test_xi_b_f79; assert_in_delta(0.22399804203628226, worksheet.xi_b_f79, 0.001); end
  def test_xi_b_g79; assert_in_delta(0.29199832174538476, worksheet.xi_b_g79, 0.001); end
  def test_xi_b_h79; assert_in_delta(0.35999860145448725, worksheet.xi_b_h79, 0.001); end
  def test_xi_b_i79; assert_in_delta(0.42799888116358986, worksheet.xi_b_i79, 0.001); end
  def test_xi_b_j79; assert_in_delta(0.49599916087269236, worksheet.xi_b_j79, 0.001); end
  def test_xi_b_k79; assert_in_delta(0.5639994405817949, worksheet.xi_b_k79, 0.001); end
  def test_xi_b_l79; assert_in_delta(0.6319997202908973, worksheet.xi_b_l79, 0.001); end
  def test_xi_b_m79; assert_in_delta(0.7, worksheet.xi_b_m79, 0.001); end
  def test_xi_b_n79; assert_in_delta(0.7, worksheet.xi_b_n79, 0.001); end
  def test_xi_b_d80; assert_in_epsilon(4, worksheet.xi_b_d80, 0.001); end
  def test_xi_b_e80; assert_in_delta(0.15599776232717974, worksheet.xi_b_e80, 0.001); end
  def test_xi_b_f80; assert_in_delta(0.26149804203628224, worksheet.xi_b_f80, 0.001); end
  def test_xi_b_g80; assert_in_delta(0.36699832174538477, worksheet.xi_b_g80, 0.001); end
  def test_xi_b_h80; assert_in_delta(0.4724986014544873, worksheet.xi_b_h80, 0.001); end
  def test_xi_b_i80; assert_in_delta(0.5779988811635898, worksheet.xi_b_i80, 0.001); end
  def test_xi_b_j80; assert_in_delta(0.6834991608726925, worksheet.xi_b_j80, 0.001); end
  def test_xi_b_k80; assert_in_delta(0.7889994405817949, worksheet.xi_b_k80, 0.001); end
  def test_xi_b_l80; assert_in_delta(0.8944997202908975, worksheet.xi_b_l80, 0.001); end
  def test_xi_b_m80; assert_in_delta(1, worksheet.xi_b_m80, 0.001); end
  def test_xi_b_n80; assert_in_delta(1, worksheet.xi_b_n80, 0.001); end
  def test_xi_b_b82; assert_equal("(Ic) Cement CCS intensity", worksheet.xi_b_b82); end
  def test_xi_b_c83; assert_equal("Definition", worksheet.xi_b_c83); end
  def test_xi_b_c84; assert_equal("End of pipe absorbing of all CO2", worksheet.xi_b_c84); end
  def test_xi_b_d87; assert_equal("Type", worksheet.xi_b_d87); end
  def test_xi_b_e87; assert_in_epsilon(2010, worksheet.xi_b_e87, 0.001); end
  def test_xi_b_f87; assert_in_epsilon(2015, worksheet.xi_b_f87, 0.001); end
  def test_xi_b_g87; assert_in_epsilon(2020, worksheet.xi_b_g87, 0.001); end
  def test_xi_b_h87; assert_in_epsilon(2025, worksheet.xi_b_h87, 0.001); end
  def test_xi_b_i87; assert_in_epsilon(2030, worksheet.xi_b_i87, 0.001); end
  def test_xi_b_j87; assert_in_epsilon(2035, worksheet.xi_b_j87, 0.001); end
  def test_xi_b_k87; assert_in_epsilon(2040, worksheet.xi_b_k87, 0.001); end
  def test_xi_b_l87; assert_in_epsilon(2045, worksheet.xi_b_l87, 0.001); end
  def test_xi_b_m87; assert_in_epsilon(2050, worksheet.xi_b_m87, 0.001); end
  def test_xi_b_d88; assert_in_delta(1, worksheet.xi_b_d88, 0.001); end
  def test_xi_b_e88; assert_in_delta(0, (worksheet.xi_b_e88||0), 0.001); end
  def test_xi_b_f88; assert_in_delta(0, (worksheet.xi_b_f88||0), 0.001); end
  def test_xi_b_g88; assert_in_delta(0, (worksheet.xi_b_g88||0), 0.001); end
  def test_xi_b_h88; assert_in_delta(0, (worksheet.xi_b_h88||0), 0.001); end
  def test_xi_b_i88; assert_in_delta(0, (worksheet.xi_b_i88||0), 0.001); end
  def test_xi_b_j88; assert_in_delta(0, (worksheet.xi_b_j88||0), 0.001); end
  def test_xi_b_k88; assert_in_delta(0, (worksheet.xi_b_k88||0), 0.001); end
  def test_xi_b_l88; assert_in_delta(0, (worksheet.xi_b_l88||0), 0.001); end
  def test_xi_b_m88; assert_in_delta(0, (worksheet.xi_b_m88||0), 0.001); end
  def test_xi_b_n88; assert_equal("cfr ccs analysis", worksheet.xi_b_n88); end
  def test_xi_b_d89; assert_in_epsilon(2, worksheet.xi_b_d89, 0.001); end
  def test_xi_b_e89; assert_in_delta(0, (worksheet.xi_b_e89||0), 0.001); end
  def test_xi_b_f89; assert_in_delta(0, (worksheet.xi_b_f89||0), 0.001); end
  def test_xi_b_g89; assert_in_delta(0, (worksheet.xi_b_g89||0), 0.001); end
  def test_xi_b_h89; assert_in_delta(0, (worksheet.xi_b_h89||0), 0.001); end
  def test_xi_b_i89; assert_in_delta(0.14, worksheet.xi_b_i89, 0.001); end
  def test_xi_b_j89; assert_in_delta(0.28, worksheet.xi_b_j89, 0.001); end
  def test_xi_b_k89; assert_in_delta(0.42, worksheet.xi_b_k89, 0.001); end
  def test_xi_b_l89; assert_in_delta(0.56, worksheet.xi_b_l89, 0.001); end
  def test_xi_b_m89; assert_in_delta(0.51, worksheet.xi_b_m89, 0.001); end
  def test_xi_b_n89; assert_equal("cfr ccs analysis", worksheet.xi_b_n89); end
  def test_xi_b_d90; assert_in_epsilon(3, worksheet.xi_b_d90, 0.001); end
  def test_xi_b_e90; assert_in_delta(0, (worksheet.xi_b_e90||0), 0.001); end
  def test_xi_b_f90; assert_in_delta(0, (worksheet.xi_b_f90||0), 0.001); end
  def test_xi_b_g90; assert_in_delta(0, (worksheet.xi_b_g90||0), 0.001); end
  def test_xi_b_h90; assert_in_delta(0, (worksheet.xi_b_h90||0), 0.001); end
  def test_xi_b_i90; assert_in_delta(0.16399999999999998, worksheet.xi_b_i90, 0.001); end
  def test_xi_b_j90; assert_in_delta(0.32799999999999996, worksheet.xi_b_j90, 0.001); end
  def test_xi_b_k90; assert_in_delta(0.49199999999999994, worksheet.xi_b_k90, 0.001); end
  def test_xi_b_l90; assert_in_delta(0.6559999999999999, worksheet.xi_b_l90, 0.001); end
  def test_xi_b_m90; assert_in_delta(0.81, worksheet.xi_b_m90, 0.001); end
  def test_xi_b_n90; assert_equal("cfr ccs analysis", worksheet.xi_b_n90); end
  def test_xi_b_d91; assert_in_epsilon(4, worksheet.xi_b_d91, 0.001); end
  def test_xi_b_e91; assert_in_delta(0, (worksheet.xi_b_e91||0), 0.001); end
  def test_xi_b_f91; assert_in_delta(0, (worksheet.xi_b_f91||0), 0.001); end
  def test_xi_b_g91; assert_in_delta(0, (worksheet.xi_b_g91||0), 0.001); end
  def test_xi_b_h91; assert_in_delta(0, (worksheet.xi_b_h91||0), 0.001); end
  def test_xi_b_i91; assert_in_delta(0.17, worksheet.xi_b_i91, 0.001); end
  def test_xi_b_j91; assert_in_delta(0.34, worksheet.xi_b_j91, 0.001); end
  def test_xi_b_k91; assert_in_delta(0.51, worksheet.xi_b_k91, 0.001); end
  def test_xi_b_l91; assert_in_delta(0.68, worksheet.xi_b_l91, 0.001); end
  def test_xi_b_m91; assert_in_delta(0.85, worksheet.xi_b_m91, 0.001); end
  def test_xi_b_n91; assert_equal("cfr ccs analysis", worksheet.xi_b_n91); end
  def test_xi_b_b95; assert_equal("Fixed assumptions", worksheet.xi_b_b95); end
  def test_xi_b_c97; assert_equal("Baseline production (Kt, 2008)", worksheet.xi_b_c97); end
  def test_xi_b_e98; assert_equal("Production", worksheet.xi_b_e98); end
  def test_xi_b_c99; assert_equal("Product type", worksheet.xi_b_c99); end
  def test_xi_b_d99; assert_equal("Description", worksheet.xi_b_d99); end
  def test_xi_b_e99; assert_in_epsilon(2010, worksheet.xi_b_e99, 0.001); end
  def test_xi_b_f99; assert_equal("Notes", worksheet.xi_b_f99); end
  def test_xi_b_h99; assert_equal("Notes", worksheet.xi_b_h99); end
  def test_xi_b_c100; assert_equal("(i)", worksheet.xi_b_c100); end
  def test_xi_b_d100; assert_equal("Cement", worksheet.xi_b_d100); end
  def test_xi_b_e100; assert_in_epsilon(4740, worksheet.xi_b_e100, 0.001); end
  def test_xi_b_f100; assert_equal("Inventaire Belge 2010 Ciment (fort aligné à la valeur du Bilan Wallon)", worksheet.xi_b_f100); end
  def test_xi_b_c102; assert_equal("Baseline energy consumption (TWh, 2010)", worksheet.xi_b_c102); end
  def test_xi_b_e103; assert_equal("V.01", worksheet.xi_b_e103); end
  def test_xi_b_f103; assert_equal("V.03", worksheet.xi_b_f103); end
  def test_xi_b_g103; assert_equal("V.05", worksheet.xi_b_g103); end
  def test_xi_b_h103; assert_equal("V.04", worksheet.xi_b_h103); end
  def test_xi_b_i103; assert_equal("V.10", worksheet.xi_b_i103); end
  def test_xi_b_j103; assert_equal("V.07", worksheet.xi_b_j103); end
  def test_xi_b_c104; assert_equal("Product type", worksheet.xi_b_c104); end
  def test_xi_b_d104; assert_equal("Description", worksheet.xi_b_d104); end
  def test_xi_b_e104; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_e104); end
  def test_xi_b_f104; assert_equal("Solid hydrocarbons", worksheet.xi_b_f104); end
  def test_xi_b_g104; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_g104); end
  def test_xi_b_h104; assert_equal("Liquid hydrocarbons", worksheet.xi_b_h104); end
  def test_xi_b_i104; assert_equal("Wet biomass and waste", worksheet.xi_b_i104); end
  def test_xi_b_j104; assert_equal("Heat transport", worksheet.xi_b_j104); end
  def test_xi_b_k104; assert_equal("Total", worksheet.xi_b_k104); end
  def test_xi_b_l104; assert_equal("Notes", worksheet.xi_b_l104); end
  def test_xi_b_c105; assert_equal("(i)", worksheet.xi_b_c105); end
  def test_xi_b_d105; assert_equal("Cement", worksheet.xi_b_d105); end
  def test_xi_b_e105; assert_in_delta(0.7368, worksheet.xi_b_e105, 0.001); end
  def test_xi_b_f105; assert_in_epsilon(4.2426, worksheet.xi_b_f105, 0.001); end
  def test_xi_b_g105; assert_in_delta(0.177, worksheet.xi_b_g105, 0.001); end
  def test_xi_b_h105; assert_in_delta(0.1241, worksheet.xi_b_h105, 0.001); end
  def test_xi_b_i105; assert_in_delta(0.976, worksheet.xi_b_i105, 0.001); end
  def test_xi_b_k105; assert_in_epsilon(6.2565, worksheet.xi_b_k105, 0.001); end
  def test_xi_b_l105; assert_equal("Atlas Energétique Wallon 2010 (toutes les installations sont en Wallonie)", worksheet.xi_b_l105); end
  def test_xi_b_d106; assert_equal("Total", worksheet.xi_b_d106); end
  def test_xi_b_e106; assert_in_delta(0.7368, worksheet.xi_b_e106, 0.001); end
  def test_xi_b_f106; assert_in_epsilon(4.2426, worksheet.xi_b_f106, 0.001); end
  def test_xi_b_g106; assert_in_delta(0.177, worksheet.xi_b_g106, 0.001); end
  def test_xi_b_h106; assert_in_delta(0.1241, worksheet.xi_b_h106, 0.001); end
  def test_xi_b_i106; assert_in_delta(0.976, worksheet.xi_b_i106, 0.001); end
  def test_xi_b_k106; assert_in_epsilon(6.2565, worksheet.xi_b_k106, 0.001); end
  def test_xi_b_e107; assert_in_delta(0.11776552385519061, worksheet.xi_b_e107, 0.001); end
  def test_xi_b_f107; assert_in_delta(0.6781107648046033, worksheet.xi_b_f107, 0.001); end
  def test_xi_b_g107; assert_in_delta(0.028290577799088945, worksheet.xi_b_g107, 0.001); end
  def test_xi_b_h107; assert_in_delta(0.019835371213937504, worksheet.xi_b_h107, 0.001); end
  def test_xi_b_i107; assert_in_delta(0.15599776232717974, worksheet.xi_b_i107, 0.001); end
  def test_xi_b_j107; assert_in_delta(0, (worksheet.xi_b_j107||0), 0.001); end
  def test_xi_b_c108; assert_equal("Baseline process emissions (MMtCO2e, 2008)", worksheet.xi_b_c108); end
  def test_xi_b_c110; assert_equal("Product type", worksheet.xi_b_c110); end
  def test_xi_b_d110; assert_equal("Description", worksheet.xi_b_d110); end
  def test_xi_b_f110; assert_equal("Notes", worksheet.xi_b_f110); end
  def test_xi_b_c111; assert_equal("(i)", worksheet.xi_b_c111); end
  def test_xi_b_d111; assert_equal("Cement", worksheet.xi_b_d111); end
  def test_xi_b_e111; assert_in_epsilon(2.58248625, worksheet.xi_b_e111, 0.001); end
  def test_xi_b_f111; assert_equal("Inventaire Belge 2010, Ciment", worksheet.xi_b_f111); end
  def test_xi_b_d112; assert_equal("Total", worksheet.xi_b_d112); end
  def test_xi_b_e112; assert_in_epsilon(2.58248625, worksheet.xi_b_e112, 0.001); end
  def test_xi_b_b115; assert_equal("Costs", worksheet.xi_b_b115); end
  def test_xi_b_c116; assert_equal("Costs are modelled through fuel prices, Capex and opex.", worksheet.xi_b_c116); end
  def test_xi_b_c117; assert_equal("Energy prices are modelled per year", worksheet.xi_b_c117); end
  def test_xi_b_n117; assert_equal("MEUR/TWh", worksheet.xi_b_n117); end
  def test_xi_b_c118; assert_equal("Vector", worksheet.xi_b_c118); end
  def test_xi_b_d118; assert_equal("Description", worksheet.xi_b_d118); end
  def test_xi_b_f118; assert_in_epsilon(2010, worksheet.xi_b_f118, 0.001); end
  def test_xi_b_g118; assert_in_epsilon(2015, worksheet.xi_b_g118, 0.001); end
  def test_xi_b_h118; assert_in_epsilon(2020, worksheet.xi_b_h118, 0.001); end
  def test_xi_b_i118; assert_in_epsilon(2025, worksheet.xi_b_i118, 0.001); end
  def test_xi_b_j118; assert_in_epsilon(2030, worksheet.xi_b_j118, 0.001); end
  def test_xi_b_k118; assert_in_epsilon(2035, worksheet.xi_b_k118, 0.001); end
  def test_xi_b_l118; assert_in_epsilon(2040, worksheet.xi_b_l118, 0.001); end
  def test_xi_b_m118; assert_in_epsilon(2045, worksheet.xi_b_m118, 0.001); end
  def test_xi_b_n118; assert_in_epsilon(2050, worksheet.xi_b_n118, 0.001); end
  def test_xi_b_c119; assert_equal("V.01", worksheet.xi_b_c119); end
  def test_xi_b_d119; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_d119); end
  def test_xi_b_f119; assert_in_epsilon(62.51919507647098, worksheet.xi_b_f119, 0.001); end
  def test_xi_b_g119; assert_in_epsilon(68.19582116426872, worksheet.xi_b_g119, 0.001); end
  def test_xi_b_h119; assert_in_epsilon(75.74196055351227, worksheet.xi_b_h119, 0.001); end
  def test_xi_b_i119; assert_in_epsilon(97.28706468235157, worksheet.xi_b_i119, 0.001); end
  def test_xi_b_j119; assert_in_epsilon(93.1851479380366, worksheet.xi_b_j119, 0.001); end
  def test_xi_b_k119; assert_in_epsilon(89.02450255218142, worksheet.xi_b_k119, 0.001); end
  def test_xi_b_l119; assert_in_epsilon(86.25109814628419, worksheet.xi_b_l119, 0.001); end
  def test_xi_b_m119; assert_in_epsilon(83.80479841208917, worksheet.xi_b_m119, 0.001); end
  def test_xi_b_n119; assert_in_epsilon(81.27018968685324, worksheet.xi_b_n119, 0.001); end
  def test_xi_b_o119; assert_equal("double count with electricity generation cost removed in consolidation section, this is approximate modeling in the sense a +/-15% is applied between the min and the max", worksheet.xi_b_o119); end
  def test_xi_b_c120; assert_equal("V.03", worksheet.xi_b_c120); end
  def test_xi_b_d120; assert_equal("Solid hydrocarbons", worksheet.xi_b_d120); end
  def test_xi_b_f120; assert_in_epsilon(10.520431649379864, worksheet.xi_b_f120, 0.001); end
  def test_xi_b_g120; assert_in_epsilon(12.098496396786842, worksheet.xi_b_g120, 0.001); end
  def test_xi_b_h120; assert_in_epsilon(11.160931027596718, worksheet.xi_b_h120, 0.001); end
  def test_xi_b_i120; assert_in_epsilon(10.00869327552178, worksheet.xi_b_i120, 0.001); end
  def test_xi_b_j120; assert_in_epsilon(8.641783140562028, worksheet.xi_b_j120, 0.001); end
  def test_xi_b_k120; assert_in_epsilon(8.4228775010162, worksheet.xi_b_k120, 0.001); end
  def test_xi_b_l120; assert_in_epsilon(8.19480002633699, worksheet.xi_b_l120, 0.001); end
  def test_xi_b_m120; assert_in_epsilon(7.957550716524399, worksheet.xi_b_m120, 0.001); end
  def test_xi_b_n120; assert_in_epsilon(7.711129571578426, worksheet.xi_b_n120, 0.001); end
  def test_xi_b_o120; assert_equal("global assumptions", worksheet.xi_b_o120); end
  def test_xi_b_c121; assert_equal("V.05", worksheet.xi_b_c121); end
  def test_xi_b_d121; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_d121); end
  def test_xi_b_f121; assert_in_epsilon(26.991577393952404, worksheet.xi_b_f121, 0.001); end
  def test_xi_b_g121; assert_in_epsilon(31.040314003045264, worksheet.xi_b_g121, 0.001); end
  def test_xi_b_h121; assert_in_epsilon(32.02572079679274, worksheet.xi_b_h121, 0.001); end
  def test_xi_b_i121; assert_in_epsilon(32.51842419366647, worksheet.xi_b_i121, 0.001); end
  def test_xi_b_j121; assert_in_epsilon(32.51842419366647, worksheet.xi_b_j121, 0.001); end
  def test_xi_b_k121; assert_in_epsilon(30.82255669817696, worksheet.xi_b_k121, 0.001); end
  def test_xi_b_l121; assert_in_epsilon(29.07477938051683, worksheet.xi_b_l121, 0.001); end
  def test_xi_b_m121; assert_in_epsilon(27.27509224068607, worksheet.xi_b_m121, 0.001); end
  def test_xi_b_n121; assert_in_epsilon(25.423495278684687, worksheet.xi_b_n121, 0.001); end
  def test_xi_b_o121; assert_equal("global assumptions", worksheet.xi_b_o121); end
  def test_xi_b_c122; assert_equal("V.04", worksheet.xi_b_c122); end
  def test_xi_b_d122; assert_equal("Liquid hydrocarbons", worksheet.xi_b_d122); end
  def test_xi_b_f122; assert_in_epsilon(40.24557058915429, worksheet.xi_b_f122, 0.001); end
  def test_xi_b_g122; assert_in_epsilon(46.28240617752743, worksheet.xi_b_g122, 0.001); end
  def test_xi_b_h122; assert_in_epsilon(47.53397660389514, worksheet.xi_b_h122, 0.001); end
  def test_xi_b_i122; assert_in_epsilon(48.065958284096595, worksheet.xi_b_i122, 0.001); end
  def test_xi_b_j122; assert_in_epsilon(47.87835121813183, worksheet.xi_b_j122, 0.001); end
  def test_xi_b_k122; assert_in_epsilon(45.31782798156433, worksheet.xi_b_k122, 0.001); end
  def test_xi_b_l122; assert_in_epsilon(42.69104796870361, worksheet.xi_b_l122, 0.001); end
  def test_xi_b_m122; assert_in_epsilon(39.99801117954967, worksheet.xi_b_m122, 0.001); end
  def test_xi_b_n122; assert_in_epsilon(37.238717614102534, worksheet.xi_b_n122, 0.001); end
  def test_xi_b_o122; assert_equal("global assumptions", worksheet.xi_b_o122); end
  def test_xi_b_c123; assert_equal("V.10", worksheet.xi_b_c123); end
  def test_xi_b_d123; assert_equal("Dry biomass", worksheet.xi_b_d123); end
  def test_xi_b_f123; assert_in_epsilon(25, worksheet.xi_b_f123, 0.001); end
  def test_xi_b_g123; assert_in_epsilon(39.064885496183244, worksheet.xi_b_g123, 0.001); end
  def test_xi_b_h123; assert_in_epsilon(42.43002544529256, worksheet.xi_b_h123, 0.001); end
  def test_xi_b_i123; assert_in_epsilon(45.79516539440198, worksheet.xi_b_i123, 0.001); end
  def test_xi_b_j123; assert_in_epsilon(49.16030534351141, worksheet.xi_b_j123, 0.001); end
  def test_xi_b_k123; assert_in_epsilon(49.76383587786261, worksheet.xi_b_k123, 0.001); end
  def test_xi_b_l123; assert_in_epsilon(50.36736641221371, worksheet.xi_b_l123, 0.001); end
  def test_xi_b_m123; assert_in_epsilon(50.97089694656493, worksheet.xi_b_m123, 0.001); end
  def test_xi_b_n123; assert_in_epsilon(51.574427480916015, worksheet.xi_b_n123, 0.001); end
  def test_xi_b_o123; assert_equal("global assumptions", worksheet.xi_b_o123); end
  def test_xi_b_c124; assert_equal("V.07", worksheet.xi_b_c124); end
  def test_xi_b_d124; assert_equal("Heat transport", worksheet.xi_b_d124); end
  def test_xi_b_f124; assert_in_epsilon(33.2841905893011, worksheet.xi_b_f124, 0.001); end
  def test_xi_b_g124; assert_in_epsilon(54.591528991140514, worksheet.xi_b_g124, 0.001); end
  def test_xi_b_h124; assert_in_epsilon(60.44809148827442, worksheet.xi_b_h124, 0.001); end
  def test_xi_b_i124; assert_in_epsilon(66.3046539854082, worksheet.xi_b_i124, 0.001); end
  def test_xi_b_j124; assert_in_epsilon(72.1612164825421, worksheet.xi_b_j124, 0.001); end
  def test_xi_b_k124; assert_in_epsilon(72.94557753126534, worksheet.xi_b_k124, 0.001); end
  def test_xi_b_l124; assert_in_epsilon(73.72993857998858, worksheet.xi_b_l124, 0.001); end
  def test_xi_b_m124; assert_in_epsilon(74.51429962871195, worksheet.xi_b_m124, 0.001); end
  def test_xi_b_n124; assert_in_epsilon(75.2986606774352, worksheet.xi_b_n124, 0.001); end
  def test_xi_b_o124; assert_equal("global assumptions", worksheet.xi_b_o124); end
  def test_xi_b_e127; assert_equal("Low", worksheet.xi_b_e127); end
  def test_xi_b_g127; assert_equal("High (not modelled)", worksheet.xi_b_g127); end
  def test_xi_b_q127; assert_equal("Low-High cost estimate range", worksheet.xi_b_q127); end
  def test_xi_b_t127; assert_in_delta(0.15, worksheet.xi_b_t127, 0.001); end
  def test_xi_b_d128; assert_equal("MEUR", worksheet.xi_b_d128); end
  def test_xi_b_e128; assert_equal("Capex", worksheet.xi_b_e128); end
  def test_xi_b_f128; assert_equal("(€/ktcement)", worksheet.xi_b_f128); end
  def test_xi_b_g128; assert_equal("Capex", worksheet.xi_b_g128); end
  def test_xi_b_i128; assert_equal("per", worksheet.xi_b_i128); end
  def test_xi_b_c129; assert_equal("-  ", worksheet.xi_b_c129); end
  def test_xi_b_d129; assert_equal("Energy efficiency", worksheet.xi_b_d129); end
  def test_xi_b_e129; assert_in_delta(0.000511443125656635, worksheet.xi_b_e129, 0.001); end
  def test_xi_b_f129; assert_in_epsilon(511.44312565663506, worksheet.xi_b_f129, 0.001); end
  def test_xi_b_g129; assert_in_delta(0.001003870849406892, worksheet.xi_b_g129, 0.001); end
  def test_xi_b_i129; assert_equal("kt Cement", worksheet.xi_b_i129); end
  def test_xi_b_j129; assert_equal("REMPLACE par 0 pour Energy+CAPEX car benefices trop élevés", worksheet.xi_b_j129); end
  def test_xi_b_c130; assert_equal("-  ", worksheet.xi_b_c130); end
  def test_xi_b_d130; assert_equal("Alternative fuels", worksheet.xi_b_d130); end
  def test_xi_b_e130; assert_in_delta(1.48318506440424e-05, worksheet.xi_b_e130, 0.001); end
  def test_xi_b_f130; assert_in_epsilon(14.831850644042401, worksheet.xi_b_f130, 0.001); end
  def test_xi_b_g130; assert_in_delta(5.232038749027446e-05, worksheet.xi_b_g130, 0.001); end
  def test_xi_b_i130; assert_equal("kt Cement", worksheet.xi_b_i130); end
  def test_xi_b_j130; assert_equal("In IEA, numbers are available in USD Billion and for total production, they are converted here in € /kt cement then spread over 38 years", worksheet.xi_b_j130); end
  def test_xi_b_c131; assert_equal("-  ", worksheet.xi_b_c131); end
  def test_xi_b_d131; assert_equal("Clinker substitution", worksheet.xi_b_d131); end
  def test_xi_b_e131; assert_in_delta(2.04577250262654e-06, worksheet.xi_b_e131, 0.001); end
  def test_xi_b_f131; assert_in_epsilon(2.0457725026265403, worksheet.xi_b_f131, 0.001); end
  def test_xi_b_g131; assert_in_delta(5.1044280478316555e-06, worksheet.xi_b_g131, 0.001); end
  def test_xi_b_i131; assert_equal("kt Cement", worksheet.xi_b_i131); end
  def test_xi_b_c132; assert_equal("-  ", worksheet.xi_b_c132); end
  def test_xi_b_d132; assert_equal("Cement CCS intensity", worksheet.xi_b_d132); end
  def test_xi_b_e132; assert_in_epsilon(57, worksheet.xi_b_e132, 0.001); end
  def test_xi_b_g132; assert_in_delta(0.0958364873360473, worksheet.xi_b_g132, 0.001); end
  def test_xi_b_i132; assert_equal("tCO2", worksheet.xi_b_i132); end
  def test_xi_b_c133; assert_equal("-  ", worksheet.xi_b_c133); end
  def test_xi_b_d133; assert_equal("Cement CCS intensity", worksheet.xi_b_d133); end
  def test_xi_b_e133; assert_in_delta(0.33, worksheet.xi_b_e133, 0.001); end
  def test_xi_b_i133; assert_equal("TWh/MMtCO2e", worksheet.xi_b_i133); end
  def test_xi_b_n133; assert_in_delta(0.33, worksheet.xi_b_n133, 0.001); end
  def test_xi_b_o133; assert_equal("MWh/tCO2e", worksheet.xi_b_o133); end
  def test_xi_b_b135; assert_equal("Derived assumptions", worksheet.xi_b_b135); end
  def test_xi_b_b136; assert_equal("5 matrixes define the output of product, energy demand, energy split by vector, emissions intensity, process emissions, total emissions and costs", worksheet.xi_b_b136); end
  def test_xi_b_b137; assert_in_delta(1, worksheet.xi_b_b137, 0.001); end
  def test_xi_b_c137; assert_equal("Output Growth (kt)", worksheet.xi_b_c137); end
  def test_xi_b_n137; assert_in_epsilon(2, worksheet.xi_b_n137, 0.001); end
  def test_xi_b_o137; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_b_o137); end
  def test_xi_b_z137; assert_in_epsilon(3, worksheet.xi_b_z137, 0.001); end
  def test_xi_b_aa137; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_b_aa137); end
  def test_xi_b_al137; assert_in_epsilon(4, worksheet.xi_b_al137, 0.001); end
  def test_xi_b_am137; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_b_am137); end
  def test_xi_b_ay137; assert_in_epsilon(5, worksheet.xi_b_ay137, 0.001); end
  def test_xi_b_az137; assert_equal("Emissions (MMtCO2e)", worksheet.xi_b_az137); end
  def test_xi_b_bk137; assert_in_epsilon(6, worksheet.xi_b_bk137, 0.001); end
  def test_xi_b_bl137; assert_equal("Costs : Energy (MEUR)", worksheet.xi_b_bl137); end
  def test_xi_b_bw137; assert_in_epsilon(7, worksheet.xi_b_bw137, 0.001); end
  def test_xi_b_bx137; assert_equal("Costs : Capex (MEUR)", worksheet.xi_b_bx137); end
  def test_xi_b_c138; assert_equal("Product type", worksheet.xi_b_c138); end
  def test_xi_b_d138; assert_equal("Description", worksheet.xi_b_d138); end
  def test_xi_b_e138; assert_in_epsilon(2010, worksheet.xi_b_e138, 0.001); end
  def test_xi_b_f138; assert_in_epsilon(2015, worksheet.xi_b_f138, 0.001); end
  def test_xi_b_g138; assert_in_epsilon(2020, worksheet.xi_b_g138, 0.001); end
  def test_xi_b_h138; assert_in_epsilon(2025, worksheet.xi_b_h138, 0.001); end
  def test_xi_b_i138; assert_in_epsilon(2030, worksheet.xi_b_i138, 0.001); end
  def test_xi_b_j138; assert_in_epsilon(2035, worksheet.xi_b_j138, 0.001); end
  def test_xi_b_k138; assert_in_epsilon(2040, worksheet.xi_b_k138, 0.001); end
  def test_xi_b_l138; assert_in_epsilon(2045, worksheet.xi_b_l138, 0.001); end
  def test_xi_b_m138; assert_in_epsilon(2050, worksheet.xi_b_m138, 0.001); end
  def test_xi_b_o138; assert_equal("Industry", worksheet.xi_b_o138); end
  def test_xi_b_p138; assert_equal("Description", worksheet.xi_b_p138); end
  def test_xi_b_q138; assert_in_epsilon(2010, worksheet.xi_b_q138, 0.001); end
  def test_xi_b_r138; assert_in_epsilon(2015, worksheet.xi_b_r138, 0.001); end
  def test_xi_b_s138; assert_in_epsilon(2020, worksheet.xi_b_s138, 0.001); end
  def test_xi_b_t138; assert_in_epsilon(2025, worksheet.xi_b_t138, 0.001); end
  def test_xi_b_u138; assert_in_epsilon(2030, worksheet.xi_b_u138, 0.001); end
  def test_xi_b_v138; assert_in_epsilon(2035, worksheet.xi_b_v138, 0.001); end
  def test_xi_b_w138; assert_in_epsilon(2040, worksheet.xi_b_w138, 0.001); end
  def test_xi_b_x138; assert_in_epsilon(2045, worksheet.xi_b_x138, 0.001); end
  def test_xi_b_y138; assert_in_epsilon(2050, worksheet.xi_b_y138, 0.001); end
  def test_xi_b_aa138; assert_equal("Vector", worksheet.xi_b_aa138); end
  def test_xi_b_ab138; assert_equal("Description", worksheet.xi_b_ab138); end
  def test_xi_b_ac138; assert_in_epsilon(2010, worksheet.xi_b_ac138, 0.001); end
  def test_xi_b_ad138; assert_in_epsilon(2015, worksheet.xi_b_ad138, 0.001); end
  def test_xi_b_ae138; assert_in_epsilon(2020, worksheet.xi_b_ae138, 0.001); end
  def test_xi_b_af138; assert_in_epsilon(2025, worksheet.xi_b_af138, 0.001); end
  def test_xi_b_ag138; assert_in_epsilon(2030, worksheet.xi_b_ag138, 0.001); end
  def test_xi_b_ah138; assert_in_epsilon(2035, worksheet.xi_b_ah138, 0.001); end
  def test_xi_b_ai138; assert_in_epsilon(2040, worksheet.xi_b_ai138, 0.001); end
  def test_xi_b_aj138; assert_in_epsilon(2045, worksheet.xi_b_aj138, 0.001); end
  def test_xi_b_ak138; assert_in_epsilon(2050, worksheet.xi_b_ak138, 0.001); end
  def test_xi_b_am138; assert_equal("Industry", worksheet.xi_b_am138); end
  def test_xi_b_an138; assert_equal("Description", worksheet.xi_b_an138); end
  def test_xi_b_ao138; assert_in_epsilon(2010, worksheet.xi_b_ao138, 0.001); end
  def test_xi_b_ap138; assert_in_epsilon(2015, worksheet.xi_b_ap138, 0.001); end
  def test_xi_b_aq138; assert_in_epsilon(2020, worksheet.xi_b_aq138, 0.001); end
  def test_xi_b_ar138; assert_in_epsilon(2025, worksheet.xi_b_ar138, 0.001); end
  def test_xi_b_as138; assert_in_epsilon(2030, worksheet.xi_b_as138, 0.001); end
  def test_xi_b_at138; assert_in_epsilon(2035, worksheet.xi_b_at138, 0.001); end
  def test_xi_b_au138; assert_in_epsilon(2040, worksheet.xi_b_au138, 0.001); end
  def test_xi_b_av138; assert_in_epsilon(2045, worksheet.xi_b_av138, 0.001); end
  def test_xi_b_aw138; assert_in_epsilon(2050, worksheet.xi_b_aw138, 0.001); end
  def test_xi_b_ay138; assert_equal("Industry", worksheet.xi_b_ay138); end
  def test_xi_b_az138; assert_equal("Description", worksheet.xi_b_az138); end
  def test_xi_b_ba138; assert_in_epsilon(2010, worksheet.xi_b_ba138, 0.001); end
  def test_xi_b_bb138; assert_in_epsilon(2015, worksheet.xi_b_bb138, 0.001); end
  def test_xi_b_bc138; assert_in_epsilon(2020, worksheet.xi_b_bc138, 0.001); end
  def test_xi_b_bd138; assert_in_epsilon(2025, worksheet.xi_b_bd138, 0.001); end
  def test_xi_b_be138; assert_in_epsilon(2030, worksheet.xi_b_be138, 0.001); end
  def test_xi_b_bf138; assert_in_epsilon(2035, worksheet.xi_b_bf138, 0.001); end
  def test_xi_b_bg138; assert_in_epsilon(2040, worksheet.xi_b_bg138, 0.001); end
  def test_xi_b_bh138; assert_in_epsilon(2045, worksheet.xi_b_bh138, 0.001); end
  def test_xi_b_bi138; assert_in_epsilon(2050, worksheet.xi_b_bi138, 0.001); end
  def test_xi_b_bk138; assert_equal("Industry", worksheet.xi_b_bk138); end
  def test_xi_b_bl138; assert_equal("Description", worksheet.xi_b_bl138); end
  def test_xi_b_bm138; assert_in_epsilon(2010, worksheet.xi_b_bm138, 0.001); end
  def test_xi_b_bn138; assert_in_epsilon(2015, worksheet.xi_b_bn138, 0.001); end
  def test_xi_b_bo138; assert_in_epsilon(2020, worksheet.xi_b_bo138, 0.001); end
  def test_xi_b_bp138; assert_in_epsilon(2025, worksheet.xi_b_bp138, 0.001); end
  def test_xi_b_bq138; assert_in_epsilon(2030, worksheet.xi_b_bq138, 0.001); end
  def test_xi_b_br138; assert_in_epsilon(2035, worksheet.xi_b_br138, 0.001); end
  def test_xi_b_bs138; assert_in_epsilon(2040, worksheet.xi_b_bs138, 0.001); end
  def test_xi_b_bt138; assert_in_epsilon(2045, worksheet.xi_b_bt138, 0.001); end
  def test_xi_b_bu138; assert_in_epsilon(2050, worksheet.xi_b_bu138, 0.001); end
  def test_xi_b_bw138; assert_equal("Industry", worksheet.xi_b_bw138); end
  def test_xi_b_bx138; assert_equal("Description", worksheet.xi_b_bx138); end
  def test_xi_b_by138; assert_in_epsilon(2010, worksheet.xi_b_by138, 0.001); end
  def test_xi_b_bz138; assert_in_epsilon(2015, worksheet.xi_b_bz138, 0.001); end
  def test_xi_b_ca138; assert_in_epsilon(2020, worksheet.xi_b_ca138, 0.001); end
  def test_xi_b_cb138; assert_in_epsilon(2025, worksheet.xi_b_cb138, 0.001); end
  def test_xi_b_cc138; assert_in_epsilon(2030, worksheet.xi_b_cc138, 0.001); end
  def test_xi_b_cd138; assert_in_epsilon(2035, worksheet.xi_b_cd138, 0.001); end
  def test_xi_b_ce138; assert_in_epsilon(2040, worksheet.xi_b_ce138, 0.001); end
  def test_xi_b_cf138; assert_in_epsilon(2045, worksheet.xi_b_cf138, 0.001); end
  def test_xi_b_cg138; assert_in_epsilon(2050, worksheet.xi_b_cg138, 0.001); end
  def test_xi_b_c139; assert_equal("(i)", worksheet.xi_b_c139); end
  def test_xi_b_d139; assert_equal("Cement", worksheet.xi_b_d139); end
  def test_xi_b_e139; assert_in_epsilon(1000, worksheet.xi_b_e139, 0.001); end
  def test_xi_b_o139; assert_equal("(i)", worksheet.xi_b_o139); end
  def test_xi_b_p139; assert_equal("Cement", worksheet.xi_b_p139); end
  def test_xi_b_q139; assert_in_delta(0.0013199367088607594, worksheet.xi_b_q139, 0.001); end
  def test_xi_b_r139; assert_in_delta(0.0013199367088607594, worksheet.xi_b_r139, 0.001); end
  def test_xi_b_s139; assert_in_delta(0.0013199367088607594, worksheet.xi_b_s139, 0.001); end
  def test_xi_b_t139; assert_in_delta(0.0013199367088607594, worksheet.xi_b_t139, 0.001); end
  def test_xi_b_u139; assert_in_delta(0.0013199367088607594, worksheet.xi_b_u139, 0.001); end
  def test_xi_b_v139; assert_in_delta(0.0013199367088607594, worksheet.xi_b_v139, 0.001); end
  def test_xi_b_w139; assert_in_delta(0.0013199367088607594, worksheet.xi_b_w139, 0.001); end
  def test_xi_b_x139; assert_in_delta(0.0013199367088607594, worksheet.xi_b_x139, 0.001); end
  def test_xi_b_y139; assert_in_delta(0.0013199367088607594, worksheet.xi_b_y139, 0.001); end
  def test_xi_b_aa139; assert_equal("V.01", worksheet.xi_b_aa139); end
  def test_xi_b_ab139; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_ab139); end
  def test_xi_b_ac139; assert_in_delta(0.11776552385519061, worksheet.xi_b_ac139, 0.001); end
  def test_xi_b_ad139; assert_in_delta(0.11776552385519061, worksheet.xi_b_ad139, 0.001); end
  def test_xi_b_ae139; assert_in_delta(0.11776552385519061, worksheet.xi_b_ae139, 0.001); end
  def test_xi_b_af139; assert_in_delta(0.11776552385519061, worksheet.xi_b_af139, 0.001); end
  def test_xi_b_ag139; assert_in_delta(0.11776552385519061, worksheet.xi_b_ag139, 0.001); end
  def test_xi_b_ah139; assert_in_delta(0.11776552385519061, worksheet.xi_b_ah139, 0.001); end
  def test_xi_b_ai139; assert_in_delta(0.11776552385519061, worksheet.xi_b_ai139, 0.001); end
  def test_xi_b_aj139; assert_in_delta(0.11776552385519061, worksheet.xi_b_aj139, 0.001); end
  def test_xi_b_ak139; assert_in_delta(0.11776552385519061, worksheet.xi_b_ak139, 0.001); end
  def test_xi_b_am139; assert_equal("(i)", worksheet.xi_b_am139); end
  def test_xi_b_an139; assert_equal("Cement", worksheet.xi_b_an139); end
  def test_xi_b_ao139; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ao139, 0.001); end
  def test_xi_b_ap139; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ap139, 0.001); end
  def test_xi_b_aq139; assert_in_delta(0.0005448283227848102, worksheet.xi_b_aq139, 0.001); end
  def test_xi_b_ar139; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ar139, 0.001); end
  def test_xi_b_as139; assert_in_delta(0.0005448283227848102, worksheet.xi_b_as139, 0.001); end
  def test_xi_b_at139; assert_in_delta(0.0005448283227848102, worksheet.xi_b_at139, 0.001); end
  def test_xi_b_au139; assert_in_delta(0.0005448283227848102, worksheet.xi_b_au139, 0.001); end
  def test_xi_b_av139; assert_in_delta(0.0005448283227848102, worksheet.xi_b_av139, 0.001); end
  def test_xi_b_aw139; assert_in_delta(0.0005448283227848102, worksheet.xi_b_aw139, 0.001); end
  def test_xi_b_ay139; assert_equal("(i)", worksheet.xi_b_ay139); end
  def test_xi_b_az139; assert_equal("Cement", worksheet.xi_b_az139); end
  def test_xi_b_ba139; assert_in_delta(0.8983151665087781, worksheet.xi_b_ba139, 0.001); end
  def test_xi_b_bb139; assert_in_epsilon(1.0330624414850953, worksheet.xi_b_bb139, 0.001); end
  def test_xi_b_bc139; assert_in_epsilon(1.0454437197848345, worksheet.xi_b_bc139, 0.001); end
  def test_xi_b_bd139; assert_in_epsilon(1.057973388003885, worksheet.xi_b_bd139, 0.001); end
  def test_xi_b_be139; assert_in_epsilon(1.0706532245990121, worksheet.xi_b_be139, 0.001); end
  def test_xi_b_bf139; assert_in_epsilon(1.0834850293418283, worksheet.xi_b_bf139, 0.001); end
  def test_xi_b_bg139; assert_in_epsilon(1.096470623574252, worksheet.xi_b_bg139, 0.001); end
  def test_xi_b_bh139; assert_in_epsilon(1.1096118504670287, worksheet.xi_b_bh139, 0.001); end
  def test_xi_b_bi139; assert_in_epsilon(1.1229105752813497, worksheet.xi_b_bi139, 0.001); end
  def test_xi_b_bk139; assert_equal("(i)", worksheet.xi_b_bk139); end
  def test_xi_b_bl139; assert_equal("Cement", worksheet.xi_b_bl139); end
  def test_xi_b_bm139; assert_in_epsilon(26.343905222963386, worksheet.xi_b_bm139, 0.001); end
  def test_xi_b_bn139; assert_in_epsilon(36.62067576323398, worksheet.xi_b_bn139, 0.001); end
  def test_xi_b_bo139; assert_in_epsilon(38.335413846618515, worksheet.xi_b_bo139, 0.001); end
  def test_xi_b_bp139; assert_in_epsilon(42.37863297928141, worksheet.xi_b_bp139, 0.001); end
  def test_xi_b_bq139; assert_in_epsilon(41.48839842602343, worksheet.xi_b_bq139, 0.001); end
  def test_xi_b_br139; assert_in_epsilon(40.96190912854618, worksheet.xi_b_br139, 0.001); end
  def test_xi_b_bs139; assert_in_epsilon(40.665540226291974, worksheet.xi_b_bs139, 0.001); end
  def test_xi_b_bt139; assert_in_epsilon(40.40431203123529, worksheet.xi_b_bt139, 0.001); end
  def test_xi_b_bu139; assert_in_epsilon(40.09896861288019, worksheet.xi_b_bu139, 0.001); end
  def test_xi_b_bw139; assert_equal("(i)", worksheet.xi_b_bw139); end
  def test_xi_b_bx139; assert_equal("Cement", worksheet.xi_b_bx139); end
  def test_xi_b_by139; assert_in_delta(0, (worksheet.xi_b_by139||0), 0.001); end
  def test_xi_b_bz139; assert_in_delta(0, (worksheet.xi_b_bz139||0), 0.001); end
  def test_xi_b_ca139; assert_in_delta(0, (worksheet.xi_b_ca139||0), 0.001); end
  def test_xi_b_cb139; assert_in_delta(0, (worksheet.xi_b_cb139||0), 0.001); end
  def test_xi_b_cc139; assert_in_delta(0, (worksheet.xi_b_cc139||0), 0.001); end
  def test_xi_b_cd139; assert_in_delta(0, (worksheet.xi_b_cd139||0), 0.001); end
  def test_xi_b_ce139; assert_in_delta(0, (worksheet.xi_b_ce139||0), 0.001); end
  def test_xi_b_cf139; assert_in_delta(0, (worksheet.xi_b_cf139||0), 0.001); end
  def test_xi_b_cg139; assert_in_delta(0, (worksheet.xi_b_cg139||0), 0.001); end
  def test_xi_b_aa140; assert_equal("V.03", worksheet.xi_b_aa140); end
  def test_xi_b_ab140; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab140); end
  def test_xi_b_ac140; assert_in_delta(0.6781107648046033, worksheet.xi_b_ac140, 0.001); end
  def test_xi_b_ad140; assert_in_delta(0.6781107648046033, worksheet.xi_b_ad140, 0.001); end
  def test_xi_b_ae140; assert_in_delta(0.6781107648046033, worksheet.xi_b_ae140, 0.001); end
  def test_xi_b_af140; assert_in_delta(0.6781107648046033, worksheet.xi_b_af140, 0.001); end
  def test_xi_b_ag140; assert_in_delta(0.6781107648046033, worksheet.xi_b_ag140, 0.001); end
  def test_xi_b_ah140; assert_in_delta(0.6781107648046033, worksheet.xi_b_ah140, 0.001); end
  def test_xi_b_ai140; assert_in_delta(0.6781107648046033, worksheet.xi_b_ai140, 0.001); end
  def test_xi_b_aj140; assert_in_delta(0.6781107648046033, worksheet.xi_b_aj140, 0.001); end
  def test_xi_b_ak140; assert_in_delta(0.6781107648046033, worksheet.xi_b_ak140, 0.001); end
  def test_xi_b_aa141; assert_equal("V.05", worksheet.xi_b_aa141); end
  def test_xi_b_ab141; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_ab141); end
  def test_xi_b_ac141; assert_in_delta(0.028290577799088945, worksheet.xi_b_ac141, 0.001); end
  def test_xi_b_ad141; assert_in_delta(0.028290577799088945, worksheet.xi_b_ad141, 0.001); end
  def test_xi_b_ae141; assert_in_delta(0.028290577799088945, worksheet.xi_b_ae141, 0.001); end
  def test_xi_b_af141; assert_in_delta(0.028290577799088945, worksheet.xi_b_af141, 0.001); end
  def test_xi_b_ag141; assert_in_delta(0.028290577799088945, worksheet.xi_b_ag141, 0.001); end
  def test_xi_b_ah141; assert_in_delta(0.028290577799088945, worksheet.xi_b_ah141, 0.001); end
  def test_xi_b_ai141; assert_in_delta(0.028290577799088945, worksheet.xi_b_ai141, 0.001); end
  def test_xi_b_aj141; assert_in_delta(0.028290577799088945, worksheet.xi_b_aj141, 0.001); end
  def test_xi_b_ak141; assert_in_delta(0.028290577799088945, worksheet.xi_b_ak141, 0.001); end
  def test_xi_b_aa142; assert_equal("V.04", worksheet.xi_b_aa142); end
  def test_xi_b_ab142; assert_equal("Liquid hydrocarbons", worksheet.xi_b_ab142); end
  def test_xi_b_ac142; assert_in_delta(0.019835371213937504, worksheet.xi_b_ac142, 0.001); end
  def test_xi_b_ad142; assert_in_delta(0.019835371213937504, worksheet.xi_b_ad142, 0.001); end
  def test_xi_b_ae142; assert_in_delta(0.019835371213937504, worksheet.xi_b_ae142, 0.001); end
  def test_xi_b_af142; assert_in_delta(0.019835371213937504, worksheet.xi_b_af142, 0.001); end
  def test_xi_b_ag142; assert_in_delta(0.019835371213937504, worksheet.xi_b_ag142, 0.001); end
  def test_xi_b_ah142; assert_in_delta(0.019835371213937504, worksheet.xi_b_ah142, 0.001); end
  def test_xi_b_ai142; assert_in_delta(0.019835371213937504, worksheet.xi_b_ai142, 0.001); end
  def test_xi_b_aj142; assert_in_delta(0.019835371213937504, worksheet.xi_b_aj142, 0.001); end
  def test_xi_b_ak142; assert_in_delta(0.019835371213937504, worksheet.xi_b_ak142, 0.001); end
  def test_xi_b_aa143; assert_equal("v.03", worksheet.xi_b_aa143); end
  def test_xi_b_ab143; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab143); end
  def test_xi_b_ac143; assert_in_delta(0.15599776232717974, worksheet.xi_b_ac143, 0.001); end
  def test_xi_b_ad143; assert_in_delta(0.15599776232717974, worksheet.xi_b_ad143, 0.001); end
  def test_xi_b_ae143; assert_in_delta(0.15599776232717974, worksheet.xi_b_ae143, 0.001); end
  def test_xi_b_af143; assert_in_delta(0.15599776232717974, worksheet.xi_b_af143, 0.001); end
  def test_xi_b_ag143; assert_in_delta(0.15599776232717974, worksheet.xi_b_ag143, 0.001); end
  def test_xi_b_ah143; assert_in_delta(0.15599776232717974, worksheet.xi_b_ah143, 0.001); end
  def test_xi_b_ai143; assert_in_delta(0.15599776232717974, worksheet.xi_b_ai143, 0.001); end
  def test_xi_b_aj143; assert_in_delta(0.15599776232717974, worksheet.xi_b_aj143, 0.001); end
  def test_xi_b_ak143; assert_in_delta(0.15599776232717974, worksheet.xi_b_ak143, 0.001); end
  def test_xi_b_aa144; assert_equal("V.07", worksheet.xi_b_aa144); end
  def test_xi_b_ab144; assert_equal("Heat transport", worksheet.xi_b_ab144); end
  def test_xi_b_ac144; assert_in_delta(0, (worksheet.xi_b_ac144||0), 0.001); end
  def test_xi_b_ad144; assert_in_delta(0, (worksheet.xi_b_ad144||0), 0.001); end
  def test_xi_b_ae144; assert_in_delta(0, (worksheet.xi_b_ae144||0), 0.001); end
  def test_xi_b_af144; assert_in_delta(0, (worksheet.xi_b_af144||0), 0.001); end
  def test_xi_b_ag144; assert_in_delta(0, (worksheet.xi_b_ag144||0), 0.001); end
  def test_xi_b_ah144; assert_in_delta(0, (worksheet.xi_b_ah144||0), 0.001); end
  def test_xi_b_ai144; assert_in_delta(0, (worksheet.xi_b_ai144||0), 0.001); end
  def test_xi_b_aj144; assert_in_delta(0, (worksheet.xi_b_aj144||0), 0.001); end
  def test_xi_b_ak144; assert_in_delta(0, (worksheet.xi_b_ak144||0), 0.001); end
  def test_xi_b_aa145; assert_equal("Intensity", worksheet.xi_b_aa145); end
  def test_xi_b_ab145; assert_equal("Intensity", worksheet.xi_b_ab145); end
  def test_xi_b_ac145; assert_in_delta(0.26780590413995176, worksheet.xi_b_ac145, 0.001); end
  def test_xi_b_ad145; assert_in_delta(0.26780590413995176, worksheet.xi_b_ad145, 0.001); end
  def test_xi_b_ae145; assert_in_delta(0.26780590413995176, worksheet.xi_b_ae145, 0.001); end
  def test_xi_b_af145; assert_in_delta(0.26780590413995176, worksheet.xi_b_af145, 0.001); end
  def test_xi_b_ag145; assert_in_delta(0.26780590413995176, worksheet.xi_b_ag145, 0.001); end
  def test_xi_b_ah145; assert_in_delta(0.26780590413995176, worksheet.xi_b_ah145, 0.001); end
  def test_xi_b_ai145; assert_in_delta(0.26780590413995176, worksheet.xi_b_ai145, 0.001); end
  def test_xi_b_aj145; assert_in_delta(0.26780590413995176, worksheet.xi_b_aj145, 0.001); end
  def test_xi_b_ak145; assert_in_delta(0.26780590413995176, worksheet.xi_b_ak145, 0.001); end
  def test_xi_b_aa146; assert_equal("Cost", worksheet.xi_b_aa146); end
  def test_xi_b_ab146; assert_equal("Cost", worksheet.xi_b_ab146); end
  def test_xi_b_ac146; assert_in_epsilon(19.958460921736826, worksheet.xi_b_ac146, 0.001); end
  def test_xi_b_ad146; assert_in_epsilon(24.125449097144745, worksheet.xi_b_ad146, 0.001); end
  def test_xi_b_ae146; assert_in_epsilon(24.95600837939598, worksheet.xi_b_ae146, 0.001); end
  def test_xi_b_af146; assert_in_epsilon(27.261379250212904, worksheet.xi_b_af146, 0.001); end
  def test_xi_b_ag146; assert_in_epsilon(26.372631445154656, worksheet.xi_b_ag146, 0.001); end
  def test_xi_b_ah146; assert_in_epsilon(25.72959200369887, worksheet.xi_b_ah146, 0.001); end
  def test_xi_b_ai146; assert_in_epsilon(25.240919416208378, worksheet.xi_b_ai146, 0.001); end
  def test_xi_b_aj146; assert_in_epsilon(24.78176617498356, worksheet.xi_b_aj146, 0.001); end
  def test_xi_b_ak146; assert_in_epsilon(24.30321087241484, worksheet.xi_b_ak146, 0.001); end
  def test_xi_b_b148; assert_equal("Methodology", worksheet.xi_b_b148); end
  def test_xi_b_b149; assert_equal("Update the 5 matrixes to take into account the trajectory assumptions", worksheet.xi_b_b149); end
  def test_xi_b_b151; assert_in_delta(1, worksheet.xi_b_b151, 0.001); end
  def test_xi_b_c151; assert_equal("Compute output growth", worksheet.xi_b_c151); end
  def test_xi_b_b152; assert_in_epsilon(3, worksheet.xi_b_b152, 0.001); end
  def test_xi_b_c152; assert_equal("Compute energy efficiency", worksheet.xi_b_c152); end
  def test_xi_b_b153; assert_in_epsilon(4, worksheet.xi_b_b153, 0.001); end
  def test_xi_b_c153; assert_equal("Computer alternative fuels potential", worksheet.xi_b_c153); end
  def test_xi_b_b154; assert_in_epsilon(5, worksheet.xi_b_b154, 0.001); end
  def test_xi_b_c154; assert_equal("Compute process improvements", worksheet.xi_b_c154); end
  def test_xi_b_b155; assert_in_epsilon(6, worksheet.xi_b_b155, 0.001); end
  def test_xi_b_c155; assert_equal("Compute CCS impact", worksheet.xi_b_c155); end
  def test_xi_b_b158; assert_in_delta(1, worksheet.xi_b_b158, 0.001); end
  def test_xi_b_c158; assert_equal("Output Growth (kt)", worksheet.xi_b_c158); end
  def test_xi_b_b159; assert_in_delta(1, worksheet.xi_b_b159, 0.001); end
  def test_xi_b_c159; assert_equal("Output Growth (kt)", worksheet.xi_b_c159); end
  def test_xi_b_n159; assert_in_epsilon(2, worksheet.xi_b_n159, 0.001); end
  def test_xi_b_o159; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_b_o159); end
  def test_xi_b_z159; assert_in_epsilon(3, worksheet.xi_b_z159, 0.001); end
  def test_xi_b_aa159; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_b_aa159); end
  def test_xi_b_al159; assert_in_epsilon(4, worksheet.xi_b_al159, 0.001); end
  def test_xi_b_am159; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_b_am159); end
  def test_xi_b_ay159; assert_in_epsilon(5, worksheet.xi_b_ay159, 0.001); end
  def test_xi_b_az159; assert_equal("Emissions (MMtCO2e)", worksheet.xi_b_az159); end
  def test_xi_b_bk159; assert_in_epsilon(6, worksheet.xi_b_bk159, 0.001); end
  def test_xi_b_bl159; assert_equal("Costs : Energy (MEUR)", worksheet.xi_b_bl159); end
  def test_xi_b_bw159; assert_in_epsilon(7, worksheet.xi_b_bw159, 0.001); end
  def test_xi_b_bx159; assert_equal("Costs : Capex (MEUR)", worksheet.xi_b_bx159); end
  def test_xi_b_c160; assert_equal("Product type", worksheet.xi_b_c160); end
  def test_xi_b_d160; assert_equal("Description", worksheet.xi_b_d160); end
  def test_xi_b_e160; assert_in_epsilon(2010, worksheet.xi_b_e160, 0.001); end
  def test_xi_b_f160; assert_in_epsilon(2015, worksheet.xi_b_f160, 0.001); end
  def test_xi_b_g160; assert_in_epsilon(2020, worksheet.xi_b_g160, 0.001); end
  def test_xi_b_h160; assert_in_epsilon(2025, worksheet.xi_b_h160, 0.001); end
  def test_xi_b_i160; assert_in_epsilon(2030, worksheet.xi_b_i160, 0.001); end
  def test_xi_b_j160; assert_in_epsilon(2035, worksheet.xi_b_j160, 0.001); end
  def test_xi_b_k160; assert_in_epsilon(2040, worksheet.xi_b_k160, 0.001); end
  def test_xi_b_l160; assert_in_epsilon(2045, worksheet.xi_b_l160, 0.001); end
  def test_xi_b_m160; assert_in_epsilon(2050, worksheet.xi_b_m160, 0.001); end
  def test_xi_b_o160; assert_equal("Industry", worksheet.xi_b_o160); end
  def test_xi_b_p160; assert_equal("Description", worksheet.xi_b_p160); end
  def test_xi_b_q160; assert_in_epsilon(2010, worksheet.xi_b_q160, 0.001); end
  def test_xi_b_r160; assert_in_epsilon(2015, worksheet.xi_b_r160, 0.001); end
  def test_xi_b_s160; assert_in_epsilon(2020, worksheet.xi_b_s160, 0.001); end
  def test_xi_b_t160; assert_in_epsilon(2025, worksheet.xi_b_t160, 0.001); end
  def test_xi_b_u160; assert_in_epsilon(2030, worksheet.xi_b_u160, 0.001); end
  def test_xi_b_v160; assert_in_epsilon(2035, worksheet.xi_b_v160, 0.001); end
  def test_xi_b_w160; assert_in_epsilon(2040, worksheet.xi_b_w160, 0.001); end
  def test_xi_b_x160; assert_in_epsilon(2045, worksheet.xi_b_x160, 0.001); end
  def test_xi_b_y160; assert_in_epsilon(2050, worksheet.xi_b_y160, 0.001); end
  def test_xi_b_aa160; assert_equal("Vector", worksheet.xi_b_aa160); end
  def test_xi_b_ab160; assert_equal("Description", worksheet.xi_b_ab160); end
  def test_xi_b_ac160; assert_in_epsilon(2010, worksheet.xi_b_ac160, 0.001); end
  def test_xi_b_ad160; assert_in_epsilon(2015, worksheet.xi_b_ad160, 0.001); end
  def test_xi_b_ae160; assert_in_epsilon(2020, worksheet.xi_b_ae160, 0.001); end
  def test_xi_b_af160; assert_in_epsilon(2025, worksheet.xi_b_af160, 0.001); end
  def test_xi_b_ag160; assert_in_epsilon(2030, worksheet.xi_b_ag160, 0.001); end
  def test_xi_b_ah160; assert_in_epsilon(2035, worksheet.xi_b_ah160, 0.001); end
  def test_xi_b_ai160; assert_in_epsilon(2040, worksheet.xi_b_ai160, 0.001); end
  def test_xi_b_aj160; assert_in_epsilon(2045, worksheet.xi_b_aj160, 0.001); end
  def test_xi_b_ak160; assert_in_epsilon(2050, worksheet.xi_b_ak160, 0.001); end
  def test_xi_b_am160; assert_equal("Industry", worksheet.xi_b_am160); end
  def test_xi_b_an160; assert_equal("Description", worksheet.xi_b_an160); end
  def test_xi_b_ao160; assert_in_epsilon(2010, worksheet.xi_b_ao160, 0.001); end
  def test_xi_b_ap160; assert_in_epsilon(2015, worksheet.xi_b_ap160, 0.001); end
  def test_xi_b_aq160; assert_in_epsilon(2020, worksheet.xi_b_aq160, 0.001); end
  def test_xi_b_ar160; assert_in_epsilon(2025, worksheet.xi_b_ar160, 0.001); end
  def test_xi_b_as160; assert_in_epsilon(2030, worksheet.xi_b_as160, 0.001); end
  def test_xi_b_at160; assert_in_epsilon(2035, worksheet.xi_b_at160, 0.001); end
  def test_xi_b_au160; assert_in_epsilon(2040, worksheet.xi_b_au160, 0.001); end
  def test_xi_b_av160; assert_in_epsilon(2045, worksheet.xi_b_av160, 0.001); end
  def test_xi_b_aw160; assert_in_epsilon(2050, worksheet.xi_b_aw160, 0.001); end
  def test_xi_b_ay160; assert_equal("Industry", worksheet.xi_b_ay160); end
  def test_xi_b_az160; assert_equal("Description", worksheet.xi_b_az160); end
  def test_xi_b_ba160; assert_in_epsilon(2010, worksheet.xi_b_ba160, 0.001); end
  def test_xi_b_bb160; assert_in_epsilon(2015, worksheet.xi_b_bb160, 0.001); end
  def test_xi_b_bc160; assert_in_epsilon(2020, worksheet.xi_b_bc160, 0.001); end
  def test_xi_b_bd160; assert_in_epsilon(2025, worksheet.xi_b_bd160, 0.001); end
  def test_xi_b_be160; assert_in_epsilon(2030, worksheet.xi_b_be160, 0.001); end
  def test_xi_b_bf160; assert_in_epsilon(2035, worksheet.xi_b_bf160, 0.001); end
  def test_xi_b_bg160; assert_in_epsilon(2040, worksheet.xi_b_bg160, 0.001); end
  def test_xi_b_bh160; assert_in_epsilon(2045, worksheet.xi_b_bh160, 0.001); end
  def test_xi_b_bi160; assert_in_epsilon(2050, worksheet.xi_b_bi160, 0.001); end
  def test_xi_b_bk160; assert_equal("Industry", worksheet.xi_b_bk160); end
  def test_xi_b_bl160; assert_equal("Description", worksheet.xi_b_bl160); end
  def test_xi_b_bm160; assert_in_epsilon(2010, worksheet.xi_b_bm160, 0.001); end
  def test_xi_b_bn160; assert_in_epsilon(2015, worksheet.xi_b_bn160, 0.001); end
  def test_xi_b_bo160; assert_in_epsilon(2020, worksheet.xi_b_bo160, 0.001); end
  def test_xi_b_bp160; assert_in_epsilon(2025, worksheet.xi_b_bp160, 0.001); end
  def test_xi_b_bq160; assert_in_epsilon(2030, worksheet.xi_b_bq160, 0.001); end
  def test_xi_b_br160; assert_in_epsilon(2035, worksheet.xi_b_br160, 0.001); end
  def test_xi_b_bs160; assert_in_epsilon(2040, worksheet.xi_b_bs160, 0.001); end
  def test_xi_b_bt160; assert_in_epsilon(2045, worksheet.xi_b_bt160, 0.001); end
  def test_xi_b_bu160; assert_in_epsilon(2050, worksheet.xi_b_bu160, 0.001); end
  def test_xi_b_bw160; assert_equal("Industry", worksheet.xi_b_bw160); end
  def test_xi_b_bx160; assert_equal("Description", worksheet.xi_b_bx160); end
  def test_xi_b_by160; assert_in_epsilon(2010, worksheet.xi_b_by160, 0.001); end
  def test_xi_b_bz160; assert_in_epsilon(2015, worksheet.xi_b_bz160, 0.001); end
  def test_xi_b_ca160; assert_in_epsilon(2020, worksheet.xi_b_ca160, 0.001); end
  def test_xi_b_cb160; assert_in_epsilon(2025, worksheet.xi_b_cb160, 0.001); end
  def test_xi_b_cc160; assert_in_epsilon(2030, worksheet.xi_b_cc160, 0.001); end
  def test_xi_b_cd160; assert_in_epsilon(2035, worksheet.xi_b_cd160, 0.001); end
  def test_xi_b_ce160; assert_in_epsilon(2040, worksheet.xi_b_ce160, 0.001); end
  def test_xi_b_cf160; assert_in_epsilon(2045, worksheet.xi_b_cf160, 0.001); end
  def test_xi_b_cg160; assert_in_epsilon(2050, worksheet.xi_b_cg160, 0.001); end
  def test_xi_b_c161; assert_equal("(i)", worksheet.xi_b_c161); end
  def test_xi_b_d161; assert_equal("Cement", worksheet.xi_b_d161); end
  def test_xi_b_e161; assert_in_epsilon(4740, worksheet.xi_b_e161, 0.001); end
  def test_xi_b_o161; assert_equal("(i)", worksheet.xi_b_o161); end
  def test_xi_b_p161; assert_equal("Cement", worksheet.xi_b_p161); end
  def test_xi_b_q161; assert_in_delta(0.0013199367088607594, worksheet.xi_b_q161, 0.001); end
  def test_xi_b_r161; assert_in_delta(0.0013199367088607594, worksheet.xi_b_r161, 0.001); end
  def test_xi_b_s161; assert_in_delta(0.0013199367088607594, worksheet.xi_b_s161, 0.001); end
  def test_xi_b_t161; assert_in_delta(0.0013199367088607594, worksheet.xi_b_t161, 0.001); end
  def test_xi_b_u161; assert_in_delta(0.0013199367088607594, worksheet.xi_b_u161, 0.001); end
  def test_xi_b_v161; assert_in_delta(0.0013199367088607594, worksheet.xi_b_v161, 0.001); end
  def test_xi_b_w161; assert_in_delta(0.0013199367088607594, worksheet.xi_b_w161, 0.001); end
  def test_xi_b_x161; assert_in_delta(0.0013199367088607594, worksheet.xi_b_x161, 0.001); end
  def test_xi_b_y161; assert_in_delta(0.0013199367088607594, worksheet.xi_b_y161, 0.001); end
  def test_xi_b_aa161; assert_equal("V.01", worksheet.xi_b_aa161); end
  def test_xi_b_ab161; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_ab161); end
  def test_xi_b_ac161; assert_in_delta(0.11776552385519061, worksheet.xi_b_ac161, 0.001); end
  def test_xi_b_ad161; assert_in_delta(0.11776552385519061, worksheet.xi_b_ad161, 0.001); end
  def test_xi_b_ae161; assert_in_delta(0.11776552385519061, worksheet.xi_b_ae161, 0.001); end
  def test_xi_b_af161; assert_in_delta(0.11776552385519061, worksheet.xi_b_af161, 0.001); end
  def test_xi_b_ag161; assert_in_delta(0.11776552385519061, worksheet.xi_b_ag161, 0.001); end
  def test_xi_b_ah161; assert_in_delta(0.11776552385519061, worksheet.xi_b_ah161, 0.001); end
  def test_xi_b_ai161; assert_in_delta(0.11776552385519061, worksheet.xi_b_ai161, 0.001); end
  def test_xi_b_aj161; assert_in_delta(0.11776552385519061, worksheet.xi_b_aj161, 0.001); end
  def test_xi_b_ak161; assert_in_delta(0.11776552385519061, worksheet.xi_b_ak161, 0.001); end
  def test_xi_b_am161; assert_equal("(i)", worksheet.xi_b_am161); end
  def test_xi_b_an161; assert_equal("Cement", worksheet.xi_b_an161); end
  def test_xi_b_ao161; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ao161, 0.001); end
  def test_xi_b_ap161; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ap161, 0.001); end
  def test_xi_b_aq161; assert_in_delta(0.0005448283227848102, worksheet.xi_b_aq161, 0.001); end
  def test_xi_b_ar161; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ar161, 0.001); end
  def test_xi_b_as161; assert_in_delta(0.0005448283227848102, worksheet.xi_b_as161, 0.001); end
  def test_xi_b_at161; assert_in_delta(0.0005448283227848102, worksheet.xi_b_at161, 0.001); end
  def test_xi_b_au161; assert_in_delta(0.0005448283227848102, worksheet.xi_b_au161, 0.001); end
  def test_xi_b_av161; assert_in_delta(0.0005448283227848102, worksheet.xi_b_av161, 0.001); end
  def test_xi_b_aw161; assert_in_delta(0.0005448283227848102, worksheet.xi_b_aw161, 0.001); end
  def test_xi_b_ay161; assert_equal("(i)", worksheet.xi_b_ay161); end
  def test_xi_b_az161; assert_equal("Cement", worksheet.xi_b_az161); end
  def test_xi_b_ba161; assert_in_epsilon(4.258013889251608, worksheet.xi_b_ba161, 0.001); end
  def test_xi_b_bb161; assert_in_epsilon(4.896715972639351, worksheet.xi_b_bb161, 0.001); end
  def test_xi_b_bc161; assert_in_epsilon(4.955403231780115, worksheet.xi_b_bc161, 0.001); end
  def test_xi_b_bd161; assert_in_epsilon(5.014793859138414, worksheet.xi_b_bd161, 0.001); end
  def test_xi_b_be161; assert_in_epsilon(5.074896284599317, worksheet.xi_b_be161, 0.001); end
  def test_xi_b_bf161; assert_in_epsilon(5.135719039080266, worksheet.xi_b_bf161, 0.001); end
  def test_xi_b_bg161; assert_in_epsilon(5.197270755741954, worksheet.xi_b_bg161, 0.001); end
  def test_xi_b_bh161; assert_in_epsilon(5.259560171213716, worksheet.xi_b_bh161, 0.001); end
  def test_xi_b_bk161; assert_equal("(i)", worksheet.xi_b_bk161); end
  def test_xi_b_bl161; assert_equal("Cost Baseline", worksheet.xi_b_bl161); end
  def test_xi_b_bw161; assert_equal("(i)", worksheet.xi_b_bw161); end
  def test_xi_b_bx161; assert_equal("Cost baseline", worksheet.xi_b_bx161); end
  def test_xi_b_by161; assert_in_delta(0, (worksheet.xi_b_by161||0), 0.001); end
  def test_xi_b_bz161; assert_in_delta(0, (worksheet.xi_b_bz161||0), 0.001); end
  def test_xi_b_ca161; assert_in_delta(0, (worksheet.xi_b_ca161||0), 0.001); end
  def test_xi_b_cb161; assert_in_delta(0, (worksheet.xi_b_cb161||0), 0.001); end
  def test_xi_b_cc161; assert_in_delta(0, (worksheet.xi_b_cc161||0), 0.001); end
  def test_xi_b_cd161; assert_in_delta(0, (worksheet.xi_b_cd161||0), 0.001); end
  def test_xi_b_ce161; assert_in_delta(0, (worksheet.xi_b_ce161||0), 0.001); end
  def test_xi_b_cf161; assert_in_delta(0, (worksheet.xi_b_cf161||0), 0.001); end
  def test_xi_b_cg161; assert_in_delta(0, (worksheet.xi_b_cg161||0), 0.001); end
  def test_xi_b_aa162; assert_equal("V.03", worksheet.xi_b_aa162); end
  def test_xi_b_ab162; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab162); end
  def test_xi_b_ac162; assert_in_delta(0.6781107648046033, worksheet.xi_b_ac162, 0.001); end
  def test_xi_b_ad162; assert_in_delta(0.6781107648046033, worksheet.xi_b_ad162, 0.001); end
  def test_xi_b_ae162; assert_in_delta(0.6781107648046033, worksheet.xi_b_ae162, 0.001); end
  def test_xi_b_af162; assert_in_delta(0.6781107648046033, worksheet.xi_b_af162, 0.001); end
  def test_xi_b_ag162; assert_in_delta(0.6781107648046033, worksheet.xi_b_ag162, 0.001); end
  def test_xi_b_ah162; assert_in_delta(0.6781107648046033, worksheet.xi_b_ah162, 0.001); end
  def test_xi_b_ai162; assert_in_delta(0.6781107648046033, worksheet.xi_b_ai162, 0.001); end
  def test_xi_b_aj162; assert_in_delta(0.6781107648046033, worksheet.xi_b_aj162, 0.001); end
  def test_xi_b_ak162; assert_in_delta(0.6781107648046033, worksheet.xi_b_ak162, 0.001); end
  def test_xi_b_bl162; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bl162); end
  def test_xi_b_bm162; assert_in_delta(0, (worksheet.xi_b_bm162||0), 0.001); end
  def test_xi_b_bn162; assert_in_delta(0, (worksheet.xi_b_bn162||0), 0.001); end
  def test_xi_b_bo162; assert_in_delta(0, (worksheet.xi_b_bo162||0), 0.001); end
  def test_xi_b_bp162; assert_in_delta(0, (worksheet.xi_b_bp162||0), 0.001); end
  def test_xi_b_bq162; assert_in_delta(0, (worksheet.xi_b_bq162||0), 0.001); end
  def test_xi_b_br162; assert_in_delta(0, (worksheet.xi_b_br162||0), 0.001); end
  def test_xi_b_bs162; assert_in_delta(0, (worksheet.xi_b_bs162||0), 0.001); end
  def test_xi_b_bt162; assert_in_delta(0, (worksheet.xi_b_bt162||0), 0.001); end
  def test_xi_b_bu162; assert_in_delta(0, (worksheet.xi_b_bu162||0), 0.001); end
  def test_xi_b_bx162; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bx162); end
  def test_xi_b_by162; assert_in_delta(0, (worksheet.xi_b_by162||0), 0.001); end
  def test_xi_b_bz162; assert_in_delta(0, (worksheet.xi_b_bz162||0), 0.001); end
  def test_xi_b_ca162; assert_in_delta(0, (worksheet.xi_b_ca162||0), 0.001); end
  def test_xi_b_cb162; assert_in_delta(0, (worksheet.xi_b_cb162||0), 0.001); end
  def test_xi_b_cc162; assert_in_delta(0, (worksheet.xi_b_cc162||0), 0.001); end
  def test_xi_b_cd162; assert_in_delta(0, (worksheet.xi_b_cd162||0), 0.001); end
  def test_xi_b_ce162; assert_in_delta(0, (worksheet.xi_b_ce162||0), 0.001); end
  def test_xi_b_cf162; assert_in_delta(0, (worksheet.xi_b_cf162||0), 0.001); end
  def test_xi_b_cg162; assert_in_delta(0, (worksheet.xi_b_cg162||0), 0.001); end
  def test_xi_b_aa163; assert_equal("V.05", worksheet.xi_b_aa163); end
  def test_xi_b_ab163; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_ab163); end
  def test_xi_b_ac163; assert_in_delta(0.028290577799088945, worksheet.xi_b_ac163, 0.001); end
  def test_xi_b_ad163; assert_in_delta(0.028290577799088945, worksheet.xi_b_ad163, 0.001); end
  def test_xi_b_ae163; assert_in_delta(0.028290577799088945, worksheet.xi_b_ae163, 0.001); end
  def test_xi_b_af163; assert_in_delta(0.028290577799088945, worksheet.xi_b_af163, 0.001); end
  def test_xi_b_ag163; assert_in_delta(0.028290577799088945, worksheet.xi_b_ag163, 0.001); end
  def test_xi_b_ah163; assert_in_delta(0.028290577799088945, worksheet.xi_b_ah163, 0.001); end
  def test_xi_b_ai163; assert_in_delta(0.028290577799088945, worksheet.xi_b_ai163, 0.001); end
  def test_xi_b_aj163; assert_in_delta(0.028290577799088945, worksheet.xi_b_aj163, 0.001); end
  def test_xi_b_ak163; assert_in_delta(0.028290577799088945, worksheet.xi_b_ak163, 0.001); end
  def test_xi_b_bl163; assert_equal("+=cost", worksheet.xi_b_bl163); end
  def test_xi_b_bx163; assert_equal("+=cost", worksheet.xi_b_bx163); end
  def test_xi_b_aa164; assert_equal("V.04", worksheet.xi_b_aa164); end
  def test_xi_b_ab164; assert_equal("Liquid hydrocarbons", worksheet.xi_b_ab164); end
  def test_xi_b_ac164; assert_in_delta(0.019835371213937504, worksheet.xi_b_ac164, 0.001); end
  def test_xi_b_ad164; assert_in_delta(0.019835371213937504, worksheet.xi_b_ad164, 0.001); end
  def test_xi_b_ae164; assert_in_delta(0.019835371213937504, worksheet.xi_b_ae164, 0.001); end
  def test_xi_b_af164; assert_in_delta(0.019835371213937504, worksheet.xi_b_af164, 0.001); end
  def test_xi_b_ag164; assert_in_delta(0.019835371213937504, worksheet.xi_b_ag164, 0.001); end
  def test_xi_b_ah164; assert_in_delta(0.019835371213937504, worksheet.xi_b_ah164, 0.001); end
  def test_xi_b_ai164; assert_in_delta(0.019835371213937504, worksheet.xi_b_ai164, 0.001); end
  def test_xi_b_aj164; assert_in_delta(0.019835371213937504, worksheet.xi_b_aj164, 0.001); end
  def test_xi_b_ak164; assert_in_delta(0.019835371213937504, worksheet.xi_b_ak164, 0.001); end
  def test_xi_b_bl164; assert_equal("-=savings", worksheet.xi_b_bl164); end
  def test_xi_b_bx164; assert_equal("-=savings", worksheet.xi_b_bx164); end
  def test_xi_b_aa165; assert_equal("v.03", worksheet.xi_b_aa165); end
  def test_xi_b_ab165; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab165); end
  def test_xi_b_ac165; assert_in_delta(0.15599776232717974, worksheet.xi_b_ac165, 0.001); end
  def test_xi_b_ad165; assert_in_delta(0.15599776232717974, worksheet.xi_b_ad165, 0.001); end
  def test_xi_b_ae165; assert_in_delta(0.15599776232717974, worksheet.xi_b_ae165, 0.001); end
  def test_xi_b_af165; assert_in_delta(0.15599776232717974, worksheet.xi_b_af165, 0.001); end
  def test_xi_b_ag165; assert_in_delta(0.15599776232717974, worksheet.xi_b_ag165, 0.001); end
  def test_xi_b_ah165; assert_in_delta(0.15599776232717974, worksheet.xi_b_ah165, 0.001); end
  def test_xi_b_ai165; assert_in_delta(0.15599776232717974, worksheet.xi_b_ai165, 0.001); end
  def test_xi_b_aj165; assert_in_delta(0.15599776232717974, worksheet.xi_b_aj165, 0.001); end
  def test_xi_b_ak165; assert_in_delta(0.15599776232717974, worksheet.xi_b_ak165, 0.001); end
  def test_xi_b_aa166; assert_equal("V.07", worksheet.xi_b_aa166); end
  def test_xi_b_ab166; assert_equal("Heat transport", worksheet.xi_b_ab166); end
  def test_xi_b_ac166; assert_in_delta(0, (worksheet.xi_b_ac166||0), 0.001); end
  def test_xi_b_ad166; assert_in_delta(0, (worksheet.xi_b_ad166||0), 0.001); end
  def test_xi_b_ae166; assert_in_delta(0, (worksheet.xi_b_ae166||0), 0.001); end
  def test_xi_b_af166; assert_in_delta(0, (worksheet.xi_b_af166||0), 0.001); end
  def test_xi_b_ag166; assert_in_delta(0, (worksheet.xi_b_ag166||0), 0.001); end
  def test_xi_b_ah166; assert_in_delta(0, (worksheet.xi_b_ah166||0), 0.001); end
  def test_xi_b_ai166; assert_in_delta(0, (worksheet.xi_b_ai166||0), 0.001); end
  def test_xi_b_aj166; assert_in_delta(0, (worksheet.xi_b_aj166||0), 0.001); end
  def test_xi_b_ak166; assert_in_delta(0, (worksheet.xi_b_ak166||0), 0.001); end
  def test_xi_b_bl166; assert_equal("MEUR/ktciment", worksheet.xi_b_bl166); end
  def test_xi_b_bm166; assert_equal(:ref, worksheet.xi_b_bm166); end
  def test_xi_b_bu166; assert_in_delta(0.03207870017368427, worksheet.xi_b_bu166, 0.001); end
  def test_xi_b_aa167; assert_equal("Intensity", worksheet.xi_b_aa167); end
  def test_xi_b_ab167; assert_equal("Intensity", worksheet.xi_b_ab167); end
  def test_xi_b_ac167; assert_in_delta(0.26780590413995176, worksheet.xi_b_ac167, 0.001); end
  def test_xi_b_ad167; assert_in_delta(0.26780590413995176, worksheet.xi_b_ad167, 0.001); end
  def test_xi_b_ae167; assert_in_delta(0.26780590413995176, worksheet.xi_b_ae167, 0.001); end
  def test_xi_b_af167; assert_in_delta(0.26780590413995176, worksheet.xi_b_af167, 0.001); end
  def test_xi_b_ag167; assert_in_delta(0.26780590413995176, worksheet.xi_b_ag167, 0.001); end
  def test_xi_b_ah167; assert_in_delta(0.26780590413995176, worksheet.xi_b_ah167, 0.001); end
  def test_xi_b_ai167; assert_in_delta(0.26780590413995176, worksheet.xi_b_ai167, 0.001); end
  def test_xi_b_aj167; assert_in_delta(0.26780590413995176, worksheet.xi_b_aj167, 0.001); end
  def test_xi_b_ak167; assert_in_delta(0.26780590413995176, worksheet.xi_b_ak167, 0.001); end
  def test_xi_b_bl167; assert_equal("€/tciment", worksheet.xi_b_bl167); end
  def test_xi_b_bm167; assert_equal(:ref, worksheet.xi_b_bm167); end
  def test_xi_b_bu167; assert_in_epsilon(32.07870017368427, worksheet.xi_b_bu167, 0.001); end
  def test_xi_b_aa168; assert_equal("Cost", worksheet.xi_b_aa168); end
  def test_xi_b_ab168; assert_equal("Cost", worksheet.xi_b_ab168); end
  def test_xi_b_ac168; assert_in_epsilon(19.958460921736826, worksheet.xi_b_ac168, 0.001); end
  def test_xi_b_ad168; assert_in_epsilon(24.125449097144745, worksheet.xi_b_ad168, 0.001); end
  def test_xi_b_ae168; assert_in_epsilon(24.95600837939598, worksheet.xi_b_ae168, 0.001); end
  def test_xi_b_af168; assert_in_epsilon(27.261379250212904, worksheet.xi_b_af168, 0.001); end
  def test_xi_b_ag168; assert_in_epsilon(26.372631445154656, worksheet.xi_b_ag168, 0.001); end
  def test_xi_b_ah168; assert_in_epsilon(25.72959200369887, worksheet.xi_b_ah168, 0.001); end
  def test_xi_b_ai168; assert_in_epsilon(25.240919416208378, worksheet.xi_b_ai168, 0.001); end
  def test_xi_b_aj168; assert_in_epsilon(24.78176617498356, worksheet.xi_b_aj168, 0.001); end
  def test_xi_b_ak168; assert_in_epsilon(24.30321087241484, worksheet.xi_b_ak168, 0.001); end
  def test_xi_b_b170; assert_in_epsilon(2, worksheet.xi_b_b170, 0.001); end
  def test_xi_b_c170; assert_equal("Product mix", worksheet.xi_b_c170); end
  def test_xi_b_b171; assert_in_delta(1, worksheet.xi_b_b171, 0.001); end
  def test_xi_b_c171; assert_equal("Output Growth (kt)", worksheet.xi_b_c171); end
  def test_xi_b_n171; assert_in_epsilon(2, worksheet.xi_b_n171, 0.001); end
  def test_xi_b_o171; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_b_o171); end
  def test_xi_b_z171; assert_in_epsilon(3, worksheet.xi_b_z171, 0.001); end
  def test_xi_b_aa171; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_b_aa171); end
  def test_xi_b_al171; assert_in_epsilon(4, worksheet.xi_b_al171, 0.001); end
  def test_xi_b_am171; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_b_am171); end
  def test_xi_b_ay171; assert_in_epsilon(5, worksheet.xi_b_ay171, 0.001); end
  def test_xi_b_az171; assert_equal("Emissions (MMtCO2e)", worksheet.xi_b_az171); end
  def test_xi_b_bk171; assert_in_epsilon(6, worksheet.xi_b_bk171, 0.001); end
  def test_xi_b_bl171; assert_equal("Costs : Energy (MEUR)", worksheet.xi_b_bl171); end
  def test_xi_b_bw171; assert_in_epsilon(7, worksheet.xi_b_bw171, 0.001); end
  def test_xi_b_bx171; assert_equal("Costs : Capex (MEUR)", worksheet.xi_b_bx171); end
  def test_xi_b_c172; assert_equal("Product type", worksheet.xi_b_c172); end
  def test_xi_b_d172; assert_equal("Description", worksheet.xi_b_d172); end
  def test_xi_b_e172; assert_in_epsilon(2010, worksheet.xi_b_e172, 0.001); end
  def test_xi_b_f172; assert_in_epsilon(2015, worksheet.xi_b_f172, 0.001); end
  def test_xi_b_g172; assert_in_epsilon(2020, worksheet.xi_b_g172, 0.001); end
  def test_xi_b_h172; assert_in_epsilon(2025, worksheet.xi_b_h172, 0.001); end
  def test_xi_b_i172; assert_in_epsilon(2030, worksheet.xi_b_i172, 0.001); end
  def test_xi_b_j172; assert_in_epsilon(2035, worksheet.xi_b_j172, 0.001); end
  def test_xi_b_k172; assert_in_epsilon(2040, worksheet.xi_b_k172, 0.001); end
  def test_xi_b_l172; assert_in_epsilon(2045, worksheet.xi_b_l172, 0.001); end
  def test_xi_b_m172; assert_in_epsilon(2050, worksheet.xi_b_m172, 0.001); end
  def test_xi_b_o172; assert_equal("Industry", worksheet.xi_b_o172); end
  def test_xi_b_p172; assert_equal("Description", worksheet.xi_b_p172); end
  def test_xi_b_q172; assert_in_epsilon(2010, worksheet.xi_b_q172, 0.001); end
  def test_xi_b_r172; assert_in_epsilon(2015, worksheet.xi_b_r172, 0.001); end
  def test_xi_b_s172; assert_in_epsilon(2020, worksheet.xi_b_s172, 0.001); end
  def test_xi_b_t172; assert_in_epsilon(2025, worksheet.xi_b_t172, 0.001); end
  def test_xi_b_u172; assert_in_epsilon(2030, worksheet.xi_b_u172, 0.001); end
  def test_xi_b_v172; assert_in_epsilon(2035, worksheet.xi_b_v172, 0.001); end
  def test_xi_b_w172; assert_in_epsilon(2040, worksheet.xi_b_w172, 0.001); end
  def test_xi_b_x172; assert_in_epsilon(2045, worksheet.xi_b_x172, 0.001); end
  def test_xi_b_y172; assert_in_epsilon(2050, worksheet.xi_b_y172, 0.001); end
  def test_xi_b_aa172; assert_equal("Vector", worksheet.xi_b_aa172); end
  def test_xi_b_ab172; assert_equal("Description", worksheet.xi_b_ab172); end
  def test_xi_b_ac172; assert_in_epsilon(2010, worksheet.xi_b_ac172, 0.001); end
  def test_xi_b_ad172; assert_in_epsilon(2015, worksheet.xi_b_ad172, 0.001); end
  def test_xi_b_ae172; assert_in_epsilon(2020, worksheet.xi_b_ae172, 0.001); end
  def test_xi_b_af172; assert_in_epsilon(2025, worksheet.xi_b_af172, 0.001); end
  def test_xi_b_ag172; assert_in_epsilon(2030, worksheet.xi_b_ag172, 0.001); end
  def test_xi_b_ah172; assert_in_epsilon(2035, worksheet.xi_b_ah172, 0.001); end
  def test_xi_b_ai172; assert_in_epsilon(2040, worksheet.xi_b_ai172, 0.001); end
  def test_xi_b_aj172; assert_in_epsilon(2045, worksheet.xi_b_aj172, 0.001); end
  def test_xi_b_ak172; assert_in_epsilon(2050, worksheet.xi_b_ak172, 0.001); end
  def test_xi_b_am172; assert_equal("Industry", worksheet.xi_b_am172); end
  def test_xi_b_an172; assert_equal("Description", worksheet.xi_b_an172); end
  def test_xi_b_ao172; assert_in_epsilon(2010, worksheet.xi_b_ao172, 0.001); end
  def test_xi_b_ap172; assert_in_epsilon(2015, worksheet.xi_b_ap172, 0.001); end
  def test_xi_b_aq172; assert_in_epsilon(2020, worksheet.xi_b_aq172, 0.001); end
  def test_xi_b_ar172; assert_in_epsilon(2025, worksheet.xi_b_ar172, 0.001); end
  def test_xi_b_as172; assert_in_epsilon(2030, worksheet.xi_b_as172, 0.001); end
  def test_xi_b_at172; assert_in_epsilon(2035, worksheet.xi_b_at172, 0.001); end
  def test_xi_b_au172; assert_in_epsilon(2040, worksheet.xi_b_au172, 0.001); end
  def test_xi_b_av172; assert_in_epsilon(2045, worksheet.xi_b_av172, 0.001); end
  def test_xi_b_aw172; assert_in_epsilon(2050, worksheet.xi_b_aw172, 0.001); end
  def test_xi_b_ay172; assert_equal("Industry", worksheet.xi_b_ay172); end
  def test_xi_b_az172; assert_equal("Description", worksheet.xi_b_az172); end
  def test_xi_b_ba172; assert_in_epsilon(2010, worksheet.xi_b_ba172, 0.001); end
  def test_xi_b_bb172; assert_in_epsilon(2015, worksheet.xi_b_bb172, 0.001); end
  def test_xi_b_bc172; assert_in_epsilon(2020, worksheet.xi_b_bc172, 0.001); end
  def test_xi_b_bd172; assert_in_epsilon(2025, worksheet.xi_b_bd172, 0.001); end
  def test_xi_b_be172; assert_in_epsilon(2030, worksheet.xi_b_be172, 0.001); end
  def test_xi_b_bf172; assert_in_epsilon(2035, worksheet.xi_b_bf172, 0.001); end
  def test_xi_b_bg172; assert_in_epsilon(2040, worksheet.xi_b_bg172, 0.001); end
  def test_xi_b_bh172; assert_in_epsilon(2045, worksheet.xi_b_bh172, 0.001); end
  def test_xi_b_bi172; assert_in_epsilon(2050, worksheet.xi_b_bi172, 0.001); end
  def test_xi_b_bk172; assert_equal("Industry", worksheet.xi_b_bk172); end
  def test_xi_b_bl172; assert_equal("Description", worksheet.xi_b_bl172); end
  def test_xi_b_bm172; assert_in_epsilon(2010, worksheet.xi_b_bm172, 0.001); end
  def test_xi_b_bn172; assert_in_epsilon(2015, worksheet.xi_b_bn172, 0.001); end
  def test_xi_b_bo172; assert_in_epsilon(2020, worksheet.xi_b_bo172, 0.001); end
  def test_xi_b_bp172; assert_in_epsilon(2025, worksheet.xi_b_bp172, 0.001); end
  def test_xi_b_bq172; assert_in_epsilon(2030, worksheet.xi_b_bq172, 0.001); end
  def test_xi_b_br172; assert_in_epsilon(2035, worksheet.xi_b_br172, 0.001); end
  def test_xi_b_bs172; assert_in_epsilon(2040, worksheet.xi_b_bs172, 0.001); end
  def test_xi_b_bt172; assert_in_epsilon(2045, worksheet.xi_b_bt172, 0.001); end
  def test_xi_b_bu172; assert_in_epsilon(2050, worksheet.xi_b_bu172, 0.001); end
  def test_xi_b_bw172; assert_equal("Industry", worksheet.xi_b_bw172); end
  def test_xi_b_bx172; assert_equal("Description", worksheet.xi_b_bx172); end
  def test_xi_b_by172; assert_in_epsilon(2010, worksheet.xi_b_by172, 0.001); end
  def test_xi_b_bz172; assert_in_epsilon(2015, worksheet.xi_b_bz172, 0.001); end
  def test_xi_b_ca172; assert_in_epsilon(2020, worksheet.xi_b_ca172, 0.001); end
  def test_xi_b_cb172; assert_in_epsilon(2025, worksheet.xi_b_cb172, 0.001); end
  def test_xi_b_cc172; assert_in_epsilon(2030, worksheet.xi_b_cc172, 0.001); end
  def test_xi_b_cd172; assert_in_epsilon(2035, worksheet.xi_b_cd172, 0.001); end
  def test_xi_b_ce172; assert_in_epsilon(2040, worksheet.xi_b_ce172, 0.001); end
  def test_xi_b_cf172; assert_in_epsilon(2045, worksheet.xi_b_cf172, 0.001); end
  def test_xi_b_cg172; assert_in_epsilon(2050, worksheet.xi_b_cg172, 0.001); end
  def test_xi_b_c173; assert_equal("(i)", worksheet.xi_b_c173); end
  def test_xi_b_d173; assert_equal("Cement", worksheet.xi_b_d173); end
  def test_xi_b_e173; assert_in_epsilon(4740, worksheet.xi_b_e173, 0.001); end
  def test_xi_b_f173; assert_in_epsilon(5451.000000000002, worksheet.xi_b_f173, 0.001); end
  def test_xi_b_g173; assert_in_epsilon(5516.330366589321, worksheet.xi_b_g173, 0.001); end
  def test_xi_b_h173; assert_in_epsilon(5582.443719199314, worksheet.xi_b_h173, 0.001); end
  def test_xi_b_i173; assert_in_epsilon(5649.3494419363415, worksheet.xi_b_i173, 0.001); end
  def test_xi_b_j173; assert_in_epsilon(5717.057031375503, worksheet.xi_b_j173, 0.001); end
  def test_xi_b_k173; assert_in_epsilon(5785.576097908582, worksheet.xi_b_k173, 0.001); end
  def test_xi_b_l173; assert_in_epsilon(5854.916367108136, worksheet.xi_b_l173, 0.001); end
  def test_xi_b_m173; assert_in_epsilon(5925.08768110795, worksheet.xi_b_m173, 0.001); end
  def test_xi_b_o173; assert_equal("(i)", worksheet.xi_b_o173); end
  def test_xi_b_p173; assert_equal("Cement", worksheet.xi_b_p173); end
  def test_xi_b_aa173; assert_equal("V.01", worksheet.xi_b_aa173); end
  def test_xi_b_ab173; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_ab173); end
  def test_xi_b_ac173; assert_in_delta(0.11776552385519061, worksheet.xi_b_ac173, 0.001); end
  def test_xi_b_ad173; assert_in_delta(0.11776552385519061, worksheet.xi_b_ad173, 0.001); end
  def test_xi_b_ae173; assert_in_delta(0.11776552385519061, worksheet.xi_b_ae173, 0.001); end
  def test_xi_b_af173; assert_in_delta(0.11776552385519061, worksheet.xi_b_af173, 0.001); end
  def test_xi_b_ag173; assert_in_delta(0.11776552385519061, worksheet.xi_b_ag173, 0.001); end
  def test_xi_b_ah173; assert_in_delta(0.11776552385519061, worksheet.xi_b_ah173, 0.001); end
  def test_xi_b_ai173; assert_in_delta(0.11776552385519061, worksheet.xi_b_ai173, 0.001); end
  def test_xi_b_aj173; assert_in_delta(0.11776552385519061, worksheet.xi_b_aj173, 0.001); end
  def test_xi_b_ak173; assert_in_delta(0.11776552385519061, worksheet.xi_b_ak173, 0.001); end
  def test_xi_b_am173; assert_equal("(i)", worksheet.xi_b_am173); end
  def test_xi_b_an173; assert_equal("Cement", worksheet.xi_b_an173); end
  def test_xi_b_ay173; assert_equal("(i)", worksheet.xi_b_ay173); end
  def test_xi_b_az173; assert_equal("Cement", worksheet.xi_b_az173); end
  def test_xi_b_q173; assert_in_delta(0.0013199367088607594, worksheet.xi_b_q173, 0.001); end
  def test_xi_b_ao173; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ao173, 0.001); end
  def test_xi_b_ba173; assert_in_epsilon(4.258013889251608, worksheet.xi_b_ba173, 0.001); end
  def test_xi_b_ap173; assert_in_delta(0.000506761493142476, worksheet.xi_b_ap173, 0.001); end
  def test_xi_b_bb173; assert_in_epsilon(4.55458535104356, worksheet.xi_b_bb173, 0.001); end
  def test_xi_b_aq173; assert_in_delta(0.0004686946635001418, worksheet.xi_b_aq173, 0.001); end
  def test_xi_b_bc173; assert_in_epsilon(4.262941101070544, worksheet.xi_b_bc173, 0.001); end
  def test_xi_b_ar173; assert_in_delta(0.0004306278338578075, worksheet.xi_b_ar173, 0.001); end
  def test_xi_b_bd173; assert_in_epsilon(3.963651900044756, worksheet.xi_b_bd173, 0.001); end
  def test_xi_b_as173; assert_in_delta(0.0003925610042154733, worksheet.xi_b_as173, 0.001); end
  def test_xi_b_be173; assert_in_epsilon(3.656576390134806, worksheet.xi_b_be173, 0.001); end
  def test_xi_b_at173; assert_in_delta(0.0003544941745731391, worksheet.xi_b_at173, 0.001); end
  def test_xi_b_bf173; assert_in_epsilon(3.3415709232821698, worksheet.xi_b_bf173, 0.001); end
  def test_xi_b_au173; assert_in_delta(0.0003164273449308048, worksheet.xi_b_au173, 0.001); end
  def test_xi_b_bg173; assert_in_epsilon(3.0184895266090863, worksheet.xi_b_bg173, 0.001); end
  def test_xi_b_av173; assert_in_delta(0.00027836051528847065, worksheet.xi_b_av173, 0.001); end
  def test_xi_b_bh173; assert_in_epsilon(2.687183867326261, worksheet.xi_b_bh173, 0.001); end
  def test_xi_b_bk173; assert_equal("(i)", worksheet.xi_b_bk173); end
  def test_xi_b_bl173; assert_equal("Cost initiative", worksheet.xi_b_bl173); end
  def test_xi_b_bw173; assert_equal("(i)", worksheet.xi_b_bw173); end
  def test_xi_b_bx173; assert_equal("Cost initiative", worksheet.xi_b_bx173); end
  def test_xi_b_by173; assert_in_delta(0, (worksheet.xi_b_by173||0), 0.001); end
  def test_xi_b_bz173; assert_in_epsilon(12.128070926789121, worksheet.xi_b_bz173, 0.001); end
  def test_xi_b_ca173; assert_in_epsilon(25.391919097592478, worksheet.xi_b_ca173, 0.001); end
  def test_xi_b_cb173; assert_in_epsilon(42.10499035103274, worksheet.xi_b_cb173, 0.001); end
  def test_xi_b_cc173; assert_in_epsilon(54.96067216267684, worksheet.xi_b_cc173, 0.001); end
  def test_xi_b_cd173; assert_in_epsilon(67.82902402178748, worksheet.xi_b_cd173, 0.001); end
  def test_xi_b_ce173; assert_in_epsilon(80.80591838272127, worksheet.xi_b_ce173, 0.001); end
  def test_xi_b_cf173; assert_in_epsilon(93.6679747970237, worksheet.xi_b_cf173, 0.001); end
  def test_xi_b_aa174; assert_equal("V.03", worksheet.xi_b_aa174); end
  def test_xi_b_ab174; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab174); end
  def test_xi_b_ac174; assert_in_delta(0.6781107648046033, worksheet.xi_b_ac174, 0.001); end
  def test_xi_b_ad174; assert_in_delta(0.6781107648046033, worksheet.xi_b_ad174, 0.001); end
  def test_xi_b_ae174; assert_in_delta(0.6781107648046033, worksheet.xi_b_ae174, 0.001); end
  def test_xi_b_af174; assert_in_delta(0.6781107648046033, worksheet.xi_b_af174, 0.001); end
  def test_xi_b_ag174; assert_in_delta(0.6781107648046033, worksheet.xi_b_ag174, 0.001); end
  def test_xi_b_ah174; assert_in_delta(0.6781107648046033, worksheet.xi_b_ah174, 0.001); end
  def test_xi_b_ai174; assert_in_delta(0.6781107648046033, worksheet.xi_b_ai174, 0.001); end
  def test_xi_b_aj174; assert_in_delta(0.6781107648046033, worksheet.xi_b_aj174, 0.001); end
  def test_xi_b_ak174; assert_in_delta(0.6781107648046033, worksheet.xi_b_ak174, 0.001); end
  def test_xi_b_bl174; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bl174); end
  def test_xi_b_bx174; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bx174); end
  def test_xi_b_by174; assert_in_delta(0, (worksheet.xi_b_by174||0), 0.001); end
  def test_xi_b_bz174; assert_in_epsilon(12.128070926789121, worksheet.xi_b_bz174, 0.001); end
  def test_xi_b_ca174; assert_in_epsilon(25.391919097592478, worksheet.xi_b_ca174, 0.001); end
  def test_xi_b_cb174; assert_in_epsilon(42.10499035103274, worksheet.xi_b_cb174, 0.001); end
  def test_xi_b_cc174; assert_in_epsilon(54.96067216267684, worksheet.xi_b_cc174, 0.001); end
  def test_xi_b_cd174; assert_in_epsilon(67.82902402178748, worksheet.xi_b_cd174, 0.001); end
  def test_xi_b_ce174; assert_in_epsilon(80.80591838272127, worksheet.xi_b_ce174, 0.001); end
  def test_xi_b_cf174; assert_in_epsilon(93.6679747970237, worksheet.xi_b_cf174, 0.001); end
  def test_xi_b_cg174; assert_in_epsilon(106.24012261758511, worksheet.xi_b_cg174, 0.001); end
  def test_xi_b_aa175; assert_equal("V.05", worksheet.xi_b_aa175); end
  def test_xi_b_ab175; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_ab175); end
  def test_xi_b_ac175; assert_in_delta(0.028290577799088945, worksheet.xi_b_ac175, 0.001); end
  def test_xi_b_ad175; assert_in_delta(0.028290577799088945, worksheet.xi_b_ad175, 0.001); end
  def test_xi_b_ae175; assert_in_delta(0.028290577799088945, worksheet.xi_b_ae175, 0.001); end
  def test_xi_b_af175; assert_in_delta(0.028290577799088945, worksheet.xi_b_af175, 0.001); end
  def test_xi_b_ag175; assert_in_delta(0.028290577799088945, worksheet.xi_b_ag175, 0.001); end
  def test_xi_b_ah175; assert_in_delta(0.028290577799088945, worksheet.xi_b_ah175, 0.001); end
  def test_xi_b_ai175; assert_in_delta(0.028290577799088945, worksheet.xi_b_ai175, 0.001); end
  def test_xi_b_aj175; assert_in_delta(0.028290577799088945, worksheet.xi_b_aj175, 0.001); end
  def test_xi_b_ak175; assert_in_delta(0.028290577799088945, worksheet.xi_b_ak175, 0.001); end
  def test_xi_b_bl175; assert_equal("+=cost", worksheet.xi_b_bl175); end
  def test_xi_b_bx175; assert_equal("+=cost", worksheet.xi_b_bx175); end
  def test_xi_b_aa176; assert_equal("V.04", worksheet.xi_b_aa176); end
  def test_xi_b_ab176; assert_equal("Liquid hydrocarbons", worksheet.xi_b_ab176); end
  def test_xi_b_ac176; assert_in_delta(0.019835371213937504, worksheet.xi_b_ac176, 0.001); end
  def test_xi_b_ad176; assert_in_delta(0.019835371213937504, worksheet.xi_b_ad176, 0.001); end
  def test_xi_b_ae176; assert_in_delta(0.019835371213937504, worksheet.xi_b_ae176, 0.001); end
  def test_xi_b_af176; assert_in_delta(0.019835371213937504, worksheet.xi_b_af176, 0.001); end
  def test_xi_b_ag176; assert_in_delta(0.019835371213937504, worksheet.xi_b_ag176, 0.001); end
  def test_xi_b_ah176; assert_in_delta(0.019835371213937504, worksheet.xi_b_ah176, 0.001); end
  def test_xi_b_ai176; assert_in_delta(0.019835371213937504, worksheet.xi_b_ai176, 0.001); end
  def test_xi_b_aj176; assert_in_delta(0.019835371213937504, worksheet.xi_b_aj176, 0.001); end
  def test_xi_b_ak176; assert_in_delta(0.019835371213937504, worksheet.xi_b_ak176, 0.001); end
  def test_xi_b_bl176; assert_equal("-=savings", worksheet.xi_b_bl176); end
  def test_xi_b_bx176; assert_equal("-=savings", worksheet.xi_b_bx176); end
  def test_xi_b_aa177; assert_equal("v.03", worksheet.xi_b_aa177); end
  def test_xi_b_ab177; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab177); end
  def test_xi_b_ac177; assert_in_delta(0.15599776232717974, worksheet.xi_b_ac177, 0.001); end
  def test_xi_b_ad177; assert_in_delta(0.15599776232717974, worksheet.xi_b_ad177, 0.001); end
  def test_xi_b_ae177; assert_in_delta(0.15599776232717974, worksheet.xi_b_ae177, 0.001); end
  def test_xi_b_af177; assert_in_delta(0.15599776232717974, worksheet.xi_b_af177, 0.001); end
  def test_xi_b_ag177; assert_in_delta(0.15599776232717974, worksheet.xi_b_ag177, 0.001); end
  def test_xi_b_ah177; assert_in_delta(0.15599776232717974, worksheet.xi_b_ah177, 0.001); end
  def test_xi_b_ai177; assert_in_delta(0.15599776232717974, worksheet.xi_b_ai177, 0.001); end
  def test_xi_b_aj177; assert_in_delta(0.15599776232717974, worksheet.xi_b_aj177, 0.001); end
  def test_xi_b_ak177; assert_in_delta(0.15599776232717974, worksheet.xi_b_ak177, 0.001); end
  def test_xi_b_aa178; assert_equal("V.07", worksheet.xi_b_aa178); end
  def test_xi_b_ab178; assert_equal("Heat transport", worksheet.xi_b_ab178); end
  def test_xi_b_ac178; assert_in_delta(0, (worksheet.xi_b_ac178||0), 0.001); end
  def test_xi_b_ad178; assert_in_delta(0, (worksheet.xi_b_ad178||0), 0.001); end
  def test_xi_b_ae178; assert_in_delta(0, (worksheet.xi_b_ae178||0), 0.001); end
  def test_xi_b_af178; assert_in_delta(0, (worksheet.xi_b_af178||0), 0.001); end
  def test_xi_b_ag178; assert_in_delta(0, (worksheet.xi_b_ag178||0), 0.001); end
  def test_xi_b_ah178; assert_in_delta(0, (worksheet.xi_b_ah178||0), 0.001); end
  def test_xi_b_ai178; assert_in_delta(0, (worksheet.xi_b_ai178||0), 0.001); end
  def test_xi_b_aj178; assert_in_delta(0, (worksheet.xi_b_aj178||0), 0.001); end
  def test_xi_b_ak178; assert_in_delta(0, (worksheet.xi_b_ak178||0), 0.001); end
  def test_xi_b_aa179; assert_equal("Intensity", worksheet.xi_b_aa179); end
  def test_xi_b_ab179; assert_equal("Intensity", worksheet.xi_b_ab179); end
  def test_xi_b_ac179; assert_in_delta(0.26780590413995176, worksheet.xi_b_ac179, 0.001); end
  def test_xi_b_ad179; assert_in_delta(0.26780590413995176, worksheet.xi_b_ad179, 0.001); end
  def test_xi_b_ae179; assert_in_delta(0.26780590413995176, worksheet.xi_b_ae179, 0.001); end
  def test_xi_b_af179; assert_in_delta(0.26780590413995176, worksheet.xi_b_af179, 0.001); end
  def test_xi_b_ag179; assert_in_delta(0.26780590413995176, worksheet.xi_b_ag179, 0.001); end
  def test_xi_b_ah179; assert_in_delta(0.26780590413995176, worksheet.xi_b_ah179, 0.001); end
  def test_xi_b_ai179; assert_in_delta(0.26780590413995176, worksheet.xi_b_ai179, 0.001); end
  def test_xi_b_aj179; assert_in_delta(0.26780590413995176, worksheet.xi_b_aj179, 0.001); end
  def test_xi_b_ak179; assert_in_delta(0.26780590413995176, worksheet.xi_b_ak179, 0.001); end
  def test_xi_b_aa180; assert_equal("Cost", worksheet.xi_b_aa180); end
  def test_xi_b_ab180; assert_equal("Cost", worksheet.xi_b_ab180); end
  def test_xi_b_ac180; assert_in_epsilon(19.958460921736826, worksheet.xi_b_ac180, 0.001); end
  def test_xi_b_ad180; assert_in_epsilon(24.125449097144745, worksheet.xi_b_ad180, 0.001); end
  def test_xi_b_ae180; assert_in_epsilon(24.95600837939598, worksheet.xi_b_ae180, 0.001); end
  def test_xi_b_af180; assert_in_epsilon(27.261379250212904, worksheet.xi_b_af180, 0.001); end
  def test_xi_b_ag180; assert_in_epsilon(26.372631445154656, worksheet.xi_b_ag180, 0.001); end
  def test_xi_b_ah180; assert_in_epsilon(25.72959200369887, worksheet.xi_b_ah180, 0.001); end
  def test_xi_b_ai180; assert_in_epsilon(25.240919416208378, worksheet.xi_b_ai180, 0.001); end
  def test_xi_b_aj180; assert_in_epsilon(24.78176617498356, worksheet.xi_b_aj180, 0.001); end
  def test_xi_b_ak180; assert_in_epsilon(24.30321087241484, worksheet.xi_b_ak180, 0.001); end
  def test_xi_b_b182; assert_in_epsilon(3, worksheet.xi_b_b182, 0.001); end
  def test_xi_b_c182; assert_equal("Energy efficiency", worksheet.xi_b_c182); end
  def test_xi_b_b183; assert_in_delta(1, worksheet.xi_b_b183, 0.001); end
  def test_xi_b_c183; assert_equal("Output Growth (kt)", worksheet.xi_b_c183); end
  def test_xi_b_n183; assert_in_epsilon(2, worksheet.xi_b_n183, 0.001); end
  def test_xi_b_o183; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_b_o183); end
  def test_xi_b_z183; assert_in_epsilon(3, worksheet.xi_b_z183, 0.001); end
  def test_xi_b_aa183; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_b_aa183); end
  def test_xi_b_al183; assert_in_epsilon(4, worksheet.xi_b_al183, 0.001); end
  def test_xi_b_am183; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_b_am183); end
  def test_xi_b_ay183; assert_in_epsilon(5, worksheet.xi_b_ay183, 0.001); end
  def test_xi_b_az183; assert_equal("Emissions (MMtCO2e)", worksheet.xi_b_az183); end
  def test_xi_b_bk183; assert_in_epsilon(6, worksheet.xi_b_bk183, 0.001); end
  def test_xi_b_bl183; assert_equal("Costs : Energy (MEUR)", worksheet.xi_b_bl183); end
  def test_xi_b_bw183; assert_in_epsilon(7, worksheet.xi_b_bw183, 0.001); end
  def test_xi_b_bx183; assert_equal("Costs : Capex (MEUR)", worksheet.xi_b_bx183); end
  def test_xi_b_c184; assert_equal("Product type", worksheet.xi_b_c184); end
  def test_xi_b_d184; assert_equal("Description", worksheet.xi_b_d184); end
  def test_xi_b_e184; assert_in_epsilon(2010, worksheet.xi_b_e184, 0.001); end
  def test_xi_b_f184; assert_in_epsilon(2015, worksheet.xi_b_f184, 0.001); end
  def test_xi_b_g184; assert_in_epsilon(2020, worksheet.xi_b_g184, 0.001); end
  def test_xi_b_h184; assert_in_epsilon(2025, worksheet.xi_b_h184, 0.001); end
  def test_xi_b_i184; assert_in_epsilon(2030, worksheet.xi_b_i184, 0.001); end
  def test_xi_b_j184; assert_in_epsilon(2035, worksheet.xi_b_j184, 0.001); end
  def test_xi_b_k184; assert_in_epsilon(2040, worksheet.xi_b_k184, 0.001); end
  def test_xi_b_l184; assert_in_epsilon(2045, worksheet.xi_b_l184, 0.001); end
  def test_xi_b_m184; assert_in_epsilon(2050, worksheet.xi_b_m184, 0.001); end
  def test_xi_b_o184; assert_equal("Industry", worksheet.xi_b_o184); end
  def test_xi_b_p184; assert_equal("Description", worksheet.xi_b_p184); end
  def test_xi_b_q184; assert_in_epsilon(2010, worksheet.xi_b_q184, 0.001); end
  def test_xi_b_r184; assert_in_epsilon(2015, worksheet.xi_b_r184, 0.001); end
  def test_xi_b_s184; assert_in_epsilon(2020, worksheet.xi_b_s184, 0.001); end
  def test_xi_b_t184; assert_in_epsilon(2025, worksheet.xi_b_t184, 0.001); end
  def test_xi_b_u184; assert_in_epsilon(2030, worksheet.xi_b_u184, 0.001); end
  def test_xi_b_v184; assert_in_epsilon(2035, worksheet.xi_b_v184, 0.001); end
  def test_xi_b_w184; assert_in_epsilon(2040, worksheet.xi_b_w184, 0.001); end
  def test_xi_b_x184; assert_in_epsilon(2045, worksheet.xi_b_x184, 0.001); end
  def test_xi_b_y184; assert_in_epsilon(2050, worksheet.xi_b_y184, 0.001); end
  def test_xi_b_aa184; assert_equal("Vector", worksheet.xi_b_aa184); end
  def test_xi_b_ab184; assert_equal("Description", worksheet.xi_b_ab184); end
  def test_xi_b_ac184; assert_in_epsilon(2010, worksheet.xi_b_ac184, 0.001); end
  def test_xi_b_ad184; assert_in_epsilon(2015, worksheet.xi_b_ad184, 0.001); end
  def test_xi_b_ae184; assert_in_epsilon(2020, worksheet.xi_b_ae184, 0.001); end
  def test_xi_b_af184; assert_in_epsilon(2025, worksheet.xi_b_af184, 0.001); end
  def test_xi_b_ag184; assert_in_epsilon(2030, worksheet.xi_b_ag184, 0.001); end
  def test_xi_b_ah184; assert_in_epsilon(2035, worksheet.xi_b_ah184, 0.001); end
  def test_xi_b_ai184; assert_in_epsilon(2040, worksheet.xi_b_ai184, 0.001); end
  def test_xi_b_aj184; assert_in_epsilon(2045, worksheet.xi_b_aj184, 0.001); end
  def test_xi_b_ak184; assert_in_epsilon(2050, worksheet.xi_b_ak184, 0.001); end
  def test_xi_b_am184; assert_equal("Industry", worksheet.xi_b_am184); end
  def test_xi_b_an184; assert_equal("Description", worksheet.xi_b_an184); end
  def test_xi_b_ao184; assert_in_epsilon(2010, worksheet.xi_b_ao184, 0.001); end
  def test_xi_b_ap184; assert_in_epsilon(2015, worksheet.xi_b_ap184, 0.001); end
  def test_xi_b_aq184; assert_in_epsilon(2020, worksheet.xi_b_aq184, 0.001); end
  def test_xi_b_ar184; assert_in_epsilon(2025, worksheet.xi_b_ar184, 0.001); end
  def test_xi_b_as184; assert_in_epsilon(2030, worksheet.xi_b_as184, 0.001); end
  def test_xi_b_at184; assert_in_epsilon(2035, worksheet.xi_b_at184, 0.001); end
  def test_xi_b_au184; assert_in_epsilon(2040, worksheet.xi_b_au184, 0.001); end
  def test_xi_b_av184; assert_in_epsilon(2045, worksheet.xi_b_av184, 0.001); end
  def test_xi_b_aw184; assert_in_epsilon(2050, worksheet.xi_b_aw184, 0.001); end
  def test_xi_b_ay184; assert_equal("Industry", worksheet.xi_b_ay184); end
  def test_xi_b_az184; assert_equal("Description", worksheet.xi_b_az184); end
  def test_xi_b_ba184; assert_in_epsilon(2010, worksheet.xi_b_ba184, 0.001); end
  def test_xi_b_bb184; assert_in_epsilon(2015, worksheet.xi_b_bb184, 0.001); end
  def test_xi_b_bc184; assert_in_epsilon(2020, worksheet.xi_b_bc184, 0.001); end
  def test_xi_b_bd184; assert_in_epsilon(2025, worksheet.xi_b_bd184, 0.001); end
  def test_xi_b_be184; assert_in_epsilon(2030, worksheet.xi_b_be184, 0.001); end
  def test_xi_b_bf184; assert_in_epsilon(2035, worksheet.xi_b_bf184, 0.001); end
  def test_xi_b_bg184; assert_in_epsilon(2040, worksheet.xi_b_bg184, 0.001); end
  def test_xi_b_bh184; assert_in_epsilon(2045, worksheet.xi_b_bh184, 0.001); end
  def test_xi_b_bi184; assert_in_epsilon(2050, worksheet.xi_b_bi184, 0.001); end
  def test_xi_b_bk184; assert_equal("Industry", worksheet.xi_b_bk184); end
  def test_xi_b_bl184; assert_equal("Description", worksheet.xi_b_bl184); end
  def test_xi_b_bm184; assert_in_epsilon(2010, worksheet.xi_b_bm184, 0.001); end
  def test_xi_b_bn184; assert_in_epsilon(2015, worksheet.xi_b_bn184, 0.001); end
  def test_xi_b_bo184; assert_in_epsilon(2020, worksheet.xi_b_bo184, 0.001); end
  def test_xi_b_bp184; assert_in_epsilon(2025, worksheet.xi_b_bp184, 0.001); end
  def test_xi_b_bq184; assert_in_epsilon(2030, worksheet.xi_b_bq184, 0.001); end
  def test_xi_b_br184; assert_in_epsilon(2035, worksheet.xi_b_br184, 0.001); end
  def test_xi_b_bs184; assert_in_epsilon(2040, worksheet.xi_b_bs184, 0.001); end
  def test_xi_b_bt184; assert_in_epsilon(2045, worksheet.xi_b_bt184, 0.001); end
  def test_xi_b_bu184; assert_in_epsilon(2050, worksheet.xi_b_bu184, 0.001); end
  def test_xi_b_bw184; assert_equal("Industry", worksheet.xi_b_bw184); end
  def test_xi_b_bx184; assert_equal("Description", worksheet.xi_b_bx184); end
  def test_xi_b_by184; assert_in_epsilon(2010, worksheet.xi_b_by184, 0.001); end
  def test_xi_b_bz184; assert_in_epsilon(2015, worksheet.xi_b_bz184, 0.001); end
  def test_xi_b_ca184; assert_in_epsilon(2020, worksheet.xi_b_ca184, 0.001); end
  def test_xi_b_cb184; assert_in_epsilon(2025, worksheet.xi_b_cb184, 0.001); end
  def test_xi_b_cc184; assert_in_epsilon(2030, worksheet.xi_b_cc184, 0.001); end
  def test_xi_b_cd184; assert_in_epsilon(2035, worksheet.xi_b_cd184, 0.001); end
  def test_xi_b_ce184; assert_in_epsilon(2040, worksheet.xi_b_ce184, 0.001); end
  def test_xi_b_cf184; assert_in_epsilon(2045, worksheet.xi_b_cf184, 0.001); end
  def test_xi_b_cg184; assert_in_epsilon(2050, worksheet.xi_b_cg184, 0.001); end
  def test_xi_b_c185; assert_equal("(i)", worksheet.xi_b_c185); end
  def test_xi_b_d185; assert_equal("Cement", worksheet.xi_b_d185); end
  def test_xi_b_e185; assert_in_epsilon(4740, worksheet.xi_b_e185, 0.001); end
  def test_xi_b_f185; assert_in_epsilon(5451.000000000002, worksheet.xi_b_f185, 0.001); end
  def test_xi_b_g185; assert_in_epsilon(5516.330366589321, worksheet.xi_b_g185, 0.001); end
  def test_xi_b_h185; assert_in_epsilon(5582.443719199314, worksheet.xi_b_h185, 0.001); end
  def test_xi_b_i185; assert_in_epsilon(5649.3494419363415, worksheet.xi_b_i185, 0.001); end
  def test_xi_b_j185; assert_in_epsilon(5717.057031375503, worksheet.xi_b_j185, 0.001); end
  def test_xi_b_k185; assert_in_epsilon(5785.576097908582, worksheet.xi_b_k185, 0.001); end
  def test_xi_b_l185; assert_in_epsilon(5854.916367108136, worksheet.xi_b_l185, 0.001); end
  def test_xi_b_m185; assert_in_epsilon(5925.08768110795, worksheet.xi_b_m185, 0.001); end
  def test_xi_b_o185; assert_equal("(i)", worksheet.xi_b_o185); end
  def test_xi_b_p185; assert_equal("Cement", worksheet.xi_b_p185); end
  def test_xi_b_aa185; assert_equal("V.01", worksheet.xi_b_aa185); end
  def test_xi_b_ab185; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_ab185); end
  def test_xi_b_ac185; assert_in_delta(0.11776552385519061, worksheet.xi_b_ac185, 0.001); end
  def test_xi_b_ad185; assert_in_delta(0.11776552385519061, worksheet.xi_b_ad185, 0.001); end
  def test_xi_b_ae185; assert_in_delta(0.11776552385519061, worksheet.xi_b_ae185, 0.001); end
  def test_xi_b_af185; assert_in_delta(0.11776552385519061, worksheet.xi_b_af185, 0.001); end
  def test_xi_b_ag185; assert_in_delta(0.11776552385519061, worksheet.xi_b_ag185, 0.001); end
  def test_xi_b_ah185; assert_in_delta(0.11776552385519061, worksheet.xi_b_ah185, 0.001); end
  def test_xi_b_ai185; assert_in_delta(0.11776552385519061, worksheet.xi_b_ai185, 0.001); end
  def test_xi_b_aj185; assert_in_delta(0.11776552385519061, worksheet.xi_b_aj185, 0.001); end
  def test_xi_b_ak185; assert_in_delta(0.11776552385519061, worksheet.xi_b_ak185, 0.001); end
  def test_xi_b_am185; assert_equal("(i)", worksheet.xi_b_am185); end
  def test_xi_b_an185; assert_equal("Cement", worksheet.xi_b_an185); end
  def test_xi_b_ao185; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ao185, 0.001); end
  def test_xi_b_ap185; assert_in_delta(0.000506761493142476, worksheet.xi_b_ap185, 0.001); end
  def test_xi_b_aq185; assert_in_delta(0.0004686946635001418, worksheet.xi_b_aq185, 0.001); end
  def test_xi_b_ar185; assert_in_delta(0.0004306278338578075, worksheet.xi_b_ar185, 0.001); end
  def test_xi_b_as185; assert_in_delta(0.0003925610042154733, worksheet.xi_b_as185, 0.001); end
  def test_xi_b_at185; assert_in_delta(0.0003544941745731391, worksheet.xi_b_at185, 0.001); end
  def test_xi_b_au185; assert_in_delta(0.0003164273449308048, worksheet.xi_b_au185, 0.001); end
  def test_xi_b_av185; assert_in_delta(0.00027836051528847065, worksheet.xi_b_av185, 0.001); end
  def test_xi_b_aw173; assert_in_delta(0.00024029368564613642, worksheet.xi_b_aw173, 0.001); end
  def test_xi_b_aw185; assert_in_delta(0.00024029368564613642, worksheet.xi_b_aw185, 0.001); end
  def test_xi_b_ay185; assert_equal("(i)", worksheet.xi_b_ay185); end
  def test_xi_b_az185; assert_equal("Cement", worksheet.xi_b_az185); end
  def test_xi_b_q185; assert_in_delta(0.0013199367088607594, worksheet.xi_b_q185, 0.001); end
  def test_xi_b_ba185; assert_in_epsilon(4.258013889251608, worksheet.xi_b_ba185, 0.001); end
  def test_xi_b_bb185; assert_in_epsilon(4.114305478187702, worksheet.xi_b_bb185, 0.001); end
  def test_xi_b_bc185; assert_in_epsilon(3.784254815712592, worksheet.xi_b_bc185, 0.001); end
  def test_xi_b_bd185; assert_in_epsilon(3.4876112544384745, worksheet.xi_b_bd185, 0.001); end
  def test_xi_b_be185; assert_in_epsilon(3.174571623934569, worksheet.xi_b_be185, 0.001); end
  def test_xi_b_bf185; assert_in_epsilon(2.8880385963427697, worksheet.xi_b_bf185, 0.001); end
  def test_xi_b_bg185; assert_in_epsilon(2.597017908027929, worksheet.xi_b_bg185, 0.001); end
  def test_xi_b_bh185; assert_in_epsilon(2.3014771434740804, worksheet.xi_b_bh185, 0.001); end
  def test_xi_b_bk185; assert_equal("(i)", worksheet.xi_b_bk185); end
  def test_xi_b_bl185; assert_equal("Cost initiative", worksheet.xi_b_bl185); end
  def test_xi_b_bw185; assert_equal("(i)", worksheet.xi_b_bw185); end
  def test_xi_b_bx185; assert_equal("Cost initiative", worksheet.xi_b_bx185); end
  def test_xi_b_by185; assert_in_delta(0, (worksheet.xi_b_by185||0), 0.001); end
  def test_xi_b_bz185; assert_in_epsilon(39.66286589234599, worksheet.xi_b_bz185, 0.001); end
  def test_xi_b_ca185; assert_in_epsilon(44.607302392601824, worksheet.xi_b_ca185, 0.001); end
  def test_xi_b_cb185; assert_in_epsilon(48.45869481505957, worksheet.xi_b_cb185, 0.001); end
  def test_xi_b_cc185; assert_in_epsilon(47.46622033830819, worksheet.xi_b_cc185, 0.001); end
  def test_xi_b_cd185; assert_in_epsilon(43.5733550016909, worksheet.xi_b_cd185, 0.001); end
  def test_xi_b_ce185; assert_in_epsilon(39.724035192541734, worksheet.xi_b_ce185, 0.001); end
  def test_xi_b_cf185; assert_in_epsilon(35.69187122039159, worksheet.xi_b_cf185, 0.001); end
  def test_xi_b_aa186; assert_equal("V.03", worksheet.xi_b_aa186); end
  def test_xi_b_ab186; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab186); end
  def test_xi_b_ac186; assert_in_delta(0.6781107648046033, worksheet.xi_b_ac186, 0.001); end
  def test_xi_b_ad186; assert_in_delta(0.6781107648046033, worksheet.xi_b_ad186, 0.001); end
  def test_xi_b_ae186; assert_in_delta(0.6781107648046033, worksheet.xi_b_ae186, 0.001); end
  def test_xi_b_af186; assert_in_delta(0.6781107648046033, worksheet.xi_b_af186, 0.001); end
  def test_xi_b_ag186; assert_in_delta(0.6781107648046033, worksheet.xi_b_ag186, 0.001); end
  def test_xi_b_ah186; assert_in_delta(0.6781107648046033, worksheet.xi_b_ah186, 0.001); end
  def test_xi_b_ai186; assert_in_delta(0.6781107648046033, worksheet.xi_b_ai186, 0.001); end
  def test_xi_b_aj186; assert_in_delta(0.6781107648046033, worksheet.xi_b_aj186, 0.001); end
  def test_xi_b_ak186; assert_in_delta(0.6781107648046033, worksheet.xi_b_ak186, 0.001); end
  def test_xi_b_bl186; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bl186); end
  def test_xi_b_bx186; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bx186); end
  def test_xi_b_by186; assert_in_delta(0, (worksheet.xi_b_by186||0), 0.001); end
  def test_xi_b_bz186; assert_in_epsilon(51.79093681913511, worksheet.xi_b_bz186, 0.001); end
  def test_xi_b_ca186; assert_in_epsilon(69.9992214901943, worksheet.xi_b_ca186, 0.001); end
  def test_xi_b_cb186; assert_in_epsilon(90.56368516609231, worksheet.xi_b_cb186, 0.001); end
  def test_xi_b_cc186; assert_in_epsilon(102.42689250098503, worksheet.xi_b_cc186, 0.001); end
  def test_xi_b_cd186; assert_in_epsilon(111.40237902347837, worksheet.xi_b_cd186, 0.001); end
  def test_xi_b_ce186; assert_in_epsilon(120.52995357526301, worksheet.xi_b_ce186, 0.001); end
  def test_xi_b_cf186; assert_in_epsilon(129.3598460174153, worksheet.xi_b_cf186, 0.001); end
  def test_xi_b_cg186; assert_in_epsilon(135.5802686301986, worksheet.xi_b_cg186, 0.001); end
  def test_xi_b_aa187; assert_equal("V.05", worksheet.xi_b_aa187); end
  def test_xi_b_ab187; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_ab187); end
  def test_xi_b_ac187; assert_in_delta(0.028290577799088945, worksheet.xi_b_ac187, 0.001); end
  def test_xi_b_ad187; assert_in_delta(0.028290577799088945, worksheet.xi_b_ad187, 0.001); end
  def test_xi_b_ae187; assert_in_delta(0.028290577799088945, worksheet.xi_b_ae187, 0.001); end
  def test_xi_b_af187; assert_in_delta(0.028290577799088945, worksheet.xi_b_af187, 0.001); end
  def test_xi_b_ag187; assert_in_delta(0.028290577799088945, worksheet.xi_b_ag187, 0.001); end
  def test_xi_b_ah187; assert_in_delta(0.028290577799088945, worksheet.xi_b_ah187, 0.001); end
  def test_xi_b_ai187; assert_in_delta(0.028290577799088945, worksheet.xi_b_ai187, 0.001); end
  def test_xi_b_aj187; assert_in_delta(0.028290577799088945, worksheet.xi_b_aj187, 0.001); end
  def test_xi_b_ak187; assert_in_delta(0.028290577799088945, worksheet.xi_b_ak187, 0.001); end
  def test_xi_b_bl187; assert_equal("+=cost", worksheet.xi_b_bl187); end
  def test_xi_b_bx187; assert_equal("+=cost", worksheet.xi_b_bx187); end
  def test_xi_b_aa188; assert_equal("V.04", worksheet.xi_b_aa188); end
  def test_xi_b_ab188; assert_equal("Liquid hydrocarbons", worksheet.xi_b_ab188); end
  def test_xi_b_ac188; assert_in_delta(0.019835371213937504, worksheet.xi_b_ac188, 0.001); end
  def test_xi_b_ad188; assert_in_delta(0.019835371213937504, worksheet.xi_b_ad188, 0.001); end
  def test_xi_b_ae188; assert_in_delta(0.019835371213937504, worksheet.xi_b_ae188, 0.001); end
  def test_xi_b_af188; assert_in_delta(0.019835371213937504, worksheet.xi_b_af188, 0.001); end
  def test_xi_b_ag188; assert_in_delta(0.019835371213937504, worksheet.xi_b_ag188, 0.001); end
  def test_xi_b_ah188; assert_in_delta(0.019835371213937504, worksheet.xi_b_ah188, 0.001); end
  def test_xi_b_ai188; assert_in_delta(0.019835371213937504, worksheet.xi_b_ai188, 0.001); end
  def test_xi_b_aj188; assert_in_delta(0.019835371213937504, worksheet.xi_b_aj188, 0.001); end
  def test_xi_b_ak188; assert_in_delta(0.019835371213937504, worksheet.xi_b_ak188, 0.001); end
  def test_xi_b_bl188; assert_equal("-=savings", worksheet.xi_b_bl188); end
  def test_xi_b_bx188; assert_equal("-=savings", worksheet.xi_b_bx188); end
  def test_xi_b_aa189; assert_equal("v.03", worksheet.xi_b_aa189); end
  def test_xi_b_ab189; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab189); end
  def test_xi_b_ac189; assert_in_delta(0.15599776232717974, worksheet.xi_b_ac189, 0.001); end
  def test_xi_b_ad189; assert_in_delta(0.15599776232717974, worksheet.xi_b_ad189, 0.001); end
  def test_xi_b_ae189; assert_in_delta(0.15599776232717974, worksheet.xi_b_ae189, 0.001); end
  def test_xi_b_af189; assert_in_delta(0.15599776232717974, worksheet.xi_b_af189, 0.001); end
  def test_xi_b_ag189; assert_in_delta(0.15599776232717974, worksheet.xi_b_ag189, 0.001); end
  def test_xi_b_ah189; assert_in_delta(0.15599776232717974, worksheet.xi_b_ah189, 0.001); end
  def test_xi_b_ai189; assert_in_delta(0.15599776232717974, worksheet.xi_b_ai189, 0.001); end
  def test_xi_b_aj189; assert_in_delta(0.15599776232717974, worksheet.xi_b_aj189, 0.001); end
  def test_xi_b_ak189; assert_in_delta(0.15599776232717974, worksheet.xi_b_ak189, 0.001); end
  def test_xi_b_bl189; assert_equal("total cost", worksheet.xi_b_bl189); end
  def test_xi_b_bm189; assert_in_epsilon(124.87011075684646, worksheet.xi_b_bm189, 0.001); end
  def test_xi_b_bn189; assert_in_epsilon(121.79106629859396, worksheet.xi_b_bn189, 0.001); end
  def test_xi_b_bo189; assert_in_epsilon(111.71064014277745, worksheet.xi_b_bo189, 0.001); end
  def test_xi_b_bp189; assert_in_epsilon(110.31103515570155, worksheet.xi_b_bp189, 0.001); end
  def test_xi_b_bq189; assert_in_epsilon(94.228116038366, worksheet.xi_b_bq189, 0.001); end
  def test_xi_b_br189; assert_in_epsilon(82.75707024583053, worksheet.xi_b_br189, 0.001); end
  def test_xi_b_bs189; assert_in_epsilon(72.22470709736093, worksheet.xi_b_bs189, 0.001); end
  def test_xi_b_bt189; assert_in_epsilon(62.15659301063999, worksheet.xi_b_bt189, 0.001); end
  def test_xi_b_bu189; assert_in_epsilon(54.48884259485355, worksheet.xi_b_bu189, 0.001); end
  def test_xi_b_aa190; assert_equal("V.07", worksheet.xi_b_aa190); end
  def test_xi_b_ab190; assert_equal("Heat transport", worksheet.xi_b_ab190); end
  def test_xi_b_ac190; assert_in_delta(0, (worksheet.xi_b_ac190||0), 0.001); end
  def test_xi_b_ad190; assert_in_delta(0, (worksheet.xi_b_ad190||0), 0.001); end
  def test_xi_b_ae190; assert_in_delta(0, (worksheet.xi_b_ae190||0), 0.001); end
  def test_xi_b_af190; assert_in_delta(0, (worksheet.xi_b_af190||0), 0.001); end
  def test_xi_b_ag190; assert_in_delta(0, (worksheet.xi_b_ag190||0), 0.001); end
  def test_xi_b_ah190; assert_in_delta(0, (worksheet.xi_b_ah190||0), 0.001); end
  def test_xi_b_ai190; assert_in_delta(0, (worksheet.xi_b_ai190||0), 0.001); end
  def test_xi_b_aj190; assert_in_delta(0, (worksheet.xi_b_aj190||0), 0.001); end
  def test_xi_b_ak190; assert_in_delta(0, (worksheet.xi_b_ak190||0), 0.001); end
  def test_xi_b_bl190; assert_equal("total cost/kt", worksheet.xi_b_bl190); end
  def test_xi_b_bm190; assert_in_delta(0.026343905222963388, worksheet.xi_b_bm190, 0.001); end
  def test_xi_b_bn190; assert_in_delta(0.022342885030011726, worksheet.xi_b_bn190, 0.001); end
  def test_xi_b_bo190; assert_in_delta(0.020250897375431624, worksheet.xi_b_bo190, 0.001); end
  def test_xi_b_bp190; assert_in_delta(0.019760348819338098, worksheet.xi_b_bp190, 0.001); end
  def test_xi_b_bq190; assert_in_delta(0.01667946318542279, worksheet.xi_b_bq190, 0.001); end
  def test_xi_b_br190; assert_in_delta(0.014475466973944019, worksheet.xi_b_br190, 0.001); end
  def test_xi_b_bs190; assert_in_delta(0.012483580869927426, worksheet.xi_b_bs190, 0.001); end
  def test_xi_b_bt190; assert_in_delta(0.010616136783750578, worksheet.xi_b_bt190, 0.001); end
  def test_xi_b_bu190; assert_in_delta(0.00919629303859762, worksheet.xi_b_bu190, 0.001); end
  def test_xi_b_aa191; assert_equal("Intensity", worksheet.xi_b_aa191); end
  def test_xi_b_ab191; assert_equal("Intensity", worksheet.xi_b_ab191); end
  def test_xi_b_ac191; assert_in_delta(0.26780590413995176, worksheet.xi_b_ac191, 0.001); end
  def test_xi_b_ad191; assert_in_delta(0.26780590413995176, worksheet.xi_b_ad191, 0.001); end
  def test_xi_b_ae191; assert_in_delta(0.26780590413995176, worksheet.xi_b_ae191, 0.001); end
  def test_xi_b_af191; assert_in_delta(0.26780590413995176, worksheet.xi_b_af191, 0.001); end
  def test_xi_b_ag191; assert_in_delta(0.26780590413995176, worksheet.xi_b_ag191, 0.001); end
  def test_xi_b_ah191; assert_in_delta(0.26780590413995176, worksheet.xi_b_ah191, 0.001); end
  def test_xi_b_ai191; assert_in_delta(0.26780590413995176, worksheet.xi_b_ai191, 0.001); end
  def test_xi_b_aj191; assert_in_delta(0.26780590413995176, worksheet.xi_b_aj191, 0.001); end
  def test_xi_b_ak191; assert_in_delta(0.26780590413995176, worksheet.xi_b_ak191, 0.001); end
  def test_xi_b_bl191; assert_equal("savings/ton", worksheet.xi_b_bl191); end
  def test_xi_b_bu191; assert_equal(":=", worksheet.xi_b_bu191); end
  def test_xi_b_aa192; assert_equal("Cost", worksheet.xi_b_aa192); end
  def test_xi_b_ab192; assert_equal("Cost", worksheet.xi_b_ab192); end
  def test_xi_b_ac192; assert_in_epsilon(19.958460921736826, worksheet.xi_b_ac192, 0.001); end
  def test_xi_b_ad192; assert_in_epsilon(24.125449097144745, worksheet.xi_b_ad192, 0.001); end
  def test_xi_b_ae192; assert_in_epsilon(24.95600837939598, worksheet.xi_b_ae192, 0.001); end
  def test_xi_b_af192; assert_in_epsilon(27.261379250212904, worksheet.xi_b_af192, 0.001); end
  def test_xi_b_ag192; assert_in_epsilon(26.372631445154656, worksheet.xi_b_ag192, 0.001); end
  def test_xi_b_ah192; assert_in_epsilon(25.72959200369887, worksheet.xi_b_ah192, 0.001); end
  def test_xi_b_ai192; assert_in_epsilon(25.240919416208378, worksheet.xi_b_ai192, 0.001); end
  def test_xi_b_aj192; assert_in_epsilon(24.78176617498356, worksheet.xi_b_aj192, 0.001); end
  def test_xi_b_ak192; assert_in_epsilon(24.30321087241484, worksheet.xi_b_ak192, 0.001); end
  def test_xi_b_b193; assert_in_epsilon(4, worksheet.xi_b_b193, 0.001); end
  def test_xi_b_c193; assert_equal("Energy efficiency: Cogen", worksheet.xi_b_c193); end
  def test_xi_b_b194; assert_in_delta(1, worksheet.xi_b_b194, 0.001); end
  def test_xi_b_c194; assert_equal("Output Growth (kt)", worksheet.xi_b_c194); end
  def test_xi_b_n194; assert_in_epsilon(2, worksheet.xi_b_n194, 0.001); end
  def test_xi_b_o194; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_b_o194); end
  def test_xi_b_z194; assert_in_epsilon(3, worksheet.xi_b_z194, 0.001); end
  def test_xi_b_aa194; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_b_aa194); end
  def test_xi_b_al194; assert_in_epsilon(4, worksheet.xi_b_al194, 0.001); end
  def test_xi_b_am194; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_b_am194); end
  def test_xi_b_ay194; assert_in_epsilon(5, worksheet.xi_b_ay194, 0.001); end
  def test_xi_b_az194; assert_equal("Emissions (MMtCO2e)", worksheet.xi_b_az194); end
  def test_xi_b_bk194; assert_in_epsilon(6, worksheet.xi_b_bk194, 0.001); end
  def test_xi_b_bl194; assert_equal("Costs : Energy (MEUR)", worksheet.xi_b_bl194); end
  def test_xi_b_bw194; assert_in_epsilon(7, worksheet.xi_b_bw194, 0.001); end
  def test_xi_b_bx194; assert_equal("Costs : Capex (MEUR)", worksheet.xi_b_bx194); end
  def test_xi_b_c195; assert_equal("Product type", worksheet.xi_b_c195); end
  def test_xi_b_d195; assert_equal("Description", worksheet.xi_b_d195); end
  def test_xi_b_e195; assert_in_epsilon(2010, worksheet.xi_b_e195, 0.001); end
  def test_xi_b_f195; assert_in_epsilon(2015, worksheet.xi_b_f195, 0.001); end
  def test_xi_b_g195; assert_in_epsilon(2020, worksheet.xi_b_g195, 0.001); end
  def test_xi_b_h195; assert_in_epsilon(2025, worksheet.xi_b_h195, 0.001); end
  def test_xi_b_i195; assert_in_epsilon(2030, worksheet.xi_b_i195, 0.001); end
  def test_xi_b_j195; assert_in_epsilon(2035, worksheet.xi_b_j195, 0.001); end
  def test_xi_b_k195; assert_in_epsilon(2040, worksheet.xi_b_k195, 0.001); end
  def test_xi_b_l195; assert_in_epsilon(2045, worksheet.xi_b_l195, 0.001); end
  def test_xi_b_m195; assert_in_epsilon(2050, worksheet.xi_b_m195, 0.001); end
  def test_xi_b_o195; assert_equal("Industry", worksheet.xi_b_o195); end
  def test_xi_b_p195; assert_equal("Description", worksheet.xi_b_p195); end
  def test_xi_b_q195; assert_in_epsilon(2010, worksheet.xi_b_q195, 0.001); end
  def test_xi_b_r195; assert_in_epsilon(2015, worksheet.xi_b_r195, 0.001); end
  def test_xi_b_s195; assert_in_epsilon(2020, worksheet.xi_b_s195, 0.001); end
  def test_xi_b_t195; assert_in_epsilon(2025, worksheet.xi_b_t195, 0.001); end
  def test_xi_b_u195; assert_in_epsilon(2030, worksheet.xi_b_u195, 0.001); end
  def test_xi_b_v195; assert_in_epsilon(2035, worksheet.xi_b_v195, 0.001); end
  def test_xi_b_w195; assert_in_epsilon(2040, worksheet.xi_b_w195, 0.001); end
  def test_xi_b_x195; assert_in_epsilon(2045, worksheet.xi_b_x195, 0.001); end
  def test_xi_b_y195; assert_in_epsilon(2050, worksheet.xi_b_y195, 0.001); end
  def test_xi_b_aa195; assert_equal("Vector", worksheet.xi_b_aa195); end
  def test_xi_b_ab195; assert_equal("Description", worksheet.xi_b_ab195); end
  def test_xi_b_ac195; assert_in_epsilon(2010, worksheet.xi_b_ac195, 0.001); end
  def test_xi_b_ad195; assert_in_epsilon(2015, worksheet.xi_b_ad195, 0.001); end
  def test_xi_b_ae195; assert_in_epsilon(2020, worksheet.xi_b_ae195, 0.001); end
  def test_xi_b_af195; assert_in_epsilon(2025, worksheet.xi_b_af195, 0.001); end
  def test_xi_b_ag195; assert_in_epsilon(2030, worksheet.xi_b_ag195, 0.001); end
  def test_xi_b_ah195; assert_in_epsilon(2035, worksheet.xi_b_ah195, 0.001); end
  def test_xi_b_ai195; assert_in_epsilon(2040, worksheet.xi_b_ai195, 0.001); end
  def test_xi_b_aj195; assert_in_epsilon(2045, worksheet.xi_b_aj195, 0.001); end
  def test_xi_b_ak195; assert_in_epsilon(2050, worksheet.xi_b_ak195, 0.001); end
  def test_xi_b_am195; assert_equal("Industry", worksheet.xi_b_am195); end
  def test_xi_b_an195; assert_equal("Description", worksheet.xi_b_an195); end
  def test_xi_b_ao195; assert_in_epsilon(2010, worksheet.xi_b_ao195, 0.001); end
  def test_xi_b_ap195; assert_in_epsilon(2015, worksheet.xi_b_ap195, 0.001); end
  def test_xi_b_aq195; assert_in_epsilon(2020, worksheet.xi_b_aq195, 0.001); end
  def test_xi_b_ar195; assert_in_epsilon(2025, worksheet.xi_b_ar195, 0.001); end
  def test_xi_b_as195; assert_in_epsilon(2030, worksheet.xi_b_as195, 0.001); end
  def test_xi_b_at195; assert_in_epsilon(2035, worksheet.xi_b_at195, 0.001); end
  def test_xi_b_au195; assert_in_epsilon(2040, worksheet.xi_b_au195, 0.001); end
  def test_xi_b_av195; assert_in_epsilon(2045, worksheet.xi_b_av195, 0.001); end
  def test_xi_b_aw195; assert_in_epsilon(2050, worksheet.xi_b_aw195, 0.001); end
  def test_xi_b_ay195; assert_equal("Industry", worksheet.xi_b_ay195); end
  def test_xi_b_az195; assert_equal("Description", worksheet.xi_b_az195); end
  def test_xi_b_ba195; assert_in_epsilon(2010, worksheet.xi_b_ba195, 0.001); end
  def test_xi_b_bb195; assert_in_epsilon(2015, worksheet.xi_b_bb195, 0.001); end
  def test_xi_b_bc195; assert_in_epsilon(2020, worksheet.xi_b_bc195, 0.001); end
  def test_xi_b_bd195; assert_in_epsilon(2025, worksheet.xi_b_bd195, 0.001); end
  def test_xi_b_be195; assert_in_epsilon(2030, worksheet.xi_b_be195, 0.001); end
  def test_xi_b_bf195; assert_in_epsilon(2035, worksheet.xi_b_bf195, 0.001); end
  def test_xi_b_bg195; assert_in_epsilon(2040, worksheet.xi_b_bg195, 0.001); end
  def test_xi_b_bh195; assert_in_epsilon(2045, worksheet.xi_b_bh195, 0.001); end
  def test_xi_b_bi195; assert_in_epsilon(2050, worksheet.xi_b_bi195, 0.001); end
  def test_xi_b_bk195; assert_equal("Industry", worksheet.xi_b_bk195); end
  def test_xi_b_bl195; assert_equal("Description", worksheet.xi_b_bl195); end
  def test_xi_b_bm195; assert_in_epsilon(2010, worksheet.xi_b_bm195, 0.001); end
  def test_xi_b_bn195; assert_in_epsilon(2015, worksheet.xi_b_bn195, 0.001); end
  def test_xi_b_bo195; assert_in_epsilon(2020, worksheet.xi_b_bo195, 0.001); end
  def test_xi_b_bp195; assert_in_epsilon(2025, worksheet.xi_b_bp195, 0.001); end
  def test_xi_b_bq195; assert_in_epsilon(2030, worksheet.xi_b_bq195, 0.001); end
  def test_xi_b_br195; assert_in_epsilon(2035, worksheet.xi_b_br195, 0.001); end
  def test_xi_b_bs195; assert_in_epsilon(2040, worksheet.xi_b_bs195, 0.001); end
  def test_xi_b_bt195; assert_in_epsilon(2045, worksheet.xi_b_bt195, 0.001); end
  def test_xi_b_bu195; assert_in_epsilon(2050, worksheet.xi_b_bu195, 0.001); end
  def test_xi_b_bw195; assert_equal("Industry", worksheet.xi_b_bw195); end
  def test_xi_b_bx195; assert_equal("Description", worksheet.xi_b_bx195); end
  def test_xi_b_by195; assert_in_epsilon(2010, worksheet.xi_b_by195, 0.001); end
  def test_xi_b_bz195; assert_in_epsilon(2015, worksheet.xi_b_bz195, 0.001); end
  def test_xi_b_ca195; assert_in_epsilon(2020, worksheet.xi_b_ca195, 0.001); end
  def test_xi_b_cb195; assert_in_epsilon(2025, worksheet.xi_b_cb195, 0.001); end
  def test_xi_b_cc195; assert_in_epsilon(2030, worksheet.xi_b_cc195, 0.001); end
  def test_xi_b_cd195; assert_in_epsilon(2035, worksheet.xi_b_cd195, 0.001); end
  def test_xi_b_ce195; assert_in_epsilon(2040, worksheet.xi_b_ce195, 0.001); end
  def test_xi_b_cf195; assert_in_epsilon(2045, worksheet.xi_b_cf195, 0.001); end
  def test_xi_b_cg195; assert_in_epsilon(2050, worksheet.xi_b_cg195, 0.001); end
  def test_xi_b_c196; assert_equal("(i)", worksheet.xi_b_c196); end
  def test_xi_b_d196; assert_equal("Cement", worksheet.xi_b_d196); end
  def test_xi_b_e196; assert_in_epsilon(4740, worksheet.xi_b_e196, 0.001); end
  def test_xi_b_f196; assert_in_epsilon(5451.000000000002, worksheet.xi_b_f196, 0.001); end
  def test_xi_b_g196; assert_in_epsilon(5516.330366589321, worksheet.xi_b_g196, 0.001); end
  def test_xi_b_h196; assert_in_epsilon(5582.443719199314, worksheet.xi_b_h196, 0.001); end
  def test_xi_b_i196; assert_in_epsilon(5649.3494419363415, worksheet.xi_b_i196, 0.001); end
  def test_xi_b_j196; assert_in_epsilon(5717.057031375503, worksheet.xi_b_j196, 0.001); end
  def test_xi_b_k196; assert_in_epsilon(5785.576097908582, worksheet.xi_b_k196, 0.001); end
  def test_xi_b_l196; assert_in_epsilon(5854.916367108136, worksheet.xi_b_l196, 0.001); end
  def test_xi_b_m196; assert_in_epsilon(5925.08768110795, worksheet.xi_b_m196, 0.001); end
  def test_xi_b_o196; assert_equal("(i)", worksheet.xi_b_o196); end
  def test_xi_b_p196; assert_equal("Cement", worksheet.xi_b_p196); end
  def test_xi_b_z196; assert_in_delta(0, (worksheet.xi_b_z196||0), 0.001); end
  def test_xi_b_aa196; assert_equal("V.01", worksheet.xi_b_aa196); end
  def test_xi_b_ab196; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_ab196); end
  def test_xi_b_am196; assert_equal("(i)", worksheet.xi_b_am196); end
  def test_xi_b_an196; assert_equal("Cement", worksheet.xi_b_an196); end
  def test_xi_b_ao196; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ao196, 0.001); end
  def test_xi_b_ap196; assert_in_delta(0.000506761493142476, worksheet.xi_b_ap196, 0.001); end
  def test_xi_b_aq196; assert_in_delta(0.0004686946635001418, worksheet.xi_b_aq196, 0.001); end
  def test_xi_b_ar196; assert_in_delta(0.0004306278338578075, worksheet.xi_b_ar196, 0.001); end
  def test_xi_b_as196; assert_in_delta(0.0003925610042154733, worksheet.xi_b_as196, 0.001); end
  def test_xi_b_at196; assert_in_delta(0.0003544941745731391, worksheet.xi_b_at196, 0.001); end
  def test_xi_b_au196; assert_in_delta(0.0003164273449308048, worksheet.xi_b_au196, 0.001); end
  def test_xi_b_av196; assert_in_delta(0.00027836051528847065, worksheet.xi_b_av196, 0.001); end
  def test_xi_b_aw196; assert_in_delta(0.00024029368564613642, worksheet.xi_b_aw196, 0.001); end
  def test_xi_b_ay196; assert_equal("(i)", worksheet.xi_b_ay196); end
  def test_xi_b_az196; assert_equal("Cement", worksheet.xi_b_az196); end
  def test_xi_b_q196; assert_in_delta(0.0013199367088607594, worksheet.xi_b_q196, 0.001); end
  def test_xi_b_ba196; assert_in_epsilon(4.258013889251608, worksheet.xi_b_ba196, 0.001); end
  def test_xi_b_bb196; assert_in_epsilon(4.114305478187702, worksheet.xi_b_bb196, 0.001); end
  def test_xi_b_bc196; assert_in_epsilon(3.784254815712592, worksheet.xi_b_bc196, 0.001); end
  def test_xi_b_bd196; assert_in_epsilon(3.4876112544384745, worksheet.xi_b_bd196, 0.001); end
  def test_xi_b_be196; assert_in_epsilon(3.174571623934569, worksheet.xi_b_be196, 0.001); end
  def test_xi_b_bf196; assert_in_epsilon(2.8880385963427697, worksheet.xi_b_bf196, 0.001); end
  def test_xi_b_bg196; assert_in_epsilon(2.597017908027929, worksheet.xi_b_bg196, 0.001); end
  def test_xi_b_bh196; assert_in_epsilon(2.3014771434740804, worksheet.xi_b_bh196, 0.001); end
  def test_xi_b_bk196; assert_equal("(i)", worksheet.xi_b_bk196); end
  def test_xi_b_bl196; assert_equal("Cost initiative", worksheet.xi_b_bl196); end
  def test_xi_b_bm196; assert_in_delta(0, (worksheet.xi_b_bm196||0), 0.001); end
  def test_xi_b_bn196; assert_in_delta(0, (worksheet.xi_b_bn196||0), 0.001); end
  def test_xi_b_bo196; assert_in_delta(0, (worksheet.xi_b_bo196||0), 0.001); end
  def test_xi_b_bp196; assert_in_delta(0, (worksheet.xi_b_bp196||0), 0.001); end
  def test_xi_b_bq196; assert_in_delta(0, (worksheet.xi_b_bq196||0), 0.001); end
  def test_xi_b_br196; assert_in_delta(0, (worksheet.xi_b_br196||0), 0.001); end
  def test_xi_b_bs196; assert_in_delta(0, (worksheet.xi_b_bs196||0), 0.001); end
  def test_xi_b_bt196; assert_in_delta(0, (worksheet.xi_b_bt196||0), 0.001); end
  def test_xi_b_bw196; assert_equal("(i)", worksheet.xi_b_bw196); end
  def test_xi_b_bx196; assert_equal("Cost initiative", worksheet.xi_b_bx196); end
  def test_xi_b_by196; assert_in_delta(0.0096969616624498, worksheet.xi_b_by196, 0.001); end
  def test_xi_b_bz196; assert_in_delta(0.011151505911817274, worksheet.xi_b_bz196, 0.001); end
  def test_xi_b_ca196; assert_in_delta(0.011285156979372215, worksheet.xi_b_ca196, 0.001); end
  def test_xi_b_cb196; assert_in_delta(0.01142040985819819, worksheet.xi_b_cb196, 0.001); end
  def test_xi_b_cc196; assert_in_delta(0.011557283746041957, worksheet.xi_b_cc196, 0.001); end
  def test_xi_b_cd196; assert_in_delta(0.011695798070735721, worksheet.xi_b_cd196, 0.001); end
  def test_xi_b_ce196; assert_in_delta(0.011835972492954731, worksheet.xi_b_ce196, 0.001); end
  def test_xi_b_cf196; assert_in_delta(0.011977826909007902, worksheet.xi_b_cf196, 0.001); end
  def test_xi_b_aa197; assert_equal("V.03", worksheet.xi_b_aa197); end
  def test_xi_b_ab197; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab197); end
  def test_xi_b_bl197; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bl197); end
  def test_xi_b_bx197; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bx197); end
  def test_xi_b_by197; assert_in_delta(0.0096969616624498, worksheet.xi_b_by197, 0.001); end
  def test_xi_b_bz197; assert_in_epsilon(51.80208832504693, worksheet.xi_b_bz197, 0.001); end
  def test_xi_b_ca197; assert_in_epsilon(70.01050664717367, worksheet.xi_b_ca197, 0.001); end
  def test_xi_b_cb197; assert_in_epsilon(90.57510557595052, worksheet.xi_b_cb197, 0.001); end
  def test_xi_b_cc197; assert_in_epsilon(102.43844978473108, worksheet.xi_b_cc197, 0.001); end
  def test_xi_b_cd197; assert_in_epsilon(111.41407482154911, worksheet.xi_b_cd197, 0.001); end
  def test_xi_b_ce197; assert_in_epsilon(120.54178954775597, worksheet.xi_b_ce197, 0.001); end
  def test_xi_b_cf197; assert_in_epsilon(129.3718238443243, worksheet.xi_b_cf197, 0.001); end
  def test_xi_b_cg197; assert_in_epsilon(135.59239001165224, worksheet.xi_b_cg197, 0.001); end
  def test_xi_b_aa198; assert_equal("V.05", worksheet.xi_b_aa198); end
  def test_xi_b_ab198; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_ab198); end
  def test_xi_b_bl198; assert_equal("+=cost", worksheet.xi_b_bl198); end
  def test_xi_b_bx198; assert_equal("+=cost", worksheet.xi_b_bx198); end
  def test_xi_b_aa199; assert_equal("V.04", worksheet.xi_b_aa199); end
  def test_xi_b_ab199; assert_equal("Liquid hydrocarbons", worksheet.xi_b_ab199); end
  def test_xi_b_bl199; assert_equal("-=savings", worksheet.xi_b_bl199); end
  def test_xi_b_bx199; assert_equal("-=savings", worksheet.xi_b_bx199); end
  def test_xi_b_aa200; assert_equal("v.03", worksheet.xi_b_aa200); end
  def test_xi_b_ab200; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab200); end
  def test_xi_b_ac200; assert_in_delta(0.15599776232717974, worksheet.xi_b_ac200, 0.001); end
  def test_xi_b_ad200; assert_in_delta(0.15599776232717974, worksheet.xi_b_ad200, 0.001); end
  def test_xi_b_ae200; assert_in_delta(0.15599776232717974, worksheet.xi_b_ae200, 0.001); end
  def test_xi_b_af200; assert_in_delta(0.15599776232717974, worksheet.xi_b_af200, 0.001); end
  def test_xi_b_ag200; assert_in_delta(0.15599776232717974, worksheet.xi_b_ag200, 0.001); end
  def test_xi_b_ah200; assert_in_delta(0.15599776232717974, worksheet.xi_b_ah200, 0.001); end
  def test_xi_b_ai200; assert_in_delta(0.15599776232717974, worksheet.xi_b_ai200, 0.001); end
  def test_xi_b_aj200; assert_in_delta(0.15599776232717974, worksheet.xi_b_aj200, 0.001); end
  def test_xi_b_aa201; assert_equal("V.07", worksheet.xi_b_aa201); end
  def test_xi_b_ab201; assert_equal("Heat transport", worksheet.xi_b_ab201); end
  def test_xi_b_aa202; assert_equal("Intensity", worksheet.xi_b_aa202); end
  def test_xi_b_ab202; assert_equal("Intensity", worksheet.xi_b_ab202); end
  def test_xi_b_ac202; assert_in_delta(0.26780590413995176, worksheet.xi_b_ac202, 0.001); end
  def test_xi_b_ad202; assert_in_delta(0.26780590413995176, worksheet.xi_b_ad202, 0.001); end
  def test_xi_b_ae202; assert_in_delta(0.26780590413995176, worksheet.xi_b_ae202, 0.001); end
  def test_xi_b_af202; assert_in_delta(0.26780590413995176, worksheet.xi_b_af202, 0.001); end
  def test_xi_b_ag202; assert_in_delta(0.26780590413995176, worksheet.xi_b_ag202, 0.001); end
  def test_xi_b_ah202; assert_in_delta(0.26780590413995176, worksheet.xi_b_ah202, 0.001); end
  def test_xi_b_ai202; assert_in_delta(0.26780590413995176, worksheet.xi_b_ai202, 0.001); end
  def test_xi_b_aj202; assert_in_delta(0.26780590413995176, worksheet.xi_b_aj202, 0.001); end
  def test_xi_b_aa203; assert_equal("Cost", worksheet.xi_b_aa203); end
  def test_xi_b_ab203; assert_equal("Cost", worksheet.xi_b_ab203); end
  def test_xi_b_ac203; assert_in_epsilon(19.958460921736826, worksheet.xi_b_ac203, 0.001); end
  def test_xi_b_ad203; assert_in_epsilon(24.125449097144745, worksheet.xi_b_ad203, 0.001); end
  def test_xi_b_ae203; assert_in_epsilon(24.95600837939598, worksheet.xi_b_ae203, 0.001); end
  def test_xi_b_af203; assert_in_epsilon(27.261379250212904, worksheet.xi_b_af203, 0.001); end
  def test_xi_b_ag203; assert_in_epsilon(26.372631445154656, worksheet.xi_b_ag203, 0.001); end
  def test_xi_b_ah203; assert_in_epsilon(25.72959200369887, worksheet.xi_b_ah203, 0.001); end
  def test_xi_b_ai203; assert_in_epsilon(25.240919416208378, worksheet.xi_b_ai203, 0.001); end
  def test_xi_b_aj203; assert_in_epsilon(24.78176617498356, worksheet.xi_b_aj203, 0.001); end
  def test_xi_b_b206; assert_in_epsilon(5, worksheet.xi_b_b206, 0.001); end
  def test_xi_b_c206; assert_equal("Alternative fuels", worksheet.xi_b_c206); end
  def test_xi_b_b207; assert_in_delta(1, worksheet.xi_b_b207, 0.001); end
  def test_xi_b_c207; assert_equal("Output Growth (kt)", worksheet.xi_b_c207); end
  def test_xi_b_n207; assert_in_epsilon(2, worksheet.xi_b_n207, 0.001); end
  def test_xi_b_o207; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_b_o207); end
  def test_xi_b_z207; assert_in_epsilon(3, worksheet.xi_b_z207, 0.001); end
  def test_xi_b_aa207; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_b_aa207); end
  def test_xi_b_al207; assert_in_epsilon(4, worksheet.xi_b_al207, 0.001); end
  def test_xi_b_am207; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_b_am207); end
  def test_xi_b_ay207; assert_in_epsilon(5, worksheet.xi_b_ay207, 0.001); end
  def test_xi_b_az207; assert_equal("Emissions (MMtCO2e)", worksheet.xi_b_az207); end
  def test_xi_b_bk207; assert_in_epsilon(6, worksheet.xi_b_bk207, 0.001); end
  def test_xi_b_bl207; assert_equal("Costs : Energy (MEUR)", worksheet.xi_b_bl207); end
  def test_xi_b_bw207; assert_in_epsilon(7, worksheet.xi_b_bw207, 0.001); end
  def test_xi_b_bx207; assert_equal("Costs : Capex (MEUR)", worksheet.xi_b_bx207); end
  def test_xi_b_c208; assert_equal("Product type", worksheet.xi_b_c208); end
  def test_xi_b_d208; assert_equal("Description", worksheet.xi_b_d208); end
  def test_xi_b_e208; assert_in_epsilon(2010, worksheet.xi_b_e208, 0.001); end
  def test_xi_b_f208; assert_in_epsilon(2015, worksheet.xi_b_f208, 0.001); end
  def test_xi_b_g208; assert_in_epsilon(2020, worksheet.xi_b_g208, 0.001); end
  def test_xi_b_h208; assert_in_epsilon(2025, worksheet.xi_b_h208, 0.001); end
  def test_xi_b_i208; assert_in_epsilon(2030, worksheet.xi_b_i208, 0.001); end
  def test_xi_b_j208; assert_in_epsilon(2035, worksheet.xi_b_j208, 0.001); end
  def test_xi_b_k208; assert_in_epsilon(2040, worksheet.xi_b_k208, 0.001); end
  def test_xi_b_l208; assert_in_epsilon(2045, worksheet.xi_b_l208, 0.001); end
  def test_xi_b_m208; assert_in_epsilon(2050, worksheet.xi_b_m208, 0.001); end
  def test_xi_b_o208; assert_equal("Industry", worksheet.xi_b_o208); end
  def test_xi_b_p208; assert_equal("Description", worksheet.xi_b_p208); end
  def test_xi_b_q208; assert_in_epsilon(2010, worksheet.xi_b_q208, 0.001); end
  def test_xi_b_r208; assert_in_epsilon(2015, worksheet.xi_b_r208, 0.001); end
  def test_xi_b_s208; assert_in_epsilon(2020, worksheet.xi_b_s208, 0.001); end
  def test_xi_b_t208; assert_in_epsilon(2025, worksheet.xi_b_t208, 0.001); end
  def test_xi_b_u208; assert_in_epsilon(2030, worksheet.xi_b_u208, 0.001); end
  def test_xi_b_v208; assert_in_epsilon(2035, worksheet.xi_b_v208, 0.001); end
  def test_xi_b_w208; assert_in_epsilon(2040, worksheet.xi_b_w208, 0.001); end
  def test_xi_b_x208; assert_in_epsilon(2045, worksheet.xi_b_x208, 0.001); end
  def test_xi_b_y208; assert_in_epsilon(2050, worksheet.xi_b_y208, 0.001); end
  def test_xi_b_aa208; assert_equal("Vector", worksheet.xi_b_aa208); end
  def test_xi_b_ab208; assert_equal("Description", worksheet.xi_b_ab208); end
  def test_xi_b_ac208; assert_in_epsilon(2010, worksheet.xi_b_ac208, 0.001); end
  def test_xi_b_ad208; assert_in_epsilon(2015, worksheet.xi_b_ad208, 0.001); end
  def test_xi_b_ae208; assert_in_epsilon(2020, worksheet.xi_b_ae208, 0.001); end
  def test_xi_b_af208; assert_in_epsilon(2025, worksheet.xi_b_af208, 0.001); end
  def test_xi_b_ag208; assert_in_epsilon(2030, worksheet.xi_b_ag208, 0.001); end
  def test_xi_b_ah208; assert_in_epsilon(2035, worksheet.xi_b_ah208, 0.001); end
  def test_xi_b_ai208; assert_in_epsilon(2040, worksheet.xi_b_ai208, 0.001); end
  def test_xi_b_aj208; assert_in_epsilon(2045, worksheet.xi_b_aj208, 0.001); end
  def test_xi_b_ak208; assert_in_epsilon(2050, worksheet.xi_b_ak208, 0.001); end
  def test_xi_b_am208; assert_equal("Industry", worksheet.xi_b_am208); end
  def test_xi_b_an208; assert_equal("Description", worksheet.xi_b_an208); end
  def test_xi_b_ao208; assert_in_epsilon(2010, worksheet.xi_b_ao208, 0.001); end
  def test_xi_b_ap208; assert_in_epsilon(2015, worksheet.xi_b_ap208, 0.001); end
  def test_xi_b_aq208; assert_in_epsilon(2020, worksheet.xi_b_aq208, 0.001); end
  def test_xi_b_ar208; assert_in_epsilon(2025, worksheet.xi_b_ar208, 0.001); end
  def test_xi_b_as208; assert_in_epsilon(2030, worksheet.xi_b_as208, 0.001); end
  def test_xi_b_at208; assert_in_epsilon(2035, worksheet.xi_b_at208, 0.001); end
  def test_xi_b_au208; assert_in_epsilon(2040, worksheet.xi_b_au208, 0.001); end
  def test_xi_b_av208; assert_in_epsilon(2045, worksheet.xi_b_av208, 0.001); end
  def test_xi_b_aw208; assert_in_epsilon(2050, worksheet.xi_b_aw208, 0.001); end
  def test_xi_b_ay208; assert_equal("Industry", worksheet.xi_b_ay208); end
  def test_xi_b_az208; assert_equal("Description", worksheet.xi_b_az208); end
  def test_xi_b_ba208; assert_in_epsilon(2010, worksheet.xi_b_ba208, 0.001); end
  def test_xi_b_bb208; assert_in_epsilon(2015, worksheet.xi_b_bb208, 0.001); end
  def test_xi_b_bc208; assert_in_epsilon(2020, worksheet.xi_b_bc208, 0.001); end
  def test_xi_b_bd208; assert_in_epsilon(2025, worksheet.xi_b_bd208, 0.001); end
  def test_xi_b_be208; assert_in_epsilon(2030, worksheet.xi_b_be208, 0.001); end
  def test_xi_b_bf208; assert_in_epsilon(2035, worksheet.xi_b_bf208, 0.001); end
  def test_xi_b_bg208; assert_in_epsilon(2040, worksheet.xi_b_bg208, 0.001); end
  def test_xi_b_bh208; assert_in_epsilon(2045, worksheet.xi_b_bh208, 0.001); end
  def test_xi_b_bi208; assert_in_epsilon(2050, worksheet.xi_b_bi208, 0.001); end
  def test_xi_b_bk208; assert_equal("Industry", worksheet.xi_b_bk208); end
  def test_xi_b_bl208; assert_equal("Description", worksheet.xi_b_bl208); end
  def test_xi_b_bm208; assert_in_epsilon(2010, worksheet.xi_b_bm208, 0.001); end
  def test_xi_b_bn208; assert_in_epsilon(2015, worksheet.xi_b_bn208, 0.001); end
  def test_xi_b_bo208; assert_in_epsilon(2020, worksheet.xi_b_bo208, 0.001); end
  def test_xi_b_bp208; assert_in_epsilon(2025, worksheet.xi_b_bp208, 0.001); end
  def test_xi_b_bq208; assert_in_epsilon(2030, worksheet.xi_b_bq208, 0.001); end
  def test_xi_b_br208; assert_in_epsilon(2035, worksheet.xi_b_br208, 0.001); end
  def test_xi_b_bs208; assert_in_epsilon(2040, worksheet.xi_b_bs208, 0.001); end
  def test_xi_b_bt208; assert_in_epsilon(2045, worksheet.xi_b_bt208, 0.001); end
  def test_xi_b_bu208; assert_in_epsilon(2050, worksheet.xi_b_bu208, 0.001); end
  def test_xi_b_bw208; assert_equal("Industry", worksheet.xi_b_bw208); end
  def test_xi_b_bx208; assert_equal("Description", worksheet.xi_b_bx208); end
  def test_xi_b_by208; assert_in_epsilon(2010, worksheet.xi_b_by208, 0.001); end
  def test_xi_b_bz208; assert_in_epsilon(2015, worksheet.xi_b_bz208, 0.001); end
  def test_xi_b_ca208; assert_in_epsilon(2020, worksheet.xi_b_ca208, 0.001); end
  def test_xi_b_cb208; assert_in_epsilon(2025, worksheet.xi_b_cb208, 0.001); end
  def test_xi_b_cc208; assert_in_epsilon(2030, worksheet.xi_b_cc208, 0.001); end
  def test_xi_b_cd208; assert_in_epsilon(2035, worksheet.xi_b_cd208, 0.001); end
  def test_xi_b_ce208; assert_in_epsilon(2040, worksheet.xi_b_ce208, 0.001); end
  def test_xi_b_cf208; assert_in_epsilon(2045, worksheet.xi_b_cf208, 0.001); end
  def test_xi_b_cg208; assert_in_epsilon(2050, worksheet.xi_b_cg208, 0.001); end
  def test_xi_b_c209; assert_equal("(i)", worksheet.xi_b_c209); end
  def test_xi_b_d209; assert_equal("Cement", worksheet.xi_b_d209); end
  def test_xi_b_e209; assert_in_epsilon(4740, worksheet.xi_b_e209, 0.001); end
  def test_xi_b_f209; assert_in_epsilon(5451.000000000002, worksheet.xi_b_f209, 0.001); end
  def test_xi_b_g209; assert_in_epsilon(5516.330366589321, worksheet.xi_b_g209, 0.001); end
  def test_xi_b_h209; assert_in_epsilon(5582.443719199314, worksheet.xi_b_h209, 0.001); end
  def test_xi_b_i209; assert_in_epsilon(5649.3494419363415, worksheet.xi_b_i209, 0.001); end
  def test_xi_b_j209; assert_in_epsilon(5717.057031375503, worksheet.xi_b_j209, 0.001); end
  def test_xi_b_k209; assert_in_epsilon(5785.576097908582, worksheet.xi_b_k209, 0.001); end
  def test_xi_b_l209; assert_in_epsilon(5854.916367108136, worksheet.xi_b_l209, 0.001); end
  def test_xi_b_m209; assert_in_epsilon(5925.08768110795, worksheet.xi_b_m209, 0.001); end
  def test_xi_b_o209; assert_equal("(i)", worksheet.xi_b_o209); end
  def test_xi_b_p209; assert_equal("Cement", worksheet.xi_b_p209); end
  def test_xi_b_q209; assert_in_delta(0.0013199367088607594, worksheet.xi_b_q209, 0.001); end
  def test_xi_b_r209; assert_in_delta(0.0009261127094482155, worksheet.xi_b_r209, 0.001); end
  def test_xi_b_s209; assert_in_delta(0.00081146379932101, worksheet.xi_b_s209, 0.001); end
  def test_xi_b_t209; assert_in_delta(0.0007248477282815313, worksheet.xi_b_t209, 0.001); end
  def test_xi_b_u209; assert_in_delta(0.0006324535046914041, worksheet.xi_b_u209, 0.001); end
  def test_xi_b_v209; assert_in_delta(0.0005625999421935271, worksheet.xi_b_v209, 0.001); end
  def test_xi_b_w209; assert_in_delta(0.0004945771056941425, worksheet.xi_b_w209, 0.001); end
  def test_xi_b_x209; assert_in_delta(0.00042838499519325, worksheet.xi_b_x209, 0.001); end
  def test_xi_b_y209; assert_in_delta(0.0003783982736633289, worksheet.xi_b_y209, 0.001); end
  def test_xi_b_aa209; assert_equal("V.01", worksheet.xi_b_aa209); end
  def test_xi_b_ab209; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_ab209); end
  def test_xi_b_am209; assert_equal("(i)", worksheet.xi_b_am209); end
  def test_xi_b_an209; assert_equal("Cement", worksheet.xi_b_an209); end
  def test_xi_b_ao209; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ao209, 0.001); end
  def test_xi_b_ap209; assert_in_delta(0.000506761493142476, worksheet.xi_b_ap209, 0.001); end
  def test_xi_b_aq209; assert_in_delta(0.0004686946635001418, worksheet.xi_b_aq209, 0.001); end
  def test_xi_b_ar209; assert_in_delta(0.0004306278338578075, worksheet.xi_b_ar209, 0.001); end
  def test_xi_b_as209; assert_in_delta(0.0003925610042154733, worksheet.xi_b_as209, 0.001); end
  def test_xi_b_at209; assert_in_delta(0.0003544941745731391, worksheet.xi_b_at209, 0.001); end
  def test_xi_b_au209; assert_in_delta(0.0003164273449308048, worksheet.xi_b_au209, 0.001); end
  def test_xi_b_av209; assert_in_delta(0.00027836051528847065, worksheet.xi_b_av209, 0.001); end
  def test_xi_b_aw209; assert_in_delta(0.00024029368564613642, worksheet.xi_b_aw209, 0.001); end
  def test_xi_b_ay209; assert_equal("Cement", worksheet.xi_b_ay209); end
  def test_xi_b_az209; assert_equal("Combustion", worksheet.xi_b_az209); end
  def test_xi_b_bk209; assert_equal("(i)", worksheet.xi_b_bk209); end
  def test_xi_b_bl209; assert_equal("Cost initiative", worksheet.xi_b_bl209); end
  def test_xi_b_bm209; assert_in_delta(0, (worksheet.xi_b_bm209||0), 0.001); end
  def test_xi_b_bn209; assert_in_epsilon(6.076329847312394, worksheet.xi_b_bn209, 0.001); end
  def test_xi_b_bo209; assert_in_epsilon(12.604025407268509, worksheet.xi_b_bo209, 0.001); end
  def test_xi_b_bp209; assert_in_epsilon(18.126904167894907, worksheet.xi_b_bp209, 0.001); end
  def test_xi_b_bq209; assert_in_epsilon(26.239413937577936, worksheet.xi_b_bq209, 0.001); end
  def test_xi_b_br209; assert_in_epsilon(31.141517878341062, worksheet.xi_b_br209, 0.001); end
  def test_xi_b_bs209; assert_in_epsilon(34.75602107923905, worksheet.xi_b_bs209, 0.001); end
  def test_xi_b_bt209; assert_in_epsilon(37.04598715836184, worksheet.xi_b_bt209, 0.001); end
  def test_xi_b_bw209; assert_equal("(i)", worksheet.xi_b_bw209); end
  def test_xi_b_bx209; assert_equal("Cost initiative", worksheet.xi_b_bx209); end
  def test_xi_b_by209; assert_in_delta(0.07030297205276098, worksheet.xi_b_by209, 0.001); end
  def test_xi_b_bz209; assert_in_delta(0.08084841786067515, worksheet.xi_b_bz209, 0.001); end
  def test_xi_b_ca209; assert_in_delta(0.08181738810044847, worksheet.xi_b_ca209, 0.001); end
  def test_xi_b_cb209; assert_in_delta(0.0827979714719368, worksheet.xi_b_cb209, 0.001); end
  def test_xi_b_cc209; assert_in_delta(0.0837903071588041, worksheet.xi_b_cc209, 0.001); end
  def test_xi_b_cd209; assert_in_delta(0.08479453601283389, worksheet.xi_b_cd209, 0.001); end
  def test_xi_b_ce209; assert_in_delta(0.08581080057392171, worksheet.xi_b_ce209, 0.001); end
  def test_xi_b_cf209; assert_in_delta(0.0868392450903072, worksheet.xi_b_cf209, 0.001); end
  def test_xi_b_aa210; assert_equal("V.03", worksheet.xi_b_aa210); end
  def test_xi_b_ab210; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab210); end
  def test_xi_b_az210; assert_equal("Process", worksheet.xi_b_az210); end
  def test_xi_b_bl210; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bl210); end
  def test_xi_b_bx210; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bx210); end
  def test_xi_b_by210; assert_in_delta(0.07999993371521077, worksheet.xi_b_by210, 0.001); end
  def test_xi_b_bz210; assert_in_epsilon(51.8829367429076, worksheet.xi_b_bz210, 0.001); end
  def test_xi_b_ca210; assert_in_epsilon(70.09232403527412, worksheet.xi_b_ca210, 0.001); end
  def test_xi_b_cb210; assert_in_epsilon(90.65790354742245, worksheet.xi_b_cb210, 0.001); end
  def test_xi_b_cc210; assert_in_epsilon(102.52224009188988, worksheet.xi_b_cc210, 0.001); end
  def test_xi_b_cd210; assert_in_epsilon(111.49886935756194, worksheet.xi_b_cd210, 0.001); end
  def test_xi_b_ce210; assert_in_epsilon(120.62760034832989, worksheet.xi_b_ce210, 0.001); end
  def test_xi_b_cf210; assert_in_epsilon(129.4586630894146, worksheet.xi_b_cf210, 0.001); end
  def test_xi_b_cg210; assert_in_epsilon(135.68027002719128, worksheet.xi_b_cg210, 0.001); end
  def test_xi_b_aa211; assert_equal("V.05", worksheet.xi_b_aa211); end
  def test_xi_b_ab211; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_ab211); end
  def test_xi_b_az211; assert_equal("Total", worksheet.xi_b_az211); end
  def test_xi_b_ak200; assert_in_delta(0.15599776232717974, worksheet.xi_b_ak200, 0.001); end
  def test_xi_b_ak202; assert_in_delta(0.26780590413995176, worksheet.xi_b_ak202, 0.001); end
  def test_xi_b_bi196; assert_in_epsilon(2.0241934959711436, worksheet.xi_b_bi196, 0.001); end
  def test_xi_b_bj211; assert_in_delta(0.02869730239997811, worksheet.xi_b_bj211, 0.001); end
  def test_xi_b_bl211; assert_equal("initiativeMEUR/MM tCO2", worksheet.xi_b_bl211); end
  def test_xi_b_bu211; assert_in_epsilon(-678.4415374020119, worksheet.xi_b_bu211, 0.001); end
  def test_xi_b_bx211; assert_equal("+=cost", worksheet.xi_b_bx211); end
  def test_xi_b_aa212; assert_equal("V.04", worksheet.xi_b_aa212); end
  def test_xi_b_ab212; assert_equal("Liquid hydrocarbons", worksheet.xi_b_ab212); end
  def test_xi_b_bl212; assert_equal("initiative€ / tCO2", worksheet.xi_b_bl212); end
  def test_xi_b_bu212; assert_in_epsilon(-678.4415374020119, worksheet.xi_b_bu212, 0.001); end
  def test_xi_b_bx212; assert_equal("-=savings", worksheet.xi_b_bx212); end
  def test_xi_b_aa213; assert_equal("v.03", worksheet.xi_b_aa213); end
  def test_xi_b_ab213; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab213); end
  def test_xi_b_bl213; assert_equal("+=cost", worksheet.xi_b_bl213); end
  def test_xi_b_aa214; assert_equal("V.07", worksheet.xi_b_aa214); end
  def test_xi_b_ab214; assert_equal("Heat transport", worksheet.xi_b_ab214); end
  def test_xi_b_bl214; assert_equal("-=savings", worksheet.xi_b_bl214); end
  def test_xi_b_aa215; assert_equal("Intensity", worksheet.xi_b_aa215); end
  def test_xi_b_ab215; assert_equal("Intensity", worksheet.xi_b_ab215); end
  def test_xi_b_ac215; assert_in_delta(0.26780590413995176, worksheet.xi_b_ac215, 0.001); end
  def test_xi_b_ad215; assert_in_delta(0.2710445181055219, worksheet.xi_b_ad215, 0.001); end
  def test_xi_b_ae215; assert_in_delta(0.27428313207109206, worksheet.xi_b_ae215, 0.001); end
  def test_xi_b_af215; assert_in_delta(0.27752174603666224, worksheet.xi_b_af215, 0.001); end
  def test_xi_b_ag215; assert_in_delta(0.28076036000223237, worksheet.xi_b_ag215, 0.001); end
  def test_xi_b_ah215; assert_in_delta(0.2839989739678025, worksheet.xi_b_ah215, 0.001); end
  def test_xi_b_ai215; assert_in_delta(0.2872375879333727, worksheet.xi_b_ai215, 0.001); end
  def test_xi_b_aj215; assert_in_delta(0.2904762018989428, worksheet.xi_b_aj215, 0.001); end
  def test_xi_b_ak215; assert_in_delta(0.293714815864513, worksheet.xi_b_ak215, 0.001); end
  def test_xi_b_al215; assert_in_delta(0.09674511026098057, worksheet.xi_b_al215, 0.001); end
  def test_xi_b_aa216; assert_equal("Cost", worksheet.xi_b_aa216); end
  def test_xi_b_ab216; assert_equal("Cost", worksheet.xi_b_ab216); end
  def test_xi_b_ac216; assert_in_epsilon(19.958460921736826, worksheet.xi_b_ac216, 0.001); end
  def test_xi_b_ad216; assert_in_epsilon(25.32910213085243, worksheet.xi_b_ad216, 0.001); end
  def test_xi_b_ae216; assert_in_epsilon(27.77173088600673, worksheet.xi_b_ae216, 0.001); end
  def test_xi_b_af216; assert_in_epsilon(31.741116100254665, worksheet.xi_b_af216, 0.001); end
  def test_xi_b_ag216; assert_in_epsilon(33.7165370882521, worksheet.xi_b_ag216, 0.001); end
  def test_xi_b_ah216; assert_in_epsilon(35.411647530863675, worksheet.xi_b_ah216, 0.001); end
  def test_xi_b_ai216; assert_in_epsilon(37.38737126829444, worksheet.xi_b_ai216, 0.001); end
  def test_xi_b_aj216; assert_in_epsilon(39.551961049126874, worksheet.xi_b_aj216, 0.001); end
  def test_xi_b_ak216; assert_in_epsilon(41.880892775239225, worksheet.xi_b_ak216, 0.001); end
  def test_xi_b_ak203; assert_in_epsilon(24.30321087241484, worksheet.xi_b_ak203, 0.001); end
  def test_xi_b_al216; assert_in_delta(0.7232658266885956, worksheet.xi_b_al216, 0.001); end
  def test_xi_b_b217; assert_in_epsilon(6, worksheet.xi_b_b217, 0.001); end
  def test_xi_b_c217; assert_equal("Cement CCS intensity", worksheet.xi_b_c217); end
  def test_xi_b_c218; assert_equal("CCS impact", worksheet.xi_b_c218); end
  def test_xi_b_b220; assert_in_delta(1, worksheet.xi_b_b220, 0.001); end
  def test_xi_b_c220; assert_equal("Output Growth (kt)", worksheet.xi_b_c220); end
  def test_xi_b_n220; assert_in_epsilon(2, worksheet.xi_b_n220, 0.001); end
  def test_xi_b_o220; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_b_o220); end
  def test_xi_b_z220; assert_in_epsilon(3, worksheet.xi_b_z220, 0.001); end
  def test_xi_b_aa220; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_b_aa220); end
  def test_xi_b_al220; assert_in_epsilon(4, worksheet.xi_b_al220, 0.001); end
  def test_xi_b_am220; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_b_am220); end
  def test_xi_b_ay220; assert_in_epsilon(5, worksheet.xi_b_ay220, 0.001); end
  def test_xi_b_az220; assert_equal("Emissions (MMtCO2e)", worksheet.xi_b_az220); end
  def test_xi_b_bk220; assert_in_epsilon(6, worksheet.xi_b_bk220, 0.001); end
  def test_xi_b_bl220; assert_equal("Costs : Energy (MEUR)", worksheet.xi_b_bl220); end
  def test_xi_b_bw220; assert_in_epsilon(7, worksheet.xi_b_bw220, 0.001); end
  def test_xi_b_bx220; assert_equal("Costs : Capex (MEUR)", worksheet.xi_b_bx220); end
  def test_xi_b_c221; assert_equal("Product type", worksheet.xi_b_c221); end
  def test_xi_b_d221; assert_equal("Description", worksheet.xi_b_d221); end
  def test_xi_b_e221; assert_in_epsilon(2010, worksheet.xi_b_e221, 0.001); end
  def test_xi_b_f221; assert_in_epsilon(2015, worksheet.xi_b_f221, 0.001); end
  def test_xi_b_g221; assert_in_epsilon(2020, worksheet.xi_b_g221, 0.001); end
  def test_xi_b_h221; assert_in_epsilon(2025, worksheet.xi_b_h221, 0.001); end
  def test_xi_b_i221; assert_in_epsilon(2030, worksheet.xi_b_i221, 0.001); end
  def test_xi_b_j221; assert_in_epsilon(2035, worksheet.xi_b_j221, 0.001); end
  def test_xi_b_k221; assert_in_epsilon(2040, worksheet.xi_b_k221, 0.001); end
  def test_xi_b_l221; assert_in_epsilon(2045, worksheet.xi_b_l221, 0.001); end
  def test_xi_b_m221; assert_in_epsilon(2050, worksheet.xi_b_m221, 0.001); end
  def test_xi_b_o221; assert_equal("Industry", worksheet.xi_b_o221); end
  def test_xi_b_p221; assert_equal("Description", worksheet.xi_b_p221); end
  def test_xi_b_q221; assert_in_epsilon(2010, worksheet.xi_b_q221, 0.001); end
  def test_xi_b_r221; assert_in_epsilon(2015, worksheet.xi_b_r221, 0.001); end
  def test_xi_b_s221; assert_in_epsilon(2020, worksheet.xi_b_s221, 0.001); end
  def test_xi_b_t221; assert_in_epsilon(2025, worksheet.xi_b_t221, 0.001); end
  def test_xi_b_u221; assert_in_epsilon(2030, worksheet.xi_b_u221, 0.001); end
  def test_xi_b_v221; assert_in_epsilon(2035, worksheet.xi_b_v221, 0.001); end
  def test_xi_b_w221; assert_in_epsilon(2040, worksheet.xi_b_w221, 0.001); end
  def test_xi_b_x221; assert_in_epsilon(2045, worksheet.xi_b_x221, 0.001); end
  def test_xi_b_y221; assert_in_epsilon(2050, worksheet.xi_b_y221, 0.001); end
  def test_xi_b_aa221; assert_equal("Vector", worksheet.xi_b_aa221); end
  def test_xi_b_ab221; assert_equal("Description", worksheet.xi_b_ab221); end
  def test_xi_b_ac221; assert_in_epsilon(2010, worksheet.xi_b_ac221, 0.001); end
  def test_xi_b_ad221; assert_in_epsilon(2015, worksheet.xi_b_ad221, 0.001); end
  def test_xi_b_ae221; assert_in_epsilon(2020, worksheet.xi_b_ae221, 0.001); end
  def test_xi_b_af221; assert_in_epsilon(2025, worksheet.xi_b_af221, 0.001); end
  def test_xi_b_ag221; assert_in_epsilon(2030, worksheet.xi_b_ag221, 0.001); end
  def test_xi_b_ah221; assert_in_epsilon(2035, worksheet.xi_b_ah221, 0.001); end
  def test_xi_b_ai221; assert_in_epsilon(2040, worksheet.xi_b_ai221, 0.001); end
  def test_xi_b_aj221; assert_in_epsilon(2045, worksheet.xi_b_aj221, 0.001); end
  def test_xi_b_ak221; assert_in_epsilon(2050, worksheet.xi_b_ak221, 0.001); end
  def test_xi_b_am221; assert_equal("Industry", worksheet.xi_b_am221); end
  def test_xi_b_an221; assert_equal("Description", worksheet.xi_b_an221); end
  def test_xi_b_ao221; assert_in_epsilon(2010, worksheet.xi_b_ao221, 0.001); end
  def test_xi_b_ap221; assert_in_epsilon(2015, worksheet.xi_b_ap221, 0.001); end
  def test_xi_b_aq221; assert_in_epsilon(2020, worksheet.xi_b_aq221, 0.001); end
  def test_xi_b_ar221; assert_in_epsilon(2025, worksheet.xi_b_ar221, 0.001); end
  def test_xi_b_as221; assert_in_epsilon(2030, worksheet.xi_b_as221, 0.001); end
  def test_xi_b_at221; assert_in_epsilon(2035, worksheet.xi_b_at221, 0.001); end
  def test_xi_b_au221; assert_in_epsilon(2040, worksheet.xi_b_au221, 0.001); end
  def test_xi_b_av221; assert_in_epsilon(2045, worksheet.xi_b_av221, 0.001); end
  def test_xi_b_aw221; assert_in_epsilon(2050, worksheet.xi_b_aw221, 0.001); end
  def test_xi_b_ay221; assert_equal("Industry", worksheet.xi_b_ay221); end
  def test_xi_b_az221; assert_equal("Description", worksheet.xi_b_az221); end
  def test_xi_b_ba221; assert_in_epsilon(2010, worksheet.xi_b_ba221, 0.001); end
  def test_xi_b_bb221; assert_in_epsilon(2015, worksheet.xi_b_bb221, 0.001); end
  def test_xi_b_bc221; assert_in_epsilon(2020, worksheet.xi_b_bc221, 0.001); end
  def test_xi_b_bd221; assert_in_epsilon(2025, worksheet.xi_b_bd221, 0.001); end
  def test_xi_b_be221; assert_in_epsilon(2030, worksheet.xi_b_be221, 0.001); end
  def test_xi_b_bf221; assert_in_epsilon(2035, worksheet.xi_b_bf221, 0.001); end
  def test_xi_b_bg221; assert_in_epsilon(2040, worksheet.xi_b_bg221, 0.001); end
  def test_xi_b_bh221; assert_in_epsilon(2045, worksheet.xi_b_bh221, 0.001); end
  def test_xi_b_bi221; assert_in_epsilon(2050, worksheet.xi_b_bi221, 0.001); end
  def test_xi_b_bk221; assert_equal("Industry", worksheet.xi_b_bk221); end
  def test_xi_b_bl221; assert_equal("Description", worksheet.xi_b_bl221); end
  def test_xi_b_bm221; assert_in_epsilon(2010, worksheet.xi_b_bm221, 0.001); end
  def test_xi_b_bn221; assert_in_epsilon(2015, worksheet.xi_b_bn221, 0.001); end
  def test_xi_b_bo221; assert_in_epsilon(2020, worksheet.xi_b_bo221, 0.001); end
  def test_xi_b_bp221; assert_in_epsilon(2025, worksheet.xi_b_bp221, 0.001); end
  def test_xi_b_bq221; assert_in_epsilon(2030, worksheet.xi_b_bq221, 0.001); end
  def test_xi_b_br221; assert_in_epsilon(2035, worksheet.xi_b_br221, 0.001); end
  def test_xi_b_bs221; assert_in_epsilon(2040, worksheet.xi_b_bs221, 0.001); end
  def test_xi_b_bt221; assert_in_epsilon(2045, worksheet.xi_b_bt221, 0.001); end
  def test_xi_b_bu221; assert_in_epsilon(2050, worksheet.xi_b_bu221, 0.001); end
  def test_xi_b_bw221; assert_equal("Industry", worksheet.xi_b_bw221); end
  def test_xi_b_bx221; assert_equal("Description", worksheet.xi_b_bx221); end
  def test_xi_b_by221; assert_in_epsilon(2010, worksheet.xi_b_by221, 0.001); end
  def test_xi_b_bz221; assert_in_epsilon(2015, worksheet.xi_b_bz221, 0.001); end
  def test_xi_b_ca221; assert_in_epsilon(2020, worksheet.xi_b_ca221, 0.001); end
  def test_xi_b_cb221; assert_in_epsilon(2025, worksheet.xi_b_cb221, 0.001); end
  def test_xi_b_cc221; assert_in_epsilon(2030, worksheet.xi_b_cc221, 0.001); end
  def test_xi_b_cd221; assert_in_epsilon(2035, worksheet.xi_b_cd221, 0.001); end
  def test_xi_b_ce221; assert_in_epsilon(2040, worksheet.xi_b_ce221, 0.001); end
  def test_xi_b_cf221; assert_in_epsilon(2045, worksheet.xi_b_cf221, 0.001); end
  def test_xi_b_cg221; assert_in_epsilon(2050, worksheet.xi_b_cg221, 0.001); end
  def test_xi_b_c222; assert_equal("(i)", worksheet.xi_b_c222); end
  def test_xi_b_d222; assert_equal("Cement", worksheet.xi_b_d222); end
  def test_xi_b_e222; assert_in_epsilon(4740, worksheet.xi_b_e222, 0.001); end
  def test_xi_b_f222; assert_in_epsilon(5451.000000000002, worksheet.xi_b_f222, 0.001); end
  def test_xi_b_g222; assert_in_epsilon(5516.330366589321, worksheet.xi_b_g222, 0.001); end
  def test_xi_b_h222; assert_in_epsilon(5582.443719199314, worksheet.xi_b_h222, 0.001); end
  def test_xi_b_i222; assert_in_epsilon(5649.3494419363415, worksheet.xi_b_i222, 0.001); end
  def test_xi_b_j222; assert_in_epsilon(5717.057031375503, worksheet.xi_b_j222, 0.001); end
  def test_xi_b_k222; assert_in_epsilon(5785.576097908582, worksheet.xi_b_k222, 0.001); end
  def test_xi_b_l222; assert_in_epsilon(5854.916367108136, worksheet.xi_b_l222, 0.001); end
  def test_xi_b_m222; assert_in_epsilon(5925.08768110795, worksheet.xi_b_m222, 0.001); end
  def test_xi_b_o222; assert_equal("(i)", worksheet.xi_b_o222); end
  def test_xi_b_p222; assert_equal("Cement", worksheet.xi_b_p222); end
  def test_xi_b_q222; assert_in_delta(0.0013199367088607594, worksheet.xi_b_q222, 0.001); end
  def test_xi_b_aa222; assert_equal("V.01", worksheet.xi_b_aa222); end
  def test_xi_b_ab222; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_ab222); end
  def test_xi_b_ac222; assert_in_delta(0.11776552385519062, worksheet.xi_b_ac222, 0.001); end
  def test_xi_b_ad222; assert_in_delta(0.10827729242073049, worksheet.xi_b_ad222, 0.001); end
  def test_xi_b_ae222; assert_in_delta(0.09878906098627036, worksheet.xi_b_ae222, 0.001); end
  def test_xi_b_af222; assert_in_delta(0.08930082955181022, worksheet.xi_b_af222, 0.001); end
  def test_xi_b_ag222; assert_in_delta(0.07981259811735007, worksheet.xi_b_ag222, 0.001); end
  def test_xi_b_ah222; assert_in_delta(0.07032436668288994, worksheet.xi_b_ah222, 0.001); end
  def test_xi_b_ai222; assert_in_delta(0.06083613524842981, worksheet.xi_b_ai222, 0.001); end
  def test_xi_b_aj222; assert_in_delta(0.05134790381396968, worksheet.xi_b_aj222, 0.001); end
  def test_xi_b_ak222; assert_in_delta(0.04185967237950953, worksheet.xi_b_ak222, 0.001); end
  def test_xi_b_am222; assert_equal("(i)", worksheet.xi_b_am222); end
  def test_xi_b_an222; assert_equal("Cement", worksheet.xi_b_an222); end
  def test_xi_b_ao222; assert_in_delta(0.0005448283227848102, worksheet.xi_b_ao222, 0.001); end
  def test_xi_b_ap222; assert_in_delta(0.000506761493142476, worksheet.xi_b_ap222, 0.001); end
  def test_xi_b_aq222; assert_in_delta(0.0004686946635001418, worksheet.xi_b_aq222, 0.001); end
  def test_xi_b_ar222; assert_in_delta(0.0004306278338578075, worksheet.xi_b_ar222, 0.001); end
  def test_xi_b_as222; assert_in_delta(0.0003925610042154733, worksheet.xi_b_as222, 0.001); end
  def test_xi_b_at222; assert_in_delta(0.0003544941745731391, worksheet.xi_b_at222, 0.001); end
  def test_xi_b_au222; assert_in_delta(0.0003164273449308048, worksheet.xi_b_au222, 0.001); end
  def test_xi_b_av222; assert_in_delta(0.00027836051528847065, worksheet.xi_b_av222, 0.001); end
  def test_xi_b_aw222; assert_in_delta(0.00024029368564613642, worksheet.xi_b_aw222, 0.001); end
  def test_xi_b_ay222; assert_equal("Cement", worksheet.xi_b_ay222); end
  def test_xi_b_az222; assert_equal("Combustion", worksheet.xi_b_az222); end
  def test_xi_b_ba209; assert_in_epsilon(1.675527639251608, worksheet.xi_b_ba209, 0.001); end
  def test_xi_b_ba222; assert_in_epsilon(1.675527639251608, worksheet.xi_b_ba222, 0.001); end
  def test_xi_b_bb209; assert_in_epsilon(1.3682978808617041, worksheet.xi_b_bb209, 0.001); end
  def test_xi_b_bb222; assert_in_epsilon(1.3682978808617041, worksheet.xi_b_bb222, 0.001); end
  def test_xi_b_bc209; assert_in_epsilon(1.2277742417062478, worksheet.xi_b_bc209, 0.001); end
  def test_xi_b_bc222; assert_in_epsilon(1.2277742417062478, worksheet.xi_b_bc222, 0.001); end
  def test_xi_b_bd209; assert_in_epsilon(1.1229700009871233, worksheet.xi_b_bd209, 0.001); end
  def test_xi_b_bd222; assert_in_epsilon(1.1229700009871233, worksheet.xi_b_bd222, 0.001); end
  def test_xi_b_be209; assert_in_epsilon(1.0031429679772943, worksheet.xi_b_be209, 0.001); end
  def test_xi_b_be222; assert_in_delta(0.8627029524604731, worksheet.xi_b_be222, 0.001); end
  def test_xi_b_bf209; assert_in_delta(0.9134588311784526, worksheet.xi_b_bf209, 0.001); end
  def test_xi_b_bf222; assert_in_delta(0.6576903584484859, worksheet.xi_b_bf222, 0.001); end
  def test_xi_b_bg209; assert_in_delta(0.8219055064419936, worksheet.xi_b_bg209, 0.001); end
  def test_xi_b_bg222; assert_in_delta(0.47670519373635634, worksheet.xi_b_bg222, 0.001); end
  def test_xi_b_bh209; assert_in_delta(0.7285603024910736, worksheet.xi_b_bh209, 0.001); end
  def test_xi_b_bh222; assert_in_delta(0.32056653309607236, worksheet.xi_b_bh222, 0.001); end
  def test_xi_b_bi209; assert_in_delta(0.6585212321711472, worksheet.xi_b_bi209, 0.001); end
  def test_xi_b_bi222; assert_in_delta(0.3226754037638621, worksheet.xi_b_bi222, 0.001); end
  def test_xi_b_bk222; assert_equal("(i)", worksheet.xi_b_bk222); end
  def test_xi_b_bl222; assert_equal("Cost initiative", worksheet.xi_b_bl222); end
  def test_xi_b_bw222; assert_equal("(i)", worksheet.xi_b_bw222); end
  def test_xi_b_bx222; assert_equal("Cost initiative", worksheet.xi_b_bx222); end
  def test_xi_b_by222; assert_in_delta(0, (worksheet.xi_b_by222||0), 0.001); end
  def test_xi_b_bz222; assert_in_delta(0, (worksheet.xi_b_bz222||0), 0.001); end
  def test_xi_b_ca222; assert_in_delta(0, (worksheet.xi_b_ca222||0), 0.001); end
  def test_xi_b_cb222; assert_in_delta(0, (worksheet.xi_b_cb222||0), 0.001); end
  def test_xi_b_cc222; assert_in_epsilon(20.68529864165247, worksheet.xi_b_cc222, 0.001); end
  def test_xi_b_cd222; assert_in_epsilon(37.304164512186624, worksheet.xi_b_cd222, 0.001); end
  def test_xi_b_ce222; assert_in_epsilon(49.758138468352335, worksheet.xi_b_ce222, 0.001); end
  def test_xi_b_cf222; assert_in_epsilon(58.04057523371516, worksheet.xi_b_cf222, 0.001); end
  def test_xi_b_aa223; assert_equal("V.03", worksheet.xi_b_aa223); end
  def test_xi_b_ab223; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab223); end
  def test_xi_b_ac223; assert_in_delta(0.6781107648046033, worksheet.xi_b_ac223, 0.001); end
  def test_xi_b_ad223; assert_in_delta(0.6234761683281639, worksheet.xi_b_ad223, 0.001); end
  def test_xi_b_ae223; assert_in_delta(0.5688415718517245, worksheet.xi_b_ae223, 0.001); end
  def test_xi_b_af223; assert_in_delta(0.514206975375285, worksheet.xi_b_af223, 0.001); end
  def test_xi_b_ag223; assert_in_delta(0.45957237889884556, worksheet.xi_b_ag223, 0.001); end
  def test_xi_b_ah223; assert_in_delta(0.40493778242240613, worksheet.xi_b_ah223, 0.001); end
  def test_xi_b_ai223; assert_in_delta(0.35030318594596677, worksheet.xi_b_ai223, 0.001); end
  def test_xi_b_aj223; assert_in_delta(0.29566858946952734, worksheet.xi_b_aj223, 0.001); end
  def test_xi_b_ak223; assert_in_delta(0.24103399299308784, worksheet.xi_b_ak223, 0.001); end
  def test_xi_b_az223; assert_equal("Process", worksheet.xi_b_az223); end
  def test_xi_b_ba210; assert_in_epsilon(2.58248625, worksheet.xi_b_ba210, 0.001); end
  def test_xi_b_ba223; assert_in_epsilon(2.58248625, worksheet.xi_b_ba223, 0.001); end
  def test_xi_b_bb210; assert_in_epsilon(2.7623568991196374, worksheet.xi_b_bb210, 0.001); end
  def test_xi_b_bb223; assert_in_epsilon(2.7623568991196374, worksheet.xi_b_bb223, 0.001); end
  def test_xi_b_bc210; assert_in_epsilon(2.5854746049241957, worksheet.xi_b_bc210, 0.001); end
  def test_xi_b_bc223; assert_in_epsilon(2.5854746049241957, worksheet.xi_b_bc223, 0.001); end
  def test_xi_b_bd210; assert_in_epsilon(2.403955646431923, worksheet.xi_b_bd210, 0.001); end
  def test_xi_b_bd223; assert_in_epsilon(2.403955646431923, worksheet.xi_b_bd223, 0.001); end
  def test_xi_b_be210; assert_in_epsilon(2.2177142900906537, worksheet.xi_b_be210, 0.001); end
  def test_xi_b_be223; assert_in_epsilon(1.9072342894779621, worksheet.xi_b_be223, 0.001); end
  def test_xi_b_bf210; assert_in_epsilon(2.02666341332502, worksheet.xi_b_bf210, 0.001); end
  def test_xi_b_bf223; assert_in_epsilon(1.4591976575940144, worksheet.xi_b_bf223, 0.001); end
  def test_xi_b_bg210; assert_in_epsilon(1.8307144835563387, worksheet.xi_b_bg210, 0.001); end
  def test_xi_b_bg223; assert_in_epsilon(1.0618144004626766, worksheet.xi_b_bg223, 0.001); end
  def test_xi_b_bh210; assert_in_epsilon(1.6297775369191214, worksheet.xi_b_bh210, 0.001); end
  def test_xi_b_bh223; assert_in_delta(0.7171021162444133, worksheet.xi_b_bh223, 0.001); end
  def test_xi_b_bi210; assert_in_epsilon(1.423761156669949, worksheet.xi_b_bi210, 0.001); end
  def test_xi_b_bi223; assert_in_delta(0.6976429667682751, worksheet.xi_b_bi223, 0.001); end
  def test_xi_b_bl223; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bl223); end
  def test_xi_b_bm161; assert_in_epsilon(124.87011075684646, worksheet.xi_b_bm161, 0.001); end
  def test_xi_b_bm173; assert_in_delta(0, (worksheet.xi_b_bm173||0), 0.001); end
  def test_xi_b_bm174; assert_in_delta(0, (worksheet.xi_b_bm174||0), 0.001); end
  def test_xi_b_bm185; assert_in_delta(0, (worksheet.xi_b_bm185||0), 0.001); end
  def test_xi_b_bm186; assert_in_delta(0, (worksheet.xi_b_bm186||0), 0.001); end
  def test_xi_b_bm197; assert_in_delta(0, (worksheet.xi_b_bm197||0), 0.001); end
  def test_xi_b_bm210; assert_in_delta(0, (worksheet.xi_b_bm210||0), 0.001); end
  def test_xi_b_bm222; assert_in_delta(0, (worksheet.xi_b_bm222||0), 0.001); end
  def test_xi_b_bm223; assert_in_delta(0, (worksheet.xi_b_bm223||0), 0.001); end
  def test_xi_b_bn161; assert_in_epsilon(173.58200311772907, worksheet.xi_b_bn161, 0.001); end
  def test_xi_b_bn173; assert_in_epsilon(-12.128070926789121, worksheet.xi_b_bn173, 0.001); end
  def test_xi_b_bn174; assert_in_epsilon(-12.128070926789121, worksheet.xi_b_bn174, 0.001); end
  def test_xi_b_bn185; assert_in_epsilon(-39.66286589234599, worksheet.xi_b_bn185, 0.001); end
  def test_xi_b_bn186; assert_in_epsilon(-51.79093681913511, worksheet.xi_b_bn186, 0.001); end
  def test_xi_b_bn197; assert_in_epsilon(-51.79093681913511, worksheet.xi_b_bn197, 0.001); end
  def test_xi_b_bn210; assert_in_epsilon(-45.71460697182272, worksheet.xi_b_bn210, 0.001); end
  def test_xi_b_bn222; assert_in_delta(0, (worksheet.xi_b_bn222||0), 0.001); end
  def test_xi_b_bn223; assert_in_epsilon(-45.71460697182272, worksheet.xi_b_bn223, 0.001); end
  def test_xi_b_bo161; assert_in_epsilon(181.70986163297175, worksheet.xi_b_bo161, 0.001); end
  def test_xi_b_bo173; assert_in_epsilon(-25.391919097592478, worksheet.xi_b_bo173, 0.001); end
  def test_xi_b_bo174; assert_in_epsilon(-25.391919097592478, worksheet.xi_b_bo174, 0.001); end
  def test_xi_b_bo185; assert_in_epsilon(-44.607302392601824, worksheet.xi_b_bo185, 0.001); end
  def test_xi_b_bo186; assert_in_epsilon(-69.9992214901943, worksheet.xi_b_bo186, 0.001); end
  def test_xi_b_bo197; assert_in_epsilon(-69.9992214901943, worksheet.xi_b_bo197, 0.001); end
  def test_xi_b_bo210; assert_in_epsilon(-57.39519608292579, worksheet.xi_b_bo210, 0.001); end
  def test_xi_b_bo222; assert_in_delta(0, (worksheet.xi_b_bo222||0), 0.001); end
  def test_xi_b_bo223; assert_in_epsilon(-57.39519608292579, worksheet.xi_b_bo223, 0.001); end
  def test_xi_b_bp161; assert_in_epsilon(200.87472032179386, worksheet.xi_b_bp161, 0.001); end
  def test_xi_b_bp173; assert_in_epsilon(-42.10499035103274, worksheet.xi_b_bp173, 0.001); end
  def test_xi_b_bp174; assert_in_epsilon(-42.10499035103274, worksheet.xi_b_bp174, 0.001); end
  def test_xi_b_bp185; assert_in_epsilon(-48.45869481505957, worksheet.xi_b_bp185, 0.001); end
  def test_xi_b_bp186; assert_in_epsilon(-90.56368516609231, worksheet.xi_b_bp186, 0.001); end
  def test_xi_b_bp197; assert_in_epsilon(-90.56368516609231, worksheet.xi_b_bp197, 0.001); end
  def test_xi_b_bp210; assert_in_epsilon(-72.4367809981974, worksheet.xi_b_bp210, 0.001); end
  def test_xi_b_bp222; assert_in_delta(0, (worksheet.xi_b_bp222||0), 0.001); end
  def test_xi_b_bp223; assert_in_epsilon(-72.4367809981974, worksheet.xi_b_bp223, 0.001); end
  def test_xi_b_bq161; assert_in_epsilon(196.65500853935103, worksheet.xi_b_bq161, 0.001); end
  def test_xi_b_bq173; assert_in_epsilon(-54.96067216267684, worksheet.xi_b_bq173, 0.001); end
  def test_xi_b_bq174; assert_in_epsilon(-54.96067216267684, worksheet.xi_b_bq174, 0.001); end
  def test_xi_b_bq185; assert_in_epsilon(-47.46622033830819, worksheet.xi_b_bq185, 0.001); end
  def test_xi_b_bq186; assert_in_epsilon(-102.42689250098503, worksheet.xi_b_bq186, 0.001); end
  def test_xi_b_bq197; assert_in_epsilon(-102.42689250098503, worksheet.xi_b_bq197, 0.001); end
  def test_xi_b_bq210; assert_in_epsilon(-76.1874785634071, worksheet.xi_b_bq210, 0.001); end
  def test_xi_b_bq222; assert_in_epsilon(5.017142277729761, worksheet.xi_b_bq222, 0.001); end
  def test_xi_b_bq223; assert_in_epsilon(-71.17033628567734, worksheet.xi_b_bq223, 0.001); end
  def test_xi_b_br161; assert_in_epsilon(194.1594492693089, worksheet.xi_b_br161, 0.001); end
  def test_xi_b_br173; assert_in_epsilon(-67.82902402178748, worksheet.xi_b_br173, 0.001); end
  def test_xi_b_br174; assert_in_epsilon(-67.82902402178748, worksheet.xi_b_br174, 0.001); end
  def test_xi_b_br185; assert_in_epsilon(-43.5733550016909, worksheet.xi_b_br185, 0.001); end
  def test_xi_b_br186; assert_in_epsilon(-111.40237902347837, worksheet.xi_b_br186, 0.001); end
  def test_xi_b_br197; assert_in_epsilon(-111.40237902347837, worksheet.xi_b_br197, 0.001); end
  def test_xi_b_br210; assert_in_epsilon(-80.26086114513731, worksheet.xi_b_br210, 0.001); end
  def test_xi_b_br222; assert_in_epsilon(9.620186510088814, worksheet.xi_b_br222, 0.001); end
  def test_xi_b_br223; assert_in_epsilon(-70.6406746350485, worksheet.xi_b_br223, 0.001); end
  def test_xi_b_bs161; assert_in_epsilon(192.75466067262394, worksheet.xi_b_bs161, 0.001); end
  def test_xi_b_bs173; assert_in_epsilon(-80.80591838272127, worksheet.xi_b_bs173, 0.001); end
  def test_xi_b_bs174; assert_in_epsilon(-80.80591838272127, worksheet.xi_b_bs174, 0.001); end
  def test_xi_b_bs185; assert_in_epsilon(-39.724035192541734, worksheet.xi_b_bs185, 0.001); end
  def test_xi_b_bs186; assert_in_epsilon(-120.52995357526301, worksheet.xi_b_bs186, 0.001); end
  def test_xi_b_bs197; assert_in_epsilon(-120.52995357526301, worksheet.xi_b_bs197, 0.001); end
  def test_xi_b_bs210; assert_in_epsilon(-85.77393249602396, worksheet.xi_b_bs210, 0.001); end
  def test_xi_b_bs222; assert_in_epsilon(13.745584092207721, worksheet.xi_b_bs222, 0.001); end
  def test_xi_b_bs223; assert_in_epsilon(-72.02834840381624, worksheet.xi_b_bs223, 0.001); end
  def test_xi_b_bt161; assert_in_epsilon(191.5164390280553, worksheet.xi_b_bt161, 0.001); end
  def test_xi_b_bt173; assert_in_epsilon(-93.6679747970237, worksheet.xi_b_bt173, 0.001); end
  def test_xi_b_bt174; assert_in_epsilon(-93.6679747970237, worksheet.xi_b_bt174, 0.001); end
  def test_xi_b_bt185; assert_in_epsilon(-35.69187122039159, worksheet.xi_b_bt185, 0.001); end
  def test_xi_b_bt186; assert_in_epsilon(-129.3598460174153, worksheet.xi_b_bt186, 0.001); end
  def test_xi_b_bt197; assert_in_epsilon(-129.3598460174153, worksheet.xi_b_bt197, 0.001); end
  def test_xi_b_bt210; assert_in_epsilon(-92.31385885905345, worksheet.xi_b_bt210, 0.001); end
  def test_xi_b_bt222; assert_in_epsilon(17.237568600258285, worksheet.xi_b_bt222, 0.001); end
  def test_xi_b_bt223; assert_in_epsilon(-75.07629025879517, worksheet.xi_b_bt223, 0.001); end
  def test_xi_b_bu161; assert_in_epsilon(190.06911122505213, worksheet.xi_b_bu161, 0.001); end
  def test_xi_b_bu173; assert_in_epsilon(-106.24012261758511, worksheet.xi_b_bu173, 0.001); end
  def test_xi_b_bu174; assert_in_epsilon(-106.24012261758511, worksheet.xi_b_bu174, 0.001); end
  def test_xi_b_bu185; assert_in_epsilon(-29.340146012613474, worksheet.xi_b_bu185, 0.001); end
  def test_xi_b_bu186; assert_in_epsilon(-135.5802686301986, worksheet.xi_b_bu186, 0.001); end
  def test_xi_b_bu196; assert_in_delta(0, (worksheet.xi_b_bu196||0), 0.001); end
  def test_xi_b_bu197; assert_in_epsilon(-135.5802686301986, worksheet.xi_b_bu197, 0.001); end
  def test_xi_b_bu209; assert_in_epsilon(39.409917784671535, worksheet.xi_b_bu209, 0.001); end
  def test_xi_b_bu210; assert_in_epsilon(-96.17035084552705, worksheet.xi_b_bu210, 0.001); end
  def test_xi_b_bu222; assert_in_epsilon(14.677080390046711, worksheet.xi_b_bu222, 0.001); end
  def test_xi_b_bu223; assert_in_epsilon(-81.49327045548034, worksheet.xi_b_bu223, 0.001); end
  def test_xi_b_bx223; assert_equal("Cum Cost vs baseline", worksheet.xi_b_bx223); end
  def test_xi_b_bz223; assert_in_epsilon(51.8829367429076, worksheet.xi_b_bz223, 0.001); end
  def test_xi_b_ca223; assert_in_epsilon(70.09232403527412, worksheet.xi_b_ca223, 0.001); end
  def test_xi_b_cb223; assert_in_epsilon(90.65790354742245, worksheet.xi_b_cb223, 0.001); end
  def test_xi_b_cc223; assert_in_epsilon(123.20753873354235, worksheet.xi_b_cc223, 0.001); end
  def test_xi_b_cd223; assert_in_epsilon(148.80303386974856, worksheet.xi_b_cd223, 0.001); end
  def test_xi_b_ce223; assert_in_epsilon(170.38573881668222, worksheet.xi_b_ce223, 0.001); end
  def test_xi_b_cf223; assert_in_epsilon(187.49923832312976, worksheet.xi_b_cf223, 0.001); end
  def test_xi_b_cg222; assert_in_epsilon(45.85486865356396, worksheet.xi_b_cg222, 0.001); end
  def test_xi_b_cg223; assert_in_epsilon(181.53513868075524, worksheet.xi_b_cg223, 0.001); end
  def test_xi_b_aa224; assert_equal("V.05", worksheet.xi_b_aa224); end
  def test_xi_b_ab224; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_ab224); end
  def test_xi_b_ac224; assert_in_delta(0.02829057779908894, worksheet.xi_b_ac224, 0.001); end
  def test_xi_b_ad224; assert_in_delta(0.026011238814426286, worksheet.xi_b_ad224, 0.001); end
  def test_xi_b_ae224; assert_in_delta(0.023731899829763634, worksheet.xi_b_ae224, 0.001); end
  def test_xi_b_af224; assert_in_delta(0.02145256084510098, worksheet.xi_b_af224, 0.001); end
  def test_xi_b_ag224; assert_in_delta(0.019173221860438325, worksheet.xi_b_ag224, 0.001); end
  def test_xi_b_ah224; assert_in_delta(0.01689388287577567, worksheet.xi_b_ah224, 0.001); end
  def test_xi_b_ai224; assert_in_delta(0.014614543891113019, worksheet.xi_b_ai224, 0.001); end
  def test_xi_b_aj224; assert_in_delta(0.012335204906450365, worksheet.xi_b_aj224, 0.001); end
  def test_xi_b_ak224; assert_in_delta(0.01005586592178771, worksheet.xi_b_ak224, 0.001); end
  def test_xi_b_az224; assert_equal("Total", worksheet.xi_b_az224); end
  def test_xi_b_bl224; assert_equal("+=cost", worksheet.xi_b_bl224); end
  def test_xi_b_bx224; assert_equal("+=cost", worksheet.xi_b_bx224); end
  def test_xi_b_aa225; assert_equal("V.04", worksheet.xi_b_aa225); end
  def test_xi_b_ab225; assert_equal("Liquid hydrocarbons", worksheet.xi_b_ab225); end
  def test_xi_b_ac225; assert_in_delta(0.019835371213937504, worksheet.xi_b_ac225, 0.001); end
  def test_xi_b_ad225; assert_in_delta(0.01823725840039719, worksheet.xi_b_ad225, 0.001); end
  def test_xi_b_ae225; assert_in_delta(0.016639145586856877, worksheet.xi_b_ae225, 0.001); end
  def test_xi_b_af225; assert_in_delta(0.015041032773316566, worksheet.xi_b_af225, 0.001); end
  def test_xi_b_ag225; assert_in_delta(0.013442919959776251, worksheet.xi_b_ag225, 0.001); end
  def test_xi_b_ah225; assert_in_delta(0.011844807146235939, worksheet.xi_b_ah225, 0.001); end
  def test_xi_b_ai225; assert_in_delta(0.010246694332695627, worksheet.xi_b_ai225, 0.001); end
  def test_xi_b_aj225; assert_in_delta(0.008648581519155313, worksheet.xi_b_aj225, 0.001); end
  def test_xi_b_ak225; assert_in_delta(0.007050468705614999, worksheet.xi_b_ak225, 0.001); end
  def test_xi_b_bl225; assert_equal("-=savings", worksheet.xi_b_bl225); end
  def test_xi_b_bx225; assert_equal("-=savings", worksheet.xi_b_bx225); end
  def test_xi_b_z226; assert_equal("V.03", worksheet.xi_b_z226); end
  def test_xi_b_aa226; assert_equal("v.03", worksheet.xi_b_aa226); end
  def test_xi_b_ab226; assert_equal("Solid hydrocarbons", worksheet.xi_b_ab226); end
  def test_xi_b_ac226; assert_in_delta(0.15599776232717974, worksheet.xi_b_ac226, 0.001); end
  def test_xi_b_ad226; assert_in_delta(0.22399804203628226, worksheet.xi_b_ad226, 0.001); end
  def test_xi_b_ae226; assert_in_delta(0.29199832174538476, worksheet.xi_b_ae226, 0.001); end
  def test_xi_b_af226; assert_in_delta(0.35999860145448725, worksheet.xi_b_af226, 0.001); end
  def test_xi_b_ag226; assert_in_delta(0.42799888116358986, worksheet.xi_b_ag226, 0.001); end
  def test_xi_b_ah226; assert_in_delta(0.49599916087269236, worksheet.xi_b_ah226, 0.001); end
  def test_xi_b_ai226; assert_in_delta(0.5639994405817949, worksheet.xi_b_ai226, 0.001); end
  def test_xi_b_aj226; assert_in_delta(0.6319997202908973, worksheet.xi_b_aj226, 0.001); end
  def test_xi_b_ak226; assert_in_delta(0.7, worksheet.xi_b_ak226, 0.001); end
  def test_xi_b_aa227; assert_equal("V.07", worksheet.xi_b_aa227); end
  def test_xi_b_ab227; assert_equal("Heat transport", worksheet.xi_b_ab227); end
  def test_xi_b_ac227; assert_in_delta(0, (worksheet.xi_b_ac227||0), 0.001); end
  def test_xi_b_ad227; assert_in_delta(0, (worksheet.xi_b_ad227||0), 0.001); end
  def test_xi_b_ae227; assert_in_delta(0, (worksheet.xi_b_ae227||0), 0.001); end
  def test_xi_b_af227; assert_in_delta(0, (worksheet.xi_b_af227||0), 0.001); end
  def test_xi_b_ag227; assert_in_delta(0, (worksheet.xi_b_ag227||0), 0.001); end
  def test_xi_b_ah227; assert_in_delta(0, (worksheet.xi_b_ah227||0), 0.001); end
  def test_xi_b_ai227; assert_in_delta(0, (worksheet.xi_b_ai227||0), 0.001); end
  def test_xi_b_aj227; assert_in_delta(0, (worksheet.xi_b_aj227||0), 0.001); end
  def test_xi_b_ak227; assert_in_delta(0, (worksheet.xi_b_ak227||0), 0.001); end
  def test_xi_b_aa228; assert_equal("Intensity", worksheet.xi_b_aa228); end
  def test_xi_b_ab228; assert_equal("Intensity", worksheet.xi_b_ab228); end
  def test_xi_b_ac228; assert_in_delta(0.26780590413995176, worksheet.xi_b_ac228, 0.001); end
  def test_xi_b_ad228; assert_in_delta(0.2710445181055219, worksheet.xi_b_ad228, 0.001); end
  def test_xi_b_ae228; assert_in_delta(0.27428313207109206, worksheet.xi_b_ae228, 0.001); end
  def test_xi_b_af228; assert_in_delta(0.27752174603666224, worksheet.xi_b_af228, 0.001); end
  def test_xi_b_ag228; assert_in_delta(0.28076036000223237, worksheet.xi_b_ag228, 0.001); end
  def test_xi_b_ah228; assert_in_delta(0.2839989739678025, worksheet.xi_b_ah228, 0.001); end
  def test_xi_b_ai228; assert_in_delta(0.2872375879333727, worksheet.xi_b_ai228, 0.001); end
  def test_xi_b_aj228; assert_in_delta(0.2904762018989428, worksheet.xi_b_aj228, 0.001); end
  def test_xi_b_ak228; assert_in_delta(0.293714815864513, worksheet.xi_b_ak228, 0.001); end
  def test_xi_b_aa229; assert_equal("Cost", worksheet.xi_b_aa229); end
  def test_xi_b_ab229; assert_equal("Cost", worksheet.xi_b_ab229); end
  def test_xi_b_ac229; assert_in_epsilon(19.958460921736826, worksheet.xi_b_ac229, 0.001); end
  def test_xi_b_ad229; assert_in_epsilon(25.32910213085243, worksheet.xi_b_ad229, 0.001); end
  def test_xi_b_ae229; assert_in_epsilon(27.77173088600673, worksheet.xi_b_ae229, 0.001); end
  def test_xi_b_af229; assert_in_epsilon(31.741116100254665, worksheet.xi_b_af229, 0.001); end
  def test_xi_b_ag229; assert_in_epsilon(33.7165370882521, worksheet.xi_b_ag229, 0.001); end
  def test_xi_b_ah229; assert_in_epsilon(35.411647530863675, worksheet.xi_b_ah229, 0.001); end
  def test_xi_b_ai229; assert_in_epsilon(37.38737126829444, worksheet.xi_b_ai229, 0.001); end
  def test_xi_b_aj229; assert_in_epsilon(39.551961049126874, worksheet.xi_b_aj229, 0.001); end
  def test_xi_b_ak229; assert_in_epsilon(41.880892775239225, worksheet.xi_b_ak229, 0.001); end
  def test_xi_b_b232; assert_equal("Cost of industrial CCS capture", worksheet.xi_b_b232); end
  def test_xi_b_b233; assert_equal("L", worksheet.xi_b_b233); end
  def test_xi_b_c233; assert_equal("Capital cost of industrial CCS capture", worksheet.xi_b_c233); end
  def test_xi_b_b234; assert_equal("H", worksheet.xi_b_b234); end
  def test_xi_b_c234; assert_equal("Capital cost of industrial CCS capture", worksheet.xi_b_c234); end
  def test_xi_b_b235; assert_equal("L", worksheet.xi_b_b235); end
  def test_xi_b_c235; assert_equal("Operating cost of industrial CCS capture", worksheet.xi_b_c235); end
  def test_xi_b_b236; assert_equal("H", worksheet.xi_b_b236); end
  def test_xi_b_c236; assert_equal("Operating cost of industrial CCS capture", worksheet.xi_b_c236); end
  def test_xi_b_b239; assert_equal("Outputs", worksheet.xi_b_b239); end
  def test_xi_b_c241; assert_equal("Energy produced and required", worksheet.xi_b_c241); end
  def test_xi_b_o241; assert_equal("TWh", worksheet.xi_b_o241); end
  def test_xi_b_c243; assert_equal("Vector", worksheet.xi_b_c243); end
  def test_xi_b_d243; assert_equal("Name", worksheet.xi_b_d243); end
  def test_xi_b_e243; assert_equal("Notes", worksheet.xi_b_e243); end
  def test_xi_b_f243; assert_equal("2010", worksheet.xi_b_f243); end
  def test_xi_b_g243; assert_equal("2015", worksheet.xi_b_g243); end
  def test_xi_b_h243; assert_equal("2020", worksheet.xi_b_h243); end
  def test_xi_b_i243; assert_equal("2025", worksheet.xi_b_i243); end
  def test_xi_b_j243; assert_equal("2030", worksheet.xi_b_j243); end
  def test_xi_b_k243; assert_equal("2035", worksheet.xi_b_k243); end
  def test_xi_b_l243; assert_equal("2040", worksheet.xi_b_l243); end
  def test_xi_b_m243; assert_equal("2045", worksheet.xi_b_m243); end
  def test_xi_b_n243; assert_equal("2050", worksheet.xi_b_n243); end
  def test_xi_b_c244; assert_equal("I.01", worksheet.xi_b_c244); end
  def test_xi_b_d244; assert_equal("Industry Heat", worksheet.xi_b_d244); end
  def test_xi_b_c245; assert_equal("I.02", worksheet.xi_b_c245); end
  def test_xi_b_d245; assert_equal("Industry Power", worksheet.xi_b_d245); end
  def test_xi_b_c246; assert_equal("I.03", worksheet.xi_b_c246); end
  def test_xi_b_d246; assert_equal("Industry CHP", worksheet.xi_b_d246); end
  def test_xi_b_f246; assert_in_delta(0, (worksheet.xi_b_f246||0), 0.001); end
  def test_xi_b_g246; assert_in_delta(0, (worksheet.xi_b_g246||0), 0.001); end
  def test_xi_b_h246; assert_in_delta(0, (worksheet.xi_b_h246||0), 0.001); end
  def test_xi_b_i246; assert_in_delta(0, (worksheet.xi_b_i246||0), 0.001); end
  def test_xi_b_j246; assert_in_delta(0, (worksheet.xi_b_j246||0), 0.001); end
  def test_xi_b_k246; assert_in_delta(0, (worksheet.xi_b_k246||0), 0.001); end
  def test_xi_b_l246; assert_in_delta(0, (worksheet.xi_b_l246||0), 0.001); end
  def test_xi_b_m246; assert_in_delta(0, (worksheet.xi_b_m246||0), 0.001); end
  def test_xi_b_n246; assert_in_delta(0, (worksheet.xi_b_n246||0), 0.001); end
  def test_xi_b_c247; assert_equal("V.01", worksheet.xi_b_c247); end
  def test_xi_b_d247; assert_equal("Electricity (delivered to end user)", worksheet.xi_b_d247); end
  def test_xi_b_c248; assert_equal("V.03", worksheet.xi_b_c248); end
  def test_xi_b_d248; assert_equal("Solid hydrocarbons", worksheet.xi_b_d248); end
  def test_xi_b_c249; assert_equal("V.05", worksheet.xi_b_c249); end
  def test_xi_b_d249; assert_equal("Gaseous hydrocarbons", worksheet.xi_b_d249); end
  def test_xi_b_c250; assert_equal("V.04", worksheet.xi_b_c250); end
  def test_xi_b_d250; assert_equal("Liquid hydrocarbons", worksheet.xi_b_d250); end
  def test_xi_b_c251; assert_equal("V.07", worksheet.xi_b_c251); end
  def test_xi_b_d251; assert_equal("Heat transport", worksheet.xi_b_d251); end
  def test_xi_b_c252; assert_equal("Total", worksheet.xi_b_c252); end
  def test_xi_b_f252; assert_in_delta(-2.7755575615628914e-17, worksheet.xi_b_f252, 0.001); end
  def test_xi_b_g252; assert_in_delta(-1.1796119636642288e-15, worksheet.xi_b_g252, 0.001); end
  def test_xi_b_h252; assert_in_delta(-1.249000902703301e-16, worksheet.xi_b_h252, 0.001); end
  def test_xi_b_i252; assert_in_delta(-4.649058915617843e-16, worksheet.xi_b_i252, 0.001); end
  def test_xi_b_j252; assert_in_delta(-3.122502256758253e-16, worksheet.xi_b_j252, 0.001); end
  def test_xi_b_k252; assert_in_delta(1.0408340855860843e-16, worksheet.xi_b_k252, 0.001); end
  def test_xi_b_l252; assert_in_delta(-6.938893903907228e-17, worksheet.xi_b_l252, 0.001); end
  def test_xi_b_m252; assert_in_delta(-3.400058012914542e-16, worksheet.xi_b_m252, 0.001); end
  def test_xi_b_n252; assert_in_delta(7.979727989493313e-17, worksheet.xi_b_n252, 0.001); end
  def test_xi_b_b254; assert_equal("Emissions", worksheet.xi_b_b254); end
  def test_xi_b_c256; assert_equal("Emissions produced", worksheet.xi_b_c256); end
  def test_xi_b_o256; assert_equal("Mt CO2e", worksheet.xi_b_o256); end
  def test_xi_b_c258; assert_equal("GHG", worksheet.xi_b_c258); end
  def test_xi_b_d258; assert_equal("IPCC Sector", worksheet.xi_b_d258); end
  def test_xi_b_e258; assert_equal("Notes", worksheet.xi_b_e258); end
  def test_xi_b_f258; assert_equal("2010", worksheet.xi_b_f258); end
  def test_xi_b_g258; assert_equal("2015", worksheet.xi_b_g258); end
  def test_xi_b_h258; assert_equal("2020", worksheet.xi_b_h258); end
  def test_xi_b_i258; assert_equal("2025", worksheet.xi_b_i258); end
  def test_xi_b_j258; assert_equal("2030", worksheet.xi_b_j258); end
  def test_xi_b_k258; assert_equal("2035", worksheet.xi_b_k258); end
  def test_xi_b_l258; assert_equal("2040", worksheet.xi_b_l258); end
  def test_xi_b_m258; assert_equal("2045", worksheet.xi_b_m258); end
  def test_xi_b_n258; assert_equal("2050", worksheet.xi_b_n258); end
  def test_xi_b_o258; assert_equal("2051", worksheet.xi_b_o258); end
  def test_xi_b_c259; assert_equal("CO2", worksheet.xi_b_c259); end
  def test_xi_b_d259; assert_equal("1A", worksheet.xi_b_d259); end
  def test_xi_b_e259; assert_equal("Fuel Combustion", worksheet.xi_b_e259); end
  def test_xi_b_f259; assert_in_epsilon(1.675527639251608, worksheet.xi_b_f259, 0.001); end
  def test_xi_b_g259; assert_in_epsilon(1.3682978808617041, worksheet.xi_b_g259, 0.001); end
  def test_xi_b_h259; assert_in_epsilon(1.2277742417062478, worksheet.xi_b_h259, 0.001); end
  def test_xi_b_i259; assert_in_epsilon(1.1229700009871233, worksheet.xi_b_i259, 0.001); end
  def test_xi_b_j259; assert_in_epsilon(1.0031429679772943, worksheet.xi_b_j259, 0.001); end
  def test_xi_b_k259; assert_in_delta(0.9134588311784526, worksheet.xi_b_k259, 0.001); end
  def test_xi_b_l259; assert_in_delta(0.8219055064419936, worksheet.xi_b_l259, 0.001); end
  def test_xi_b_m259; assert_in_delta(0.7285603024910736, worksheet.xi_b_m259, 0.001); end
  def test_xi_b_n259; assert_in_delta(0.6585212321711472, worksheet.xi_b_n259, 0.001); end
  def test_xi_b_c260; assert_equal("CH4", worksheet.xi_b_c260); end
  def test_xi_b_d260; assert_equal("1A", worksheet.xi_b_d260); end
  def test_xi_b_e260; assert_equal("Fuel Combustion", worksheet.xi_b_e260); end
  def test_xi_b_c261; assert_equal("N2O", worksheet.xi_b_c261); end
  def test_xi_b_d261; assert_equal("1A", worksheet.xi_b_d261); end
  def test_xi_b_e261; assert_equal("Fuel Combustion", worksheet.xi_b_e261); end
  def test_xi_b_c262; assert_equal("CO2", worksheet.xi_b_c262); end
  def test_xi_b_d262; assert_in_epsilon(2, worksheet.xi_b_d262, 0.001); end
  def test_xi_b_e262; assert_equal("Industrial Processes", worksheet.xi_b_e262); end
  def test_xi_b_f262; assert_in_epsilon(2.58248625, worksheet.xi_b_f262, 0.001); end
  def test_xi_b_g262; assert_in_epsilon(2.7623568991196374, worksheet.xi_b_g262, 0.001); end
  def test_xi_b_h262; assert_in_epsilon(2.5854746049241957, worksheet.xi_b_h262, 0.001); end
  def test_xi_b_i262; assert_in_epsilon(2.403955646431923, worksheet.xi_b_i262, 0.001); end
  def test_xi_b_j262; assert_in_epsilon(2.2177142900906537, worksheet.xi_b_j262, 0.001); end
  def test_xi_b_k262; assert_in_epsilon(2.02666341332502, worksheet.xi_b_k262, 0.001); end
  def test_xi_b_l262; assert_in_epsilon(1.8307144835563387, worksheet.xi_b_l262, 0.001); end
  def test_xi_b_m262; assert_in_epsilon(1.6297775369191214, worksheet.xi_b_m262, 0.001); end
  def test_xi_b_n262; assert_in_epsilon(1.423761156669949, worksheet.xi_b_n262, 0.001); end
  def test_xi_b_c263; assert_equal("CH4", worksheet.xi_b_c263); end
  def test_xi_b_d263; assert_in_epsilon(2, worksheet.xi_b_d263, 0.001); end
  def test_xi_b_e263; assert_equal("Industrial Processes", worksheet.xi_b_e263); end
  def test_xi_b_c264; assert_equal("N2O", worksheet.xi_b_c264); end
  def test_xi_b_d264; assert_in_epsilon(2, worksheet.xi_b_d264, 0.001); end
  def test_xi_b_e264; assert_equal("Industrial Processes", worksheet.xi_b_e264); end
  def test_xi_b_c265; assert_equal("F", worksheet.xi_b_c265); end
  def test_xi_b_d265; assert_in_epsilon(2, worksheet.xi_b_d265, 0.001); end
  def test_xi_b_e265; assert_equal("Industrial Processes", worksheet.xi_b_e265); end
  def test_xi_b_c266; assert_equal("CO2", worksheet.xi_b_c266); end
  def test_xi_b_d266; assert_equal("X3", worksheet.xi_b_d266); end
  def test_xi_b_e266; assert_equal("Carbon capture", worksheet.xi_b_e266); end
  def test_control_h36; assert_in_epsilon(10, worksheet.control_h36, 0.001); end
  def test_xi_b_e8; assert_in_delta(1, worksheet.xi_b_e8, 0.001); end
  def test_xi_b_e14; assert_in_epsilon(2, worksheet.xi_b_e14, 0.001); end
  def test_xi_b_bb224; assert_in_epsilon(4.130654779981342, worksheet.xi_b_bb224, 0.001); end
  def test_xi_b_bb211; assert_in_epsilon(4.130654779981342, worksheet.xi_b_bb211, 0.001); end
  def test_xi_b_g266; assert_in_delta(0, (worksheet.xi_b_g266||0), 0.001); end
  def test_xi_b_bc224; assert_in_epsilon(3.8132488466304437, worksheet.xi_b_bc224, 0.001); end
  def test_xi_b_bc211; assert_in_epsilon(3.8132488466304437, worksheet.xi_b_bc211, 0.001); end
  def test_xi_b_h266; assert_in_delta(0, (worksheet.xi_b_h266||0), 0.001); end
  def test_xi_b_bd224; assert_in_epsilon(3.5269256474190462, worksheet.xi_b_bd224, 0.001); end
  def test_xi_b_bd211; assert_in_epsilon(3.5269256474190462, worksheet.xi_b_bd211, 0.001); end
  def test_xi_b_i266; assert_in_delta(0, (worksheet.xi_b_i266||0), 0.001); end
  def test_xi_b_be224; assert_in_epsilon(2.769937241938435, worksheet.xi_b_be224, 0.001); end
  def test_xi_b_be211; assert_in_epsilon(3.220857258067948, worksheet.xi_b_be211, 0.001); end
  def test_xi_b_j266; assert_in_delta(-0.4509200161295128, worksheet.xi_b_j266, 0.001); end
  def test_xi_b_bf224; assert_in_epsilon(2.1168880160425, worksheet.xi_b_bf224, 0.001); end
  def test_xi_b_bf211; assert_in_epsilon(2.9401222445034727, worksheet.xi_b_bf211, 0.001); end
  def test_xi_b_k266; assert_in_delta(-0.8232342284609726, worksheet.xi_b_k266, 0.001); end
  def test_xi_b_bg224; assert_in_epsilon(1.538519594199033, worksheet.xi_b_bg224, 0.001); end
  def test_xi_b_bg211; assert_in_epsilon(2.6526199899983323, worksheet.xi_b_bg211, 0.001); end
  def test_xi_b_l266; assert_in_epsilon(-1.1141003957992992, worksheet.xi_b_l266, 0.001); end
  def test_xi_b_bh224; assert_in_epsilon(1.0376686493404856, worksheet.xi_b_bh224, 0.001); end
  def test_xi_b_bh211; assert_in_epsilon(2.3583378394101953, worksheet.xi_b_bh211, 0.001); end
  def test_xi_b_m266; assert_in_epsilon(-1.3206691900697096, worksheet.xi_b_m266, 0.001); end
  def test_xi_b_n266; assert_in_epsilon(-1.0619640183089591, worksheet.xi_b_n266, 0.001); end
  def test_xi_b_c267; assert_equal("Total", worksheet.xi_b_c267); end
  def test_xi_b_g267; assert_in_epsilon(4.130654779981342, worksheet.xi_b_g267, 0.001); end
  def test_xi_b_h267; assert_in_epsilon(3.8132488466304437, worksheet.xi_b_h267, 0.001); end
  def test_xi_b_i267; assert_in_epsilon(3.5269256474190462, worksheet.xi_b_i267, 0.001); end
  def test_xi_b_j267; assert_in_epsilon(2.769937241938435, worksheet.xi_b_j267, 0.001); end
  def test_xi_b_k267; assert_in_epsilon(2.1168880160425, worksheet.xi_b_k267, 0.001); end
  def test_xi_b_l267; assert_in_epsilon(1.538519594199033, worksheet.xi_b_l267, 0.001); end
  def test_xi_b_m267; assert_in_epsilon(1.0376686493404856, worksheet.xi_b_m267, 0.001); end
  def test_xi_b_n267; assert_in_epsilon(1.0203183705321373, worksheet.xi_b_n267, 0.001); end
  def test_xi_b_f267; assert_in_epsilon(4.258013889251608, worksheet.xi_b_f267, 0.001); end
  def test_xi_b_o267; assert_in_delta(-0.7603769275840787, worksheet.xi_b_o267, 0.001); end
  def test_xi_b_f268; assert_in_epsilon(4.258013889251608, worksheet.xi_b_f268, 0.001); end
  def test_xi_b_g268; assert_in_epsilon(4.896715972639351, worksheet.xi_b_g268, 0.001); end
  def test_xi_b_h268; assert_in_epsilon(4.955403231780115, worksheet.xi_b_h268, 0.001); end
  def test_xi_b_i268; assert_in_epsilon(5.014793859138414, worksheet.xi_b_i268, 0.001); end
  def test_xi_b_j268; assert_in_epsilon(5.074896284599317, worksheet.xi_b_j268, 0.001); end
  def test_xi_b_k268; assert_in_epsilon(5.135719039080266, worksheet.xi_b_k268, 0.001); end
  def test_xi_b_l268; assert_in_epsilon(5.197270755741954, worksheet.xi_b_l268, 0.001); end
  def test_xi_b_m268; assert_in_epsilon(5.259560171213716, worksheet.xi_b_m268, 0.001); end
  def test_xi_b_bi161; assert_in_epsilon(5.322596126833598, worksheet.xi_b_bi161, 0.001); end
  def test_xi_b_n268; assert_in_epsilon(5.322596126833598, worksheet.xi_b_n268, 0.001); end
  def test_xi_b_e269; assert_equal("CO2 intensity improvement", worksheet.xi_b_e269); end
  def test_xi_b_g269; assert_in_delta(0.0007577792661862668, worksheet.xi_b_g269, 0.001); end
  def test_xi_b_h269; assert_in_delta(0.0006912654959402166, worksheet.xi_b_h269, 0.001); end
  def test_xi_b_i269; assert_in_delta(0.0006317888410212062, worksheet.xi_b_i269, 0.001); end
  def test_xi_b_j269; assert_in_delta(0.0004903108349744827, worksheet.xi_b_j269, 0.001); end
  def test_xi_b_k269; assert_in_delta(0.0003702758262555209, worksheet.xi_b_k269, 0.001); end
  def test_xi_b_l269; assert_in_delta(0.0002659233182941263, worksheet.xi_b_l269, 0.001); end
  def test_xi_b_m269; assert_in_delta(0.00017723031112278922, worksheet.xi_b_m269, 0.001); end
  def test_xi_b_n269; assert_in_delta(0.00017220308381011922, worksheet.xi_b_n269, 0.001); end
  def test_xi_b_f269; assert_in_delta(0.0008983151665087781, worksheet.xi_b_f269, 0.001); end
  def test_xi_b_g270; assert_in_delta(-0.15644386910296926, worksheet.xi_b_g270, 0.001); end
  def test_xi_b_h270; assert_in_delta(-0.2304866691422362, worksheet.xi_b_h270, 0.001); end
  def test_xi_b_i270; assert_in_delta(-0.29669578720729245, worksheet.xi_b_i270, 0.001); end
  def test_xi_b_j270; assert_in_delta(-0.4541884037424949, worksheet.xi_b_j270, 0.001); end
  def test_xi_b_k270; assert_in_delta(-0.5878107817164382, worksheet.xi_b_k270, 0.001); end
  def test_xi_b_l270; assert_in_delta(-0.7039754774177825, worksheet.xi_b_l270, 0.001); end
  def test_xi_b_m270; assert_in_delta(-0.8027080942965941, worksheet.xi_b_m270, 0.001); end
  def test_xi_b_n270; assert_in_delta(-0.8083043788747649, worksheet.xi_b_n270, 0.001); end
  def test_xi_b_b271; assert_equal("Costs", worksheet.xi_b_b271); end
  def test_xi_b_c273; assert_equal("Costs of this physical change", worksheet.xi_b_c273); end
  def test_xi_b_o273; assert_equal("MEUR", worksheet.xi_b_o273); end
  def test_xi_b_c275; assert_equal("Vector", worksheet.xi_b_c275); end
  def test_xi_b_d275; assert_equal("Name", worksheet.xi_b_d275); end
  def test_xi_b_e275; assert_equal("Notes", worksheet.xi_b_e275); end
  def test_xi_b_f275; assert_equal("2010", worksheet.xi_b_f275); end
  def test_xi_b_g275; assert_equal("2015", worksheet.xi_b_g275); end
  def test_xi_b_h275; assert_equal("2020", worksheet.xi_b_h275); end
  def test_xi_b_i275; assert_equal("2025", worksheet.xi_b_i275); end
  def test_xi_b_j275; assert_equal("2030", worksheet.xi_b_j275); end
  def test_xi_b_k275; assert_equal("2035", worksheet.xi_b_k275); end
  def test_xi_b_l275; assert_equal("2040", worksheet.xi_b_l275); end
  def test_xi_b_m275; assert_equal("2045", worksheet.xi_b_m275); end
  def test_xi_b_n275; assert_equal("2050", worksheet.xi_b_n275); end
  def test_xi_b_c276; assert_equal("C1.Low", worksheet.xi_b_c276); end
  def test_xi_b_d276; assert_equal("Low estimate of capital costs in that year", worksheet.xi_b_d276); end
  def test_xi_b_by223; assert_in_delta(0.07999993371521077, worksheet.xi_b_by223, 0.001); end
  def test_xi_b_f276; assert_in_delta(0.07999993371521077, worksheet.xi_b_f276, 0.001); end
  def test_xi_b_g276; assert_in_epsilon(44.10049623147146, worksheet.xi_b_g276, 0.001); end
  def test_xi_b_h276; assert_in_epsilon(59.578475429983, worksheet.xi_b_h276, 0.001); end
  def test_xi_b_i276; assert_in_epsilon(77.05921801530909, worksheet.xi_b_i276, 0.001); end
  def test_xi_b_j276; assert_in_epsilon(104.72640792351099, worksheet.xi_b_j276, 0.001); end
  def test_xi_b_k276; assert_in_epsilon(126.48257878928628, worksheet.xi_b_k276, 0.001); end
  def test_xi_b_l276; assert_in_epsilon(144.8278779941799, worksheet.xi_b_l276, 0.001); end
  def test_xi_b_m276; assert_in_epsilon(159.3743525746603, worksheet.xi_b_m276, 0.001); end
  def test_xi_b_n276; assert_in_epsilon(154.30486787864194, worksheet.xi_b_n276, 0.001); end
  def test_xi_b_c277; assert_equal("C1.High", worksheet.xi_b_c277); end
  def test_xi_b_d277; assert_equal("High estimate of capital costs in that year", worksheet.xi_b_d277); end
  def test_xi_b_f277; assert_in_delta(0.07999993371521077, worksheet.xi_b_f277, 0.001); end
  def test_xi_b_g277; assert_in_epsilon(59.66537725434374, worksheet.xi_b_g277, 0.001); end
  def test_xi_b_h277; assert_in_epsilon(80.60617264056523, worksheet.xi_b_h277, 0.001); end
  def test_xi_b_i277; assert_in_epsilon(104.25658907953581, worksheet.xi_b_i277, 0.001); end
  def test_xi_b_j277; assert_in_epsilon(141.6886695435737, worksheet.xi_b_j277, 0.001); end
  def test_xi_b_k277; assert_in_epsilon(171.12348895021083, worksheet.xi_b_k277, 0.001); end
  def test_xi_b_l277; assert_in_epsilon(195.94359963918453, worksheet.xi_b_l277, 0.001); end
  def test_xi_b_m277; assert_in_epsilon(215.6241240715992, worksheet.xi_b_m277, 0.001); end
  def test_xi_b_n277; assert_in_epsilon(208.7654094828685, worksheet.xi_b_n277, 0.001); end
  def test_xi_b_c278; assert_equal("C2.Low", worksheet.xi_b_c278); end
  def test_xi_b_d278; assert_equal("Low estimate of O&M costs in that year", worksheet.xi_b_d278); end
  def test_xi_b_c279; assert_equal("C2.High", worksheet.xi_b_c279); end
  def test_xi_b_d279; assert_equal("High estimate of O&M costs in that year", worksheet.xi_b_d279); end
  def test_xi_b_c280; assert_equal("C3.Low", worksheet.xi_b_c280); end
  def test_xi_b_d280; assert_equal("Low estimate of fuel costs in that year", worksheet.xi_b_d280); end
  def test_xi_b_g280; assert_in_epsilon(108.6872867240204, worksheet.xi_b_g280, 0.001); end
  def test_xi_b_h280; assert_in_epsilon(105.66746571753906, worksheet.xi_b_h280, 0.001); end
  def test_xi_b_i280; assert_in_epsilon(109.17224842505698, worksheet.xi_b_i280, 0.001); end
  def test_xi_b_j280; assert_in_epsilon(106.66197141562263, worksheet.xi_b_j280, 0.001); end
  def test_xi_b_k280; assert_in_epsilon(104.99095843912134, worksheet.xi_b_k280, 0.001); end
  def test_xi_b_l280; assert_in_epsilon(102.61736542848655, worksheet.xi_b_l280, 0.001); end
  def test_xi_b_m280; assert_in_epsilon(98.9741264538711, worksheet.xi_b_m280, 0.001); end
  def test_xi_b_n280; assert_in_epsilon(92.28946465413601, worksheet.xi_b_n280, 0.001); end
  def test_xi_b_c281; assert_equal("C3.High", worksheet.xi_b_c281); end
  def test_xi_b_d281; assert_equal("High estimate of fuel costs in that year", worksheet.xi_b_d281); end
  def test_xi_b_g281; assert_in_epsilon(147.04750556779229, worksheet.xi_b_g281, 0.001); end
  def test_xi_b_h281; assert_in_epsilon(142.96186538255284, worksheet.xi_b_h281, 0.001); end
  def test_xi_b_i281; assert_in_epsilon(147.7036302221359, worksheet.xi_b_i281, 0.001); end
  def test_xi_b_j281; assert_in_epsilon(144.30737309172474, worksheet.xi_b_j281, 0.001); end
  def test_xi_b_k281; assert_in_epsilon(142.04659082939946, worksheet.xi_b_k281, 0.001); end
  def test_xi_b_l281; assert_in_epsilon(138.83525910912886, worksheet.xi_b_l281, 0.001); end
  def test_xi_b_m281; assert_in_epsilon(133.90617108464912, worksheet.xi_b_m281, 0.001); end
  def test_xi_b_n281; assert_in_epsilon(124.86221688500754, worksheet.xi_b_n281, 0.001); end
  def test_xi_b_b285; assert_equal("Emissions for each trajectory", worksheet.xi_b_b285); end
  def test_xi_b_c286; assert_equal("MtCO2 (needs to be updated manually)", worksheet.xi_b_c286); end
  def test_xi_b_f286; assert_equal("2010", worksheet.xi_b_f286); end
  def test_xi_b_g286; assert_equal("2015", worksheet.xi_b_g286); end
  def test_xi_b_h286; assert_equal("2020", worksheet.xi_b_h286); end
  def test_xi_b_i286; assert_equal("2025", worksheet.xi_b_i286); end
  def test_xi_b_j286; assert_equal("2030", worksheet.xi_b_j286); end
  def test_xi_b_k286; assert_equal("2035", worksheet.xi_b_k286); end
  def test_xi_b_l286; assert_equal("2040", worksheet.xi_b_l286); end
  def test_xi_b_m286; assert_equal("2045", worksheet.xi_b_m286); end
  def test_xi_b_n286; assert_equal("2050", worksheet.xi_b_n286); end
  def test_xi_b_o286; assert_equal("% evolution (for graphs)", worksheet.xi_b_o286); end
  def test_xi_b_d287; assert_equal("High", worksheet.xi_b_d287); end
  def test_xi_b_e287; assert_equal("Base Case", worksheet.xi_b_e287); end
  def test_xi_b_f287; assert_in_epsilon(3.957403195606576, worksheet.xi_b_f287, 0.001); end
  def test_xi_b_g287; assert_in_epsilon(4.07755853029084, worksheet.xi_b_g287, 0.001); end
  def test_xi_b_h287; assert_in_epsilon(4.126428167710269, worksheet.xi_b_h287, 0.001); end
  def test_xi_b_i287; assert_in_epsilon(4.175883508913903, worksheet.xi_b_i287, 0.001); end
  def test_xi_b_j287; assert_in_epsilon(4.225931573575733, worksheet.xi_b_j287, 0.001); end
  def test_xi_b_k287; assert_in_epsilon(4.276579465500716, worksheet.xi_b_k287, 0.001); end
  def test_xi_b_l287; assert_in_epsilon(4.32783437363308, worksheet.xi_b_l287, 0.001); end
  def test_xi_b_m287; assert_in_epsilon(4.379703573076725, worksheet.xi_b_m287, 0.001); end
  def test_xi_b_n287; assert_in_epsilon(4.432194426127845, worksheet.xi_b_n287, 0.001); end
  def test_xi_b_o287; assert_in_delta(0.11997545032772297, worksheet.xi_b_o287, 0.001); end
  def test_xi_b_d288; assert_equal("High", worksheet.xi_b_d288); end
  def test_xi_b_e288; assert_in_delta(1, worksheet.xi_b_e288, 0.001); end
  def test_xi_b_f288; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f288, 0.001); end
  def test_xi_b_g288; assert_in_epsilon(4.012958941793847, worksheet.xi_b_g288, 0.001); end
  def test_xi_b_h288; assert_in_epsilon(4.141971229733852, worksheet.xi_b_h288, 0.001); end
  def test_xi_b_i288; assert_in_epsilon(4.304749484034522, worksheet.xi_b_i288, 0.001); end
  def test_xi_b_j288; assert_in_epsilon(4.472028225478275, worksheet.xi_b_j288, 0.001); end
  def test_xi_b_k288; assert_in_epsilon(4.643906255171419, worksheet.xi_b_k288, 0.001); end
  def test_xi_b_l288; assert_in_epsilon(4.820484267489449, worksheet.xi_b_l288, 0.001); end
  def test_xi_b_m288; assert_in_epsilon(5.001864883321838, worksheet.xi_b_m288, 0.001); end
  def test_xi_b_n288; assert_in_epsilon(5.188152683866376, worksheet.xi_b_n288, 0.001); end
  def test_xi_b_o288; assert_in_delta(0.3109992657877647, worksheet.xi_b_o288, 0.001); end
  def test_xi_b_p288; assert_in_delta(0.19102381546004174, worksheet.xi_b_p288, 0.001); end
  def test_xi_b_d289; assert_equal("High", worksheet.xi_b_d289); end
  def test_xi_b_e289; assert_in_epsilon(2, worksheet.xi_b_e289, 0.001); end
  def test_xi_b_f289; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f289, 0.001); end
  def test_xi_b_g289; assert_in_epsilon(3.8568024573298523, worksheet.xi_b_g289, 0.001); end
  def test_xi_b_h289; assert_in_epsilon(3.8294009792366275, worksheet.xi_b_h289, 0.001); end
  def test_xi_b_i289; assert_in_epsilon(3.815730582695047, worksheet.xi_b_i289, 0.001); end
  def test_xi_b_j289; assert_in_epsilon(3.2646364553499083, worksheet.xi_b_j289, 0.001); end
  def test_xi_b_k289; assert_in_epsilon(2.7281276437722024, worksheet.xi_b_k289, 0.001); end
  def test_xi_b_l289; assert_in_epsilon(2.1934969317758357, worksheet.xi_b_l289, 0.001); end
  def test_xi_b_m289; assert_in_epsilon(1.660810034664581, worksheet.xi_b_m289, 0.001); end
  def test_xi_b_n289; assert_in_epsilon(1.8523918191481576, worksheet.xi_b_n289, 0.001); end
  def test_xi_b_o289; assert_in_delta(-0.5319173388234378, worksheet.xi_b_o289, 0.001); end
  def test_xi_b_d290; assert_equal("High", worksheet.xi_b_d290); end
  def test_xi_b_e290; assert_in_epsilon(3, worksheet.xi_b_e290, 0.001); end
  def test_xi_b_f290; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f290, 0.001); end
  def test_xi_b_g290; assert_in_epsilon(3.388875951930689, worksheet.xi_b_g290, 0.001); end
  def test_xi_b_h290; assert_in_epsilon(3.05584526477294, worksheet.xi_b_h290, 0.001); end
  def test_xi_b_i290; assert_in_epsilon(2.758016228772591, worksheet.xi_b_i290, 0.001); end
  def test_xi_b_j290; assert_in_epsilon(2.0597187047315595, worksheet.xi_b_j290, 0.001); end
  def test_xi_b_k290; assert_in_epsilon(1.4743695740790095, worksheet.xi_b_k290, 0.001); end
  def test_xi_b_l290; assert_in_delta(0.9811032558260504, worksheet.xi_b_l290, 0.001); end
  def test_xi_b_m290; assert_in_delta(0.5763902687262212, worksheet.xi_b_m290, 0.001); end
  def test_xi_b_n290; assert_in_delta(0.2721856517329919, worksheet.xi_b_n290, 0.001); end
  def test_xi_b_o290; assert_in_delta(-0.9312211472323147, worksheet.xi_b_o290, 0.001); end
  def test_xi_b_d291; assert_equal("High", worksheet.xi_b_d291); end
  def test_xi_b_e291; assert_in_epsilon(4, worksheet.xi_b_e291, 0.001); end
  def test_xi_b_f291; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f291, 0.001); end
  def test_xi_b_g291; assert_in_epsilon(3.159127184119601, worksheet.xi_b_g291, 0.001); end
  def test_xi_b_h291; assert_in_epsilon(2.6767247526510287, worksheet.xi_b_h291, 0.001); end
  def test_xi_b_i291; assert_in_epsilon(2.247008361245545, worksheet.xi_b_i291, 0.001); end
  def test_xi_b_j291; assert_in_epsilon(1.5246464499115435, worksheet.xi_b_j291, 0.001); end
  def test_xi_b_k291; assert_in_delta(0.9634655935391198, worksheet.xi_b_k291, 0.001); end
  def test_xi_b_l291; assert_in_delta(0.5391567830844002, worksheet.xi_b_l291, 0.001); end
  def test_xi_b_m291; assert_in_delta(0.24251170559895863, worksheet.xi_b_m291, 0.001); end
  def test_xi_b_n291; assert_in_delta(0.06475345971960234, worksheet.xi_b_n291, 0.001); end
  def test_xi_b_o291; assert_in_delta(-0.9836373863063813, worksheet.xi_b_o291, 0.001); end
  def test_xi_b_d292; assert_equal("Medium", worksheet.xi_b_d292); end
  def test_xi_b_e292; assert_equal("Base Case", worksheet.xi_b_e292); end
  def test_xi_b_f292; assert_in_epsilon(3.957403195606576, worksheet.xi_b_f292, 0.001); end
  def test_xi_b_g292; assert_in_epsilon(3.957403195606576, worksheet.xi_b_g292, 0.001); end
  def test_xi_b_h292; assert_in_epsilon(3.110819433225456, worksheet.xi_b_h292, 0.001); end
  def test_xi_b_i292; assert_in_epsilon(3.110819433225456, worksheet.xi_b_i292, 0.001); end
  def test_xi_b_j292; assert_in_epsilon(3.110819433225456, worksheet.xi_b_j292, 0.001); end
  def test_xi_b_k292; assert_in_epsilon(3.110819433225456, worksheet.xi_b_k292, 0.001); end
  def test_xi_b_l292; assert_in_epsilon(3.110819433225456, worksheet.xi_b_l292, 0.001); end
  def test_xi_b_m292; assert_in_epsilon(3.110819433225456, worksheet.xi_b_m292, 0.001); end
  def test_xi_b_n292; assert_in_epsilon(3.110819433225456, worksheet.xi_b_n292, 0.001); end
  def test_xi_b_o292; assert_in_delta(-0.21392406094000707, worksheet.xi_b_o292, 0.001); end
  def test_xi_b_d293; assert_equal("Medium", worksheet.xi_b_d293); end
  def test_xi_b_e293; assert_in_delta(1, worksheet.xi_b_e293, 0.001); end
  def test_xi_b_f293; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f293, 0.001); end
  def test_xi_b_g293; assert_in_epsilon(3.894707193561785, worksheet.xi_b_g293, 0.001); end
  def test_xi_b_h293; assert_in_epsilon(3.1225369907424256, worksheet.xi_b_h293, 0.001); end
  def test_xi_b_i293; assert_in_epsilon(3.2068179875029035, worksheet.xi_b_i293, 0.001); end
  def test_xi_b_j293; assert_in_epsilon(3.2919776545220625, worksheet.xi_b_j293, 0.001); end
  def test_xi_b_k293; assert_in_epsilon(3.3780159917999044, worksheet.xi_b_k293, 0.001); end
  def test_xi_b_l293; assert_in_epsilon(3.464932999336427, worksheet.xi_b_l293, 0.001); end
  def test_xi_b_m293; assert_in_epsilon(3.5527286771316313, worksheet.xi_b_m293, 0.001); end
  def test_xi_b_n293; assert_in_epsilon(3.641403025185518, worksheet.xi_b_n293, 0.001); end
  def test_xi_b_o293; assert_in_delta(-0.07985038541735524, worksheet.xi_b_o293, 0.001); end
  def test_xi_b_p293; assert_in_delta(0.13407367552265181, worksheet.xi_b_p293, 0.001); end
  def test_xi_b_d294; assert_equal("Medium", worksheet.xi_b_d294); end
  def test_xi_b_e294; assert_in_epsilon(2, worksheet.xi_b_e294, 0.001); end
  def test_xi_b_f294; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f294, 0.001); end
  def test_xi_b_g294; assert_in_epsilon(3.743152245658088, worksheet.xi_b_g294, 0.001); end
  def test_xi_b_h294; assert_in_epsilon(2.8868974569917474, worksheet.xi_b_h294, 0.001); end
  def test_xi_b_i294; assert_in_epsilon(2.842523940924708, worksheet.xi_b_i294, 0.001); end
  def test_xi_b_j294; assert_in_epsilon(2.403184801008412, worksheet.xi_b_j294, 0.001); end
  def test_xi_b_k294; assert_in_epsilon(1.9844627134906963, worksheet.xi_b_k294, 0.001); end
  def test_xi_b_l294; assert_in_epsilon(1.5766714465000442, worksheet.xi_b_l294, 0.001); end
  def test_xi_b_m294; assert_in_epsilon(1.179641508729092, worksheet.xi_b_m294, 0.001); end
  def test_xi_b_n294; assert_in_epsilon(1.300136211305214, worksheet.xi_b_n294, 0.001); end
  def test_xi_b_o294; assert_in_delta(-0.6714673367756419, worksheet.xi_b_o294, 0.001); end
  def test_xi_b_d295; assert_equal("Medium", worksheet.xi_b_d295); end
  def test_xi_b_e295; assert_in_epsilon(3, worksheet.xi_b_e295, 0.001); end
  def test_xi_b_f295; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f295, 0.001); end
  def test_xi_b_g295; assert_in_epsilon(3.2890143506359943, worksheet.xi_b_g295, 0.001); end
  def test_xi_b_h295; assert_in_epsilon(2.3037315683749258, worksheet.xi_b_h295, 0.001); end
  def test_xi_b_i295; assert_in_epsilon(2.0545808960672938, worksheet.xi_b_i295, 0.001); end
  def test_xi_b_j295; assert_in_epsilon(1.5162131383578763, worksheet.xi_b_j295, 0.001); end
  def test_xi_b_k295; assert_in_epsilon(1.0724686773157666, worksheet.xi_b_k295, 0.001); end
  def test_xi_b_l295; assert_in_delta(0.7052106921694317, worksheet.xi_b_l295, 0.001); end
  def test_xi_b_m295; assert_in_delta(0.4093989511294629, worksheet.xi_b_m295, 0.001); end
  def test_xi_b_n295; assert_in_delta(0.19103864439355367, worksheet.xi_b_n295, 0.001); end
  def test_xi_b_o295; assert_in_delta(-0.9517262621595797, worksheet.xi_b_o295, 0.001); end
  def test_xi_b_d296; assert_equal("Medium", worksheet.xi_b_d296); end
  def test_xi_b_e296; assert_in_epsilon(4, worksheet.xi_b_e296, 0.001); end
  def test_xi_b_f296; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f296, 0.001); end
  def test_xi_b_g296; assert_in_epsilon(3.0660356978053698, worksheet.xi_b_g296, 0.001); end
  def test_xi_b_h296; assert_in_epsilon(2.01792132069584, worksheet.xi_b_h296, 0.001); end
  def test_xi_b_i296; assert_in_epsilon(1.6739061953863632, worksheet.xi_b_i296, 0.001); end
  def test_xi_b_j296; assert_in_epsilon(1.1223323715982156, worksheet.xi_b_j296, 0.001); end
  def test_xi_b_k296; assert_in_delta(0.7008328772571221, worksheet.xi_b_k296, 0.001); end
  def test_xi_b_l296; assert_in_delta(0.3875424181185338, worksheet.xi_b_l296, 0.001); end
  def test_xi_b_m296; assert_in_delta(0.17225141244705766, worksheet.xi_b_m296, 0.001); end
  def test_xi_b_n296; assert_in_delta(0.04544843964354334, worksheet.xi_b_n296, 0.001); end
  def test_xi_b_o296; assert_in_delta(-0.9885155903007308, worksheet.xi_b_o296, 0.001); end
  def test_xi_b_d297; assert_equal("Low", worksheet.xi_b_d297); end
  def test_xi_b_e297; assert_equal("Base Case", worksheet.xi_b_e297); end
  def test_xi_b_f297; assert_in_epsilon(3.957403195606576, worksheet.xi_b_f297, 0.001); end
  def test_xi_b_g297; assert_in_epsilon(3.9056256456739735, worksheet.xi_b_g297, 0.001); end
  def test_xi_b_h297; assert_in_epsilon(3.0701183470399593, worksheet.xi_b_h297, 0.001); end
  def test_xi_b_i297; assert_in_epsilon(3.029949782414212, worksheet.xi_b_i297, 0.001); end
  def test_xi_b_j297; assert_in_epsilon(2.990306771985959, worksheet.xi_b_j297, 0.001); end
  def test_xi_b_k297; assert_in_epsilon(2.9511824395519546, worksheet.xi_b_k297, 0.001); end
  def test_xi_b_l297; assert_in_epsilon(2.912569998875259, worksheet.xi_b_l297, 0.001); end
  def test_xi_b_m297; assert_in_epsilon(2.8744627525081494, worksheet.xi_b_m297, 0.001); end
  def test_xi_b_n297; assert_in_epsilon(2.836854090630424, worksheet.xi_b_n297, 0.001); end
  def test_xi_b_o297; assert_in_delta(-0.283152625494456, worksheet.xi_b_o297, 0.001); end
  def test_xi_b_d298; assert_equal("Low", worksheet.xi_b_d298); end
  def test_xi_b_e298; assert_in_delta(1, worksheet.xi_b_e298, 0.001); end
  def test_xi_b_f298; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f298, 0.001); end
  def test_xi_b_g298; assert_in_epsilon(3.8437499404794124, worksheet.xi_b_g298, 0.001); end
  def test_xi_b_h298; assert_in_epsilon(3.0816825953312996, worksheet.xi_b_h298, 0.001); end
  def test_xi_b_i298; assert_in_epsilon(3.123452733931858, worksheet.xi_b_i298, 0.001); end
  def test_xi_b_j298; assert_in_epsilon(3.16444695195214, worksheet.xi_b_j298, 0.001); end
  def test_xi_b_k298; assert_in_epsilon(3.2046673519681095, worksheet.xi_b_k298, 0.001); end
  def test_xi_b_l298; assert_in_epsilon(3.2441162589486563, worksheet.xi_b_l298, 0.001); end
  def test_xi_b_m298; assert_in_epsilon(3.282796212184489, worksheet.xi_b_m298, 0.001); end
  def test_xi_b_n298; assert_in_epsilon(3.3207099574148966, worksheet.xi_b_n298, 0.001); end
  def test_xi_b_o298; assert_in_delta(-0.16088662355620548, worksheet.xi_b_o298, 0.001); end
  def test_xi_b_p298; assert_in_delta(0.12226600193825055, worksheet.xi_b_p298, 0.001); end
  def test_xi_b_d299; assert_equal("Low", worksheet.xi_b_d299); end
  def test_xi_b_e299; assert_in_epsilon(2, worksheet.xi_b_e299, 0.001); end
  def test_xi_b_f299; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f299, 0.001); end
  def test_xi_b_g299; assert_in_epsilon(3.694177894871679, worksheet.xi_b_g299, 0.001); end
  def test_xi_b_h299; assert_in_epsilon(2.8491261029392616, worksheet.xi_b_h299, 0.001); end
  def test_xi_b_i299; assert_in_epsilon(2.768628967764264, worksheet.xi_b_i299, 0.001); end
  def test_xi_b_j299; assert_in_epsilon(2.3100857954131087, worksheet.xi_b_j299, 0.001); end
  def test_xi_b_k299; assert_in_epsilon(1.8826266318926248, worksheet.xi_b_k299, 0.001); end
  def test_xi_b_l299; assert_in_epsilon(1.4761917403858749, worksheet.xi_b_l299, 0.001); end
  def test_xi_b_m299; assert_in_epsilon(1.0900136285436859, worksheet.xi_b_m299, 0.001); end
  def test_xi_b_n299; assert_in_epsilon(1.1856351063082191, worksheet.xi_b_n299, 0.001); end
  def test_xi_b_o299; assert_in_delta(-0.700400730553691, worksheet.xi_b_o299, 0.001); end
  def test_xi_b_d300; assert_equal("Low", worksheet.xi_b_d300); end
  def test_xi_b_e300; assert_in_epsilon(3, worksheet.xi_b_e300, 0.001); end
  def test_xi_b_f300; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f300, 0.001); end
  def test_xi_b_g300; assert_in_epsilon(3.2459818122890898, worksheet.xi_b_g300, 0.001); end
  def test_xi_b_h300; assert_in_epsilon(2.2735901927260485, worksheet.xi_b_h300, 0.001); end
  def test_xi_b_i300; assert_in_epsilon(2.0011694901033867, worksheet.xi_b_i300, 0.001); end
  def test_xi_b_j300; assert_in_epsilon(1.4574752770862756, worksheet.xi_b_j300, 0.001); end
  def test_xi_b_k300; assert_in_epsilon(1.0174331218517934, worksheet.xi_b_k300, 0.001); end
  def test_xi_b_l300; assert_in_delta(0.660268314824392, worksheet.xi_b_l300, 0.001); end
  def test_xi_b_m300; assert_in_delta(0.37829326362326876, worksheet.xi_b_m300, 0.001); end
  def test_xi_b_n300; assert_in_delta(0.17421414885994313, worksheet.xi_b_n300, 0.001); end
  def test_xi_b_o300; assert_in_delta(-0.955977660033895, worksheet.xi_b_o300, 0.001); end
  def test_xi_b_d301; assert_equal("Low", worksheet.xi_b_d301); end
  def test_xi_b_e301; assert_in_epsilon(4, worksheet.xi_b_e301, 0.001); end
  def test_xi_b_f301; assert_in_epsilon(3.9574031956065765, worksheet.xi_b_f301, 0.001); end
  def test_xi_b_g301; assert_in_epsilon(3.025920549413489, worksheet.xi_b_g301, 0.001); end
  def test_xi_b_h301; assert_in_epsilon(1.991519405910309, worksheet.xi_b_h301, 0.001); end
  def test_xi_b_i301; assert_in_epsilon(1.630390905470832, worksheet.xi_b_i301, 0.001); end
  def test_xi_b_j301; assert_in_epsilon(1.0788533899987285, worksheet.xi_b_j301, 0.001); end
  def test_xi_b_k301; assert_in_delta(0.6648684453785172, worksheet.xi_b_k301, 0.001); end
  def test_xi_b_l301; assert_in_delta(0.36284472452754146, worksheet.xi_b_l301, 0.001); end
  def test_xi_b_m301; assert_in_delta(0.15916393727571954, worksheet.xi_b_m301, 0.001); end
  def test_xi_b_n301; assert_in_delta(0.04144586167184705, worksheet.xi_b_n301, 0.001); end
  def test_xi_b_o301; assert_in_delta(-0.9895270055581247, worksheet.xi_b_o301, 0.001); end
  def test_xi_b_b303; assert_equal("Summary slide with lever ambition for each trajectory", worksheet.xi_b_b303); end
  def test_xi_b_c304; assert_equal("MtCO2", worksheet.xi_b_c304); end
  def test_xi_b_f304; assert_equal("2010 Orig", worksheet.xi_b_f304); end
  def test_xi_b_g304; assert_equal("Demand 1", worksheet.xi_b_g304); end
  def test_xi_b_h304; assert_equal("Demand 2", worksheet.xi_b_h304); end
  def test_xi_b_i304; assert_equal("Demand 3", worksheet.xi_b_i304); end
  def test_xi_b_j304; assert_equal("Residual", worksheet.xi_b_j304); end
  def test_xi_b_k304; assert_equal("General objectives", worksheet.xi_b_k304); end
  def test_xi_b_d305; assert_equal("Demand", worksheet.xi_b_d305); end
  def test_xi_b_f305; assert_in_epsilon(3.957403195606576, worksheet.xi_b_f305, 0.001); end
  def test_xi_b_g305; assert_in_epsilon(4.432194426127845, worksheet.xi_b_g305, 0.001); end
  def test_xi_b_h305; assert_in_epsilon(3.110819433225456, worksheet.xi_b_h305, 0.001); end
  def test_xi_b_i305; assert_in_epsilon(2.836854090630424, worksheet.xi_b_i305, 0.001); end
  def test_xi_b_j305; assert_in_delta(0.04144586167184705, worksheet.xi_b_j305, 0.001); end
  def test_xi_b_k305; assert_in_delta(0.19787015978032899, worksheet.xi_b_k305, 0.001); end
  def test_xi_b_d306; assert_equal("Lever 1", worksheet.xi_b_d306); end
  def test_xi_b_g306; assert_in_epsilon(5.188152683866376, worksheet.xi_b_g306, 0.001); end
  def test_xi_b_h306; assert_in_epsilon(3.641403025185518, worksheet.xi_b_h306, 0.001); end
  def test_xi_b_i306; assert_in_epsilon(3.3207099574148966, worksheet.xi_b_i306, 0.001); end
  def test_xi_b_l306; assert_in_epsilon(5.373931821840734, worksheet.xi_b_l306, 0.001); end
  def test_xi_b_m306; assert_in_epsilon(4.885392565309763, worksheet.xi_b_m306, 0.001); end
  def test_xi_b_n306; assert_in_epsilon(4.396853308778793, worksheet.xi_b_n306, 0.001); end
  def test_xi_b_d307; assert_equal("Lever 2", worksheet.xi_b_d307); end
  def test_xi_b_g307; assert_in_epsilon(1.8523918191481576, worksheet.xi_b_g307, 0.001); end
  def test_xi_b_h307; assert_in_epsilon(1.300136211305214, worksheet.xi_b_h307, 0.001); end
  def test_xi_b_i307; assert_in_epsilon(1.1856351063082191, worksheet.xi_b_i307, 0.001); end
  def test_xi_b_d308; assert_equal("Lever 3", worksheet.xi_b_d308); end
  def test_xi_b_g308; assert_in_delta(0.2721856517329919, worksheet.xi_b_g308, 0.001); end
  def test_xi_b_h308; assert_in_delta(0.19103864439355367, worksheet.xi_b_h308, 0.001); end
  def test_xi_b_i308; assert_in_delta(0.17421414885994313, worksheet.xi_b_i308, 0.001); end
  def test_xi_b_d309; assert_equal("Lever 4", worksheet.xi_b_d309); end
  def test_xi_b_g309; assert_in_delta(0.06475345971960234, worksheet.xi_b_g309, 0.001); end
  def test_xi_b_h309; assert_in_delta(0.04544843964354334, worksheet.xi_b_h309, 0.001); end
  def test_xi_b_i309; assert_in_delta(0.04144586167184705, worksheet.xi_b_i309, 0.001); end
  def test_xi_b_f311; assert_equal("2010 Orig", worksheet.xi_b_f311); end
  def test_xi_b_g311; assert_equal("Demand 1", worksheet.xi_b_g311); end
  def test_xi_b_h311; assert_equal("Demand 2", worksheet.xi_b_h311); end
  def test_xi_b_i311; assert_equal("Demand 3", worksheet.xi_b_i311); end
  def test_xi_b_j311; assert_equal("Residual", worksheet.xi_b_j311); end
  def test_xi_b_k311; assert_equal("General objectives", worksheet.xi_b_k311); end
  def test_xi_b_d312; assert_equal("Demand", worksheet.xi_b_d312); end
  def test_xi_b_f312; assert_in_epsilon(3.957403195606576, worksheet.xi_b_f312, 0.001); end
  def test_xi_b_d313; assert_equal("Lever 1", worksheet.xi_b_d313); end
  def test_xi_b_g313; assert_in_delta(0, (worksheet.xi_b_g313||0), 0.001); end
  def test_xi_b_h313; assert_in_delta(0, (worksheet.xi_b_h313||0), 0.001); end
  def test_xi_b_i313; assert_in_delta(0, (worksheet.xi_b_i313||0), 0.001); end
  def test_xi_b_d314; assert_equal("Lever 2", worksheet.xi_b_d314); end
  def test_xi_b_g314; assert_in_epsilon(2.5798026069796873, worksheet.xi_b_g314, 0.001); end
  def test_xi_b_h314; assert_in_epsilon(1.8106832219202422, worksheet.xi_b_h314, 0.001); end
  def test_xi_b_i314; assert_in_epsilon(1.6512189843222047, worksheet.xi_b_i314, 0.001); end
  def test_xi_b_d315; assert_equal("Lever 3", worksheet.xi_b_d315); end
  def test_xi_b_g315; assert_in_epsilon(1.5802061674151657, worksheet.xi_b_g315, 0.001); end
  def test_xi_b_h315; assert_in_epsilon(1.1090975669116603, worksheet.xi_b_h315, 0.001); end
  def test_xi_b_i315; assert_in_epsilon(1.011420957448276, worksheet.xi_b_i315, 0.001); end
  def test_xi_b_d316; assert_equal("Lever 4", worksheet.xi_b_d316); end
  def test_xi_b_g316; assert_in_delta(0.20743219201338958, worksheet.xi_b_g316, 0.001); end
  def test_xi_b_h316; assert_in_delta(0.14559020475001033, worksheet.xi_b_h316, 0.001); end
  def test_xi_b_i316; assert_in_delta(0.13276828718809608, worksheet.xi_b_i316, 0.001); end
  def test_xi_b_d317; assert_equal("Residual", worksheet.xi_b_d317); end
  def test_xi_b_g317; assert_in_delta(0.06475345971960156, worksheet.xi_b_g317, 0.001); end
  def test_xi_b_h317; assert_in_delta(0.045448439643543725, worksheet.xi_b_h317, 0.001); end
  def test_xi_b_i317; assert_in_delta(0.04144586167184716, worksheet.xi_b_i317, 0.001); end
  def test_xi_b_l317; assert_in_delta(0.9853902032505885, worksheet.xi_b_l317, 0.001); end
  def test_xi_b_b321; assert_equal("CO2 Waterfall", worksheet.xi_b_b321); end
  def test_xi_b_h321; assert_in_epsilon(185, worksheet.xi_b_h321, 0.001); end
  def test_xi_b_i321; assert_in_epsilon(198, worksheet.xi_b_i321, 0.001); end
  def test_xi_b_j321; assert_in_epsilon(209, worksheet.xi_b_j321, 0.001); end
  def test_xi_b_k321; assert_in_epsilon(222, worksheet.xi_b_k321, 0.001); end
  def test_xi_b_l321; assert_in_epsilon(235, worksheet.xi_b_l321, 0.001); end
  def test_xi_b_f322; assert_equal("2010 Orig", worksheet.xi_b_f322); end
  def test_xi_b_g322; assert_equal("2050 Orig", worksheet.xi_b_g322); end
  def test_xi_b_h322; assert_equal("Product Mix", worksheet.xi_b_h322); end
  def test_xi_b_i322; assert_equal("Energy efficiency", worksheet.xi_b_i322); end
  def test_xi_b_j322; assert_equal("Cogen", worksheet.xi_b_j322); end
  def test_xi_b_k322; assert_equal("Alternative fuels", worksheet.xi_b_k322); end
  def test_xi_b_l322; assert_equal("Cement CCS intensity", worksheet.xi_b_l322); end
  def test_xi_b_c323; assert_equal("MtCO2", worksheet.xi_b_c323); end
  def test_xi_b_f323; assert_in_epsilon(4.258013889251608, worksheet.xi_b_f323, 0.001); end
  def test_xi_b_g323; assert_in_epsilon(5.322596126833598, worksheet.xi_b_g323, 0.001); end
  def test_xi_b_bi173; assert_in_epsilon(2.3475032171333257, worksheet.xi_b_bi173, 0.001); end
  def test_xi_b_h323; assert_in_epsilon(2.3475032171333257, worksheet.xi_b_h323, 0.001); end
  def test_xi_b_bi185; assert_in_epsilon(2.0241934959711436, worksheet.xi_b_bi185, 0.001); end
  def test_xi_b_i323; assert_in_epsilon(2.0241934959711436, worksheet.xi_b_i323, 0.001); end
  def test_xi_b_j323; assert_in_epsilon(2.0241934959711436, worksheet.xi_b_j323, 0.001); end
  def test_xi_b_bi211; assert_in_epsilon(2.0822823888410964, worksheet.xi_b_bi211, 0.001); end
  def test_xi_b_k323; assert_in_epsilon(2.0822823888410964, worksheet.xi_b_k323, 0.001); end
  def test_xi_b_bi224; assert_in_epsilon(1.0203183705321373, worksheet.xi_b_bi224, 0.001); end
  def test_xi_b_l323; assert_in_epsilon(1.0203183705321373, worksheet.xi_b_l323, 0.001); end
  def test_xi_b_c324; assert_equal("MtCO2 delta (for graphs)", worksheet.xi_b_c324); end
  def test_xi_b_f324; assert_in_epsilon(4.258013889251608, worksheet.xi_b_f324, 0.001); end
  def test_xi_b_g324; assert_in_epsilon(1.0645822375819893, worksheet.xi_b_g324, 0.001); end
  def test_xi_b_c325; assert_equal("% evolutions (for graphs)", worksheet.xi_b_c325); end
  def test_xi_b_g325; assert_in_delta(0.25001849812404, worksheet.xi_b_g325, 0.001); end
  def test_xi_b_h324; assert_in_epsilon(-2.975092909700272, worksheet.xi_b_h324, 0.001); end
  def test_xi_b_h325; assert_in_delta(-0.6987043694738103, worksheet.xi_b_h325, 0.001); end
  def test_xi_b_i324; assert_in_delta(-0.32330972116218204, worksheet.xi_b_i324, 0.001); end
  def test_xi_b_i325; assert_in_delta(-0.07592970092894817, worksheet.xi_b_i325, 0.001); end
  def test_xi_b_j324; assert_in_delta(0, (worksheet.xi_b_j324||0), 0.001); end
  def test_xi_b_j325; assert_in_delta(0, (worksheet.xi_b_j325||0), 0.001); end
  def test_xi_b_k324; assert_in_delta(0.05808889286995278, worksheet.xi_b_k324, 0.001); end
  def test_xi_b_k325; assert_in_delta(0.013642250678558149, worksheet.xi_b_k325, 0.001); end
  def test_xi_b_l324; assert_in_epsilon(-1.0619640183089591, worksheet.xi_b_l324, 0.001); end
  def test_xi_b_l325; assert_in_delta(-0.24940360598391817, worksheet.xi_b_l325, 0.001); end
  def test_xi_b_m325; assert_in_delta(0.7603769275840787, worksheet.xi_b_m325, 0.001); end
  def test_xi_b_b328; assert_equal("Cost (la trajectoire 1 avec un niveau d’ambition 3)", worksheet.xi_b_b328); end
  def test_xi_b_f328; assert_equal("MEUR", worksheet.xi_b_f328); end
  def test_xi_b_f329; assert_equal("2010 Orig", worksheet.xi_b_f329); end
  def test_xi_b_g329; assert_equal("2050 Orig", worksheet.xi_b_g329); end
  def test_xi_b_h329; assert_equal("Product Mix", worksheet.xi_b_h329); end
  def test_xi_b_i329; assert_equal("Energy efficiency", worksheet.xi_b_i329); end
  def test_xi_b_j329; assert_equal("Cogen", worksheet.xi_b_j329); end
  def test_xi_b_k329; assert_equal("Alternative fuels", worksheet.xi_b_k329); end
  def test_xi_b_l329; assert_equal("Cement CCS intensity", worksheet.xi_b_l329); end
  def test_xi_b_d330; assert_equal("Raw", worksheet.xi_b_d330); end
  def test_xi_b_e330; assert_equal("Energy", worksheet.xi_b_e330); end
  def test_xi_b_f330; assert_in_epsilon(124.87011075684646, worksheet.xi_b_f330, 0.001); end
  def test_xi_b_g330; assert_in_epsilon(190.06911122505213, worksheet.xi_b_g330, 0.001); end
  def test_xi_b_e331; assert_equal("Capex", worksheet.xi_b_e331); end
  def test_xi_b_f331; assert_in_delta(0, (worksheet.xi_b_f331||0), 0.001); end
  def test_xi_b_g331; assert_in_delta(0, (worksheet.xi_b_g331||0), 0.001); end
  def test_xi_b_e332; assert_equal("Total", worksheet.xi_b_e332); end
  def test_xi_b_f332; assert_in_epsilon(124.87011075684646, worksheet.xi_b_f332, 0.001); end
  def test_xi_b_d333; assert_equal("Delta", worksheet.xi_b_d333); end
  def test_xi_b_e333; assert_equal("Energy", worksheet.xi_b_e333); end
  def test_xi_b_g333; assert_in_epsilon(65.19900046820567, worksheet.xi_b_g333, 0.001); end
  def test_xi_b_h333; assert_in_epsilon(-106.24012261758511, worksheet.xi_b_h333, 0.001); end
  def test_xi_b_i333; assert_in_epsilon(-29.340146012613474, worksheet.xi_b_i333, 0.001); end
  def test_xi_b_j333; assert_in_delta(0, (worksheet.xi_b_j333||0), 0.001); end
  def test_xi_b_k333; assert_in_epsilon(39.409917784671535, worksheet.xi_b_k333, 0.001); end
  def test_xi_b_l333; assert_in_epsilon(14.677080390046711, worksheet.xi_b_l333, 0.001); end
  def test_xi_b_e334; assert_equal("Capex", worksheet.xi_b_e334); end
  def test_xi_b_g334; assert_in_delta(0, (worksheet.xi_b_g334||0), 0.001); end
  def test_xi_b_cg173; assert_in_epsilon(106.24012261758511, worksheet.xi_b_cg173, 0.001); end
  def test_xi_b_h334; assert_in_epsilon(106.24012261758511, worksheet.xi_b_h334, 0.001); end
  def test_xi_b_cg185; assert_in_epsilon(29.340146012613474, worksheet.xi_b_cg185, 0.001); end
  def test_xi_b_i334; assert_in_epsilon(29.340146012613474, worksheet.xi_b_i334, 0.001); end
  def test_xi_b_cg196; assert_in_delta(0.012121381453661893, worksheet.xi_b_cg196, 0.001); end
  def test_xi_b_j334; assert_in_delta(0.012121381453661893, worksheet.xi_b_j334, 0.001); end
  def test_xi_b_cg209; assert_in_delta(0.08788001553904863, worksheet.xi_b_cg209, 0.001); end
  def test_xi_b_k334; assert_in_delta(0.08788001553904863, worksheet.xi_b_k334, 0.001); end
  def test_xi_b_l334; assert_in_epsilon(45.85486865356396, worksheet.xi_b_l334, 0.001); end
  def test_xi_b_e335; assert_equal("Total", worksheet.xi_b_e335); end
  def test_xi_b_g332; assert_in_epsilon(190.06911122505213, worksheet.xi_b_g332, 0.001); end
  def test_xi_b_g335; assert_in_epsilon(65.19900046820567, worksheet.xi_b_g335, 0.001); end
  def test_xi_b_h335; assert_in_delta(0, (worksheet.xi_b_h335||0), 0.001); end
  def test_xi_b_i335; assert_in_delta(0, (worksheet.xi_b_i335||0), 0.001); end
  def test_xi_b_i336; assert_in_delta(0, (worksheet.xi_b_i336||0), 0.001); end
  def test_xi_b_j335; assert_in_delta(0.012121381453661893, worksheet.xi_b_j335, 0.001); end
  def test_xi_b_j336; assert_in_delta(6.377354729306605e-05, worksheet.xi_b_j336, 0.001); end
  def test_xi_b_k335; assert_in_epsilon(39.497797800210584, worksheet.xi_b_k335, 0.001); end
  def test_xi_b_k336; assert_in_delta(0.20780755771222106, worksheet.xi_b_k336, 0.001); end
  def test_xi_b_l335; assert_in_epsilon(60.53194904361067, worksheet.xi_b_l335, 0.001); end
  def test_xi_b_l336; assert_in_delta(0.3184733629439534, worksheet.xi_b_l336, 0.001); end
  def test_xi_b_f337; assert_equal("MEUR/MMtCO2e", worksheet.xi_b_f337); end
  def test_xi_b_c338; assert_equal("Period 2010-2050", worksheet.xi_b_c338); end
  def test_xi_b_g338; assert_equal("2050 Orig", worksheet.xi_b_g338); end
  def test_xi_b_h338; assert_equal("Product Mix", worksheet.xi_b_h338); end
  def test_xi_b_i338; assert_equal("Energy efficiency", worksheet.xi_b_i338); end
  def test_xi_b_j338; assert_equal("Cogen", worksheet.xi_b_j338); end
  def test_xi_b_k338; assert_equal("Alternative fuels", worksheet.xi_b_k338); end
  def test_xi_b_l338; assert_equal("Cement CCS intensity", worksheet.xi_b_l338); end
  def test_xi_b_r338; assert_equal("average", worksheet.xi_b_r338); end
  def test_xi_b_e339; assert_equal("Energy", worksheet.xi_b_e339); end
  def test_xi_b_h339; assert_in_epsilon(-35.70985036171135, worksheet.xi_b_h339, 0.001); end
  def test_xi_b_i339; assert_in_epsilon(-90.74934680945012, worksheet.xi_b_i339, 0.001); end
  def test_xi_b_j339; assert_in_delta(0, (worksheet.xi_b_j339||0), 0.001); end
  def test_xi_b_k339; assert_in_epsilon(-678.4415374020119, worksheet.xi_b_k339, 0.001); end
  def test_xi_b_l339; assert_in_epsilon(13.820694615828954, worksheet.xi_b_l339, 0.001); end
  def test_xi_b_e340; assert_equal("Capex", worksheet.xi_b_e340); end
  def test_xi_b_h340; assert_in_epsilon(35.70985036171135, worksheet.xi_b_h340, 0.001); end
  def test_xi_b_i340; assert_in_epsilon(90.74934680945012, worksheet.xi_b_i340, 0.001); end
  def test_xi_b_j340; assert_in_delta(0, (worksheet.xi_b_j340||0), 0.001); end
  def test_xi_b_k340; assert_in_epsilon(-1.5128540276329778, worksheet.xi_b_k340, 0.001); end
  def test_xi_b_l340; assert_in_epsilon(43.17930538417105, worksheet.xi_b_l340, 0.001); end
  def test_xi_b_e341; assert_equal("Total", worksheet.xi_b_e341); end
  def test_xi_b_h341; assert_in_delta(0, (worksheet.xi_b_h341||0), 0.001); end
  def test_xi_b_i341; assert_in_delta(0, (worksheet.xi_b_i341||0), 0.001); end
  def test_xi_b_j341; assert_in_delta(0, (worksheet.xi_b_j341||0), 0.001); end
  def test_xi_b_k341; assert_in_epsilon(-679.9543914296449, worksheet.xi_b_k341, 0.001); end
  def test_xi_b_l341; assert_in_epsilon(57.00000000000001, worksheet.xi_b_l341, 0.001); end
  def test_xi_b_r341; assert_in_epsilon(-222.96638832045562, worksheet.xi_b_r341, 0.001); end
  def test_xi_b_b342; assert_equal("Cost abbatement curve", worksheet.xi_b_b342); end
  def test_xi_b_c343; assert_equal("Reordered", worksheet.xi_b_c343); end
  def test_xi_b_h344; assert_equal("Cogen", worksheet.xi_b_h344); end
  def test_xi_b_i344; assert_equal("Energy efficiency", worksheet.xi_b_i344); end
  def test_xi_b_j344; assert_equal("Product Mix", worksheet.xi_b_j344); end
  def test_xi_b_k344; assert_equal("CCS", worksheet.xi_b_k344); end
  def test_xi_b_l344; assert_equal("Alternative fuels", worksheet.xi_b_l344); end
  def test_xi_b_e345; assert_equal("tCO2e reduction", worksheet.xi_b_e345); end
  def test_xi_b_h345; assert_in_delta(0, (worksheet.xi_b_h345||0), 0.001); end
  def test_xi_b_i345; assert_in_delta(0.32330972116218204, worksheet.xi_b_i345, 0.001); end
  def test_xi_b_j345; assert_in_epsilon(2.975092909700272, worksheet.xi_b_j345, 0.001); end
  def test_xi_b_k345; assert_in_epsilon(1.0619640183089591, worksheet.xi_b_k345, 0.001); end
  def test_xi_b_l345; assert_in_delta(-0.05808889286995278, worksheet.xi_b_l345, 0.001); end
  def test_xi_b_e346; assert_equal("%tCO2e reduction", worksheet.xi_b_e346); end
  def test_xi_b_h346; assert_in_delta(0, (worksheet.xi_b_h346||0), 0.001); end
  def test_xi_b_i346; assert_in_delta(0.07592970092894817, worksheet.xi_b_i346, 0.001); end
  def test_xi_b_j346; assert_in_delta(0.6987043694738103, worksheet.xi_b_j346, 0.001); end
  def test_xi_b_k346; assert_in_delta(0.24940360598391817, worksheet.xi_b_k346, 0.001); end
  def test_xi_b_l346; assert_in_delta(-0.013642250678558149, worksheet.xi_b_l346, 0.001); end
  def test_xi_b_m346; assert_in_epsilon(-2.0103954257081185, worksheet.xi_b_m346, 0.001); end
  def test_xi_b_n346; assert_in_epsilon(1.0103954257081185, worksheet.xi_b_n346, 0.001); end
  def test_xi_b_e347; assert_equal("MEUR/tCO2e", worksheet.xi_b_e347); end
  def test_xi_b_h347; assert_in_epsilon(-20, worksheet.xi_b_h347, 0.001); end
  def test_xi_b_i347; assert_in_delta(0, (worksheet.xi_b_i347||0), 0.001); end
  def test_xi_b_j347; assert_in_delta(0, (worksheet.xi_b_j347||0), 0.001); end
  def test_xi_b_k347; assert_in_epsilon(57.00000000000001, worksheet.xi_b_k347, 0.001); end
  def test_xi_b_l347; assert_in_epsilon(-679.9543914296449, worksheet.xi_b_l347, 0.001); end
  def test_control_h41; assert_in_epsilon(30, worksheet.control_h41, 0.001); end
  def test_xi_f_a1; assert_equal("XI", worksheet.xi_f_a1); end
  def test_xi_f_b1; assert_equal("Industry", worksheet.xi_f_b1); end
  def test_xi_f_o1; assert_equal("CONTROL PANEL", worksheet.xi_f_o1); end
  def test_xi_f_a2; assert_equal("XI.f", worksheet.xi_f_a2); end
  def test_xi_f_b2; assert_equal("Pulp & Paper Industry", worksheet.xi_f_b2); end
  def test_xi_f_b4; assert_equal("Trajectory choice", worksheet.xi_f_b4); end
  def test_xi_f_d7; assert_equal("Component", worksheet.xi_f_d7); end
  def test_xi_f_e7; assert_equal("Trajectory", worksheet.xi_f_e7); end
  def test_xi_f_f7; assert_equal("Notes", worksheet.xi_f_f7); end
  def test_xi_f_c8; assert_equal("(i)", worksheet.xi_f_c8); end
  def test_xi_f_d8; assert_equal("Paper Output Growth", worksheet.xi_f_d8); end
  def test_xi_f_f8; assert_equal("(1 for high, 3 for low)", worksheet.xi_f_f8); end
  def test_xi_f_c9; assert_equal("(ii)", worksheet.xi_f_c9); end
  def test_xi_f_d9; assert_equal("Paper Energy intensity", worksheet.xi_f_d9); end
  def test_xi_f_f9; assert_equal("(1 for not ambition, 4 for ambitious)", worksheet.xi_f_f9); end
  def test_xi_f_c10; assert_equal("     1", worksheet.xi_f_c10); end
  def test_xi_f_d10; assert_equal("Energy efficiency", worksheet.xi_f_d10); end
  def test_control_h45; assert_in_epsilon(30, worksheet.control_h45, 0.001); end
  def test_xi_f_e9; assert_in_epsilon(3, worksheet.xi_f_e9, 0.001); end
  def test_xi_f_e10; assert_in_epsilon(3, worksheet.xi_f_e10, 0.001); end
  def test_xi_f_f10; assert_equal("(by default, same as global)", worksheet.xi_f_f10); end
  def test_xi_f_c11; assert_equal("     2", worksheet.xi_f_c11); end
  def test_xi_f_d11; assert_equal("Alternative fuels (Fuel to Gas)", worksheet.xi_f_d11); end
  def test_xi_f_e11; assert_in_epsilon(3, worksheet.xi_f_e11, 0.001); end
  def test_xi_f_f11; assert_equal("(by default, same as global)", worksheet.xi_f_f11); end
  def test_xi_f_c12; assert_equal("     3", worksheet.xi_f_c12); end
  def test_xi_f_d12; assert_equal("Alternative fuels (Fuel and Gas to Biomass)", worksheet.xi_f_d12); end
  def test_xi_f_e12; assert_in_epsilon(3, worksheet.xi_f_e12, 0.001); end
  def test_xi_f_f12; assert_equal("(by default, same as global)", worksheet.xi_f_f12); end
  def test_xi_f_c13; assert_equal("(iii)", worksheet.xi_f_c13); end
  def test_xi_f_d13; assert_equal("Paper CCS intensity", worksheet.xi_f_d13); end
  def test_xi_f_f13; assert_equal("(1 for not ambition, 4 for ambitious)", worksheet.xi_f_f13); end
  def test_xi_f_c14; assert_in_delta(1, worksheet.xi_f_c14, 0.001); end
  def test_xi_f_d14; assert_equal("Black liquor gasification", worksheet.xi_f_d14); end
  def test_xi_f_e13; assert_in_epsilon(2, worksheet.xi_f_e13, 0.001); end
  def test_xi_f_e14; assert_in_epsilon(2, worksheet.xi_f_e14, 0.001); end
  def test_xi_f_f14; assert_equal("(by default, same as global)", worksheet.xi_f_f14); end
  def test_xi_f_c15; assert_in_epsilon(2, worksheet.xi_f_c15, 0.001); end
  def test_xi_f_d15; assert_equal("End of pipe absorbing of CO2", worksheet.xi_f_d15); end
  def test_xi_f_e15; assert_in_epsilon(2, worksheet.xi_f_e15, 0.001); end
  def test_xi_f_f15; assert_equal("(by default, same as global)", worksheet.xi_f_f15); end
  def test_xi_f_b18; assert_equal("Trajectory assumptions", worksheet.xi_f_b18); end
  def test_xi_f_b20; assert_equal("(Ia) Paper Output Growth", worksheet.xi_f_b20); end
  def test_xi_f_c22; assert_equal("Trajectories definition (relative to production)(% CAGR)", worksheet.xi_f_c22); end
  def test_xi_f_c23; assert_equal("Description", worksheet.xi_f_c23); end
  def test_xi_f_d23; assert_equal("Trajectory", worksheet.xi_f_d23); end
  def test_xi_f_f23; assert_in_epsilon(2010, worksheet.xi_f_f23, 0.001); end
  def test_xi_f_g23; assert_in_epsilon(2015, worksheet.xi_f_g23, 0.001); end
  def test_xi_f_h23; assert_in_epsilon(2020, worksheet.xi_f_h23, 0.001); end
  def test_xi_f_i23; assert_in_epsilon(2025, worksheet.xi_f_i23, 0.001); end
  def test_xi_f_j23; assert_in_epsilon(2030, worksheet.xi_f_j23, 0.001); end
  def test_xi_f_k23; assert_in_epsilon(2035, worksheet.xi_f_k23, 0.001); end
  def test_xi_f_l23; assert_in_epsilon(2040, worksheet.xi_f_l23, 0.001); end
  def test_xi_f_m23; assert_in_epsilon(2045, worksheet.xi_f_m23, 0.001); end
  def test_xi_f_n23; assert_in_epsilon(2050, worksheet.xi_f_n23, 0.001); end
  def test_xi_f_c24; assert_equal("Paper", worksheet.xi_f_c24); end
  def test_xi_f_d24; assert_in_delta(1, worksheet.xi_f_d24, 0.001); end
  def test_xi_f_g24; assert_in_delta(0.012, worksheet.xi_f_g24, 0.001); end
  def test_xi_f_h24; assert_in_delta(0.012, worksheet.xi_f_h24, 0.001); end
  def test_xi_f_i24; assert_in_delta(0.012, worksheet.xi_f_i24, 0.001); end
  def test_xi_f_j24; assert_in_delta(0.012, worksheet.xi_f_j24, 0.001); end
  def test_xi_f_k24; assert_in_delta(0.012, worksheet.xi_f_k24, 0.001); end
  def test_xi_f_l24; assert_in_delta(0.012, worksheet.xi_f_l24, 0.001); end
  def test_xi_f_m24; assert_in_delta(0.012, worksheet.xi_f_m24, 0.001); end
  def test_xi_f_n24; assert_in_delta(0.012, worksheet.xi_f_n24, 0.001); end
  def test_xi_f_d25; assert_in_epsilon(2, worksheet.xi_f_d25, 0.001); end
  def test_xi_f_g25; assert_in_delta(0, (worksheet.xi_f_g25||0), 0.001); end
  def test_xi_f_h25; assert_in_delta(0, (worksheet.xi_f_h25||0), 0.001); end
  def test_xi_f_i25; assert_in_delta(0, (worksheet.xi_f_i25||0), 0.001); end
  def test_xi_f_j25; assert_in_delta(0, (worksheet.xi_f_j25||0), 0.001); end
  def test_xi_f_k25; assert_in_delta(0, (worksheet.xi_f_k25||0), 0.001); end
  def test_xi_f_l25; assert_in_delta(0, (worksheet.xi_f_l25||0), 0.001); end
  def test_xi_f_m25; assert_in_delta(0, (worksheet.xi_f_m25||0), 0.001); end
  def test_xi_f_n25; assert_in_delta(0, (worksheet.xi_f_n25||0), 0.001); end
  def test_xi_f_d26; assert_in_epsilon(3, worksheet.xi_f_d26, 0.001); end
  def test_xi_f_g26; assert_in_delta(-0.008, worksheet.xi_f_g26, 0.001); end
  def test_xi_f_h26; assert_in_delta(-0.008, worksheet.xi_f_h26, 0.001); end
  def test_xi_f_i26; assert_in_delta(-0.008, worksheet.xi_f_i26, 0.001); end
  def test_xi_f_j26; assert_in_delta(-0.008, worksheet.xi_f_j26, 0.001); end
  def test_xi_f_k26; assert_in_delta(-0.008, worksheet.xi_f_k26, 0.001); end
  def test_xi_f_l26; assert_in_delta(-0.008, worksheet.xi_f_l26, 0.001); end
  def test_xi_f_m26; assert_in_delta(-0.008, worksheet.xi_f_m26, 0.001); end
  def test_xi_f_n26; assert_in_delta(-0.008, worksheet.xi_f_n26, 0.001); end
  def test_xi_f_c27; assert_equal("Chosen trajectory (% CAGR)", worksheet.xi_f_c27); end
  def test_xi_f_c28; assert_equal("Product type", worksheet.xi_f_c28); end
  def test_xi_f_d28; assert_equal("Description", worksheet.xi_f_d28); end
  def test_xi_f_f28; assert_in_epsilon(2010, worksheet.xi_f_f28, 0.001); end
  def test_xi_f_g28; assert_in_epsilon(2015, worksheet.xi_f_g28, 0.001); end
  def test_xi_f_h28; assert_in_epsilon(2020, worksheet.xi_f_h28, 0.001); end
  def test_xi_f_i28; assert_in_epsilon(2025, worksheet.xi_f_i28, 0.001); end
  def test_xi_f_j28; assert_in_epsilon(2030, worksheet.xi_f_j28, 0.001); end
  def test_xi_f_k28; assert_in_epsilon(2035, worksheet.xi_f_k28, 0.001); end
  def test_xi_f_l28; assert_in_epsilon(2040, worksheet.xi_f_l28, 0.001); end
  def test_xi_f_m28; assert_in_epsilon(2045, worksheet.xi_f_m28, 0.001); end
  def test_xi_f_n28; assert_in_epsilon(2050, worksheet.xi_f_n28, 0.001); end
  def test_xi_f_c29; assert_equal("(i)", worksheet.xi_f_c29); end
  def test_xi_f_d29; assert_equal("Paper", worksheet.xi_f_d29); end
  def test_control_h44; assert_in_epsilon(20, worksheet.control_h44, 0.001); end
  def test_xi_f_e8; assert_in_epsilon(2, worksheet.xi_f_e8, 0.001); end
  def test_xi_f_f29; assert_in_delta(0, (worksheet.xi_f_f29||0), 0.001); end
  def test_xi_f_g29; assert_in_delta(0, (worksheet.xi_f_g29||0), 0.001); end
  def test_xi_f_h29; assert_in_delta(0, (worksheet.xi_f_h29||0), 0.001); end
  def test_xi_f_i29; assert_in_delta(0, (worksheet.xi_f_i29||0), 0.001); end
  def test_xi_f_j29; assert_in_delta(0, (worksheet.xi_f_j29||0), 0.001); end
  def test_xi_f_k29; assert_in_delta(0, (worksheet.xi_f_k29||0), 0.001); end
  def test_xi_f_l29; assert_in_delta(0, (worksheet.xi_f_l29||0), 0.001); end
  def test_xi_f_m29; assert_in_delta(0, (worksheet.xi_f_m29||0), 0.001); end
  def test_xi_f_n29; assert_in_delta(0, (worksheet.xi_f_n29||0), 0.001); end
  def test_xi_f_b33; assert_equal("(Ib) Paper Energy intensity", worksheet.xi_f_b33); end
  def test_xi_f_b34; assert_in_delta(1, worksheet.xi_f_b34, 0.001); end
  def test_xi_f_c34; assert_equal("Energy efficiency", worksheet.xi_f_c34); end
  def test_xi_f_c35; assert_equal("Definition", worksheet.xi_f_c35); end
  def test_xi_f_c36; assert_equal("Improvement in energy efficiency is expected worldwide", worksheet.xi_f_c36); end
  def test_xi_f_c37; assert_equal("Assumption, linear progression", worksheet.xi_f_c37); end
  def test_xi_f_c39; assert_equal("Source: Cobelpa consultation, later challenged ((in view of the low ambition level compared to other industries and in view of UK evidence))", worksheet.xi_f_c39); end
  def test_xi_f_c42; assert_equal("CO2", worksheet.xi_f_c42); end
  def test_xi_f_d42; assert_equal("Type", worksheet.xi_f_d42); end
  def test_xi_f_e42; assert_in_epsilon(2010, worksheet.xi_f_e42, 0.001); end
  def test_xi_f_f42; assert_in_epsilon(2015, worksheet.xi_f_f42, 0.001); end
  def test_xi_f_g42; assert_in_epsilon(2020, worksheet.xi_f_g42, 0.001); end
  def test_xi_f_h42; assert_in_epsilon(2025, worksheet.xi_f_h42, 0.001); end
  def test_xi_f_i42; assert_in_epsilon(2030, worksheet.xi_f_i42, 0.001); end
  def test_xi_f_j42; assert_in_epsilon(2035, worksheet.xi_f_j42, 0.001); end
  def test_xi_f_k42; assert_in_epsilon(2040, worksheet.xi_f_k42, 0.001); end
  def test_xi_f_l42; assert_in_epsilon(2045, worksheet.xi_f_l42, 0.001); end
  def test_xi_f_m42; assert_in_epsilon(2050, worksheet.xi_f_m42, 0.001); end
  def test_xi_f_d43; assert_in_delta(1, worksheet.xi_f_d43, 0.001); end
  def test_xi_f_e43; assert_in_delta(0, (worksheet.xi_f_e43||0), 0.001); end
  def test_xi_f_f43; assert_in_delta(0.0125, worksheet.xi_f_f43, 0.001); end
  def test_xi_f_g43; assert_in_delta(0.025, worksheet.xi_f_g43, 0.001); end
  def test_xi_f_h43; assert_in_delta(0.0375, worksheet.xi_f_h43, 0.001); end
  def test_xi_f_i43; assert_in_delta(0.05, worksheet.xi_f_i43, 0.001); end
  def test_xi_f_j43; assert_in_delta(0.0625, worksheet.xi_f_j43, 0.001); end
  def test_xi_f_k43; assert_in_delta(0.075, worksheet.xi_f_k43, 0.001); end
  def test_xi_f_l43; assert_in_delta(0.0875, worksheet.xi_f_l43, 0.001); end
  def test_xi_f_m43; assert_in_delta(0.1, worksheet.xi_f_m43, 0.001); end
  def test_xi_f_d44; assert_in_epsilon(2, worksheet.xi_f_d44, 0.001); end
  def test_xi_f_e44; assert_in_delta(0, (worksheet.xi_f_e44||0), 0.001); end
  def test_xi_f_f44; assert_in_delta(0.01875, worksheet.xi_f_f44, 0.001); end
  def test_xi_f_g44; assert_in_delta(0.0375, worksheet.xi_f_g44, 0.001); end
  def test_xi_f_h44; assert_in_delta(0.05625, worksheet.xi_f_h44, 0.001); end
  def test_xi_f_i44; assert_in_delta(0.075, worksheet.xi_f_i44, 0.001); end
  def test_xi_f_j44; assert_in_delta(0.09375, worksheet.xi_f_j44, 0.001); end
  def test_xi_f_k44; assert_in_delta(0.1125, worksheet.xi_f_k44, 0.001); end
  def test_xi_f_l44; assert_in_delta(0.13125, worksheet.xi_f_l44, 0.001); end
  def test_xi_f_m44; assert_in_delta(0.15, worksheet.xi_f_m44, 0.001); end
  def test_xi_f_d45; assert_in_epsilon(3, worksheet.xi_f_d45, 0.001); end
  def test_xi_f_e45; assert_in_delta(0, (worksheet.xi_f_e45||0), 0.001); end
  def test_xi_f_f45; assert_in_delta(0.025, worksheet.xi_f_f45, 0.001); end
  def test_xi_f_g45; assert_in_delta(0.05, worksheet.xi_f_g45, 0.001); end
  def test_xi_f_h45; assert_in_delta(0.075, worksheet.xi_f_h45, 0.001); end
  def test_xi_f_i45; assert_in_delta(0.1, worksheet.xi_f_i45, 0.001); end
  def test_xi_f_j45; assert_in_delta(0.125, worksheet.xi_f_j45, 0.001); end
  def test_xi_f_k45; assert_in_delta(0.15, worksheet.xi_f_k45, 0.001); end
  def test_xi_f_l45; assert_in_delta(0.175, worksheet.xi_f_l45, 0.001); end
  def test_xi_f_m45; assert_in_delta(0.2, worksheet.xi_f_m45, 0.001); end
  def test_xi_f_d46; assert_in_epsilon(4, worksheet.xi_f_d46, 0.001); end
  def test_xi_f_e46; assert_in_delta(0, (worksheet.xi_f_e46||0), 0.001); end
  def test_xi_f_f46; assert_in_delta(0.03125, worksheet.xi_f_f46, 0.001); end
  def test_xi_f_g46; assert_in_delta(0.0625, worksheet.xi_f_g46, 0.001); end
  def test_xi_f_h46; assert_in_delta(0.09375, worksheet.xi_f_h46, 0.001); end
  def test_xi_f_i46; assert_in_delta(0.125, worksheet.xi_f_i46, 0.001); end
  def test_xi_f_j46; assert_in_delta(0.15625, worksheet.xi_f_j46, 0.001); end
  def test_xi_f_k46; assert_in_delta(0.1875, worksheet.xi_f_k46, 0.001); end
  def test_xi_f_l46; assert_in_delta(0.21875, worksheet.xi_f_l46, 0.001); end
  def test_xi_f_m46; assert_in_delta(0.25, worksheet.xi_f_m46, 0.001); end
  def test_xi_f_c48; assert_equal("Chosen trajectory (energy efficiency)", worksheet.xi_f_c48); end
  def test_xi_f_c49; assert_equal("Product type", worksheet.xi_f_c49); end
  def test_xi_f_d49; assert_equal("Description", worksheet.xi_f_d49); end
  def test_xi_f_e49; assert_in_epsilon(2010, worksheet.xi_f_e49, 0.001); end
  def test_xi_f_f49; assert_in_epsilon(2015, worksheet.xi_f_f49, 0.001); end
  def test_xi_f_g49; assert_in_epsilon(2020, worksheet.xi_f_g49, 0.001); end
  def test_xi_f_h49; assert_in_epsilon(2025, worksheet.xi_f_h49, 0.001); end
  def test_xi_f_i49; assert_in_epsilon(2030, worksheet.xi_f_i49, 0.001); end
  def test_xi_f_j49; assert_in_epsilon(2035, worksheet.xi_f_j49, 0.001); end
  def test_xi_f_k49; assert_in_epsilon(2040, worksheet.xi_f_k49, 0.001); end
  def test_xi_f_l49; assert_in_epsilon(2045, worksheet.xi_f_l49, 0.001); end
  def test_xi_f_m49; assert_in_epsilon(2050, worksheet.xi_f_m49, 0.001); end
  def test_xi_f_c50; assert_equal("(i)", worksheet.xi_f_c50); end
  def test_xi_f_d50; assert_equal("Energy efficiency", worksheet.xi_f_d50); end
  def test_xi_f_f50; assert_in_delta(0.025, worksheet.xi_f_f50, 0.001); end
  def test_xi_f_g50; assert_in_delta(0.05, worksheet.xi_f_g50, 0.001); end
  def test_xi_f_h50; assert_in_delta(0.075, worksheet.xi_f_h50, 0.001); end
  def test_xi_f_i50; assert_in_delta(0.1, worksheet.xi_f_i50, 0.001); end
  def test_xi_f_j50; assert_in_delta(0.125, worksheet.xi_f_j50, 0.001); end
  def test_xi_f_k50; assert_in_delta(0.15, worksheet.xi_f_k50, 0.001); end
  def test_xi_f_l50; assert_in_delta(0.175, worksheet.xi_f_l50, 0.001); end
  def test_xi_f_m50; assert_in_delta(0.2, worksheet.xi_f_m50, 0.001); end
  def test_xi_f_b52; assert_in_epsilon(2, worksheet.xi_f_b52, 0.001); end
  def test_xi_f_c52; assert_equal("Alternative fuels (Fuel to Gas)", worksheet.xi_f_c52); end
  def test_xi_f_c53; assert_equal("Definition", worksheet.xi_f_c53); end
  def test_xi_f_c54; assert_equal("Conversion of all liquid fuels to gas by 2025 ", worksheet.xi_f_c54); end
  def test_xi_f_c55; assert_equal("Applied to all volumes", worksheet.xi_f_c55); end
  def test_xi_f_d57; assert_equal("Type", worksheet.xi_f_d57); end
  def test_xi_f_e57; assert_in_epsilon(2010, worksheet.xi_f_e57, 0.001); end
  def test_xi_f_f57; assert_in_epsilon(2015, worksheet.xi_f_f57, 0.001); end
  def test_xi_f_g57; assert_in_epsilon(2020, worksheet.xi_f_g57, 0.001); end
  def test_xi_f_h57; assert_in_epsilon(2025, worksheet.xi_f_h57, 0.001); end
  def test_xi_f_i57; assert_in_epsilon(2030, worksheet.xi_f_i57, 0.001); end
  def test_xi_f_j57; assert_in_epsilon(2035, worksheet.xi_f_j57, 0.001); end
  def test_xi_f_k57; assert_in_epsilon(2040, worksheet.xi_f_k57, 0.001); end
  def test_xi_f_l57; assert_in_epsilon(2045, worksheet.xi_f_l57, 0.001); end
  def test_xi_f_m57; assert_in_epsilon(2050, worksheet.xi_f_m57, 0.001); end
  def test_xi_f_d58; assert_in_delta(1, worksheet.xi_f_d58, 0.001); end
  def test_xi_f_e58; assert_in_delta(0, (worksheet.xi_f_e58||0), 0.001); end
  def test_xi_f_f58; assert_in_delta(0, (worksheet.xi_f_f58||0), 0.001); end
  def test_xi_f_g58; assert_in_delta(0, (worksheet.xi_f_g58||0), 0.001); end
  def test_xi_f_h58; assert_in_delta(0, (worksheet.xi_f_h58||0), 0.001); end
  def test_xi_f_i58; assert_in_delta(0, (worksheet.xi_f_i58||0), 0.001); end
  def test_xi_f_j58; assert_in_delta(0, (worksheet.xi_f_j58||0), 0.001); end
  def test_xi_f_k58; assert_in_delta(0, (worksheet.xi_f_k58||0), 0.001); end
  def test_xi_f_l58; assert_in_delta(0, (worksheet.xi_f_l58||0), 0.001); end
  def test_xi_f_m58; assert_in_delta(0, (worksheet.xi_f_m58||0), 0.001); end
  def test_xi_f_d59; assert_in_epsilon(2, worksheet.xi_f_d59, 0.001); end
  def test_xi_f_e59; assert_in_delta(0, (worksheet.xi_f_e59||0), 0.001); end
  def test_xi_f_f59; assert_in_delta(0.33, worksheet.xi_f_f59, 0.001); end
  def test_xi_f_g59; assert_in_delta(0.66, worksheet.xi_f_g59, 0.001); end
  def test_xi_f_h59; assert_in_delta(1, worksheet.xi_f_h59, 0.001); end
  def test_xi_f_i59; assert_in_delta(1, worksheet.xi_f_i59, 0.001); end
  def test_xi_f_j59; assert_in_delta(1, worksheet.xi_f_j59, 0.001); end
  def test_xi_f_k59; assert_in_delta(1, worksheet.xi_f_k59, 0.001); end
  def test_xi_f_l59; assert_in_delta(1, worksheet.xi_f_l59, 0.001); end
  def test_xi_f_m59; assert_in_delta(1, worksheet.xi_f_m59, 0.001); end
  def test_xi_f_d60; assert_in_epsilon(3, worksheet.xi_f_d60, 0.001); end
  def test_xi_f_e60; assert_in_delta(0, (worksheet.xi_f_e60||0), 0.001); end
  def test_xi_f_f60; assert_in_delta(0.33, worksheet.xi_f_f60, 0.001); end
  def test_xi_f_g60; assert_in_delta(0.66, worksheet.xi_f_g60, 0.001); end
  def test_xi_f_h60; assert_in_delta(1, worksheet.xi_f_h60, 0.001); end
  def test_xi_f_i60; assert_in_delta(1, worksheet.xi_f_i60, 0.001); end
  def test_xi_f_j60; assert_in_delta(1, worksheet.xi_f_j60, 0.001); end
  def test_xi_f_k60; assert_in_delta(1, worksheet.xi_f_k60, 0.001); end
  def test_xi_f_l60; assert_in_delta(1, worksheet.xi_f_l60, 0.001); end
  def test_xi_f_m60; assert_in_delta(1, worksheet.xi_f_m60, 0.001); end
  def test_xi_f_d61; assert_in_epsilon(4, worksheet.xi_f_d61, 0.001); end
  def test_xi_f_e61; assert_in_delta(0, (worksheet.xi_f_e61||0), 0.001); end
  def test_xi_f_f61; assert_in_delta(0.33, worksheet.xi_f_f61, 0.001); end
  def test_xi_f_g61; assert_in_delta(0.66, worksheet.xi_f_g61, 0.001); end
  def test_xi_f_h61; assert_in_delta(1, worksheet.xi_f_h61, 0.001); end
  def test_xi_f_i61; assert_in_delta(1, worksheet.xi_f_i61, 0.001); end
  def test_xi_f_j61; assert_in_delta(1, worksheet.xi_f_j61, 0.001); end
  def test_xi_f_k61; assert_in_delta(1, worksheet.xi_f_k61, 0.001); end
  def test_xi_f_l61; assert_in_delta(1, worksheet.xi_f_l61, 0.001); end
  def test_xi_f_m61; assert_in_delta(1, worksheet.xi_f_m61, 0.001); end
  def test_xi_f_b63; assert_in_epsilon(2, worksheet.xi_f_b63, 0.001); end
  def test_xi_f_c63; assert_equal("Alternative fuels (Fuel and Gas to Biomass)", worksheet.xi_f_c63); end
  def test_xi_f_c64; assert_equal("Definition", worksheet.xi_f_c64); end
  def test_xi_f_c65; assert_equal("Conversion of liquid+solid fuels to biomass (switch in KRAFT mills only)", worksheet.xi_f_c65); end
  def test_xi_f_c66; assert_equal("Applied to all volumes", worksheet.xi_f_c66); end
  def test_xi_f_d68; assert_equal("% Switch of liquid+solid to biomass (KRAFT mills represent 30% of liquid+solid fuel use)", worksheet.xi_f_d68); end
  def test_xi_f_d71; assert_equal("Type", worksheet.xi_f_d71); end
  def test_xi_f_e71; assert_in_epsilon(2010, worksheet.xi_f_e71, 0.001); end
  def test_xi_f_f71; assert_in_epsilon(2015, worksheet.xi_f_f71, 0.001); end
  def test_xi_f_g71; assert_in_epsilon(2020, worksheet.xi_f_g71, 0.001); end
  def test_xi_f_h71; assert_in_epsilon(2025, worksheet.xi_f_h71, 0.001); end
  def test_xi_f_i71; assert_in_epsilon(2030, worksheet.xi_f_i71, 0.001); end
  def test_xi_f_j71; assert_in_epsilon(2035, worksheet.xi_f_j71, 0.001); end
  def test_xi_f_k71; assert_in_epsilon(2040, worksheet.xi_f_k71, 0.001); end
  def test_xi_f_l71; assert_in_epsilon(2045, worksheet.xi_f_l71, 0.001); end
  def test_xi_f_m71; assert_in_epsilon(2050, worksheet.xi_f_m71, 0.001); end
  def test_xi_f_n71; assert_equal("Biomass is limited by supply rather than by demand, it is therefore modelled accross all sectors in a consolidated manner, the potential in this sector would be ", worksheet.xi_f_n71); end
  def test_xi_f_d72; assert_in_delta(1, worksheet.xi_f_d72, 0.001); end
  def test_xi_f_e72; assert_in_delta(0, (worksheet.xi_f_e72||0), 0.001); end
  def test_xi_f_f72; assert_in_delta(0, (worksheet.xi_f_f72||0), 0.001); end
  def test_xi_f_g72; assert_in_delta(0, (worksheet.xi_f_g72||0), 0.001); end
  def test_xi_f_h72; assert_in_delta(0, (worksheet.xi_f_h72||0), 0.001); end
  def test_xi_f_i72; assert_in_delta(0, (worksheet.xi_f_i72||0), 0.001); end
  def test_xi_f_j72; assert_in_delta(0, (worksheet.xi_f_j72||0), 0.001); end
  def test_xi_f_k72; assert_in_delta(0, (worksheet.xi_f_k72||0), 0.001); end
  def test_xi_f_l72; assert_in_delta(0, (worksheet.xi_f_l72||0), 0.001); end
  def test_xi_f_m72; assert_in_delta(0, (worksheet.xi_f_m72||0), 0.001); end
  def test_xi_f_n72; assert_equal("no additional shift to biomass", worksheet.xi_f_n72); end
  def test_xi_f_d73; assert_in_epsilon(2, worksheet.xi_f_d73, 0.001); end
  def test_xi_f_e73; assert_in_delta(0, (worksheet.xi_f_e73||0), 0.001); end
  def test_xi_f_f73; assert_in_delta(0.02625, worksheet.xi_f_f73, 0.001); end
  def test_xi_f_g73; assert_in_delta(0.0525, worksheet.xi_f_g73, 0.001); end
  def test_xi_f_h73; assert_in_delta(0.07875, worksheet.xi_f_h73, 0.001); end
  def test_xi_f_i73; assert_in_delta(0.105, worksheet.xi_f_i73, 0.001); end
  def test_xi_f_j73; assert_in_delta(0.13125, worksheet.xi_f_j73, 0.001); end
  def test_xi_f_k73; assert_in_delta(0.1575, worksheet.xi_f_k73, 0.001); end
  def test_xi_f_l73; assert_in_delta(0.18375, worksheet.xi_f_l73, 0.001); end
  def test_xi_f_m73; assert_in_delta(0.21, worksheet.xi_f_m73, 0.001); end
  def test_xi_f_n73; assert_equal("70% additional shift to biomass use in KRAFT mill", worksheet.xi_f_n73); end
  def test_xi_f_d74; assert_in_epsilon(3, worksheet.xi_f_d74, 0.001); end
  def test_xi_f_e74; assert_in_delta(0, (worksheet.xi_f_e74||0), 0.001); end
  def test_xi_f_f74; assert_in_delta(0.031875, worksheet.xi_f_f74, 0.001); end
  def test_xi_f_g74; assert_in_delta(0.06375, worksheet.xi_f_g74, 0.001); end
  def test_xi_f_h74; assert_in_delta(0.095625, worksheet.xi_f_h74, 0.001); end
  def test_xi_f_i74; assert_in_delta(0.1275, worksheet.xi_f_i74, 0.001); end
  def test_xi_f_j74; assert_in_delta(0.159375, worksheet.xi_f_j74, 0.001); end
  def test_xi_f_k74; assert_in_delta(0.19124999999999998, worksheet.xi_f_k74, 0.001); end
  def test_xi_f_l74; assert_in_delta(0.22312499999999996, worksheet.xi_f_l74, 0.001); end
  def test_xi_f_m74; assert_in_delta(0.255, worksheet.xi_f_m74, 0.001); end
  def test_xi_f_n74; assert_equal("85% additional shift to biomass use in KRAFT mill", worksheet.xi_f_n74); end
  def test_xi_f_d75; assert_in_epsilon(4, worksheet.xi_f_d75, 0.001); end
  def test_xi_f_e75; assert_in_delta(0, (worksheet.xi_f_e75||0), 0.001); end
  def test_xi_f_f75; assert_in_delta(0.0375, worksheet.xi_f_f75, 0.001); end
  def test_xi_f_g75; assert_in_delta(0.075, worksheet.xi_f_g75, 0.001); end
  def test_xi_f_h75; assert_in_delta(0.11249999999999999, worksheet.xi_f_h75, 0.001); end
  def test_xi_f_i75; assert_in_delta(0.15, worksheet.xi_f_i75, 0.001); end
  def test_xi_f_j75; assert_in_delta(0.1875, worksheet.xi_f_j75, 0.001); end
  def test_xi_f_k75; assert_in_delta(0.225, worksheet.xi_f_k75, 0.001); end
  def test_xi_f_l75; assert_in_delta(0.2625, worksheet.xi_f_l75, 0.001); end
  def test_xi_f_m75; assert_in_delta(0.3, worksheet.xi_f_m75, 0.001); end
  def test_xi_f_n75; assert_equal("95% additional shift to biomass use in KRAFT mill", worksheet.xi_f_n75); end
  def test_xi_f_b77; assert_equal("(Ic) Paper CCS intensity", worksheet.xi_f_b77); end
  def test_xi_f_c78; assert_equal("Definition", worksheet.xi_f_c78); end
  def test_xi_f_c80; assert_equal("Black liquour gasification + CCS (applied to % of production in kton)", worksheet.xi_f_c80); end
  def test_xi_f_d83; assert_equal("Type", worksheet.xi_f_d83); end
  def test_xi_f_e83; assert_in_epsilon(2010, worksheet.xi_f_e83, 0.001); end
  def test_xi_f_f83; assert_in_epsilon(2015, worksheet.xi_f_f83, 0.001); end
  def test_xi_f_g83; assert_in_epsilon(2020, worksheet.xi_f_g83, 0.001); end
  def test_xi_f_h83; assert_in_epsilon(2025, worksheet.xi_f_h83, 0.001); end
  def test_xi_f_i83; assert_in_epsilon(2030, worksheet.xi_f_i83, 0.001); end
  def test_xi_f_j83; assert_in_epsilon(2035, worksheet.xi_f_j83, 0.001); end
  def test_xi_f_k83; assert_in_epsilon(2040, worksheet.xi_f_k83, 0.001); end
  def test_xi_f_l83; assert_in_epsilon(2045, worksheet.xi_f_l83, 0.001); end
  def test_xi_f_m83; assert_in_epsilon(2050, worksheet.xi_f_m83, 0.001); end
  def test_xi_f_d84; assert_in_delta(1, worksheet.xi_f_d84, 0.001); end
  def test_xi_f_e84; assert_in_delta(0, (worksheet.xi_f_e84||0), 0.001); end
  def test_xi_f_f84; assert_in_delta(0, (worksheet.xi_f_f84||0), 0.001); end
  def test_xi_f_g84; assert_in_delta(0, (worksheet.xi_f_g84||0), 0.001); end
  def test_xi_f_h84; assert_in_delta(0, (worksheet.xi_f_h84||0), 0.001); end
  def test_xi_f_i84; assert_in_delta(0, (worksheet.xi_f_i84||0), 0.001); end
  def test_xi_f_j84; assert_in_delta(0, (worksheet.xi_f_j84||0), 0.001); end
  def test_xi_f_k84; assert_in_delta(0, (worksheet.xi_f_k84||0), 0.001); end
  def test_xi_f_l84; assert_in_delta(0, (worksheet.xi_f_l84||0), 0.001); end
  def test_xi_f_m84; assert_in_delta(0, (worksheet.xi_f_m84||0), 0.001); end
  def test_xi_f_d85; assert_in_epsilon(2, worksheet.xi_f_d85, 0.001); end
  def test_xi_f_e85; assert_in_delta(0, (worksheet.xi_f_e85||0), 0.001); end
  def test_xi_f_f85; assert_in_delta(0, (worksheet.xi_f_f85||0), 0.001); end
  def test_xi_f_g85; assert_in_delta(0, (worksheet.xi_f_g85||0), 0.001); end
  def test_xi_f_h85; assert_in_delta(0, (worksheet.xi_f_h85||0), 0.001); end
  def test_xi_f_i85; assert_in_delta(0, (worksheet.xi_f_i85||0), 0.001); end
  def test_xi_f_j85; assert_in_delta(0, (worksheet.xi_f_j85||0), 0.001); end
  def test_xi_f_k85; assert_in_delta(0, (worksheet.xi_f_k85||0), 0.001); end
  def test_xi_f_l85; assert_in_delta(0, (worksheet.xi_f_l85||0), 0.001); end
  def test_xi_f_m85; assert_in_delta(0, (worksheet.xi_f_m85||0), 0.001); end
  def test_xi_f_d86; assert_in_epsilon(3, worksheet.xi_f_d86, 0.001); end
  def test_xi_f_e86; assert_in_delta(0, (worksheet.xi_f_e86||0), 0.001); end
  def test_xi_f_f86; assert_in_delta(0, (worksheet.xi_f_f86||0), 0.001); end
  def test_xi_f_g86; assert_in_delta(0, (worksheet.xi_f_g86||0), 0.001); end
  def test_xi_f_h86; assert_in_delta(0, (worksheet.xi_f_h86||0), 0.001); end
  def test_xi_f_i86; assert_in_delta(0, (worksheet.xi_f_i86||0), 0.001); end
  def test_xi_f_j86; assert_in_delta(0, (worksheet.xi_f_j86||0), 0.001); end
  def test_xi_f_k86; assert_in_delta(0, (worksheet.xi_f_k86||0), 0.001); end
  def test_xi_f_l86; assert_in_delta(0, (worksheet.xi_f_l86||0), 0.001); end
  def test_xi_f_m86; assert_in_delta(0, (worksheet.xi_f_m86||0), 0.001); end
  def test_xi_f_d87; assert_in_epsilon(4, worksheet.xi_f_d87, 0.001); end
  def test_xi_f_e87; assert_in_delta(0, (worksheet.xi_f_e87||0), 0.001); end
  def test_xi_f_f87; assert_in_delta(0, (worksheet.xi_f_f87||0), 0.001); end
  def test_xi_f_g87; assert_in_delta(0, (worksheet.xi_f_g87||0), 0.001); end
  def test_xi_f_h87; assert_in_delta(0, (worksheet.xi_f_h87||0), 0.001); end
  def test_xi_f_i87; assert_in_delta(0, (worksheet.xi_f_i87||0), 0.001); end
  def test_xi_f_j87; assert_in_delta(0.15, worksheet.xi_f_j87, 0.001); end
  def test_xi_f_k87; assert_in_delta(0.15, worksheet.xi_f_k87, 0.001); end
  def test_xi_f_l87; assert_in_delta(0.15, worksheet.xi_f_l87, 0.001); end
  def test_xi_f_m87; assert_in_delta(0.15, worksheet.xi_f_m87, 0.001); end
  def test_xi_f_n87; assert_equal("Operational in 2035; application in KRAFT mill (Burgo Ardennes)", worksheet.xi_f_n87); end
  def test_xi_f_c89; assert_equal("Chosen trajectory (% of production in kton)", worksheet.xi_f_c89); end
  def test_xi_f_c90; assert_equal("Product type", worksheet.xi_f_c90); end
  def test_xi_f_d90; assert_equal("Description", worksheet.xi_f_d90); end
  def test_xi_f_e90; assert_in_epsilon(2010, worksheet.xi_f_e90, 0.001); end
  def test_xi_f_f90; assert_in_epsilon(2015, worksheet.xi_f_f90, 0.001); end
  def test_xi_f_g90; assert_in_epsilon(2020, worksheet.xi_f_g90, 0.001); end
  def test_xi_f_h90; assert_in_epsilon(2025, worksheet.xi_f_h90, 0.001); end
  def test_xi_f_i90; assert_in_epsilon(2030, worksheet.xi_f_i90, 0.001); end
  def test_xi_f_j90; assert_in_epsilon(2035, worksheet.xi_f_j90, 0.001); end
  def test_xi_f_k90; assert_in_epsilon(2040, worksheet.xi_f_k90, 0.001); end
  def test_xi_f_l90; assert_in_epsilon(2045, worksheet.xi_f_l90, 0.001); end
  def test_xi_f_m90; assert_in_epsilon(2050, worksheet.xi_f_m90, 0.001); end
  def test_xi_f_c91; assert_equal("(i)", worksheet.xi_f_c91); end
  def test_xi_f_d91; assert_equal("Black liquor gasification", worksheet.xi_f_d91); end
  def test_xi_f_c93; assert_equal("End of pipe CO2 capture and storage (not applied in paper sector - only pre-combustion capture and storage with black liquor gasification)", worksheet.xi_f_c93); end
  def test_xi_f_d95; assert_equal("Type", worksheet.xi_f_d95); end
  def test_xi_f_e95; assert_in_epsilon(2010, worksheet.xi_f_e95, 0.001); end
  def test_xi_f_f95; assert_in_epsilon(2015, worksheet.xi_f_f95, 0.001); end
  def test_xi_f_g95; assert_in_epsilon(2020, worksheet.xi_f_g95, 0.001); end
  def test_xi_f_h95; assert_in_epsilon(2025, worksheet.xi_f_h95, 0.001); end
  def test_xi_f_i95; assert_in_epsilon(2030, worksheet.xi_f_i95, 0.001); end
  def test_xi_f_j95; assert_in_epsilon(2035, worksheet.xi_f_j95, 0.001); end
  def test_xi_f_k95; assert_in_epsilon(2040, worksheet.xi_f_k95, 0.001); end
  def test_xi_f_l95; assert_in_epsilon(2045, worksheet.xi_f_l95, 0.001); end
  def test_xi_f_m95; assert_in_epsilon(2050, worksheet.xi_f_m95, 0.001); end
  def test_xi_f_d96; assert_in_delta(1, worksheet.xi_f_d96, 0.001); end
  def test_xi_f_e96; assert_in_delta(0, (worksheet.xi_f_e96||0), 0.001); end
  def test_xi_f_f96; assert_in_delta(0, (worksheet.xi_f_f96||0), 0.001); end
  def test_xi_f_g96; assert_in_delta(0, (worksheet.xi_f_g96||0), 0.001); end
  def test_xi_f_h96; assert_in_delta(0, (worksheet.xi_f_h96||0), 0.001); end
  def test_xi_f_i96; assert_in_delta(0, (worksheet.xi_f_i96||0), 0.001); end
  def test_xi_f_j96; assert_in_delta(0, (worksheet.xi_f_j96||0), 0.001); end
  def test_xi_f_k96; assert_in_delta(0, (worksheet.xi_f_k96||0), 0.001); end
  def test_xi_f_l96; assert_in_delta(0, (worksheet.xi_f_l96||0), 0.001); end
  def test_xi_f_m96; assert_in_delta(0, (worksheet.xi_f_m96||0), 0.001); end
  def test_xi_f_d97; assert_in_epsilon(2, worksheet.xi_f_d97, 0.001); end
  def test_xi_f_e97; assert_in_delta(0, (worksheet.xi_f_e97||0), 0.001); end
  def test_xi_f_f97; assert_in_delta(0, (worksheet.xi_f_f97||0), 0.001); end
  def test_xi_f_g97; assert_in_delta(0, (worksheet.xi_f_g97||0), 0.001); end
  def test_xi_f_h97; assert_in_delta(0, (worksheet.xi_f_h97||0), 0.001); end
  def test_xi_f_i97; assert_in_delta(0, (worksheet.xi_f_i97||0), 0.001); end
  def test_xi_f_j97; assert_in_delta(0, (worksheet.xi_f_j97||0), 0.001); end
  def test_xi_f_k97; assert_in_delta(0, (worksheet.xi_f_k97||0), 0.001); end
  def test_xi_f_l97; assert_in_delta(0, (worksheet.xi_f_l97||0), 0.001); end
  def test_xi_f_m97; assert_in_delta(0, (worksheet.xi_f_m97||0), 0.001); end
  def test_xi_f_d98; assert_in_epsilon(3, worksheet.xi_f_d98, 0.001); end
  def test_xi_f_e98; assert_in_delta(0, (worksheet.xi_f_e98||0), 0.001); end
  def test_xi_f_f98; assert_in_delta(0, (worksheet.xi_f_f98||0), 0.001); end
  def test_xi_f_g98; assert_in_delta(0, (worksheet.xi_f_g98||0), 0.001); end
  def test_xi_f_h98; assert_in_delta(0, (worksheet.xi_f_h98||0), 0.001); end
  def test_xi_f_i98; assert_in_delta(0, (worksheet.xi_f_i98||0), 0.001); end
  def test_xi_f_j98; assert_in_delta(0, (worksheet.xi_f_j98||0), 0.001); end
  def test_xi_f_k98; assert_in_delta(0, (worksheet.xi_f_k98||0), 0.001); end
  def test_xi_f_l98; assert_in_delta(0, (worksheet.xi_f_l98||0), 0.001); end
  def test_xi_f_m98; assert_in_delta(0, (worksheet.xi_f_m98||0), 0.001); end
  def test_xi_f_d99; assert_in_epsilon(4, worksheet.xi_f_d99, 0.001); end
  def test_xi_f_e99; assert_in_delta(0, (worksheet.xi_f_e99||0), 0.001); end
  def test_xi_f_f99; assert_in_delta(0, (worksheet.xi_f_f99||0), 0.001); end
  def test_xi_f_g99; assert_in_delta(0, (worksheet.xi_f_g99||0), 0.001); end
  def test_xi_f_h99; assert_in_delta(0, (worksheet.xi_f_h99||0), 0.001); end
  def test_xi_f_i99; assert_in_delta(0, (worksheet.xi_f_i99||0), 0.001); end
  def test_xi_f_j99; assert_in_delta(0, (worksheet.xi_f_j99||0), 0.001); end
  def test_xi_f_k99; assert_in_delta(0, (worksheet.xi_f_k99||0), 0.001); end
  def test_xi_f_l99; assert_in_delta(0, (worksheet.xi_f_l99||0), 0.001); end
  def test_xi_f_m99; assert_in_delta(0, (worksheet.xi_f_m99||0), 0.001); end
  def test_xi_f_c101; assert_equal("Chosen trajectory (% CO2 captured)", worksheet.xi_f_c101); end
  def test_xi_f_c102; assert_equal("Product type", worksheet.xi_f_c102); end
  def test_xi_f_d102; assert_equal("Description", worksheet.xi_f_d102); end
  def test_xi_f_e102; assert_in_epsilon(2010, worksheet.xi_f_e102, 0.001); end
  def test_xi_f_f102; assert_in_epsilon(2015, worksheet.xi_f_f102, 0.001); end
  def test_xi_f_g102; assert_in_epsilon(2020, worksheet.xi_f_g102, 0.001); end
  def test_xi_f_h102; assert_in_epsilon(2025, worksheet.xi_f_h102, 0.001); end
  def test_xi_f_i102; assert_in_epsilon(2030, worksheet.xi_f_i102, 0.001); end
  def test_xi_f_j102; assert_in_epsilon(2035, worksheet.xi_f_j102, 0.001); end
  def test_xi_f_k102; assert_in_epsilon(2040, worksheet.xi_f_k102, 0.001); end
  def test_xi_f_l102; assert_in_epsilon(2045, worksheet.xi_f_l102, 0.001); end
  def test_xi_f_m102; assert_in_epsilon(2050, worksheet.xi_f_m102, 0.001); end
  def test_xi_f_c103; assert_equal("(i)", worksheet.xi_f_c103); end
  def test_xi_f_d103; assert_equal("Carbon capture and storage", worksheet.xi_f_d103); end
  def test_xi_f_e103; assert_in_delta(0, (worksheet.xi_f_e103||0), 0.001); end
  def test_xi_f_f103; assert_in_delta(0, (worksheet.xi_f_f103||0), 0.001); end
  def test_xi_f_g103; assert_in_delta(0, (worksheet.xi_f_g103||0), 0.001); end
  def test_xi_f_h103; assert_in_delta(0, (worksheet.xi_f_h103||0), 0.001); end
  def test_xi_f_i103; assert_in_delta(0, (worksheet.xi_f_i103||0), 0.001); end
  def test_xi_f_j103; assert_in_delta(0, (worksheet.xi_f_j103||0), 0.001); end
  def test_xi_f_k103; assert_in_delta(0, (worksheet.xi_f_k103||0), 0.001); end
  def test_xi_f_l103; assert_in_delta(0, (worksheet.xi_f_l103||0), 0.001); end
  def test_xi_f_m103; assert_in_delta(0, (worksheet.xi_f_m103||0), 0.001); end
  def test_xi_f_b106; assert_equal("Fixed assumptions", worksheet.xi_f_b106); end
  def test_xi_f_c108; assert_equal("Baseline production (Kt, 2010)", worksheet.xi_f_c108); end
  def test_xi_f_c110; assert_equal("Product type", worksheet.xi_f_c110); end
  def test_xi_f_d110; assert_equal("Description", worksheet.xi_f_d110); end
  def test_xi_f_e110; assert_equal("Production", worksheet.xi_f_e110); end
  def test_xi_f_f110; assert_equal("Notes", worksheet.xi_f_f110); end
  def test_xi_f_c111; assert_equal("(i)", worksheet.xi_f_c111); end
  def test_xi_f_d111; assert_equal("Pulp & Paper", worksheet.xi_f_d111); end
  def test_xi_f_e111; assert_in_epsilon(2472, worksheet.xi_f_e111, 0.001); end
  def test_xi_f_f111; assert_equal("Data Cobelpa", worksheet.xi_f_f111); end
  def test_xi_f_c113; assert_equal("Baseline energy consumption, electricity (without CHP), fuels (with CHP) (TWh, 2010)", worksheet.xi_f_c113); end
  def test_xi_f_o113; assert_equal("Baseline energy consumption, CHPs (TWh, 2010)", worksheet.xi_f_o113); end
  def test_xi_f_z113; assert_equal("TWh/kton paper", worksheet.xi_f_z113); end
  def test_xi_f_e114; assert_equal("V.01", worksheet.xi_f_e114); end
  def test_xi_f_f114; assert_equal("V.03", worksheet.xi_f_f114); end
  def test_xi_f_g114; assert_equal("V.05", worksheet.xi_f_g114); end
  def test_xi_f_h114; assert_equal("V.04", worksheet.xi_f_h114); end
  def test_xi_f_i114; assert_equal("V.10", worksheet.xi_f_i114); end
  def test_xi_f_j114; assert_equal("V.07", worksheet.xi_f_j114); end
  def test_xi_f_q114; assert_equal("V.01", worksheet.xi_f_q114); end
  def test_xi_f_r114; assert_equal("V.03", worksheet.xi_f_r114); end
  def test_xi_f_s114; assert_equal("V.05", worksheet.xi_f_s114); end
  def test_xi_f_t114; assert_equal("V.04", worksheet.xi_f_t114); end
  def test_xi_f_u114; assert_equal("V.10", worksheet.xi_f_u114); end
  def test_xi_f_v114; assert_equal("V.07", worksheet.xi_f_v114); end
  def test_xi_f_z114; assert_equal("V.01", worksheet.xi_f_z114); end
  def test_xi_f_aa114; assert_equal("V.03", worksheet.xi_f_aa114); end
  def test_xi_f_ab114; assert_equal("V.05", worksheet.xi_f_ab114); end
  def test_xi_f_ac114; assert_equal("V.04", worksheet.xi_f_ac114); end
  def test_xi_f_ad114; assert_equal("V.10", worksheet.xi_f_ad114); end
  def test_xi_f_ae114; assert_equal("V.07", worksheet.xi_f_ae114); end
  def test_xi_f_c115; assert_equal("Product type", worksheet.xi_f_c115); end
  def test_xi_f_d115; assert_equal("Description", worksheet.xi_f_d115); end
  def test_xi_f_e115; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_e115); end
  def test_xi_f_f115; assert_equal("Solid hydrocarbons", worksheet.xi_f_f115); end
  def test_xi_f_g115; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_g115); end
  def test_xi_f_h115; assert_equal("Liquid hydrocarbons", worksheet.xi_f_h115); end
  def test_xi_f_i115; assert_equal("Wet biomass and waste", worksheet.xi_f_i115); end
  def test_xi_f_j115; assert_equal("Heat transport", worksheet.xi_f_j115); end
  def test_xi_f_k115; assert_equal("Total", worksheet.xi_f_k115); end
  def test_xi_f_l115; assert_equal("Notes", worksheet.xi_f_l115); end
  def test_xi_f_o115; assert_equal("Product type", worksheet.xi_f_o115); end
  def test_xi_f_p115; assert_equal("Description", worksheet.xi_f_p115); end
  def test_xi_f_q115; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_q115); end
  def test_xi_f_r115; assert_equal("Solid hydrocarbons", worksheet.xi_f_r115); end
  def test_xi_f_s115; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_s115); end
  def test_xi_f_t115; assert_equal("Liquid hydrocarbons", worksheet.xi_f_t115); end
  def test_xi_f_u115; assert_equal("Wet biomass and waste", worksheet.xi_f_u115); end
  def test_xi_f_v115; assert_equal("Heat transport", worksheet.xi_f_v115); end
  def test_xi_f_w115; assert_equal("Total", worksheet.xi_f_w115); end
  def test_xi_f_x115; assert_equal("Notes", worksheet.xi_f_x115); end
  def test_xi_f_z115; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_z115); end
  def test_xi_f_aa115; assert_equal("Solid hydrocarbons", worksheet.xi_f_aa115); end
  def test_xi_f_ab115; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_ab115); end
  def test_xi_f_ac115; assert_equal("Liquid hydrocarbons", worksheet.xi_f_ac115); end
  def test_xi_f_ad115; assert_equal("Wet biomass and waste", worksheet.xi_f_ad115); end
  def test_xi_f_ae115; assert_equal("Heat transport", worksheet.xi_f_ae115); end
  def test_xi_f_af115; assert_equal("Total", worksheet.xi_f_af115); end
  def test_xi_f_c116; assert_equal("(i)", worksheet.xi_f_c116); end
  def test_xi_f_d116; assert_equal("Pulp & paper", worksheet.xi_f_d116); end
  def test_xi_f_e116; assert_in_epsilon(3.572788, worksheet.xi_f_e116, 0.001); end
  def test_xi_f_f116; assert_in_delta(0.33, worksheet.xi_f_f116, 0.001); end
  def test_xi_f_g116; assert_in_epsilon(2.996862, worksheet.xi_f_g116, 0.001); end
  def test_xi_f_h116; assert_in_delta(0.45363, worksheet.xi_f_h116, 0.001); end
  def test_xi_f_i116; assert_in_epsilon(7.949501, worksheet.xi_f_i116, 0.001); end
  def test_xi_f_j116; assert_in_delta(0, (worksheet.xi_f_j116||0), 0.001); end
  def test_xi_f_k116; assert_in_epsilon(15.302781, worksheet.xi_f_k116, 0.001); end
  def test_xi_f_l116; assert_equal("NIR CRF + energy balances (Wal 2008, Fl 2010)", worksheet.xi_f_l116); end
  def test_xi_f_o116; assert_equal("(i)", worksheet.xi_f_o116); end
  def test_xi_f_p116; assert_equal("Pulp & paper", worksheet.xi_f_p116); end
  def test_xi_f_q116; assert_in_delta(-0.9461666666666666, worksheet.xi_f_q116, 0.001); end
  def test_xi_f_r116; assert_in_delta(0, (worksheet.xi_f_r116||0), 0.001); end
  def test_xi_f_s116; assert_in_delta(0.0012762555555555556, worksheet.xi_f_s116, 0.001); end
  def test_xi_f_t116; assert_in_delta(0.2398, worksheet.xi_f_t116, 0.001); end
  def test_xi_f_u116; assert_in_epsilon(2.8796005230555553, worksheet.xi_f_u116, 0.001); end
  def test_xi_f_v116; assert_in_delta(0, (worksheet.xi_f_v116||0), 0.001); end
  def test_xi_f_w116; assert_in_epsilon(2.174510111944444, worksheet.xi_f_w116, 0.001); end
  def test_xi_f_z116; assert_in_delta(0.0014453025889967638, worksheet.xi_f_z116, 0.001); end
  def test_xi_f_aa116; assert_in_delta(0.00013349514563106796, worksheet.xi_f_aa116, 0.001); end
  def test_xi_f_ab116; assert_in_delta(0.0012123228155339807, worksheet.xi_f_ab116, 0.001); end
  def test_xi_f_ac116; assert_in_delta(0.00018350728155339804, worksheet.xi_f_ac116, 0.001); end
  def test_xi_f_ad116; assert_in_delta(0.003215817556634304, worksheet.xi_f_ad116, 0.001); end
  def test_xi_f_ae116; assert_in_delta(0, (worksheet.xi_f_ae116||0), 0.001); end
  def test_xi_f_af116; assert_in_delta(0.006190445388349514, worksheet.xi_f_af116, 0.001); end
  def test_xi_f_d117; assert_equal("Total", worksheet.xi_f_d117); end
  def test_xi_f_e117; assert_in_epsilon(3.572788, worksheet.xi_f_e117, 0.001); end
  def test_xi_f_f117; assert_in_delta(0.33, worksheet.xi_f_f117, 0.001); end
  def test_xi_f_g117; assert_in_epsilon(2.996862, worksheet.xi_f_g117, 0.001); end
  def test_xi_f_h117; assert_in_delta(0.45363, worksheet.xi_f_h117, 0.001); end
  def test_xi_f_i117; assert_in_epsilon(7.949501, worksheet.xi_f_i117, 0.001); end
  def test_xi_f_j117; assert_in_delta(0, (worksheet.xi_f_j117||0), 0.001); end
  def test_xi_f_k117; assert_in_epsilon(15.302781, worksheet.xi_f_k117, 0.001); end
  def test_xi_f_l117; assert_equal("other fuels' added to solid ", worksheet.xi_f_l117); end
  def test_xi_f_p117; assert_equal("Total", worksheet.xi_f_p117); end
  def test_xi_f_q117; assert_in_delta(-0.9461666666666666, worksheet.xi_f_q117, 0.001); end
  def test_xi_f_r117; assert_in_delta(0, (worksheet.xi_f_r117||0), 0.001); end
  def test_xi_f_s117; assert_in_delta(0.0012762555555555556, worksheet.xi_f_s117, 0.001); end
  def test_xi_f_t117; assert_in_delta(0.2398, worksheet.xi_f_t117, 0.001); end
  def test_xi_f_u117; assert_in_epsilon(2.8796005230555553, worksheet.xi_f_u117, 0.001); end
  def test_xi_f_v117; assert_in_delta(0, (worksheet.xi_f_v117||0), 0.001); end
  def test_xi_f_w117; assert_in_epsilon(2.174510111944444, worksheet.xi_f_w117, 0.001); end
  def test_xi_f_z117; assert_in_delta(0.0014453025889967638, worksheet.xi_f_z117, 0.001); end
  def test_xi_f_aa117; assert_in_delta(0.00013349514563106796, worksheet.xi_f_aa117, 0.001); end
  def test_xi_f_ab117; assert_in_delta(0.0012123228155339807, worksheet.xi_f_ab117, 0.001); end
  def test_xi_f_ac117; assert_in_delta(0.00018350728155339804, worksheet.xi_f_ac117, 0.001); end
  def test_xi_f_ad117; assert_in_delta(0.003215817556634304, worksheet.xi_f_ad117, 0.001); end
  def test_xi_f_ae117; assert_in_delta(0, (worksheet.xi_f_ae117||0), 0.001); end
  def test_xi_f_af117; assert_in_delta(0.006190445388349514, worksheet.xi_f_af117, 0.001); end
  def test_xi_f_e118; assert_in_delta(0.23347311838286128, worksheet.xi_f_e118, 0.001); end
  def test_xi_f_f118; assert_in_delta(0.0215647077482191, worksheet.xi_f_f118, 0.001); end
  def test_xi_f_g118; assert_in_delta(0.19583773694467693, worksheet.xi_f_g118, 0.001); end
  def test_xi_f_h118; assert_in_delta(0.029643631441892818, worksheet.xi_f_h118, 0.001); end
  def test_xi_f_i118; assert_in_delta(0.5194808054823499, worksheet.xi_f_i118, 0.001); end
  def test_xi_f_j118; assert_in_delta(0, (worksheet.xi_f_j118||0), 0.001); end
  def test_xi_f_q118; assert_in_delta(-0.43511716108811543, worksheet.xi_f_q118, 0.001); end
  def test_xi_f_r118; assert_in_delta(0, (worksheet.xi_f_r118||0), 0.001); end
  def test_xi_f_s118; assert_in_delta(0.0005869163581006894, worksheet.xi_f_s118, 0.001); end
  def test_xi_f_t118; assert_in_delta(0.1102777120615784, worksheet.xi_f_t118, 0.001); end
  def test_xi_f_u118; assert_in_epsilon(1.3242525326684365, worksheet.xi_f_u118, 0.001); end
  def test_xi_f_v118; assert_in_delta(0, (worksheet.xi_f_v118||0), 0.001); end
  def test_xi_f_d119; assert_equal("Emission factor (%tCO2e/TWh)", worksheet.xi_f_d119); end
  def test_xi_f_e119; assert_in_delta(0, (worksheet.xi_f_e119||0), 0.001); end
  def test_xi_f_f119; assert_in_delta(0.3080027598822048, worksheet.xi_f_f119, 0.001); end
  def test_xi_f_g119; assert_in_delta(0.20134308994438768, worksheet.xi_f_g119, 0.001); end
  def test_xi_f_h119; assert_in_delta(0.2622619630151266, worksheet.xi_f_h119, 0.001); end
  def test_xi_f_i119; assert_in_delta(0, (worksheet.xi_f_i119||0), 0.001); end
  def test_xi_f_j119; assert_in_delta(0, (worksheet.xi_f_j119||0), 0.001); end
  def test_xi_f_d120; assert_equal("Energy emissions (tCO2e)", worksheet.xi_f_d120); end
  def test_xi_f_e120; assert_in_delta(0, (worksheet.xi_f_e120||0), 0.001); end
  def test_xi_f_f120; assert_in_delta(0.10164091076112759, worksheet.xi_f_f120, 0.001); end
  def test_xi_f_g120; assert_in_delta(0.6033974552169176, worksheet.xi_f_g120, 0.001); end
  def test_xi_f_h120; assert_in_delta(0.11896989428255188, worksheet.xi_f_h120, 0.001); end
  def test_xi_f_i120; assert_in_delta(0, (worksheet.xi_f_i120||0), 0.001); end
  def test_xi_f_j120; assert_in_delta(0, (worksheet.xi_f_j120||0), 0.001); end
  def test_xi_f_k120; assert_in_delta(0.824008260260597, worksheet.xi_f_k120, 0.001); end
  def test_xi_f_c121; assert_equal("Baseline process emissions (MMtCO2e, 2010)", worksheet.xi_f_c121); end
  def test_xi_f_c123; assert_equal("Product type", worksheet.xi_f_c123); end
  def test_xi_f_d123; assert_equal("Description", worksheet.xi_f_d123); end
  def test_xi_f_f123; assert_equal("Notes", worksheet.xi_f_f123); end
  def test_xi_f_c124; assert_equal("(i)", worksheet.xi_f_c124); end
  def test_xi_f_d124; assert_equal("Paper", worksheet.xi_f_d124); end
  def test_xi_f_e124; assert_in_delta(0, (worksheet.xi_f_e124||0), 0.001); end
  def test_xi_f_o124; assert_in_delta(0, (worksheet.xi_f_o124||0), 0.001); end
  def test_xi_f_d125; assert_equal("Total", worksheet.xi_f_d125); end
  def test_xi_f_e125; assert_in_delta(0, (worksheet.xi_f_e125||0), 0.001); end
  def test_xi_f_b128; assert_equal("Costs", worksheet.xi_f_b128); end
  def test_xi_f_c129; assert_equal("Costs are modelled through fuel prices, Capex and opex.", worksheet.xi_f_c129); end
  def test_xi_f_c130; assert_equal("Energy prices are modelled per year", worksheet.xi_f_c130); end
  def test_xi_f_n130; assert_equal("MEUR/TWh", worksheet.xi_f_n130); end
  def test_xi_f_c131; assert_equal("Vector", worksheet.xi_f_c131); end
  def test_xi_f_d131; assert_equal("Description", worksheet.xi_f_d131); end
  def test_xi_f_f131; assert_in_epsilon(2010, worksheet.xi_f_f131, 0.001); end
  def test_xi_f_g131; assert_in_epsilon(2015, worksheet.xi_f_g131, 0.001); end
  def test_xi_f_h131; assert_in_epsilon(2020, worksheet.xi_f_h131, 0.001); end
  def test_xi_f_i131; assert_in_epsilon(2025, worksheet.xi_f_i131, 0.001); end
  def test_xi_f_j131; assert_in_epsilon(2030, worksheet.xi_f_j131, 0.001); end
  def test_xi_f_k131; assert_in_epsilon(2035, worksheet.xi_f_k131, 0.001); end
  def test_xi_f_l131; assert_in_epsilon(2040, worksheet.xi_f_l131, 0.001); end
  def test_xi_f_m131; assert_in_epsilon(2045, worksheet.xi_f_m131, 0.001); end
  def test_xi_f_n131; assert_in_epsilon(2050, worksheet.xi_f_n131, 0.001); end
  def test_xi_f_c132; assert_equal("V.01", worksheet.xi_f_c132); end
  def test_xi_f_d132; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_d132); end
  def test_xi_f_f132; assert_in_epsilon(62.51919507647098, worksheet.xi_f_f132, 0.001); end
  def test_xi_f_g132; assert_in_epsilon(68.19582116426872, worksheet.xi_f_g132, 0.001); end
  def test_xi_f_h132; assert_in_epsilon(75.74196055351227, worksheet.xi_f_h132, 0.001); end
  def test_xi_f_i132; assert_in_epsilon(97.28706468235157, worksheet.xi_f_i132, 0.001); end
  def test_xi_f_j132; assert_in_epsilon(93.1851479380366, worksheet.xi_f_j132, 0.001); end
  def test_xi_f_k132; assert_in_epsilon(89.02450255218142, worksheet.xi_f_k132, 0.001); end
  def test_xi_f_l132; assert_in_epsilon(86.25109814628419, worksheet.xi_f_l132, 0.001); end
  def test_xi_f_m132; assert_in_epsilon(83.80479841208917, worksheet.xi_f_m132, 0.001); end
  def test_xi_f_n132; assert_in_epsilon(81.27018968685324, worksheet.xi_f_n132, 0.001); end
  def test_xi_f_o132; assert_equal("double count with electricity generation cost removed in consolidation section, this is approximate modeling in the sense a +/-15% is applied between the min and the max", worksheet.xi_f_o132); end
  def test_xi_f_c133; assert_equal("V.03", worksheet.xi_f_c133); end
  def test_xi_f_d133; assert_equal("Solid hydrocarbons", worksheet.xi_f_d133); end
  def test_xi_f_f133; assert_in_epsilon(10.520431649379864, worksheet.xi_f_f133, 0.001); end
  def test_xi_f_g133; assert_in_epsilon(12.098496396786842, worksheet.xi_f_g133, 0.001); end
  def test_xi_f_h133; assert_in_epsilon(11.160931027596718, worksheet.xi_f_h133, 0.001); end
  def test_xi_f_i133; assert_in_epsilon(10.00869327552178, worksheet.xi_f_i133, 0.001); end
  def test_xi_f_j133; assert_in_epsilon(8.641783140562028, worksheet.xi_f_j133, 0.001); end
  def test_xi_f_k133; assert_in_epsilon(8.4228775010162, worksheet.xi_f_k133, 0.001); end
  def test_xi_f_l133; assert_in_epsilon(8.19480002633699, worksheet.xi_f_l133, 0.001); end
  def test_xi_f_m133; assert_in_epsilon(7.957550716524399, worksheet.xi_f_m133, 0.001); end
  def test_xi_f_n133; assert_in_epsilon(7.711129571578426, worksheet.xi_f_n133, 0.001); end
  def test_xi_f_o133; assert_equal("global assumptions", worksheet.xi_f_o133); end
  def test_xi_f_c134; assert_equal("V.05", worksheet.xi_f_c134); end
  def test_xi_f_d134; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_d134); end
  def test_xi_f_f134; assert_in_epsilon(26.991577393952404, worksheet.xi_f_f134, 0.001); end
  def test_xi_f_g134; assert_in_epsilon(31.040314003045264, worksheet.xi_f_g134, 0.001); end
  def test_xi_f_h134; assert_in_epsilon(32.02572079679274, worksheet.xi_f_h134, 0.001); end
  def test_xi_f_i134; assert_in_epsilon(32.51842419366647, worksheet.xi_f_i134, 0.001); end
  def test_xi_f_j134; assert_in_epsilon(32.51842419366647, worksheet.xi_f_j134, 0.001); end
  def test_xi_f_k134; assert_in_epsilon(30.82255669817696, worksheet.xi_f_k134, 0.001); end
  def test_xi_f_l134; assert_in_epsilon(29.07477938051683, worksheet.xi_f_l134, 0.001); end
  def test_xi_f_m134; assert_in_epsilon(27.27509224068607, worksheet.xi_f_m134, 0.001); end
  def test_xi_f_n134; assert_in_epsilon(25.423495278684687, worksheet.xi_f_n134, 0.001); end
  def test_xi_f_o134; assert_equal("global assumptions", worksheet.xi_f_o134); end
  def test_xi_f_c135; assert_equal("V.04", worksheet.xi_f_c135); end
  def test_xi_f_d135; assert_equal("Liquid hydrocarbons", worksheet.xi_f_d135); end
  def test_xi_f_f135; assert_in_epsilon(40.24557058915429, worksheet.xi_f_f135, 0.001); end
  def test_xi_f_g135; assert_in_epsilon(46.28240617752743, worksheet.xi_f_g135, 0.001); end
  def test_xi_f_h135; assert_in_epsilon(47.53397660389514, worksheet.xi_f_h135, 0.001); end
  def test_xi_f_i135; assert_in_epsilon(48.065958284096595, worksheet.xi_f_i135, 0.001); end
  def test_xi_f_j135; assert_in_epsilon(47.87835121813183, worksheet.xi_f_j135, 0.001); end
  def test_xi_f_k135; assert_in_epsilon(45.31782798156433, worksheet.xi_f_k135, 0.001); end
  def test_xi_f_l135; assert_in_epsilon(42.69104796870361, worksheet.xi_f_l135, 0.001); end
  def test_xi_f_m135; assert_in_epsilon(39.99801117954967, worksheet.xi_f_m135, 0.001); end
  def test_xi_f_n135; assert_in_epsilon(37.238717614102534, worksheet.xi_f_n135, 0.001); end
  def test_xi_f_o135; assert_equal("global assumptions", worksheet.xi_f_o135); end
  def test_xi_f_c136; assert_equal("V.10", worksheet.xi_f_c136); end
  def test_xi_f_d136; assert_equal("Dry biomass", worksheet.xi_f_d136); end
  def test_xi_f_f136; assert_in_epsilon(25, worksheet.xi_f_f136, 0.001); end
  def test_xi_f_g136; assert_in_epsilon(39.064885496183244, worksheet.xi_f_g136, 0.001); end
  def test_xi_f_h136; assert_in_epsilon(42.43002544529256, worksheet.xi_f_h136, 0.001); end
  def test_xi_f_i136; assert_in_epsilon(45.79516539440198, worksheet.xi_f_i136, 0.001); end
  def test_xi_f_j136; assert_in_epsilon(49.16030534351141, worksheet.xi_f_j136, 0.001); end
  def test_xi_f_k136; assert_in_epsilon(49.76383587786261, worksheet.xi_f_k136, 0.001); end
  def test_xi_f_l136; assert_in_epsilon(50.36736641221371, worksheet.xi_f_l136, 0.001); end
  def test_xi_f_m136; assert_in_epsilon(50.97089694656493, worksheet.xi_f_m136, 0.001); end
  def test_xi_f_n136; assert_in_epsilon(51.574427480916015, worksheet.xi_f_n136, 0.001); end
  def test_xi_f_o136; assert_equal("global assumptions", worksheet.xi_f_o136); end
  def test_xi_f_c137; assert_equal("V.07", worksheet.xi_f_c137); end
  def test_xi_f_d137; assert_equal("Heat transport", worksheet.xi_f_d137); end
  def test_xi_f_f137; assert_in_epsilon(33.2841905893011, worksheet.xi_f_f137, 0.001); end
  def test_xi_f_g137; assert_in_epsilon(54.591528991140514, worksheet.xi_f_g137, 0.001); end
  def test_xi_f_h137; assert_in_epsilon(60.44809148827442, worksheet.xi_f_h137, 0.001); end
  def test_xi_f_i137; assert_in_epsilon(66.3046539854082, worksheet.xi_f_i137, 0.001); end
  def test_xi_f_j137; assert_in_epsilon(72.1612164825421, worksheet.xi_f_j137, 0.001); end
  def test_xi_f_k137; assert_in_epsilon(72.94557753126534, worksheet.xi_f_k137, 0.001); end
  def test_xi_f_l137; assert_in_epsilon(73.72993857998858, worksheet.xi_f_l137, 0.001); end
  def test_xi_f_m137; assert_in_epsilon(74.51429962871195, worksheet.xi_f_m137, 0.001); end
  def test_xi_f_n137; assert_in_epsilon(75.2986606774352, worksheet.xi_f_n137, 0.001); end
  def test_xi_f_o137; assert_equal("global assumptions", worksheet.xi_f_o137); end
  def test_xi_f_e140; assert_equal("Low", worksheet.xi_f_e140); end
  def test_xi_f_g140; assert_equal("High (not modelled yet)", worksheet.xi_f_g140); end
  def test_xi_f_q140; assert_equal("Low-High cost estimate range", worksheet.xi_f_q140); end
  def test_xi_f_t140; assert_in_delta(0.15, worksheet.xi_f_t140, 0.001); end
  def test_xi_f_d141; assert_equal("MEUR/ktPaper", worksheet.xi_f_d141); end
  def test_xi_f_e141; assert_equal("Capex", worksheet.xi_f_e141); end
  def test_xi_f_g141; assert_equal("Capex", worksheet.xi_f_g141); end
  def test_xi_f_i141; assert_equal("per", worksheet.xi_f_i141); end
  def test_xi_f_c142; assert_equal("-  ", worksheet.xi_f_c142); end
  def test_xi_f_d142; assert_equal("Energy efficiency", worksheet.xi_f_d142); end
  def test_xi_f_e142; assert_in_delta(0, (worksheet.xi_f_e142||0), 0.001); end
  def test_xi_f_i142; assert_equal("tCO2e", worksheet.xi_f_i142); end
  def test_xi_f_j142; assert_equal("Assumed same as in Cement", worksheet.xi_f_j142); end
  def test_xi_f_c143; assert_equal("-  ", worksheet.xi_f_c143); end
  def test_xi_f_d143; assert_equal("Alternative fuels", worksheet.xi_f_d143); end
  def test_xi_f_i143; assert_equal("kt Paper", worksheet.xi_f_i143); end
  def test_xi_f_c144; assert_equal("-  ", worksheet.xi_f_c144); end
  def test_xi_f_d144; assert_equal("Paper CCS intensity", worksheet.xi_f_d144); end
  def test_xi_f_e144; assert_in_epsilon(45, worksheet.xi_f_e144, 0.001); end
  def test_xi_f_i144; assert_equal("tCO2e", worksheet.xi_f_i144); end
  def test_xi_f_d145; assert_equal("Paper CCS intensity", worksheet.xi_f_d145); end
  def test_xi_f_e145; assert_in_delta(0.33, worksheet.xi_f_e145, 0.001); end
  def test_xi_f_i145; assert_equal("TWh/MMtCO2e", worksheet.xi_f_i145); end
  def test_xi_f_d146; assert_equal("Black liquor gasification ", worksheet.xi_f_d146); end
  def test_xi_f_e146; assert_in_epsilon(4.25, worksheet.xi_f_e146, 0.001); end
  def test_xi_f_i146; assert_equal("MEUR/Mton.yr", worksheet.xi_f_i146); end
  def test_xi_f_d147; assert_equal("Black liquor + CCS", worksheet.xi_f_d147); end
  def test_xi_f_e147; assert_in_epsilon(1.4, worksheet.xi_f_e147, 0.001); end
  def test_xi_f_i147; assert_equal("ktCO2/kt pulp", worksheet.xi_f_i147); end
  def test_xi_f_b149; assert_equal("Derived assumptions", worksheet.xi_f_b149); end
  def test_xi_f_b150; assert_equal("5 matrixes define the output of product, energy demand, energy split by vector, emissions intensity, process emissions, total emissions and costs", worksheet.xi_f_b150); end
  def test_xi_f_b151; assert_in_delta(1, worksheet.xi_f_b151, 0.001); end
  def test_xi_f_c151; assert_equal("Output Growth (kt)", worksheet.xi_f_c151); end
  def test_xi_f_n151; assert_in_epsilon(2, worksheet.xi_f_n151, 0.001); end
  def test_xi_f_o151; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_f_o151); end
  def test_xi_f_z151; assert_in_epsilon(3, worksheet.xi_f_z151, 0.001); end
  def test_xi_f_aa151; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_f_aa151); end
  def test_xi_f_al151; assert_in_epsilon(4, worksheet.xi_f_al151, 0.001); end
  def test_xi_f_am151; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_f_am151); end
  def test_xi_f_ax151; assert_in_epsilon(5, worksheet.xi_f_ax151, 0.001); end
  def test_xi_f_ay151; assert_equal("Emissions (MMtCO2e)", worksheet.xi_f_ay151); end
  def test_xi_f_bi151; assert_in_epsilon(6, worksheet.xi_f_bi151, 0.001); end
  def test_xi_f_bj151; assert_equal("Costs : Energy (MEUR)", worksheet.xi_f_bj151); end
  def test_xi_f_bt151; assert_in_epsilon(7, worksheet.xi_f_bt151, 0.001); end
  def test_xi_f_bu151; assert_equal("Costs : Capex (MEUR)", worksheet.xi_f_bu151); end
  def test_xi_f_c152; assert_equal("Product type", worksheet.xi_f_c152); end
  def test_xi_f_d152; assert_equal("Description", worksheet.xi_f_d152); end
  def test_xi_f_e152; assert_in_epsilon(2010, worksheet.xi_f_e152, 0.001); end
  def test_xi_f_f152; assert_in_epsilon(2015, worksheet.xi_f_f152, 0.001); end
  def test_xi_f_g152; assert_in_epsilon(2020, worksheet.xi_f_g152, 0.001); end
  def test_xi_f_h152; assert_in_epsilon(2025, worksheet.xi_f_h152, 0.001); end
  def test_xi_f_i152; assert_in_epsilon(2030, worksheet.xi_f_i152, 0.001); end
  def test_xi_f_j152; assert_in_epsilon(2035, worksheet.xi_f_j152, 0.001); end
  def test_xi_f_k152; assert_in_epsilon(2040, worksheet.xi_f_k152, 0.001); end
  def test_xi_f_l152; assert_in_epsilon(2045, worksheet.xi_f_l152, 0.001); end
  def test_xi_f_m152; assert_in_epsilon(2050, worksheet.xi_f_m152, 0.001); end
  def test_xi_f_o152; assert_equal("Industry", worksheet.xi_f_o152); end
  def test_xi_f_p152; assert_equal("Description", worksheet.xi_f_p152); end
  def test_xi_f_q152; assert_in_epsilon(2010, worksheet.xi_f_q152, 0.001); end
  def test_xi_f_r152; assert_in_epsilon(2015, worksheet.xi_f_r152, 0.001); end
  def test_xi_f_s152; assert_in_epsilon(2020, worksheet.xi_f_s152, 0.001); end
  def test_xi_f_t152; assert_in_epsilon(2025, worksheet.xi_f_t152, 0.001); end
  def test_xi_f_u152; assert_in_epsilon(2030, worksheet.xi_f_u152, 0.001); end
  def test_xi_f_v152; assert_in_epsilon(2035, worksheet.xi_f_v152, 0.001); end
  def test_xi_f_w152; assert_in_epsilon(2040, worksheet.xi_f_w152, 0.001); end
  def test_xi_f_x152; assert_in_epsilon(2045, worksheet.xi_f_x152, 0.001); end
  def test_xi_f_y152; assert_in_epsilon(2050, worksheet.xi_f_y152, 0.001); end
  def test_xi_f_aa152; assert_equal("Vector", worksheet.xi_f_aa152); end
  def test_xi_f_ab152; assert_equal("Description", worksheet.xi_f_ab152); end
  def test_xi_f_ac152; assert_in_epsilon(2010, worksheet.xi_f_ac152, 0.001); end
  def test_xi_f_ad152; assert_in_epsilon(2015, worksheet.xi_f_ad152, 0.001); end
  def test_xi_f_ae152; assert_in_epsilon(2020, worksheet.xi_f_ae152, 0.001); end
  def test_xi_f_af152; assert_in_epsilon(2025, worksheet.xi_f_af152, 0.001); end
  def test_xi_f_ag152; assert_in_epsilon(2030, worksheet.xi_f_ag152, 0.001); end
  def test_xi_f_ah152; assert_in_epsilon(2035, worksheet.xi_f_ah152, 0.001); end
  def test_xi_f_ai152; assert_in_epsilon(2040, worksheet.xi_f_ai152, 0.001); end
  def test_xi_f_aj152; assert_in_epsilon(2045, worksheet.xi_f_aj152, 0.001); end
  def test_xi_f_ak152; assert_in_epsilon(2050, worksheet.xi_f_ak152, 0.001); end
  def test_xi_f_am152; assert_equal("Industry", worksheet.xi_f_am152); end
  def test_xi_f_an152; assert_equal("Description", worksheet.xi_f_an152); end
  def test_xi_f_ao152; assert_in_epsilon(2010, worksheet.xi_f_ao152, 0.001); end
  def test_xi_f_ap152; assert_in_epsilon(2015, worksheet.xi_f_ap152, 0.001); end
  def test_xi_f_aq152; assert_in_epsilon(2020, worksheet.xi_f_aq152, 0.001); end
  def test_xi_f_ar152; assert_in_epsilon(2025, worksheet.xi_f_ar152, 0.001); end
  def test_xi_f_as152; assert_in_epsilon(2030, worksheet.xi_f_as152, 0.001); end
  def test_xi_f_at152; assert_in_epsilon(2035, worksheet.xi_f_at152, 0.001); end
  def test_xi_f_au152; assert_in_epsilon(2040, worksheet.xi_f_au152, 0.001); end
  def test_xi_f_av152; assert_in_epsilon(2045, worksheet.xi_f_av152, 0.001); end
  def test_xi_f_aw152; assert_in_epsilon(2050, worksheet.xi_f_aw152, 0.001); end
  def test_xi_f_ax152; assert_equal("Industry", worksheet.xi_f_ax152); end
  def test_xi_f_ay152; assert_equal("Description", worksheet.xi_f_ay152); end
  def test_xi_f_az152; assert_in_epsilon(2010, worksheet.xi_f_az152, 0.001); end
  def test_xi_f_ba152; assert_in_epsilon(2015, worksheet.xi_f_ba152, 0.001); end
  def test_xi_f_bb152; assert_in_epsilon(2020, worksheet.xi_f_bb152, 0.001); end
  def test_xi_f_bc152; assert_in_epsilon(2025, worksheet.xi_f_bc152, 0.001); end
  def test_xi_f_bd152; assert_in_epsilon(2030, worksheet.xi_f_bd152, 0.001); end
  def test_xi_f_be152; assert_in_epsilon(2035, worksheet.xi_f_be152, 0.001); end
  def test_xi_f_bf152; assert_in_epsilon(2040, worksheet.xi_f_bf152, 0.001); end
  def test_xi_f_bg152; assert_in_epsilon(2045, worksheet.xi_f_bg152, 0.001); end
  def test_xi_f_bh152; assert_in_epsilon(2050, worksheet.xi_f_bh152, 0.001); end
  def test_xi_f_bi152; assert_equal("Industry", worksheet.xi_f_bi152); end
  def test_xi_f_bj152; assert_equal("Description", worksheet.xi_f_bj152); end
  def test_xi_f_bk152; assert_in_epsilon(2010, worksheet.xi_f_bk152, 0.001); end
  def test_xi_f_bl152; assert_in_epsilon(2015, worksheet.xi_f_bl152, 0.001); end
  def test_xi_f_bm152; assert_in_epsilon(2020, worksheet.xi_f_bm152, 0.001); end
  def test_xi_f_bn152; assert_in_epsilon(2025, worksheet.xi_f_bn152, 0.001); end
  def test_xi_f_bo152; assert_in_epsilon(2030, worksheet.xi_f_bo152, 0.001); end
  def test_xi_f_bp152; assert_in_epsilon(2035, worksheet.xi_f_bp152, 0.001); end
  def test_xi_f_bq152; assert_in_epsilon(2040, worksheet.xi_f_bq152, 0.001); end
  def test_xi_f_br152; assert_in_epsilon(2045, worksheet.xi_f_br152, 0.001); end
  def test_xi_f_bs152; assert_in_epsilon(2050, worksheet.xi_f_bs152, 0.001); end
  def test_xi_f_bt152; assert_equal("Industry", worksheet.xi_f_bt152); end
  def test_xi_f_bu152; assert_equal("Description", worksheet.xi_f_bu152); end
  def test_xi_f_bv152; assert_in_epsilon(2010, worksheet.xi_f_bv152, 0.001); end
  def test_xi_f_bw152; assert_in_epsilon(2015, worksheet.xi_f_bw152, 0.001); end
  def test_xi_f_bx152; assert_in_epsilon(2020, worksheet.xi_f_bx152, 0.001); end
  def test_xi_f_by152; assert_in_epsilon(2025, worksheet.xi_f_by152, 0.001); end
  def test_xi_f_bz152; assert_in_epsilon(2030, worksheet.xi_f_bz152, 0.001); end
  def test_xi_f_ca152; assert_in_epsilon(2035, worksheet.xi_f_ca152, 0.001); end
  def test_xi_f_cb152; assert_in_epsilon(2040, worksheet.xi_f_cb152, 0.001); end
  def test_xi_f_cc152; assert_in_epsilon(2045, worksheet.xi_f_cc152, 0.001); end
  def test_xi_f_cd152; assert_in_epsilon(2050, worksheet.xi_f_cd152, 0.001); end
  def test_xi_f_c153; assert_equal("(i)", worksheet.xi_f_c153); end
  def test_xi_f_d153; assert_equal("Paper", worksheet.xi_f_d153); end
  def test_xi_f_e153; assert_in_epsilon(1000, worksheet.xi_f_e153, 0.001); end
  def test_xi_f_o153; assert_equal("(i)", worksheet.xi_f_o153); end
  def test_xi_f_p153; assert_equal("Paper", worksheet.xi_f_p153); end
  def test_xi_f_q153; assert_in_delta(0.006190445388349514, worksheet.xi_f_q153, 0.001); end
  def test_xi_f_r153; assert_in_delta(0.006190445388349514, worksheet.xi_f_r153, 0.001); end
  def test_xi_f_s153; assert_in_delta(0.006190445388349514, worksheet.xi_f_s153, 0.001); end
  def test_xi_f_t153; assert_in_delta(0.006190445388349514, worksheet.xi_f_t153, 0.001); end
  def test_xi_f_u153; assert_in_delta(0.006190445388349514, worksheet.xi_f_u153, 0.001); end
  def test_xi_f_v153; assert_in_delta(0.006190445388349514, worksheet.xi_f_v153, 0.001); end
  def test_xi_f_w153; assert_in_delta(0.006190445388349514, worksheet.xi_f_w153, 0.001); end
  def test_xi_f_x153; assert_in_delta(0.006190445388349514, worksheet.xi_f_x153, 0.001); end
  def test_xi_f_y153; assert_in_delta(0.006190445388349514, worksheet.xi_f_y153, 0.001); end
  def test_xi_f_aa153; assert_equal("V.01", worksheet.xi_f_aa153); end
  def test_xi_f_ab153; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_ab153); end
  def test_xi_f_ac153; assert_in_delta(0.23347311838286128, worksheet.xi_f_ac153, 0.001); end
  def test_xi_f_ad153; assert_in_delta(0.23347311838286128, worksheet.xi_f_ad153, 0.001); end
  def test_xi_f_ae153; assert_in_delta(0.23347311838286128, worksheet.xi_f_ae153, 0.001); end
  def test_xi_f_af153; assert_in_delta(0.23347311838286128, worksheet.xi_f_af153, 0.001); end
  def test_xi_f_ag153; assert_in_delta(0.23347311838286128, worksheet.xi_f_ag153, 0.001); end
  def test_xi_f_ah153; assert_in_delta(0.23347311838286128, worksheet.xi_f_ah153, 0.001); end
  def test_xi_f_ai153; assert_in_delta(0.23347311838286128, worksheet.xi_f_ai153, 0.001); end
  def test_xi_f_aj153; assert_in_delta(0.23347311838286128, worksheet.xi_f_aj153, 0.001); end
  def test_xi_f_ak153; assert_in_delta(0.23347311838286128, worksheet.xi_f_ak153, 0.001); end
  def test_xi_f_am153; assert_equal("(i)", worksheet.xi_f_am153); end
  def test_xi_f_an153; assert_equal("Paper", worksheet.xi_f_an153); end
  def test_xi_f_ao153; assert_in_delta(0, (worksheet.xi_f_ao153||0), 0.001); end
  def test_xi_f_ap153; assert_in_delta(0, (worksheet.xi_f_ap153||0), 0.001); end
  def test_xi_f_aq153; assert_in_delta(0, (worksheet.xi_f_aq153||0), 0.001); end
  def test_xi_f_ar153; assert_in_delta(0, (worksheet.xi_f_ar153||0), 0.001); end
  def test_xi_f_as153; assert_in_delta(0, (worksheet.xi_f_as153||0), 0.001); end
  def test_xi_f_at153; assert_in_delta(0, (worksheet.xi_f_at153||0), 0.001); end
  def test_xi_f_au153; assert_in_delta(0, (worksheet.xi_f_au153||0), 0.001); end
  def test_xi_f_av153; assert_in_delta(0, (worksheet.xi_f_av153||0), 0.001); end
  def test_xi_f_aw153; assert_in_delta(0, (worksheet.xi_f_aw153||0), 0.001); end
  def test_xi_f_ax153; assert_equal("(i)", worksheet.xi_f_ax153); end
  def test_xi_f_ay153; assert_equal("Paper", worksheet.xi_f_ay153); end
  def test_xi_f_az153; assert_in_epsilon(1.323817357583715, worksheet.xi_f_az153, 0.001); end
  def test_xi_f_ba153; assert_in_epsilon(1.323817357583715, worksheet.xi_f_ba153, 0.001); end
  def test_xi_f_bb153; assert_in_epsilon(1.323817357583715, worksheet.xi_f_bb153, 0.001); end
  def test_xi_f_bc153; assert_in_epsilon(1.323817357583715, worksheet.xi_f_bc153, 0.001); end
  def test_xi_f_bd153; assert_in_epsilon(1.323817357583715, worksheet.xi_f_bd153, 0.001); end
  def test_xi_f_be153; assert_in_epsilon(1.323817357583715, worksheet.xi_f_be153, 0.001); end
  def test_xi_f_bf153; assert_in_epsilon(1.323817357583715, worksheet.xi_f_bf153, 0.001); end
  def test_xi_f_bg153; assert_in_epsilon(1.323817357583715, worksheet.xi_f_bg153, 0.001); end
  def test_xi_f_bh153; assert_in_epsilon(1.323817357583715, worksheet.xi_f_bh153, 0.001); end
  def test_xi_f_bi153; assert_equal("(i)", worksheet.xi_f_bi153); end
  def test_xi_f_bj153; assert_equal("Paper", worksheet.xi_f_bj153); end
  def test_xi_f_bk153; assert_in_epsilon(212.2668803323313, worksheet.xi_f_bk153, 0.001); end
  def test_xi_f_bl153; assert_in_epsilon(271.92827146103764, worksheet.xi_f_bl153, 0.001); end
  def test_xi_f_bm153; assert_in_epsilon(294.95554538587794, worksheet.xi_f_bm153, 0.001); end
  def test_xi_f_bn153; assert_in_epsilon(337.45753622714807, worksheet.xi_f_bn153, 0.001); end
  def test_xi_f_bo153; assert_in_epsilon(342.13379833541154, worksheet.xi_f_bo153, 0.001); end
  def test_xi_f_bp153; assert_in_epsilon(335.50621452003725, worksheet.xi_f_bp153, 0.001); end
  def test_xi_f_bq153; assert_in_epsilon(330.8072992264216, worksheet.xi_f_bq153, 0.001); end
  def test_xi_f_br153; assert_in_epsilon(326.50483470355385, worksheet.xi_f_br153, 0.001); end
  def test_xi_f_bs153; assert_in_epsilon(321.99842250916583, worksheet.xi_f_bs153, 0.001); end
  def test_xi_f_bt153; assert_equal("(i)", worksheet.xi_f_bt153); end
  def test_xi_f_bu153; assert_equal("Paper", worksheet.xi_f_bu153); end
  def test_xi_f_bv153; assert_in_delta(0, (worksheet.xi_f_bv153||0), 0.001); end
  def test_xi_f_bw153; assert_in_delta(0, (worksheet.xi_f_bw153||0), 0.001); end
  def test_xi_f_bx153; assert_in_delta(0, (worksheet.xi_f_bx153||0), 0.001); end
  def test_xi_f_by153; assert_in_delta(0, (worksheet.xi_f_by153||0), 0.001); end
  def test_xi_f_bz153; assert_in_delta(0, (worksheet.xi_f_bz153||0), 0.001); end
  def test_xi_f_ca153; assert_in_delta(0, (worksheet.xi_f_ca153||0), 0.001); end
  def test_xi_f_cb153; assert_in_delta(0, (worksheet.xi_f_cb153||0), 0.001); end
  def test_xi_f_cc153; assert_in_delta(0, (worksheet.xi_f_cc153||0), 0.001); end
  def test_xi_f_cd153; assert_in_delta(0, (worksheet.xi_f_cd153||0), 0.001); end
  def test_xi_f_aa154; assert_equal("V.03", worksheet.xi_f_aa154); end
  def test_xi_f_ab154; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab154); end
  def test_xi_f_ac154; assert_in_delta(0.0215647077482191, worksheet.xi_f_ac154, 0.001); end
  def test_xi_f_ad154; assert_in_delta(0.0215647077482191, worksheet.xi_f_ad154, 0.001); end
  def test_xi_f_ae154; assert_in_delta(0.0215647077482191, worksheet.xi_f_ae154, 0.001); end
  def test_xi_f_af154; assert_in_delta(0.0215647077482191, worksheet.xi_f_af154, 0.001); end
  def test_xi_f_ag154; assert_in_delta(0.0215647077482191, worksheet.xi_f_ag154, 0.001); end
  def test_xi_f_ah154; assert_in_delta(0.0215647077482191, worksheet.xi_f_ah154, 0.001); end
  def test_xi_f_ai154; assert_in_delta(0.0215647077482191, worksheet.xi_f_ai154, 0.001); end
  def test_xi_f_aj154; assert_in_delta(0.0215647077482191, worksheet.xi_f_aj154, 0.001); end
  def test_xi_f_ak154; assert_in_delta(0.0215647077482191, worksheet.xi_f_ak154, 0.001); end
  def test_xi_f_aa155; assert_equal("V.05", worksheet.xi_f_aa155); end
  def test_xi_f_ab155; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_ab155); end
  def test_xi_f_ac155; assert_in_delta(0.19583773694467693, worksheet.xi_f_ac155, 0.001); end
  def test_xi_f_ad155; assert_in_delta(0.19583773694467693, worksheet.xi_f_ad155, 0.001); end
  def test_xi_f_ae155; assert_in_delta(0.19583773694467693, worksheet.xi_f_ae155, 0.001); end
  def test_xi_f_af155; assert_in_delta(0.19583773694467693, worksheet.xi_f_af155, 0.001); end
  def test_xi_f_ag155; assert_in_delta(0.19583773694467693, worksheet.xi_f_ag155, 0.001); end
  def test_xi_f_ah155; assert_in_delta(0.19583773694467693, worksheet.xi_f_ah155, 0.001); end
  def test_xi_f_ai155; assert_in_delta(0.19583773694467693, worksheet.xi_f_ai155, 0.001); end
  def test_xi_f_aj155; assert_in_delta(0.19583773694467693, worksheet.xi_f_aj155, 0.001); end
  def test_xi_f_ak155; assert_in_delta(0.19583773694467693, worksheet.xi_f_ak155, 0.001); end
  def test_xi_f_aa156; assert_equal("V.04", worksheet.xi_f_aa156); end
  def test_xi_f_ab156; assert_equal("Liquid hydrocarbons", worksheet.xi_f_ab156); end
  def test_xi_f_ac156; assert_in_delta(0.029643631441892818, worksheet.xi_f_ac156, 0.001); end
  def test_xi_f_ad156; assert_in_delta(0.029643631441892818, worksheet.xi_f_ad156, 0.001); end
  def test_xi_f_ae156; assert_in_delta(0.029643631441892818, worksheet.xi_f_ae156, 0.001); end
  def test_xi_f_af156; assert_in_delta(0.029643631441892818, worksheet.xi_f_af156, 0.001); end
  def test_xi_f_ag156; assert_in_delta(0.029643631441892818, worksheet.xi_f_ag156, 0.001); end
  def test_xi_f_ah156; assert_in_delta(0.029643631441892818, worksheet.xi_f_ah156, 0.001); end
  def test_xi_f_ai156; assert_in_delta(0.029643631441892818, worksheet.xi_f_ai156, 0.001); end
  def test_xi_f_aj156; assert_in_delta(0.029643631441892818, worksheet.xi_f_aj156, 0.001); end
  def test_xi_f_ak156; assert_in_delta(0.029643631441892818, worksheet.xi_f_ak156, 0.001); end
  def test_xi_f_aa157; assert_equal("V.03", worksheet.xi_f_aa157); end
  def test_xi_f_ab157; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab157); end
  def test_xi_f_ac157; assert_in_delta(0.5194808054823499, worksheet.xi_f_ac157, 0.001); end
  def test_xi_f_ad157; assert_in_delta(0.5194808054823499, worksheet.xi_f_ad157, 0.001); end
  def test_xi_f_ae157; assert_in_delta(0.5194808054823499, worksheet.xi_f_ae157, 0.001); end
  def test_xi_f_af157; assert_in_delta(0.5194808054823499, worksheet.xi_f_af157, 0.001); end
  def test_xi_f_ag157; assert_in_delta(0.5194808054823499, worksheet.xi_f_ag157, 0.001); end
  def test_xi_f_ah157; assert_in_delta(0.5194808054823499, worksheet.xi_f_ah157, 0.001); end
  def test_xi_f_ai157; assert_in_delta(0.5194808054823499, worksheet.xi_f_ai157, 0.001); end
  def test_xi_f_aj157; assert_in_delta(0.5194808054823499, worksheet.xi_f_aj157, 0.001); end
  def test_xi_f_ak157; assert_in_delta(0.5194808054823499, worksheet.xi_f_ak157, 0.001); end
  def test_xi_f_aa158; assert_equal("V.07", worksheet.xi_f_aa158); end
  def test_xi_f_ab158; assert_equal("Heat transport", worksheet.xi_f_ab158); end
  def test_xi_f_ac158; assert_in_delta(0, (worksheet.xi_f_ac158||0), 0.001); end
  def test_xi_f_ad158; assert_in_delta(0, (worksheet.xi_f_ad158||0), 0.001); end
  def test_xi_f_ae158; assert_in_delta(0, (worksheet.xi_f_ae158||0), 0.001); end
  def test_xi_f_af158; assert_in_delta(0, (worksheet.xi_f_af158||0), 0.001); end
  def test_xi_f_ag158; assert_in_delta(0, (worksheet.xi_f_ag158||0), 0.001); end
  def test_xi_f_ah158; assert_in_delta(0, (worksheet.xi_f_ah158||0), 0.001); end
  def test_xi_f_ai158; assert_in_delta(0, (worksheet.xi_f_ai158||0), 0.001); end
  def test_xi_f_aj158; assert_in_delta(0, (worksheet.xi_f_aj158||0), 0.001); end
  def test_xi_f_ak158; assert_in_delta(0, (worksheet.xi_f_ak158||0), 0.001); end
  def test_xi_f_aa159; assert_equal("Intensity", worksheet.xi_f_aa159); end
  def test_xi_f_ab159; assert_equal("Intensity", worksheet.xi_f_ab159); end
  def test_xi_f_ac159; assert_in_delta(0.21384848335390436, worksheet.xi_f_ac159, 0.001); end
  def test_xi_f_ad159; assert_in_delta(0.21384848335390436, worksheet.xi_f_ad159, 0.001); end
  def test_xi_f_ae159; assert_in_delta(0.21384848335390436, worksheet.xi_f_ae159, 0.001); end
  def test_xi_f_af159; assert_in_delta(0.21384848335390436, worksheet.xi_f_af159, 0.001); end
  def test_xi_f_ag159; assert_in_delta(0.21384848335390436, worksheet.xi_f_ag159, 0.001); end
  def test_xi_f_ah159; assert_in_delta(0.21384848335390436, worksheet.xi_f_ah159, 0.001); end
  def test_xi_f_ai159; assert_in_delta(0.21384848335390436, worksheet.xi_f_ai159, 0.001); end
  def test_xi_f_aj159; assert_in_delta(0.21384848335390436, worksheet.xi_f_aj159, 0.001); end
  def test_xi_f_ak159; assert_in_delta(0.21384848335390436, worksheet.xi_f_ak159, 0.001); end
  def test_xi_f_aa160; assert_equal("Cost", worksheet.xi_f_aa160); end
  def test_xi_f_ab160; assert_equal("Cost", worksheet.xi_f_ab160); end
  def test_xi_f_ac160; assert_in_epsilon(34.28943589936516, worksheet.xi_f_ac160, 0.001); end
  def test_xi_f_ad160; assert_in_epsilon(43.92709318990353, worksheet.xi_f_ad160, 0.001); end
  def test_xi_f_ae160; assert_in_epsilon(47.6469021019049, worksheet.xi_f_ae160, 0.001); end
  def test_xi_f_af160; assert_in_epsilon(54.51264247678315, worksheet.xi_f_af160, 0.001); end
  def test_xi_f_ag160; assert_in_epsilon(55.26804242216741, worksheet.xi_f_ag160, 0.001); end
  def test_xi_f_ah160; assert_in_epsilon(54.197427401825344, worksheet.xi_f_ah160, 0.001); end
  def test_xi_f_ai160; assert_in_epsilon(53.43836807752227, worksheet.xi_f_ai160, 0.001); end
  def test_xi_f_aj160; assert_in_epsilon(52.74335111945895, worksheet.xi_f_aj160, 0.001); end
  def test_xi_f_ak160; assert_in_epsilon(52.01538860437577, worksheet.xi_f_ak160, 0.001); end
  def test_xi_f_b162; assert_equal("Methodology", worksheet.xi_f_b162); end
  def test_xi_f_b163; assert_equal("Update the 5 matrixes to take into account the trajectory assumptions", worksheet.xi_f_b163); end
  def test_xi_f_b165; assert_in_delta(1, worksheet.xi_f_b165, 0.001); end
  def test_xi_f_c165; assert_equal("Compute output growth", worksheet.xi_f_c165); end
  def test_xi_f_b166; assert_in_epsilon(3, worksheet.xi_f_b166, 0.001); end
  def test_xi_f_c166; assert_equal("Compute energy efficiency", worksheet.xi_f_c166); end
  def test_xi_f_b167; assert_in_epsilon(4, worksheet.xi_f_b167, 0.001); end
  def test_xi_f_c167; assert_equal("Computer alternative fuels potential", worksheet.xi_f_c167); end
  def test_xi_f_b168; assert_in_epsilon(5, worksheet.xi_f_b168, 0.001); end
  def test_xi_f_c168; assert_equal("Compute process improvements", worksheet.xi_f_c168); end
  def test_xi_f_b169; assert_in_epsilon(6, worksheet.xi_f_b169, 0.001); end
  def test_xi_f_c169; assert_equal("Compute CCS impact", worksheet.xi_f_c169); end
  def test_xi_f_b172; assert_in_delta(1, worksheet.xi_f_b172, 0.001); end
  def test_xi_f_c172; assert_equal("Output Growth (kt)", worksheet.xi_f_c172); end
  def test_xi_f_b173; assert_in_delta(1, worksheet.xi_f_b173, 0.001); end
  def test_xi_f_c173; assert_equal("Output Growth (kt)", worksheet.xi_f_c173); end
  def test_xi_f_n173; assert_in_epsilon(2, worksheet.xi_f_n173, 0.001); end
  def test_xi_f_o173; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_f_o173); end
  def test_xi_f_z173; assert_in_epsilon(3, worksheet.xi_f_z173, 0.001); end
  def test_xi_f_aa173; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_f_aa173); end
  def test_xi_f_al173; assert_in_epsilon(4, worksheet.xi_f_al173, 0.001); end
  def test_xi_f_am173; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_f_am173); end
  def test_xi_f_ax173; assert_in_epsilon(5, worksheet.xi_f_ax173, 0.001); end
  def test_xi_f_ay173; assert_equal("Emissions (MMtCO2e)", worksheet.xi_f_ay173); end
  def test_xi_f_bi173; assert_in_epsilon(6, worksheet.xi_f_bi173, 0.001); end
  def test_xi_f_bj173; assert_equal("Costs : Energy (MEUR)", worksheet.xi_f_bj173); end
  def test_xi_f_bt173; assert_in_epsilon(7, worksheet.xi_f_bt173, 0.001); end
  def test_xi_f_bu173; assert_equal("Costs : Capex (MEUR)", worksheet.xi_f_bu173); end
  def test_xi_f_c174; assert_equal("Product type", worksheet.xi_f_c174); end
  def test_xi_f_d174; assert_equal("Description", worksheet.xi_f_d174); end
  def test_xi_f_e174; assert_in_epsilon(2010, worksheet.xi_f_e174, 0.001); end
  def test_xi_f_f174; assert_in_epsilon(2015, worksheet.xi_f_f174, 0.001); end
  def test_xi_f_g174; assert_in_epsilon(2020, worksheet.xi_f_g174, 0.001); end
  def test_xi_f_h174; assert_in_epsilon(2025, worksheet.xi_f_h174, 0.001); end
  def test_xi_f_i174; assert_in_epsilon(2030, worksheet.xi_f_i174, 0.001); end
  def test_xi_f_j174; assert_in_epsilon(2035, worksheet.xi_f_j174, 0.001); end
  def test_xi_f_k174; assert_in_epsilon(2040, worksheet.xi_f_k174, 0.001); end
  def test_xi_f_l174; assert_in_epsilon(2045, worksheet.xi_f_l174, 0.001); end
  def test_xi_f_m174; assert_in_epsilon(2050, worksheet.xi_f_m174, 0.001); end
  def test_xi_f_o174; assert_equal("Industry", worksheet.xi_f_o174); end
  def test_xi_f_p174; assert_equal("Description", worksheet.xi_f_p174); end
  def test_xi_f_q174; assert_in_epsilon(2010, worksheet.xi_f_q174, 0.001); end
  def test_xi_f_r174; assert_in_epsilon(2015, worksheet.xi_f_r174, 0.001); end
  def test_xi_f_s174; assert_in_epsilon(2020, worksheet.xi_f_s174, 0.001); end
  def test_xi_f_t174; assert_in_epsilon(2025, worksheet.xi_f_t174, 0.001); end
  def test_xi_f_u174; assert_in_epsilon(2030, worksheet.xi_f_u174, 0.001); end
  def test_xi_f_v174; assert_in_epsilon(2035, worksheet.xi_f_v174, 0.001); end
  def test_xi_f_w174; assert_in_epsilon(2040, worksheet.xi_f_w174, 0.001); end
  def test_xi_f_x174; assert_in_epsilon(2045, worksheet.xi_f_x174, 0.001); end
  def test_xi_f_y174; assert_in_epsilon(2050, worksheet.xi_f_y174, 0.001); end
  def test_xi_f_aa174; assert_equal("Vector", worksheet.xi_f_aa174); end
  def test_xi_f_ab174; assert_equal("Description", worksheet.xi_f_ab174); end
  def test_xi_f_ac174; assert_in_epsilon(2010, worksheet.xi_f_ac174, 0.001); end
  def test_xi_f_ad174; assert_in_epsilon(2015, worksheet.xi_f_ad174, 0.001); end
  def test_xi_f_ae174; assert_in_epsilon(2020, worksheet.xi_f_ae174, 0.001); end
  def test_xi_f_af174; assert_in_epsilon(2025, worksheet.xi_f_af174, 0.001); end
  def test_xi_f_ag174; assert_in_epsilon(2030, worksheet.xi_f_ag174, 0.001); end
  def test_xi_f_ah174; assert_in_epsilon(2035, worksheet.xi_f_ah174, 0.001); end
  def test_xi_f_ai174; assert_in_epsilon(2040, worksheet.xi_f_ai174, 0.001); end
  def test_xi_f_aj174; assert_in_epsilon(2045, worksheet.xi_f_aj174, 0.001); end
  def test_xi_f_ak174; assert_in_epsilon(2050, worksheet.xi_f_ak174, 0.001); end
  def test_xi_f_am174; assert_equal("Industry", worksheet.xi_f_am174); end
  def test_xi_f_an174; assert_equal("Description", worksheet.xi_f_an174); end
  def test_xi_f_ao174; assert_in_epsilon(2010, worksheet.xi_f_ao174, 0.001); end
  def test_xi_f_ap174; assert_in_epsilon(2015, worksheet.xi_f_ap174, 0.001); end
  def test_xi_f_aq174; assert_in_epsilon(2020, worksheet.xi_f_aq174, 0.001); end
  def test_xi_f_ar174; assert_in_epsilon(2025, worksheet.xi_f_ar174, 0.001); end
  def test_xi_f_as174; assert_in_epsilon(2030, worksheet.xi_f_as174, 0.001); end
  def test_xi_f_at174; assert_in_epsilon(2035, worksheet.xi_f_at174, 0.001); end
  def test_xi_f_au174; assert_in_epsilon(2040, worksheet.xi_f_au174, 0.001); end
  def test_xi_f_av174; assert_in_epsilon(2045, worksheet.xi_f_av174, 0.001); end
  def test_xi_f_aw174; assert_in_epsilon(2050, worksheet.xi_f_aw174, 0.001); end
  def test_xi_f_ax174; assert_equal("Industry", worksheet.xi_f_ax174); end
  def test_xi_f_ay174; assert_equal("Description", worksheet.xi_f_ay174); end
  def test_xi_f_az174; assert_in_epsilon(2010, worksheet.xi_f_az174, 0.001); end
  def test_xi_f_ba174; assert_in_epsilon(2015, worksheet.xi_f_ba174, 0.001); end
  def test_xi_f_bb174; assert_in_epsilon(2020, worksheet.xi_f_bb174, 0.001); end
  def test_xi_f_bc174; assert_in_epsilon(2025, worksheet.xi_f_bc174, 0.001); end
  def test_xi_f_bd174; assert_in_epsilon(2030, worksheet.xi_f_bd174, 0.001); end
  def test_xi_f_be174; assert_in_epsilon(2035, worksheet.xi_f_be174, 0.001); end
  def test_xi_f_bf174; assert_in_epsilon(2040, worksheet.xi_f_bf174, 0.001); end
  def test_xi_f_bg174; assert_in_epsilon(2045, worksheet.xi_f_bg174, 0.001); end
  def test_xi_f_bh174; assert_in_epsilon(2050, worksheet.xi_f_bh174, 0.001); end
  def test_xi_f_bi174; assert_equal("Industry", worksheet.xi_f_bi174); end
  def test_xi_f_bj174; assert_equal("Description", worksheet.xi_f_bj174); end
  def test_xi_f_bk174; assert_in_epsilon(2010, worksheet.xi_f_bk174, 0.001); end
  def test_xi_f_bl174; assert_in_epsilon(2015, worksheet.xi_f_bl174, 0.001); end
  def test_xi_f_bm174; assert_in_epsilon(2020, worksheet.xi_f_bm174, 0.001); end
  def test_xi_f_bn174; assert_in_epsilon(2025, worksheet.xi_f_bn174, 0.001); end
  def test_xi_f_bo174; assert_in_epsilon(2030, worksheet.xi_f_bo174, 0.001); end
  def test_xi_f_bp174; assert_in_epsilon(2035, worksheet.xi_f_bp174, 0.001); end
  def test_xi_f_bq174; assert_in_epsilon(2040, worksheet.xi_f_bq174, 0.001); end
  def test_xi_f_br174; assert_in_epsilon(2045, worksheet.xi_f_br174, 0.001); end
  def test_xi_f_bs174; assert_in_epsilon(2050, worksheet.xi_f_bs174, 0.001); end
  def test_xi_f_bt174; assert_equal("Industry", worksheet.xi_f_bt174); end
  def test_xi_f_bu174; assert_equal("Description", worksheet.xi_f_bu174); end
  def test_xi_f_bv174; assert_in_epsilon(2010, worksheet.xi_f_bv174, 0.001); end
  def test_xi_f_bw174; assert_in_epsilon(2015, worksheet.xi_f_bw174, 0.001); end
  def test_xi_f_bx174; assert_in_epsilon(2020, worksheet.xi_f_bx174, 0.001); end
  def test_xi_f_by174; assert_in_epsilon(2025, worksheet.xi_f_by174, 0.001); end
  def test_xi_f_bz174; assert_in_epsilon(2030, worksheet.xi_f_bz174, 0.001); end
  def test_xi_f_ca174; assert_in_epsilon(2035, worksheet.xi_f_ca174, 0.001); end
  def test_xi_f_cb174; assert_in_epsilon(2040, worksheet.xi_f_cb174, 0.001); end
  def test_xi_f_cc174; assert_in_epsilon(2045, worksheet.xi_f_cc174, 0.001); end
  def test_xi_f_cd174; assert_in_epsilon(2050, worksheet.xi_f_cd174, 0.001); end
  def test_xi_f_c175; assert_equal("(i)", worksheet.xi_f_c175); end
  def test_xi_f_d175; assert_equal("Paper", worksheet.xi_f_d175); end
  def test_xi_f_e175; assert_in_epsilon(2472, worksheet.xi_f_e175, 0.001); end
  def test_xi_f_o175; assert_equal("(i)", worksheet.xi_f_o175); end
  def test_xi_f_p175; assert_equal("Paper", worksheet.xi_f_p175); end
  def test_xi_f_q175; assert_in_delta(0.006190445388349514, worksheet.xi_f_q175, 0.001); end
  def test_xi_f_r175; assert_in_delta(0.006190445388349514, worksheet.xi_f_r175, 0.001); end
  def test_xi_f_s175; assert_in_delta(0.006190445388349514, worksheet.xi_f_s175, 0.001); end
  def test_xi_f_t175; assert_in_delta(0.006190445388349514, worksheet.xi_f_t175, 0.001); end
  def test_xi_f_u175; assert_in_delta(0.006190445388349514, worksheet.xi_f_u175, 0.001); end
  def test_xi_f_v175; assert_in_delta(0.006190445388349514, worksheet.xi_f_v175, 0.001); end
  def test_xi_f_w175; assert_in_delta(0.006190445388349514, worksheet.xi_f_w175, 0.001); end
  def test_xi_f_x175; assert_in_delta(0.006190445388349514, worksheet.xi_f_x175, 0.001); end
  def test_xi_f_y175; assert_in_delta(0.006190445388349514, worksheet.xi_f_y175, 0.001); end
  def test_xi_f_aa175; assert_equal("V.01", worksheet.xi_f_aa175); end
  def test_xi_f_ab175; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_ab175); end
  def test_xi_f_ac175; assert_in_delta(0.23347311838286128, worksheet.xi_f_ac175, 0.001); end
  def test_xi_f_ad175; assert_in_delta(0.23347311838286128, worksheet.xi_f_ad175, 0.001); end
  def test_xi_f_ae175; assert_in_delta(0.23347311838286128, worksheet.xi_f_ae175, 0.001); end
  def test_xi_f_af175; assert_in_delta(0.23347311838286128, worksheet.xi_f_af175, 0.001); end
  def test_xi_f_ag175; assert_in_delta(0.23347311838286128, worksheet.xi_f_ag175, 0.001); end
  def test_xi_f_ah175; assert_in_delta(0.23347311838286128, worksheet.xi_f_ah175, 0.001); end
  def test_xi_f_ai175; assert_in_delta(0.23347311838286128, worksheet.xi_f_ai175, 0.001); end
  def test_xi_f_aj175; assert_in_delta(0.23347311838286128, worksheet.xi_f_aj175, 0.001); end
  def test_xi_f_ak175; assert_in_delta(0.23347311838286128, worksheet.xi_f_ak175, 0.001); end
  def test_xi_f_am175; assert_equal("(i)", worksheet.xi_f_am175); end
  def test_xi_f_an175; assert_equal("Paper", worksheet.xi_f_an175); end
  def test_xi_f_ao175; assert_in_delta(0, (worksheet.xi_f_ao175||0), 0.001); end
  def test_xi_f_ap175; assert_in_delta(0, (worksheet.xi_f_ap175||0), 0.001); end
  def test_xi_f_aq175; assert_in_delta(0, (worksheet.xi_f_aq175||0), 0.001); end
  def test_xi_f_ar175; assert_in_delta(0, (worksheet.xi_f_ar175||0), 0.001); end
  def test_xi_f_as175; assert_in_delta(0, (worksheet.xi_f_as175||0), 0.001); end
  def test_xi_f_at175; assert_in_delta(0, (worksheet.xi_f_at175||0), 0.001); end
  def test_xi_f_au175; assert_in_delta(0, (worksheet.xi_f_au175||0), 0.001); end
  def test_xi_f_av175; assert_in_delta(0, (worksheet.xi_f_av175||0), 0.001); end
  def test_xi_f_aw175; assert_in_delta(0, (worksheet.xi_f_aw175||0), 0.001); end
  def test_xi_f_ax175; assert_equal("(i)", worksheet.xi_f_ax175); end
  def test_xi_f_ay175; assert_equal("Paper", worksheet.xi_f_ay175); end
  def test_xi_f_az175; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az175, 0.001); end
  def test_xi_f_ba175; assert_in_epsilon(3.272476507946944, worksheet.xi_f_ba175, 0.001); end
  def test_xi_f_bb175; assert_in_epsilon(3.272476507946944, worksheet.xi_f_bb175, 0.001); end
  def test_xi_f_bc175; assert_in_epsilon(3.272476507946944, worksheet.xi_f_bc175, 0.001); end
  def test_xi_f_bd175; assert_in_epsilon(3.272476507946944, worksheet.xi_f_bd175, 0.001); end
  def test_xi_f_be175; assert_in_epsilon(3.272476507946944, worksheet.xi_f_be175, 0.001); end
  def test_xi_f_bf175; assert_in_epsilon(3.272476507946944, worksheet.xi_f_bf175, 0.001); end
  def test_xi_f_bg175; assert_in_epsilon(3.272476507946944, worksheet.xi_f_bg175, 0.001); end
  def test_xi_f_bi175; assert_equal("(i)", worksheet.xi_f_bi175); end
  def test_xi_f_bj175; assert_equal("Cost Baseline", worksheet.xi_f_bj175); end
  def test_xi_f_bu175; assert_equal("Cost Baseline", worksheet.xi_f_bu175); end
  def test_xi_f_bv175; assert_in_delta(0, (worksheet.xi_f_bv175||0), 0.001); end
  def test_xi_f_bw175; assert_in_delta(0, (worksheet.xi_f_bw175||0), 0.001); end
  def test_xi_f_bx175; assert_in_delta(0, (worksheet.xi_f_bx175||0), 0.001); end
  def test_xi_f_by175; assert_in_delta(0, (worksheet.xi_f_by175||0), 0.001); end
  def test_xi_f_bz175; assert_in_delta(0, (worksheet.xi_f_bz175||0), 0.001); end
  def test_xi_f_ca175; assert_in_delta(0, (worksheet.xi_f_ca175||0), 0.001); end
  def test_xi_f_cb175; assert_in_delta(0, (worksheet.xi_f_cb175||0), 0.001); end
  def test_xi_f_cc175; assert_in_delta(0, (worksheet.xi_f_cc175||0), 0.001); end
  def test_xi_f_cd175; assert_in_delta(0, (worksheet.xi_f_cd175||0), 0.001); end
  def test_xi_f_aa176; assert_equal("V.03", worksheet.xi_f_aa176); end
  def test_xi_f_ab176; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab176); end
  def test_xi_f_ac176; assert_in_delta(0.0215647077482191, worksheet.xi_f_ac176, 0.001); end
  def test_xi_f_ad176; assert_in_delta(0.0215647077482191, worksheet.xi_f_ad176, 0.001); end
  def test_xi_f_ae176; assert_in_delta(0.0215647077482191, worksheet.xi_f_ae176, 0.001); end
  def test_xi_f_af176; assert_in_delta(0.0215647077482191, worksheet.xi_f_af176, 0.001); end
  def test_xi_f_ag176; assert_in_delta(0.0215647077482191, worksheet.xi_f_ag176, 0.001); end
  def test_xi_f_ah176; assert_in_delta(0.0215647077482191, worksheet.xi_f_ah176, 0.001); end
  def test_xi_f_ai176; assert_in_delta(0.0215647077482191, worksheet.xi_f_ai176, 0.001); end
  def test_xi_f_aj176; assert_in_delta(0.0215647077482191, worksheet.xi_f_aj176, 0.001); end
  def test_xi_f_ak176; assert_in_delta(0.0215647077482191, worksheet.xi_f_ak176, 0.001); end
  def test_xi_f_bj176; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bj176); end
  def test_xi_f_bk176; assert_in_delta(0, (worksheet.xi_f_bk176||0), 0.001); end
  def test_xi_f_bl176; assert_in_delta(0, (worksheet.xi_f_bl176||0), 0.001); end
  def test_xi_f_bm176; assert_in_delta(0, (worksheet.xi_f_bm176||0), 0.001); end
  def test_xi_f_bn176; assert_in_delta(0, (worksheet.xi_f_bn176||0), 0.001); end
  def test_xi_f_bo176; assert_in_delta(0, (worksheet.xi_f_bo176||0), 0.001); end
  def test_xi_f_bp176; assert_in_delta(0, (worksheet.xi_f_bp176||0), 0.001); end
  def test_xi_f_bq176; assert_in_delta(0, (worksheet.xi_f_bq176||0), 0.001); end
  def test_xi_f_br176; assert_in_delta(0, (worksheet.xi_f_br176||0), 0.001); end
  def test_xi_f_bs176; assert_in_delta(0, (worksheet.xi_f_bs176||0), 0.001); end
  def test_xi_f_bu176; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bu176); end
  def test_xi_f_bv176; assert_in_delta(0, (worksheet.xi_f_bv176||0), 0.001); end
  def test_xi_f_bw176; assert_in_delta(0, (worksheet.xi_f_bw176||0), 0.001); end
  def test_xi_f_bx176; assert_in_delta(0, (worksheet.xi_f_bx176||0), 0.001); end
  def test_xi_f_by176; assert_in_delta(0, (worksheet.xi_f_by176||0), 0.001); end
  def test_xi_f_bz176; assert_in_delta(0, (worksheet.xi_f_bz176||0), 0.001); end
  def test_xi_f_ca176; assert_in_delta(0, (worksheet.xi_f_ca176||0), 0.001); end
  def test_xi_f_cb176; assert_in_delta(0, (worksheet.xi_f_cb176||0), 0.001); end
  def test_xi_f_cc176; assert_in_delta(0, (worksheet.xi_f_cc176||0), 0.001); end
  def test_xi_f_cd176; assert_in_delta(0, (worksheet.xi_f_cd176||0), 0.001); end
  def test_xi_f_aa177; assert_equal("V.05", worksheet.xi_f_aa177); end
  def test_xi_f_ab177; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_ab177); end
  def test_xi_f_ac177; assert_in_delta(0.19583773694467693, worksheet.xi_f_ac177, 0.001); end
  def test_xi_f_ad177; assert_in_delta(0.19583773694467693, worksheet.xi_f_ad177, 0.001); end
  def test_xi_f_ae177; assert_in_delta(0.19583773694467693, worksheet.xi_f_ae177, 0.001); end
  def test_xi_f_af177; assert_in_delta(0.19583773694467693, worksheet.xi_f_af177, 0.001); end
  def test_xi_f_ag177; assert_in_delta(0.19583773694467693, worksheet.xi_f_ag177, 0.001); end
  def test_xi_f_ah177; assert_in_delta(0.19583773694467693, worksheet.xi_f_ah177, 0.001); end
  def test_xi_f_ai177; assert_in_delta(0.19583773694467693, worksheet.xi_f_ai177, 0.001); end
  def test_xi_f_aj177; assert_in_delta(0.19583773694467693, worksheet.xi_f_aj177, 0.001); end
  def test_xi_f_ak177; assert_in_delta(0.19583773694467693, worksheet.xi_f_ak177, 0.001); end
  def test_xi_f_aa178; assert_equal("V.04", worksheet.xi_f_aa178); end
  def test_xi_f_ab178; assert_equal("Liquid hydrocarbons", worksheet.xi_f_ab178); end
  def test_xi_f_ac178; assert_in_delta(0.029643631441892818, worksheet.xi_f_ac178, 0.001); end
  def test_xi_f_ad178; assert_in_delta(0.029643631441892818, worksheet.xi_f_ad178, 0.001); end
  def test_xi_f_ae178; assert_in_delta(0.029643631441892818, worksheet.xi_f_ae178, 0.001); end
  def test_xi_f_af178; assert_in_delta(0.029643631441892818, worksheet.xi_f_af178, 0.001); end
  def test_xi_f_ag178; assert_in_delta(0.029643631441892818, worksheet.xi_f_ag178, 0.001); end
  def test_xi_f_ah178; assert_in_delta(0.029643631441892818, worksheet.xi_f_ah178, 0.001); end
  def test_xi_f_ai178; assert_in_delta(0.029643631441892818, worksheet.xi_f_ai178, 0.001); end
  def test_xi_f_aj178; assert_in_delta(0.029643631441892818, worksheet.xi_f_aj178, 0.001); end
  def test_xi_f_ak178; assert_in_delta(0.029643631441892818, worksheet.xi_f_ak178, 0.001); end
  def test_xi_f_aa179; assert_equal("V.03", worksheet.xi_f_aa179); end
  def test_xi_f_ab179; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab179); end
  def test_xi_f_ac179; assert_in_delta(0.5194808054823499, worksheet.xi_f_ac179, 0.001); end
  def test_xi_f_ad179; assert_in_delta(0.5194808054823499, worksheet.xi_f_ad179, 0.001); end
  def test_xi_f_ae179; assert_in_delta(0.5194808054823499, worksheet.xi_f_ae179, 0.001); end
  def test_xi_f_af179; assert_in_delta(0.5194808054823499, worksheet.xi_f_af179, 0.001); end
  def test_xi_f_ag179; assert_in_delta(0.5194808054823499, worksheet.xi_f_ag179, 0.001); end
  def test_xi_f_ah179; assert_in_delta(0.5194808054823499, worksheet.xi_f_ah179, 0.001); end
  def test_xi_f_ai179; assert_in_delta(0.5194808054823499, worksheet.xi_f_ai179, 0.001); end
  def test_xi_f_aj179; assert_in_delta(0.5194808054823499, worksheet.xi_f_aj179, 0.001); end
  def test_xi_f_ak179; assert_in_delta(0.5194808054823499, worksheet.xi_f_ak179, 0.001); end
  def test_xi_f_aa180; assert_equal("V.07", worksheet.xi_f_aa180); end
  def test_xi_f_ab180; assert_equal("Heat transport", worksheet.xi_f_ab180); end
  def test_xi_f_ac180; assert_in_delta(0, (worksheet.xi_f_ac180||0), 0.001); end
  def test_xi_f_ad180; assert_in_delta(0, (worksheet.xi_f_ad180||0), 0.001); end
  def test_xi_f_ae180; assert_in_delta(0, (worksheet.xi_f_ae180||0), 0.001); end
  def test_xi_f_af180; assert_in_delta(0, (worksheet.xi_f_af180||0), 0.001); end
  def test_xi_f_ag180; assert_in_delta(0, (worksheet.xi_f_ag180||0), 0.001); end
  def test_xi_f_ah180; assert_in_delta(0, (worksheet.xi_f_ah180||0), 0.001); end
  def test_xi_f_ai180; assert_in_delta(0, (worksheet.xi_f_ai180||0), 0.001); end
  def test_xi_f_aj180; assert_in_delta(0, (worksheet.xi_f_aj180||0), 0.001); end
  def test_xi_f_ak180; assert_in_delta(0, (worksheet.xi_f_ak180||0), 0.001); end
  def test_xi_f_aa181; assert_equal("Intensity", worksheet.xi_f_aa181); end
  def test_xi_f_ab181; assert_equal("Intensity", worksheet.xi_f_ab181); end
  def test_xi_f_ac181; assert_in_delta(0.21384848335390436, worksheet.xi_f_ac181, 0.001); end
  def test_xi_f_ad181; assert_in_delta(0.21384848335390436, worksheet.xi_f_ad181, 0.001); end
  def test_xi_f_ae181; assert_in_delta(0.21384848335390436, worksheet.xi_f_ae181, 0.001); end
  def test_xi_f_af181; assert_in_delta(0.21384848335390436, worksheet.xi_f_af181, 0.001); end
  def test_xi_f_ag181; assert_in_delta(0.21384848335390436, worksheet.xi_f_ag181, 0.001); end
  def test_xi_f_ah181; assert_in_delta(0.21384848335390436, worksheet.xi_f_ah181, 0.001); end
  def test_xi_f_ai181; assert_in_delta(0.21384848335390436, worksheet.xi_f_ai181, 0.001); end
  def test_xi_f_aj181; assert_in_delta(0.21384848335390436, worksheet.xi_f_aj181, 0.001); end
  def test_xi_f_ak181; assert_in_delta(0.21384848335390436, worksheet.xi_f_ak181, 0.001); end
  def test_xi_f_aa182; assert_equal("Cost", worksheet.xi_f_aa182); end
  def test_xi_f_ab182; assert_equal("Cost", worksheet.xi_f_ab182); end
  def test_xi_f_ac182; assert_in_epsilon(34.28943589936516, worksheet.xi_f_ac182, 0.001); end
  def test_xi_f_ad182; assert_in_epsilon(43.92709318990353, worksheet.xi_f_ad182, 0.001); end
  def test_xi_f_ae182; assert_in_epsilon(47.6469021019049, worksheet.xi_f_ae182, 0.001); end
  def test_xi_f_af182; assert_in_epsilon(54.51264247678315, worksheet.xi_f_af182, 0.001); end
  def test_xi_f_ag182; assert_in_epsilon(55.26804242216741, worksheet.xi_f_ag182, 0.001); end
  def test_xi_f_ah182; assert_in_epsilon(54.197427401825344, worksheet.xi_f_ah182, 0.001); end
  def test_xi_f_ai182; assert_in_epsilon(53.43836807752227, worksheet.xi_f_ai182, 0.001); end
  def test_xi_f_aj182; assert_in_epsilon(52.74335111945895, worksheet.xi_f_aj182, 0.001); end
  def test_xi_f_ak182; assert_in_epsilon(52.01538860437577, worksheet.xi_f_ak182, 0.001); end
  def test_xi_f_b184; assert_in_epsilon(2, worksheet.xi_f_b184, 0.001); end
  def test_xi_f_c184; assert_equal("Compute energy efficiency", worksheet.xi_f_c184); end
  def test_xi_f_c185; assert_equal("Energy efficiency", worksheet.xi_f_c185); end
  def test_xi_f_b186; assert_in_delta(1, worksheet.xi_f_b186, 0.001); end
  def test_xi_f_c186; assert_equal("Output Growth (kt)", worksheet.xi_f_c186); end
  def test_xi_f_n186; assert_in_epsilon(2, worksheet.xi_f_n186, 0.001); end
  def test_xi_f_o186; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_f_o186); end
  def test_xi_f_z186; assert_in_epsilon(3, worksheet.xi_f_z186, 0.001); end
  def test_xi_f_aa186; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_f_aa186); end
  def test_xi_f_al186; assert_in_epsilon(4, worksheet.xi_f_al186, 0.001); end
  def test_xi_f_am186; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_f_am186); end
  def test_xi_f_ax186; assert_in_epsilon(5, worksheet.xi_f_ax186, 0.001); end
  def test_xi_f_ay186; assert_equal("Emissions (MMtCO2e)", worksheet.xi_f_ay186); end
  def test_xi_f_bi186; assert_in_epsilon(6, worksheet.xi_f_bi186, 0.001); end
  def test_xi_f_bj186; assert_equal("Costs : Energy (MEUR)", worksheet.xi_f_bj186); end
  def test_xi_f_bt186; assert_in_epsilon(7, worksheet.xi_f_bt186, 0.001); end
  def test_xi_f_bu186; assert_equal("Costs : Capex (MEUR)", worksheet.xi_f_bu186); end
  def test_xi_f_c187; assert_equal("Product type", worksheet.xi_f_c187); end
  def test_xi_f_d187; assert_equal("Description", worksheet.xi_f_d187); end
  def test_xi_f_e187; assert_in_epsilon(2010, worksheet.xi_f_e187, 0.001); end
  def test_xi_f_f187; assert_in_epsilon(2015, worksheet.xi_f_f187, 0.001); end
  def test_xi_f_g187; assert_in_epsilon(2020, worksheet.xi_f_g187, 0.001); end
  def test_xi_f_h187; assert_in_epsilon(2025, worksheet.xi_f_h187, 0.001); end
  def test_xi_f_i187; assert_in_epsilon(2030, worksheet.xi_f_i187, 0.001); end
  def test_xi_f_j187; assert_in_epsilon(2035, worksheet.xi_f_j187, 0.001); end
  def test_xi_f_k187; assert_in_epsilon(2040, worksheet.xi_f_k187, 0.001); end
  def test_xi_f_l187; assert_in_epsilon(2045, worksheet.xi_f_l187, 0.001); end
  def test_xi_f_m187; assert_in_epsilon(2050, worksheet.xi_f_m187, 0.001); end
  def test_xi_f_o187; assert_equal("Industry", worksheet.xi_f_o187); end
  def test_xi_f_p187; assert_equal("Description", worksheet.xi_f_p187); end
  def test_xi_f_q187; assert_in_epsilon(2010, worksheet.xi_f_q187, 0.001); end
  def test_xi_f_r187; assert_in_epsilon(2015, worksheet.xi_f_r187, 0.001); end
  def test_xi_f_s187; assert_in_epsilon(2020, worksheet.xi_f_s187, 0.001); end
  def test_xi_f_t187; assert_in_epsilon(2025, worksheet.xi_f_t187, 0.001); end
  def test_xi_f_u187; assert_in_epsilon(2030, worksheet.xi_f_u187, 0.001); end
  def test_xi_f_v187; assert_in_epsilon(2035, worksheet.xi_f_v187, 0.001); end
  def test_xi_f_w187; assert_in_epsilon(2040, worksheet.xi_f_w187, 0.001); end
  def test_xi_f_x187; assert_in_epsilon(2045, worksheet.xi_f_x187, 0.001); end
  def test_xi_f_y187; assert_in_epsilon(2050, worksheet.xi_f_y187, 0.001); end
  def test_xi_f_aa187; assert_equal("Vector", worksheet.xi_f_aa187); end
  def test_xi_f_ab187; assert_equal("Description", worksheet.xi_f_ab187); end
  def test_xi_f_ac187; assert_in_epsilon(2010, worksheet.xi_f_ac187, 0.001); end
  def test_xi_f_ad187; assert_in_epsilon(2015, worksheet.xi_f_ad187, 0.001); end
  def test_xi_f_ae187; assert_in_epsilon(2020, worksheet.xi_f_ae187, 0.001); end
  def test_xi_f_af187; assert_in_epsilon(2025, worksheet.xi_f_af187, 0.001); end
  def test_xi_f_ag187; assert_in_epsilon(2030, worksheet.xi_f_ag187, 0.001); end
  def test_xi_f_ah187; assert_in_epsilon(2035, worksheet.xi_f_ah187, 0.001); end
  def test_xi_f_ai187; assert_in_epsilon(2040, worksheet.xi_f_ai187, 0.001); end
  def test_xi_f_aj187; assert_in_epsilon(2045, worksheet.xi_f_aj187, 0.001); end
  def test_xi_f_ak187; assert_in_epsilon(2050, worksheet.xi_f_ak187, 0.001); end
  def test_xi_f_am187; assert_equal("Industry", worksheet.xi_f_am187); end
  def test_xi_f_an187; assert_equal("Description", worksheet.xi_f_an187); end
  def test_xi_f_ao187; assert_in_epsilon(2010, worksheet.xi_f_ao187, 0.001); end
  def test_xi_f_ap187; assert_in_epsilon(2015, worksheet.xi_f_ap187, 0.001); end
  def test_xi_f_aq187; assert_in_epsilon(2020, worksheet.xi_f_aq187, 0.001); end
  def test_xi_f_ar187; assert_in_epsilon(2025, worksheet.xi_f_ar187, 0.001); end
  def test_xi_f_as187; assert_in_epsilon(2030, worksheet.xi_f_as187, 0.001); end
  def test_xi_f_at187; assert_in_epsilon(2035, worksheet.xi_f_at187, 0.001); end
  def test_xi_f_au187; assert_in_epsilon(2040, worksheet.xi_f_au187, 0.001); end
  def test_xi_f_av187; assert_in_epsilon(2045, worksheet.xi_f_av187, 0.001); end
  def test_xi_f_aw187; assert_in_epsilon(2050, worksheet.xi_f_aw187, 0.001); end
  def test_xi_f_ax187; assert_equal("Industry", worksheet.xi_f_ax187); end
  def test_xi_f_ay187; assert_equal("Description", worksheet.xi_f_ay187); end
  def test_xi_f_az187; assert_in_epsilon(2010, worksheet.xi_f_az187, 0.001); end
  def test_xi_f_ba187; assert_in_epsilon(2015, worksheet.xi_f_ba187, 0.001); end
  def test_xi_f_bb187; assert_in_epsilon(2020, worksheet.xi_f_bb187, 0.001); end
  def test_xi_f_bc187; assert_in_epsilon(2025, worksheet.xi_f_bc187, 0.001); end
  def test_xi_f_bd187; assert_in_epsilon(2030, worksheet.xi_f_bd187, 0.001); end
  def test_xi_f_be187; assert_in_epsilon(2035, worksheet.xi_f_be187, 0.001); end
  def test_xi_f_bf187; assert_in_epsilon(2040, worksheet.xi_f_bf187, 0.001); end
  def test_xi_f_bg187; assert_in_epsilon(2045, worksheet.xi_f_bg187, 0.001); end
  def test_xi_f_bh187; assert_in_epsilon(2050, worksheet.xi_f_bh187, 0.001); end
  def test_xi_f_bi187; assert_equal("Industry", worksheet.xi_f_bi187); end
  def test_xi_f_bj187; assert_equal("Description", worksheet.xi_f_bj187); end
  def test_xi_f_bk187; assert_in_epsilon(2010, worksheet.xi_f_bk187, 0.001); end
  def test_xi_f_bl187; assert_in_epsilon(2015, worksheet.xi_f_bl187, 0.001); end
  def test_xi_f_bm187; assert_in_epsilon(2020, worksheet.xi_f_bm187, 0.001); end
  def test_xi_f_bn187; assert_in_epsilon(2025, worksheet.xi_f_bn187, 0.001); end
  def test_xi_f_bo187; assert_in_epsilon(2030, worksheet.xi_f_bo187, 0.001); end
  def test_xi_f_bp187; assert_in_epsilon(2035, worksheet.xi_f_bp187, 0.001); end
  def test_xi_f_bq187; assert_in_epsilon(2040, worksheet.xi_f_bq187, 0.001); end
  def test_xi_f_br187; assert_in_epsilon(2045, worksheet.xi_f_br187, 0.001); end
  def test_xi_f_bs187; assert_in_epsilon(2050, worksheet.xi_f_bs187, 0.001); end
  def test_xi_f_bt187; assert_equal("Industry", worksheet.xi_f_bt187); end
  def test_xi_f_bu187; assert_equal("Description", worksheet.xi_f_bu187); end
  def test_xi_f_bv187; assert_in_epsilon(2010, worksheet.xi_f_bv187, 0.001); end
  def test_xi_f_bw187; assert_in_epsilon(2015, worksheet.xi_f_bw187, 0.001); end
  def test_xi_f_bx187; assert_in_epsilon(2020, worksheet.xi_f_bx187, 0.001); end
  def test_xi_f_by187; assert_in_epsilon(2025, worksheet.xi_f_by187, 0.001); end
  def test_xi_f_bz187; assert_in_epsilon(2030, worksheet.xi_f_bz187, 0.001); end
  def test_xi_f_ca187; assert_in_epsilon(2035, worksheet.xi_f_ca187, 0.001); end
  def test_xi_f_cb187; assert_in_epsilon(2040, worksheet.xi_f_cb187, 0.001); end
  def test_xi_f_cc187; assert_in_epsilon(2045, worksheet.xi_f_cc187, 0.001); end
  def test_xi_f_cd187; assert_in_epsilon(2050, worksheet.xi_f_cd187, 0.001); end
  def test_xi_f_c188; assert_equal("(i)", worksheet.xi_f_c188); end
  def test_xi_f_d188; assert_equal("Paper", worksheet.xi_f_d188); end
  def test_xi_f_e188; assert_in_epsilon(2472, worksheet.xi_f_e188, 0.001); end
  def test_xi_f_f188; assert_in_epsilon(2472, worksheet.xi_f_f188, 0.001); end
  def test_xi_f_g188; assert_in_epsilon(2472, worksheet.xi_f_g188, 0.001); end
  def test_xi_f_h188; assert_in_epsilon(2472, worksheet.xi_f_h188, 0.001); end
  def test_xi_f_i188; assert_in_epsilon(2472, worksheet.xi_f_i188, 0.001); end
  def test_xi_f_j188; assert_in_epsilon(2472, worksheet.xi_f_j188, 0.001); end
  def test_xi_f_k188; assert_in_epsilon(2472, worksheet.xi_f_k188, 0.001); end
  def test_xi_f_l188; assert_in_epsilon(2472, worksheet.xi_f_l188, 0.001); end
  def test_xi_f_m188; assert_in_epsilon(2472, worksheet.xi_f_m188, 0.001); end
  def test_xi_f_o188; assert_equal("(i)", worksheet.xi_f_o188); end
  def test_xi_f_p188; assert_equal("Paper", worksheet.xi_f_p188); end
  def test_xi_f_q188; assert_in_delta(0.006190445388349514, worksheet.xi_f_q188, 0.001); end
  def test_xi_f_aa188; assert_equal("V.01", worksheet.xi_f_aa188); end
  def test_xi_f_ab188; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_ab188); end
  def test_xi_f_ac188; assert_in_delta(0.23347311838286128, worksheet.xi_f_ac188, 0.001); end
  def test_xi_f_ad188; assert_in_delta(0.23347311838286128, worksheet.xi_f_ad188, 0.001); end
  def test_xi_f_ae188; assert_in_delta(0.23347311838286128, worksheet.xi_f_ae188, 0.001); end
  def test_xi_f_af188; assert_in_delta(0.23347311838286128, worksheet.xi_f_af188, 0.001); end
  def test_xi_f_ag188; assert_in_delta(0.23347311838286128, worksheet.xi_f_ag188, 0.001); end
  def test_xi_f_ah188; assert_in_delta(0.23347311838286128, worksheet.xi_f_ah188, 0.001); end
  def test_xi_f_ai188; assert_in_delta(0.23347311838286128, worksheet.xi_f_ai188, 0.001); end
  def test_xi_f_aj188; assert_in_delta(0.23347311838286128, worksheet.xi_f_aj188, 0.001); end
  def test_xi_f_ak188; assert_in_delta(0.23347311838286128, worksheet.xi_f_ak188, 0.001); end
  def test_xi_f_am188; assert_equal("(i)", worksheet.xi_f_am188); end
  def test_xi_f_an188; assert_equal("Paper", worksheet.xi_f_an188); end
  def test_xi_f_ao188; assert_in_delta(0, (worksheet.xi_f_ao188||0), 0.001); end
  def test_xi_f_ap188; assert_in_delta(0, (worksheet.xi_f_ap188||0), 0.001); end
  def test_xi_f_aq188; assert_in_delta(0, (worksheet.xi_f_aq188||0), 0.001); end
  def test_xi_f_ar188; assert_in_delta(0, (worksheet.xi_f_ar188||0), 0.001); end
  def test_xi_f_as188; assert_in_delta(0, (worksheet.xi_f_as188||0), 0.001); end
  def test_xi_f_at188; assert_in_delta(0, (worksheet.xi_f_at188||0), 0.001); end
  def test_xi_f_au188; assert_in_delta(0, (worksheet.xi_f_au188||0), 0.001); end
  def test_xi_f_av188; assert_in_delta(0, (worksheet.xi_f_av188||0), 0.001); end
  def test_xi_f_aw188; assert_in_delta(0, (worksheet.xi_f_aw188||0), 0.001); end
  def test_xi_f_ax188; assert_equal("(i)", worksheet.xi_f_ax188); end
  def test_xi_f_ay188; assert_equal("Paper", worksheet.xi_f_ay188); end
  def test_xi_f_az188; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az188, 0.001); end
  def test_xi_f_ba188; assert_in_epsilon(3.19066459524827, worksheet.xi_f_ba188, 0.001); end
  def test_xi_f_bb188; assert_in_epsilon(3.1088526825495966, worksheet.xi_f_bb188, 0.001); end
  def test_xi_f_bc188; assert_in_epsilon(3.0270407698509225, worksheet.xi_f_bc188, 0.001); end
  def test_xi_f_bd188; assert_in_epsilon(2.9452288571522494, worksheet.xi_f_bd188, 0.001); end
  def test_xi_f_be188; assert_in_epsilon(2.8634169444535758, worksheet.xi_f_be188, 0.001); end
  def test_xi_f_bf188; assert_in_epsilon(2.781605031754902, worksheet.xi_f_bf188, 0.001); end
  def test_xi_f_bg188; assert_in_epsilon(2.699793119056228, worksheet.xi_f_bg188, 0.001); end
  def test_xi_f_bj188; assert_equal("Cost Initiative", worksheet.xi_f_bj188); end
  def test_xi_f_bu188; assert_equal("Cost Initiative", worksheet.xi_f_bu188); end
  def test_xi_f_bv188; assert_in_delta(0, (worksheet.xi_f_bv188||0), 0.001); end
  def test_xi_f_bw188; assert_in_epsilon(16.805167176292116, worksheet.xi_f_bw188, 0.001); end
  def test_xi_f_bx188; assert_in_epsilon(36.4565054096945, worksheet.xi_f_bx188, 0.001); end
  def test_xi_f_by188; assert_in_epsilon(62.56462721651326, worksheet.xi_f_by188, 0.001); end
  def test_xi_f_bz188; assert_in_epsilon(84.57547494851372, worksheet.xi_f_bz188, 0.001); end
  def test_xi_f_ca188; assert_in_epsilon(103.67142028669161, worksheet.xi_f_ca188, 0.001); end
  def test_xi_f_cb188; assert_in_epsilon(122.66334655315711, worksheet.xi_f_cb188, 0.001); end
  def test_xi_f_cc188; assert_in_epsilon(141.2459914927574, worksheet.xi_f_cc188, 0.001); end
  def test_xi_f_cd188; assert_in_epsilon(159.19602008853155, worksheet.xi_f_cd188, 0.001); end
  def test_xi_f_aa189; assert_equal("V.03", worksheet.xi_f_aa189); end
  def test_xi_f_ab189; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab189); end
  def test_xi_f_ac189; assert_in_delta(0.0215647077482191, worksheet.xi_f_ac189, 0.001); end
  def test_xi_f_ad189; assert_in_delta(0.0215647077482191, worksheet.xi_f_ad189, 0.001); end
  def test_xi_f_ae189; assert_in_delta(0.0215647077482191, worksheet.xi_f_ae189, 0.001); end
  def test_xi_f_af189; assert_in_delta(0.0215647077482191, worksheet.xi_f_af189, 0.001); end
  def test_xi_f_ag189; assert_in_delta(0.0215647077482191, worksheet.xi_f_ag189, 0.001); end
  def test_xi_f_ah189; assert_in_delta(0.0215647077482191, worksheet.xi_f_ah189, 0.001); end
  def test_xi_f_ai189; assert_in_delta(0.0215647077482191, worksheet.xi_f_ai189, 0.001); end
  def test_xi_f_aj189; assert_in_delta(0.0215647077482191, worksheet.xi_f_aj189, 0.001); end
  def test_xi_f_ak189; assert_in_delta(0.0215647077482191, worksheet.xi_f_ak189, 0.001); end
  def test_xi_f_bj189; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bj189); end
  def test_xi_f_bu189; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bu189); end
  def test_xi_f_bv189; assert_in_delta(0, (worksheet.xi_f_bv189||0), 0.001); end
  def test_xi_f_bw189; assert_in_epsilon(16.805167176292116, worksheet.xi_f_bw189, 0.001); end
  def test_xi_f_bx189; assert_in_epsilon(36.4565054096945, worksheet.xi_f_bx189, 0.001); end
  def test_xi_f_by189; assert_in_epsilon(62.56462721651326, worksheet.xi_f_by189, 0.001); end
  def test_xi_f_bz189; assert_in_epsilon(84.57547494851372, worksheet.xi_f_bz189, 0.001); end
  def test_xi_f_ca189; assert_in_epsilon(103.67142028669161, worksheet.xi_f_ca189, 0.001); end
  def test_xi_f_cb189; assert_in_epsilon(122.66334655315711, worksheet.xi_f_cb189, 0.001); end
  def test_xi_f_cc189; assert_in_epsilon(141.2459914927574, worksheet.xi_f_cc189, 0.001); end
  def test_xi_f_aa190; assert_equal("V.05", worksheet.xi_f_aa190); end
  def test_xi_f_ab190; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_ab190); end
  def test_xi_f_ac190; assert_in_delta(0.19583773694467693, worksheet.xi_f_ac190, 0.001); end
  def test_xi_f_ad190; assert_in_delta(0.19583773694467693, worksheet.xi_f_ad190, 0.001); end
  def test_xi_f_ae190; assert_in_delta(0.19583773694467693, worksheet.xi_f_ae190, 0.001); end
  def test_xi_f_af190; assert_in_delta(0.19583773694467693, worksheet.xi_f_af190, 0.001); end
  def test_xi_f_ag190; assert_in_delta(0.19583773694467693, worksheet.xi_f_ag190, 0.001); end
  def test_xi_f_ah190; assert_in_delta(0.19583773694467693, worksheet.xi_f_ah190, 0.001); end
  def test_xi_f_ai190; assert_in_delta(0.19583773694467693, worksheet.xi_f_ai190, 0.001); end
  def test_xi_f_aj190; assert_in_delta(0.19583773694467693, worksheet.xi_f_aj190, 0.001); end
  def test_xi_f_ak190; assert_in_delta(0.19583773694467693, worksheet.xi_f_ak190, 0.001); end
  def test_xi_f_aa191; assert_equal("V.04", worksheet.xi_f_aa191); end
  def test_xi_f_ab191; assert_equal("Liquid hydrocarbons", worksheet.xi_f_ab191); end
  def test_xi_f_ac191; assert_in_delta(0.029643631441892818, worksheet.xi_f_ac191, 0.001); end
  def test_xi_f_ad191; assert_in_delta(0.029643631441892818, worksheet.xi_f_ad191, 0.001); end
  def test_xi_f_ae191; assert_in_delta(0.029643631441892818, worksheet.xi_f_ae191, 0.001); end
  def test_xi_f_af191; assert_in_delta(0.029643631441892818, worksheet.xi_f_af191, 0.001); end
  def test_xi_f_ag191; assert_in_delta(0.029643631441892818, worksheet.xi_f_ag191, 0.001); end
  def test_xi_f_ah191; assert_in_delta(0.029643631441892818, worksheet.xi_f_ah191, 0.001); end
  def test_xi_f_ai191; assert_in_delta(0.029643631441892818, worksheet.xi_f_ai191, 0.001); end
  def test_xi_f_aj191; assert_in_delta(0.029643631441892818, worksheet.xi_f_aj191, 0.001); end
  def test_xi_f_ak191; assert_in_delta(0.029643631441892818, worksheet.xi_f_ak191, 0.001); end
  def test_xi_f_aa192; assert_equal("V.03", worksheet.xi_f_aa192); end
  def test_xi_f_ab192; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab192); end
  def test_xi_f_ac192; assert_in_delta(0.5194808054823499, worksheet.xi_f_ac192, 0.001); end
  def test_xi_f_ad192; assert_in_delta(0.5194808054823499, worksheet.xi_f_ad192, 0.001); end
  def test_xi_f_ae192; assert_in_delta(0.5194808054823499, worksheet.xi_f_ae192, 0.001); end
  def test_xi_f_af192; assert_in_delta(0.5194808054823499, worksheet.xi_f_af192, 0.001); end
  def test_xi_f_ag192; assert_in_delta(0.5194808054823499, worksheet.xi_f_ag192, 0.001); end
  def test_xi_f_ah192; assert_in_delta(0.5194808054823499, worksheet.xi_f_ah192, 0.001); end
  def test_xi_f_ai192; assert_in_delta(0.5194808054823499, worksheet.xi_f_ai192, 0.001); end
  def test_xi_f_aj192; assert_in_delta(0.5194808054823499, worksheet.xi_f_aj192, 0.001); end
  def test_xi_f_ak192; assert_in_delta(0.5194808054823499, worksheet.xi_f_ak192, 0.001); end
  def test_xi_f_aa193; assert_equal("V.07", worksheet.xi_f_aa193); end
  def test_xi_f_ab193; assert_equal("Heat transport", worksheet.xi_f_ab193); end
  def test_xi_f_ac193; assert_in_delta(0, (worksheet.xi_f_ac193||0), 0.001); end
  def test_xi_f_ad193; assert_in_delta(0, (worksheet.xi_f_ad193||0), 0.001); end
  def test_xi_f_ae193; assert_in_delta(0, (worksheet.xi_f_ae193||0), 0.001); end
  def test_xi_f_af193; assert_in_delta(0, (worksheet.xi_f_af193||0), 0.001); end
  def test_xi_f_ag193; assert_in_delta(0, (worksheet.xi_f_ag193||0), 0.001); end
  def test_xi_f_ah193; assert_in_delta(0, (worksheet.xi_f_ah193||0), 0.001); end
  def test_xi_f_ai193; assert_in_delta(0, (worksheet.xi_f_ai193||0), 0.001); end
  def test_xi_f_aj193; assert_in_delta(0, (worksheet.xi_f_aj193||0), 0.001); end
  def test_xi_f_ak193; assert_in_delta(0, (worksheet.xi_f_ak193||0), 0.001); end
  def test_xi_f_aa194; assert_equal("Intensity", worksheet.xi_f_aa194); end
  def test_xi_f_ab194; assert_equal("Intensity", worksheet.xi_f_ab194); end
  def test_xi_f_ac194; assert_in_delta(0.21384848335390436, worksheet.xi_f_ac194, 0.001); end
  def test_xi_f_ad194; assert_in_delta(0.21384848335390436, worksheet.xi_f_ad194, 0.001); end
  def test_xi_f_ae194; assert_in_delta(0.21384848335390436, worksheet.xi_f_ae194, 0.001); end
  def test_xi_f_af194; assert_in_delta(0.21384848335390436, worksheet.xi_f_af194, 0.001); end
  def test_xi_f_ag194; assert_in_delta(0.21384848335390436, worksheet.xi_f_ag194, 0.001); end
  def test_xi_f_ah194; assert_in_delta(0.21384848335390436, worksheet.xi_f_ah194, 0.001); end
  def test_xi_f_ai194; assert_in_delta(0.21384848335390436, worksheet.xi_f_ai194, 0.001); end
  def test_xi_f_aj194; assert_in_delta(0.21384848335390436, worksheet.xi_f_aj194, 0.001); end
  def test_xi_f_ak194; assert_in_delta(0.21384848335390436, worksheet.xi_f_ak194, 0.001); end
  def test_xi_f_aa195; assert_equal("Cost", worksheet.xi_f_aa195); end
  def test_xi_f_ab195; assert_equal("Cost", worksheet.xi_f_ab195); end
  def test_xi_f_ac195; assert_in_epsilon(34.28943589936516, worksheet.xi_f_ac195, 0.001); end
  def test_xi_f_ad195; assert_in_epsilon(43.92709318990353, worksheet.xi_f_ad195, 0.001); end
  def test_xi_f_ae195; assert_in_epsilon(47.6469021019049, worksheet.xi_f_ae195, 0.001); end
  def test_xi_f_af195; assert_in_epsilon(54.51264247678315, worksheet.xi_f_af195, 0.001); end
  def test_xi_f_ag195; assert_in_epsilon(55.26804242216741, worksheet.xi_f_ag195, 0.001); end
  def test_xi_f_ah195; assert_in_epsilon(54.197427401825344, worksheet.xi_f_ah195, 0.001); end
  def test_xi_f_ai195; assert_in_epsilon(53.43836807752227, worksheet.xi_f_ai195, 0.001); end
  def test_xi_f_aj195; assert_in_epsilon(52.74335111945895, worksheet.xi_f_aj195, 0.001); end
  def test_xi_f_ak195; assert_in_epsilon(52.01538860437577, worksheet.xi_f_ak195, 0.001); end
  def test_xi_f_b196; assert_in_epsilon(3, worksheet.xi_f_b196, 0.001); end
  def test_xi_f_c196; assert_equal("Alternative fuels (Fuel to Gas)", worksheet.xi_f_c196); end
  def test_xi_f_b197; assert_in_delta(1, worksheet.xi_f_b197, 0.001); end
  def test_xi_f_c197; assert_equal("Output Growth (kt)", worksheet.xi_f_c197); end
  def test_xi_f_n197; assert_in_epsilon(2, worksheet.xi_f_n197, 0.001); end
  def test_xi_f_o197; assert_equal("Energy demand multiplier ( (TWh/kt)", worksheet.xi_f_o197); end
  def test_xi_f_z197; assert_in_epsilon(3, worksheet.xi_f_z197, 0.001); end
  def test_xi_f_aa197; assert_equal("Energy split by vector (%) and intensity (MMtCO2e/TWh)", worksheet.xi_f_aa197); end
  def test_xi_f_al197; assert_in_epsilon(4, worksheet.xi_f_al197, 0.001); end
  def test_xi_f_am197; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_f_am197); end
  def test_xi_f_ax197; assert_in_epsilon(5, worksheet.xi_f_ax197, 0.001); end
  def test_xi_f_ay197; assert_equal("Emissions (MMtCO2e)", worksheet.xi_f_ay197); end
  def test_xi_f_bi197; assert_in_epsilon(6, worksheet.xi_f_bi197, 0.001); end
  def test_xi_f_bj197; assert_equal("Costs : Energy (€ MM)", worksheet.xi_f_bj197); end
  def test_xi_f_bt197; assert_in_epsilon(7, worksheet.xi_f_bt197, 0.001); end
  def test_xi_f_bu197; assert_equal("Costs : Capex (€ MM)", worksheet.xi_f_bu197); end
  def test_xi_f_c198; assert_equal("Product type", worksheet.xi_f_c198); end
  def test_xi_f_d198; assert_equal("Description", worksheet.xi_f_d198); end
  def test_xi_f_e198; assert_in_epsilon(2010, worksheet.xi_f_e198, 0.001); end
  def test_xi_f_f198; assert_in_epsilon(2015, worksheet.xi_f_f198, 0.001); end
  def test_xi_f_g198; assert_in_epsilon(2020, worksheet.xi_f_g198, 0.001); end
  def test_xi_f_h198; assert_in_epsilon(2025, worksheet.xi_f_h198, 0.001); end
  def test_xi_f_i198; assert_in_epsilon(2030, worksheet.xi_f_i198, 0.001); end
  def test_xi_f_j198; assert_in_epsilon(2035, worksheet.xi_f_j198, 0.001); end
  def test_xi_f_k198; assert_in_epsilon(2040, worksheet.xi_f_k198, 0.001); end
  def test_xi_f_l198; assert_in_epsilon(2045, worksheet.xi_f_l198, 0.001); end
  def test_xi_f_m198; assert_in_epsilon(2050, worksheet.xi_f_m198, 0.001); end
  def test_xi_f_o198; assert_equal("Industry", worksheet.xi_f_o198); end
  def test_xi_f_p198; assert_equal("Description", worksheet.xi_f_p198); end
  def test_xi_f_q198; assert_in_epsilon(2010, worksheet.xi_f_q198, 0.001); end
  def test_xi_f_r198; assert_in_epsilon(2015, worksheet.xi_f_r198, 0.001); end
  def test_xi_f_s198; assert_in_epsilon(2020, worksheet.xi_f_s198, 0.001); end
  def test_xi_f_t198; assert_in_epsilon(2025, worksheet.xi_f_t198, 0.001); end
  def test_xi_f_u198; assert_in_epsilon(2030, worksheet.xi_f_u198, 0.001); end
  def test_xi_f_v198; assert_in_epsilon(2035, worksheet.xi_f_v198, 0.001); end
  def test_xi_f_w198; assert_in_epsilon(2040, worksheet.xi_f_w198, 0.001); end
  def test_xi_f_x198; assert_in_epsilon(2045, worksheet.xi_f_x198, 0.001); end
  def test_xi_f_y198; assert_in_epsilon(2050, worksheet.xi_f_y198, 0.001); end
  def test_xi_f_aa198; assert_equal("Vector", worksheet.xi_f_aa198); end
  def test_xi_f_ab198; assert_equal("Description", worksheet.xi_f_ab198); end
  def test_xi_f_ac198; assert_in_epsilon(2010, worksheet.xi_f_ac198, 0.001); end
  def test_xi_f_ad198; assert_in_epsilon(2015, worksheet.xi_f_ad198, 0.001); end
  def test_xi_f_ae198; assert_in_epsilon(2020, worksheet.xi_f_ae198, 0.001); end
  def test_xi_f_af198; assert_in_epsilon(2025, worksheet.xi_f_af198, 0.001); end
  def test_xi_f_ag198; assert_in_epsilon(2030, worksheet.xi_f_ag198, 0.001); end
  def test_xi_f_ah198; assert_in_epsilon(2035, worksheet.xi_f_ah198, 0.001); end
  def test_xi_f_ai198; assert_in_epsilon(2040, worksheet.xi_f_ai198, 0.001); end
  def test_xi_f_aj198; assert_in_epsilon(2045, worksheet.xi_f_aj198, 0.001); end
  def test_xi_f_ak198; assert_in_epsilon(2050, worksheet.xi_f_ak198, 0.001); end
  def test_xi_f_am198; assert_equal("Industry", worksheet.xi_f_am198); end
  def test_xi_f_an198; assert_equal("Description", worksheet.xi_f_an198); end
  def test_xi_f_ao198; assert_in_epsilon(2010, worksheet.xi_f_ao198, 0.001); end
  def test_xi_f_ap198; assert_in_epsilon(2015, worksheet.xi_f_ap198, 0.001); end
  def test_xi_f_aq198; assert_in_epsilon(2020, worksheet.xi_f_aq198, 0.001); end
  def test_xi_f_ar198; assert_in_epsilon(2025, worksheet.xi_f_ar198, 0.001); end
  def test_xi_f_as198; assert_in_epsilon(2030, worksheet.xi_f_as198, 0.001); end
  def test_xi_f_at198; assert_in_epsilon(2035, worksheet.xi_f_at198, 0.001); end
  def test_xi_f_au198; assert_in_epsilon(2040, worksheet.xi_f_au198, 0.001); end
  def test_xi_f_av198; assert_in_epsilon(2045, worksheet.xi_f_av198, 0.001); end
  def test_xi_f_aw198; assert_in_epsilon(2050, worksheet.xi_f_aw198, 0.001); end
  def test_xi_f_ax198; assert_equal("Industry", worksheet.xi_f_ax198); end
  def test_xi_f_ay198; assert_equal("Description", worksheet.xi_f_ay198); end
  def test_xi_f_az198; assert_in_epsilon(2010, worksheet.xi_f_az198, 0.001); end
  def test_xi_f_ba198; assert_in_epsilon(2015, worksheet.xi_f_ba198, 0.001); end
  def test_xi_f_bb198; assert_in_epsilon(2020, worksheet.xi_f_bb198, 0.001); end
  def test_xi_f_bc198; assert_in_epsilon(2025, worksheet.xi_f_bc198, 0.001); end
  def test_xi_f_bd198; assert_in_epsilon(2030, worksheet.xi_f_bd198, 0.001); end
  def test_xi_f_be198; assert_in_epsilon(2035, worksheet.xi_f_be198, 0.001); end
  def test_xi_f_bf198; assert_in_epsilon(2040, worksheet.xi_f_bf198, 0.001); end
  def test_xi_f_bg198; assert_in_epsilon(2045, worksheet.xi_f_bg198, 0.001); end
  def test_xi_f_bh198; assert_in_epsilon(2050, worksheet.xi_f_bh198, 0.001); end
  def test_xi_f_bi198; assert_equal("Industry", worksheet.xi_f_bi198); end
  def test_xi_f_bj198; assert_equal("Description", worksheet.xi_f_bj198); end
  def test_xi_f_bk198; assert_in_epsilon(2010, worksheet.xi_f_bk198, 0.001); end
  def test_xi_f_bl198; assert_in_epsilon(2015, worksheet.xi_f_bl198, 0.001); end
  def test_xi_f_bm198; assert_in_epsilon(2020, worksheet.xi_f_bm198, 0.001); end
  def test_xi_f_bn198; assert_in_epsilon(2025, worksheet.xi_f_bn198, 0.001); end
  def test_xi_f_bo198; assert_in_epsilon(2030, worksheet.xi_f_bo198, 0.001); end
  def test_xi_f_bp198; assert_in_epsilon(2035, worksheet.xi_f_bp198, 0.001); end
  def test_xi_f_bq198; assert_in_epsilon(2040, worksheet.xi_f_bq198, 0.001); end
  def test_xi_f_br198; assert_in_epsilon(2045, worksheet.xi_f_br198, 0.001); end
  def test_xi_f_bs198; assert_in_epsilon(2050, worksheet.xi_f_bs198, 0.001); end
  def test_xi_f_bt198; assert_equal("Industry", worksheet.xi_f_bt198); end
  def test_xi_f_bu198; assert_equal("Description", worksheet.xi_f_bu198); end
  def test_xi_f_bv198; assert_in_epsilon(2010, worksheet.xi_f_bv198, 0.001); end
  def test_xi_f_bw198; assert_in_epsilon(2015, worksheet.xi_f_bw198, 0.001); end
  def test_xi_f_bx198; assert_in_epsilon(2020, worksheet.xi_f_bx198, 0.001); end
  def test_xi_f_by198; assert_in_epsilon(2025, worksheet.xi_f_by198, 0.001); end
  def test_xi_f_bz198; assert_in_epsilon(2030, worksheet.xi_f_bz198, 0.001); end
  def test_xi_f_ca198; assert_in_epsilon(2035, worksheet.xi_f_ca198, 0.001); end
  def test_xi_f_cb198; assert_in_epsilon(2040, worksheet.xi_f_cb198, 0.001); end
  def test_xi_f_cc198; assert_in_epsilon(2045, worksheet.xi_f_cc198, 0.001); end
  def test_xi_f_cd198; assert_in_epsilon(2050, worksheet.xi_f_cd198, 0.001); end
  def test_xi_f_c199; assert_equal("(i)", worksheet.xi_f_c199); end
  def test_xi_f_d199; assert_equal("Paper", worksheet.xi_f_d199); end
  def test_xi_f_e199; assert_in_epsilon(2472, worksheet.xi_f_e199, 0.001); end
  def test_xi_f_f199; assert_in_epsilon(2472, worksheet.xi_f_f199, 0.001); end
  def test_xi_f_g199; assert_in_epsilon(2472, worksheet.xi_f_g199, 0.001); end
  def test_xi_f_h199; assert_in_epsilon(2472, worksheet.xi_f_h199, 0.001); end
  def test_xi_f_i199; assert_in_epsilon(2472, worksheet.xi_f_i199, 0.001); end
  def test_xi_f_j199; assert_in_epsilon(2472, worksheet.xi_f_j199, 0.001); end
  def test_xi_f_k199; assert_in_epsilon(2472, worksheet.xi_f_k199, 0.001); end
  def test_xi_f_l199; assert_in_epsilon(2472, worksheet.xi_f_l199, 0.001); end
  def test_xi_f_m199; assert_in_epsilon(2472, worksheet.xi_f_m199, 0.001); end
  def test_xi_f_o199; assert_equal("(i)", worksheet.xi_f_o199); end
  def test_xi_f_p199; assert_equal("Paper", worksheet.xi_f_p199); end
  def test_xi_f_q199; assert_in_delta(0.006190445388349514, worksheet.xi_f_q199, 0.001); end
  def test_xi_f_r199; assert_in_delta(0.006035684253640776, worksheet.xi_f_r199, 0.001); end
  def test_xi_f_s199; assert_in_delta(0.005880923118932038, worksheet.xi_f_s199, 0.001); end
  def test_xi_f_t199; assert_in_delta(0.0057261619842233005, worksheet.xi_f_t199, 0.001); end
  def test_xi_f_u199; assert_in_delta(0.005571400849514563, worksheet.xi_f_u199, 0.001); end
  def test_xi_f_v199; assert_in_delta(0.005416639714805825, worksheet.xi_f_v199, 0.001); end
  def test_xi_f_w199; assert_in_delta(0.005261878580097087, worksheet.xi_f_w199, 0.001); end
  def test_xi_f_x199; assert_in_delta(0.005107117445388349, worksheet.xi_f_x199, 0.001); end
  def test_xi_f_y199; assert_in_delta(0.004952356310679612, worksheet.xi_f_y199, 0.001); end
  def test_xi_f_aa199; assert_equal("V.01", worksheet.xi_f_aa199); end
  def test_xi_f_ab199; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_ab199); end
  def test_xi_f_ac199; assert_in_delta(0.23347311838286128, worksheet.xi_f_ac199, 0.001); end
  def test_xi_f_ad199; assert_in_delta(0.23347311838286128, worksheet.xi_f_ad199, 0.001); end
  def test_xi_f_ae199; assert_in_delta(0.23347311838286128, worksheet.xi_f_ae199, 0.001); end
  def test_xi_f_af199; assert_in_delta(0.23347311838286128, worksheet.xi_f_af199, 0.001); end
  def test_xi_f_ag199; assert_in_delta(0.23347311838286128, worksheet.xi_f_ag199, 0.001); end
  def test_xi_f_ah199; assert_in_delta(0.23347311838286128, worksheet.xi_f_ah199, 0.001); end
  def test_xi_f_ai199; assert_in_delta(0.23347311838286128, worksheet.xi_f_ai199, 0.001); end
  def test_xi_f_aj199; assert_in_delta(0.23347311838286128, worksheet.xi_f_aj199, 0.001); end
  def test_xi_f_ak199; assert_in_delta(0.23347311838286128, worksheet.xi_f_ak199, 0.001); end
  def test_xi_f_am199; assert_equal("(i)", worksheet.xi_f_am199); end
  def test_xi_f_an199; assert_equal("Paper", worksheet.xi_f_an199); end
  def test_xi_f_ao199; assert_in_delta(0, (worksheet.xi_f_ao199||0), 0.001); end
  def test_xi_f_ap199; assert_in_delta(0, (worksheet.xi_f_ap199||0), 0.001); end
  def test_xi_f_aq199; assert_in_delta(0, (worksheet.xi_f_aq199||0), 0.001); end
  def test_xi_f_ar199; assert_in_delta(0, (worksheet.xi_f_ar199||0), 0.001); end
  def test_xi_f_as199; assert_in_delta(0, (worksheet.xi_f_as199||0), 0.001); end
  def test_xi_f_at199; assert_in_delta(0, (worksheet.xi_f_at199||0), 0.001); end
  def test_xi_f_au199; assert_in_delta(0, (worksheet.xi_f_au199||0), 0.001); end
  def test_xi_f_av199; assert_in_delta(0, (worksheet.xi_f_av199||0), 0.001); end
  def test_xi_f_aw199; assert_in_delta(0, (worksheet.xi_f_aw199||0), 0.001); end
  def test_xi_f_ax199; assert_equal("Combustion", worksheet.xi_f_ax199); end
  def test_xi_f_az199; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az199, 0.001); end
  def test_xi_f_ba199; assert_in_epsilon(3.181773153563441, worksheet.xi_f_ba199, 0.001); end
  def test_xi_f_bb199; assert_in_epsilon(3.0915257705483894, worksheet.xi_f_bb199, 0.001); end
  def test_xi_f_bc199; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_bc199, 0.001); end
  def test_xi_f_bd199; assert_in_epsilon(2.920357691600278, worksheet.xi_f_bd199, 0.001); end
  def test_xi_f_be199; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_be199, 0.001); end
  def test_xi_f_bf199; assert_in_epsilon(2.758115597622485, worksheet.xi_f_bf199, 0.001); end
  def test_xi_f_bg199; assert_in_epsilon(2.676994550633588, worksheet.xi_f_bg199, 0.001); end
  def test_xi_f_bh199; assert_in_epsilon(2.595873503644692, worksheet.xi_f_bh199, 0.001); end
  def test_xi_f_bj199; assert_equal("Cost Initiative", worksheet.xi_f_bj199); end
  def test_xi_f_bk199; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_f_bk199, 0.001); end
  def test_xi_f_bl199; assert_in_epsilon(-2.2246664603732142, worksheet.xi_f_bl199, 0.001); end
  def test_xi_f_bm199; assert_in_epsilon(-4.410951321273501, worksheet.xi_f_bm199, 0.001); end
  def test_xi_f_bn199; assert_in_epsilon(-6.52386579773372, worksheet.xi_f_bn199, 0.001); end
  def test_xi_f_bo199; assert_in_epsilon(-6.270951326497311, worksheet.xi_f_bo199, 0.001); end
  def test_xi_f_bp199; assert_in_epsilon(-5.753553673247666, worksheet.xi_f_bp199, 0.001); end
  def test_xi_f_bq199; assert_in_epsilon(-5.250235731710291, worksheet.xi_f_bq199, 0.001); end
  def test_xi_f_br199; assert_in_epsilon(-4.761485617545304, worksheet.xi_f_br199, 0.001); end
  def test_xi_f_bs199; assert_in_epsilon(-4.287791446412484, worksheet.xi_f_bs199, 0.001); end
  def test_xi_f_bu199; assert_equal("Cost Initiative", worksheet.xi_f_bu199); end
  def test_xi_f_bv199; assert_in_delta(0, (worksheet.xi_f_bv199||0), 0.001); end
  def test_xi_f_bw199; assert_in_delta(0, (worksheet.xi_f_bw199||0), 0.001); end
  def test_xi_f_bx199; assert_in_delta(0, (worksheet.xi_f_bx199||0), 0.001); end
  def test_xi_f_by199; assert_in_delta(0, (worksheet.xi_f_by199||0), 0.001); end
  def test_xi_f_bz199; assert_in_delta(0, (worksheet.xi_f_bz199||0), 0.001); end
  def test_xi_f_ca199; assert_in_delta(0, (worksheet.xi_f_ca199||0), 0.001); end
  def test_xi_f_cb199; assert_in_delta(0, (worksheet.xi_f_cb199||0), 0.001); end
  def test_xi_f_cc199; assert_in_delta(0, (worksheet.xi_f_cc199||0), 0.001); end
  def test_xi_f_cd199; assert_in_delta(0, (worksheet.xi_f_cd199||0), 0.001); end
  def test_xi_f_aa200; assert_equal("V.03", worksheet.xi_f_aa200); end
  def test_xi_f_ab200; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab200); end
  def test_xi_f_ac200; assert_in_delta(0.0215647077482191, worksheet.xi_f_ac200, 0.001); end
  def test_xi_f_ad200; assert_in_delta(0.0215647077482191, worksheet.xi_f_ad200, 0.001); end
  def test_xi_f_ae200; assert_in_delta(0.0215647077482191, worksheet.xi_f_ae200, 0.001); end
  def test_xi_f_af200; assert_in_delta(0.0215647077482191, worksheet.xi_f_af200, 0.001); end
  def test_xi_f_ag200; assert_in_delta(0.0215647077482191, worksheet.xi_f_ag200, 0.001); end
  def test_xi_f_ah200; assert_in_delta(0.0215647077482191, worksheet.xi_f_ah200, 0.001); end
  def test_xi_f_ai200; assert_in_delta(0.0215647077482191, worksheet.xi_f_ai200, 0.001); end
  def test_xi_f_aj200; assert_in_delta(0.0215647077482191, worksheet.xi_f_aj200, 0.001); end
  def test_xi_f_ak200; assert_in_delta(0.0215647077482191, worksheet.xi_f_ak200, 0.001); end
  def test_xi_f_ax200; assert_equal("Process", worksheet.xi_f_ax200); end
  def test_xi_f_az200; assert_in_delta(0, (worksheet.xi_f_az200||0), 0.001); end
  def test_xi_f_ba200; assert_in_delta(0, (worksheet.xi_f_ba200||0), 0.001); end
  def test_xi_f_bb200; assert_in_delta(0, (worksheet.xi_f_bb200||0), 0.001); end
  def test_xi_f_bc200; assert_in_delta(0, (worksheet.xi_f_bc200||0), 0.001); end
  def test_xi_f_bd200; assert_in_delta(0, (worksheet.xi_f_bd200||0), 0.001); end
  def test_xi_f_be200; assert_in_delta(0, (worksheet.xi_f_be200||0), 0.001); end
  def test_xi_f_bf200; assert_in_delta(0, (worksheet.xi_f_bf200||0), 0.001); end
  def test_xi_f_bg200; assert_in_delta(0, (worksheet.xi_f_bg200||0), 0.001); end
  def test_xi_f_bh200; assert_in_delta(0, (worksheet.xi_f_bh200||0), 0.001); end
  def test_xi_f_bj200; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bj200); end
  def test_xi_f_bu200; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bu200); end
  def test_xi_f_bv200; assert_in_delta(0, (worksheet.xi_f_bv200||0), 0.001); end
  def test_xi_f_bw200; assert_in_epsilon(16.805167176292116, worksheet.xi_f_bw200, 0.001); end
  def test_xi_f_bx200; assert_in_epsilon(36.4565054096945, worksheet.xi_f_bx200, 0.001); end
  def test_xi_f_by200; assert_in_epsilon(62.56462721651326, worksheet.xi_f_by200, 0.001); end
  def test_xi_f_bz200; assert_in_epsilon(84.57547494851372, worksheet.xi_f_bz200, 0.001); end
  def test_xi_f_ca200; assert_in_epsilon(103.67142028669161, worksheet.xi_f_ca200, 0.001); end
  def test_xi_f_cb200; assert_in_epsilon(122.66334655315711, worksheet.xi_f_cb200, 0.001); end
  def test_xi_f_cc200; assert_in_epsilon(141.2459914927574, worksheet.xi_f_cc200, 0.001); end
  def test_xi_f_aa201; assert_equal("V.05", worksheet.xi_f_aa201); end
  def test_xi_f_ab201; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_ab201); end
  def test_xi_f_ax201; assert_equal("Total", worksheet.xi_f_ax201); end
  def test_xi_f_ay201; assert_equal("Paper", worksheet.xi_f_ay201); end
  def test_xi_f_az201; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az201, 0.001); end
  def test_xi_f_ba201; assert_in_epsilon(3.181773153563441, worksheet.xi_f_ba201, 0.001); end
  def test_xi_f_bb201; assert_in_epsilon(3.0915257705483894, worksheet.xi_f_bb201, 0.001); end
  def test_xi_f_bc201; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_bc201, 0.001); end
  def test_xi_f_bd201; assert_in_epsilon(2.920357691600278, worksheet.xi_f_bd201, 0.001); end
  def test_xi_f_be201; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_be201, 0.001); end
  def test_xi_f_bf201; assert_in_epsilon(2.758115597622485, worksheet.xi_f_bf201, 0.001); end
  def test_xi_f_bg201; assert_in_epsilon(2.676994550633588, worksheet.xi_f_bg201, 0.001); end
  def test_xi_f_aa202; assert_equal("V.04", worksheet.xi_f_aa202); end
  def test_xi_f_ab202; assert_equal("Liquid hydrocarbons", worksheet.xi_f_ab202); end
  def test_xi_f_aa203; assert_equal("V.03", worksheet.xi_f_aa203); end
  def test_xi_f_ab203; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab203); end
  def test_xi_f_ac203; assert_in_delta(0.5194808054823499, worksheet.xi_f_ac203, 0.001); end
  def test_xi_f_ad203; assert_in_delta(0.5194808054823499, worksheet.xi_f_ad203, 0.001); end
  def test_xi_f_ae203; assert_in_delta(0.5194808054823499, worksheet.xi_f_ae203, 0.001); end
  def test_xi_f_af203; assert_in_delta(0.5194808054823499, worksheet.xi_f_af203, 0.001); end
  def test_xi_f_ag203; assert_in_delta(0.5194808054823499, worksheet.xi_f_ag203, 0.001); end
  def test_xi_f_ah203; assert_in_delta(0.5194808054823499, worksheet.xi_f_ah203, 0.001); end
  def test_xi_f_ai203; assert_in_delta(0.5194808054823499, worksheet.xi_f_ai203, 0.001); end
  def test_xi_f_aj203; assert_in_delta(0.5194808054823499, worksheet.xi_f_aj203, 0.001); end
  def test_xi_f_ak203; assert_in_delta(0.5194808054823499, worksheet.xi_f_ak203, 0.001); end
  def test_xi_f_aa204; assert_equal("V.07", worksheet.xi_f_aa204); end
  def test_xi_f_ab204; assert_equal("Heat transport", worksheet.xi_f_ab204); end
  def test_xi_f_ac204; assert_in_delta(0, (worksheet.xi_f_ac204||0), 0.001); end
  def test_xi_f_ad204; assert_in_delta(0, (worksheet.xi_f_ad204||0), 0.001); end
  def test_xi_f_ae204; assert_in_delta(0, (worksheet.xi_f_ae204||0), 0.001); end
  def test_xi_f_af204; assert_in_delta(0, (worksheet.xi_f_af204||0), 0.001); end
  def test_xi_f_ag204; assert_in_delta(0, (worksheet.xi_f_ag204||0), 0.001); end
  def test_xi_f_ah204; assert_in_delta(0, (worksheet.xi_f_ah204||0), 0.001); end
  def test_xi_f_ai204; assert_in_delta(0, (worksheet.xi_f_ai204||0), 0.001); end
  def test_xi_f_aj204; assert_in_delta(0, (worksheet.xi_f_aj204||0), 0.001); end
  def test_xi_f_ak204; assert_in_delta(0, (worksheet.xi_f_ak204||0), 0.001); end
  def test_xi_f_aa205; assert_equal("Intensity", worksheet.xi_f_aa205); end
  def test_xi_f_ab205; assert_equal("Intensity", worksheet.xi_f_ab205); end
  def test_xi_f_ac205; assert_in_delta(0.21384848335390436, worksheet.xi_f_ac205, 0.001); end
  def test_xi_f_ad205; assert_in_delta(0.21325255066892013, worksheet.xi_f_ad205, 0.001); end
  def test_xi_f_ae205; assert_in_delta(0.21265661798393581, worksheet.xi_f_ae205, 0.001); end
  def test_xi_f_af205; assert_in_delta(0.21204262673273994, worksheet.xi_f_af205, 0.001); end
  def test_xi_f_ag205; assert_in_delta(0.21204262673273994, worksheet.xi_f_ag205, 0.001); end
  def test_xi_f_ah205; assert_in_delta(0.21204262673273994, worksheet.xi_f_ah205, 0.001); end
  def test_xi_f_ai205; assert_in_delta(0.21204262673273994, worksheet.xi_f_ai205, 0.001); end
  def test_xi_f_aj205; assert_in_delta(0.21204262673273994, worksheet.xi_f_aj205, 0.001); end
  def test_xi_f_ak205; assert_in_delta(0.21204262673273994, worksheet.xi_f_ak205, 0.001); end
  def test_xi_f_aa206; assert_equal("Cost", worksheet.xi_f_aa206); end
  def test_xi_f_ab206; assert_equal("Cost", worksheet.xi_f_ab206); end
  def test_xi_f_ac206; assert_in_epsilon(34.28943589936515, worksheet.xi_f_ac206, 0.001); end
  def test_xi_f_ad206; assert_in_epsilon(43.77798897217171, worksheet.xi_f_ad206, 0.001); end
  def test_xi_f_ae206; assert_in_epsilon(47.34348622906636, worksheet.xi_f_ae206, 0.001); end
  def test_xi_f_af206; assert_in_epsilon(54.05175710637617, worksheet.xi_f_af206, 0.001); end
  def test_xi_f_ag206; assert_in_epsilon(54.812718406479796, worksheet.xi_f_ag206, 0.001); end
  def test_xi_f_ah206; assert_in_epsilon(53.767734922250355, worksheet.xi_f_ah206, 0.001); end
  def test_xi_f_ai206; assert_in_epsilon(53.03473242988024, worksheet.xi_f_ai206, 0.001); end
  def test_xi_f_aj206; assert_in_epsilon(52.3661975995702, worksheet.xi_f_aj206, 0.001); end
  def test_xi_f_ak206; assert_in_epsilon(51.665142508060626, worksheet.xi_f_ak206, 0.001); end
  def test_xi_f_b207; assert_in_epsilon(3, worksheet.xi_f_b207, 0.001); end
  def test_xi_f_c207; assert_equal("Alternative fuels (Fuel and Gas to Biomass)", worksheet.xi_f_c207); end
  def test_xi_f_b208; assert_in_delta(1, worksheet.xi_f_b208, 0.001); end
  def test_xi_f_c208; assert_equal("Output Growth (kt)", worksheet.xi_f_c208); end
  def test_xi_f_n208; assert_in_epsilon(2, worksheet.xi_f_n208, 0.001); end
  def test_xi_f_o208; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_f_o208); end
  def test_xi_f_z208; assert_in_epsilon(3, worksheet.xi_f_z208, 0.001); end
  def test_xi_f_aa208; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_f_aa208); end
  def test_xi_f_al208; assert_in_epsilon(4, worksheet.xi_f_al208, 0.001); end
  def test_xi_f_am208; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_f_am208); end
  def test_xi_f_ax208; assert_in_epsilon(5, worksheet.xi_f_ax208, 0.001); end
  def test_xi_f_ay208; assert_equal("Emissions (MMtCO2e)", worksheet.xi_f_ay208); end
  def test_xi_f_bi208; assert_in_epsilon(6, worksheet.xi_f_bi208, 0.001); end
  def test_xi_f_bj208; assert_equal("Costs : Energy (MEUR)", worksheet.xi_f_bj208); end
  def test_xi_f_bt208; assert_in_epsilon(7, worksheet.xi_f_bt208, 0.001); end
  def test_xi_f_bu208; assert_equal("Costs : Capex (MEUR)", worksheet.xi_f_bu208); end
  def test_xi_f_c209; assert_equal("Product type", worksheet.xi_f_c209); end
  def test_xi_f_d209; assert_equal("Description", worksheet.xi_f_d209); end
  def test_xi_f_e209; assert_in_epsilon(2010, worksheet.xi_f_e209, 0.001); end
  def test_xi_f_f209; assert_in_epsilon(2015, worksheet.xi_f_f209, 0.001); end
  def test_xi_f_g209; assert_in_epsilon(2020, worksheet.xi_f_g209, 0.001); end
  def test_xi_f_h209; assert_in_epsilon(2025, worksheet.xi_f_h209, 0.001); end
  def test_xi_f_i209; assert_in_epsilon(2030, worksheet.xi_f_i209, 0.001); end
  def test_xi_f_j209; assert_in_epsilon(2035, worksheet.xi_f_j209, 0.001); end
  def test_xi_f_k209; assert_in_epsilon(2040, worksheet.xi_f_k209, 0.001); end
  def test_xi_f_l209; assert_in_epsilon(2045, worksheet.xi_f_l209, 0.001); end
  def test_xi_f_m209; assert_in_epsilon(2050, worksheet.xi_f_m209, 0.001); end
  def test_xi_f_o209; assert_equal("Industry", worksheet.xi_f_o209); end
  def test_xi_f_p209; assert_equal("Description", worksheet.xi_f_p209); end
  def test_xi_f_q209; assert_in_epsilon(2010, worksheet.xi_f_q209, 0.001); end
  def test_xi_f_r209; assert_in_epsilon(2015, worksheet.xi_f_r209, 0.001); end
  def test_xi_f_s209; assert_in_epsilon(2020, worksheet.xi_f_s209, 0.001); end
  def test_xi_f_t209; assert_in_epsilon(2025, worksheet.xi_f_t209, 0.001); end
  def test_xi_f_u209; assert_in_epsilon(2030, worksheet.xi_f_u209, 0.001); end
  def test_xi_f_v209; assert_in_epsilon(2035, worksheet.xi_f_v209, 0.001); end
  def test_xi_f_w209; assert_in_epsilon(2040, worksheet.xi_f_w209, 0.001); end
  def test_xi_f_x209; assert_in_epsilon(2045, worksheet.xi_f_x209, 0.001); end
  def test_xi_f_y209; assert_in_epsilon(2050, worksheet.xi_f_y209, 0.001); end
  def test_xi_f_aa209; assert_equal("Vector", worksheet.xi_f_aa209); end
  def test_xi_f_ab209; assert_equal("Description", worksheet.xi_f_ab209); end
  def test_xi_f_ac209; assert_in_epsilon(2010, worksheet.xi_f_ac209, 0.001); end
  def test_xi_f_ad209; assert_in_epsilon(2015, worksheet.xi_f_ad209, 0.001); end
  def test_xi_f_ae209; assert_in_epsilon(2020, worksheet.xi_f_ae209, 0.001); end
  def test_xi_f_af209; assert_in_epsilon(2025, worksheet.xi_f_af209, 0.001); end
  def test_xi_f_ag209; assert_in_epsilon(2030, worksheet.xi_f_ag209, 0.001); end
  def test_xi_f_ah209; assert_in_epsilon(2035, worksheet.xi_f_ah209, 0.001); end
  def test_xi_f_ai209; assert_in_epsilon(2040, worksheet.xi_f_ai209, 0.001); end
  def test_xi_f_aj209; assert_in_epsilon(2045, worksheet.xi_f_aj209, 0.001); end
  def test_xi_f_ak209; assert_in_epsilon(2050, worksheet.xi_f_ak209, 0.001); end
  def test_xi_f_am209; assert_equal("Industry", worksheet.xi_f_am209); end
  def test_xi_f_an209; assert_equal("Description", worksheet.xi_f_an209); end
  def test_xi_f_ao209; assert_in_epsilon(2010, worksheet.xi_f_ao209, 0.001); end
  def test_xi_f_ap209; assert_in_epsilon(2015, worksheet.xi_f_ap209, 0.001); end
  def test_xi_f_aq209; assert_in_epsilon(2020, worksheet.xi_f_aq209, 0.001); end
  def test_xi_f_ar209; assert_in_epsilon(2025, worksheet.xi_f_ar209, 0.001); end
  def test_xi_f_as209; assert_in_epsilon(2030, worksheet.xi_f_as209, 0.001); end
  def test_xi_f_at209; assert_in_epsilon(2035, worksheet.xi_f_at209, 0.001); end
  def test_xi_f_au209; assert_in_epsilon(2040, worksheet.xi_f_au209, 0.001); end
  def test_xi_f_av209; assert_in_epsilon(2045, worksheet.xi_f_av209, 0.001); end
  def test_xi_f_aw209; assert_in_epsilon(2050, worksheet.xi_f_aw209, 0.001); end
  def test_xi_f_ax209; assert_equal("Industry", worksheet.xi_f_ax209); end
  def test_xi_f_ay209; assert_equal("Description", worksheet.xi_f_ay209); end
  def test_xi_f_az209; assert_in_epsilon(2010, worksheet.xi_f_az209, 0.001); end
  def test_xi_f_ba209; assert_in_epsilon(2015, worksheet.xi_f_ba209, 0.001); end
  def test_xi_f_bb209; assert_in_epsilon(2020, worksheet.xi_f_bb209, 0.001); end
  def test_xi_f_bc209; assert_in_epsilon(2025, worksheet.xi_f_bc209, 0.001); end
  def test_xi_f_bd209; assert_in_epsilon(2030, worksheet.xi_f_bd209, 0.001); end
  def test_xi_f_be209; assert_in_epsilon(2035, worksheet.xi_f_be209, 0.001); end
  def test_xi_f_bf209; assert_in_epsilon(2040, worksheet.xi_f_bf209, 0.001); end
  def test_xi_f_bg209; assert_in_epsilon(2045, worksheet.xi_f_bg209, 0.001); end
  def test_xi_f_bh209; assert_in_epsilon(2050, worksheet.xi_f_bh209, 0.001); end
  def test_xi_f_bi209; assert_equal("Industry", worksheet.xi_f_bi209); end
  def test_xi_f_bj209; assert_equal("Description", worksheet.xi_f_bj209); end
  def test_xi_f_bk209; assert_in_epsilon(2010, worksheet.xi_f_bk209, 0.001); end
  def test_xi_f_bl209; assert_in_epsilon(2015, worksheet.xi_f_bl209, 0.001); end
  def test_xi_f_bm209; assert_in_epsilon(2020, worksheet.xi_f_bm209, 0.001); end
  def test_xi_f_bn209; assert_in_epsilon(2025, worksheet.xi_f_bn209, 0.001); end
  def test_xi_f_bo209; assert_in_epsilon(2030, worksheet.xi_f_bo209, 0.001); end
  def test_xi_f_bp209; assert_in_epsilon(2035, worksheet.xi_f_bp209, 0.001); end
  def test_xi_f_bq209; assert_in_epsilon(2040, worksheet.xi_f_bq209, 0.001); end
  def test_xi_f_br209; assert_in_epsilon(2045, worksheet.xi_f_br209, 0.001); end
  def test_xi_f_bs209; assert_in_epsilon(2050, worksheet.xi_f_bs209, 0.001); end
  def test_xi_f_bt209; assert_equal("Industry", worksheet.xi_f_bt209); end
  def test_xi_f_bu209; assert_equal("Description", worksheet.xi_f_bu209); end
  def test_xi_f_bv209; assert_in_epsilon(2010, worksheet.xi_f_bv209, 0.001); end
  def test_xi_f_bw209; assert_in_epsilon(2015, worksheet.xi_f_bw209, 0.001); end
  def test_xi_f_bx209; assert_in_epsilon(2020, worksheet.xi_f_bx209, 0.001); end
  def test_xi_f_by209; assert_in_epsilon(2025, worksheet.xi_f_by209, 0.001); end
  def test_xi_f_bz209; assert_in_epsilon(2030, worksheet.xi_f_bz209, 0.001); end
  def test_xi_f_ca209; assert_in_epsilon(2035, worksheet.xi_f_ca209, 0.001); end
  def test_xi_f_cb209; assert_in_epsilon(2040, worksheet.xi_f_cb209, 0.001); end
  def test_xi_f_cc209; assert_in_epsilon(2045, worksheet.xi_f_cc209, 0.001); end
  def test_xi_f_cd209; assert_in_epsilon(2050, worksheet.xi_f_cd209, 0.001); end
  def test_xi_f_c210; assert_equal("(i)", worksheet.xi_f_c210); end
  def test_xi_f_d210; assert_equal("Paper", worksheet.xi_f_d210); end
  def test_xi_f_e210; assert_in_epsilon(2472, worksheet.xi_f_e210, 0.001); end
  def test_xi_f_f210; assert_in_epsilon(2472, worksheet.xi_f_f210, 0.001); end
  def test_xi_f_g210; assert_in_epsilon(2472, worksheet.xi_f_g210, 0.001); end
  def test_xi_f_h210; assert_in_epsilon(2472, worksheet.xi_f_h210, 0.001); end
  def test_xi_f_i210; assert_in_epsilon(2472, worksheet.xi_f_i210, 0.001); end
  def test_xi_f_j210; assert_in_epsilon(2472, worksheet.xi_f_j210, 0.001); end
  def test_xi_f_k210; assert_in_epsilon(2472, worksheet.xi_f_k210, 0.001); end
  def test_xi_f_l210; assert_in_epsilon(2472, worksheet.xi_f_l210, 0.001); end
  def test_xi_f_m210; assert_in_epsilon(2472, worksheet.xi_f_m210, 0.001); end
  def test_xi_f_o210; assert_equal("(i)", worksheet.xi_f_o210); end
  def test_xi_f_p210; assert_equal("Paper", worksheet.xi_f_p210); end
  def test_xi_f_q210; assert_in_delta(0.006190445388349514, worksheet.xi_f_q210, 0.001); end
  def test_xi_f_r210; assert_in_delta(0.006035684253640776, worksheet.xi_f_r210, 0.001); end
  def test_xi_f_s210; assert_in_delta(0.005880923118932038, worksheet.xi_f_s210, 0.001); end
  def test_xi_f_t210; assert_in_delta(0.0057261619842233005, worksheet.xi_f_t210, 0.001); end
  def test_xi_f_u210; assert_in_delta(0.005571400849514563, worksheet.xi_f_u210, 0.001); end
  def test_xi_f_v210; assert_in_delta(0.005416639714805825, worksheet.xi_f_v210, 0.001); end
  def test_xi_f_w210; assert_in_delta(0.005261878580097087, worksheet.xi_f_w210, 0.001); end
  def test_xi_f_x210; assert_in_delta(0.005107117445388349, worksheet.xi_f_x210, 0.001); end
  def test_xi_f_y210; assert_in_delta(0.004952356310679612, worksheet.xi_f_y210, 0.001); end
  def test_xi_f_aa210; assert_equal("V.01", worksheet.xi_f_aa210); end
  def test_xi_f_ab210; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_ab210); end
  def test_xi_f_ac210; assert_in_delta(0.23347311838286128, worksheet.xi_f_ac210, 0.001); end
  def test_xi_f_ad210; assert_in_delta(0.23347311838286128, worksheet.xi_f_ad210, 0.001); end
  def test_xi_f_ae210; assert_in_delta(0.23347311838286128, worksheet.xi_f_ae210, 0.001); end
  def test_xi_f_af210; assert_in_delta(0.23347311838286128, worksheet.xi_f_af210, 0.001); end
  def test_xi_f_ag210; assert_in_delta(0.23347311838286128, worksheet.xi_f_ag210, 0.001); end
  def test_xi_f_ah210; assert_in_delta(0.23347311838286128, worksheet.xi_f_ah210, 0.001); end
  def test_xi_f_ai210; assert_in_delta(0.23347311838286128, worksheet.xi_f_ai210, 0.001); end
  def test_xi_f_aj210; assert_in_delta(0.23347311838286128, worksheet.xi_f_aj210, 0.001); end
  def test_xi_f_ak210; assert_in_delta(0.23347311838286128, worksheet.xi_f_ak210, 0.001); end
  def test_xi_f_am210; assert_equal("(i)", worksheet.xi_f_am210); end
  def test_xi_f_an210; assert_equal("Paper", worksheet.xi_f_an210); end
  def test_xi_f_ao210; assert_in_delta(0, (worksheet.xi_f_ao210||0), 0.001); end
  def test_xi_f_ap210; assert_in_delta(0, (worksheet.xi_f_ap210||0), 0.001); end
  def test_xi_f_aq210; assert_in_delta(0, (worksheet.xi_f_aq210||0), 0.001); end
  def test_xi_f_ar210; assert_in_delta(0, (worksheet.xi_f_ar210||0), 0.001); end
  def test_xi_f_as210; assert_in_delta(0, (worksheet.xi_f_as210||0), 0.001); end
  def test_xi_f_at210; assert_in_delta(0, (worksheet.xi_f_at210||0), 0.001); end
  def test_xi_f_au210; assert_in_delta(0, (worksheet.xi_f_au210||0), 0.001); end
  def test_xi_f_av210; assert_in_delta(0, (worksheet.xi_f_av210||0), 0.001); end
  def test_xi_f_aw210; assert_in_delta(0, (worksheet.xi_f_aw210||0), 0.001); end
  def test_xi_f_ax210; assert_equal("Combustion", worksheet.xi_f_ax210); end
  def test_xi_f_ay210; assert_equal("Paper", worksheet.xi_f_ay210); end
  def test_xi_f_bj210; assert_equal("Cost Initiative", worksheet.xi_f_bj210); end
  def test_xi_f_bk210; assert_in_delta(0, (worksheet.xi_f_bk210||0), 0.001); end
  def test_xi_f_bl210; assert_in_delta(0.20838728713454202, worksheet.xi_f_bl210, 0.001); end
  def test_xi_f_bm210; assert_in_delta(0.5772573635437084, worksheet.xi_f_bm210, 0.001); end
  def test_xi_f_bn210; assert_in_epsilon(1.044590346241307, worksheet.xi_f_bn210, 0.001); end
  def test_xi_f_bo210; assert_in_epsilon(1.534335139520067, worksheet.xi_f_bo210, 0.001); end
  def test_xi_f_bp210; assert_in_epsilon(1.9024915259282125, worksheet.xi_f_bp210, 0.001); end
  def test_xi_f_bq210; assert_in_epsilon(2.2623736816243536, worksheet.xi_f_bq210, 0.001); end
  def test_xi_f_br210; assert_in_epsilon(2.6128793209205696, worksheet.xi_f_br210, 0.001); end
  def test_xi_f_bs210; assert_in_epsilon(2.952877215256649, worksheet.xi_f_bs210, 0.001); end
  def test_xi_f_bu210; assert_equal("Cost Initiative", worksheet.xi_f_bu210); end
  def test_xi_f_bv210; assert_in_delta(0, (worksheet.xi_f_bv210||0), 0.001); end
  def test_xi_f_bw210; assert_in_delta(0, (worksheet.xi_f_bw210||0), 0.001); end
  def test_xi_f_bx210; assert_in_delta(0, (worksheet.xi_f_bx210||0), 0.001); end
  def test_xi_f_by210; assert_in_delta(0, (worksheet.xi_f_by210||0), 0.001); end
  def test_xi_f_bz210; assert_in_delta(0, (worksheet.xi_f_bz210||0), 0.001); end
  def test_xi_f_ca210; assert_in_delta(0, (worksheet.xi_f_ca210||0), 0.001); end
  def test_xi_f_cb210; assert_in_delta(0, (worksheet.xi_f_cb210||0), 0.001); end
  def test_xi_f_cc210; assert_in_delta(0, (worksheet.xi_f_cc210||0), 0.001); end
  def test_xi_f_cd210; assert_in_delta(0, (worksheet.xi_f_cd210||0), 0.001); end
  def test_xi_f_aa211; assert_equal("V.03", worksheet.xi_f_aa211); end
  def test_xi_f_ab211; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab211); end
  def test_xi_f_ax211; assert_equal("Process", worksheet.xi_f_ax211); end
  def test_xi_f_ay211; assert_equal("Paper", worksheet.xi_f_ay211); end
  def test_xi_f_az211; assert_in_delta(0, (worksheet.xi_f_az211||0), 0.001); end
  def test_xi_f_bj211; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bj211); end
  def test_xi_f_bu211; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bu211); end
  def test_xi_f_bv211; assert_in_delta(0, (worksheet.xi_f_bv211||0), 0.001); end
  def test_xi_f_bw211; assert_in_epsilon(16.805167176292116, worksheet.xi_f_bw211, 0.001); end
  def test_xi_f_bx211; assert_in_epsilon(36.4565054096945, worksheet.xi_f_bx211, 0.001); end
  def test_xi_f_by211; assert_in_epsilon(62.56462721651326, worksheet.xi_f_by211, 0.001); end
  def test_xi_f_bz211; assert_in_epsilon(84.57547494851372, worksheet.xi_f_bz211, 0.001); end
  def test_xi_f_ca211; assert_in_epsilon(103.67142028669161, worksheet.xi_f_ca211, 0.001); end
  def test_xi_f_cb211; assert_in_epsilon(122.66334655315711, worksheet.xi_f_cb211, 0.001); end
  def test_xi_f_cc211; assert_in_epsilon(141.2459914927574, worksheet.xi_f_cc211, 0.001); end
  def test_xi_f_aa212; assert_equal("V.05", worksheet.xi_f_aa212); end
  def test_xi_f_ab212; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_ab212); end
  def test_xi_f_ac212; assert_in_delta(0.19583773694467688, worksheet.xi_f_ac212, 0.001); end
  def test_xi_f_ad212; assert_in_delta(0.2056201353205016, worksheet.xi_f_ad212, 0.001); end
  def test_xi_f_ae212; assert_in_delta(0.21540253369632612, worksheet.xi_f_ae212, 0.001); end
  def test_xi_f_af212; assert_in_delta(0.22548136838656974, worksheet.xi_f_af212, 0.001); end
  def test_xi_f_ag212; assert_in_delta(0.22548136838656974, worksheet.xi_f_ag212, 0.001); end
  def test_xi_f_ah212; assert_in_delta(0.22548136838656974, worksheet.xi_f_ah212, 0.001); end
  def test_xi_f_ai212; assert_in_delta(0.22548136838656974, worksheet.xi_f_ai212, 0.001); end
  def test_xi_f_aj212; assert_in_delta(0.22548136838656974, worksheet.xi_f_aj212, 0.001); end
  def test_xi_f_ak212; assert_in_delta(0.22548136838656974, worksheet.xi_f_ak212, 0.001); end
  def test_xi_f_ax212; assert_equal("Total", worksheet.xi_f_ax212); end
  def test_xi_f_ay212; assert_equal("Paper", worksheet.xi_f_ay212); end
  def test_xi_f_aa213; assert_equal("V.04", worksheet.xi_f_aa213); end
  def test_xi_f_ab213; assert_equal("Liquid hydrocarbons", worksheet.xi_f_ab213); end
  def test_xi_f_aa214; assert_equal("V.03", worksheet.xi_f_aa214); end
  def test_xi_f_ab214; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab214); end
  def test_xi_f_aa215; assert_equal("V.07", worksheet.xi_f_aa215); end
  def test_xi_f_ab215; assert_equal("Heat transport", worksheet.xi_f_ab215); end
  def test_xi_f_ac215; assert_in_delta(0, (worksheet.xi_f_ac215||0), 0.001); end
  def test_xi_f_ad215; assert_in_delta(0, (worksheet.xi_f_ad215||0), 0.001); end
  def test_xi_f_ae215; assert_in_delta(0, (worksheet.xi_f_ae215||0), 0.001); end
  def test_xi_f_af215; assert_in_delta(0, (worksheet.xi_f_af215||0), 0.001); end
  def test_xi_f_ag215; assert_in_delta(0, (worksheet.xi_f_ag215||0), 0.001); end
  def test_xi_f_ah215; assert_in_delta(0, (worksheet.xi_f_ah215||0), 0.001); end
  def test_xi_f_ai215; assert_in_delta(0, (worksheet.xi_f_ai215||0), 0.001); end
  def test_xi_f_aj215; assert_in_delta(0, (worksheet.xi_f_aj215||0), 0.001); end
  def test_xi_f_ak215; assert_in_delta(0, (worksheet.xi_f_ak215||0), 0.001); end
  def test_xi_f_aa216; assert_equal("Intensity", worksheet.xi_f_aa216); end
  def test_xi_f_ab216; assert_equal("Intensity", worksheet.xi_f_ab216); end
  def test_xi_f_ac216; assert_in_delta(0.21384848335390436, worksheet.xi_f_ac216, 0.001); end
  def test_xi_f_ad216; assert_in_delta(0.21328150810641225, worksheet.xi_f_ad216, 0.001); end
  def test_xi_f_ae216; assert_in_delta(0.21268600762198758, worksheet.xi_f_ae216, 0.001); end
  def test_xi_f_af216; assert_in_delta(0.21204262673273994, worksheet.xi_f_af216, 0.001); end
  def test_xi_f_ag216; assert_in_delta(0.21204262673273994, worksheet.xi_f_ag216, 0.001); end
  def test_xi_f_ah216; assert_in_delta(0.21204262673273994, worksheet.xi_f_ah216, 0.001); end
  def test_xi_f_ai216; assert_in_delta(0.21204262673273994, worksheet.xi_f_ai216, 0.001); end
  def test_xi_f_aj216; assert_in_delta(0.21204262673273994, worksheet.xi_f_aj216, 0.001); end
  def test_xi_f_ak216; assert_in_delta(0.21204262673273994, worksheet.xi_f_ak216, 0.001); end
  def test_xi_f_aa217; assert_equal("Cost", worksheet.xi_f_aa217); end
  def test_xi_f_ab217; assert_equal("Cost", worksheet.xi_f_ab217); end
  def test_xi_f_ac217; assert_in_epsilon(34.28943589936515, worksheet.xi_f_ac217, 0.001); end
  def test_xi_f_ad217; assert_in_epsilon(43.79195575055711, worksheet.xi_f_ad217, 0.001); end
  def test_xi_f_ae217; assert_in_epsilon(47.38319400048686, worksheet.xi_f_ae217, 0.001); end
  def test_xi_f_af217; assert_in_epsilon(54.125553291579465, worksheet.xi_f_af217, 0.001); end
  def test_xi_f_ag217; assert_in_epsilon(54.924124092916074, worksheet.xi_f_ag217, 0.001); end
  def test_xi_f_ah217; assert_in_epsilon(53.90981864086544, worksheet.xi_f_ah217, 0.001); end
  def test_xi_f_ai217; assert_in_epsilon(53.208662651846346, worksheet.xi_f_ai217, 0.001); end
  def test_xi_f_aj217; assert_in_epsilon(52.573161709531696, worksheet.xi_f_aj217, 0.001); end
  def test_xi_f_ak217; assert_in_epsilon(51.90634680413405, worksheet.xi_f_ak217, 0.001); end
  def test_xi_f_b218; assert_in_epsilon(4, worksheet.xi_f_b218, 0.001); end
  def test_xi_f_c218; assert_equal("Paper CCS intensity", worksheet.xi_f_c218); end
  def test_xi_f_c219; assert_equal("Black liquor gasification + CCS", worksheet.xi_f_c219); end
  def test_xi_f_b220; assert_in_delta(1, worksheet.xi_f_b220, 0.001); end
  def test_xi_f_c220; assert_equal("Output Growth (kt)", worksheet.xi_f_c220); end
  def test_xi_f_n220; assert_in_epsilon(2, worksheet.xi_f_n220, 0.001); end
  def test_xi_f_o220; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_f_o220); end
  def test_xi_f_z220; assert_in_epsilon(3, worksheet.xi_f_z220, 0.001); end
  def test_xi_f_aa220; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_f_aa220); end
  def test_xi_f_al220; assert_in_epsilon(4, worksheet.xi_f_al220, 0.001); end
  def test_xi_f_am220; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_f_am220); end
  def test_xi_f_ax220; assert_in_epsilon(5, worksheet.xi_f_ax220, 0.001); end
  def test_xi_f_ay220; assert_equal("Emissions (MMtCO2e)", worksheet.xi_f_ay220); end
  def test_xi_f_bi220; assert_in_epsilon(6, worksheet.xi_f_bi220, 0.001); end
  def test_xi_f_bj220; assert_equal("Costs : Energy (MEUR)", worksheet.xi_f_bj220); end
  def test_xi_f_bt220; assert_in_epsilon(7, worksheet.xi_f_bt220, 0.001); end
  def test_xi_f_bu220; assert_equal("Costs : Capex (MEUR)", worksheet.xi_f_bu220); end
  def test_xi_f_c221; assert_equal("Product type", worksheet.xi_f_c221); end
  def test_xi_f_d221; assert_equal("Description", worksheet.xi_f_d221); end
  def test_xi_f_e221; assert_in_epsilon(2010, worksheet.xi_f_e221, 0.001); end
  def test_xi_f_f221; assert_in_epsilon(2015, worksheet.xi_f_f221, 0.001); end
  def test_xi_f_g221; assert_in_epsilon(2020, worksheet.xi_f_g221, 0.001); end
  def test_xi_f_h221; assert_in_epsilon(2025, worksheet.xi_f_h221, 0.001); end
  def test_xi_f_i221; assert_in_epsilon(2030, worksheet.xi_f_i221, 0.001); end
  def test_xi_f_j221; assert_in_epsilon(2035, worksheet.xi_f_j221, 0.001); end
  def test_xi_f_k221; assert_in_epsilon(2040, worksheet.xi_f_k221, 0.001); end
  def test_xi_f_l221; assert_in_epsilon(2045, worksheet.xi_f_l221, 0.001); end
  def test_xi_f_m221; assert_in_epsilon(2050, worksheet.xi_f_m221, 0.001); end
  def test_xi_f_o221; assert_equal("Industry", worksheet.xi_f_o221); end
  def test_xi_f_p221; assert_equal("Description", worksheet.xi_f_p221); end
  def test_xi_f_q221; assert_in_epsilon(2010, worksheet.xi_f_q221, 0.001); end
  def test_xi_f_r221; assert_in_epsilon(2015, worksheet.xi_f_r221, 0.001); end
  def test_xi_f_s221; assert_in_epsilon(2020, worksheet.xi_f_s221, 0.001); end
  def test_xi_f_t221; assert_in_epsilon(2025, worksheet.xi_f_t221, 0.001); end
  def test_xi_f_u221; assert_in_epsilon(2030, worksheet.xi_f_u221, 0.001); end
  def test_xi_f_v221; assert_in_epsilon(2035, worksheet.xi_f_v221, 0.001); end
  def test_xi_f_w221; assert_in_epsilon(2040, worksheet.xi_f_w221, 0.001); end
  def test_xi_f_x221; assert_in_epsilon(2045, worksheet.xi_f_x221, 0.001); end
  def test_xi_f_y221; assert_in_epsilon(2050, worksheet.xi_f_y221, 0.001); end
  def test_xi_f_aa221; assert_equal("Vector", worksheet.xi_f_aa221); end
  def test_xi_f_ab221; assert_equal("Description", worksheet.xi_f_ab221); end
  def test_xi_f_ac221; assert_in_epsilon(2010, worksheet.xi_f_ac221, 0.001); end
  def test_xi_f_ad221; assert_in_epsilon(2015, worksheet.xi_f_ad221, 0.001); end
  def test_xi_f_ae221; assert_in_epsilon(2020, worksheet.xi_f_ae221, 0.001); end
  def test_xi_f_af221; assert_in_epsilon(2025, worksheet.xi_f_af221, 0.001); end
  def test_xi_f_ag221; assert_in_epsilon(2030, worksheet.xi_f_ag221, 0.001); end
  def test_xi_f_ah221; assert_in_epsilon(2035, worksheet.xi_f_ah221, 0.001); end
  def test_xi_f_ai221; assert_in_epsilon(2040, worksheet.xi_f_ai221, 0.001); end
  def test_xi_f_aj221; assert_in_epsilon(2045, worksheet.xi_f_aj221, 0.001); end
  def test_xi_f_ak221; assert_in_epsilon(2050, worksheet.xi_f_ak221, 0.001); end
  def test_xi_f_am221; assert_equal("Industry", worksheet.xi_f_am221); end
  def test_xi_f_an221; assert_equal("Description", worksheet.xi_f_an221); end
  def test_xi_f_ao221; assert_in_epsilon(2010, worksheet.xi_f_ao221, 0.001); end
  def test_xi_f_ap221; assert_in_epsilon(2015, worksheet.xi_f_ap221, 0.001); end
  def test_xi_f_aq221; assert_in_epsilon(2020, worksheet.xi_f_aq221, 0.001); end
  def test_xi_f_ar221; assert_in_epsilon(2025, worksheet.xi_f_ar221, 0.001); end
  def test_xi_f_as221; assert_in_epsilon(2030, worksheet.xi_f_as221, 0.001); end
  def test_xi_f_at221; assert_in_epsilon(2035, worksheet.xi_f_at221, 0.001); end
  def test_xi_f_au221; assert_in_epsilon(2040, worksheet.xi_f_au221, 0.001); end
  def test_xi_f_av221; assert_in_epsilon(2045, worksheet.xi_f_av221, 0.001); end
  def test_xi_f_aw221; assert_in_epsilon(2050, worksheet.xi_f_aw221, 0.001); end
  def test_xi_f_ax221; assert_equal("Industry", worksheet.xi_f_ax221); end
  def test_xi_f_ay221; assert_equal("Description", worksheet.xi_f_ay221); end
  def test_xi_f_az221; assert_in_epsilon(2010, worksheet.xi_f_az221, 0.001); end
  def test_xi_f_ba221; assert_in_epsilon(2015, worksheet.xi_f_ba221, 0.001); end
  def test_xi_f_bb221; assert_in_epsilon(2020, worksheet.xi_f_bb221, 0.001); end
  def test_xi_f_bc221; assert_in_epsilon(2025, worksheet.xi_f_bc221, 0.001); end
  def test_xi_f_bd221; assert_in_epsilon(2030, worksheet.xi_f_bd221, 0.001); end
  def test_xi_f_be221; assert_in_epsilon(2035, worksheet.xi_f_be221, 0.001); end
  def test_xi_f_bf221; assert_in_epsilon(2040, worksheet.xi_f_bf221, 0.001); end
  def test_xi_f_bg221; assert_in_epsilon(2045, worksheet.xi_f_bg221, 0.001); end
  def test_xi_f_bh221; assert_in_epsilon(2050, worksheet.xi_f_bh221, 0.001); end
  def test_xi_f_bi221; assert_equal("Industry", worksheet.xi_f_bi221); end
  def test_xi_f_bj221; assert_equal("Description", worksheet.xi_f_bj221); end
  def test_xi_f_bk221; assert_in_epsilon(2010, worksheet.xi_f_bk221, 0.001); end
  def test_xi_f_bl221; assert_in_epsilon(2015, worksheet.xi_f_bl221, 0.001); end
  def test_xi_f_bm221; assert_in_epsilon(2020, worksheet.xi_f_bm221, 0.001); end
  def test_xi_f_bn221; assert_in_epsilon(2025, worksheet.xi_f_bn221, 0.001); end
  def test_xi_f_bo221; assert_in_epsilon(2030, worksheet.xi_f_bo221, 0.001); end
  def test_xi_f_bp221; assert_in_epsilon(2035, worksheet.xi_f_bp221, 0.001); end
  def test_xi_f_bq221; assert_in_epsilon(2040, worksheet.xi_f_bq221, 0.001); end
  def test_xi_f_br221; assert_in_epsilon(2045, worksheet.xi_f_br221, 0.001); end
  def test_xi_f_bs221; assert_in_epsilon(2050, worksheet.xi_f_bs221, 0.001); end
  def test_xi_f_bt221; assert_equal("Industry", worksheet.xi_f_bt221); end
  def test_xi_f_bu221; assert_equal("Description", worksheet.xi_f_bu221); end
  def test_xi_f_bv221; assert_in_epsilon(2010, worksheet.xi_f_bv221, 0.001); end
  def test_xi_f_bw221; assert_in_epsilon(2015, worksheet.xi_f_bw221, 0.001); end
  def test_xi_f_bx221; assert_in_epsilon(2020, worksheet.xi_f_bx221, 0.001); end
  def test_xi_f_by221; assert_in_epsilon(2025, worksheet.xi_f_by221, 0.001); end
  def test_xi_f_bz221; assert_in_epsilon(2030, worksheet.xi_f_bz221, 0.001); end
  def test_xi_f_ca221; assert_in_epsilon(2035, worksheet.xi_f_ca221, 0.001); end
  def test_xi_f_cb221; assert_in_epsilon(2040, worksheet.xi_f_cb221, 0.001); end
  def test_xi_f_cc221; assert_in_epsilon(2045, worksheet.xi_f_cc221, 0.001); end
  def test_xi_f_cd221; assert_in_epsilon(2050, worksheet.xi_f_cd221, 0.001); end
  def test_xi_f_c222; assert_equal("(i)", worksheet.xi_f_c222); end
  def test_xi_f_d222; assert_equal("Paper", worksheet.xi_f_d222); end
  def test_xi_f_e222; assert_in_epsilon(2472, worksheet.xi_f_e222, 0.001); end
  def test_xi_f_f222; assert_in_epsilon(2472, worksheet.xi_f_f222, 0.001); end
  def test_xi_f_g222; assert_in_epsilon(2472, worksheet.xi_f_g222, 0.001); end
  def test_xi_f_h222; assert_in_epsilon(2472, worksheet.xi_f_h222, 0.001); end
  def test_xi_f_i222; assert_in_epsilon(2472, worksheet.xi_f_i222, 0.001); end
  def test_xi_f_j222; assert_in_epsilon(2472, worksheet.xi_f_j222, 0.001); end
  def test_xi_f_k222; assert_in_epsilon(2472, worksheet.xi_f_k222, 0.001); end
  def test_xi_f_l222; assert_in_epsilon(2472, worksheet.xi_f_l222, 0.001); end
  def test_xi_f_m222; assert_in_epsilon(2472, worksheet.xi_f_m222, 0.001); end
  def test_xi_f_o222; assert_equal("(i)", worksheet.xi_f_o222); end
  def test_xi_f_p222; assert_equal("Paper", worksheet.xi_f_p222); end
  def test_xi_f_q222; assert_in_delta(0.006190445388349514, worksheet.xi_f_q222, 0.001); end
  def test_xi_f_r222; assert_in_delta(0.006035684253640776, worksheet.xi_f_r222, 0.001); end
  def test_xi_f_s222; assert_in_delta(0.005880923118932038, worksheet.xi_f_s222, 0.001); end
  def test_xi_f_t222; assert_in_delta(0.0057261619842233005, worksheet.xi_f_t222, 0.001); end
  def test_xi_f_u222; assert_in_delta(0.005571400849514563, worksheet.xi_f_u222, 0.001); end
  def test_xi_f_v222; assert_in_delta(0.005416639714805825, worksheet.xi_f_v222, 0.001); end
  def test_xi_f_w222; assert_in_delta(0.005261878580097087, worksheet.xi_f_w222, 0.001); end
  def test_xi_f_x222; assert_in_delta(0.005107117445388349, worksheet.xi_f_x222, 0.001); end
  def test_xi_f_y222; assert_in_delta(0.004952356310679612, worksheet.xi_f_y222, 0.001); end
  def test_xi_f_aa222; assert_equal("V.01", worksheet.xi_f_aa222); end
  def test_xi_f_ab222; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_ab222); end
  def test_xi_f_ac222; assert_in_delta(0.23347311838286128, worksheet.xi_f_ac222, 0.001); end
  def test_xi_f_ad222; assert_in_delta(0.23347311838286128, worksheet.xi_f_ad222, 0.001); end
  def test_xi_f_ae222; assert_in_delta(0.23347311838286128, worksheet.xi_f_ae222, 0.001); end
  def test_xi_f_af222; assert_in_delta(0.23347311838286128, worksheet.xi_f_af222, 0.001); end
  def test_xi_f_ag222; assert_in_delta(0.23347311838286128, worksheet.xi_f_ag222, 0.001); end
  def test_xi_f_ah222; assert_in_delta(0.23347311838286128, worksheet.xi_f_ah222, 0.001); end
  def test_xi_f_ai222; assert_in_delta(0.23347311838286128, worksheet.xi_f_ai222, 0.001); end
  def test_xi_f_aj222; assert_in_delta(0.23347311838286128, worksheet.xi_f_aj222, 0.001); end
  def test_xi_f_ak222; assert_in_delta(0.23347311838286128, worksheet.xi_f_ak222, 0.001); end
  def test_xi_f_am222; assert_equal("(i)", worksheet.xi_f_am222); end
  def test_xi_f_an222; assert_equal("Paper", worksheet.xi_f_an222); end
  def test_xi_f_ao222; assert_in_delta(0, (worksheet.xi_f_ao222||0), 0.001); end
  def test_xi_f_ap222; assert_in_delta(0, (worksheet.xi_f_ap222||0), 0.001); end
  def test_xi_f_aq222; assert_in_delta(0, (worksheet.xi_f_aq222||0), 0.001); end
  def test_xi_f_ar222; assert_in_delta(0, (worksheet.xi_f_ar222||0), 0.001); end
  def test_xi_f_as222; assert_in_delta(0, (worksheet.xi_f_as222||0), 0.001); end
  def test_xi_f_at222; assert_in_delta(0, (worksheet.xi_f_at222||0), 0.001); end
  def test_xi_f_au222; assert_in_delta(0, (worksheet.xi_f_au222||0), 0.001); end
  def test_xi_f_av222; assert_in_delta(0, (worksheet.xi_f_av222||0), 0.001); end
  def test_xi_f_aw222; assert_in_delta(0, (worksheet.xi_f_aw222||0), 0.001); end
  def test_xi_f_ax222; assert_equal("Combustion", worksheet.xi_f_ax222); end
  def test_xi_f_ay222; assert_equal("Paper", worksheet.xi_f_ay222); end
  def test_xi_f_bj222; assert_equal("Cost Initiative", worksheet.xi_f_bj222); end
  def test_xi_f_bk222; assert_in_delta(0, (worksheet.xi_f_bk222||0), 0.001); end
  def test_xi_f_bl222; assert_in_delta(0, (worksheet.xi_f_bl222||0), 0.001); end
  def test_xi_f_bm222; assert_in_delta(0, (worksheet.xi_f_bm222||0), 0.001); end
  def test_xi_f_bn222; assert_in_delta(0, (worksheet.xi_f_bn222||0), 0.001); end
  def test_xi_f_bo222; assert_in_delta(0, (worksheet.xi_f_bo222||0), 0.001); end
  def test_xi_f_bp222; assert_in_delta(0, (worksheet.xi_f_bp222||0), 0.001); end
  def test_xi_f_bq222; assert_in_delta(0, (worksheet.xi_f_bq222||0), 0.001); end
  def test_xi_f_br222; assert_in_delta(0, (worksheet.xi_f_br222||0), 0.001); end
  def test_xi_f_bs222; assert_in_delta(0, (worksheet.xi_f_bs222||0), 0.001); end
  def test_xi_f_bu222; assert_equal("Cost Initiative", worksheet.xi_f_bu222); end
  def test_xi_f_aa223; assert_equal("V.03", worksheet.xi_f_aa223); end
  def test_xi_f_ab223; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab223); end
  def test_xi_f_ac223; assert_in_delta(0.0215647077482191, worksheet.xi_f_ac223, 0.001); end
  def test_xi_f_ad223; assert_in_delta(0.020877332688744615, worksheet.xi_f_ad223, 0.001); end
  def test_xi_f_ae223; assert_in_delta(0.020189957629270134, worksheet.xi_f_ae223, 0.001); end
  def test_xi_f_af223; assert_in_delta(0.01950258256979565, worksheet.xi_f_af223, 0.001); end
  def test_xi_f_ag223; assert_in_delta(0.018815207510321168, worksheet.xi_f_ag223, 0.001); end
  def test_xi_f_ah223; assert_in_delta(0.01812783245084668, worksheet.xi_f_ah223, 0.001); end
  def test_xi_f_ai223; assert_in_delta(0.017440457391372198, worksheet.xi_f_ai223, 0.001); end
  def test_xi_f_aj223; assert_in_delta(0.016753082331897713, worksheet.xi_f_aj223, 0.001); end
  def test_xi_f_ak223; assert_in_delta(0.01606570727242323, worksheet.xi_f_ak223, 0.001); end
  def test_xi_f_ax223; assert_equal("Process", worksheet.xi_f_ax223); end
  def test_xi_f_ay223; assert_equal("Paper", worksheet.xi_f_ay223); end
  def test_xi_f_az223; assert_in_delta(0, (worksheet.xi_f_az223||0), 0.001); end
  def test_xi_f_ba223; assert_in_delta(0, (worksheet.xi_f_ba223||0), 0.001); end
  def test_xi_f_bb223; assert_in_delta(0, (worksheet.xi_f_bb223||0), 0.001); end
  def test_xi_f_bc223; assert_in_delta(0, (worksheet.xi_f_bc223||0), 0.001); end
  def test_xi_f_bd223; assert_in_delta(0, (worksheet.xi_f_bd223||0), 0.001); end
  def test_xi_f_be223; assert_in_delta(0, (worksheet.xi_f_be223||0), 0.001); end
  def test_xi_f_bf223; assert_in_delta(0, (worksheet.xi_f_bf223||0), 0.001); end
  def test_xi_f_bg223; assert_in_delta(0, (worksheet.xi_f_bg223||0), 0.001); end
  def test_xi_f_bh223; assert_in_delta(0, (worksheet.xi_f_bh223||0), 0.001); end
  def test_xi_f_bj223; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bj223); end
  def test_xi_f_bk175; assert_in_epsilon(524.723728181523, worksheet.xi_f_bk175, 0.001); end
  def test_xi_f_bk188; assert_in_delta(0, (worksheet.xi_f_bk188||0), 0.001); end
  def test_xi_f_bk189; assert_in_delta(0, (worksheet.xi_f_bk189||0), 0.001); end
  def test_xi_f_bk200; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_f_bk200, 0.001); end
  def test_xi_f_bk211; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_f_bk211, 0.001); end
  def test_xi_f_bk223; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_f_bk223, 0.001); end
  def test_xi_f_bl175; assert_in_epsilon(672.2066870516851, worksheet.xi_f_bl175, 0.001); end
  def test_xi_f_bl188; assert_in_epsilon(-16.805167176292116, worksheet.xi_f_bl188, 0.001); end
  def test_xi_f_bl189; assert_in_epsilon(-16.805167176292116, worksheet.xi_f_bl189, 0.001); end
  def test_xi_f_bl200; assert_in_epsilon(-19.02983363666533, worksheet.xi_f_bl200, 0.001); end
  def test_xi_f_bl211; assert_in_epsilon(-18.821446349530788, worksheet.xi_f_bl211, 0.001); end
  def test_xi_f_bl223; assert_in_epsilon(-18.821446349530788, worksheet.xi_f_bl223, 0.001); end
  def test_xi_f_bm175; assert_in_epsilon(729.1301081938904, worksheet.xi_f_bm175, 0.001); end
  def test_xi_f_bm188; assert_in_epsilon(-36.4565054096945, worksheet.xi_f_bm188, 0.001); end
  def test_xi_f_bm189; assert_in_epsilon(-36.4565054096945, worksheet.xi_f_bm189, 0.001); end
  def test_xi_f_bm200; assert_in_epsilon(-40.867456730968, worksheet.xi_f_bm200, 0.001); end
  def test_xi_f_bm211; assert_in_epsilon(-40.29019936742429, worksheet.xi_f_bm211, 0.001); end
  def test_xi_f_bm223; assert_in_epsilon(-40.29019936742429, worksheet.xi_f_bm223, 0.001); end
  def test_xi_f_bn175; assert_in_epsilon(834.19502955351, worksheet.xi_f_bn175, 0.001); end
  def test_xi_f_bn188; assert_in_epsilon(-62.56462721651326, worksheet.xi_f_bn188, 0.001); end
  def test_xi_f_bn189; assert_in_epsilon(-62.56462721651326, worksheet.xi_f_bn189, 0.001); end
  def test_xi_f_bn200; assert_in_epsilon(-69.08849301424698, worksheet.xi_f_bn200, 0.001); end
  def test_xi_f_bn211; assert_in_epsilon(-68.04390266800567, worksheet.xi_f_bn211, 0.001); end
  def test_xi_f_bn223; assert_in_epsilon(-68.04390266800567, worksheet.xi_f_bn223, 0.001); end
  def test_xi_f_bo175; assert_in_epsilon(845.7547494851374, worksheet.xi_f_bo175, 0.001); end
  def test_xi_f_bo188; assert_in_epsilon(-84.57547494851372, worksheet.xi_f_bo188, 0.001); end
  def test_xi_f_bo189; assert_in_epsilon(-84.57547494851372, worksheet.xi_f_bo189, 0.001); end
  def test_xi_f_bo200; assert_in_epsilon(-90.84642627501103, worksheet.xi_f_bo200, 0.001); end
  def test_xi_f_bo211; assert_in_epsilon(-89.31209113549096, worksheet.xi_f_bo211, 0.001); end
  def test_xi_f_bo223; assert_in_epsilon(-89.31209113549096, worksheet.xi_f_bo223, 0.001); end
  def test_xi_f_bp175; assert_in_epsilon(829.3713622935322, worksheet.xi_f_bp175, 0.001); end
  def test_xi_f_bp188; assert_in_epsilon(-103.67142028669161, worksheet.xi_f_bp188, 0.001); end
  def test_xi_f_bp189; assert_in_epsilon(-103.67142028669161, worksheet.xi_f_bp189, 0.001); end
  def test_xi_f_bp200; assert_in_epsilon(-109.42497395993928, worksheet.xi_f_bp200, 0.001); end
  def test_xi_f_bp211; assert_in_epsilon(-107.52248243401107, worksheet.xi_f_bp211, 0.001); end
  def test_xi_f_bp223; assert_in_epsilon(-107.52248243401107, worksheet.xi_f_bp223, 0.001); end
  def test_xi_f_bq175; assert_in_epsilon(817.7556436877143, worksheet.xi_f_bq175, 0.001); end
  def test_xi_f_bq188; assert_in_epsilon(-122.66334655315711, worksheet.xi_f_bq188, 0.001); end
  def test_xi_f_bq189; assert_in_epsilon(-122.66334655315711, worksheet.xi_f_bq189, 0.001); end
  def test_xi_f_bq200; assert_in_epsilon(-127.9135822848674, worksheet.xi_f_bq200, 0.001); end
  def test_xi_f_bq211; assert_in_epsilon(-125.65120860324305, worksheet.xi_f_bq211, 0.001); end
  def test_xi_f_bq223; assert_in_epsilon(-125.65120860324305, worksheet.xi_f_bq223, 0.001); end
  def test_xi_f_br175; assert_in_epsilon(807.1199513871851, worksheet.xi_f_br175, 0.001); end
  def test_xi_f_br188; assert_in_epsilon(-141.2459914927574, worksheet.xi_f_br188, 0.001); end
  def test_xi_f_br189; assert_in_epsilon(-141.2459914927574, worksheet.xi_f_br189, 0.001); end
  def test_xi_f_br200; assert_in_epsilon(-146.00747711030272, worksheet.xi_f_br200, 0.001); end
  def test_xi_f_br211; assert_in_epsilon(-143.39459778938215, worksheet.xi_f_br211, 0.001); end
  def test_xi_f_br223; assert_in_epsilon(-143.39459778938215, worksheet.xi_f_br223, 0.001); end
  def test_xi_f_bs223; assert_in_epsilon(-160.5309343196874, worksheet.xi_f_bs223, 0.001); end
  def test_xi_f_bu223; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bu223); end
  def test_xi_f_aa224; assert_equal("V.05", worksheet.xi_f_aa224); end
  def test_xi_f_ab224; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_ab224); end
  def test_xi_f_ac224; assert_in_delta(0.19583773694467688, worksheet.xi_f_ac224, 0.001); end
  def test_xi_f_ad224; assert_in_delta(0.2056201353205016, worksheet.xi_f_ad224, 0.001); end
  def test_xi_f_ae224; assert_in_delta(0.21540253369632612, worksheet.xi_f_ae224, 0.001); end
  def test_xi_f_af224; assert_in_delta(0.22548136838656974, worksheet.xi_f_af224, 0.001); end
  def test_xi_f_ag224; assert_in_delta(0.22548136838656974, worksheet.xi_f_ag224, 0.001); end
  def test_xi_f_ah224; assert_in_delta(0.22548136838656974, worksheet.xi_f_ah224, 0.001); end
  def test_xi_f_ai224; assert_in_delta(0.22548136838656974, worksheet.xi_f_ai224, 0.001); end
  def test_xi_f_aj224; assert_in_delta(0.22548136838656974, worksheet.xi_f_aj224, 0.001); end
  def test_xi_f_ak224; assert_in_delta(0.22548136838656974, worksheet.xi_f_ak224, 0.001); end
  def test_xi_f_ax224; assert_equal("Total", worksheet.xi_f_ax224); end
  def test_xi_f_ay224; assert_equal("Paper", worksheet.xi_f_ay224); end
  def test_xi_f_e91; assert_in_delta(0, (worksheet.xi_f_e91||0), 0.001); end
  def test_xi_f_az222; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az222, 0.001); end
  def test_xi_f_az224; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az224, 0.001); end
  def test_xi_f_ba222; assert_in_epsilon(3.1822052046545974, worksheet.xi_f_ba222, 0.001); end
  def test_xi_f_ba224; assert_in_epsilon(3.1822052046545974, worksheet.xi_f_ba224, 0.001); end
  def test_xi_f_bb222; assert_in_epsilon(3.0919530265834263, worksheet.xi_f_bb222, 0.001); end
  def test_xi_f_bb224; assert_in_epsilon(3.0919530265834263, worksheet.xi_f_bb224, 0.001); end
  def test_xi_f_bc222; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_bc222, 0.001); end
  def test_xi_f_bc224; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_bc224, 0.001); end
  def test_xi_f_bd222; assert_in_epsilon(2.920357691600278, worksheet.xi_f_bd222, 0.001); end
  def test_xi_f_bd224; assert_in_epsilon(2.920357691600278, worksheet.xi_f_bd224, 0.001); end
  def test_xi_f_be222; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_be222, 0.001); end
  def test_xi_f_be224; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_be224, 0.001); end
  def test_xi_f_bf222; assert_in_epsilon(2.758115597622485, worksheet.xi_f_bf222, 0.001); end
  def test_xi_f_bf224; assert_in_epsilon(2.758115597622485, worksheet.xi_f_bf224, 0.001); end
  def test_xi_f_bg222; assert_in_epsilon(2.676994550633588, worksheet.xi_f_bg222, 0.001); end
  def test_xi_f_bg224; assert_in_epsilon(2.676994550633588, worksheet.xi_f_bg224, 0.001); end
  def test_xi_f_aa225; assert_equal("V.04", worksheet.xi_f_aa225); end
  def test_xi_f_ab225; assert_equal("Liquid hydrocarbons", worksheet.xi_f_ab225); end
  def test_xi_f_ac225; assert_in_delta(0.029643631441892818, worksheet.xi_f_ac225, 0.001); end
  def test_xi_f_ad225; assert_in_delta(0.01922815626208726, worksheet.xi_f_ad225, 0.001); end
  def test_xi_f_ae225; assert_in_delta(0.00943630897874053, worksheet.xi_f_ae225, 0.001); end
  def test_xi_f_af225; assert_in_delta(0, (worksheet.xi_f_af225||0), 0.001); end
  def test_xi_f_ag225; assert_in_delta(0, (worksheet.xi_f_ag225||0), 0.001); end
  def test_xi_f_ah225; assert_in_delta(0, (worksheet.xi_f_ah225||0), 0.001); end
  def test_xi_f_ai225; assert_in_delta(0, (worksheet.xi_f_ai225||0), 0.001); end
  def test_xi_f_aj225; assert_in_delta(0, (worksheet.xi_f_aj225||0), 0.001); end
  def test_xi_f_ak225; assert_in_delta(0, (worksheet.xi_f_ak225||0), 0.001); end
  def test_xi_f_aa226; assert_equal("V.03", worksheet.xi_f_aa226); end
  def test_xi_f_ab226; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab226); end
  def test_xi_f_ac226; assert_in_delta(0.5194808054823499, worksheet.xi_f_ac226, 0.001); end
  def test_xi_f_ad226; assert_in_delta(0.5208012573458052, worksheet.xi_f_ad226, 0.001); end
  def test_xi_f_ae226; assert_in_delta(0.521498081312802, worksheet.xi_f_ae226, 0.001); end
  def test_xi_f_af226; assert_in_delta(0.5215429306607733, worksheet.xi_f_af226, 0.001); end
  def test_xi_f_ag226; assert_in_delta(0.5222303057202478, worksheet.xi_f_ag226, 0.001); end
  def test_xi_f_ah226; assert_in_delta(0.5229176807797222, worksheet.xi_f_ah226, 0.001); end
  def test_xi_f_ai226; assert_in_delta(0.5236050558391968, worksheet.xi_f_ai226, 0.001); end
  def test_xi_f_aj226; assert_in_delta(0.5242924308986713, worksheet.xi_f_aj226, 0.001); end
  def test_xi_f_ak226; assert_in_delta(0.5249798059581458, worksheet.xi_f_ak226, 0.001); end
  def test_xi_f_aa227; assert_equal("V.07", worksheet.xi_f_aa227); end
  def test_xi_f_ab227; assert_equal("Heat transport", worksheet.xi_f_ab227); end
  def test_xi_f_ac227; assert_in_delta(0, (worksheet.xi_f_ac227||0), 0.001); end
  def test_xi_f_ad227; assert_in_delta(0, (worksheet.xi_f_ad227||0), 0.001); end
  def test_xi_f_ae227; assert_in_delta(0, (worksheet.xi_f_ae227||0), 0.001); end
  def test_xi_f_af227; assert_in_delta(0, (worksheet.xi_f_af227||0), 0.001); end
  def test_xi_f_ag227; assert_in_delta(0, (worksheet.xi_f_ag227||0), 0.001); end
  def test_xi_f_ah227; assert_in_delta(0, (worksheet.xi_f_ah227||0), 0.001); end
  def test_xi_f_ai227; assert_in_delta(0, (worksheet.xi_f_ai227||0), 0.001); end
  def test_xi_f_aj227; assert_in_delta(0, (worksheet.xi_f_aj227||0), 0.001); end
  def test_xi_f_ak227; assert_in_delta(0, (worksheet.xi_f_ak227||0), 0.001); end
  def test_xi_f_aa228; assert_equal("Intensity", worksheet.xi_f_aa228); end
  def test_xi_f_ab228; assert_equal("Intensity", worksheet.xi_f_ab228); end
  def test_xi_f_ac228; assert_in_delta(0.21384848335390436, worksheet.xi_f_ac228, 0.001); end
  def test_xi_f_ad228; assert_in_delta(0.21328150810641225, worksheet.xi_f_ad228, 0.001); end
  def test_xi_f_ae228; assert_in_delta(0.21268600762198758, worksheet.xi_f_ae228, 0.001); end
  def test_xi_f_af228; assert_in_delta(0.21204262673273994, worksheet.xi_f_af228, 0.001); end
  def test_xi_f_ag228; assert_in_delta(0.21204262673273994, worksheet.xi_f_ag228, 0.001); end
  def test_xi_f_ah228; assert_in_delta(0.21204262673273994, worksheet.xi_f_ah228, 0.001); end
  def test_xi_f_ai228; assert_in_delta(0.21204262673273994, worksheet.xi_f_ai228, 0.001); end
  def test_xi_f_aj228; assert_in_delta(0.21204262673273994, worksheet.xi_f_aj228, 0.001); end
  def test_xi_f_ak228; assert_in_delta(0.21204262673273994, worksheet.xi_f_ak228, 0.001); end
  def test_xi_f_aa229; assert_equal("Cost", worksheet.xi_f_aa229); end
  def test_xi_f_ab229; assert_equal("Cost", worksheet.xi_f_ab229); end
  def test_xi_f_ac229; assert_in_epsilon(34.28943589936515, worksheet.xi_f_ac229, 0.001); end
  def test_xi_f_ad229; assert_in_epsilon(43.79195575055711, worksheet.xi_f_ad229, 0.001); end
  def test_xi_f_ae229; assert_in_epsilon(47.38319400048686, worksheet.xi_f_ae229, 0.001); end
  def test_xi_f_af229; assert_in_epsilon(54.125553291579465, worksheet.xi_f_af229, 0.001); end
  def test_xi_f_ag229; assert_in_epsilon(54.924124092916074, worksheet.xi_f_ag229, 0.001); end
  def test_xi_f_ah229; assert_in_epsilon(53.90981864086544, worksheet.xi_f_ah229, 0.001); end
  def test_xi_f_ai229; assert_in_epsilon(53.208662651846346, worksheet.xi_f_ai229, 0.001); end
  def test_xi_f_aj229; assert_in_epsilon(52.573161709531696, worksheet.xi_f_aj229, 0.001); end
  def test_xi_f_ak229; assert_in_epsilon(51.90634680413405, worksheet.xi_f_ak229, 0.001); end
  def test_xi_f_c230; assert_equal("only used to calculate additional energy demand for CCS", worksheet.xi_f_c230); end
  def test_xi_f_b231; assert_in_delta(1, worksheet.xi_f_b231, 0.001); end
  def test_xi_f_c231; assert_equal("Output Growth (kt)", worksheet.xi_f_c231); end
  def test_xi_f_n231; assert_in_epsilon(2, worksheet.xi_f_n231, 0.001); end
  def test_xi_f_o231; assert_equal("Energy demand multiplier (TWh/kt)", worksheet.xi_f_o231); end
  def test_xi_f_z231; assert_in_epsilon(3, worksheet.xi_f_z231, 0.001); end
  def test_xi_f_aa231; assert_equal("Energy split by vector (%), intensity (MMtCO2e/TWh) and cost (MEUR/TWh)", worksheet.xi_f_aa231); end
  def test_xi_f_al231; assert_in_epsilon(4, worksheet.xi_f_al231, 0.001); end
  def test_xi_f_am231; assert_equal("Process emissions intensity (MMtCO2e/Kt)", worksheet.xi_f_am231); end
  def test_xi_f_ax231; assert_in_epsilon(5, worksheet.xi_f_ax231, 0.001); end
  def test_xi_f_ay231; assert_equal("Emissions (MMtCO2e)", worksheet.xi_f_ay231); end
  def test_xi_f_bi231; assert_in_epsilon(6, worksheet.xi_f_bi231, 0.001); end
  def test_xi_f_bj231; assert_equal("Costs : Energy (MEUR)", worksheet.xi_f_bj231); end
  def test_xi_f_bt231; assert_in_epsilon(7, worksheet.xi_f_bt231, 0.001); end
  def test_xi_f_bu231; assert_equal("Costs : Capex (MEUR)", worksheet.xi_f_bu231); end
  def test_xi_f_c232; assert_equal("Product type", worksheet.xi_f_c232); end
  def test_xi_f_d232; assert_equal("Description", worksheet.xi_f_d232); end
  def test_xi_f_e232; assert_in_epsilon(2010, worksheet.xi_f_e232, 0.001); end
  def test_xi_f_f232; assert_in_epsilon(2015, worksheet.xi_f_f232, 0.001); end
  def test_xi_f_g232; assert_in_epsilon(2020, worksheet.xi_f_g232, 0.001); end
  def test_xi_f_h232; assert_in_epsilon(2025, worksheet.xi_f_h232, 0.001); end
  def test_xi_f_i232; assert_in_epsilon(2030, worksheet.xi_f_i232, 0.001); end
  def test_xi_f_j232; assert_in_epsilon(2035, worksheet.xi_f_j232, 0.001); end
  def test_xi_f_k232; assert_in_epsilon(2040, worksheet.xi_f_k232, 0.001); end
  def test_xi_f_l232; assert_in_epsilon(2045, worksheet.xi_f_l232, 0.001); end
  def test_xi_f_m232; assert_in_epsilon(2050, worksheet.xi_f_m232, 0.001); end
  def test_xi_f_o232; assert_equal("Industry", worksheet.xi_f_o232); end
  def test_xi_f_p232; assert_equal("Description", worksheet.xi_f_p232); end
  def test_xi_f_q232; assert_in_epsilon(2010, worksheet.xi_f_q232, 0.001); end
  def test_xi_f_r232; assert_in_epsilon(2015, worksheet.xi_f_r232, 0.001); end
  def test_xi_f_s232; assert_in_epsilon(2020, worksheet.xi_f_s232, 0.001); end
  def test_xi_f_t232; assert_in_epsilon(2025, worksheet.xi_f_t232, 0.001); end
  def test_xi_f_u232; assert_in_epsilon(2030, worksheet.xi_f_u232, 0.001); end
  def test_xi_f_v232; assert_in_epsilon(2035, worksheet.xi_f_v232, 0.001); end
  def test_xi_f_w232; assert_in_epsilon(2040, worksheet.xi_f_w232, 0.001); end
  def test_xi_f_x232; assert_in_epsilon(2045, worksheet.xi_f_x232, 0.001); end
  def test_xi_f_y232; assert_in_epsilon(2050, worksheet.xi_f_y232, 0.001); end
  def test_xi_f_aa232; assert_equal("Vector", worksheet.xi_f_aa232); end
  def test_xi_f_ab232; assert_equal("Description", worksheet.xi_f_ab232); end
  def test_xi_f_ac232; assert_in_epsilon(2010, worksheet.xi_f_ac232, 0.001); end
  def test_xi_f_ad232; assert_in_epsilon(2015, worksheet.xi_f_ad232, 0.001); end
  def test_xi_f_ae232; assert_in_epsilon(2020, worksheet.xi_f_ae232, 0.001); end
  def test_xi_f_af232; assert_in_epsilon(2025, worksheet.xi_f_af232, 0.001); end
  def test_xi_f_ag232; assert_in_epsilon(2030, worksheet.xi_f_ag232, 0.001); end
  def test_xi_f_ah232; assert_in_epsilon(2035, worksheet.xi_f_ah232, 0.001); end
  def test_xi_f_ai232; assert_in_epsilon(2040, worksheet.xi_f_ai232, 0.001); end
  def test_xi_f_aj232; assert_in_epsilon(2045, worksheet.xi_f_aj232, 0.001); end
  def test_xi_f_ak232; assert_in_epsilon(2050, worksheet.xi_f_ak232, 0.001); end
  def test_xi_f_am232; assert_equal("Industry", worksheet.xi_f_am232); end
  def test_xi_f_an232; assert_equal("Description", worksheet.xi_f_an232); end
  def test_xi_f_ao232; assert_in_epsilon(2010, worksheet.xi_f_ao232, 0.001); end
  def test_xi_f_ap232; assert_in_epsilon(2015, worksheet.xi_f_ap232, 0.001); end
  def test_xi_f_aq232; assert_in_epsilon(2020, worksheet.xi_f_aq232, 0.001); end
  def test_xi_f_ar232; assert_in_epsilon(2025, worksheet.xi_f_ar232, 0.001); end
  def test_xi_f_as232; assert_in_epsilon(2030, worksheet.xi_f_as232, 0.001); end
  def test_xi_f_at232; assert_in_epsilon(2035, worksheet.xi_f_at232, 0.001); end
  def test_xi_f_au232; assert_in_epsilon(2040, worksheet.xi_f_au232, 0.001); end
  def test_xi_f_av232; assert_in_epsilon(2045, worksheet.xi_f_av232, 0.001); end
  def test_xi_f_aw232; assert_in_epsilon(2050, worksheet.xi_f_aw232, 0.001); end
  def test_xi_f_ax232; assert_equal("Industry", worksheet.xi_f_ax232); end
  def test_xi_f_ay232; assert_equal("Description", worksheet.xi_f_ay232); end
  def test_xi_f_az232; assert_in_epsilon(2010, worksheet.xi_f_az232, 0.001); end
  def test_xi_f_ba232; assert_in_epsilon(2015, worksheet.xi_f_ba232, 0.001); end
  def test_xi_f_bb232; assert_in_epsilon(2020, worksheet.xi_f_bb232, 0.001); end
  def test_xi_f_bc232; assert_in_epsilon(2025, worksheet.xi_f_bc232, 0.001); end
  def test_xi_f_bd232; assert_in_epsilon(2030, worksheet.xi_f_bd232, 0.001); end
  def test_xi_f_be232; assert_in_epsilon(2035, worksheet.xi_f_be232, 0.001); end
  def test_xi_f_bf232; assert_in_epsilon(2040, worksheet.xi_f_bf232, 0.001); end
  def test_xi_f_bg232; assert_in_epsilon(2045, worksheet.xi_f_bg232, 0.001); end
  def test_xi_f_bh232; assert_in_epsilon(2050, worksheet.xi_f_bh232, 0.001); end
  def test_xi_f_bi232; assert_equal("Industry", worksheet.xi_f_bi232); end
  def test_xi_f_bj232; assert_equal("Description", worksheet.xi_f_bj232); end
  def test_xi_f_bk232; assert_in_epsilon(2010, worksheet.xi_f_bk232, 0.001); end
  def test_xi_f_bl232; assert_in_epsilon(2015, worksheet.xi_f_bl232, 0.001); end
  def test_xi_f_bm232; assert_in_epsilon(2020, worksheet.xi_f_bm232, 0.001); end
  def test_xi_f_bn232; assert_in_epsilon(2025, worksheet.xi_f_bn232, 0.001); end
  def test_xi_f_bo232; assert_in_epsilon(2030, worksheet.xi_f_bo232, 0.001); end
  def test_xi_f_bp232; assert_in_epsilon(2035, worksheet.xi_f_bp232, 0.001); end
  def test_xi_f_bq232; assert_in_epsilon(2040, worksheet.xi_f_bq232, 0.001); end
  def test_xi_f_br232; assert_in_epsilon(2045, worksheet.xi_f_br232, 0.001); end
  def test_xi_f_bs232; assert_in_epsilon(2050, worksheet.xi_f_bs232, 0.001); end
  def test_xi_f_bt232; assert_equal("Industry", worksheet.xi_f_bt232); end
  def test_xi_f_bu232; assert_equal("Description", worksheet.xi_f_bu232); end
  def test_xi_f_bv232; assert_in_epsilon(2010, worksheet.xi_f_bv232, 0.001); end
  def test_xi_f_bw232; assert_in_epsilon(2015, worksheet.xi_f_bw232, 0.001); end
  def test_xi_f_bx232; assert_in_epsilon(2020, worksheet.xi_f_bx232, 0.001); end
  def test_xi_f_by232; assert_in_epsilon(2025, worksheet.xi_f_by232, 0.001); end
  def test_xi_f_bz232; assert_in_epsilon(2030, worksheet.xi_f_bz232, 0.001); end
  def test_xi_f_ca232; assert_in_epsilon(2035, worksheet.xi_f_ca232, 0.001); end
  def test_xi_f_cb232; assert_in_epsilon(2040, worksheet.xi_f_cb232, 0.001); end
  def test_xi_f_cc232; assert_in_epsilon(2045, worksheet.xi_f_cc232, 0.001); end
  def test_xi_f_cd232; assert_in_epsilon(2050, worksheet.xi_f_cd232, 0.001); end
  def test_xi_f_c233; assert_equal("(i)", worksheet.xi_f_c233); end
  def test_xi_f_d233; assert_equal("Paper", worksheet.xi_f_d233); end
  def test_xi_f_e233; assert_in_epsilon(2472, worksheet.xi_f_e233, 0.001); end
  def test_xi_f_f233; assert_in_epsilon(2472, worksheet.xi_f_f233, 0.001); end
  def test_xi_f_g233; assert_in_epsilon(2472, worksheet.xi_f_g233, 0.001); end
  def test_xi_f_h233; assert_in_epsilon(2472, worksheet.xi_f_h233, 0.001); end
  def test_xi_f_i233; assert_in_epsilon(2472, worksheet.xi_f_i233, 0.001); end
  def test_xi_f_j233; assert_in_epsilon(2472, worksheet.xi_f_j233, 0.001); end
  def test_xi_f_k233; assert_in_epsilon(2472, worksheet.xi_f_k233, 0.001); end
  def test_xi_f_l233; assert_in_epsilon(2472, worksheet.xi_f_l233, 0.001); end
  def test_xi_f_m233; assert_in_epsilon(2472, worksheet.xi_f_m233, 0.001); end
  def test_xi_f_o233; assert_equal("(i)", worksheet.xi_f_o233); end
  def test_xi_f_p233; assert_equal("Paper", worksheet.xi_f_p233); end
  def test_xi_f_q233; assert_in_delta(0.006190445388349514, worksheet.xi_f_q233, 0.001); end
  def test_xi_f_aa233; assert_equal("V.01", worksheet.xi_f_aa233); end
  def test_xi_f_ab233; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_ab233); end
  def test_xi_f_ac233; assert_in_delta(0.23347311838286128, worksheet.xi_f_ac233, 0.001); end
  def test_xi_f_ad233; assert_in_delta(0.23347311838286128, worksheet.xi_f_ad233, 0.001); end
  def test_xi_f_ae233; assert_in_delta(0.23347311838286128, worksheet.xi_f_ae233, 0.001); end
  def test_xi_f_af233; assert_in_delta(0.23347311838286128, worksheet.xi_f_af233, 0.001); end
  def test_xi_f_ag233; assert_in_delta(0.23347311838286128, worksheet.xi_f_ag233, 0.001); end
  def test_xi_f_ah233; assert_in_delta(0.23347311838286128, worksheet.xi_f_ah233, 0.001); end
  def test_xi_f_ai233; assert_in_delta(0.23347311838286128, worksheet.xi_f_ai233, 0.001); end
  def test_xi_f_aj233; assert_in_delta(0.23347311838286128, worksheet.xi_f_aj233, 0.001); end
  def test_xi_f_ak233; assert_in_delta(0.23347311838286128, worksheet.xi_f_ak233, 0.001); end
  def test_xi_f_am233; assert_equal("(i)", worksheet.xi_f_am233); end
  def test_xi_f_an233; assert_equal("Paper", worksheet.xi_f_an233); end
  def test_xi_f_ao233; assert_in_delta(0, (worksheet.xi_f_ao233||0), 0.001); end
  def test_xi_f_ap233; assert_in_delta(0, (worksheet.xi_f_ap233||0), 0.001); end
  def test_xi_f_aq233; assert_in_delta(0, (worksheet.xi_f_aq233||0), 0.001); end
  def test_xi_f_ar233; assert_in_delta(0, (worksheet.xi_f_ar233||0), 0.001); end
  def test_xi_f_as233; assert_in_delta(0, (worksheet.xi_f_as233||0), 0.001); end
  def test_xi_f_at233; assert_in_delta(0, (worksheet.xi_f_at233||0), 0.001); end
  def test_xi_f_au233; assert_in_delta(0, (worksheet.xi_f_au233||0), 0.001); end
  def test_xi_f_av233; assert_in_delta(0, (worksheet.xi_f_av233||0), 0.001); end
  def test_xi_f_aw233; assert_in_delta(0, (worksheet.xi_f_aw233||0), 0.001); end
  def test_xi_f_ax233; assert_equal("Combustion", worksheet.xi_f_ax233); end
  def test_xi_f_ay233; assert_equal("Paper", worksheet.xi_f_ay233); end
  def test_xi_f_az233; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az233, 0.001); end
  def test_xi_f_ba233; assert_in_epsilon(3.1822052046545974, worksheet.xi_f_ba233, 0.001); end
  def test_xi_f_bb233; assert_in_epsilon(3.0919530265834263, worksheet.xi_f_bb233, 0.001); end
  def test_xi_f_bc233; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_bc233, 0.001); end
  def test_xi_f_bd233; assert_in_epsilon(2.920357691600278, worksheet.xi_f_bd233, 0.001); end
  def test_xi_f_be233; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_be233, 0.001); end
  def test_xi_f_bf233; assert_in_epsilon(2.758115597622485, worksheet.xi_f_bf233, 0.001); end
  def test_xi_f_bg233; assert_in_epsilon(2.676994550633588, worksheet.xi_f_bg233, 0.001); end
  def test_xi_f_bh222; assert_in_epsilon(2.595873503644692, worksheet.xi_f_bh222, 0.001); end
  def test_xi_f_bh233; assert_in_epsilon(2.595873503644692, worksheet.xi_f_bh233, 0.001); end
  def test_xi_f_bj233; assert_equal("Cost Initiative", worksheet.xi_f_bj233); end
  def test_xi_f_bk233; assert_in_delta(0, (worksheet.xi_f_bk233||0), 0.001); end
  def test_xi_f_bl233; assert_in_delta(0, (worksheet.xi_f_bl233||0), 0.001); end
  def test_xi_f_bm233; assert_in_delta(0, (worksheet.xi_f_bm233||0), 0.001); end
  def test_xi_f_bn233; assert_in_delta(0, (worksheet.xi_f_bn233||0), 0.001); end
  def test_xi_f_bo233; assert_in_delta(0, (worksheet.xi_f_bo233||0), 0.001); end
  def test_xi_f_bp233; assert_in_delta(0, (worksheet.xi_f_bp233||0), 0.001); end
  def test_xi_f_bq233; assert_in_delta(0, (worksheet.xi_f_bq233||0), 0.001); end
  def test_xi_f_br233; assert_in_delta(0, (worksheet.xi_f_br233||0), 0.001); end
  def test_xi_f_bs233; assert_in_delta(0, (worksheet.xi_f_bs233||0), 0.001); end
  def test_xi_f_bu233; assert_equal("Cost Initiative", worksheet.xi_f_bu233); end
  def test_xi_f_bv222; assert_in_delta(0, (worksheet.xi_f_bv222||0), 0.001); end
  def test_xi_f_bv233; assert_in_delta(0, (worksheet.xi_f_bv233||0), 0.001); end
  def test_xi_f_bw233; assert_in_delta(0, (worksheet.xi_f_bw233||0), 0.001); end
  def test_xi_f_bx233; assert_in_delta(0, (worksheet.xi_f_bx233||0), 0.001); end
  def test_xi_f_by233; assert_in_delta(0, (worksheet.xi_f_by233||0), 0.001); end
  def test_xi_f_bz233; assert_in_delta(0, (worksheet.xi_f_bz233||0), 0.001); end
  def test_xi_f_ca233; assert_in_delta(0, (worksheet.xi_f_ca233||0), 0.001); end
  def test_xi_f_cb233; assert_in_delta(0, (worksheet.xi_f_cb233||0), 0.001); end
  def test_xi_f_cc233; assert_in_delta(0, (worksheet.xi_f_cc233||0), 0.001); end
  def test_xi_f_cd233; assert_in_delta(0, (worksheet.xi_f_cd233||0), 0.001); end
  def test_xi_f_aa234; assert_equal("V.03", worksheet.xi_f_aa234); end
  def test_xi_f_ab234; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab234); end
  def test_xi_f_ac234; assert_in_delta(0.0215647077482191, worksheet.xi_f_ac234, 0.001); end
  def test_xi_f_ad234; assert_in_delta(0.020877332688744615, worksheet.xi_f_ad234, 0.001); end
  def test_xi_f_ae234; assert_in_delta(0.020189957629270134, worksheet.xi_f_ae234, 0.001); end
  def test_xi_f_af234; assert_in_delta(0.01950258256979565, worksheet.xi_f_af234, 0.001); end
  def test_xi_f_ag234; assert_in_delta(0.018815207510321168, worksheet.xi_f_ag234, 0.001); end
  def test_xi_f_ah234; assert_in_delta(0.01812783245084668, worksheet.xi_f_ah234, 0.001); end
  def test_xi_f_ai234; assert_in_delta(0.017440457391372198, worksheet.xi_f_ai234, 0.001); end
  def test_xi_f_aj234; assert_in_delta(0.016753082331897713, worksheet.xi_f_aj234, 0.001); end
  def test_xi_f_ak234; assert_in_delta(0.01606570727242323, worksheet.xi_f_ak234, 0.001); end
  def test_xi_f_ax234; assert_equal("Process", worksheet.xi_f_ax234); end
  def test_xi_f_ay234; assert_equal("Paper", worksheet.xi_f_ay234); end
  def test_xi_f_az234; assert_in_delta(0, (worksheet.xi_f_az234||0), 0.001); end
  def test_xi_f_ba211; assert_in_delta(0, (worksheet.xi_f_ba211||0), 0.001); end
  def test_xi_f_ba234; assert_in_delta(0, (worksheet.xi_f_ba234||0), 0.001); end
  def test_xi_f_bb211; assert_in_delta(0, (worksheet.xi_f_bb211||0), 0.001); end
  def test_xi_f_bb234; assert_in_delta(0, (worksheet.xi_f_bb234||0), 0.001); end
  def test_xi_f_bc211; assert_in_delta(0, (worksheet.xi_f_bc211||0), 0.001); end
  def test_xi_f_bc234; assert_in_delta(0, (worksheet.xi_f_bc234||0), 0.001); end
  def test_xi_f_bd211; assert_in_delta(0, (worksheet.xi_f_bd211||0), 0.001); end
  def test_xi_f_bd234; assert_in_delta(0, (worksheet.xi_f_bd234||0), 0.001); end
  def test_xi_f_be211; assert_in_delta(0, (worksheet.xi_f_be211||0), 0.001); end
  def test_xi_f_be234; assert_in_delta(0, (worksheet.xi_f_be234||0), 0.001); end
  def test_xi_f_bf211; assert_in_delta(0, (worksheet.xi_f_bf211||0), 0.001); end
  def test_xi_f_bf234; assert_in_delta(0, (worksheet.xi_f_bf234||0), 0.001); end
  def test_xi_f_bg211; assert_in_delta(0, (worksheet.xi_f_bg211||0), 0.001); end
  def test_xi_f_bg234; assert_in_delta(0, (worksheet.xi_f_bg234||0), 0.001); end
  def test_xi_f_bh211; assert_in_delta(0, (worksheet.xi_f_bh211||0), 0.001); end
  def test_xi_f_bh234; assert_in_delta(0, (worksheet.xi_f_bh234||0), 0.001); end
  def test_xi_f_bj234; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bj234); end
  def test_xi_f_bk234; assert_in_delta(-1.1368683772161603e-13, worksheet.xi_f_bk234, 0.001); end
  def test_xi_f_bl234; assert_in_epsilon(-18.821446349530788, worksheet.xi_f_bl234, 0.001); end
  def test_xi_f_bm234; assert_in_epsilon(-40.29019936742429, worksheet.xi_f_bm234, 0.001); end
  def test_xi_f_bn234; assert_in_epsilon(-68.04390266800567, worksheet.xi_f_bn234, 0.001); end
  def test_xi_f_bo234; assert_in_epsilon(-89.31209113549096, worksheet.xi_f_bo234, 0.001); end
  def test_xi_f_bp234; assert_in_epsilon(-107.52248243401107, worksheet.xi_f_bp234, 0.001); end
  def test_xi_f_bq234; assert_in_epsilon(-125.65120860324305, worksheet.xi_f_bq234, 0.001); end
  def test_xi_f_br234; assert_in_epsilon(-143.39459778938215, worksheet.xi_f_br234, 0.001); end
  def test_xi_f_bu234; assert_equal("Cum Cost vs baseline", worksheet.xi_f_bu234); end
  def test_xi_f_bv223; assert_in_delta(0, (worksheet.xi_f_bv223||0), 0.001); end
  def test_xi_f_bv234; assert_in_delta(0, (worksheet.xi_f_bv234||0), 0.001); end
  def test_xi_f_bw234; assert_in_epsilon(16.805167176292116, worksheet.xi_f_bw234, 0.001); end
  def test_xi_f_bx234; assert_in_epsilon(36.4565054096945, worksheet.xi_f_bx234, 0.001); end
  def test_xi_f_by234; assert_in_epsilon(62.56462721651326, worksheet.xi_f_by234, 0.001); end
  def test_xi_f_bz234; assert_in_epsilon(84.57547494851372, worksheet.xi_f_bz234, 0.001); end
  def test_xi_f_ca234; assert_in_epsilon(103.67142028669161, worksheet.xi_f_ca234, 0.001); end
  def test_xi_f_cb234; assert_in_epsilon(122.66334655315711, worksheet.xi_f_cb234, 0.001); end
  def test_xi_f_cc234; assert_in_epsilon(141.2459914927574, worksheet.xi_f_cc234, 0.001); end
  def test_xi_f_cd234; assert_in_epsilon(159.19602008853155, worksheet.xi_f_cd234, 0.001); end
  def test_xi_f_aa235; assert_equal("V.05", worksheet.xi_f_aa235); end
  def test_xi_f_ab235; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_ab235); end
  def test_xi_f_ac235; assert_in_delta(0.19583773694467688, worksheet.xi_f_ac235, 0.001); end
  def test_xi_f_ad235; assert_in_delta(0.2056201353205016, worksheet.xi_f_ad235, 0.001); end
  def test_xi_f_ae235; assert_in_delta(0.21540253369632612, worksheet.xi_f_ae235, 0.001); end
  def test_xi_f_af235; assert_in_delta(0.22548136838656974, worksheet.xi_f_af235, 0.001); end
  def test_xi_f_ag235; assert_in_delta(0.22548136838656974, worksheet.xi_f_ag235, 0.001); end
  def test_xi_f_ah235; assert_in_delta(0.22548136838656974, worksheet.xi_f_ah235, 0.001); end
  def test_xi_f_ai235; assert_in_delta(0.22548136838656974, worksheet.xi_f_ai235, 0.001); end
  def test_xi_f_aj235; assert_in_delta(0.22548136838656974, worksheet.xi_f_aj235, 0.001); end
  def test_xi_f_ak235; assert_in_delta(0.22548136838656974, worksheet.xi_f_ak235, 0.001); end
  def test_xi_f_ax235; assert_equal("Total", worksheet.xi_f_ax235); end
  def test_xi_f_ay235; assert_equal("Paper", worksheet.xi_f_ay235); end
  def test_xi_f_az235; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az235, 0.001); end
  def test_xi_f_ba235; assert_in_epsilon(3.1822052046545974, worksheet.xi_f_ba235, 0.001); end
  def test_xi_f_bb235; assert_in_epsilon(3.0919530265834263, worksheet.xi_f_bb235, 0.001); end
  def test_xi_f_bc235; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_bc235, 0.001); end
  def test_xi_f_bd235; assert_in_epsilon(2.920357691600278, worksheet.xi_f_bd235, 0.001); end
  def test_xi_f_be235; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_be235, 0.001); end
  def test_xi_f_bf235; assert_in_epsilon(2.758115597622485, worksheet.xi_f_bf235, 0.001); end
  def test_xi_f_bg235; assert_in_epsilon(2.676994550633588, worksheet.xi_f_bg235, 0.001); end
  def test_xi_f_aa236; assert_equal("V.04", worksheet.xi_f_aa236); end
  def test_xi_f_ab236; assert_equal("Liquid hydrocarbons", worksheet.xi_f_ab236); end
  def test_xi_f_ac236; assert_in_delta(0.029643631441892818, worksheet.xi_f_ac236, 0.001); end
  def test_xi_f_ad236; assert_in_delta(0.01922815626208726, worksheet.xi_f_ad236, 0.001); end
  def test_xi_f_ae236; assert_in_delta(0.00943630897874053, worksheet.xi_f_ae236, 0.001); end
  def test_xi_f_af236; assert_in_delta(0, (worksheet.xi_f_af236||0), 0.001); end
  def test_xi_f_ag236; assert_in_delta(0, (worksheet.xi_f_ag236||0), 0.001); end
  def test_xi_f_ah236; assert_in_delta(0, (worksheet.xi_f_ah236||0), 0.001); end
  def test_xi_f_ai236; assert_in_delta(0, (worksheet.xi_f_ai236||0), 0.001); end
  def test_xi_f_aj236; assert_in_delta(0, (worksheet.xi_f_aj236||0), 0.001); end
  def test_xi_f_ak236; assert_in_delta(0, (worksheet.xi_f_ak236||0), 0.001); end
  def test_xi_f_aa237; assert_equal("V.03", worksheet.xi_f_aa237); end
  def test_xi_f_ab237; assert_equal("Solid hydrocarbons", worksheet.xi_f_ab237); end
  def test_xi_f_ac237; assert_in_delta(0.5194808054823499, worksheet.xi_f_ac237, 0.001); end
  def test_xi_f_ad237; assert_in_delta(0.5208012573458052, worksheet.xi_f_ad237, 0.001); end
  def test_xi_f_ae237; assert_in_delta(0.521498081312802, worksheet.xi_f_ae237, 0.001); end
  def test_xi_f_af237; assert_in_delta(0.5215429306607733, worksheet.xi_f_af237, 0.001); end
  def test_xi_f_ag237; assert_in_delta(0.5222303057202478, worksheet.xi_f_ag237, 0.001); end
  def test_xi_f_ah237; assert_in_delta(0.5229176807797222, worksheet.xi_f_ah237, 0.001); end
  def test_xi_f_ai237; assert_in_delta(0.5236050558391968, worksheet.xi_f_ai237, 0.001); end
  def test_xi_f_aj237; assert_in_delta(0.5242924308986713, worksheet.xi_f_aj237, 0.001); end
  def test_xi_f_ak237; assert_in_delta(0.5249798059581458, worksheet.xi_f_ak237, 0.001); end
  def test_xi_f_aa238; assert_equal("V.07", worksheet.xi_f_aa238); end
  def test_xi_f_ab238; assert_equal("Heat transport", worksheet.xi_f_ab238); end
  def test_xi_f_ac238; assert_in_delta(0, (worksheet.xi_f_ac238||0), 0.001); end
  def test_xi_f_ad238; assert_in_delta(0, (worksheet.xi_f_ad238||0), 0.001); end
  def test_xi_f_ae238; assert_in_delta(0, (worksheet.xi_f_ae238||0), 0.001); end
  def test_xi_f_af238; assert_in_delta(0, (worksheet.xi_f_af238||0), 0.001); end
  def test_xi_f_ag238; assert_in_delta(0, (worksheet.xi_f_ag238||0), 0.001); end
  def test_xi_f_ah238; assert_in_delta(0, (worksheet.xi_f_ah238||0), 0.001); end
  def test_xi_f_ai238; assert_in_delta(0, (worksheet.xi_f_ai238||0), 0.001); end
  def test_xi_f_aj238; assert_in_delta(0, (worksheet.xi_f_aj238||0), 0.001); end
  def test_xi_f_ak238; assert_in_delta(0, (worksheet.xi_f_ak238||0), 0.001); end
  def test_xi_f_aa239; assert_equal("Intensity", worksheet.xi_f_aa239); end
  def test_xi_f_ab239; assert_equal("Intensity", worksheet.xi_f_ab239); end
  def test_xi_f_ac239; assert_in_delta(0.21384848335390436, worksheet.xi_f_ac239, 0.001); end
  def test_xi_f_ad239; assert_in_delta(0.21328150810641225, worksheet.xi_f_ad239, 0.001); end
  def test_xi_f_ae239; assert_in_delta(0.21268600762198758, worksheet.xi_f_ae239, 0.001); end
  def test_xi_f_af239; assert_in_delta(0.21204262673273994, worksheet.xi_f_af239, 0.001); end
  def test_xi_f_ag239; assert_in_delta(0.21204262673273994, worksheet.xi_f_ag239, 0.001); end
  def test_xi_f_ah239; assert_in_delta(0.21204262673273994, worksheet.xi_f_ah239, 0.001); end
  def test_xi_f_ai239; assert_in_delta(0.21204262673273994, worksheet.xi_f_ai239, 0.001); end
  def test_xi_f_aj239; assert_in_delta(0.21204262673273994, worksheet.xi_f_aj239, 0.001); end
  def test_xi_f_ak239; assert_in_delta(0.21204262673273994, worksheet.xi_f_ak239, 0.001); end
  def test_xi_f_aa240; assert_equal("Cost", worksheet.xi_f_aa240); end
  def test_xi_f_ab240; assert_equal("Cost", worksheet.xi_f_ab240); end
  def test_xi_f_ac240; assert_in_epsilon(34.28943589936515, worksheet.xi_f_ac240, 0.001); end
  def test_xi_f_ad240; assert_in_epsilon(43.79195575055711, worksheet.xi_f_ad240, 0.001); end
  def test_xi_f_ae240; assert_in_epsilon(47.38319400048686, worksheet.xi_f_ae240, 0.001); end
  def test_xi_f_af240; assert_in_epsilon(54.125553291579465, worksheet.xi_f_af240, 0.001); end
  def test_xi_f_ag240; assert_in_epsilon(54.924124092916074, worksheet.xi_f_ag240, 0.001); end
  def test_xi_f_ah240; assert_in_epsilon(53.90981864086544, worksheet.xi_f_ah240, 0.001); end
  def test_xi_f_ai240; assert_in_epsilon(53.208662651846346, worksheet.xi_f_ai240, 0.001); end
  def test_xi_f_aj240; assert_in_epsilon(52.573161709531696, worksheet.xi_f_aj240, 0.001); end
  def test_xi_f_ak240; assert_in_epsilon(51.90634680413405, worksheet.xi_f_ak240, 0.001); end
  def test_xi_f_b243; assert_equal("Cost of industrial CCS capture", worksheet.xi_f_b243); end
  def test_xi_f_b244; assert_equal("L", worksheet.xi_f_b244); end
  def test_xi_f_c244; assert_equal("Capital cost of industrial CCS capture", worksheet.xi_f_c244); end
  def test_xi_f_b245; assert_equal("H", worksheet.xi_f_b245); end
  def test_xi_f_c245; assert_equal("Capital cost of industrial CCS capture", worksheet.xi_f_c245); end
  def test_xi_f_b246; assert_equal("L", worksheet.xi_f_b246); end
  def test_xi_f_c246; assert_equal("Operating cost of industrial CCS capture", worksheet.xi_f_c246); end
  def test_xi_f_b247; assert_equal("H", worksheet.xi_f_b247); end
  def test_xi_f_c247; assert_equal("Operating cost of industrial CCS capture", worksheet.xi_f_c247); end
  def test_xi_f_b250; assert_equal("Outputs", worksheet.xi_f_b250); end
  def test_xi_f_c252; assert_equal("Energy produced and required", worksheet.xi_f_c252); end
  def test_xi_f_o252; assert_equal("TWh", worksheet.xi_f_o252); end
  def test_xi_f_c254; assert_equal("Vector", worksheet.xi_f_c254); end
  def test_xi_f_d254; assert_equal("Name", worksheet.xi_f_d254); end
  def test_xi_f_e254; assert_equal("Notes", worksheet.xi_f_e254); end
  def test_xi_f_f254; assert_equal("2010", worksheet.xi_f_f254); end
  def test_xi_f_g254; assert_equal("2015", worksheet.xi_f_g254); end
  def test_xi_f_h254; assert_equal("2020", worksheet.xi_f_h254); end
  def test_xi_f_i254; assert_equal("2025", worksheet.xi_f_i254); end
  def test_xi_f_j254; assert_equal("2030", worksheet.xi_f_j254); end
  def test_xi_f_k254; assert_equal("2035", worksheet.xi_f_k254); end
  def test_xi_f_l254; assert_equal("2040", worksheet.xi_f_l254); end
  def test_xi_f_m254; assert_equal("2045", worksheet.xi_f_m254); end
  def test_xi_f_n254; assert_equal("2050", worksheet.xi_f_n254); end
  def test_xi_f_c255; assert_equal("I.01", worksheet.xi_f_c255); end
  def test_xi_f_d255; assert_equal("Industry Heat", worksheet.xi_f_d255); end
  def test_xi_f_c256; assert_equal("I.02", worksheet.xi_f_c256); end
  def test_xi_f_d256; assert_equal("Industry Power", worksheet.xi_f_d256); end
  def test_xi_f_c257; assert_equal("I.03", worksheet.xi_f_c257); end
  def test_xi_f_d257; assert_equal("Industry CHP", worksheet.xi_f_d257); end
  def test_xi_f_f257; assert_in_epsilon(2.174510111944444, worksheet.xi_f_f257, 0.001); end
  def test_xi_f_g257; assert_in_epsilon(2.174510111944444, worksheet.xi_f_g257, 0.001); end
  def test_xi_f_h257; assert_in_epsilon(2.174510111944444, worksheet.xi_f_h257, 0.001); end
  def test_xi_f_i257; assert_in_epsilon(2.174510111944444, worksheet.xi_f_i257, 0.001); end
  def test_xi_f_j257; assert_in_epsilon(2.174510111944444, worksheet.xi_f_j257, 0.001); end
  def test_xi_f_k257; assert_in_epsilon(2.174510111944444, worksheet.xi_f_k257, 0.001); end
  def test_xi_f_l257; assert_in_epsilon(2.174510111944444, worksheet.xi_f_l257, 0.001); end
  def test_xi_f_m257; assert_in_epsilon(2.174510111944444, worksheet.xi_f_m257, 0.001); end
  def test_xi_f_n257; assert_in_epsilon(2.174510111944444, worksheet.xi_f_n257, 0.001); end
  def test_xi_f_c258; assert_equal("V.01", worksheet.xi_f_c258); end
  def test_xi_f_d258; assert_equal("Electricity (delivered to end user)", worksheet.xi_f_d258); end
  def test_xi_f_c259; assert_equal("V.03", worksheet.xi_f_c259); end
  def test_xi_f_d259; assert_equal("Solid hydrocarbons", worksheet.xi_f_d259); end
  def test_xi_f_c260; assert_equal("V.05", worksheet.xi_f_c260); end
  def test_xi_f_d260; assert_equal("Gaseous hydrocarbons", worksheet.xi_f_d260); end
  def test_xi_f_c261; assert_equal("V.04", worksheet.xi_f_c261); end
  def test_xi_f_d261; assert_equal("Liquid hydrocarbons", worksheet.xi_f_d261); end
  def test_xi_f_c262; assert_equal("V.07", worksheet.xi_f_c262); end
  def test_xi_f_d262; assert_equal("Heat transport", worksheet.xi_f_d262); end
  def test_xi_f_c263; assert_equal("Total", worksheet.xi_f_c263); end
  def test_xi_f_f263; assert_in_delta(-4.440892098500626e-16, worksheet.xi_f_f263, 0.001); end
  def test_xi_f_g263; assert_in_delta(-1.1102230246251565e-16, worksheet.xi_f_g263, 0.001); end
  def test_xi_f_h263; assert_in_delta(6.38378239159465e-16, worksheet.xi_f_h263, 0.001); end
  def test_xi_f_i263; assert_in_delta(4.440892098500626e-16, worksheet.xi_f_i263, 0.001); end
  def test_xi_f_j263; assert_in_delta(0, (worksheet.xi_f_j263||0), 0.001); end
  def test_xi_f_k263; assert_in_delta(-2.220446049250313e-15, worksheet.xi_f_k263, 0.001); end
  def test_xi_f_l263; assert_in_delta(0, (worksheet.xi_f_l263||0), 0.001); end
  def test_xi_f_m263; assert_in_delta(4.440892098500626e-16, worksheet.xi_f_m263, 0.001); end
  def test_xi_f_n263; assert_in_delta(-4.440892098500626e-16, worksheet.xi_f_n263, 0.001); end
  def test_xi_f_b265; assert_equal("Emissions", worksheet.xi_f_b265); end
  def test_xi_f_c267; assert_equal("Emissions produced", worksheet.xi_f_c267); end
  def test_xi_f_o267; assert_equal("Mt CO2e", worksheet.xi_f_o267); end
  def test_xi_f_c269; assert_equal("GHG", worksheet.xi_f_c269); end
  def test_xi_f_d269; assert_equal("IPCC Sector", worksheet.xi_f_d269); end
  def test_xi_f_e269; assert_equal("Notes", worksheet.xi_f_e269); end
  def test_xi_f_f269; assert_equal("2010", worksheet.xi_f_f269); end
  def test_xi_f_g269; assert_equal("2015", worksheet.xi_f_g269); end
  def test_xi_f_h269; assert_equal("2020", worksheet.xi_f_h269); end
  def test_xi_f_i269; assert_equal("2025", worksheet.xi_f_i269); end
  def test_xi_f_j269; assert_equal("2030", worksheet.xi_f_j269); end
  def test_xi_f_k269; assert_equal("2035", worksheet.xi_f_k269); end
  def test_xi_f_l269; assert_equal("2040", worksheet.xi_f_l269); end
  def test_xi_f_m269; assert_equal("2045", worksheet.xi_f_m269); end
  def test_xi_f_n269; assert_equal("2050", worksheet.xi_f_n269); end
  def test_xi_f_c270; assert_equal("CO2", worksheet.xi_f_c270); end
  def test_xi_f_d270; assert_equal("1A", worksheet.xi_f_d270); end
  def test_xi_f_e270; assert_equal("Fuel Combustion", worksheet.xi_f_e270); end
  def test_xi_f_az210; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az210, 0.001); end
  def test_xi_f_f270; assert_in_epsilon(3.272476507946944, worksheet.xi_f_f270, 0.001); end
  def test_xi_f_ba210; assert_in_epsilon(3.1822052046545974, worksheet.xi_f_ba210, 0.001); end
  def test_xi_f_g270; assert_in_epsilon(3.1822052046545974, worksheet.xi_f_g270, 0.001); end
  def test_xi_f_bb210; assert_in_epsilon(3.0919530265834263, worksheet.xi_f_bb210, 0.001); end
  def test_xi_f_h270; assert_in_epsilon(3.0919530265834263, worksheet.xi_f_h270, 0.001); end
  def test_xi_f_bc210; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_bc210, 0.001); end
  def test_xi_f_i270; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_i270, 0.001); end
  def test_xi_f_bd210; assert_in_epsilon(2.920357691600278, worksheet.xi_f_bd210, 0.001); end
  def test_xi_f_j270; assert_in_epsilon(2.920357691600278, worksheet.xi_f_j270, 0.001); end
  def test_xi_f_be210; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_be210, 0.001); end
  def test_xi_f_k270; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_k270, 0.001); end
  def test_xi_f_bf210; assert_in_epsilon(2.758115597622485, worksheet.xi_f_bf210, 0.001); end
  def test_xi_f_l270; assert_in_epsilon(2.758115597622485, worksheet.xi_f_l270, 0.001); end
  def test_xi_f_bg210; assert_in_epsilon(2.676994550633588, worksheet.xi_f_bg210, 0.001); end
  def test_xi_f_m270; assert_in_epsilon(2.676994550633588, worksheet.xi_f_m270, 0.001); end
  def test_xi_f_bh210; assert_in_epsilon(2.595873503644692, worksheet.xi_f_bh210, 0.001); end
  def test_xi_f_n270; assert_in_epsilon(2.595873503644692, worksheet.xi_f_n270, 0.001); end
  def test_xi_f_c271; assert_equal("CH4", worksheet.xi_f_c271); end
  def test_xi_f_d271; assert_equal("1A", worksheet.xi_f_d271); end
  def test_xi_f_e271; assert_equal("Fuel Combustion", worksheet.xi_f_e271); end
  def test_xi_f_c272; assert_equal("N2O", worksheet.xi_f_c272); end
  def test_xi_f_d272; assert_equal("1A", worksheet.xi_f_d272); end
  def test_xi_f_e272; assert_equal("Fuel Combustion", worksheet.xi_f_e272); end
  def test_xi_f_c273; assert_equal("CO2", worksheet.xi_f_c273); end
  def test_xi_f_d273; assert_in_epsilon(2, worksheet.xi_f_d273, 0.001); end
  def test_xi_f_e273; assert_equal("Industrial Processes", worksheet.xi_f_e273); end
  def test_xi_f_f273; assert_in_delta(0, (worksheet.xi_f_f273||0), 0.001); end
  def test_xi_f_g273; assert_in_delta(0, (worksheet.xi_f_g273||0), 0.001); end
  def test_xi_f_h273; assert_in_delta(0, (worksheet.xi_f_h273||0), 0.001); end
  def test_xi_f_i273; assert_in_delta(0, (worksheet.xi_f_i273||0), 0.001); end
  def test_xi_f_j273; assert_in_delta(0, (worksheet.xi_f_j273||0), 0.001); end
  def test_xi_f_k273; assert_in_delta(0, (worksheet.xi_f_k273||0), 0.001); end
  def test_xi_f_l273; assert_in_delta(0, (worksheet.xi_f_l273||0), 0.001); end
  def test_xi_f_m273; assert_in_delta(0, (worksheet.xi_f_m273||0), 0.001); end
  def test_xi_f_n273; assert_in_delta(0, (worksheet.xi_f_n273||0), 0.001); end
  def test_xi_f_c274; assert_equal("CH4", worksheet.xi_f_c274); end
  def test_xi_f_d274; assert_in_epsilon(2, worksheet.xi_f_d274, 0.001); end
  def test_xi_f_e274; assert_equal("Industrial Processes", worksheet.xi_f_e274); end
  def test_xi_f_c275; assert_equal("N2O", worksheet.xi_f_c275); end
  def test_xi_f_d275; assert_in_epsilon(2, worksheet.xi_f_d275, 0.001); end
  def test_xi_f_e275; assert_equal("Industrial Processes", worksheet.xi_f_e275); end
  def test_xi_f_c276; assert_equal("F", worksheet.xi_f_c276); end
  def test_xi_f_d276; assert_in_epsilon(2, worksheet.xi_f_d276, 0.001); end
  def test_xi_f_e276; assert_equal("Industrial Processes", worksheet.xi_f_e276); end
  def test_xi_f_c277; assert_equal("CO2", worksheet.xi_f_c277); end
  def test_xi_f_d277; assert_equal("X3", worksheet.xi_f_d277); end
  def test_xi_f_e277; assert_equal("Carbon capture", worksheet.xi_f_e277); end
  def test_xi_f_c278; assert_equal("Total", worksheet.xi_f_c278); end
  def test_xi_f_f278; assert_in_epsilon(3.272476507946944, worksheet.xi_f_f278, 0.001); end
  def test_xi_f_g278; assert_in_epsilon(3.1822052046545974, worksheet.xi_f_g278, 0.001); end
  def test_xi_f_h278; assert_in_epsilon(3.0919530265834263, worksheet.xi_f_h278, 0.001); end
  def test_xi_f_i278; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_i278, 0.001); end
  def test_xi_f_j278; assert_in_epsilon(2.920357691600278, worksheet.xi_f_j278, 0.001); end
  def test_xi_f_k278; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_k278, 0.001); end
  def test_xi_f_l278; assert_in_epsilon(2.758115597622485, worksheet.xi_f_l278, 0.001); end
  def test_xi_f_m278; assert_in_epsilon(2.676994550633588, worksheet.xi_f_m278, 0.001); end
  def test_xi_f_n278; assert_in_epsilon(2.595873503644692, worksheet.xi_f_n278, 0.001); end
  def test_xi_f_e280; assert_equal("CO2 intensity improvement", worksheet.xi_f_e280); end
  def test_xi_f_g280; assert_in_delta(0.00128729984007063, worksheet.xi_f_g280, 0.001); end
  def test_xi_f_h280; assert_in_delta(0.0012507900592975026, worksheet.xi_f_h280, 0.001); end
  def test_xi_f_i280; assert_in_delta(0.0012141904282318666, worksheet.xi_f_i280, 0.001); end
  def test_xi_f_j280; assert_in_delta(0.0011813744707120865, worksheet.xi_f_j280, 0.001); end
  def test_xi_f_k280; assert_in_delta(0.0011485585131923064, worksheet.xi_f_k280, 0.001); end
  def test_xi_f_l280; assert_in_delta(0.0011157425556725263, worksheet.xi_f_l280, 0.001); end
  def test_xi_f_m280; assert_in_delta(0.001082926598152746, worksheet.xi_f_m280, 0.001); end
  def test_xi_f_n280; assert_in_delta(0.0010501106406329659, worksheet.xi_f_n280, 0.001); end
  def test_xi_f_f280; assert_in_delta(0.0013238173575837152, worksheet.xi_f_f280, 0.001); end
  def test_xi_f_g281; assert_in_delta(-0.027585011862768124, worksheet.xi_f_g281, 0.001); end
  def test_xi_f_h281; assert_in_delta(-0.05516417946015224, worksheet.xi_f_h281, 0.001); end
  def test_xi_f_i281; assert_in_delta(-0.08281121917901428, worksheet.xi_f_i281, 0.001); end
  def test_xi_f_j281; assert_in_delta(-0.10760010514714898, worksheet.xi_f_j281, 0.001); end
  def test_xi_f_k281; assert_in_delta(-0.13238899111528366, worksheet.xi_f_k281, 0.001); end
  def test_xi_f_l281; assert_in_delta(-0.15717787708341835, worksheet.xi_f_l281, 0.001); end
  def test_xi_f_m281; assert_in_delta(-0.1819667630515532, worksheet.xi_f_m281, 0.001); end
  def test_xi_f_n281; assert_in_delta(-0.2067556490196879, worksheet.xi_f_n281, 0.001); end
  def test_xi_f_b282; assert_equal("Costs", worksheet.xi_f_b282); end
  def test_xi_f_c284; assert_equal("Costs of this physical change", worksheet.xi_f_c284); end
  def test_xi_f_o284; assert_equal("MEUR", worksheet.xi_f_o284); end
  def test_xi_f_c286; assert_equal("Vector", worksheet.xi_f_c286); end
  def test_xi_f_d286; assert_equal("Name", worksheet.xi_f_d286); end
  def test_xi_f_e286; assert_equal("Notes", worksheet.xi_f_e286); end
  def test_xi_f_f286; assert_equal("2010", worksheet.xi_f_f286); end
  def test_xi_f_g286; assert_equal("2015", worksheet.xi_f_g286); end
  def test_xi_f_h286; assert_equal("2020", worksheet.xi_f_h286); end
  def test_xi_f_i286; assert_equal("2025", worksheet.xi_f_i286); end
  def test_xi_f_j286; assert_equal("2030", worksheet.xi_f_j286); end
  def test_xi_f_k286; assert_equal("2035", worksheet.xi_f_k286); end
  def test_xi_f_l286; assert_equal("2040", worksheet.xi_f_l286); end
  def test_xi_f_m286; assert_equal("2045", worksheet.xi_f_m286); end
  def test_xi_f_n286; assert_equal("2050", worksheet.xi_f_n286); end
  def test_xi_f_c287; assert_equal("C1.Low", worksheet.xi_f_c287); end
  def test_xi_f_d287; assert_equal("Low estimate of capital costs in that year", worksheet.xi_f_d287); end
  def test_xi_f_f287; assert_in_delta(0, (worksheet.xi_f_f287||0), 0.001); end
  def test_xi_f_c288; assert_equal("C1.High", worksheet.xi_f_c288); end
  def test_xi_f_d288; assert_equal("High estimate of capital costs in that year", worksheet.xi_f_d288); end
  def test_xi_f_f288; assert_in_delta(0, (worksheet.xi_f_f288||0), 0.001); end
  def test_xi_f_c289; assert_equal("C2.Low", worksheet.xi_f_c289); end
  def test_xi_f_d289; assert_equal("Low estimate of O&M costs in that year", worksheet.xi_f_d289); end
  def test_xi_f_c290; assert_equal("C2.High", worksheet.xi_f_c290); end
  def test_xi_f_d290; assert_equal("High estimate of O&M costs in that year", worksheet.xi_f_d290); end
  def test_xi_f_c291; assert_equal("C3.Low", worksheet.xi_f_c291); end
  def test_xi_f_d291; assert_equal("Low estimate of fuel costs in that year", worksheet.xi_f_d291); end
  def test_xi_f_c292; assert_equal("C3.High", worksheet.xi_f_c292); end
  def test_xi_f_d292; assert_equal("High estimate of fuel costs in that year", worksheet.xi_f_d292); end
  def test_xi_f_b296; assert_equal("Emissions for each trajectory", worksheet.xi_f_b296); end
  def test_xi_f_c297; assert_equal("MtCO2 (needs to be updated manually)", worksheet.xi_f_c297); end
  def test_xi_f_f297; assert_equal("2010", worksheet.xi_f_f297); end
  def test_xi_f_g297; assert_equal("2015", worksheet.xi_f_g297); end
  def test_xi_f_h297; assert_equal("2020", worksheet.xi_f_h297); end
  def test_xi_f_i297; assert_equal("2025", worksheet.xi_f_i297); end
  def test_xi_f_j297; assert_equal("2030", worksheet.xi_f_j297); end
  def test_xi_f_k297; assert_equal("2035", worksheet.xi_f_k297); end
  def test_xi_f_l297; assert_equal("2040", worksheet.xi_f_l297); end
  def test_xi_f_m297; assert_equal("2045", worksheet.xi_f_m297); end
  def test_xi_f_n297; assert_equal("2050", worksheet.xi_f_n297); end
  def test_xi_f_o297; assert_equal("% evolution (for graphs)", worksheet.xi_f_o297); end
  def test_xi_f_d298; assert_equal("High", worksheet.xi_f_d298); end
  def test_xi_f_e298; assert_equal("Base Case", worksheet.xi_f_e298); end
  def test_xi_f_f298; assert_in_delta(0.8240082602605969, worksheet.xi_f_f298, 0.001); end
  def test_xi_f_g298; assert_in_delta(0.8746496522719612, worksheet.xi_f_g298, 0.001); end
  def test_xi_f_h298; assert_in_delta(0.9284033317548585, worksheet.xi_f_h298, 0.001); end
  def test_xi_f_i298; assert_in_delta(0.9854605717553235, worksheet.xi_f_i298, 0.001); end
  def test_xi_f_j298; assert_in_epsilon(1.0460244004604167, worksheet.xi_f_j298, 0.001); end
  def test_xi_f_k298; assert_in_epsilon(1.1103103236384388, worksheet.xi_f_k298, 0.001); end
  def test_xi_f_l298; assert_in_epsilon(1.178547091478432, worksheet.xi_f_l298, 0.001); end
  def test_xi_f_m298; assert_in_epsilon(1.2509775125576301, worksheet.xi_f_m298, 0.001); end
  def test_xi_f_n298; assert_in_epsilon(1.3278593178332194, worksheet.xi_f_n298, 0.001); end
  def test_xi_f_o298; assert_in_delta(0.6114636003931283, worksheet.xi_f_o298, 0.001); end
  def test_xi_f_d299; assert_equal("High", worksheet.xi_f_d299); end
  def test_xi_f_e299; assert_in_delta(1, worksheet.xi_f_e299, 0.001); end
  def test_xi_f_f299; assert_in_delta(0.8240082602605969, worksheet.xi_f_f299, 0.001); end
  def test_xi_f_g299; assert_in_delta(0.8637165316185615, worksheet.xi_f_g299, 0.001); end
  def test_xi_f_h299; assert_in_delta(0.9051932484609869, worksheet.xi_f_h299, 0.001); end
  def test_xi_f_i299; assert_in_delta(0.9485058003144987, worksheet.xi_f_i299, 0.001); end
  def test_xi_f_j299; assert_in_delta(0.9937231804373958, worksheet.xi_f_j299, 0.001); end
  def test_xi_f_k299; assert_in_epsilon(1.0409159284110363, worksheet.xi_f_k299, 0.001); end
  def test_xi_f_l299; assert_in_epsilon(1.0901560596175495, worksheet.xi_f_l299, 0.001); end
  def test_xi_f_m299; assert_in_epsilon(1.1415169802088372, worksheet.xi_f_m299, 0.001); end
  def test_xi_f_n299; assert_in_epsilon(1.1950733860498974, worksheet.xi_f_n299, 0.001); end
  def test_xi_f_o299; assert_in_delta(0.45031724035381543, worksheet.xi_f_o299, 0.001); end
  def test_xi_f_d300; assert_equal("High", worksheet.xi_f_d300); end
  def test_xi_f_e300; assert_in_epsilon(2, worksheet.xi_f_e300, 0.001); end
  def test_xi_f_f300; assert_in_delta(0.8240082602605969, worksheet.xi_f_f300, 0.001); end
  def test_xi_f_g300; assert_in_delta(0.8437933076031104, worksheet.xi_f_g300, 0.001); end
  def test_xi_f_h300; assert_in_delta(0.8657195790935702, worksheet.xi_f_h300, 0.001); end
  def test_xi_f_i300; assert_in_delta(0.8898041293926869, worksheet.xi_f_i300, 0.001); end
  def test_xi_f_j300; assert_in_delta(0.922591554181723, worksheet.xi_f_j300, 0.001); end
  def test_xi_f_k300; assert_in_delta(0.9561830547023203, worksheet.xi_f_k300, 0.001); end
  def test_xi_f_l300; assert_in_delta(0.9905619107519525, worksheet.xi_f_l300, 0.001); end
  def test_xi_f_m300; assert_in_epsilon(1.0257068191681418, worksheet.xi_f_m300, 0.001); end
  def test_xi_f_n300; assert_in_epsilon(1.061591424961592, worksheet.xi_f_n300, 0.001); end
  def test_xi_f_o300; assert_in_delta(0.28832619302366974, worksheet.xi_f_o300, 0.001); end
  def test_xi_f_d301; assert_equal("High", worksheet.xi_f_d301); end
  def test_xi_f_e301; assert_in_epsilon(3, worksheet.xi_f_e301, 0.001); end
  def test_xi_f_f301; assert_in_delta(0.8240082602605969, worksheet.xi_f_f301, 0.001); end
  def test_xi_f_g301; assert_in_delta(0.8373631072372388, worksheet.xi_f_g301, 0.001); end
  def test_xi_f_h301; assert_in_delta(0.8527654802048619, worksheet.xi_f_h301, 0.001); end
  def test_xi_f_i301; assert_in_delta(0.870228489189733, worksheet.xi_f_i301, 0.001); end
  def test_xi_f_j301; assert_in_delta(0.8950438614008838, worksheet.xi_f_j301, 0.001); end
  def test_xi_f_k301; assert_in_delta(0.9198408213608228, worksheet.xi_f_k301, 0.001); end
  def test_xi_f_l301; assert_in_delta(0.9445367925571474, worksheet.xi_f_l301, 0.001); end
  def test_xi_f_m301; assert_in_delta(0.9690399425700975, worksheet.xi_f_m301, 0.001); end
  def test_xi_f_n301; assert_in_delta(0.9932484079440018, worksheet.xi_f_n301, 0.001); end
  def test_xi_f_o301; assert_in_delta(0.20538646982723427, worksheet.xi_f_o301, 0.001); end
  def test_xi_f_d302; assert_equal("High", worksheet.xi_f_d302); end
  def test_xi_f_e302; assert_in_epsilon(4, worksheet.xi_f_e302, 0.001); end
  def test_xi_f_f302; assert_in_delta(0.8240082602605969, worksheet.xi_f_f302, 0.001); end
  def test_xi_f_g302; assert_in_delta(0.8309464417521315, worksheet.xi_f_g302, 0.001); end
  def test_xi_f_h302; assert_in_delta(0.8398564073022566, worksheet.xi_f_h302, 0.001); end
  def test_xi_f_i302; assert_in_delta(0.8507297711138064, worksheet.xi_f_i302, 0.001); end
  def test_xi_f_j302; assert_in_delta(0.8676413233928812, worksheet.xi_f_j302, 0.001); end
  def test_xi_f_k302; assert_in_delta(0.05168993967169844, worksheet.xi_f_k302, 0.001); end
  def test_xi_f_l302; assert_in_delta(0.021570477822792644, worksheet.xi_f_l302, 0.001); end
  def test_xi_f_m302; assert_in_delta(-0.012138935024697317, worksheet.xi_f_m302, 0.001); end
  def test_xi_f_n302; assert_in_delta(-0.049746902796522274, worksheet.xi_f_n302, 0.001); end
  def test_xi_f_o302; assert_in_epsilon(-1.0603718496472228, worksheet.xi_f_o302, 0.001); end
  def test_xi_f_d303; assert_equal("Medium", worksheet.xi_f_d303); end
  def test_xi_f_e303; assert_equal("Base Case", worksheet.xi_f_e303); end
  def test_xi_f_f303; assert_in_delta(0.8240082602605969, worksheet.xi_f_f303, 0.001); end
  def test_xi_f_g303; assert_in_delta(0.8240082602605969, worksheet.xi_f_g303, 0.001); end
  def test_xi_f_h303; assert_in_delta(0.8240082602605969, worksheet.xi_f_h303, 0.001); end
  def test_xi_f_i303; assert_in_delta(0.8240082602605969, worksheet.xi_f_i303, 0.001); end
  def test_xi_f_j303; assert_in_delta(0.8240082602605969, worksheet.xi_f_j303, 0.001); end
  def test_xi_f_k303; assert_in_delta(0.8240082602605969, worksheet.xi_f_k303, 0.001); end
  def test_xi_f_l303; assert_in_delta(0.8240082602605969, worksheet.xi_f_l303, 0.001); end
  def test_xi_f_m303; assert_in_delta(0.8240082602605969, worksheet.xi_f_m303, 0.001); end
  def test_xi_f_n303; assert_in_delta(0.8240082602605969, worksheet.xi_f_n303, 0.001); end
  def test_xi_f_o303; assert_in_delta(0, (worksheet.xi_f_o303||0), 0.001); end
  def test_xi_f_d304; assert_equal("Medium", worksheet.xi_f_d304); end
  def test_xi_f_e304; assert_in_delta(1, worksheet.xi_f_e304, 0.001); end
  def test_xi_f_f304; assert_in_delta(0.8240082602605969, worksheet.xi_f_f304, 0.001); end
  def test_xi_f_g304; assert_in_delta(0.8137081570073394, worksheet.xi_f_g304, 0.001); end
  def test_xi_f_h304; assert_in_delta(0.8034080537540819, worksheet.xi_f_h304, 0.001); end
  def test_xi_f_i304; assert_in_delta(0.7931079505008245, worksheet.xi_f_i304, 0.001); end
  def test_xi_f_j304; assert_in_delta(0.782807847247567, worksheet.xi_f_j304, 0.001); end
  def test_xi_f_k304; assert_in_delta(0.7725077439943097, worksheet.xi_f_k304, 0.001); end
  def test_xi_f_l304; assert_in_delta(0.7622076407410521, worksheet.xi_f_l304, 0.001); end
  def test_xi_f_m304; assert_in_delta(0.7519075374877946, worksheet.xi_f_m304, 0.001); end
  def test_xi_f_n304; assert_in_delta(0.7416074342345372, worksheet.xi_f_n304, 0.001); end
  def test_xi_f_o304; assert_in_delta(-0.1, worksheet.xi_f_o304, 0.001); end
  def test_xi_f_d305; assert_equal("Medium", worksheet.xi_f_d305); end
  def test_xi_f_e305; assert_in_epsilon(2, worksheet.xi_f_e305, 0.001); end
  def test_xi_f_f305; assert_in_delta(0.8240082602605969, worksheet.xi_f_f305, 0.001); end
  def test_xi_f_g305; assert_in_delta(0.7949384689189601, worksheet.xi_f_g305, 0.001); end
  def test_xi_f_h305; assert_in_delta(0.768373033403535, worksheet.xi_f_h305, 0.001); end
  def test_xi_f_i305; assert_in_delta(0.7440236308263057, worksheet.xi_f_i305, 0.001); end
  def test_xi_f_j305; assert_in_delta(0.7267737360216292, worksheet.xi_f_j305, 0.001); end
  def test_xi_f_k305; assert_in_delta(0.7096238939884834, worksheet.xi_f_k305, 0.001); end
  def test_xi_f_l305; assert_in_delta(0.6925741047268679, worksheet.xi_f_l305, 0.001); end
  def test_xi_f_m305; assert_in_delta(0.6756243682367832, worksheet.xi_f_m305, 0.001); end
  def test_xi_f_n305; assert_in_delta(0.6587746845182287, worksheet.xi_f_n305, 0.001); end
  def test_xi_f_o305; assert_in_delta(-0.20052417398111058, worksheet.xi_f_o305, 0.001); end
  def test_xi_f_d306; assert_equal("Medium", worksheet.xi_f_d306); end
  def test_xi_f_e306; assert_in_epsilon(3, worksheet.xi_f_e306, 0.001); end
  def test_xi_f_f306; assert_in_delta(0.8240082602605969, worksheet.xi_f_f306, 0.001); end
  def test_xi_f_g306; assert_in_delta(0.7888805711048519, worksheet.xi_f_g306, 0.001); end
  def test_xi_f_h306; assert_in_delta(0.7568755687527439, worksheet.xi_f_h306, 0.001); end
  def test_xi_f_i306; assert_in_delta(0.7276551532946359, worksheet.xi_f_i306, 0.001); end
  def test_xi_f_j306; assert_in_delta(0.7050729741727265, worksheet.xi_f_j306, 0.001); end
  def test_xi_f_k306; assert_in_delta(0.6826527852523425, worksheet.xi_f_k306, 0.001); end
  def test_xi_f_l306; assert_in_delta(0.6603945865334842, worksheet.xi_f_l306, 0.001); end
  def test_xi_f_m306; assert_in_delta(0.6382983780161513, worksheet.xi_f_m306, 0.001); end
  def test_xi_f_n306; assert_in_delta(0.6163641597003442, worksheet.xi_f_n306, 0.001); end
  def test_xi_f_o306; assert_in_delta(-0.25199274154677065, worksheet.xi_f_o306, 0.001); end
  def test_xi_f_d307; assert_equal("Medium", worksheet.xi_f_d307); end
  def test_xi_f_e307; assert_in_epsilon(4, worksheet.xi_f_e307, 0.001); end
  def test_xi_f_f307; assert_in_delta(0.8240082602605969, worksheet.xi_f_f307, 0.001); end
  def test_xi_f_g307; assert_in_delta(0.7828354245146449, worksheet.xi_f_g307, 0.001); end
  def test_xi_f_h307; assert_in_delta(0.7454180671042453, worksheet.xi_f_h307, 0.001); end
  def test_xi_f_i307; assert_in_delta(0.7113509954018072, worksheet.xi_f_i307, 0.001); end
  def test_xi_f_j307; assert_in_delta(0.6834865583484299, worksheet.xi_f_j307, 0.001); end
  def test_xi_f_k307; assert_in_delta(0.03836129085270179, worksheet.xi_f_k307, 0.001); end
  def test_xi_f_l307; assert_in_delta(0.01508149486114485, worksheet.xi_f_l307, 0.001); end
  def test_xi_f_m307; assert_in_delta(-0.00799581337850519, worksheet.xi_f_m307, 0.001); end
  def test_xi_f_n307; assert_in_delta(-0.03087063386624811, worksheet.xi_f_n307, 0.001); end
  def test_xi_f_o307; assert_in_epsilon(-1.0374639859271375, worksheet.xi_f_o307, 0.001); end
  def test_xi_f_d308; assert_equal("Low", worksheet.xi_f_d308); end
  def test_xi_f_e308; assert_equal("Base Case", worksheet.xi_f_e308); end
  def test_xi_f_f308; assert_in_delta(0.8240082602605969, worksheet.xi_f_f308, 0.001); end
  def test_xi_f_g308; assert_in_delta(0.7915710930631353, worksheet.xi_f_g308, 0.001); end
  def test_xi_f_h308; assert_in_delta(0.7604108181816115, worksheet.xi_f_h308, 0.001); end
  def test_xi_f_i308; assert_in_delta(0.7304771706228905, worksheet.xi_f_i308, 0.001); end
  def test_xi_f_j308; assert_in_delta(0.701721864080296, worksheet.xi_f_j308, 0.001); end
  def test_xi_f_k308; assert_in_delta(0.6740985130424211, worksheet.xi_f_k308, 0.001); end
  def test_xi_f_l308; assert_in_delta(0.6475625579681332, worksheet.xi_f_l308, 0.001); end
  def test_xi_f_m308; assert_in_delta(0.6220711934070725, worksheet.xi_f_m308, 0.001); end
  def test_xi_f_n308; assert_in_delta(0.5975832989496939, worksheet.xi_f_n308, 0.001); end
  def test_xi_f_o308; assert_in_delta(-0.27478481980180025, worksheet.xi_f_o308, 0.001); end
  def test_xi_f_d309; assert_equal("Low", worksheet.xi_f_d309); end
  def test_xi_f_e309; assert_in_delta(1, worksheet.xi_f_e309, 0.001); end
  def test_xi_f_f309; assert_in_delta(0.8240082602605969, worksheet.xi_f_f309, 0.001); end
  def test_xi_f_g309; assert_in_delta(0.7816764543998461, worksheet.xi_f_g309, 0.001); end
  def test_xi_f_h309; assert_in_delta(0.7414005477270712, worksheet.xi_f_h309, 0.001); end
  def test_xi_f_i309; assert_in_delta(0.7030842767245321, worksheet.xi_f_i309, 0.001); end
  def test_xi_f_j309; assert_in_delta(0.6666357708762811, worksheet.xi_f_j309, 0.001); end
  def test_xi_f_k309; assert_in_delta(0.6319673559772697, worksheet.xi_f_k309, 0.001); end
  def test_xi_f_l309; assert_in_delta(0.5989953661205232, worksheet.xi_f_l309, 0.001); end
  def test_xi_f_m309; assert_in_delta(0.5676399639839536, worksheet.xi_f_m309, 0.001); end
  def test_xi_f_n309; assert_in_delta(0.5378249690547244, worksheet.xi_f_n309, 0.001); end
  def test_xi_f_o309; assert_in_delta(-0.3473063378216203, worksheet.xi_f_o309, 0.001); end
  def test_xi_f_d310; assert_equal("Low", worksheet.xi_f_d310); end
  def test_xi_f_e310; assert_in_epsilon(2, worksheet.xi_f_e310, 0.001); end
  def test_xi_f_f310; assert_in_delta(0.8240082602605969, worksheet.xi_f_f310, 0.001); end
  def test_xi_f_g310; assert_in_delta(0.7636456369516403, worksheet.xi_f_g310, 0.001); end
  def test_xi_f_h310; assert_in_delta(0.7090695508492687, worksheet.xi_f_h310, 0.001); end
  def test_xi_f_i310; assert_in_delta(0.6595713937997266, worksheet.xi_f_i310, 0.001); end
  def test_xi_f_j310; assert_in_delta(0.6189173645473052, worksheet.xi_f_j310, 0.001); end
  def test_xi_f_k310; assert_in_delta(0.5805238064066574, worksheet.xi_f_k310, 0.001); end
  def test_xi_f_l310; assert_in_delta(0.5442725279205146, worksheet.xi_f_l310, 0.001); end
  def test_xi_f_m310; assert_in_delta(0.5100512668538508, worksheet.xi_f_m310, 0.001); end
  def test_xi_f_n310; assert_in_delta(0.4777534015428994, worksheet.xi_f_n310, 0.001); end
  def test_xi_f_o310; assert_in_delta(-0.4202079947696066, worksheet.xi_f_o310, 0.001); end
  def test_xi_f_d311; assert_equal("Low", worksheet.xi_f_d311); end
  def test_xi_f_e311; assert_in_epsilon(3, worksheet.xi_f_e311, 0.001); end
  def test_xi_f_f311; assert_in_delta(0.8240082602605969, worksheet.xi_f_f311, 0.001); end
  def test_xi_f_g311; assert_in_delta(0.7578262088880648, worksheet.xi_f_g311, 0.001); end
  def test_xi_f_h311; assert_in_delta(0.6984594672812262, worksheet.xi_f_h311, 0.001); end
  def test_xi_f_i311; assert_in_delta(0.6450608606759967, worksheet.xi_f_i311, 0.001); end
  def test_xi_f_j311; assert_in_delta(0.600437089784333, worksheet.xi_f_j311, 0.001); end
  def test_xi_f_k311; assert_in_delta(0.5584594835461218, worksheet.xi_f_k311, 0.001); end
  def test_xi_f_l311; assert_in_delta(0.518983641727918, worksheet.xi_f_l311, 0.001); end
  def test_xi_f_m311; assert_in_delta(0.48187263758342835, worksheet.xi_f_m311, 0.001); end
  def test_xi_f_n311; assert_in_delta(0.44699664514479703, worksheet.xi_f_n311, 0.001); end
  def test_xi_f_o311; assert_in_delta(-0.45753378127127997, worksheet.xi_f_o311, 0.001); end
  def test_xi_f_d312; assert_equal("Low", worksheet.xi_f_d312); end
  def test_xi_f_e312; assert_in_epsilon(4, worksheet.xi_f_e312, 0.001); end
  def test_xi_f_f312; assert_in_delta(0.8240082602605969, worksheet.xi_f_f312, 0.001); end
  def test_xi_f_g312; assert_in_delta(0.7520190300951924, worksheet.xi_f_g312, 0.001); end
  def test_xi_f_h312; assert_in_delta(0.6878862623474593, worksheet.xi_f_h312, 0.001); end
  def test_xi_f_i312; assert_in_delta(0.6306073464318849, worksheet.xi_f_i312, 0.001); end
  def test_xi_f_j312; assert_in_delta(0.5820541916004637, worksheet.xi_f_j312, 0.001); end
  def test_xi_f_k312; assert_in_delta(0.03138231783503703, worksheet.xi_f_k312, 0.001); end
  def test_xi_f_l312; assert_in_delta(0.011852079476943111, worksheet.xi_f_l312, 0.001); end
  def test_xi_f_m312; assert_in_delta(-0.0060363049868625285, worksheet.xi_f_m312, 0.001); end
  def test_xi_f_n312; assert_in_delta(-0.022387852302143796, worksheet.xi_f_n312, 0.001); end
  def test_xi_f_o312; assert_in_epsilon(-1.027169451305092, worksheet.xi_f_o312, 0.001); end
  def test_xi_f_b314; assert_equal("Summary slide with lever ambition for each trajectory", worksheet.xi_f_b314); end
  def test_xi_f_c315; assert_equal("MtCO2", worksheet.xi_f_c315); end
  def test_xi_f_f315; assert_equal("2010 Orig", worksheet.xi_f_f315); end
  def test_xi_f_g315; assert_equal("Demand 1", worksheet.xi_f_g315); end
  def test_xi_f_h315; assert_equal("Demand 2", worksheet.xi_f_h315); end
  def test_xi_f_i315; assert_equal("Demand 3", worksheet.xi_f_i315); end
  def test_xi_f_j315; assert_equal("Residual", worksheet.xi_f_j315); end
  def test_xi_f_k315; assert_equal("General objectives", worksheet.xi_f_k315); end
  def test_xi_f_d316; assert_equal("Demande", worksheet.xi_f_d316); end
  def test_xi_f_f316; assert_in_delta(0.8240082602605969, worksheet.xi_f_f316, 0.001); end
  def test_xi_f_g316; assert_in_epsilon(1.3278593178332194, worksheet.xi_f_g316, 0.001); end
  def test_xi_f_h316; assert_in_delta(0.8240082602605969, worksheet.xi_f_h316, 0.001); end
  def test_xi_f_i316; assert_in_delta(0.5975832989496939, worksheet.xi_f_i316, 0.001); end
  def test_xi_f_d317; assert_equal("Levier 1", worksheet.xi_f_d317); end
  def test_xi_f_g317; assert_in_epsilon(1.1950733860498974, worksheet.xi_f_g317, 0.001); end
  def test_xi_f_h317; assert_in_delta(0.7416074342345372, worksheet.xi_f_h317, 0.001); end
  def test_xi_f_i317; assert_in_delta(0.5378249690547244, worksheet.xi_f_i317, 0.001); end
  def test_xi_f_j317; assert_in_delta(-0.022387852302143796, worksheet.xi_f_j317, 0.001); end
  def test_xi_f_k317; assert_in_delta(0.04120041301302988, worksheet.xi_f_k317, 0.001); end
  def test_xi_f_d318; assert_equal("Levier 2", worksheet.xi_f_d318); end
  def test_xi_f_g318; assert_in_epsilon(1.061591424961592, worksheet.xi_f_g318, 0.001); end
  def test_xi_f_h318; assert_in_delta(0.6587746845182287, worksheet.xi_f_h318, 0.001); end
  def test_xi_f_i318; assert_in_delta(0.4777534015428994, worksheet.xi_f_i318, 0.001); end
  def test_xi_f_d319; assert_equal("Levier 3", worksheet.xi_f_d319); end
  def test_xi_f_g319; assert_in_delta(0.9932484079440018, worksheet.xi_f_g319, 0.001); end
  def test_xi_f_h319; assert_in_delta(0.6163641597003442, worksheet.xi_f_h319, 0.001); end
  def test_xi_f_i319; assert_in_delta(0.44699664514479703, worksheet.xi_f_i319, 0.001); end
  def test_xi_f_d320; assert_equal("Levier 4", worksheet.xi_f_d320); end
  def test_xi_f_g320; assert_in_delta(-0.049746902796522274, worksheet.xi_f_g320, 0.001); end
  def test_xi_f_h320; assert_in_delta(-0.03087063386624811, worksheet.xi_f_h320, 0.001); end
  def test_xi_f_i320; assert_in_delta(-0.022387852302143796, worksheet.xi_f_i320, 0.001); end
  def test_xi_f_c322; assert_equal("MtCO2 delta (for graphs)", worksheet.xi_f_c322); end
  def test_xi_f_f322; assert_equal("2010 Orig", worksheet.xi_f_f322); end
  def test_xi_f_g322; assert_equal("Demand 1", worksheet.xi_f_g322); end
  def test_xi_f_h322; assert_equal("Demand 2", worksheet.xi_f_h322); end
  def test_xi_f_i322; assert_equal("Demand 3", worksheet.xi_f_i322); end
  def test_xi_f_j322; assert_equal("Residual", worksheet.xi_f_j322); end
  def test_xi_f_k322; assert_equal("General objectives", worksheet.xi_f_k322); end
  def test_xi_f_d323; assert_equal("Demande", worksheet.xi_f_d323); end
  def test_xi_f_f323; assert_in_delta(0.8240082602605969, worksheet.xi_f_f323, 0.001); end
  def test_xi_f_d324; assert_equal("Levier 1", worksheet.xi_f_d324); end
  def test_xi_f_g324; assert_in_delta(0.132785931783322, worksheet.xi_f_g324, 0.001); end
  def test_xi_f_h324; assert_in_delta(0.08240082602605969, worksheet.xi_f_h324, 0.001); end
  def test_xi_f_i324; assert_in_delta(0.05975832989496943, worksheet.xi_f_i324, 0.001); end
  def test_xi_f_d325; assert_equal("Levier 2", worksheet.xi_f_d325); end
  def test_xi_f_g325; assert_in_delta(0.13348196108830535, worksheet.xi_f_g325, 0.001); end
  def test_xi_f_h325; assert_in_delta(0.0828327497163085, worksheet.xi_f_h325, 0.001); end
  def test_xi_f_i325; assert_in_delta(0.06007156751182502, worksheet.xi_f_i325, 0.001); end
  def test_xi_f_d326; assert_equal("Levier 3", worksheet.xi_f_d326); end
  def test_xi_f_g326; assert_in_delta(0.06834301701759027, worksheet.xi_f_g326, 0.001); end
  def test_xi_f_h326; assert_in_delta(0.04241052481788454, worksheet.xi_f_h326, 0.001); end
  def test_xi_f_i326; assert_in_delta(0.03075675639810238, worksheet.xi_f_i326, 0.001); end
  def test_xi_f_d327; assert_equal("Levier 4", worksheet.xi_f_d327); end
  def test_xi_f_g327; assert_in_epsilon(1.042995310740524, worksheet.xi_f_g327, 0.001); end
  def test_xi_f_h327; assert_in_delta(0.6472347935665923, worksheet.xi_f_h327, 0.001); end
  def test_xi_f_i327; assert_in_delta(0.46938449744694083, worksheet.xi_f_i327, 0.001); end
  def test_xi_f_d328; assert_equal("Residual", worksheet.xi_f_d328); end
  def test_xi_f_g328; assert_in_delta(-0.049746902796522274, worksheet.xi_f_g328, 0.001); end
  def test_xi_f_h328; assert_in_delta(-0.03087063386624811, worksheet.xi_f_h328, 0.001); end
  def test_xi_f_i328; assert_in_delta(-0.022387852302143796, worksheet.xi_f_i328, 0.001); end
  def test_xi_f_l328; assert_in_epsilon(1.0374639859271375, worksheet.xi_f_l328, 0.001); end
  def test_xi_f_m328; assert_in_epsilon(1.0374639859271375, worksheet.xi_f_m328, 0.001); end
  def test_xi_f_n328; assert_in_epsilon(1.0374639859271375, worksheet.xi_f_n328, 0.001); end
  def test_xi_f_b330; assert_equal("Add on to model negatives (a split needs to be manually added at the place with a negative, the residual must not be used anymore in this case)", worksheet.xi_f_b330); end
  def test_xi_f_c331; assert_equal("MtCO2 delta (for graphs)", worksheet.xi_f_c331); end
  def test_xi_f_f331; assert_equal("2010 Orig", worksheet.xi_f_f331); end
  def test_xi_f_g331; assert_equal("Demand 1", worksheet.xi_f_g331); end
  def test_xi_f_h331; assert_equal("Demand 2", worksheet.xi_f_h331); end
  def test_xi_f_i331; assert_equal("Demand 3", worksheet.xi_f_i331); end
  def test_xi_f_j331; assert_equal("Residual", worksheet.xi_f_j331); end
  def test_xi_f_k331; assert_equal("General objectives", worksheet.xi_f_k331); end
  def test_xi_f_d332; assert_equal("Demande", worksheet.xi_f_d332); end
  def test_xi_f_f332; assert_in_delta(0.8240082602605969, worksheet.xi_f_f332, 0.001); end
  def test_xi_f_d333; assert_equal("Levier 1", worksheet.xi_f_d333); end
  def test_xi_f_g333; assert_in_delta(0.132785931783322, worksheet.xi_f_g333, 0.001); end
  def test_xi_f_h333; assert_in_delta(0.08240082602605969, worksheet.xi_f_h333, 0.001); end
  def test_xi_f_i333; assert_in_delta(0.05975832989496943, worksheet.xi_f_i333, 0.001); end
  def test_xi_f_d334; assert_equal("Levier 2", worksheet.xi_f_d334); end
  def test_xi_f_g334; assert_in_delta(0.13348196108830535, worksheet.xi_f_g334, 0.001); end
  def test_xi_f_h334; assert_in_delta(0.0828327497163085, worksheet.xi_f_h334, 0.001); end
  def test_xi_f_i334; assert_in_delta(0.06007156751182502, worksheet.xi_f_i334, 0.001); end
  def test_xi_f_d335; assert_equal("Levier 3 ", worksheet.xi_f_d335); end
  def test_xi_f_g335; assert_in_delta(0.06834301701759027, worksheet.xi_f_g335, 0.001); end
  def test_xi_f_h335; assert_in_delta(0.04241052481788454, worksheet.xi_f_h335, 0.001); end
  def test_xi_f_i335; assert_in_delta(0.03075675639810238, worksheet.xi_f_i335, 0.001); end
  def test_xi_f_d336; assert_equal("Levier 4 positive", worksheet.xi_f_d336); end
  def test_xi_f_g336; assert_in_delta(0.9932484079440018, worksheet.xi_f_g336, 0.001); end
  def test_xi_f_h336; assert_in_delta(0.6163641597003442, worksheet.xi_f_h336, 0.001); end
  def test_xi_f_i336; assert_in_delta(0.44699664514479703, worksheet.xi_f_i336, 0.001); end
  def test_xi_f_d337; assert_equal("Levier negative", worksheet.xi_f_d337); end
  def test_xi_f_g337; assert_in_delta(-0.049746902796522274, worksheet.xi_f_g337, 0.001); end
  def test_xi_f_h337; assert_in_delta(-0.03087063386624811, worksheet.xi_f_h337, 0.001); end
  def test_xi_f_i337; assert_in_delta(-0.022387852302143796, worksheet.xi_f_i337, 0.001); end
  def test_xi_f_d338; assert_equal("Residual", worksheet.xi_f_d338); end
  def test_xi_f_l338; assert_in_epsilon(1.0374639859271375, worksheet.xi_f_l338, 0.001); end
  def test_xi_f_m338; assert_in_epsilon(1.0374639859271375, worksheet.xi_f_m338, 0.001); end
  def test_xi_f_n338; assert_in_epsilon(1.0374639859271375, worksheet.xi_f_n338, 0.001); end
  def test_xi_f_b342; assert_equal("CO2 Waterfall", worksheet.xi_f_b342); end
  def test_xi_f_f343; assert_equal("2010 Orig", worksheet.xi_f_f343); end
  def test_xi_f_g343; assert_equal("2050 Orig", worksheet.xi_f_g343); end
  def test_xi_f_h343; assert_equal("Energy efficiency", worksheet.xi_f_h343); end
  def test_xi_f_i343; assert_equal("Fuel to Gas", worksheet.xi_f_i343); end
  def test_xi_f_j343; assert_equal("Switch to Biomass", worksheet.xi_f_j343); end
  def test_xi_f_k343; assert_equal("Black liquor gasification", worksheet.xi_f_k343); end
  def test_xi_f_l343; assert_equal("CCS", worksheet.xi_f_l343); end
  def test_xi_f_c344; assert_equal("MtCO2", worksheet.xi_f_c344); end
  def test_xi_f_f344; assert_in_delta(0.8240082602605969, worksheet.xi_f_f344, 0.001); end
  def test_xi_f_bh175; assert_in_epsilon(3.272476507946944, worksheet.xi_f_bh175, 0.001); end
  def test_xi_f_g344; assert_in_epsilon(3.272476507946944, worksheet.xi_f_g344, 0.001); end
  def test_xi_f_bh188; assert_in_epsilon(2.6179812063575554, worksheet.xi_f_bh188, 0.001); end
  def test_xi_f_h344; assert_in_epsilon(2.6179812063575554, worksheet.xi_f_h344, 0.001); end
  def test_xi_f_bh201; assert_in_epsilon(2.595873503644692, worksheet.xi_f_bh201, 0.001); end
  def test_xi_f_i344; assert_in_epsilon(2.595873503644692, worksheet.xi_f_i344, 0.001); end
  def test_xi_f_bh212; assert_in_epsilon(2.595873503644692, worksheet.xi_f_bh212, 0.001); end
  def test_xi_f_j344; assert_in_epsilon(2.595873503644692, worksheet.xi_f_j344, 0.001); end
  def test_xi_f_bh224; assert_in_epsilon(2.595873503644692, worksheet.xi_f_bh224, 0.001); end
  def test_xi_f_k344; assert_in_epsilon(2.595873503644692, worksheet.xi_f_k344, 0.001); end
  def test_xi_f_bh235; assert_in_epsilon(2.595873503644692, worksheet.xi_f_bh235, 0.001); end
  def test_xi_f_l344; assert_in_epsilon(2.595873503644692, worksheet.xi_f_l344, 0.001); end
  def test_xi_f_c345; assert_equal("MtCO2 delta (for graphs)", worksheet.xi_f_c345); end
  def test_xi_f_f345; assert_in_delta(0.8240082602605969, worksheet.xi_f_f345, 0.001); end
  def test_xi_f_g345; assert_in_epsilon(2.448468247686347, worksheet.xi_f_g345, 0.001); end
  def test_xi_f_c346; assert_equal("% evolutions (for graphs)", worksheet.xi_f_c346); end
  def test_xi_f_g346; assert_in_epsilon(2.971412260979042, worksheet.xi_f_g346, 0.001); end
  def test_xi_f_h346; assert_in_delta(-0.7942824521958078, worksheet.xi_f_h346, 0.001); end
  def test_xi_f_i346; assert_in_delta(-0.02682946734765969, worksheet.xi_f_i346, 0.001); end
  def test_xi_f_j346; assert_in_delta(0, (worksheet.xi_f_j346||0), 0.001); end
  def test_xi_f_k346; assert_in_delta(0, (worksheet.xi_f_k346||0), 0.001); end
  def test_xi_f_l346; assert_in_delta(0, (worksheet.xi_f_l346||0), 0.001); end
  def test_xi_f_m346; assert_in_epsilon(2.150300341435574, worksheet.xi_f_m346, 0.001); end
  def test_xi_f_b349; assert_equal("Cost summary", worksheet.xi_f_b349); end
  def test_xi_f_f350; assert_equal("2010 Orig", worksheet.xi_f_f350); end
  def test_xi_f_g350; assert_equal("2050 Orig", worksheet.xi_f_g350); end
  def test_xi_f_h350; assert_equal("Energy efficiency", worksheet.xi_f_h350); end
  def test_xi_f_i350; assert_equal("Fuel to Gas", worksheet.xi_f_i350); end
  def test_xi_f_j350; assert_equal("Switch to Biomass", worksheet.xi_f_j350); end
  def test_xi_f_k350; assert_equal("Black liquor gasification", worksheet.xi_f_k350); end
  def test_xi_f_l350; assert_equal("CCS", worksheet.xi_f_l350); end
  def test_xi_f_c351; assert_equal("€ M", worksheet.xi_f_c351); end
  def test_xi_f_d351; assert_equal("Energy", worksheet.xi_f_d351); end
  def test_xi_f_f351; assert_in_epsilon(524.723728181523, worksheet.xi_f_f351, 0.001); end
  def test_xi_f_bs175; assert_in_epsilon(795.9801004426581, worksheet.xi_f_bs175, 0.001); end
  def test_xi_f_g351; assert_in_epsilon(795.9801004426581, worksheet.xi_f_g351, 0.001); end
  def test_xi_f_bs188; assert_in_epsilon(-159.19602008853155, worksheet.xi_f_bs188, 0.001); end
  def test_xi_f_bs189; assert_in_epsilon(-159.19602008853155, worksheet.xi_f_bs189, 0.001); end
  def test_xi_f_bs200; assert_in_epsilon(-163.48381153494404, worksheet.xi_f_bs200, 0.001); end
  def test_xi_f_bs211; assert_in_epsilon(-160.5309343196874, worksheet.xi_f_bs211, 0.001); end
  def test_xi_f_bs234; assert_in_epsilon(-160.5309343196874, worksheet.xi_f_bs234, 0.001); end
  def test_xi_f_l351; assert_in_epsilon(635.4491661229707, worksheet.xi_f_l351, 0.001); end
  def test_xi_f_d352; assert_equal("Capex", worksheet.xi_f_d352); end
  def test_xi_f_f352; assert_in_delta(0, (worksheet.xi_f_f352||0), 0.001); end
  def test_xi_f_g352; assert_in_delta(0, (worksheet.xi_f_g352||0), 0.001); end
  def test_xi_f_h352; assert_in_epsilon(159.19602008853155, worksheet.xi_f_h352, 0.001); end
  def test_xi_f_i352; assert_in_epsilon(159.19602008853155, worksheet.xi_f_i352, 0.001); end
  def test_xi_f_j352; assert_in_epsilon(159.19602008853155, worksheet.xi_f_j352, 0.001); end
  def test_xi_f_k352; assert_in_epsilon(159.19602008853155, worksheet.xi_f_k352, 0.001); end
  def test_xi_f_l352; assert_in_epsilon(159.19602008853155, worksheet.xi_f_l352, 0.001); end
  def test_xi_f_d353; assert_equal("Total", worksheet.xi_f_d353); end
  def test_xi_f_f353; assert_in_epsilon(524.723728181523, worksheet.xi_f_f353, 0.001); end
  def test_xi_f_h351; assert_in_epsilon(636.7840803541266, worksheet.xi_f_h351, 0.001); end
  def test_xi_f_h353; assert_in_epsilon(795.9801004426581, worksheet.xi_f_h353, 0.001); end
  def test_xi_f_i351; assert_in_epsilon(632.4962889077141, worksheet.xi_f_i351, 0.001); end
  def test_xi_f_i353; assert_in_epsilon(791.6923089962456, worksheet.xi_f_i353, 0.001); end
  def test_xi_f_l353; assert_in_epsilon(794.6451862115023, worksheet.xi_f_l353, 0.001); end
  def test_xi_f_c354; assert_equal("€ M delta", worksheet.xi_f_c354); end
  def test_xi_f_d354; assert_equal("Energy", worksheet.xi_f_d354); end
  def test_xi_f_g354; assert_in_epsilon(271.2563722611351, worksheet.xi_f_g354, 0.001); end
  def test_xi_f_h354; assert_in_epsilon(-159.19602008853155, worksheet.xi_f_h354, 0.001); end
  def test_xi_f_i354; assert_in_epsilon(-4.287791446412484, worksheet.xi_f_i354, 0.001); end
  def test_xi_f_j354; assert_in_epsilon(2.952877215256649, worksheet.xi_f_j354, 0.001); end
  def test_xi_f_k354; assert_in_delta(0, (worksheet.xi_f_k354||0), 0.001); end
  def test_xi_f_l354; assert_in_delta(0, (worksheet.xi_f_l354||0), 0.001); end
  def test_xi_f_d355; assert_equal("Capex", worksheet.xi_f_d355); end
  def test_xi_f_g355; assert_in_delta(0, (worksheet.xi_f_g355||0), 0.001); end
  def test_xi_f_h355; assert_in_epsilon(159.19602008853155, worksheet.xi_f_h355, 0.001); end
  def test_xi_f_i355; assert_in_delta(0, (worksheet.xi_f_i355||0), 0.001); end
  def test_xi_f_j355; assert_in_delta(0, (worksheet.xi_f_j355||0), 0.001); end
  def test_xi_f_k355; assert_in_delta(0, (worksheet.xi_f_k355||0), 0.001); end
  def test_xi_f_l355; assert_in_delta(0, (worksheet.xi_f_l355||0), 0.001); end
  def test_xi_f_d356; assert_equal("Total", worksheet.xi_f_d356); end
  def test_xi_f_g353; assert_in_epsilon(795.9801004426581, worksheet.xi_f_g353, 0.001); end
  def test_xi_f_g356; assert_in_epsilon(271.2563722611351, worksheet.xi_f_g356, 0.001); end
  def test_xi_f_h356; assert_in_delta(0, (worksheet.xi_f_h356||0), 0.001); end
  def test_xi_f_i356; assert_in_epsilon(-4.287791446412484, worksheet.xi_f_i356, 0.001); end
  def test_xi_f_j356; assert_in_epsilon(2.952877215256649, worksheet.xi_f_j356, 0.001); end
  def test_xi_f_k351; assert_in_epsilon(635.4491661229707, worksheet.xi_f_k351, 0.001); end
  def test_xi_f_k353; assert_in_epsilon(794.6451862115023, worksheet.xi_f_k353, 0.001); end
  def test_xi_f_j351; assert_in_epsilon(635.4491661229707, worksheet.xi_f_j351, 0.001); end
  def test_xi_f_j353; assert_in_epsilon(794.6451862115023, worksheet.xi_f_j353, 0.001); end
  def test_xi_f_k356; assert_in_delta(0, (worksheet.xi_f_k356||0), 0.001); end
  def test_xi_f_l356; assert_in_delta(0, (worksheet.xi_f_l356||0), 0.001); end
  def test_xi_f_h357; assert_in_delta(0, (worksheet.xi_f_h357||0), 0.001); end
  def test_xi_f_i357; assert_in_delta(-0.005386807338560311, worksheet.xi_f_i357, 0.001); end
  def test_xi_f_j357; assert_in_delta(0.003709737484158842, worksheet.xi_f_j357, 0.001); end
  def test_xi_f_b359; assert_equal("Cost abbatement curve", worksheet.xi_f_b359); end
  def test_xi_f_g360; assert_equal("2050 Orig", worksheet.xi_f_g360); end
  def test_xi_f_h360; assert_equal("Energy efficiency", worksheet.xi_f_h360); end
  def test_xi_f_i360; assert_equal("Fuel to Gas", worksheet.xi_f_i360); end
  def test_xi_f_j360; assert_equal("Switch to Biomass", worksheet.xi_f_j360); end
  def test_xi_f_k360; assert_equal("Black liquor gasification", worksheet.xi_f_k360); end
  def test_xi_f_l360; assert_equal("CCS", worksheet.xi_f_l360); end
  def test_xi_f_c361; assert_equal("€ M/ Mt CO2", worksheet.xi_f_c361); end
  def test_xi_f_e361; assert_equal("Energy", worksheet.xi_f_e361); end
  def test_xi_f_h345; assert_in_delta(-0.6544953015893884, worksheet.xi_f_h345, 0.001); end
  def test_xi_f_h361; assert_in_epsilon(243.2347790762394, worksheet.xi_f_h361, 0.001); end
  def test_xi_f_i345; assert_in_delta(-0.022107702712863553, worksheet.xi_f_i345, 0.001); end
  def test_xi_f_i361; assert_in_epsilon(193.95011332034952, worksheet.xi_f_i361, 0.001); end
  def test_xi_f_j345; assert_in_delta(0, (worksheet.xi_f_j345||0), 0.001); end
  def test_xi_f_j361; assert_in_delta(0, (worksheet.xi_f_j361||0), 0.001); end
  def test_xi_f_k345; assert_in_delta(0, (worksheet.xi_f_k345||0), 0.001); end
  def test_xi_f_k361; assert_in_delta(0, (worksheet.xi_f_k361||0), 0.001); end
  def test_xi_f_l345; assert_in_delta(0, (worksheet.xi_f_l345||0), 0.001); end
  def test_xi_f_l361; assert_in_delta(0, (worksheet.xi_f_l361||0), 0.001); end
  def test_xi_f_e362; assert_equal("Capex", worksheet.xi_f_e362); end
  def test_xi_f_h362; assert_in_epsilon(-243.2347790762394, worksheet.xi_f_h362, 0.001); end
  def test_xi_f_i362; assert_in_delta(0, (worksheet.xi_f_i362||0), 0.001); end
  def test_xi_f_j362; assert_in_delta(0, (worksheet.xi_f_j362||0), 0.001); end
  def test_xi_f_k362; assert_in_delta(0, (worksheet.xi_f_k362||0), 0.001); end
  def test_xi_f_l362; assert_in_delta(0, (worksheet.xi_f_l362||0), 0.001); end
  def test_xi_f_e363; assert_equal("Total", worksheet.xi_f_e363); end
  def test_xi_f_h363; assert_in_delta(0, (worksheet.xi_f_h363||0), 0.001); end
  def test_xi_f_i363; assert_in_epsilon(193.95011332034952, worksheet.xi_f_i363, 0.001); end
  def test_xi_f_j363; assert_in_delta(0, (worksheet.xi_f_j363||0), 0.001); end
  def test_xi_f_k363; assert_in_delta(0, (worksheet.xi_f_k363||0), 0.001); end
  def test_xi_f_l363; assert_in_delta(0, (worksheet.xi_f_l363||0), 0.001); end
  def test_xi_f_c365; assert_equal("€ M/ Mt CO2 Columns manually reordered (for graphs)", worksheet.xi_f_c365); end
  def test_xi_f_h366; assert_equal("Energy efficiency", worksheet.xi_f_h366); end
  def test_xi_f_i366; assert_equal("CCS", worksheet.xi_f_i366); end
  def test_xi_f_j366; assert_equal("Black liquor gasification", worksheet.xi_f_j366); end
  def test_xi_f_k366; assert_equal("Switch to Biomass", worksheet.xi_f_k366); end
  def test_xi_f_l366; assert_equal("Fuel to Gas", worksheet.xi_f_l366); end
  def test_xi_f_e367; assert_equal("tCO2e reduction", worksheet.xi_f_e367); end
  def test_xi_f_h367; assert_in_delta(0.6544953015893884, worksheet.xi_f_h367, 0.001); end
  def test_xi_f_i367; assert_in_delta(0, (worksheet.xi_f_i367||0), 0.001); end
  def test_xi_f_j367; assert_in_delta(0, (worksheet.xi_f_j367||0), 0.001); end
  def test_xi_f_k367; assert_in_delta(0, (worksheet.xi_f_k367||0), 0.001); end
  def test_xi_f_l367; assert_in_delta(0.022107702712863553, worksheet.xi_f_l367, 0.001); end
  def test_xi_f_e368; assert_equal("%tCO2e reduction", worksheet.xi_f_e368); end
  def test_xi_f_h368; assert_in_delta(0.7942824521958078, worksheet.xi_f_h368, 0.001); end
  def test_xi_f_i368; assert_in_delta(0, (worksheet.xi_f_i368||0), 0.001); end
  def test_xi_f_j368; assert_in_delta(0, (worksheet.xi_f_j368||0), 0.001); end
  def test_xi_f_k368; assert_in_delta(0, (worksheet.xi_f_k368||0), 0.001); end
  def test_xi_f_l368; assert_in_delta(0.02682946734765969, worksheet.xi_f_l368, 0.001); end
  def test_xi_f_m368; assert_in_delta(0.8211119195434675, worksheet.xi_f_m368, 0.001); end
  def test_xi_f_n368; assert_equal("if you add the 2010-2050 % increase, you reach the total % reduction vs 2010", worksheet.xi_f_n368); end
  def test_xi_f_o368; assert_in_epsilon(-2.1503003414355746, worksheet.xi_f_o368, 0.001); end
  def test_xi_f_e369; assert_equal("MEUR/tCO2e", worksheet.xi_f_e369); end
  def test_xi_f_h369; assert_in_delta(0, (worksheet.xi_f_h369||0), 0.001); end
  def test_xi_f_i369; assert_in_delta(0, (worksheet.xi_f_i369||0), 0.001); end
  def test_xi_f_j369; assert_in_delta(0, (worksheet.xi_f_j369||0), 0.001); end
  def test_xi_f_k369; assert_in_delta(0, (worksheet.xi_f_k369||0), 0.001); end
  def test_xi_f_l369; assert_in_epsilon(-193.95011332034952, worksheet.xi_f_l369, 0.001); end
  def test_output_ad277; assert_in_epsilon(29.776881402030337, worksheet.output_ad277, 0.001); end
  def test_output_ad278; assert_in_epsilon(7.980234547383553, worksheet.output_ad278, 0.001); end
  def test_output_ad279; assert_in_epsilon(109.04475171054011, worksheet.output_ad279, 0.001); end
  def test_output_ac277; assert_in_epsilon(32.52740886301405, worksheet.output_ac277, 0.001); end
  def test_output_ac278; assert_in_epsilon(8.36744876482892, worksheet.output_ac278, 0.001); end
  def test_output_ac279; assert_in_epsilon(114.28616266127325, worksheet.output_ac279, 0.001); end
  def test_output_ae277; assert_in_epsilon(26.205963966101013, worksheet.output_ae277, 0.001); end
  def test_output_ae278; assert_in_epsilon(6.59903887872593, worksheet.output_ae278, 0.001); end
  def test_output_ae279; assert_in_epsilon(96.82543046974374, worksheet.output_ae279, 0.001); end
  def test_output_af277; assert_in_epsilon(22.656066145375338, worksheet.output_af277, 0.001); end
  def test_output_af278; assert_in_epsilon(5.29780439763678, worksheet.output_af278, 0.001); end
  def test_output_af279; assert_in_epsilon(84.80528569037756, worksheet.output_af279, 0.001); end
  def test_output_ag277; assert_in_epsilon(18.568076383773153, worksheet.output_ag277, 0.001); end
  def test_output_ag278; assert_in_epsilon(4.172612942627228, worksheet.output_ag278, 0.001); end
  def test_output_ag279; assert_in_epsilon(72.07939569400533, worksheet.output_ag279, 0.001); end
  def test_output_ah277; assert_in_epsilon(14.718188950901547, worksheet.output_ah277, 0.001); end
  def test_output_ah278; assert_in_epsilon(3.185854878877037, worksheet.output_ah278, 0.001); end
  def test_output_ah279; assert_in_epsilon(60.84156324471134, worksheet.output_ah279, 0.001); end
  def test_output_ai277; assert_in_epsilon(11.05459485465471, worksheet.output_ai277, 0.001); end
  def test_output_ai278; assert_in_epsilon(2.3457644091876477, worksheet.output_ai278, 0.001); end
  def test_output_ai279; assert_in_epsilon(51.977454572667526, worksheet.output_ai279, 0.001); end
  def test_output_aj277; assert_in_epsilon(7.50925693314945, worksheet.output_aj277, 0.001); end
  def test_output_aj278; assert_in_epsilon(1.6338047873057513, worksheet.output_aj278, 0.001); end
  def test_output_aj279; assert_in_epsilon(43.91684637537794, worksheet.output_aj279, 0.001); end
  def test_control_h47; assert_in_epsilon(30, worksheet.control_h47, 0.001); end
  def test_control_h6; assert_in_epsilon(30, worksheet.control_h6, 0.001); end
  def test_control_h8; assert_in_epsilon(30, worksheet.control_h8, 0.001); end
  def test_control_h12; assert_in_epsilon(30, worksheet.control_h12, 0.001); end
  def test_control_h13; assert_in_epsilon(30, worksheet.control_h13, 0.001); end
  def test_control_h15; assert_in_epsilon(30, worksheet.control_h15, 0.001); end
  def test_xi_a_f477; assert_in_delta(0, (worksheet.xi_a_f477||0), 0.001); end
  def test_xi_b_ba224; assert_in_epsilon(4.258013889251608, worksheet.xi_b_ba224, 0.001); end
  def test_xi_b_ba211; assert_in_epsilon(4.258013889251608, worksheet.xi_b_ba211, 0.001); end
  def test_xi_b_f266; assert_in_delta(0, (worksheet.xi_b_f266||0), 0.001); end
  def test_control_h39; assert_in_epsilon(30, worksheet.control_h39, 0.001); end
  def test_xi_f_az212; assert_in_epsilon(3.272476507946944, worksheet.xi_f_az212, 0.001); end
  def test_xi_f_f277; assert_in_delta(0, (worksheet.xi_f_f277||0), 0.001); end
  def test_control_h49; assert_in_epsilon(30, worksheet.control_h49, 0.001); end
  def test_control_h51; assert_in_epsilon(30, worksheet.control_h51, 0.001); end
  def test_control_h53; assert_in_epsilon(30, worksheet.control_h53, 0.001); end
  def test_xi_f_ba212; assert_in_epsilon(3.1822052046545974, worksheet.xi_f_ba212, 0.001); end
  def test_xi_f_g277; assert_in_delta(0, (worksheet.xi_f_g277||0), 0.001); end
  def test_xi_f_bb212; assert_in_epsilon(3.0919530265834263, worksheet.xi_f_bb212, 0.001); end
  def test_xi_f_h277; assert_in_delta(0, (worksheet.xi_f_h277||0), 0.001); end
  def test_xi_f_bc212; assert_in_epsilon(3.0014787385891744, worksheet.xi_f_bc212, 0.001); end
  def test_xi_f_i277; assert_in_delta(0, (worksheet.xi_f_i277||0), 0.001); end
  def test_xi_f_bd212; assert_in_epsilon(2.920357691600278, worksheet.xi_f_bd212, 0.001); end
  def test_xi_f_j277; assert_in_delta(0, (worksheet.xi_f_j277||0), 0.001); end
  def test_xi_f_be212; assert_in_epsilon(2.8392366446113813, worksheet.xi_f_be212, 0.001); end
  def test_xi_f_k277; assert_in_delta(0, (worksheet.xi_f_k277||0), 0.001); end
  def test_xi_f_bf212; assert_in_epsilon(2.758115597622485, worksheet.xi_f_bf212, 0.001); end
  def test_xi_f_l277; assert_in_delta(0, (worksheet.xi_f_l277||0), 0.001); end
  def test_xi_f_bg212; assert_in_epsilon(2.676994550633588, worksheet.xi_f_bg212, 0.001); end
  def test_xi_f_m277; assert_in_delta(0, (worksheet.xi_f_m277||0), 0.001); end
  def test_xi_f_n277; assert_in_delta(0, (worksheet.xi_f_n277||0), 0.001); end
  def test_control_h16; assert_in_epsilon(30, worksheet.control_h16, 0.001); end
  def test_control_aa31; assert_in_epsilon(10, worksheet.control_aa31, 0.001); end
end
