# coding: utf-8
# Test for belgium_2050_model
require 'rubygems'
gem 'minitest'
require 'minitest/autorun'
require_relative '../lib/belgium_2050_model'

class TestBelgium2050Model < Minitest::Test
  def self.runnable_methods
    puts 'Overriding minitest to run tests in a defined order'
    methods = methods_matching(/^test_/)
  end
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; Belgium2050ModelShim.new end
  def test_control_b1; assert_equal("OPEERA", worksheet.control_b1); end
  def test_control_f1; assert_equal("BELGIUM", worksheet.control_f1); end
  def test_control_ar1; assert_equal("Reference", worksheet.control_ar1); end
  def test_control_as1; assert_equal("Core", worksheet.control_as1); end
  def test_control_at1; assert_equal("Behavior", worksheet.control_at1); end
  def test_control_au1; assert_equal("Technology", worksheet.control_au1); end
  def test_control_av1; assert_equal("-95% GHG", worksheet.control_av1); end
  def test_control_aw1; assert_equal("EU integration", worksheet.control_aw1); end
  def test_control_ax1; assert_equal("Sensitivity", worksheet.control_ax1); end
  def test_control_ay1; assert_equal("All levers at level 2", worksheet.control_ay1); end
  def test_control_az1; assert_equal("All levers at level 3", worksheet.control_az1); end
  def test_control_ba1; assert_equal("All levers at level 3", worksheet.control_ba1); end
  def test_control_b2; assert_equal("Open-source Prospective Energy & Emissions Roadmap Analysis", worksheet.control_b2); end
  def test_control_j3; assert_in_delta(1, worksheet.control_j3, 0.001); end
  def test_control_k3; assert_in_epsilon(2, worksheet.control_k3, 0.001); end
  def test_control_l3; assert_in_epsilon(3, worksheet.control_l3, 0.001); end
  def test_control_m3; assert_in_epsilon(4, worksheet.control_m3, 0.001); end
  def test_control_p3; assert_equal("Limits", worksheet.control_p3); end
  def test_control_q3; assert_equal("Descriptions", worksheet.control_q3); end
  def test_control_ad3; assert_in_delta(1, worksheet.control_ad3, 0.001); end
  def test_control_ae3; assert_in_epsilon(2, worksheet.control_ae3, 0.001); end
  def test_control_af3; assert_in_epsilon(3, worksheet.control_af3, 0.001); end
  def test_control_ag3; assert_in_epsilon(4, worksheet.control_ag3, 0.001); end
  def test_control_aj3; assert_equal("Limits", worksheet.control_aj3); end
  def test_control_ak3; assert_equal("Descriptions", worksheet.control_ak3); end
  def test_control_bg3; assert_in_epsilon(2, worksheet.control_bg3, 0.001); end
  def test_control_bh3; assert_equal("Scenarios", worksheet.control_bh3); end
  def test_control_a4; assert_in_delta(0, (worksheet.control_a4||0), 0.001); end
  def test_control_b4; assert_equal("Demand", worksheet.control_b4); end
  def test_control_c4; assert_equal("Demographics", worksheet.control_c4); end
  def test_control_f4; assert_equal("Demographic evolution", worksheet.control_f4); end
  def test_control_p4; assert_in_epsilon(30, worksheet.control_p4, 0.001); end
  def test_control_v4; assert_equal("Supply", worksheet.control_v4); end
  def test_control_w4; assert_equal("Energy prices", worksheet.control_w4); end
  def test_control_y4; assert_equal("Energy prices trajectories", worksheet.control_y4); end
  def test_control_aj4; assert_in_epsilon(40, worksheet.control_aj4, 0.001); end
  def test_control_ak4; assert_equal("Level 1 is based on the IEA 2DS, their Scenario which limits the increase in average global temperatures to 2°C, and where fossil fuel prices stay lowest due to lower global energy demand: - Oil prices increase from ~80 USD/bbl in 2010 to almost 100 in 2030, to come down again to ~90 in 2050;- Gas prices increase from ~7 USD/mmBTU to ~10 in 2030, to come down again to ~8 in 2050;- Coal prices come down from ~100 USD/tonne to ~75 in 2030, and 60 in 2050;- Biomass prices reach highest price level because strong decarbonization policies lead to biomass demand increases. Biomass price goes from 88 $/boe in 2020 to 155 in 2050", worksheet.control_ak4); end
  def test_control_al4; assert_equal("Level 2 is based on the IEA 4DS, their Scenario where the increase in average global temperatures reaches 4°C: - Oil prices increase from ~80 USD/bbl in 2010 to ~115 in 2030 and stabilize at ~120 in 2050;- Gas prices increase from ~7 USD/mmBTU to ~12 in 2030 and stabilize there up to 2050;- Coal prices increase from ~100 USD/tonne to ~110 in 2030, and stabilize there up to 2050;- Biomass follows a linear interpolation between level 1 and level 4", worksheet.control_al4); end
  def test_control_am4; assert_equal("Level 3 is based on the IEA 6DS, which effectively serves as their baseline scenario, and reflects a world where little is done to curb emissions and where the increase in average global temperatures reaches 6°C. It is line with the WWF 2050 Base case scenario:- Oil prices increase from ~80 USD/bbl in 2010 to ~135 in 2030 and stabilize at ~150 in 2050;- Gas prices increase from ~7 USD/mmBTU to ~13 in 2030 and further to 14 by 2050;- Coal prices increase from ~100 USD/tonne to ~115 in 2030, and further to 125 in 2050;- Biomass follows a linear interpolation between level 1 and level 4", worksheet.control_am4); end
  def test_control_an4; assert_equal("Level 4 is what we call a \"Highest energy demand scenario\". It reflects a world where fossil fuel demand increases the highest, with oil prices being most affected: - Oil prices increase from ~80 USD/bbl in 2010 to ~170 in 2030 and stabilize at ~200 in 2050;- Gas prices increase from ~7 USD/mmBTU to ~16 in 2030 and further to 20 by 2050;- Coal prices increase from ~100 USD/tonne to ~130 in 2030, and further to 150 in 2050;- Biomass prices decrease to lowest price level as Weak decarbonization policies lead biomass demand not to increase significantly. Biomass price goes from 54 $/boe in 2020 to 78 in 2050", worksheet.control_an4); end
  def test_control_ao4; assert_equal(" ", worksheet.control_ao4); end
  def test_control_ap4; assert_in_delta(0, (worksheet.control_ap4||0), 0.001); end
  def test_control_aq4; assert_equal("Demographic evolution", worksheet.control_aq4); end
  def test_control_ar4; assert_in_epsilon(20, worksheet.control_ar4, 0.001); end
  def test_control_as4; assert_in_epsilon(20, worksheet.control_as4, 0.001); end
  def test_control_at4; assert_in_epsilon(20, worksheet.control_at4, 0.001); end
  def test_control_au4; assert_in_epsilon(20, worksheet.control_au4, 0.001); end
  def test_control_av4; assert_in_epsilon(20, worksheet.control_av4, 0.001); end
  def test_control_aw4; assert_in_epsilon(20, worksheet.control_aw4, 0.001); end
  def test_control_ax4; assert_in_epsilon(20, worksheet.control_ax4, 0.001); end
  def test_control_ay4; assert_in_epsilon(20, worksheet.control_ay4, 0.001); end
  def test_control_az4; assert_in_epsilon(20, worksheet.control_az4, 0.001); end
  def test_control_ba4; assert_in_epsilon(20, worksheet.control_ba4, 0.001); end
  def test_control_bh4; assert_equal("Reference", worksheet.control_bh4); end
  def test_control_c5; assert_equal("Transport", worksheet.control_c5); end
  def test_control_d5; assert_equal("Domestic", worksheet.control_d5); end
  def test_control_e5; assert_equal("XII.a", worksheet.control_e5); end
  def test_control_f5; assert_equal("Domestic passenger transport", worksheet.control_f5); end
  def test_control_w5; assert_equal("Electricity", worksheet.control_w5); end
  def test_control_x5; assert_equal("Generation", worksheet.control_x5); end
  def test_control_y5; assert_equal("III.a.1", worksheet.control_y5); end
  def test_control_z5; assert_equal("Onshore wind", worksheet.control_z5); end
  def test_control_aj5; assert_in_epsilon(40, worksheet.control_aj5, 0.001); end
  def test_control_ak5; assert_equal("Capacity increases up to ~7 GW in 2050, doubling the 3 GW capacity planned in 2020 in the Belgian NREAP (this is a little lower than the 100% RES project figures which are optimized based on costs).This requires installing 260 MW, or ~100 new turbines per year", worksheet.control_ak5); end
  def test_control_al5; assert_equal("Capacity increases up to ~8,5 GW in 2050.This requires installing on average 300 MW, or ~120 new turbines per year", worksheet.control_al5); end
  def test_control_am5; assert_equal("Capacity increases up to ~10,5 GW in 2050.This requires installing on average 380 MW, or ~150 new turbines per year", worksheet.control_am5); end
  def test_control_an5; assert_equal("Capacity increases up to maximum technical potential of ~13 GW in 2050.This requires installing on average 460 MW, or ~180 new turbines per year", worksheet.control_an5); end
  def test_control_ao5; assert_equal(" ", worksheet.control_ao5); end
  def test_control_ap5; assert_equal("XII.a", worksheet.control_ap5); end
  def test_control_aq5; assert_equal("Domestic passenger transport", worksheet.control_aq5); end
  def test_control_bh5; assert_equal("Core", worksheet.control_bh5); end
  def test_control_bl5; assert_equal("Final energy demand", worksheet.control_bl5); end
  def test_control_bn5; assert_in_epsilon(2010, worksheet.control_bn5, 0.001); end
  def test_control_bo5; assert_equal("Ref", worksheet.control_bo5); end
  def test_control_bp5; assert_equal("Scenario", worksheet.control_bp5); end
  def test_control_f6; assert_equal("(i) Overall travel demand per person", worksheet.control_f6); end
  def test_control_j6; assert_equal(" ", worksheet.control_j6); end
  def test_control_k6; assert_equal(" ", worksheet.control_k6); end
  def test_control_m6; assert_equal(" ", worksheet.control_m6); end
  def test_control_p6; assert_in_epsilon(40, worksheet.control_p6, 0.001); end
  def test_control_q6; assert_equal("Mobility demand per person increases by ~20%; occupation levels of cars decrease by ~5%; occupation levels of buses and trains increase by ~10%", worksheet.control_q6); end
  def test_control_r6; assert_equal("Mobility demand per person increases by ~12%; occupation levels of cars increase by ~5% occupation levels of buses increase by ~20% and trains by ~15%", worksheet.control_r6); end
  def test_control_s6; assert_equal("Mobility demand per person decreases by ~10%; occupation levels of cars increase by ~10%; occupation levels of buses increase by ~33% and trains by ~25%", worksheet.control_s6); end
  def test_control_t6; assert_equal("Mobility demand per person decreases by ~20%; occupation levels of cars increase by ~15%; occupation levels of buses increase by ~50% and trains by ~33%", worksheet.control_t6); end
  def test_control_u6; assert_equal(" ", worksheet.control_u6); end
  def test_control_y6; assert_equal("III.a.2", worksheet.control_y6); end
  def test_control_z6; assert_equal("Offshore wind", worksheet.control_z6); end
  def test_control_aj6; assert_in_epsilon(40, worksheet.control_aj6, 0.001); end
  def test_control_ak6; assert_equal("In line with the 100% RES project reference scenario, capacity increases up to 2 GW in 2020 (the NREAP goes to 1,3 GW) and ~4 GW in 2050.This requires installing 120 MW, or ~20 new turbines per year", worksheet.control_ak6); end
  def test_control_al6; assert_equal("Capacity increases up to ~7 GW in 2050.This requires installing on average 250 MW, or ~40 new turbines per year", worksheet.control_al6); end
  def test_control_am6; assert_equal("Capacity increases up to ~10,6 GW in 2050.This requires installing on average 380 MW, or ~65 new turbines per year", worksheet.control_am6); end
  def test_control_an6; assert_equal("Capacity increases up to maximum technical potential of ~16,5 GW in 2050.This requires installing on average 600 MW, or ~100 new turbines per year", worksheet.control_an6); end
  def test_control_ao6; assert_equal(" ", worksheet.control_ao6); end
  def test_control_ap6; assert_in_delta(0, (worksheet.control_ap6||0), 0.001); end
  def test_control_aq6; assert_equal("(i) Overall travel demand per person", worksheet.control_aq6); end
  def test_control_ar6; assert_in_epsilon(10, worksheet.control_ar6, 0.001); end
  def test_control_as6; assert_in_epsilon(30, worksheet.control_as6, 0.001); end
  def test_control_at6; assert_in_epsilon(40, worksheet.control_at6, 0.001); end
  def test_control_au6; assert_in_epsilon(20, worksheet.control_au6, 0.001); end
  def test_control_av6; assert_in_epsilon(40, worksheet.control_av6, 0.001); end
  def test_control_aw6; assert_in_epsilon(10, worksheet.control_aw6, 0.001); end
  def test_control_ax6; assert_in_epsilon(10, worksheet.control_ax6, 0.001); end
  def test_control_ay6; assert_in_epsilon(20, worksheet.control_ay6, 0.001); end
  def test_control_az6; assert_in_epsilon(30, worksheet.control_az6, 0.001); end
  def test_control_ba6; assert_in_epsilon(40, worksheet.control_ba6, 0.001); end
  def test_control_bh6; assert_equal("Behavior", worksheet.control_bh6); end
  def test_control_bm6; assert_equal("Road transport", worksheet.control_bm6); end
  def test_control_f7; assert_equal("(ii) Modal shift", worksheet.control_f7); end
  def test_control_h7; assert_in_epsilon(40, worksheet.control_h7, 0.001); end
  def test_control_p7; assert_in_epsilon(40, worksheet.control_p7, 0.001); end
  def test_control_q7; assert_equal("Shares of the different modes in 2050 remain comparable to 2010 levels(Walking/Biking: ~3%, Car: ~77%, Bus: ~13%, Rail ~7%)", worksheet.control_q7); end
  def test_control_r7; assert_equal("Share of walking and cycling increases to ~4%; Share of bus/coaches increases to ~17%; Share of rail increases to ~9%; Share of cars decreases to ~70%", worksheet.control_r7); end
  def test_control_s7; assert_equal("Share of walking and cycling increases to ~4,5%; Share of bus/coaches increases to ~20,5%; Share of rail increases to ~10%; Share of cars decreases to ~65%", worksheet.control_s7); end
  def test_control_t7; assert_equal("Share of walking and cycling increases to ~6%; Share of bus/coaches increases to ~25%; Share of rail increases to ~13%; Share of cars decreases to ~55%", worksheet.control_t7); end
  def test_control_u7; assert_equal(" ", worksheet.control_u7); end
  def test_control_y7; assert_equal("IV.a", worksheet.control_y7); end
  def test_control_z7; assert_equal("Solar PV", worksheet.control_z7); end
  def test_control_aj7; assert_in_epsilon(40, worksheet.control_aj7, 0.001); end
  def test_control_ak7; assert_equal("In line with the 100% RES project reference scenario, Solar PV capacity reaches 2,5 GW in 2020 (higher than the 1,3 of the NREAP which has already been surpassed in 2012) and ~7 GW in 2050, or ~9% of 2010 Belgian electricity production. This requires annual growth to decrease to +~150 MW/year up to 2020, and then slowly increases back to +~400 MW/year in 2050 (average of 250 MW/year over the 40 years) ", worksheet.control_ak7); end
  def test_control_al7; assert_equal("Annual growth decreases to +~200 MW/year up to 2020, and then slowly increases to +~1500 MW/year in 2050 (average of 600 MW/year over the 40 years). Solar PV capacity reaches ~21 GW in 2050, or ~28% of 2010 Belgian electricity production", worksheet.control_al7); end
  def test_control_am7; assert_equal("Annual growth decreases to +~300 MW/year up to 2020, and then slowly increases to +~2700 MW/year in 2050 (average of 1000 MW/year over the 40 years). Solar PV capacity reaches ~35 GW in 2050, or ~47% of 2010 Belgian electricity production", worksheet.control_am7); end
  def test_control_an7; assert_equal("Annual growth stays stable at ~430 MW/year up to 2020, and then slowly increases to +~3800 MW/year in 2050 (average of 1400 MW/year over the 40 years). Solar PV capacity reaches ~50 GW in 2050, or ~65% of 2010 Belgian electricity production", worksheet.control_an7); end
  def test_control_ao7; assert_equal(" ", worksheet.control_ao7); end
  def test_control_aq7; assert_equal("(ii) Modal shift", worksheet.control_aq7); end
  def test_control_ar7; assert_in_epsilon(10, worksheet.control_ar7, 0.001); end
  def test_control_as7; assert_in_epsilon(30, worksheet.control_as7, 0.001); end
  def test_control_at7; assert_in_epsilon(40, worksheet.control_at7, 0.001); end
  def test_control_au7; assert_in_epsilon(20, worksheet.control_au7, 0.001); end
  def test_control_av7; assert_in_epsilon(40, worksheet.control_av7, 0.001); end
  def test_control_aw7; assert_in_epsilon(10, worksheet.control_aw7, 0.001); end
  def test_control_ax7; assert_in_epsilon(10, worksheet.control_ax7, 0.001); end
  def test_control_ay7; assert_in_epsilon(20, worksheet.control_ay7, 0.001); end
  def test_control_az7; assert_in_epsilon(30, worksheet.control_az7, 0.001); end
  def test_control_ba7; assert_in_epsilon(40, worksheet.control_ba7, 0.001); end
  def test_control_bh7; assert_equal("Technology", worksheet.control_bh7); end
  def test_control_f8; assert_equal("(iii) Energy efficiency", worksheet.control_f8); end
  def test_control_p8; assert_in_epsilon(40, worksheet.control_p8, 0.001); end
  def test_control_q8; assert_equal("Fuel combustion vehicle fleet efficiency improves by ~19% (vehicles require 19% less energy per km),plug-in hybrids and electric cars efficiency improves by ~30% more efficient;Fuel combustion, hybrid and electric buses efficiency improves by ~15%;Rail transport efficiency improves by ~10%", worksheet.control_q8); end
  def test_control_r8; assert_equal("Fuel combustion vehicle fleet efficiency improves by ~40% (vehicles require 40% less energy per km),plug-in hybrids efficiency improves by 40-45% and electric cars efficiency improves by ~45%;Fuel combustion, hybrid and electric buses efficiency improves by ~20%;Rail transport efficiency improves by ~20%", worksheet.control_r8); end
  def test_control_s8; assert_equal("Fuel combustion vehicle fleet efficiency improves by ~45% (vehicles require 45% less energy per km),plug-in hybrids efficiency improves by 45-50% and electric cars efficiency improves by ~50%;Fuel combustion, hybrid and electric buses efficiency improves by ~25%;Rail transport's efficiency improves by ~30% for diesel and by ~25% for electric traction", worksheet.control_s8); end
  def test_control_t8; assert_equal("Fuel combustion vehicle fleet efficiency improves by  ~50% (vehicles require 50% less energy per km),plug-in hybrids efficiency improves by 50-55% and electric cars efficiency improves by ~55%;Fuel combustion, hybrid and electric buses efficiency improves by ~30%;Rail transport's efficiency improves by ~40%for diesel and by ~30% for electric traction", worksheet.control_t8); end
  def test_control_u8; assert_equal(" ", worksheet.control_u8); end
  def test_control_y8; assert_equal("III.b", worksheet.control_y8); end
  def test_control_z8; assert_equal("Hydroelectric power stations", worksheet.control_z8); end
  def test_control_aj8; assert_in_epsilon(40, worksheet.control_aj8, 0.001); end
  def test_control_ak8; assert_equal("110 MW, or no new installations by 2050", worksheet.control_ak8); end
  def test_control_al8; assert_equal("Gradual increase of 10 MW by 2050, reaching 120 MW", worksheet.control_al8); end
  def test_control_am8; assert_equal("Gradual increase of 30 MW up to 2050, reaching 140 MW", worksheet.control_am8); end
  def test_control_an8; assert_equal("Gradual increase of 40 MW reaching 150 MW by 2050", worksheet.control_an8); end
  def test_control_ao8; assert_equal(" ", worksheet.control_ao8); end
  def test_control_ap8; assert_in_delta(0, (worksheet.control_ap8||0), 0.001); end
  def test_control_aq8; assert_equal("(iii) Energy efficiency", worksheet.control_aq8); end
  def test_control_ar8; assert_in_epsilon(10, worksheet.control_ar8, 0.001); end
  def test_control_as8; assert_in_epsilon(30, worksheet.control_as8, 0.001); end
  def test_control_at8; assert_in_epsilon(35, worksheet.control_at8, 0.001); end
  def test_control_au8; assert_in_epsilon(30, worksheet.control_au8, 0.001); end
  def test_control_av8; assert_in_epsilon(40, worksheet.control_av8, 0.001); end
  def test_control_aw8; assert_in_epsilon(40, worksheet.control_aw8, 0.001); end
  def test_control_ax8; assert_in_epsilon(40, worksheet.control_ax8, 0.001); end
  def test_control_ay8; assert_in_epsilon(20, worksheet.control_ay8, 0.001); end
  def test_control_az8; assert_in_epsilon(30, worksheet.control_az8, 0.001); end
  def test_control_ba8; assert_in_epsilon(40, worksheet.control_ba8, 0.001); end
  def test_control_bh8; assert_equal("-95% GHG", worksheet.control_bh8); end
  def test_control_bm8; assert_equal("Rail transport", worksheet.control_bm8); end
  def test_control_f9; assert_equal("(iv) Technology mix / electrification", worksheet.control_f9); end
  def test_control_h9; assert_in_epsilon(40, worksheet.control_h9, 0.001); end
  def test_control_p9; assert_in_epsilon(40, worksheet.control_p9, 0.001); end
  def test_control_q9; assert_equal("2050 Transport system electrification is with:- 20% of cars to plug-in hybrids (20% of buses) and- 5% to battery electric (10% of buses)", worksheet.control_q9); end
  def test_control_r9; assert_equal("2050 Transport system electrification is with:- 55% of cars to plug-in hybrids (30% of buses) and- 10% battery electric by 2050 (20% of buses)", worksheet.control_r9); end
  def test_control_s9; assert_equal("2050 Transport system electrification is with:- 32% of cars are plug-in hybrids (40% of buses) and- 39% battery electric (22% of buses)  and- 9% fuel cell (3% of buses) vehicles", worksheet.control_s9); end
  def test_control_t9; assert_equal("2050 Transport system electrification is with:- 80% of cars are battery electric (30% of buses),- 20% fuel cell (5% of buses)  electric by 2050,- 45% of buses are (plug-in) hybrids", worksheet.control_t9); end
  def test_control_u9; assert_equal(" ", worksheet.control_u9); end
  def test_control_y9; assert_equal("III.d", worksheet.control_y9); end
  def test_control_z9; assert_equal("Geothermal electricity", worksheet.control_z9); end
  def test_control_aj9; assert_in_epsilon(40, worksheet.control_aj9, 0.001); end
  def test_control_ak9; assert_equal("Limited developments in conventional geothermal production due to limited potential. No enhanced production take place", worksheet.control_ak9); end
  def test_control_al9; assert_equal("Limited developments in conventional geothermal production due to limited potential.Gradual implementation of enhanced geothermal, with 60 MW in 2025, increasing up to 1 GW of installed capacity in 2050", worksheet.control_al9); end
  def test_control_am9; assert_equal("Limited developments in conventional geothermal production due to limited potential.Gradual implementation of enhanced geothermal, with 200 MW in 2025, rapidly ramping up to reach 3 GW of installed capacity in 2050", worksheet.control_am9); end
  def test_control_an9; assert_equal("Limited developments in conventional geothermal production due to limited potential. Gradual implementation of enhanced geothermal, with 500 MW in 2025, rapidly ramping up to reach 6 GW of installed capacity in 2050", worksheet.control_an9); end
  def test_control_ao9; assert_equal(" ", worksheet.control_ao9); end
  def test_control_ap9; assert_in_delta(0, (worksheet.control_ap9||0), 0.001); end
  def test_control_aq9; assert_equal("(iv) Technology mix / electrification", worksheet.control_aq9); end
  def test_control_ar9; assert_in_epsilon(10, worksheet.control_ar9, 0.001); end
  def test_control_as9; assert_in_epsilon(30, worksheet.control_as9, 0.001); end
  def test_control_at9; assert_in_epsilon(30, worksheet.control_at9, 0.001); end
  def test_control_au9; assert_in_epsilon(35, worksheet.control_au9, 0.001); end
  def test_control_av9; assert_in_epsilon(40, worksheet.control_av9, 0.001); end
  def test_control_aw9; assert_in_epsilon(40, worksheet.control_aw9, 0.001); end
  def test_control_ax9; assert_in_epsilon(40, worksheet.control_ax9, 0.001); end
  def test_control_ay9; assert_in_epsilon(20, worksheet.control_ay9, 0.001); end
  def test_control_az9; assert_in_epsilon(30, worksheet.control_az9, 0.001); end
  def test_control_ba9; assert_in_epsilon(40, worksheet.control_ba9, 0.001); end
  def test_control_bh9; assert_equal("EU integration", worksheet.control_bh9); end
  def test_control_bm9; assert_equal("Industry", worksheet.control_bm9); end
  def test_control_e10; assert_equal("XII.b", worksheet.control_e10); end
  def test_control_f10; assert_equal("Domestic freight", worksheet.control_f10); end
  def test_control_u10; assert_equal(" ", worksheet.control_u10); end
  def test_control_y10; assert_equal("IV.c", worksheet.control_y10); end
  def test_control_z10; assert_equal("Small-scale wind  [UNUSED]", worksheet.control_z10); end
  def test_control_aj10; assert_in_epsilon(10, worksheet.control_aj10, 0.001); end
  def test_control_ak10; assert_in_delta(0, (worksheet.control_ak10||0), 0.001); end
  def test_control_al10; assert_in_delta(0, (worksheet.control_al10||0), 0.001); end
  def test_control_am10; assert_in_delta(0, (worksheet.control_am10||0), 0.001); end
  def test_control_an10; assert_in_delta(0, (worksheet.control_an10||0), 0.001); end
  def test_control_ao10; assert_equal(" ", worksheet.control_ao10); end
  def test_control_ap10; assert_equal("XII.b", worksheet.control_ap10); end
  def test_control_aq10; assert_equal("Domestic freight", worksheet.control_aq10); end
  def test_control_bh10; assert_equal("Sensitivity", worksheet.control_bh10); end
  def test_control_bm10; assert_equal("Buildings", worksheet.control_bm10); end
  def test_control_f11; assert_equal("(i) Demand for freight transport", worksheet.control_f11); end
  def test_control_h11; assert_in_epsilon(40, worksheet.control_h11, 0.001); end
  def test_control_j11; assert_equal(" ", worksheet.control_j11); end
  def test_control_k11; assert_equal(" ", worksheet.control_k11); end
  def test_control_m11; assert_equal(" ", worksheet.control_m11); end
  def test_control_p11; assert_in_epsilon(40, worksheet.control_p11, 0.001); end
  def test_control_q11; assert_equal("Transported freight volumes increase by ~60% by 2050 (from 69 billion tonne-km in 2010).The coupling between economic growth and transport growth is still strong (~0,85%/%)", worksheet.control_q11); end
  def test_control_r11; assert_equal("Transported freight volumes increase by ~45% between 2010 and 2050", worksheet.control_r11); end
  def test_control_s11; assert_equal("Transported freight volumes increase by ~20% between 2010 and 2050", worksheet.control_s11); end
  def test_control_t11; assert_equal("Transported freight volumes increase by ~10% between 2010 and 2050.The decoupling between economic growth and transport growth is almost complete (0,10%/%)", worksheet.control_t11); end
  def test_control_u11; assert_equal(" ", worksheet.control_u11); end
  def test_control_y11; assert_equal("III.c", worksheet.control_y11); end
  def test_control_z11; assert_equal("Tidal and Wave [UNUSED]", worksheet.control_z11); end
  def test_control_aj11; assert_in_epsilon(10, worksheet.control_aj11, 0.001); end
  def test_control_ak11; assert_in_delta(0, (worksheet.control_ak11||0), 0.001); end
  def test_control_al11; assert_in_delta(0, (worksheet.control_al11||0), 0.001); end
  def test_control_am11; assert_in_delta(0, (worksheet.control_am11||0), 0.001); end
  def test_control_an11; assert_in_delta(0, (worksheet.control_an11||0), 0.001); end
  def test_control_ao11; assert_equal(" ", worksheet.control_ao11); end
  def test_control_aq11; assert_equal("(i) Demand for freight transport", worksheet.control_aq11); end
  def test_control_ar11; assert_in_epsilon(10, worksheet.control_ar11, 0.001); end
  def test_control_as11; assert_in_epsilon(30, worksheet.control_as11, 0.001); end
  def test_control_at11; assert_in_epsilon(40, worksheet.control_at11, 0.001); end
  def test_control_au11; assert_in_epsilon(20, worksheet.control_au11, 0.001); end
  def test_control_av11; assert_in_epsilon(40, worksheet.control_av11, 0.001); end
  def test_control_aw11; assert_in_epsilon(10, worksheet.control_aw11, 0.001); end
  def test_control_ax11; assert_in_epsilon(10, worksheet.control_ax11, 0.001); end
  def test_control_ay11; assert_in_epsilon(20, worksheet.control_ay11, 0.001); end
  def test_control_az11; assert_in_epsilon(30, worksheet.control_az11, 0.001); end
  def test_control_ba11; assert_in_epsilon(40, worksheet.control_ba11, 0.001); end
  def test_control_bh11; assert_equal("All levers at level 2", worksheet.control_bh11); end
  def test_control_f12; assert_equal("(ii) Modal shift", worksheet.control_f12); end
  def test_control_j12; assert_equal(" ", worksheet.control_j12); end
  def test_control_k12; assert_equal(" ", worksheet.control_k12); end
  def test_control_m12; assert_equal(" ", worksheet.control_m12); end
  def test_control_p12; assert_in_epsilon(40, worksheet.control_p12, 0.001); end
  def test_control_q12; assert_equal("By 2050, the transport mode share evolve as follows:- trucks' share increases to from 70 to 75%,- rail's share decreases from 13 to ~12%,- inland waterways' share decreases from 18 to ~13%", worksheet.control_q12); end
  def test_control_r12; assert_equal("By 2050, the transport mode share evolve as follows:- trucks' share remains at ~70%,- rail's share remains at  ~13%,- inland waterways' share remains at ~18% (same shares as in 2010)", worksheet.control_r12); end
  def test_control_s12; assert_equal("By 2050, the transport mode share evolve as follows:- trucks' share decreases from 70 to ~65%,- rail's share increases from 13 to ~15%,- inland waterways' share increases from 18 to ~20%", worksheet.control_s12); end
  def test_control_t12; assert_equal("By 2050, the transport mode share evolve as follows:- trucks' share decreases from 70 to ~55%,- rail's share increases from 13 to ~20%,- inland waterways' share increases from 18 to ~25%", worksheet.control_t12); end
  def test_control_u12; assert_equal(" ", worksheet.control_u12); end
  def test_control_y12; assert_equal("IV.b", worksheet.control_y12); end
  def test_control_z12; assert_equal("Solar thermal", worksheet.control_z12); end
  def test_control_aj12; assert_in_epsilon(40, worksheet.control_aj12, 0.001); end
  def test_control_ak12; assert_equal("No significant development", worksheet.control_ak12); end
  def test_control_al12; assert_equal("Gradual increase up to an average of 1m² per household in 2050, which would require about 2% of roof space identified as available in Belgium", worksheet.control_al12); end
  def test_control_am12; assert_equal("Gradual increase up to an average of 3m² per household in 2050, which would require about 7% of roof space identified as available in Belgium", worksheet.control_am12); end
  def test_control_an12; assert_equal("Gradual increase up to an average of 5m² per household in 2050, which would require about 12% of roof space identified as available in Belgium", worksheet.control_an12); end
  def test_control_ao12; assert_equal(" ", worksheet.control_ao12); end
  def test_control_aq12; assert_equal("(ii) Modal shift", worksheet.control_aq12); end
  def test_control_ar12; assert_in_epsilon(10, worksheet.control_ar12, 0.001); end
  def test_control_as12; assert_in_epsilon(30, worksheet.control_as12, 0.001); end
  def test_control_at12; assert_in_epsilon(40, worksheet.control_at12, 0.001); end
  def test_control_au12; assert_in_epsilon(20, worksheet.control_au12, 0.001); end
  def test_control_av12; assert_in_epsilon(40, worksheet.control_av12, 0.001); end
  def test_control_aw12; assert_in_epsilon(10, worksheet.control_aw12, 0.001); end
  def test_control_ax12; assert_in_epsilon(10, worksheet.control_ax12, 0.001); end
  def test_control_ay12; assert_in_epsilon(20, worksheet.control_ay12, 0.001); end
  def test_control_az12; assert_in_epsilon(30, worksheet.control_az12, 0.001); end
  def test_control_ba12; assert_in_epsilon(40, worksheet.control_ba12, 0.001); end
  def test_control_bh12; assert_equal("All levers at level 3", worksheet.control_bh12); end
  def test_control_f13; assert_equal("(iii) Energy efficiency", worksheet.control_f13); end
  def test_control_p13; assert_in_epsilon(40, worksheet.control_p13, 0.001); end
  def test_control_q13; assert_equal("Efficiency of fuel combustion trucks improves by ~10%(vehicles require 10% less energy per km);Efficiency of diesel and electric trains improves by 10%", worksheet.control_q13); end
  def test_control_r13; assert_equal("Efficiency of fuel combustion trucks improves by ~15%(vehicles require 15% less energy per km);Efficiency of diesel and electric trains improves by ~20%", worksheet.control_r13); end
  def test_control_s13; assert_equal("Efficiency of fuel combustion trucks improves by ~25%(vehicles require 25% less energy per km);Efficiencies of diesel and electric trains improve by ~30% and ~25% respectively", worksheet.control_s13); end
  def test_control_t13; assert_equal("Efficiency of fuel combustion trucks improves by ~35%(vehicles require 35% less energy per km);Efficiencies of diesel and electric trains improve by ~40% and ~30% respectively", worksheet.control_t13); end
  def test_control_u13; assert_equal(" ", worksheet.control_u13); end
  def test_control_y13; assert_equal("II.a", worksheet.control_y13); end
  def test_control_z13; assert_equal("Nuclear power", worksheet.control_z13); end
  def test_control_aj13; assert_in_epsilon(40, worksheet.control_aj13, 0.001); end
  def test_control_ak13; assert_equal("Nuclear exit as per the latest official plans (Minister Wathelet's plan): shut down Doel 1 & 2 (0,4 GW each) in the spring of 2016, shut down of Doel 3 (1 GW) in 2022, closing of Tihange 2 (1 GW) in 2023, closing of Tihange 1 &3 and Doel 4 (1 GW each) in 2025", worksheet.control_ak13); end
  def test_control_al13; assert_equal("Nuclear exit as per the latest official plans (Minister Wathelet's plan): shut down Doel 1 & 2 (0,4 GW each) in the spring of 2016, shut down of Doel 3 (1 GW) in 2022, closing of Tihange 2 (1 GW) in 2023, closing of Tihange 1 &3 and Doel 4 (1 GW each) in 2025", worksheet.control_al13); end
  def test_control_am13; assert_equal("Nuclear exit as per the latest official plans (Minister Wathelet's plan): shut down Doel 1 & 2 (0,4 GW each) in the spring of 2016, shut down of Doel 3 (1 GW) in 2022, closing of Tihange 2 (1 GW) in 2023, closing of Tihange 1 &3 and Doel 4 (1 GW each) in 2025", worksheet.control_am13); end
  def test_control_an13; assert_equal("Nuclear exit as per the latest official plans (Minister Wathelet's plan): shut down Doel 1 & 2 (0,4 GW each) in the spring of 2016, shut down of Doel 3 (1 GW) in 2022, closing of Tihange 2 (1 GW) in 2023, closing of Tihange 1 &3 and Doel 4 (1 GW each) in 2025", worksheet.control_an13); end
  def test_control_ao13; assert_equal(" ", worksheet.control_ao13); end
  def test_control_aq13; assert_equal("(iii) Energy efficiency", worksheet.control_aq13); end
  def test_control_ar13; assert_in_epsilon(10, worksheet.control_ar13, 0.001); end
  def test_control_as13; assert_in_epsilon(30, worksheet.control_as13, 0.001); end
  def test_control_at13; assert_in_epsilon(35, worksheet.control_at13, 0.001); end
  def test_control_au13; assert_in_epsilon(30, worksheet.control_au13, 0.001); end
  def test_control_av13; assert_in_epsilon(40, worksheet.control_av13, 0.001); end
  def test_control_aw13; assert_in_epsilon(40, worksheet.control_aw13, 0.001); end
  def test_control_ax13; assert_in_epsilon(40, worksheet.control_ax13, 0.001); end
  def test_control_ay13; assert_in_epsilon(20, worksheet.control_ay13, 0.001); end
  def test_control_az13; assert_in_epsilon(30, worksheet.control_az13, 0.001); end
  def test_control_ba13; assert_in_epsilon(40, worksheet.control_ba13, 0.001); end
  def test_control_bh13; assert_equal("All levers at level 4", worksheet.control_bh13); end
  def test_control_f14; assert_equal("(iv) Technology mix / electrification", worksheet.control_f14); end
  def test_control_p14; assert_in_epsilon(40, worksheet.control_p14, 0.001); end
  def test_control_q14; assert_equal("The trucks technology share is ~90% diesel (hybrid) trucks, ~10% CNG (hybrid) trucks;The trains technology share is similar to 2010 with 45% diesel trains and 55% electric trains ", worksheet.control_q14); end
  def test_control_r14; assert_equal("The trucks technology share is ~70% diesel (hybrid) trucks, ~25% CNG (hybrid) trucks and ~5% electric trucks;The trains technology share is 35% diesel trains and 65% electric trains", worksheet.control_r14); end
  def test_control_s14; assert_equal("The trucks technology share is ~52% diesel (hybrid) trucks, ~38% CNG (hybrid) trucks and ~10% electric trucks;The trains technology share is 45% diesel trains and 55% electric trains", worksheet.control_s14); end
  def test_control_t14; assert_equal("The trucks technology share is ~35% diesel (hybrid) trucks, 45% CNG (hybrid) trucks, and ~20% electric trucks;The trains technology share is 10% diesel trains and 90% electric trains.", worksheet.control_t14); end
  def test_control_u14; assert_equal(" ", worksheet.control_u14); end
  def test_control_y14; assert_equal("I.b", worksheet.control_y14); end
  def test_control_z14; assert_equal("Carbon Capture Storage (CCS)", worksheet.control_z14); end
  def test_control_ao14; assert_equal(" ", worksheet.control_ao14); end
  def test_control_aq14; assert_equal("(iv) Technology mix / electrification", worksheet.control_aq14); end
  def test_control_ar14; assert_in_epsilon(10, worksheet.control_ar14, 0.001); end
  def test_control_as14; assert_in_epsilon(30, worksheet.control_as14, 0.001); end
  def test_control_at14; assert_in_epsilon(30, worksheet.control_at14, 0.001); end
  def test_control_au14; assert_in_epsilon(35, worksheet.control_au14, 0.001); end
  def test_control_av14; assert_in_epsilon(40, worksheet.control_av14, 0.001); end
  def test_control_aw14; assert_in_epsilon(40, worksheet.control_aw14, 0.001); end
  def test_control_ax14; assert_in_epsilon(35, worksheet.control_ax14, 0.001); end
  def test_control_ay14; assert_in_epsilon(20, worksheet.control_ay14, 0.001); end
  def test_control_az14; assert_in_epsilon(30, worksheet.control_az14, 0.001); end
  def test_control_ba14; assert_in_epsilon(40, worksheet.control_ba14, 0.001); end
  def test_control_bh14; assert_in_delta(0, (worksheet.control_bh14||0), 0.001); end
  def test_control_d15; assert_equal("International", worksheet.control_d15); end
  def test_control_e15; assert_equal("XII.c", worksheet.control_e15); end
  def test_control_f15; assert_equal("International aviation", worksheet.control_f15); end
  def test_control_p15; assert_in_epsilon(40, worksheet.control_p15, 0.001); end
  def test_control_q15; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_q15); end
  def test_control_r15; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_r15); end
  def test_control_s15; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_s15); end
  def test_control_t15; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_t15); end
  def test_control_u15; assert_equal(" ", worksheet.control_u15); end
  def test_control_z15; assert_equal("(i) Power Stations", worksheet.control_z15); end
  def test_control_aj15; assert_in_epsilon(40, worksheet.control_aj15, 0.001); end
  def test_control_ak15; assert_equal("No CCS development", worksheet.control_ak15); end
  def test_control_al15; assert_equal("Construction of 1,1 GW of CCS capacity after 2030 (which would represent ~2 coal plants, or ~3 gas plants). This would cover ~10% of current electricity demand", worksheet.control_al15); end
  def test_control_am15; assert_equal("Construction of 2,2 GW of CCS capacity starting in 2025 (which would represent ~4 coal plants, or ~6 gas plants). This would cover ~20% of current electricity demand", worksheet.control_am15); end
  def test_control_an15; assert_equal("Construction of 4,4 GW of CCS capacity starting in 2020 (which would represent ~8 coal plants, or ~12 gas plants). This would cover ~40% of current electricity demand", worksheet.control_an15); end
  def test_control_ao15; assert_equal(" ", worksheet.control_ao15); end
  def test_control_ap15; assert_equal("XII.c", worksheet.control_ap15); end
  def test_control_aq15; assert_equal("International aviation", worksheet.control_aq15); end
  def test_control_ar15; assert_in_epsilon(10, worksheet.control_ar15, 0.001); end
  def test_control_as15; assert_in_epsilon(30, worksheet.control_as15, 0.001); end
  def test_control_at15; assert_in_epsilon(40, worksheet.control_at15, 0.001); end
  def test_control_au15; assert_in_epsilon(30, worksheet.control_au15, 0.001); end
  def test_control_av15; assert_in_epsilon(40, worksheet.control_av15, 0.001); end
  def test_control_aw15; assert_in_epsilon(30, worksheet.control_aw15, 0.001); end
  def test_control_ax15; assert_in_epsilon(30, worksheet.control_ax15, 0.001); end
  def test_control_ay15; assert_in_epsilon(20, worksheet.control_ay15, 0.001); end
  def test_control_az15; assert_in_epsilon(30, worksheet.control_az15, 0.001); end
  def test_control_ba15; assert_in_epsilon(40, worksheet.control_ba15, 0.001); end
  def test_control_bh15; assert_in_delta(0, (worksheet.control_bh15||0), 0.001); end
  def test_control_bl15; assert_equal("Energy sources", worksheet.control_bl15); end
  def test_control_e16; assert_equal("XII.e", worksheet.control_e16); end
  def test_control_f16; assert_equal("International shipping [UNUSED]", worksheet.control_f16); end
  def test_control_p16; assert_in_epsilon(40, worksheet.control_p16, 0.001); end
  def test_control_q16; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_q16); end
  def test_control_r16; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_r16); end
  def test_control_s16; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_s16); end
  def test_control_t16; assert_equal("Following the IPCC guidelines, emissions resulting from fuels sold for international maritime and aviation transportation should not be included in national inventory totals, but should be reported separately as emissions from “bunkers” or “international bunkers.” They will be included in the model for completeness. However, as these sectors are expected to have their own targets set at international level, they will not be included in the Belgian 80-95% GHG emission reduction scenarios.", worksheet.control_t16); end
  def test_control_u16; assert_equal(" ", worksheet.control_u16); end
  def test_control_z16; assert_equal("(ii) Power Station fuel mix", worksheet.control_z16); end
  def test_control_aj16; assert_in_epsilon(40, worksheet.control_aj16, 0.001); end
  def test_control_ak16; assert_equal("100% of the CCS capacity is coal based", worksheet.control_ak16); end
  def test_control_al16; assert_equal("2/3 Coal CCS and 1/3 gas CCS", worksheet.control_al16); end
  def test_control_am16; assert_equal("1/3 Coal CCS and 2/3 gas CCS", worksheet.control_am16); end
  def test_control_an16; assert_equal("100% of the CCS capacity is gas based", worksheet.control_an16); end
  def test_control_ao16; assert_equal(" ", worksheet.control_ao16); end
  def test_control_ap16; assert_equal("XII.e", worksheet.control_ap16); end
  def test_control_aq16; assert_equal("International shipping [UNUSED]", worksheet.control_aq16); end
  def test_control_ar16; assert_in_epsilon(10, worksheet.control_ar16, 0.001); end
  def test_control_as16; assert_in_epsilon(30, worksheet.control_as16, 0.001); end
  def test_control_at16; assert_in_epsilon(30, worksheet.control_at16, 0.001); end
  def test_control_au16; assert_in_epsilon(30, worksheet.control_au16, 0.001); end
  def test_control_av16; assert_in_epsilon(40, worksheet.control_av16, 0.001); end
  def test_control_aw16; assert_in_epsilon(30, worksheet.control_aw16, 0.001); end
  def test_control_ax16; assert_in_epsilon(30, worksheet.control_ax16, 0.001); end
  def test_control_ay16; assert_in_epsilon(20, worksheet.control_ay16, 0.001); end
  def test_control_az16; assert_in_epsilon(30, worksheet.control_az16, 0.001); end
  def test_control_ba16; assert_in_epsilon(40, worksheet.control_ba16, 0.001); end
  def test_control_bh16; assert_in_delta(0, (worksheet.control_bh16||0), 0.001); end
  def test_control_bm16; assert_equal("Nuclear fission", worksheet.control_bm16); end
  def test_control_c17; assert_equal("Buildings", worksheet.control_c17); end
  def test_control_d17; assert_equal("Residential Heating", worksheet.control_d17); end
  def test_control_e17; assert_equal("IX.a", worksheet.control_e17); end
  def test_control_f17; assert_equal("Domestic space heating and hot water", worksheet.control_f17); end
  def test_control_u17; assert_equal(" ", worksheet.control_u17); end
  def test_control_y17; assert_equal("I.a", worksheet.control_y17); end
  def test_control_z17; assert_equal("Biomass and gas power stations", worksheet.control_z17); end
  def test_control_aj17; assert_in_epsilon(40, worksheet.control_aj17, 0.001); end
  def test_control_ak17; assert_equal("30% of indigenous and imported biomass are being used for electricity production. This could lead to ~20 TWh of electricity, or ~20% of today's demand", worksheet.control_ak17); end
  def test_control_al17; assert_equal("40% of indigenous and imported biomass are being used for electricity production. This could lead to ~30 TWh of electricity, or ~30% of today's demand", worksheet.control_al17); end
  def test_control_am17; assert_equal("50% of indigenous and imported biomass are being used for electricity production. This could lead to ~40 TWh of electricity, or ~40% of today's demand", worksheet.control_am17); end
  def test_control_an17; assert_equal("60% of indigenous and imported biomass are being used for electricity production. This could lead to ~50 TWh of electricity, or ~50% of today's demand", worksheet.control_an17); end
  def test_control_ao17; assert_equal(" ", worksheet.control_ao17); end
  def test_control_ap17; assert_equal("IX.a", worksheet.control_ap17); end
  def test_control_aq17; assert_equal("Domestic space heating and hot water", worksheet.control_aq17); end
  def test_control_bh17; assert_in_delta(0, (worksheet.control_bh17||0), 0.001); end
  def test_control_bm17; assert_equal("Solar", worksheet.control_bm17); end
  def test_control_f18; assert_equal("(i) Compactness", worksheet.control_f18); end
  def test_control_h18; assert_in_epsilon(4, worksheet.control_h18, 0.001); end
  def test_control_p18; assert_in_epsilon(4, worksheet.control_p18, 0.001); end
  def test_control_q18; assert_equal("An important share of the people tends to live & work in suburban to rural areas, leading to regional communities.(This decreases the share of flats from the current 53% to 40%  by 2030. The share remains constant after 2030)", worksheet.control_q18); end
  def test_control_r18; assert_equal("The share of flats in new housing stock remains constant(Current share is 53%)", worksheet.control_r18); end
  def test_control_s18; assert_equal("Part of the population moves to urban areas.(This increases the share of flats in new housing stock until 2030 from 53% up to 60%. The share remains constant after 2030)", worksheet.control_s18); end
  def test_control_t18; assert_equal("An important share of the people tend to live & work in urban areas, resulting in more urbanisation.  (The current trend of increased urbanization is extended, with a 1,2% increase in the share of flats in the total of new houses per year up to 77% in 2030. After 2030 the share of flats remains at that level which is typically reached in urban areas nowadays)", worksheet.control_t18); end
  def test_control_u18; assert_equal(" ", worksheet.control_u18); end
  def test_control_x18; assert_equal("Imported", worksheet.control_x18); end
  def test_control_y18; assert_equal("VII.a", worksheet.control_y18); end
  def test_control_z18; assert_equal("Imports of decarbonized electricity", worksheet.control_z18); end
  def test_control_ao18; assert_equal(" ", worksheet.control_ao18); end
  def test_control_ap18; assert_in_delta(0, (worksheet.control_ap18||0), 0.001); end
  def test_control_aq18; assert_equal("(i) Compactness", worksheet.control_aq18); end
  def test_control_ar18; assert_in_delta(1, worksheet.control_ar18, 0.001); end
  def test_control_as18; assert_in_epsilon(3, worksheet.control_as18, 0.001); end
  def test_control_at18; assert_in_epsilon(4, worksheet.control_at18, 0.001); end
  def test_control_au18; assert_in_epsilon(2, worksheet.control_au18, 0.001); end
  def test_control_av18; assert_in_epsilon(4, worksheet.control_av18, 0.001); end
  def test_control_aw18; assert_in_delta(1, worksheet.control_aw18, 0.001); end
  def test_control_ax18; assert_in_delta(1, worksheet.control_ax18, 0.001); end
  def test_control_ay18; assert_in_epsilon(2, worksheet.control_ay18, 0.001); end
  def test_control_az18; assert_in_epsilon(3, worksheet.control_az18, 0.001); end
  def test_control_ba18; assert_in_epsilon(4, worksheet.control_ba18, 0.001); end
  def test_control_bh18; assert_in_delta(0, (worksheet.control_bh18||0), 0.001); end
  def test_control_bm18; assert_equal("Wind", worksheet.control_bm18); end
  def test_control_f19; assert_equal("(ii) Heating / cooling comfort level", worksheet.control_f19); end
  def test_control_h19; assert_in_epsilon(4, worksheet.control_h19, 0.001); end
  def test_control_p19; assert_in_epsilon(4, worksheet.control_p19, 0.001); end
  def test_control_q19; assert_equal("Due to response to increased wealth:- Average internal temperature in households rises to 20ºC by 2050, representing a significant increase of 2°C;- 20% increase in hot water demand per household in 2050;- with the increase in the penetration of heat pumps - which can also be used as cooling device - cooling reaches 60% of the households by 2050 compared to 4% today", worksheet.control_q19); end
  def test_control_r19; assert_equal("- Average internal temperature in households rises to 19ºC by 2050;- Keep hot water demand per household at current level (1202 kWh/household);- 40% of Belgian households effectively uses air conditioning by 2050", worksheet.control_r19); end
  def test_control_s19; assert_equal("- Average internal temperature in households keeps constant at current level, namely 18ºC;- 20% decrease in hot water demand per household in 2050;- 20% of Belgian households effectively uses air conditioning by 2050", worksheet.control_s19); end
  def test_control_t19; assert_equal("Low comfort demand:- Average internal temperature in households falls to 16ºC by 2050, representing a significant decrease of 2°C. The evidence shows that 16°C is a safe minimum in occupied rooms for vulnerable groups;- There is a 50% decrease in hot water demand per household in 2050. This is thought to be the limit that could be achieved with greater consumer awareness of hot water efficiency, and more water efficient fittings;- total cooling demand of Belgium is kept around current level (~4% of households)", worksheet.control_t19); end
  def test_control_u19; assert_equal(" ", worksheet.control_u19); end
  def test_control_z19; assert_equal("(i) Share of imported electricity", worksheet.control_z19); end
  def test_control_aj19; assert_in_epsilon(40, worksheet.control_aj19, 0.001); end
  def test_control_ak19; assert_equal("No net imports, Belgium is self-sufficient in its production of electricity over the year (imports and exports even out across the year)", worksheet.control_ak19); end
  def test_control_al19; assert_equal("Belgium would go up to 5% imports if production is unsufficient (or ~4 TWh based on its 2010 production of 84 TWh)", worksheet.control_al19); end
  def test_control_am19; assert_equal("Belgium would go up to 10% imports if production is unsufficient (or ~8 TWh based on its 2010 production of 84 TWh)", worksheet.control_am19); end
  def test_control_an19; assert_equal("Belgium would go up to 20% imports if production is unsufficient (or ~17 TWh based on its 2010 production of 84 TWh)", worksheet.control_an19); end
  def test_control_ao19; assert_equal(" ", worksheet.control_ao19); end
  def test_control_ap19; assert_in_delta(0, (worksheet.control_ap19||0), 0.001); end
  def test_control_aq19; assert_equal("(ii) Heating / cooling comfort level", worksheet.control_aq19); end
  def test_control_ar19; assert_in_delta(1, worksheet.control_ar19, 0.001); end
  def test_control_as19; assert_in_epsilon(3, worksheet.control_as19, 0.001); end
  def test_control_at19; assert_in_epsilon(4, worksheet.control_at19, 0.001); end
  def test_control_au19; assert_in_epsilon(2, worksheet.control_au19, 0.001); end
  def test_control_av19; assert_in_epsilon(4, worksheet.control_av19, 0.001); end
  def test_control_aw19; assert_in_delta(1, worksheet.control_aw19, 0.001); end
  def test_control_ax19; assert_in_delta(1, worksheet.control_ax19, 0.001); end
  def test_control_ay19; assert_in_epsilon(2, worksheet.control_ay19, 0.001); end
  def test_control_az19; assert_in_epsilon(3, worksheet.control_az19, 0.001); end
  def test_control_ba19; assert_in_epsilon(4, worksheet.control_ba19, 0.001); end
  def test_control_bm19; assert_equal("Electricity imports (exports)", worksheet.control_bm19); end
  def test_control_f20; assert_equal("(iii) Housing thermal efficiency", worksheet.control_f20); end
  def test_control_h20; assert_in_epsilon(4, worksheet.control_h20, 0.001); end
  def test_control_p20; assert_in_epsilon(4, worksheet.control_p20, 0.001); end
  def test_control_q20; assert_equal("Renovations: minor improvements - application of low cost or easy to implement measures resulting in heat demand decrease from ~140 to 111 kWh/m² in 2050.New houses: starting from the 2010 EPB legislation which requires a max consumption of 99 kWh/m² for a new house, the final demand of each new dwelling will decrease to ‘very low energy house’ standard (30kWh/m²) by 2020", worksheet.control_q20); end
  def test_control_r20; assert_equal("Renovation: moderate level resulting in heat demand decrease from ~140 to ~99 kWh/m². New houses: starting from the 2010 EPB legislation which requires a max consumption of 99 kWh/m² for a new house, the final demand of each new dwelling will decrease to ‘very low energy house’ standard (30kWh/m²) by 2020 and to the level of ‘a passive house’ (15kWh/m²) by 2040", worksheet.control_r20); end
  def test_control_s20; assert_equal("Renovation: strong level leading to low energy houses. Resulting in heat demand decrease from ~140 to 60 kWh/m².New houses: starting from the 2010 EPB legislation which requires a max consumption of 99 kWh/m² for a new house, the final demand of each new dwelling will decrease to ‘very low energy house’ standard (30kWh/m²) by 2020 and to the level of ‘a passive house’ (15kWh/m²) by 2030", worksheet.control_s20); end
  def test_control_t20; assert_equal("Renovation: extensive level leading to the \"very low energy houses\". Resulting in heat demand decrease from ~140 to 30 kWh/m².  New houses: starting from the 2010 EPB legislation which requires a max consumption of 99 kWh/m² for a new house, the final demand of each new dwelling will decrease to the level of ‘a passive house’ (15kWh/m²) by 2020", worksheet.control_t20); end
  def test_control_u20; assert_equal(" ", worksheet.control_u20); end
  def test_control_z20; assert_equal("(ii) Share of RES in imported electricity", worksheet.control_z20); end
  def test_control_ab20; assert_in_epsilon(40, worksheet.control_ab20, 0.001); end
  def test_control_aj20; assert_in_epsilon(10, worksheet.control_aj20, 0.001); end
  def test_control_ak20; assert_equal("Average of the other 3 levels", worksheet.control_ak20); end
  def test_control_al20; assert_equal("60% Renewable energy source, 20% CCS and 20% nuclear", worksheet.control_al20); end
  def test_control_am20; assert_equal("80% Renewable energy source, 10% CCS and 10% nuclear", worksheet.control_am20); end
  def test_control_an20; assert_equal("40% Renewable energy source, 30% CCS and 30% nuclear", worksheet.control_an20); end
  def test_control_ao20; assert_equal(" ", worksheet.control_ao20); end
  def test_control_ap20; assert_in_delta(0, (worksheet.control_ap20||0), 0.001); end
  def test_control_aq20; assert_equal("(iii) Housing thermal efficiency", worksheet.control_aq20); end
  def test_control_ar20; assert_in_delta(1, worksheet.control_ar20, 0.001); end
  def test_control_as20; assert_in_epsilon(3, worksheet.control_as20, 0.001); end
  def test_control_at20; assert_in_epsilon(3, worksheet.control_at20, 0.001); end
  def test_control_au20; assert_in_epsilon(3, worksheet.control_au20, 0.001); end
  def test_control_av20; assert_in_epsilon(4, worksheet.control_av20, 0.001); end
  def test_control_aw20; assert_in_epsilon(4, worksheet.control_aw20, 0.001); end
  def test_control_ax20; assert_in_epsilon(4, worksheet.control_ax20, 0.001); end
  def test_control_ay20; assert_in_epsilon(2, worksheet.control_ay20, 0.001); end
  def test_control_az20; assert_in_epsilon(3, worksheet.control_az20, 0.001); end
  def test_control_ba20; assert_in_epsilon(4, worksheet.control_ba20, 0.001); end
  def test_control_bm20; assert_equal("Total Biomass", worksheet.control_bm20); end
  def test_control_f21; assert_equal("(iv) Electrification level", worksheet.control_f21); end
  def test_control_p21; assert_in_epsilon(4, worksheet.control_p21, 0.001); end
  def test_control_q21; assert_equal("By 2050, 20% of the installed heating installations in the residential stock are electrified (air & ground source heat pumps)", worksheet.control_q21); end
  def test_control_r21; assert_equal("By 2050, 40% of the installed heating installations in the residential stock are electrified (air & ground source heat pumps)", worksheet.control_r21); end
  def test_control_s21; assert_equal("By 2050, 60% of the installed heating installations in the residential stock are electrified (air & ground source heat pumps)", worksheet.control_s21); end
  def test_control_t21; assert_equal("By 2050, 85% of the installated heating installations in the residential stock are electrified (air & ground source heat pumps)", worksheet.control_t21); end
  def test_control_u21; assert_equal(" ", worksheet.control_u21); end
  def test_control_w21; assert_equal("Bioenergy", worksheet.control_w21); end
  def test_control_x21; assert_equal("Generation", worksheet.control_x21); end
  def test_control_y21; assert_equal("VI.a", worksheet.control_y21); end
  def test_control_z21; assert_equal("Agriculture and land use", worksheet.control_z21); end
  def test_control_ao21; assert_equal(" ", worksheet.control_ao21); end
  def test_control_ap21; assert_in_delta(0, (worksheet.control_ap21||0), 0.001); end
  def test_control_aq21; assert_equal("(iv) Electrification level", worksheet.control_aq21); end
  def test_control_ar21; assert_in_delta(1, worksheet.control_ar21, 0.001); end
  def test_control_as21; assert_in_epsilon(3, worksheet.control_as21, 0.001); end
  def test_control_at21; assert_in_epsilon(2, worksheet.control_at21, 0.001); end
  def test_control_au21; assert_in_epsilon(4, worksheet.control_au21, 0.001); end
  def test_control_av21; assert_in_epsilon(4, worksheet.control_av21, 0.001); end
  def test_control_aw21; assert_in_epsilon(4, worksheet.control_aw21, 0.001); end
  def test_control_ax21; assert_in_epsilon(4, worksheet.control_ax21, 0.001); end
  def test_control_ay21; assert_in_epsilon(2, worksheet.control_ay21, 0.001); end
  def test_control_az21; assert_in_epsilon(3, worksheet.control_az21, 0.001); end
  def test_control_ba21; assert_in_epsilon(4, worksheet.control_ba21, 0.001); end
  def test_control_bm21; assert_equal("Fossil fuels", worksheet.control_bm21); end
  def test_control_f22; assert_equal("(v) Level of innovative heating technology", worksheet.control_f22); end
  def test_control_p22; assert_in_epsilon(4, worksheet.control_p22, 0.001); end
  def test_control_q22; assert_equal("Innovative technologies represent 10% of the non-electric heating installations", worksheet.control_q22); end
  def test_control_r22; assert_equal("Innovative technologies represent 20% of the non-electric heating installations", worksheet.control_r22); end
  def test_control_s22; assert_equal("Innovative technologies represent 30% of the non-electric heating installations", worksheet.control_s22); end
  def test_control_t22; assert_equal("Innovative technologies represent 40% of the non-electric heating installations", worksheet.control_t22); end
  def test_control_u22; assert_equal(" ", worksheet.control_u22); end
  def test_control_z22; assert_equal("(i) Number of animals and meat consumption", worksheet.control_z22); end
  def test_control_ab22; assert_in_epsilon(4, worksheet.control_ab22, 0.001); end
  def test_control_aj22; assert_in_epsilon(4, worksheet.control_aj22, 0.001); end
  def test_control_ak22; assert_equal("With an increasing population and similar diets, the meat consumption increases and results in an increase in the number of animals by 2% in 2050 compared to 2010; this leads to ~43 mio animals in Belgium in 2050.", worksheet.control_ak22); end
  def test_control_al22; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_al22); end
  def test_control_am22; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_am22); end
  def test_control_an22; assert_equal("Changes in the diets lead to a decrease in meat consumption, and a resulting decrease in the number of animals by 43% in 2050 compared to 2010. This leads to ~ 24 mio animals in 2050.", worksheet.control_an22); end
  def test_control_ao22; assert_equal(" ", worksheet.control_ao22); end
  def test_control_ap22; assert_in_delta(0, (worksheet.control_ap22||0), 0.001); end
  def test_control_aq22; assert_equal("(v) Level of innovative heating technology", worksheet.control_aq22); end
  def test_control_ar22; assert_in_delta(1, worksheet.control_ar22, 0.001); end
  def test_control_as22; assert_in_delta(1, worksheet.control_as22, 0.001); end
  def test_control_at22; assert_in_delta(1, worksheet.control_at22, 0.001); end
  def test_control_au22; assert_in_epsilon(2, worksheet.control_au22, 0.001); end
  def test_control_av22; assert_in_epsilon(2, worksheet.control_av22, 0.001); end
  def test_control_aw22; assert_in_epsilon(2, worksheet.control_aw22, 0.001); end
  def test_control_ax22; assert_in_epsilon(2, worksheet.control_ax22, 0.001); end
  def test_control_ay22; assert_in_epsilon(2, worksheet.control_ay22, 0.001); end
  def test_control_az22; assert_in_epsilon(3, worksheet.control_az22, 0.001); end
  def test_control_ba22; assert_in_epsilon(4, worksheet.control_ba22, 0.001); end
  def test_control_d23; assert_equal("Residential Lighting & Appliances", worksheet.control_d23); end
  def test_control_e23; assert_equal("X.a", worksheet.control_e23); end
  def test_control_f23; assert_equal("Domestic lighting, appliances, and cooking", worksheet.control_f23); end
  def test_control_u23; assert_equal(" ", worksheet.control_u23); end
  def test_control_z23; assert_equal("(ii) Emissions intensity per animal (enteric fermentation)", worksheet.control_z23); end
  def test_control_ab23; assert_in_epsilon(4, worksheet.control_ab23, 0.001); end
  def test_control_aj23; assert_in_epsilon(4, worksheet.control_aj23, 0.001); end
  def test_control_ak23; assert_equal("With no specific lever implemented, there is a stabilization of methane emissions per animal to today's levels. ", worksheet.control_ak23); end
  def test_control_al23; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_al23); end
  def test_control_am23; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_am23); end
  def test_control_an23; assert_equal("Various reduction measures such as nutritional management and optimizing ration per animal lead to a reduction in the emissions per animal of -0,06% per year from 2010 to 2030, followed by a stabilization up to 2050. ", worksheet.control_an23); end
  def test_control_ao23; assert_equal(" ", worksheet.control_ao23); end
  def test_control_ap23; assert_equal("X.a", worksheet.control_ap23); end
  def test_control_aq23; assert_equal("Domestic lighting, appliances, and cooking", worksheet.control_aq23); end
  def test_control_bl23; assert_equal("IPCC Sectors Emissions", worksheet.control_bl23); end
  def test_control_f24; assert_equal("(i) Demand / Efficiency", worksheet.control_f24); end
  def test_control_h24; assert_in_epsilon(4, worksheet.control_h24, 0.001); end
  def test_control_p24; assert_in_epsilon(4, worksheet.control_p24, 0.001); end
  def test_control_q24; assert_equal("No significant effort to reduce demand further in this sector could lead to 25% increase in demand per household due to:1. Total demand of energy for lighting stabilizing at today’s levels as demand increases and efficiency levels continue to improve as they have in the past;2. Demand for white appliances could increase very slightly in line with historic trends: +10% increase in demand;3. Demand for energy for black appliances could increase significantly up to 50% by 2050;4. Demand for energy for cooking could remain stable at current levels;5. There would be no significant change in the way we manage our use of lighting or appliances", worksheet.control_q24); end
  def test_control_r24; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_r24); end
  def test_control_s24; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_s24); end
  def test_control_t24; assert_equal("At level 4, a decrease in demand per household in 2050 by 40% is technically possible. This requires the following evolutions: 1. All lights are replaced with extremely efficient lights (such as LEDs at 75 lumens/watt), leading to ~50% lower energy demand even with an increase in population;2. All cold appliances are replaced with extremely efficient cold appliances by 2050: each appliance uses about 80% less energy through technological improvements;3. When replacing consumer electronics and home computing products, only the best practice products are adopted until 2050 leading to ~50% decrease in efficiency.  An increase of the penetration level of 50% is assumed;4. 15% less energy is used through a more careful use of lighting and appliances", worksheet.control_t24); end
  def test_control_u24; assert_equal(" ", worksheet.control_u24); end
  def test_control_z24; assert_equal("(iii) Emissions intensity per animal (manure management)", worksheet.control_z24); end
  def test_control_ab24; assert_in_epsilon(4, worksheet.control_ab24, 0.001); end
  def test_control_aj24; assert_in_epsilon(4, worksheet.control_aj24, 0.001); end
  def test_control_ak24; assert_equal("Increase in the emissions of manure per animal of 0,31% per year from 2010 to 2030, followed by a stabilization of the emissions per animal up to 2050 due to an increase in productivity.", worksheet.control_ak24); end
  def test_control_al24; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_al24); end
  def test_control_am24; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_am24); end
  def test_control_an24; assert_equal("The increase of production efficiency reduced the amount of animals required to produce the same amount of meat. Along with that, an larger share of manure is treated in anaerobic digesters and good manure management practices increase. All this leads to a reduction of the emissions per animal of -3,1% per year up to 2030, and a stabilization after that to 2050.", worksheet.control_an24); end
  def test_control_ao24; assert_equal(" ", worksheet.control_ao24); end
  def test_control_ap24; assert_in_delta(0, (worksheet.control_ap24||0), 0.001); end
  def test_control_aq24; assert_equal("(i) Demand / Efficiency", worksheet.control_aq24); end
  def test_control_ar24; assert_in_delta(1, worksheet.control_ar24, 0.001); end
  def test_control_as24; assert_in_epsilon(3, worksheet.control_as24, 0.001); end
  def test_control_at24; assert_in_epsilon(4, worksheet.control_at24, 0.001); end
  def test_control_au24; assert_in_epsilon(2, worksheet.control_au24, 0.001); end
  def test_control_av24; assert_in_epsilon(4, worksheet.control_av24, 0.001); end
  def test_control_aw24; assert_in_epsilon(2, worksheet.control_aw24, 0.001); end
  def test_control_ax24; assert_in_epsilon(2, worksheet.control_ax24, 0.001); end
  def test_control_ay24; assert_in_epsilon(2, worksheet.control_ay24, 0.001); end
  def test_control_az24; assert_in_epsilon(3, worksheet.control_az24, 0.001); end
  def test_control_ba24; assert_in_epsilon(4, worksheet.control_ba24, 0.001); end
  def test_control_bm24; assert_equal("Carbon capture", worksheet.control_bm24); end
  def test_control_f25; assert_equal("(ii) Electrification", worksheet.control_f25); end
  def test_control_h25; assert_in_epsilon(4, worksheet.control_h25, 0.001); end
  def test_control_p25; assert_in_epsilon(4, worksheet.control_p25, 0.001); end
  def test_control_q25; assert_equal("Share of electric cooking will be 95% in 2050, compared to gas cooking.", worksheet.control_q25); end
  def test_control_r25; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_r25); end
  def test_control_s25; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_s25); end
  def test_control_t25; assert_equal("Share of electric cooking will be 100% in 2050 compared to gas cooking.", worksheet.control_t25); end
  def test_control_u25; assert_equal(" ", worksheet.control_u25); end
  def test_control_z25; assert_equal("(iv) Evolution of soil emissions", worksheet.control_z25); end
  def test_control_aj25; assert_in_epsilon(4, worksheet.control_aj25, 0.001); end
  def test_control_ak25; assert_equal("Overall stabilization of direct N2O emissions as the impact of an increase of N input to agricultural soils is offset by a decrease of ha agricultural land. The emissions from grazing increase as nitrogen excretions per animal increase due to improved nutrition in support of productivity growth. This all leads to an increase in overall agricultural emissions of 0,11% per year up to 2030, and a stabilization after that up to 2050. ", worksheet.control_ak25); end
  def test_control_al25; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_al25); end
  def test_control_am25; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_am25); end
  def test_control_an25; assert_equal("Improvements in the use and the efficiency of nitrogen reduce the amount of N input to the soil and reduce direct emissions. Additionally, the decrease in the nitrogen excreted also reduce emissions from grazing. This leads to a reduction in the overall emissions on agricultural soils of -0,66% per year up to 2030, and a stabilization thereafter up to 2050.", worksheet.control_an25); end
  def test_control_ao25; assert_equal(" ", worksheet.control_ao25); end
  def test_control_ap25; assert_in_delta(0, (worksheet.control_ap25||0), 0.001); end
  def test_control_aq25; assert_equal("(ii) Electrification", worksheet.control_aq25); end
  def test_control_ar25; assert_in_delta(1, worksheet.control_ar25, 0.001); end
  def test_control_as25; assert_in_epsilon(3, worksheet.control_as25, 0.001); end
  def test_control_at25; assert_in_epsilon(2, worksheet.control_at25, 0.001); end
  def test_control_au25; assert_in_epsilon(3, worksheet.control_au25, 0.001); end
  def test_control_av25; assert_in_epsilon(4, worksheet.control_av25, 0.001); end
  def test_control_aw25; assert_in_epsilon(4, worksheet.control_aw25, 0.001); end
  def test_control_ax25; assert_in_epsilon(4, worksheet.control_ax25, 0.001); end
  def test_control_ay25; assert_in_epsilon(2, worksheet.control_ay25, 0.001); end
  def test_control_az25; assert_in_epsilon(3, worksheet.control_az25, 0.001); end
  def test_control_ba25; assert_in_epsilon(4, worksheet.control_ba25, 0.001); end
  def test_control_d26; assert_equal("Commercial Heating", worksheet.control_d26); end
  def test_control_e26; assert_equal("IX.c", worksheet.control_e26); end
  def test_control_f26; assert_equal("Commercial heating and cooling", worksheet.control_f26); end
  def test_control_u26; assert_equal(" ", worksheet.control_u26); end
  def test_control_z26; assert_equal("(v) Belgian indigenous biomass production ", worksheet.control_z26); end
  def test_control_ab26; assert_in_epsilon(4, worksheet.control_ab26, 0.001); end
  def test_control_aj26; assert_in_epsilon(4, worksheet.control_aj26, 0.001); end
  def test_control_ak26; assert_equal("The biomass potential is exploited to reach Belgian objectives of 13% RES in final energy demand by 2020. Exploitation then increases progressively to reach 100% of the potential identified by Valbiom in Wallonia, and Ovam in Flanders in 2050 (altogether ~27 TWh of biomass and biogas) ", worksheet.control_ak26); end
  def test_control_al26; assert_equal("100% of the biomass potential identified by Valbiom in Wallonia, and Ovam in Flanders is exploited in 2020 (altogether ~27 TWh of biomass and biogas) and stays stable after that.", worksheet.control_al26); end
  def test_control_am26; assert_equal("100% of the biomass potential identified by Valbiom in Wallonia, and Ovam in Flanders is exploited in 2020 (altogether ~27 TWh of biomass and biogas) and stays stable after that. The biomass potential remains stable after that, and biogas production increases progressively to reach the full potential identified by Edora in Wallonia en 2050 (~3 to ~9 TWh, bringing total potential to 36 TWh).", worksheet.control_am26); end
  def test_control_an26; assert_equal("100% of the biomass potential identified by Valbiom and Edora in Wallonia, and Ovam in Flanders is exploited in 2020 (~33 TWh of biomass and biogas). Production continues to increase slightly over time with improved efficiency, reaching 30% more in 2050 (~45 TWh).", worksheet.control_an26); end
  def test_control_ao26; assert_equal(" ", worksheet.control_ao26); end
  def test_control_ap26; assert_equal("IX.c", worksheet.control_ap26); end
  def test_control_aq26; assert_equal("Commercial heating and cooling", worksheet.control_aq26); end
  def test_control_f27; assert_equal("(i) Heat / cooling demand", worksheet.control_f27); end
  def test_control_h27; assert_in_epsilon(4, worksheet.control_h27, 0.001); end
  def test_control_p27; assert_in_epsilon(4, worksheet.control_p27, 0.001); end
  def test_control_q27; assert_equal("Demand is driven by an optimist economic growth (measured in added value).The added value of the services sector will increase on average with 2.3% until 2020 and with 1.8% between 2020-2050", worksheet.control_q27); end
  def test_control_r27; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_r27); end
  def test_control_s27; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_s27); end
  def test_control_t27; assert_equal("Demand is driven by a pessimist economic growth (measured in added value).The added value of the services sector increases on average with only 0.4% between 2010-2050.  This growth equals the increase in Belgian population", worksheet.control_t27); end
  def test_control_u27; assert_equal(" ", worksheet.control_u27); end
  def test_control_y27; assert_equal("VI.b", worksheet.control_y27); end
  def test_control_z27; assert_equal("Volume of Waste & Recycling", worksheet.control_z27); end
  def test_control_aj27; assert_in_epsilon(3, worksheet.control_aj27, 0.001); end
  def test_control_ak27; assert_equal("GHG Stabilization at current level ", worksheet.control_ak27); end
  def test_control_al27; assert_equal("Linear decrease of 50% to reach 0,6 MtCO2e in 2050.", worksheet.control_al27); end
  def test_control_am27; assert_equal("Linear decrease of 75% to reach 0,3 MtCO2e in 2050.", worksheet.control_am27); end
  def test_control_an27; assert_equal("Linear decrese to reach 0 MtCO2e in 2050.", worksheet.control_an27); end
  def test_control_ao27; assert_equal(" ", worksheet.control_ao27); end
  def test_control_ap27; assert_in_delta(0, (worksheet.control_ap27||0), 0.001); end
  def test_control_aq27; assert_equal("(i) Heat / cooling demand", worksheet.control_aq27); end
  def test_control_ar27; assert_in_delta(1, worksheet.control_ar27, 0.001); end
  def test_control_as27; assert_in_epsilon(3, worksheet.control_as27, 0.001); end
  def test_control_at27; assert_in_epsilon(4, worksheet.control_at27, 0.001); end
  def test_control_au27; assert_in_epsilon(2, worksheet.control_au27, 0.001); end
  def test_control_av27; assert_in_epsilon(4, worksheet.control_av27, 0.001); end
  def test_control_aw27; assert_in_delta(1, worksheet.control_aw27, 0.001); end
  def test_control_ax27; assert_in_delta(1, worksheet.control_ax27, 0.001); end
  def test_control_ay27; assert_in_epsilon(2, worksheet.control_ay27, 0.001); end
  def test_control_az27; assert_in_epsilon(3, worksheet.control_az27, 0.001); end
  def test_control_ba27; assert_in_epsilon(4, worksheet.control_ba27, 0.001); end
  def test_control_f28; assert_equal("(ii) Efficiency", worksheet.control_f28); end
  def test_control_h28; assert_in_epsilon(4, worksheet.control_h28, 0.001); end
  def test_control_p28; assert_in_epsilon(4, worksheet.control_p28, 0.001); end
  def test_control_q28; assert_equal("(a) Heating demand/added value:  same performance improvement of the envelope as assumed for the residential sector (minor changes) will result in a 13% efficiency improvement compared to the level of 2010;(b) Cooling demand/added value: today almost 66% of the floor space of offices has active cooling.  In 2050, 90% of the offices will be actively cooled", worksheet.control_q28); end
  def test_control_r28; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_r28); end
  def test_control_s28; assert_equal("Intermediary position between levels 1 and 4", worksheet.control_s28); end
  def test_control_t28; assert_equal("(a) Heating demand:  Same performance improvement of the envelope as assumed for the residential sector, a reduction of 85% of heat demand compared to the level of 2010;(b) Cooling demand: the fraction of non-residential floor space with airco is reduced by 50% due to increase in the use of passive cooling systems. Nearly all new build airco is achieved through passive design measures, achieving a 90% reduction in cooling demand compared to the level of 2010", worksheet.control_t28); end
  def test_control_u28; assert_equal(" ", worksheet.control_u28); end
  def test_control_y28; assert_equal("VI.c", worksheet.control_y28); end
  def test_control_z28; assert_equal("Marine algae  [UNUSED]", worksheet.control_z28); end
  def test_control_aj28; assert_in_epsilon(10, worksheet.control_aj28, 0.001); end
  def test_control_ao28; assert_equal(" ", worksheet.control_ao28); end
  def test_control_ap28; assert_in_delta(0, (worksheet.control_ap28||0), 0.001); end
  def test_control_aq28; assert_equal("(ii) Efficiency", worksheet.control_aq28); end
  def test_control_ar28; assert_in_delta(1, worksheet.control_ar28, 0.001); end
  def test_control_as28; assert_in_epsilon(3, worksheet.control_as28, 0.001); end
  def test_control_at28; assert_in_epsilon(4, worksheet.control_at28, 0.001); end
  def test_control_au28; assert_in_epsilon(3, worksheet.control_au28, 0.001); end
  def test_control_av28; assert_in_epsilon(4, worksheet.control_av28, 0.001); end
  def test_control_aw28; assert_in_epsilon(4, worksheet.control_aw28, 0.001); end
  def test_control_ax28; assert_in_epsilon(4, worksheet.control_ax28, 0.001); end
  def test_control_ay28; assert_in_epsilon(2, worksheet.control_ay28, 0.001); end
  def test_control_az28; assert_in_epsilon(3, worksheet.control_az28, 0.001); end
  def test_control_ba28; assert_in_epsilon(4, worksheet.control_ba28, 0.001); end
  def test_control_f29; assert_equal("(iii) Electrification level", worksheet.control_f29); end
  def test_control_p29; assert_in_epsilon(4, worksheet.control_p29, 0.001); end
  def test_control_q29; assert_equal("20% of the installed heating devices in the stock will be heat pumps (air & ground source) by 2050", worksheet.control_q29); end
  def test_control_r29; assert_equal("40% of the installed heating devices in the stock will be heat pumps (air & ground source) by 2050", worksheet.control_r29); end
  def test_control_s29; assert_equal("60% of the installed heating devices in the stock will be heat pumps (air & ground source) by 2050", worksheet.control_s29); end
  def test_control_t29; assert_equal("85% of the installed heating devices in the stock will be heat pumps (air & ground source) by 2050", worksheet.control_t29); end
  def test_control_u29; assert_equal(" ", worksheet.control_u29); end
  def test_control_x29; assert_equal("Imported", worksheet.control_x29); end
  def test_control_y29; assert_equal("V.b", worksheet.control_y29); end
  def test_control_z29; assert_equal("Bioenergy imports", worksheet.control_z29); end
  def test_control_aj29; assert_in_epsilon(40, worksheet.control_aj29, 0.001); end
  def test_control_ak29; assert_equal("Gradual increase of the import level to 20 TWh/year in 2020 and then to 30 TWh/year in 2050.", worksheet.control_ak29); end
  def test_control_al29; assert_equal("Gradual increase of the import level to 20 TWh/year in 2020 and then to 38 TWh/year in 2050.", worksheet.control_al29); end
  def test_control_am29; assert_equal("Gradual increase of the import level to 20 TWh/year in 2020 and then to 47 TWh/year in 2050.", worksheet.control_am29); end
  def test_control_an29; assert_equal("Gradual increase of the import level to 20 TWh/year in 2020 and then to 56 TWh/year in 2050.", worksheet.control_an29); end
  def test_control_ao29; assert_equal(" ", worksheet.control_ao29); end
  def test_control_ap29; assert_in_delta(0, (worksheet.control_ap29||0), 0.001); end
  def test_control_aq29; assert_equal("(iii) Electrification level", worksheet.control_aq29); end
  def test_control_ar29; assert_in_delta(1, worksheet.control_ar29, 0.001); end
  def test_control_as29; assert_in_epsilon(3, worksheet.control_as29, 0.001); end
  def test_control_at29; assert_in_epsilon(2, worksheet.control_at29, 0.001); end
  def test_control_au29; assert_in_epsilon(4, worksheet.control_au29, 0.001); end
  def test_control_av29; assert_in_epsilon(4, worksheet.control_av29, 0.001); end
  def test_control_aw29; assert_in_epsilon(4, worksheet.control_aw29, 0.001); end
  def test_control_ax29; assert_in_epsilon(4, worksheet.control_ax29, 0.001); end
  def test_control_ay29; assert_in_epsilon(2, worksheet.control_ay29, 0.001); end
  def test_control_az29; assert_in_epsilon(3, worksheet.control_az29, 0.001); end
  def test_control_ba29; assert_in_epsilon(4, worksheet.control_ba29, 0.001); end
  def test_control_f30; assert_equal("(iv) Level of innovative heating technology", worksheet.control_f30); end
  def test_control_p30; assert_in_epsilon(4, worksheet.control_p30, 0.001); end
  def test_control_q30; assert_equal("Innovative technologies represent 10% of the non-electric heating installations", worksheet.control_q30); end
  def test_control_r30; assert_equal("Innovative technologies represent 20% of the non-electric heating installations", worksheet.control_r30); end
  def test_control_s30; assert_equal("Innovative technologies represent 30% of the non-electric heating installations", worksheet.control_s30); end
  def test_control_t30; assert_equal("Innovative technologies represent 40% of the non-electric heating installations", worksheet.control_t30); end
  def test_control_u30; assert_equal(" ", worksheet.control_u30); end
  def test_control_w30; assert_equal("Electricity Balancing & Other", worksheet.control_w30); end
  def test_control_ad30; assert_in_delta(1, worksheet.control_ad30, 0.001); end
  def test_control_ae30; assert_in_epsilon(2, worksheet.control_ae30, 0.001); end
  def test_control_af30; assert_in_epsilon(3, worksheet.control_af30, 0.001); end
  def test_control_ag30; assert_in_epsilon(4, worksheet.control_ag30, 0.001); end
  def test_control_ao30; assert_equal(" ", worksheet.control_ao30); end
  def test_control_ap30; assert_in_delta(0, (worksheet.control_ap30||0), 0.001); end
  def test_control_aq30; assert_equal("(iv) Level of innovative heating technology", worksheet.control_aq30); end
  def test_control_ar30; assert_in_delta(1, worksheet.control_ar30, 0.001); end
  def test_control_as30; assert_in_delta(1, worksheet.control_as30, 0.001); end
  def test_control_at30; assert_in_delta(1, worksheet.control_at30, 0.001); end
  def test_control_au30; assert_in_epsilon(2, worksheet.control_au30, 0.001); end
  def test_control_av30; assert_in_epsilon(2, worksheet.control_av30, 0.001); end
  def test_control_aw30; assert_in_epsilon(2, worksheet.control_aw30, 0.001); end
  def test_control_ax30; assert_in_epsilon(2, worksheet.control_ax30, 0.001); end
  def test_control_ay30; assert_in_epsilon(2, worksheet.control_ay30, 0.001); end
  def test_control_az30; assert_in_epsilon(3, worksheet.control_az30, 0.001); end
  def test_control_ba30; assert_in_epsilon(4, worksheet.control_ba30, 0.001); end
  def test_control_d31; assert_equal("Commercial Lighting & Appliances", worksheet.control_d31); end
  def test_control_e31; assert_equal("X.b", worksheet.control_e31); end
  def test_control_f31; assert_equal("Commercial lighting, appliances, and catering", worksheet.control_f31); end
  def test_control_u31; assert_equal(" ", worksheet.control_u31); end
  def test_control_w31; assert_equal("Geosequestration", worksheet.control_w31); end
  def test_control_y31; assert_equal("XIV.a", worksheet.control_y31); end
  def test_control_z31; assert_equal("Geosequestration [UNUSED]", worksheet.control_z31); end
  def test_control_aj31; assert_in_epsilon(10, worksheet.control_aj31, 0.001); end
  def test_control_ao31; assert_equal(" ", worksheet.control_ao31); end
  def test_control_ap31; assert_equal("X.b", worksheet.control_ap31); end
  def test_control_aq31; assert_equal("Commercial lighting, appliances, and catering", worksheet.control_aq31); end
  def test_control_f32; assert_equal("(i) Demand / Efficiency", worksheet.control_f32); end
  def test_control_h32; assert_in_epsilon(4, worksheet.control_h32, 0.001); end
  def test_control_p32; assert_in_epsilon(4, worksheet.control_p32, 0.001); end
  def test_control_q32; assert_equal("1. Office Lighting: this demand will stabilize at today’s levels as efficiency levels continue to improve as they have in the past, while the penetration of office lighting continues to increase. 2. Appliances: the electricity consumption for appliances will grow with 25% between 2010 and 2050, due to increased penetration", worksheet.control_q32); end
  def test_control_r32; assert_equal("linear interpolation between level 1 and level 4", worksheet.control_r32); end
  def test_control_s32; assert_equal("linear interpolation between level 1 and level 4", worksheet.control_s32); end
  def test_control_t32; assert_equal("1. Office Lighting: demand for lighting per added value could halve by 2050 through eg. the increased use of LEDs instead of other, less efficient lighting technologies and eg. through the use of motion detective lighting.2. Appliances: through increasing adoption of more efficient technologies, electricity consumption is reduced by 25% by 2050", worksheet.control_t32); end
  def test_control_u32; assert_equal(" ", worksheet.control_u32); end
  def test_control_w32; assert_equal("Balancing & Storage", worksheet.control_w32); end
  def test_control_y32; assert_equal("VII.c", worksheet.control_y32); end
  def test_control_z32; assert_equal("EU transmission integration", worksheet.control_z32); end
  def test_control_aj32; assert_in_epsilon(40, worksheet.control_aj32, 0.001); end
  def test_control_ak32; assert_equal("Weak integration (25%) of the Belgian electricity transmission network with the rest of Europe compared to an optimal integration", worksheet.control_ak32); end
  def test_control_al32; assert_equal("Strong integration (50%) of the Belgian electricity transmission network with the rest of Europe compared to an optimal integration", worksheet.control_al32); end
  def test_control_am32; assert_equal("Very strong integration (75%) of the Belgian electricity transmission network with the rest of Europe compared to an optimal integration", worksheet.control_am32); end
  def test_control_an32; assert_equal("Complete integration (100%) of the Belgian electricity transmission network with the rest of Europe compared to an optimal integration", worksheet.control_an32); end
  def test_control_ao32; assert_equal(" ", worksheet.control_ao32); end
  def test_control_ap32; assert_in_delta(0, (worksheet.control_ap32||0), 0.001); end
  def test_control_aq32; assert_equal("(i) Demand / Efficiency", worksheet.control_aq32); end
  def test_control_ar32; assert_in_delta(1, worksheet.control_ar32, 0.001); end
  def test_control_as32; assert_in_epsilon(3, worksheet.control_as32, 0.001); end
  def test_control_at32; assert_in_epsilon(4, worksheet.control_at32, 0.001); end
  def test_control_au32; assert_in_epsilon(2, worksheet.control_au32, 0.001); end
  def test_control_av32; assert_in_epsilon(4, worksheet.control_av32, 0.001); end
  def test_control_aw32; assert_in_epsilon(2, worksheet.control_aw32, 0.001); end
  def test_control_ax32; assert_in_epsilon(2, worksheet.control_ax32, 0.001); end
  def test_control_ay32; assert_in_epsilon(2, worksheet.control_ay32, 0.001); end
  def test_control_az32; assert_in_epsilon(3, worksheet.control_az32, 0.001); end
  def test_control_ba32; assert_in_epsilon(4, worksheet.control_ba32, 0.001); end
  def test_control_f33; assert_equal("(ii) Electrification", worksheet.control_f33); end
  def test_control_p33; assert_in_epsilon(4, worksheet.control_p33, 0.001); end
  def test_control_q33; assert_equal("Catering: 85% will use electricity, compared to natural gas.", worksheet.control_q33); end
  def test_control_r33; assert_equal("Catering: 100% will use electricity, compared to natural gas.", worksheet.control_r33); end
  def test_control_s33; assert_equal("/", worksheet.control_s33); end
  def test_control_t33; assert_equal("/", worksheet.control_t33); end
  def test_control_u33; assert_equal(" ", worksheet.control_u33); end
  def test_control_ap33; assert_in_delta(0, (worksheet.control_ap33||0), 0.001); end
  def test_control_aq33; assert_equal("(ii) Electrification", worksheet.control_aq33); end
  def test_control_ar33; assert_in_delta(1, worksheet.control_ar33, 0.001); end
  def test_control_as33; assert_in_epsilon(3, worksheet.control_as33, 0.001); end
  def test_control_at33; assert_in_epsilon(2, worksheet.control_at33, 0.001); end
  def test_control_au33; assert_in_epsilon(3, worksheet.control_au33, 0.001); end
  def test_control_av33; assert_in_epsilon(4, worksheet.control_av33, 0.001); end
  def test_control_aw33; assert_in_epsilon(4, worksheet.control_aw33, 0.001); end
  def test_control_ax33; assert_in_epsilon(4, worksheet.control_ax33, 0.001); end
  def test_control_ay33; assert_in_epsilon(2, worksheet.control_ay33, 0.001); end
  def test_control_az33; assert_in_epsilon(3, worksheet.control_az33, 0.001); end
  def test_control_ba33; assert_in_epsilon(4, worksheet.control_ba33, 0.001); end
  def test_control_c34; assert_equal("Industry", worksheet.control_c34); end
  def test_control_d34; assert_equal("Industry sectors", worksheet.control_d34); end
  def test_control_e34; assert_equal("XI.a", worksheet.control_e34); end
  def test_control_f34; assert_equal("Steel Industry Production", worksheet.control_f34); end
  def test_control_p34; assert_in_epsilon(30, worksheet.control_p34, 0.001); end
  def test_control_q34; assert_equal("Growth of 0,46% per year (+20% by 2050).   Oxi-steel is only produced in  Arcelor Mittal Gent ( with a maximum capacity of 5 Mton).  Electro-steel is produced on all other sites", worksheet.control_q34); end
  def test_control_r34; assert_equal("Stabilised without growth", worksheet.control_r34); end
  def test_control_s34; assert_equal("Reduction of 1,72% per year (-50 % by 2050).", worksheet.control_s34); end
  def test_control_t34; assert_equal(" ", worksheet.control_t34); end
  def test_control_u34; assert_equal(" ", worksheet.control_u34); end
  def test_control_ap34; assert_equal("XI.a", worksheet.control_ap34); end
  def test_control_aq34; assert_equal("Steel Industry Production", worksheet.control_aq34); end
  def test_control_ar34; assert_in_epsilon(20, worksheet.control_ar34, 0.001); end
  def test_control_as34; assert_in_epsilon(20, worksheet.control_as34, 0.001); end
  def test_control_at34; assert_in_epsilon(20, worksheet.control_at34, 0.001); end
  def test_control_au34; assert_in_epsilon(20, worksheet.control_au34, 0.001); end
  def test_control_av34; assert_in_epsilon(20, worksheet.control_av34, 0.001); end
  def test_control_aw34; assert_in_epsilon(20, worksheet.control_aw34, 0.001); end
  def test_control_ax34; assert_in_epsilon(20, worksheet.control_ax34, 0.001); end
  def test_control_ay34; assert_in_epsilon(20, worksheet.control_ay34, 0.001); end
  def test_control_az34; assert_in_epsilon(20, worksheet.control_az34, 0.001); end
  def test_control_ba34; assert_in_epsilon(20, worksheet.control_ba34, 0.001); end
  def test_control_f35; assert_equal("Energy Intensity of Output", worksheet.control_f35); end
  def test_control_p35; assert_in_epsilon(40, worksheet.control_p35, 0.001); end
  def test_control_q35; assert_equal("Increase  of electro-steel by 17% in 2050 vs 2010 (shifting Wallonia integrated steel production to electric)", worksheet.control_q35); end
  def test_control_r35; assert_equal("Increase  of electro-steel by 17% by 2050 vs 2010(shifting Wallonia integrated steel production to electric), +13% shift to high processability steel,5% improvement of overall energy efficiency in integrated steel production. Introduction of Top Gas recirculation, resulting in 25 %  savings of coke and coal.  Coal substitution at 2% by gas injection, coal PCI susbtitution at 15 % by biomass.  CCS oxygen steel (on top gas recirculation)", worksheet.control_r35); end
  def test_control_s35; assert_equal("Increase  of electro-steel by 17% by 2050 vs 2010 (shifting Wallonia integrated steel production to electric), +25% shift to high processability steel,5% improvement of overall energy efficiency in integrated steel production, Introduction of Hisarna technology (closing of coke and sinter plants and enabling +35% efficiency),  Coal substitution at 3% by gas injection, Coal PCI substitution at 15% by biomass, CCS  applies on all emissions sources in steel production  ", worksheet.control_s35); end
  def test_control_t35; assert_equal("Shift of 100 % steel to electro steel production by 2050 vs 2010, +38% shift to high processability steel, 10 % improvement of overall energy efficiency.CCS  applies on all emissions sources in steel production", worksheet.control_t35); end
  def test_control_u35; assert_equal(" ", worksheet.control_u35); end
  def test_control_ap35; assert_in_delta(0, (worksheet.control_ap35||0), 0.001); end
  def test_control_aq35; assert_equal("Energy Intensity of Output", worksheet.control_aq35); end
  def test_control_ar35; assert_in_epsilon(10, worksheet.control_ar35, 0.001); end
  def test_control_as35; assert_in_epsilon(30, worksheet.control_as35, 0.001); end
  def test_control_at35; assert_in_epsilon(30, worksheet.control_at35, 0.001); end
  def test_control_au35; assert_in_epsilon(30, worksheet.control_au35, 0.001); end
  def test_control_av35; assert_in_epsilon(40, worksheet.control_av35, 0.001); end
  def test_control_aw35; assert_in_epsilon(40, worksheet.control_aw35, 0.001); end
  def test_control_ax35; assert_in_epsilon(40, worksheet.control_ax35, 0.001); end
  def test_control_ay35; assert_in_epsilon(20, worksheet.control_ay35, 0.001); end
  def test_control_az35; assert_in_epsilon(30, worksheet.control_az35, 0.001); end
  def test_control_ba35; assert_in_epsilon(40, worksheet.control_ba35, 0.001); end
  def test_control_e36; assert_equal("XI.b", worksheet.control_e36); end
  def test_control_f36; assert_equal("Cement Industry Production", worksheet.control_f36); end
  def test_control_p36; assert_in_epsilon(30, worksheet.control_p36, 0.001); end
  def test_control_q36; assert_equal("Growth of +0.23% per year (+10% by 2050), supported by the building sector", worksheet.control_q36); end
  def test_control_r36; assert_equal("Stabilised without growth", worksheet.control_r36); end
  def test_control_s36; assert_equal("Reduction of -0.25% per year (-10% by 2050)", worksheet.control_s36); end
  def test_control_t36; assert_equal(" ", worksheet.control_t36); end
  def test_control_u36; assert_equal(" ", worksheet.control_u36); end
  def test_control_ap36; assert_equal("XI.b", worksheet.control_ap36); end
  def test_control_aq36; assert_equal("Cement Industry Production", worksheet.control_aq36); end
  def test_control_ar36; assert_in_epsilon(20, worksheet.control_ar36, 0.001); end
  def test_control_as36; assert_in_epsilon(10, worksheet.control_as36, 0.001); end
  def test_control_at36; assert_in_epsilon(10, worksheet.control_at36, 0.001); end
  def test_control_au36; assert_in_epsilon(10, worksheet.control_au36, 0.001); end
  def test_control_av36; assert_in_epsilon(10, worksheet.control_av36, 0.001); end
  def test_control_aw36; assert_in_epsilon(10, worksheet.control_aw36, 0.001); end
  def test_control_ax36; assert_in_epsilon(10, worksheet.control_ax36, 0.001); end
  def test_control_ay36; assert_in_epsilon(10, worksheet.control_ay36, 0.001); end
  def test_control_az36; assert_in_epsilon(10, worksheet.control_az36, 0.001); end
  def test_control_ba36; assert_in_epsilon(10, worksheet.control_ba36, 0.001); end
  def test_control_f37; assert_equal("Energy Intensity of Output", worksheet.control_f37); end
  def test_control_p37; assert_in_epsilon(40, worksheet.control_p37, 0.001); end
  def test_control_q37; assert_equal("Clinker substitution by steel slag reduces energy & process emissions by -15% by 2050 vs 2010, energy efficiency increases by +13%", worksheet.control_q37); end
  def test_control_r37; assert_equal("Clinker subsitution by steel slag reduces energy & process emissions by -27% by 2050 vs 2010, energy efficiency increases by +17%, fuels substituted at 33% by solid biomass", worksheet.control_r37); end
  def test_control_s37; assert_equal("Clinker substitution by steel slag reduces energy and process emissions by -53% by 2050 vs 2010, energy efficiency increases by +34%, fuels substituted at 66% by solid biomass", worksheet.control_s37); end
  def test_control_t37; assert_equal("Clinker subsitution by steel slag reduces energy and process emissions by -85% by 2050 vs 2010, energy efficiency increases by +41%, fuels substituted at 100% by solid biomass", worksheet.control_t37); end
  def test_control_u37; assert_equal(" ", worksheet.control_u37); end
  def test_control_ap37; assert_in_delta(0, (worksheet.control_ap37||0), 0.001); end
  def test_control_aq37; assert_equal("Energy Intensity of Output", worksheet.control_aq37); end
  def test_control_ar37; assert_in_epsilon(10, worksheet.control_ar37, 0.001); end
  def test_control_as37; assert_in_epsilon(30, worksheet.control_as37, 0.001); end
  def test_control_at37; assert_in_epsilon(30, worksheet.control_at37, 0.001); end
  def test_control_au37; assert_in_epsilon(30, worksheet.control_au37, 0.001); end
  def test_control_av37; assert_in_epsilon(40, worksheet.control_av37, 0.001); end
  def test_control_aw37; assert_in_epsilon(40, worksheet.control_aw37, 0.001); end
  def test_control_ax37; assert_in_epsilon(40, worksheet.control_ax37, 0.001); end
  def test_control_ay37; assert_in_epsilon(20, worksheet.control_ay37, 0.001); end
  def test_control_az37; assert_in_epsilon(30, worksheet.control_az37, 0.001); end
  def test_control_ba37; assert_in_epsilon(40, worksheet.control_ba37, 0.001); end
  def test_control_e38; assert_equal("XI.c", worksheet.control_e38); end
  def test_control_f38; assert_equal("Lime Industry Production", worksheet.control_f38); end
  def test_control_p38; assert_in_epsilon(30, worksheet.control_p38, 0.001); end
  def test_control_q38; assert_equal("Growth of +0.1% per year (+5% by 2050), supported by demand for water purification, canal dredging and infrastructure demand", worksheet.control_q38); end
  def test_control_r38; assert_equal("Stabilised without growth", worksheet.control_r38); end
  def test_control_s38; assert_equal("Reduction of -0.8% per year (-30% by 2050), caused by the closure of the steel hot phase", worksheet.control_s38); end
  def test_control_t38; assert_equal(" ", worksheet.control_t38); end
  def test_control_u38; assert_equal(" ", worksheet.control_u38); end
  def test_control_ap38; assert_equal("XI.c", worksheet.control_ap38); end
  def test_control_aq38; assert_equal("Lime Industry Production", worksheet.control_aq38); end
  def test_control_ar38; assert_in_epsilon(20, worksheet.control_ar38, 0.001); end
  def test_control_as38; assert_in_epsilon(20, worksheet.control_as38, 0.001); end
  def test_control_at38; assert_in_epsilon(20, worksheet.control_at38, 0.001); end
  def test_control_au38; assert_in_epsilon(20, worksheet.control_au38, 0.001); end
  def test_control_av38; assert_in_epsilon(20, worksheet.control_av38, 0.001); end
  def test_control_aw38; assert_in_epsilon(20, worksheet.control_aw38, 0.001); end
  def test_control_ax38; assert_in_epsilon(20, worksheet.control_ax38, 0.001); end
  def test_control_ay38; assert_in_epsilon(20, worksheet.control_ay38, 0.001); end
  def test_control_az38; assert_in_epsilon(20, worksheet.control_az38, 0.001); end
  def test_control_ba38; assert_in_epsilon(20, worksheet.control_ba38, 0.001); end
  def test_control_f39; assert_equal("Energy Intensity of Output", worksheet.control_f39); end
  def test_control_p39; assert_in_epsilon(40, worksheet.control_p39, 0.001); end
  def test_control_q39; assert_equal("Energy efficiency increases by +13% by 2050 vs 2010", worksheet.control_q39); end
  def test_control_r39; assert_equal("Energy efficiency increases by +23%, Lignite is substituded at +33% by gas, fuels substitued at 10% by solid biomass", worksheet.control_r39); end
  def test_control_s39; assert_equal("Energy efficiency increases by +30%, lignite is substituted at 66% by gas, fuels substituted at 20% by solid biomass", worksheet.control_s39); end
  def test_control_t39; assert_equal("Energy efficiency increases by +36%, lignite is substituted at 100% by gas, fuels subtituted at 30% by solid biomass", worksheet.control_t39); end
  def test_control_u39; assert_equal(" ", worksheet.control_u39); end
  def test_control_ad39; assert_equal("Energy demand", worksheet.control_ad39); end
  def test_control_h14; assert_in_epsilon(40, worksheet.control_h14, 0.001); end
  def test_control_ab25; assert_in_epsilon(4, worksheet.control_ab25, 0.001); end
  def test_output_ak12; assert_in_epsilon(43.056376530058124, worksheet.output_ak12, 0.001); end
  def test_control_h46; assert_in_epsilon(40, worksheet.control_h46, 0.001); end
  def test_output_ak16; assert_in_epsilon(39.98927039751753, worksheet.output_ak16, 0.001); end
  def test_output_ak19; assert_in_epsilon(76.59441746970197, worksheet.output_ak19, 0.001); end
  def test_output_ak21; assert_in_epsilon(159.64006439727763, worksheet.output_ak21, 0.001); end
  def test_control_ah39; assert_in_epsilon(159.64006439727763, worksheet.control_ah39, 0.001); end
  def test_control_ao39; assert_equal("TWH/yr", worksheet.control_ao39); end
  def test_control_ap39; assert_in_delta(0, (worksheet.control_ap39||0), 0.001); end
  def test_control_aq39; assert_equal("Energy Intensity of Output", worksheet.control_aq39); end
  def test_control_ar39; assert_in_epsilon(10, worksheet.control_ar39, 0.001); end
  def test_control_as39; assert_in_epsilon(30, worksheet.control_as39, 0.001); end
  def test_control_at39; assert_in_epsilon(30, worksheet.control_at39, 0.001); end
  def test_control_au39; assert_in_epsilon(30, worksheet.control_au39, 0.001); end
  def test_control_av39; assert_in_epsilon(40, worksheet.control_av39, 0.001); end
  def test_control_aw39; assert_in_epsilon(40, worksheet.control_aw39, 0.001); end
  def test_control_ax39; assert_in_epsilon(40, worksheet.control_ax39, 0.001); end
  def test_control_ay39; assert_in_epsilon(20, worksheet.control_ay39, 0.001); end
  def test_control_az39; assert_in_epsilon(30, worksheet.control_az39, 0.001); end
  def test_control_ba39; assert_in_epsilon(40, worksheet.control_ba39, 0.001); end
  def test_control_e40; assert_equal("XI.d", worksheet.control_e40); end
  def test_control_f40; assert_equal("Glass Industry Production", worksheet.control_f40); end
  def test_control_p40; assert_in_epsilon(30, worksheet.control_p40, 0.001); end
  def test_control_q40; assert_equal("Growth of +1.7% per year (doubling by 2050), with hollow glass remaining stable", worksheet.control_q40); end
  def test_control_r40; assert_equal("Stabilised without growth", worksheet.control_r40); end
  def test_control_s40; assert_equal("Reduction of 0,4% per year (-16% by 2050), with hollow glass sector reduced by 50% by 2050 and flat and others glasses reduced by 10% by 2050", worksheet.control_s40); end
  def test_control_t40; assert_equal(" ", worksheet.control_t40); end
  def test_control_u40; assert_equal(" ", worksheet.control_u40); end
  def test_control_ad40; assert_equal("Intermittence", worksheet.control_ad40); end
  def test_output_ak162; assert_in_epsilon(2.4855000805801772, worksheet.output_ak162, 0.001); end
  def test_output_ak163; assert_in_delta(0, (worksheet.output_ak163||0), 0.001); end
  def test_output_ak164; assert_in_epsilon(4.51248992747784, worksheet.output_ak164, 0.001); end
  def test_output_ak165; assert_in_epsilon(6, worksheet.output_ak165, 0.001); end
  def test_output_ak166; assert_in_epsilon(12.787260273972603, worksheet.output_ak166, 0.001); end
  def test_output_ak167; assert_in_epsilon(16.5061, worksheet.output_ak167, 0.001); end
  def test_output_ak169; assert_in_delta(0, (worksheet.output_ak169||0), 0.001); end
  def test_output_ak170; assert_in_delta(0, (worksheet.output_ak170||0), 0.001); end
  def test_output_ak171; assert_in_delta(0, (worksheet.output_ak171||0), 0.001); end
  def test_output_ak172; assert_in_epsilon(6.5372011818426, worksheet.output_ak172, 0.001); end
  def test_output_ak173; assert_in_epsilon(50.28136529680366, worksheet.output_ak173, 0.001); end
  def test_output_ak177; assert_in_epsilon(99.10991676067688, worksheet.output_ak177, 0.001); end
  def test_output_ak178; assert_in_delta(0.8028936777631172, worksheet.output_ak178, 0.001); end
  def test_control_ah40; assert_in_delta(0.8028936777631172, worksheet.control_ah40, 0.001); end
  def test_control_ao40; assert_equal("of capacity", worksheet.control_ao40); end
  def test_control_ap40; assert_equal("XI.d", worksheet.control_ap40); end
  def test_control_aq40; assert_equal("Glass Industry Production", worksheet.control_aq40); end
  def test_control_ar40; assert_in_epsilon(20, worksheet.control_ar40, 0.001); end
  def test_control_as40; assert_in_epsilon(10, worksheet.control_as40, 0.001); end
  def test_control_at40; assert_in_epsilon(10, worksheet.control_at40, 0.001); end
  def test_control_au40; assert_in_epsilon(10, worksheet.control_au40, 0.001); end
  def test_control_av40; assert_in_epsilon(10, worksheet.control_av40, 0.001); end
  def test_control_aw40; assert_in_epsilon(10, worksheet.control_aw40, 0.001); end
  def test_control_ax40; assert_in_epsilon(10, worksheet.control_ax40, 0.001); end
  def test_control_ay40; assert_in_epsilon(10, worksheet.control_ay40, 0.001); end
  def test_control_az40; assert_in_epsilon(10, worksheet.control_az40, 0.001); end
  def test_control_ba40; assert_in_epsilon(10, worksheet.control_ba40, 0.001); end
  def test_control_f41; assert_equal("Energy Intensity of Output", worksheet.control_f41); end
  def test_control_p41; assert_in_epsilon(40, worksheet.control_p41, 0.001); end
  def test_control_q41; assert_equal("Energy efficiency increases by +8%", worksheet.control_q41); end
  def test_control_r41; assert_equal("Energy efficiency increases by +15%, cullet use increases by +5%, oxyfuel use improves efficiency by +12%, fuel substituted at 100% by gas in 2050, fuels substituded at 3% by solid biomass", worksheet.control_r41); end
  def test_control_s41; assert_equal("Energy efficiency increases by +30%, cullet use increases by +10%, uxyfuel use increases efficiency by +24%, fuel is substituted at 100% by gas in 2030, fuels are substituted at 6% by solid biomass", worksheet.control_s41); end
  def test_control_t41; assert_equal("Energy efficiency increase by +36%, cullet use increases by +12%, oxyfuel use improves efficiency by +29%, fuel substituted at 100% by gas by 2020, fuels substituted at 7% by solid biomass", worksheet.control_t41); end
  def test_control_u41; assert_equal(" ", worksheet.control_u41); end
  def test_control_ad41; assert_equal("Elec. Production", worksheet.control_ad41); end
  def test_output_ak130; assert_in_delta(0, (worksheet.output_ak130||0), 0.001); end
  def test_output_ak135; assert_in_delta(0.24874970462871215, worksheet.output_ak135, 0.001); end
  def test_output_ak140; assert_in_epsilon(96.21966333632473, worksheet.output_ak140, 0.001); end
  def test_output_ak149; assert_in_epsilon(10.997030233282299, worksheet.output_ak149, 0.001); end
  def test_output_ak151; assert_in_epsilon(315.7157579290303, worksheet.output_ak151, 0.001); end
  def test_output_ak89; assert_in_epsilon(6.967167652872322, worksheet.output_ak89, 0.001); end
  def test_output_ak91; assert_in_epsilon(2.5798342486564247, worksheet.output_ak91, 0.001); end
  def test_output_ak93; assert_in_delta(0.3351909730951717, worksheet.output_ak93, 0.001); end
  def test_output_ak94; assert_in_epsilon(9.882192874623918, worksheet.output_ak94, 0.001); end
  def test_output_ak97; assert_in_epsilon(38.47499745714532, worksheet.output_ak97, 0.001); end
  def test_output_ak110; assert_in_epsilon(4.250761902845562, worksheet.output_ak110, 0.001); end
  def test_output_ak112; assert_in_epsilon(5.407639729554325, worksheet.output_ak112, 0.001); end
  def test_output_ak113; assert_in_epsilon(2.6571981184283344, worksheet.output_ak113, 0.001); end
  def test_output_ak118; assert_in_epsilon(1.651275517187105, worksheet.output_ak118, 0.001); end
  def test_output_ak119; assert_in_delta(0.5182538698299161, worksheet.output_ak119, 0.001); end
  def test_output_ak120; assert_in_epsilon(10.23436723499968, worksheet.output_ak120, 0.001); end
  def test_output_ak124; assert_in_delta(0, (worksheet.output_ak124||0), 0.001); end
  def test_output_ak125; assert_in_epsilon(4.52410270527816, worksheet.output_ak125, 0.001); end
  def test_output_ak126; assert_in_epsilon(78.36345240817494, worksheet.output_ak126, 0.001); end
  def test_control_ah41; assert_in_epsilon(4.028864837201769, worksheet.control_ah41, 0.001); end
  def test_control_ao41; assert_equal("of demand", worksheet.control_ao41); end
  def test_control_ap41; assert_in_delta(0, (worksheet.control_ap41||0), 0.001); end
  def test_control_aq41; assert_equal("Energy Intensity of Output", worksheet.control_aq41); end
  def test_control_ar41; assert_in_epsilon(10, worksheet.control_ar41, 0.001); end
  def test_control_as41; assert_in_epsilon(30, worksheet.control_as41, 0.001); end
  def test_control_at41; assert_in_epsilon(30, worksheet.control_at41, 0.001); end
  def test_control_au41; assert_in_epsilon(30, worksheet.control_au41, 0.001); end
  def test_control_av41; assert_in_epsilon(40, worksheet.control_av41, 0.001); end
  def test_control_aw41; assert_in_epsilon(40, worksheet.control_aw41, 0.001); end
  def test_control_ax41; assert_in_epsilon(40, worksheet.control_ax41, 0.001); end
  def test_control_ay41; assert_in_epsilon(20, worksheet.control_ay41, 0.001); end
  def test_control_az41; assert_in_epsilon(30, worksheet.control_az41, 0.001); end
  def test_control_ba41; assert_in_epsilon(40, worksheet.control_ba41, 0.001); end
  def test_control_e42; assert_equal("XI.e", worksheet.control_e42); end
  def test_control_f42; assert_equal("Chemicals Industry Production", worksheet.control_f42); end
  def test_control_p42; assert_in_epsilon(30, worksheet.control_p42, 0.001); end
  def test_control_q42; assert_equal("An increase of 20 % for all activities under ETS and an increase of 40 % for activities not under ETS    ", worksheet.control_q42); end
  def test_control_r42; assert_equal("A stabilistation of activities under ETS and an increase  by 20 % of the activities not under ETS  ", worksheet.control_r42); end
  def test_control_s42; assert_equal("A decrease  by 50 % of all activities under ETS and a decrease by 20% of the activities not under ETS ", worksheet.control_s42); end
  def test_control_t42; assert_equal(" ", worksheet.control_t42); end
  def test_control_u42; assert_equal(" ", worksheet.control_u42); end
  def test_control_ae42; assert_in_epsilon(2050, worksheet.control_ae42, 0.001); end
  def test_control_ap42; assert_equal("XI.e", worksheet.control_ap42); end
  def test_control_aq42; assert_equal("Chemicals Industry Production", worksheet.control_aq42); end
  def test_control_ar42; assert_in_epsilon(20, worksheet.control_ar42, 0.001); end
  def test_control_as42; assert_in_epsilon(20, worksheet.control_as42, 0.001); end
  def test_control_at42; assert_in_epsilon(20, worksheet.control_at42, 0.001); end
  def test_control_au42; assert_in_epsilon(20, worksheet.control_au42, 0.001); end
  def test_control_av42; assert_in_epsilon(20, worksheet.control_av42, 0.001); end
  def test_control_aw42; assert_in_epsilon(20, worksheet.control_aw42, 0.001); end
  def test_control_ax42; assert_in_epsilon(20, worksheet.control_ax42, 0.001); end
  def test_control_ay42; assert_in_epsilon(20, worksheet.control_ay42, 0.001); end
  def test_control_az42; assert_in_epsilon(20, worksheet.control_az42, 0.001); end
  def test_control_ba42; assert_in_epsilon(20, worksheet.control_ba42, 0.001); end
  def test_control_f43; assert_equal("Energy Intensity of Output", worksheet.control_f43); end
  def test_control_p43; assert_in_epsilon(40, worksheet.control_p43, 0.001); end
  def test_control_q43; assert_equal("Status quo ", worksheet.control_q43); end
  def test_control_r43; assert_equal("Penetration of 10 % green chemistry, replacing traditional plastics.10 % energy efficiency gains for ETS activities, Improvements in ammonia production process, CCS on ammonia and hydrogen production process emissions.Replacing mercury cells by membrane cells. 80 % reduction of N2O emissions  ", worksheet.control_r43); end
  def test_control_s43; assert_equal("Penetration of 20 % green chemistry, replacing traditional plastics, 20 to 30 % energy efficiency gains. CCS on all installations > 1 Mton, but not on crackers.90 % reduction of N2O emissions    ", worksheet.control_s43); end
  def test_control_t43; assert_equal("Penetration of 50 % green chemistry, replacing traditional plastics,30 to 40 % energy efficiency gains, CCS on installations  > 200 kton, including crackers.95 % reduction of N2O emissions ", worksheet.control_t43); end
  def test_control_u43; assert_equal(" ", worksheet.control_u43); end
  def test_control_ae43; assert_equal("GHG emissions", worksheet.control_ae43); end
  def test_control_ap43; assert_in_delta(0, (worksheet.control_ap43||0), 0.001); end
  def test_control_aq43; assert_equal("Energy Intensity of Output", worksheet.control_aq43); end
  def test_control_ar43; assert_in_epsilon(10, worksheet.control_ar43, 0.001); end
  def test_control_as43; assert_in_epsilon(30, worksheet.control_as43, 0.001); end
  def test_control_at43; assert_in_epsilon(30, worksheet.control_at43, 0.001); end
  def test_control_au43; assert_in_epsilon(30, worksheet.control_au43, 0.001); end
  def test_control_av43; assert_in_epsilon(40, worksheet.control_av43, 0.001); end
  def test_control_aw43; assert_in_epsilon(40, worksheet.control_aw43, 0.001); end
  def test_control_ax43; assert_in_epsilon(40, worksheet.control_ax43, 0.001); end
  def test_control_ay43; assert_in_epsilon(20, worksheet.control_ay43, 0.001); end
  def test_control_az43; assert_in_epsilon(30, worksheet.control_az43, 0.001); end
  def test_control_ba43; assert_in_epsilon(40, worksheet.control_ba43, 0.001); end
  def test_control_e44; assert_equal("XI.f", worksheet.control_e44); end
  def test_control_f44; assert_equal("Pulp & Paper Industry Production", worksheet.control_f44); end
  def test_control_p44; assert_in_epsilon(30, worksheet.control_p44, 0.001); end
  def test_control_q44; assert_equal("Growth of +1.2% per year (+61% by 2050)", worksheet.control_q44); end
  def test_control_r44; assert_equal("Stabilised without growth", worksheet.control_r44); end
  def test_control_s44; assert_equal("Reduction of -0.8% per year (-27% by 2050)", worksheet.control_s44); end
  def test_control_t44; assert_equal(" ", worksheet.control_t44); end
  def test_control_u44; assert_equal(" ", worksheet.control_u44); end
  def test_output_ac312; assert_in_epsilon(23.965421380561793, worksheet.output_ac312, 0.001); end
  def test_output_ac363; assert_in_epsilon(19.96312356237269, worksheet.output_ac363, 0.001); end
  def test_output_ac313; assert_in_delta(0, (worksheet.output_ac313||0), 0.001); end
  def test_output_ac314; assert_in_delta(0, (worksheet.output_ac314||0), 0.001); end
  def test_output_ac315; assert_in_delta(0, (worksheet.output_ac315||0), 0.001); end
  def test_output_ac316; assert_in_epsilon(13.692529969967014, worksheet.output_ac316, 0.001); end
  def test_output_ac320; assert_in_delta(0, (worksheet.output_ac320||0), 0.001); end
  def test_output_ac321; assert_in_delta(0, (worksheet.output_ac321||0), 0.001); end
  def test_output_ac322; assert_in_epsilon(24.022821413735436, worksheet.output_ac322, 0.001); end
  def test_output_ac451; assert_in_epsilon(13.559032047177752, worksheet.output_ac451, 0.001); end
  def test_output_ac455; assert_in_epsilon(14, worksheet.output_ac455, 0.001); end
  def test_output_ac459; assert_in_epsilon(27.55903204717775, worksheet.output_ac459, 0.001); end
  def test_output_ac463; assert_in_epsilon(8.433486601220553, worksheet.output_ac463, 0.001); end
  def test_output_ac453; assert_in_epsilon(4.078125783633139, worksheet.output_ac453, 0.001); end
  def test_output_ac457; assert_in_delta(0, (worksheet.output_ac457||0), 0.001); end
  def test_output_ac461; assert_in_epsilon(4.078125783633139, worksheet.output_ac461, 0.001); end
  def test_output_ac465; assert_in_delta(0.8196774544363369, worksheet.output_ac465, 0.001); end
  def test_output_ac354; assert_in_epsilon(2.5461453636702016, worksheet.output_ac354, 0.001); end
  def test_output_ac370; assert_in_epsilon(21.476676050065233, worksheet.output_ac370, 0.001); end
  def test_output_ac323; assert_in_delta(0.05750473978133632, worksheet.output_ac323, 0.001); end
  def test_output_ac324; assert_in_epsilon(52.02602438339594, worksheet.output_ac324, 0.001); end
  def test_output_ac372; assert_in_epsilon(49.32130350959836, worksheet.output_ac372, 0.001); end
  def test_output_ac338; assert_in_epsilon(15.197332956751332, worksheet.output_ac338, 0.001); end
  def test_output_ac339; assert_in_epsilon(8.481983817059477, worksheet.output_ac339, 0.001); end
  def test_output_ac337; assert_in_epsilon(23.67931677381081, worksheet.output_ac337, 0.001); end
  def test_output_ac452; assert_in_delta(0.0682, worksheet.output_ac452, 0.001); end
  def test_output_ac456; assert_in_epsilon(4.346242662072274, worksheet.output_ac456, 0.001); end
  def test_output_ac460; assert_in_epsilon(4.414442662072274, worksheet.output_ac460, 0.001); end
  def test_output_ac464; assert_in_epsilon(1.1450529425392655, worksheet.output_ac464, 0.001); end
  def test_output_ac373; assert_in_epsilon(22.534263831271545, worksheet.output_ac373, 0.001); end
  def test_output_ac344; assert_in_delta(0, (worksheet.output_ac344||0), 0.001); end
  def test_output_ac345; assert_in_delta(0, (worksheet.output_ac345||0), 0.001); end
  def test_output_ac346; assert_in_delta(0, (worksheet.output_ac346||0), 0.001); end
  def test_output_ac347; assert_in_delta(0, (worksheet.output_ac347||0), 0.001); end
  def test_output_ac348; assert_in_delta(0, (worksheet.output_ac348||0), 0.001); end
  def test_output_ac379; assert_in_epsilon(127.04540166305617, worksheet.output_ac379, 0.001); end
  def test_output_ac382; assert_in_epsilon(1.0341655540125947, worksheet.output_ac382, 0.001); end
  def test_output_ak424; assert_in_delta(0.15240217344426704, worksheet.output_ak424, 0.001); end
  def test_control_ae44; assert_in_delta(-0.8475978265557329, worksheet.control_ae44, 0.001); end
  def test_control_ap44; assert_equal("XI.f", worksheet.control_ap44); end
  def test_control_aq44; assert_equal("Pulp & Paper Industry Production", worksheet.control_aq44); end
  def test_control_ar44; assert_in_epsilon(20, worksheet.control_ar44, 0.001); end
  def test_control_as44; assert_in_epsilon(20, worksheet.control_as44, 0.001); end
  def test_control_at44; assert_in_epsilon(20, worksheet.control_at44, 0.001); end
  def test_control_au44; assert_in_epsilon(20, worksheet.control_au44, 0.001); end
  def test_control_av44; assert_in_epsilon(20, worksheet.control_av44, 0.001); end
  def test_control_aw44; assert_in_epsilon(20, worksheet.control_aw44, 0.001); end
  def test_control_ax44; assert_in_epsilon(20, worksheet.control_ax44, 0.001); end
  def test_control_ay44; assert_in_epsilon(20, worksheet.control_ay44, 0.001); end
  def test_control_az44; assert_in_epsilon(20, worksheet.control_az44, 0.001); end
  def test_control_ba44; assert_in_epsilon(20, worksheet.control_ba44, 0.001); end
  def test_control_f45; assert_equal("Energy Intensity of Output", worksheet.control_f45); end
  def test_control_p45; assert_in_epsilon(40, worksheet.control_p45, 0.001); end
  def test_control_q45; assert_equal("Energy efficiency increases by +10%", worksheet.control_q45); end
  def test_control_r45; assert_equal("Energy efficiency increases by +15%; liquid fuels substituted by gas;  solid fuels substituted at 70% by biomass in Kraft pulp mill", worksheet.control_r45); end
  def test_control_s45; assert_equal("Energy efficiency increases by +20%; all liquid fuels substituted by gas; solid fuels substituted at 85% by biomass in Kraft pulp mill", worksheet.control_s45); end
  def test_control_t45; assert_equal("Energy efficiency increases by +25%; all liquid fuels substituted by gas; solid fuels substituted at 95% by biomass in Kraft pulp mill", worksheet.control_t45); end
  def test_control_u45; assert_equal(" ", worksheet.control_u45); end
  def test_control_ap45; assert_in_delta(0, (worksheet.control_ap45||0), 0.001); end
  def test_control_aq45; assert_equal("Energy Intensity of Output", worksheet.control_aq45); end
  def test_control_ar45; assert_in_epsilon(10, worksheet.control_ar45, 0.001); end
  def test_control_as45; assert_in_epsilon(30, worksheet.control_as45, 0.001); end
  def test_control_at45; assert_in_epsilon(30, worksheet.control_at45, 0.001); end
  def test_control_au45; assert_in_epsilon(30, worksheet.control_au45, 0.001); end
  def test_control_av45; assert_in_epsilon(40, worksheet.control_av45, 0.001); end
  def test_control_aw45; assert_in_epsilon(40, worksheet.control_aw45, 0.001); end
  def test_control_ax45; assert_in_epsilon(40, worksheet.control_ax45, 0.001); end
  def test_control_ay45; assert_in_epsilon(20, worksheet.control_ay45, 0.001); end
  def test_control_az45; assert_in_epsilon(30, worksheet.control_az45, 0.001); end
  def test_control_ba45; assert_in_epsilon(40, worksheet.control_ba45, 0.001); end
  def test_control_e46; assert_equal("XI.g", worksheet.control_e46); end
  def test_control_f46; assert_equal("Oil & Gas Industry Production", worksheet.control_f46); end
  def test_control_p46; assert_in_epsilon(40, worksheet.control_p46, 0.001); end
  def test_control_q46; assert_equal("Reduction of -0.2% per year (-8% production by 2050); related to reference trajectory from 100% RE study taking into account only 202020 goals of energy-climate package", worksheet.control_q46); end
  def test_control_r46; assert_equal("Reduction of at least -0.9% per year (-30% by 2050); but decrease will be hardlinked  with the demand from other sectors", worksheet.control_r46); end
  def test_control_s46; assert_equal("Reduction of -1.7% per year (-50% by 2050); but decrease will be hardlinked with the demand from other sectors", worksheet.control_s46); end
  def test_control_t46; assert_equal("Correlation to the evolution of fuel demand in the other sectors", worksheet.control_t46); end
  def test_control_u46; assert_equal(" ", worksheet.control_u46); end
  def test_control_ae46; assert_equal("vs.  1990 level", worksheet.control_ae46); end
  def test_control_ap46; assert_equal("XI.g", worksheet.control_ap46); end
  def test_control_aq46; assert_equal("Oil & Gas Industry Production", worksheet.control_aq46); end
  def test_control_ar46; assert_in_epsilon(40, worksheet.control_ar46, 0.001); end
  def test_control_as46; assert_in_epsilon(40, worksheet.control_as46, 0.001); end
  def test_control_at46; assert_in_epsilon(40, worksheet.control_at46, 0.001); end
  def test_control_au46; assert_in_epsilon(40, worksheet.control_au46, 0.001); end
  def test_control_av46; assert_in_epsilon(40, worksheet.control_av46, 0.001); end
  def test_control_aw46; assert_in_epsilon(40, worksheet.control_aw46, 0.001); end
  def test_control_ax46; assert_in_epsilon(40, worksheet.control_ax46, 0.001); end
  def test_control_ay46; assert_in_epsilon(40, worksheet.control_ay46, 0.001); end
  def test_control_az46; assert_in_epsilon(40, worksheet.control_az46, 0.001); end
  def test_control_ba46; assert_in_epsilon(40, worksheet.control_ba46, 0.001); end
  def test_control_f47; assert_equal("Energy Intensity of Output", worksheet.control_f47); end
  def test_control_p47; assert_in_epsilon(40, worksheet.control_p47, 0.001); end
  def test_control_q47; assert_equal("Energy efficiency increases by +10%", worksheet.control_q47); end
  def test_control_r47; assert_equal("Energy efficiency increases by +18%; 10% extra implementation of CHP; fuel substituted at 25% by natural gas", worksheet.control_r47); end
  def test_control_s47; assert_equal("Energy efficiency increases by +30%; 15% extra implementation of CHP; fuel substituted at 50% by natural gasProcess improvement applied starting from 2030, 15% reduction energy use", worksheet.control_s47); end
  def test_control_t47; assert_equal("Energy efficiency increases by +50%; 20% extra implementation of CHP; Fuel substituted at 100% by natural gasProcess improvements applied starting from 2020, 23% reduction energy use", worksheet.control_t47); end
  def test_control_u47; assert_equal(" ", worksheet.control_u47); end
  def test_control_ap47; assert_in_delta(0, (worksheet.control_ap47||0), 0.001); end
  def test_control_aq47; assert_equal("Energy Intensity of Output", worksheet.control_aq47); end
  def test_control_ar47; assert_in_epsilon(10, worksheet.control_ar47, 0.001); end
  def test_control_as47; assert_in_epsilon(30, worksheet.control_as47, 0.001); end
  def test_control_at47; assert_in_epsilon(30, worksheet.control_at47, 0.001); end
  def test_control_au47; assert_in_epsilon(30, worksheet.control_au47, 0.001); end
  def test_control_av47; assert_in_epsilon(40, worksheet.control_av47, 0.001); end
  def test_control_aw47; assert_in_epsilon(40, worksheet.control_aw47, 0.001); end
  def test_control_ax47; assert_in_epsilon(40, worksheet.control_ax47, 0.001); end
  def test_control_ay47; assert_in_epsilon(20, worksheet.control_ay47, 0.001); end
  def test_control_az47; assert_in_epsilon(30, worksheet.control_az47, 0.001); end
  def test_control_ba47; assert_in_epsilon(40, worksheet.control_ba47, 0.001); end
  def test_control_e48; assert_equal("XI.h", worksheet.control_e48); end
  def test_control_f48; assert_equal("Food, drinks and tobacco Industry Production", worksheet.control_f48); end
  def test_control_p48; assert_in_epsilon(40, worksheet.control_p48, 0.001); end
  def test_control_q48; assert_equal("Growth of +2% per year (+120% by 2050)", worksheet.control_q48); end
  def test_control_r48; assert_equal("Growth of +1.3% per year (+68% by 2050)", worksheet.control_r48); end
  def test_control_s48; assert_equal("Stabilised without growth", worksheet.control_s48); end
  def test_control_t48; assert_equal("Correlation to the evolution of agriculture production (both vegetal and animal)", worksheet.control_t48); end
  def test_control_u48; assert_equal(" ", worksheet.control_u48); end
  def test_control_ap48; assert_equal("XI.h", worksheet.control_ap48); end
  def test_control_aq48; assert_equal("Food, drinks and tobacco Industry Production", worksheet.control_aq48); end
  def test_control_ar48; assert_in_epsilon(40, worksheet.control_ar48, 0.001); end
  def test_control_as48; assert_in_epsilon(40, worksheet.control_as48, 0.001); end
  def test_control_at48; assert_in_epsilon(40, worksheet.control_at48, 0.001); end
  def test_control_au48; assert_in_epsilon(40, worksheet.control_au48, 0.001); end
  def test_control_av48; assert_in_epsilon(40, worksheet.control_av48, 0.001); end
  def test_control_aw48; assert_in_epsilon(40, worksheet.control_aw48, 0.001); end
  def test_control_ax48; assert_in_epsilon(40, worksheet.control_ax48, 0.001); end
  def test_control_ay48; assert_in_epsilon(40, worksheet.control_ay48, 0.001); end
  def test_control_az48; assert_in_epsilon(40, worksheet.control_az48, 0.001); end
  def test_control_ba48; assert_in_epsilon(40, worksheet.control_ba48, 0.001); end
  def test_control_f49; assert_equal("Energy Intensity of Output", worksheet.control_f49); end
  def test_control_p49; assert_in_epsilon(40, worksheet.control_p49, 0.001); end
  def test_control_q49; assert_equal("Energy efficiency increases by +10%", worksheet.control_q49); end
  def test_control_r49; assert_equal("Energy efficiency increases by +20%, all solid+liquid fuels subsituted by gas", worksheet.control_r49); end
  def test_control_s49; assert_equal("Energy efficiency increased by +30% ; all solid+liquid fuels switched to gas; gas substituted at 50% by biogas", worksheet.control_s49); end
  def test_control_t49; assert_equal("Energy efficiency increases by +40%; all solid+liquid fuels substituted by gas; gas substituted at 90% by biogas", worksheet.control_t49); end
  def test_control_u49; assert_equal(" ", worksheet.control_u49); end
  def test_control_ap49; assert_in_delta(0, (worksheet.control_ap49||0), 0.001); end
  def test_control_aq49; assert_equal("Energy Intensity of Output", worksheet.control_aq49); end
  def test_control_ar49; assert_in_epsilon(10, worksheet.control_ar49, 0.001); end
  def test_control_as49; assert_in_epsilon(30, worksheet.control_as49, 0.001); end
  def test_control_at49; assert_in_epsilon(30, worksheet.control_at49, 0.001); end
  def test_control_au49; assert_in_epsilon(30, worksheet.control_au49, 0.001); end
  def test_control_av49; assert_in_epsilon(40, worksheet.control_av49, 0.001); end
  def test_control_aw49; assert_in_epsilon(40, worksheet.control_aw49, 0.001); end
  def test_control_ax49; assert_in_epsilon(40, worksheet.control_ax49, 0.001); end
  def test_control_ay49; assert_in_epsilon(20, worksheet.control_ay49, 0.001); end
  def test_control_az49; assert_in_epsilon(30, worksheet.control_az49, 0.001); end
  def test_control_ba49; assert_in_epsilon(40, worksheet.control_ba49, 0.001); end
  def test_control_e50; assert_equal("XI.j", worksheet.control_e50); end
  def test_control_f50; assert_equal("Non-Ferrous metals Industry Production", worksheet.control_f50); end
  def test_control_p50; assert_in_epsilon(30, worksheet.control_p50, 0.001); end
  def test_control_q50; assert_equal("Growth of +0.8% per year (+30% by 2050)", worksheet.control_q50); end
  def test_control_r50; assert_equal("Stabilised production without growth", worksheet.control_r50); end
  def test_control_s50; assert_equal("Reduction of -0.8% per year (-30% by 2050)", worksheet.control_s50); end
  def test_control_t50; assert_equal(" ", worksheet.control_t50); end
  def test_control_u50; assert_equal(" ", worksheet.control_u50); end
  def test_control_ap50; assert_equal(:ref, worksheet.control_ap50); end
  def test_control_aq50; assert_equal(:ref, worksheet.control_aq50); end
  def test_control_ar50; assert_in_epsilon(20, worksheet.control_ar50, 0.001); end
  def test_control_as50; assert_in_epsilon(20, worksheet.control_as50, 0.001); end
  def test_control_at50; assert_in_epsilon(20, worksheet.control_at50, 0.001); end
  def test_control_au50; assert_in_epsilon(20, worksheet.control_au50, 0.001); end
  def test_control_av50; assert_in_epsilon(20, worksheet.control_av50, 0.001); end
  def test_control_aw50; assert_in_epsilon(20, worksheet.control_aw50, 0.001); end
  def test_control_ax50; assert_in_epsilon(20, worksheet.control_ax50, 0.001); end
  def test_control_ay50; assert_in_epsilon(20, worksheet.control_ay50, 0.001); end
  def test_control_az50; assert_in_epsilon(20, worksheet.control_az50, 0.001); end
  def test_control_ba50; assert_in_epsilon(20, worksheet.control_ba50, 0.001); end
  def test_control_f51; assert_equal("Energy Intensity of Output", worksheet.control_f51); end
  def test_control_p51; assert_in_epsilon(40, worksheet.control_p51, 0.001); end
  def test_control_q51; assert_equal("Energy efficiency increases by +5%", worksheet.control_q51); end
  def test_control_r51; assert_equal("Energy efficiency increases by +10%; all liquid fuels substituted by gas; gas substituted at 25% by biogas", worksheet.control_r51); end
  def test_control_s51; assert_equal("Energy efficiency increases by +20%; all liquid fuels substituted by gas;  gas substituted at 50% by biogas", worksheet.control_s51); end
  def test_control_t51; assert_equal("Energy efficiency increases by +30%; all liquid fuels substituted by gas; gas substituted at 90% by biogas;  half of the furnaces are switched to electric", worksheet.control_t51); end
  def test_control_u51; assert_equal(" ", worksheet.control_u51); end
  def test_control_ap51; assert_equal(:ref, worksheet.control_ap51); end
  def test_control_aq51; assert_equal(:ref, worksheet.control_aq51); end
  def test_control_ar51; assert_in_epsilon(10, worksheet.control_ar51, 0.001); end
  def test_control_as51; assert_in_epsilon(30, worksheet.control_as51, 0.001); end
  def test_control_at51; assert_in_epsilon(30, worksheet.control_at51, 0.001); end
  def test_control_au51; assert_in_epsilon(30, worksheet.control_au51, 0.001); end
  def test_control_av51; assert_in_epsilon(40, worksheet.control_av51, 0.001); end
  def test_control_aw51; assert_in_epsilon(40, worksheet.control_aw51, 0.001); end
  def test_control_ax51; assert_in_epsilon(40, worksheet.control_ax51, 0.001); end
  def test_control_ay51; assert_in_epsilon(20, worksheet.control_ay51, 0.001); end
  def test_control_az51; assert_in_epsilon(30, worksheet.control_az51, 0.001); end
  def test_control_ba51; assert_in_epsilon(40, worksheet.control_ba51, 0.001); end
  def test_control_e52; assert_equal("XI.k", worksheet.control_e52); end
  def test_control_f52; assert_equal("Construction industry Production", worksheet.control_f52); end
  def test_control_p52; assert_in_epsilon(30, worksheet.control_p52, 0.001); end
  def test_control_q52; assert_equal("Growth of +3.5% per year between 2015-2025; stable after 2025 (+68% by 2050 production)", worksheet.control_q52); end
  def test_control_r52; assert_equal("Growth of +2.5% between 2015-2025; stable after 2025 (+44% by 2050)", worksheet.control_r52); end
  def test_control_s52; assert_equal("Growth of +3.7%/year between 2015-2015; stable after 2015 (+20% by 2050)", worksheet.control_s52); end
  def test_control_t52; assert_equal(" ", worksheet.control_t52); end
  def test_control_u52; assert_equal(" ", worksheet.control_u52); end
  def test_control_ap52; assert_equal("XI.j", worksheet.control_ap52); end
  def test_control_aq52; assert_equal("Non-Ferrous metals Industry Production", worksheet.control_aq52); end
  def test_control_ar52; assert_in_epsilon(20, worksheet.control_ar52, 0.001); end
  def test_control_as52; assert_in_epsilon(20, worksheet.control_as52, 0.001); end
  def test_control_at52; assert_in_epsilon(20, worksheet.control_at52, 0.001); end
  def test_control_au52; assert_in_epsilon(20, worksheet.control_au52, 0.001); end
  def test_control_av52; assert_in_epsilon(20, worksheet.control_av52, 0.001); end
  def test_control_aw52; assert_in_epsilon(20, worksheet.control_aw52, 0.001); end
  def test_control_ax52; assert_in_epsilon(20, worksheet.control_ax52, 0.001); end
  def test_control_ay52; assert_in_epsilon(20, worksheet.control_ay52, 0.001); end
  def test_control_az52; assert_in_epsilon(20, worksheet.control_az52, 0.001); end
  def test_control_ba52; assert_in_epsilon(20, worksheet.control_ba52, 0.001); end
  def test_control_f53; assert_equal("Energy Intensity of Output", worksheet.control_f53); end
  def test_control_p53; assert_in_epsilon(40, worksheet.control_p53, 0.001); end
  def test_control_q53; assert_equal("Energy efficiency increases by +10%", worksheet.control_q53); end
  def test_control_r53; assert_equal("Energy efficiency increases by +20%; all solid+liquid fuels susbsituted by gas; gas subsituted at 25% by biogas", worksheet.control_r53); end
  def test_control_s53; assert_equal("Energy efficiency increases by +30%; all solid & liquid fuels substituted by gas;  gas substituted at 50% by biogas", worksheet.control_s53); end
  def test_control_t53; assert_equal("Energy efficiency increases by +40%; all solid+liquid fuels substituded by gas; all gas substituted by biogas", worksheet.control_t53); end
  def test_control_u53; assert_equal(" ", worksheet.control_u53); end
  def test_control_ap53; assert_in_delta(0, (worksheet.control_ap53||0), 0.001); end
  def test_control_aq53; assert_equal("Energy Intensity of Output", worksheet.control_aq53); end
  def test_control_ar53; assert_in_epsilon(10, worksheet.control_ar53, 0.001); end
  def test_control_as53; assert_in_epsilon(30, worksheet.control_as53, 0.001); end
  def test_control_at53; assert_in_epsilon(30, worksheet.control_at53, 0.001); end
  def test_control_au53; assert_in_epsilon(30, worksheet.control_au53, 0.001); end
  def test_control_av53; assert_in_epsilon(40, worksheet.control_av53, 0.001); end
  def test_control_aw53; assert_in_epsilon(40, worksheet.control_aw53, 0.001); end
  def test_control_ax53; assert_in_epsilon(40, worksheet.control_ax53, 0.001); end
  def test_control_ay53; assert_in_epsilon(20, worksheet.control_ay53, 0.001); end
  def test_control_az53; assert_in_epsilon(30, worksheet.control_az53, 0.001); end
  def test_control_ba53; assert_in_epsilon(40, worksheet.control_ba53, 0.001); end
  def test_control_e54; assert_equal("XI", worksheet.control_e54); end
  def test_control_f54; assert_equal("Industry", worksheet.control_f54); end
  def test_control_u54; assert_equal(" ", worksheet.control_u54); end
  def test_control_ap54; assert_equal("XI.k", worksheet.control_ap54); end
  def test_control_aq54; assert_equal("Construction industry Production", worksheet.control_aq54); end
  def test_control_ar54; assert_in_epsilon(20, worksheet.control_ar54, 0.001); end
  def test_control_as54; assert_in_epsilon(10, worksheet.control_as54, 0.001); end
  def test_control_at54; assert_in_epsilon(10, worksheet.control_at54, 0.001); end
  def test_control_au54; assert_in_epsilon(10, worksheet.control_au54, 0.001); end
  def test_control_av54; assert_in_epsilon(10, worksheet.control_av54, 0.001); end
  def test_control_aw54; assert_in_epsilon(10, worksheet.control_aw54, 0.001); end
  def test_control_ax54; assert_in_epsilon(10, worksheet.control_ax54, 0.001); end
  def test_control_ay54; assert_in_epsilon(10, worksheet.control_ay54, 0.001); end
  def test_control_az54; assert_in_epsilon(10, worksheet.control_az54, 0.001); end
  def test_control_ba54; assert_in_epsilon(10, worksheet.control_ba54, 0.001); end
  def test_control_f55; assert_equal("(iii) Carbon Capture & Storage", worksheet.control_f55); end
  def test_control_h55; assert_in_epsilon(40, worksheet.control_h55, 0.001); end
  def test_control_p55; assert_in_epsilon(40, worksheet.control_p55, 0.001); end
  def test_control_q55; assert_equal("No development", worksheet.control_q55); end
  def test_control_r55; assert_equal("All the installations producing above 1 MtCO2e/year are equiped of CCS and their residual emissions are reduced of 85%", worksheet.control_r55); end
  def test_control_s55; assert_equal("All the installation producing above 300ktCO2e/year are equiped of CCS and their residual emissions are reduced by 85%", worksheet.control_s55); end
  def test_control_t55; assert_equal("All the industrial installations of the industrial sectors above and producing significant GES emissions are equiped, enabling to reduce residual emissions by ~85%For Pulp&Paper, when CCS is applied, black liquor gasification is as well ", worksheet.control_t55); end
  def test_control_u55; assert_equal(" ", worksheet.control_u55); end
  def test_control_ap55; assert_in_delta(0, (worksheet.control_ap55||0), 0.001); end
  def test_control_aq55; assert_equal("Energy Intensity of Output", worksheet.control_aq55); end
  def test_control_ar55; assert_in_epsilon(10, worksheet.control_ar55, 0.001); end
  def test_control_as55; assert_in_epsilon(30, worksheet.control_as55, 0.001); end
  def test_control_at55; assert_in_epsilon(30, worksheet.control_at55, 0.001); end
  def test_control_au55; assert_in_epsilon(30, worksheet.control_au55, 0.001); end
  def test_control_av55; assert_in_epsilon(40, worksheet.control_av55, 0.001); end
  def test_control_aw55; assert_in_epsilon(40, worksheet.control_aw55, 0.001); end
  def test_control_ax55; assert_in_epsilon(40, worksheet.control_ax55, 0.001); end
  def test_control_ay55; assert_in_epsilon(20, worksheet.control_ay55, 0.001); end
  def test_control_az55; assert_in_epsilon(30, worksheet.control_az55, 0.001); end
  def test_control_ba55; assert_in_epsilon(40, worksheet.control_ba55, 0.001); end
  def test_control_ap56; assert_equal("XI", worksheet.control_ap56); end
  def test_control_aq56; assert_equal("Industry", worksheet.control_aq56); end
  def test_control_ap57; assert_in_delta(0, (worksheet.control_ap57||0), 0.001); end
  def test_control_aq57; assert_equal("(iii) Carbon Capture & Storage", worksheet.control_aq57); end
  def test_control_ar57; assert_in_epsilon(10, worksheet.control_ar57, 0.001); end
  def test_control_as57; assert_in_epsilon(20, worksheet.control_as57, 0.001); end
  def test_control_at57; assert_in_epsilon(10, worksheet.control_at57, 0.001); end
  def test_control_au57; assert_in_epsilon(30, worksheet.control_au57, 0.001); end
  def test_control_av57; assert_in_epsilon(40, worksheet.control_av57, 0.001); end
  def test_control_aw57; assert_in_epsilon(20, worksheet.control_aw57, 0.001); end
  def test_control_ax57; assert_in_epsilon(20, worksheet.control_ax57, 0.001); end
  def test_control_ay57; assert_in_epsilon(20, worksheet.control_ay57, 0.001); end
  def test_control_az57; assert_in_epsilon(30, worksheet.control_az57, 0.001); end
  def test_control_ba57; assert_in_epsilon(40, worksheet.control_ba57, 0.001); end
  def test_control_ar61; assert_equal("Reference", worksheet.control_ar61); end
  def test_control_as61; assert_equal("Core", worksheet.control_as61); end
  def test_control_at61; assert_equal("Behavior", worksheet.control_at61); end
  def test_control_au61; assert_equal("Technology", worksheet.control_au61); end
  def test_control_av61; assert_equal("-95% GHG", worksheet.control_av61); end
  def test_control_aw61; assert_equal("EU integration", worksheet.control_aw61); end
  def test_control_ax61; assert_equal("Sensitivity", worksheet.control_ax61); end
  def test_control_ay61; assert_equal("All levers at level 2", worksheet.control_ay61); end
  def test_control_az61; assert_equal("All levers at level 3", worksheet.control_az61); end
  def test_control_ba61; assert_equal("All levers at level 3", worksheet.control_ba61); end
  def test_control_ap64; assert_equal("Energy prices trajectories", worksheet.control_ap64); end
  def test_control_aq64; assert_equal("Energy prices trajectories", worksheet.control_aq64); end
  def test_control_ar64; assert_in_epsilon(30, worksheet.control_ar64, 0.001); end
  def test_control_as64; assert_in_epsilon(10, worksheet.control_as64, 0.001); end
  def test_control_at64; assert_in_epsilon(10, worksheet.control_at64, 0.001); end
  def test_control_au64; assert_in_epsilon(10, worksheet.control_au64, 0.001); end
  def test_control_av64; assert_in_epsilon(10, worksheet.control_av64, 0.001); end
  def test_control_aw64; assert_in_epsilon(10, worksheet.control_aw64, 0.001); end
  def test_control_ax64; assert_in_epsilon(10, worksheet.control_ax64, 0.001); end
  def test_control_ay64; assert_in_epsilon(20, worksheet.control_ay64, 0.001); end
  def test_control_az64; assert_in_epsilon(20, worksheet.control_az64, 0.001); end
  def test_control_ba64; assert_in_epsilon(20, worksheet.control_ba64, 0.001); end
  def test_control_ap65; assert_equal("III.a.1", worksheet.control_ap65); end
  def test_control_aq65; assert_equal("Onshore wind", worksheet.control_aq65); end
  def test_control_ar65; assert_in_epsilon(10, worksheet.control_ar65, 0.001); end
  def test_control_as65; assert_in_epsilon(15, worksheet.control_as65, 0.001); end
  def test_control_at65; assert_in_epsilon(12, worksheet.control_at65, 0.001); end
  def test_control_au65; assert_in_epsilon(15, worksheet.control_au65, 0.001); end
  def test_control_av65; assert_in_epsilon(11, worksheet.control_av65, 0.001); end
  def test_control_aw65; assert_in_epsilon(25, worksheet.control_aw65, 0.001); end
  def test_control_ax65; assert_in_epsilon(28, worksheet.control_ax65, 0.001); end
  def test_control_ay65; assert_in_epsilon(20, worksheet.control_ay65, 0.001); end
  def test_control_az65; assert_in_epsilon(30, worksheet.control_az65, 0.001); end
  def test_control_ba65; assert_in_epsilon(40, worksheet.control_ba65, 0.001); end
  def test_control_ap66; assert_equal("III.a.2", worksheet.control_ap66); end
  def test_control_aq66; assert_equal("Offshore wind", worksheet.control_aq66); end
  def test_control_ar66; assert_in_epsilon(10, worksheet.control_ar66, 0.001); end
  def test_control_as66; assert_in_epsilon(15, worksheet.control_as66, 0.001); end
  def test_control_at66; assert_in_epsilon(12, worksheet.control_at66, 0.001); end
  def test_control_au66; assert_in_epsilon(15, worksheet.control_au66, 0.001); end
  def test_control_av66; assert_in_epsilon(11, worksheet.control_av66, 0.001); end
  def test_control_aw66; assert_in_epsilon(25, worksheet.control_aw66, 0.001); end
  def test_control_ax66; assert_in_epsilon(28, worksheet.control_ax66, 0.001); end
  def test_control_ay66; assert_in_epsilon(20, worksheet.control_ay66, 0.001); end
  def test_control_az66; assert_in_epsilon(30, worksheet.control_az66, 0.001); end
  def test_control_ba66; assert_in_epsilon(40, worksheet.control_ba66, 0.001); end
  def test_control_ap67; assert_equal("IV.a", worksheet.control_ap67); end
  def test_control_aq67; assert_equal("Solar PV", worksheet.control_aq67); end
  def test_control_ar67; assert_in_epsilon(10, worksheet.control_ar67, 0.001); end
  def test_control_as67; assert_in_epsilon(15, worksheet.control_as67, 0.001); end
  def test_control_at67; assert_in_epsilon(12, worksheet.control_at67, 0.001); end
  def test_control_au67; assert_in_epsilon(15, worksheet.control_au67, 0.001); end
  def test_control_av67; assert_in_epsilon(11, worksheet.control_av67, 0.001); end
  def test_control_aw67; assert_in_epsilon(25, worksheet.control_aw67, 0.001); end
  def test_control_ax67; assert_in_epsilon(28, worksheet.control_ax67, 0.001); end
  def test_control_ay67; assert_in_epsilon(20, worksheet.control_ay67, 0.001); end
  def test_control_az67; assert_in_epsilon(30, worksheet.control_az67, 0.001); end
  def test_control_ba67; assert_in_epsilon(40, worksheet.control_ba67, 0.001); end
  def test_control_ap68; assert_equal("III.b", worksheet.control_ap68); end
  def test_control_aq68; assert_equal("Hydroelectric power stations", worksheet.control_aq68); end
  def test_control_ar68; assert_in_epsilon(10, worksheet.control_ar68, 0.001); end
  def test_control_as68; assert_in_epsilon(15, worksheet.control_as68, 0.001); end
  def test_control_at68; assert_in_epsilon(12, worksheet.control_at68, 0.001); end
  def test_control_au68; assert_in_epsilon(15, worksheet.control_au68, 0.001); end
  def test_control_av68; assert_in_epsilon(11, worksheet.control_av68, 0.001); end
  def test_control_aw68; assert_in_epsilon(25, worksheet.control_aw68, 0.001); end
  def test_control_ax68; assert_in_epsilon(28, worksheet.control_ax68, 0.001); end
  def test_control_ay68; assert_in_epsilon(20, worksheet.control_ay68, 0.001); end
  def test_control_az68; assert_in_epsilon(30, worksheet.control_az68, 0.001); end
  def test_control_ba68; assert_in_epsilon(40, worksheet.control_ba68, 0.001); end
  def test_control_ap69; assert_equal("III.d", worksheet.control_ap69); end
  def test_control_aq69; assert_equal("Geothermal electricity", worksheet.control_aq69); end
  def test_control_ar69; assert_in_epsilon(10, worksheet.control_ar69, 0.001); end
  def test_control_as69; assert_in_epsilon(30, worksheet.control_as69, 0.001); end
  def test_control_at69; assert_in_epsilon(30, worksheet.control_at69, 0.001); end
  def test_control_au69; assert_in_epsilon(30, worksheet.control_au69, 0.001); end
  def test_control_av69; assert_in_epsilon(25, worksheet.control_av69, 0.001); end
  def test_control_aw69; assert_in_epsilon(25, worksheet.control_aw69, 0.001); end
  def test_control_ax69; assert_in_epsilon(27, worksheet.control_ax69, 0.001); end
  def test_control_ay69; assert_in_epsilon(20, worksheet.control_ay69, 0.001); end
  def test_control_az69; assert_in_epsilon(30, worksheet.control_az69, 0.001); end
  def test_control_ba69; assert_in_epsilon(40, worksheet.control_ba69, 0.001); end
  def test_control_ap70; assert_equal("IV.c", worksheet.control_ap70); end
  def test_control_aq70; assert_equal("Small-scale wind  [UNUSED]", worksheet.control_aq70); end
  def test_control_ar70; assert_in_epsilon(10, worksheet.control_ar70, 0.001); end
  def test_control_as70; assert_in_epsilon(10, worksheet.control_as70, 0.001); end
  def test_control_at70; assert_in_epsilon(10, worksheet.control_at70, 0.001); end
  def test_control_au70; assert_in_epsilon(10, worksheet.control_au70, 0.001); end
  def test_control_av70; assert_in_epsilon(10, worksheet.control_av70, 0.001); end
  def test_control_aw70; assert_in_epsilon(10, worksheet.control_aw70, 0.001); end
  def test_control_ax70; assert_in_epsilon(10, worksheet.control_ax70, 0.001); end
  def test_control_ay70; assert_in_epsilon(20, worksheet.control_ay70, 0.001); end
  def test_control_az70; assert_in_epsilon(10, worksheet.control_az70, 0.001); end
  def test_control_ba70; assert_in_epsilon(10, worksheet.control_ba70, 0.001); end
  def test_control_ap71; assert_equal("III.c", worksheet.control_ap71); end
  def test_control_aq71; assert_equal("Tidal and Wave [UNUSED]", worksheet.control_aq71); end
  def test_control_ar71; assert_in_epsilon(10, worksheet.control_ar71, 0.001); end
  def test_control_as71; assert_in_epsilon(10, worksheet.control_as71, 0.001); end
  def test_control_at71; assert_in_epsilon(10, worksheet.control_at71, 0.001); end
  def test_control_au71; assert_in_epsilon(10, worksheet.control_au71, 0.001); end
  def test_control_av71; assert_in_epsilon(10, worksheet.control_av71, 0.001); end
  def test_control_aw71; assert_in_epsilon(10, worksheet.control_aw71, 0.001); end
  def test_control_ax71; assert_in_epsilon(10, worksheet.control_ax71, 0.001); end
  def test_control_ay71; assert_in_epsilon(20, worksheet.control_ay71, 0.001); end
  def test_control_az71; assert_in_epsilon(10, worksheet.control_az71, 0.001); end
  def test_control_ba71; assert_in_epsilon(10, worksheet.control_ba71, 0.001); end
  def test_control_ap72; assert_equal("IV.b", worksheet.control_ap72); end
  def test_control_aq72; assert_equal("Solar thermal", worksheet.control_aq72); end
  def test_control_ar72; assert_in_epsilon(10, worksheet.control_ar72, 0.001); end
  def test_control_as72; assert_in_epsilon(30, worksheet.control_as72, 0.001); end
  def test_control_at72; assert_in_epsilon(25, worksheet.control_at72, 0.001); end
  def test_control_au72; assert_in_epsilon(30, worksheet.control_au72, 0.001); end
  def test_control_av72; assert_in_epsilon(25, worksheet.control_av72, 0.001); end
  def test_control_aw72; assert_in_epsilon(25, worksheet.control_aw72, 0.001); end
  def test_control_ax72; assert_in_epsilon(25, worksheet.control_ax72, 0.001); end
  def test_control_ay72; assert_in_epsilon(20, worksheet.control_ay72, 0.001); end
  def test_control_az72; assert_in_epsilon(30, worksheet.control_az72, 0.001); end
  def test_control_ba72; assert_in_epsilon(40, worksheet.control_ba72, 0.001); end
  def test_control_ap73; assert_equal("II.a", worksheet.control_ap73); end
  def test_control_aq73; assert_equal("Nuclear power", worksheet.control_aq73); end
  def test_control_ar73; assert_in_epsilon(10, worksheet.control_ar73, 0.001); end
  def test_control_as73; assert_in_epsilon(10, worksheet.control_as73, 0.001); end
  def test_control_at73; assert_in_epsilon(10, worksheet.control_at73, 0.001); end
  def test_control_au73; assert_in_epsilon(10, worksheet.control_au73, 0.001); end
  def test_control_av73; assert_in_epsilon(10, worksheet.control_av73, 0.001); end
  def test_control_aw73; assert_in_epsilon(10, worksheet.control_aw73, 0.001); end
  def test_control_ax73; assert_in_epsilon(10, worksheet.control_ax73, 0.001); end
  def test_control_ay73; assert_in_epsilon(10, worksheet.control_ay73, 0.001); end
  def test_control_az73; assert_in_epsilon(10, worksheet.control_az73, 0.001); end
  def test_control_ba73; assert_in_epsilon(10, worksheet.control_ba73, 0.001); end
  def test_control_ap74; assert_equal("I.b", worksheet.control_ap74); end
  def test_control_aq74; assert_equal("Carbon Capture Storage (CCS)", worksheet.control_aq74); end
  def test_control_ap75; assert_in_delta(0, (worksheet.control_ap75||0), 0.001); end
  def test_control_aq75; assert_equal("(i) Power Stations", worksheet.control_aq75); end
  def test_control_ar75; assert_in_epsilon(10, worksheet.control_ar75, 0.001); end
  def test_control_as75; assert_in_epsilon(10, worksheet.control_as75, 0.001); end
  def test_control_at75; assert_in_epsilon(10, worksheet.control_at75, 0.001); end
  def test_control_au75; assert_in_epsilon(20, worksheet.control_au75, 0.001); end
  def test_control_av75; assert_in_epsilon(10, worksheet.control_av75, 0.001); end
  def test_control_aw75; assert_in_epsilon(10, worksheet.control_aw75, 0.001); end
  def test_control_ax75; assert_in_epsilon(10, worksheet.control_ax75, 0.001); end
  def test_control_ay75; assert_in_epsilon(20, worksheet.control_ay75, 0.001); end
  def test_control_az75; assert_in_epsilon(30, worksheet.control_az75, 0.001); end
  def test_control_ba75; assert_in_epsilon(40, worksheet.control_ba75, 0.001); end
  def test_control_ap76; assert_in_delta(0, (worksheet.control_ap76||0), 0.001); end
  def test_control_aq76; assert_equal("(ii) Power Station fuel mix", worksheet.control_aq76); end
  def test_control_ar76; assert_in_epsilon(10, worksheet.control_ar76, 0.001); end
  def test_control_as76; assert_in_epsilon(10, worksheet.control_as76, 0.001); end
  def test_control_at76; assert_in_epsilon(10, worksheet.control_at76, 0.001); end
  def test_control_au76; assert_in_epsilon(30, worksheet.control_au76, 0.001); end
  def test_control_av76; assert_in_epsilon(10, worksheet.control_av76, 0.001); end
  def test_control_aw76; assert_in_epsilon(10, worksheet.control_aw76, 0.001); end
  def test_control_ax76; assert_in_epsilon(10, worksheet.control_ax76, 0.001); end
  def test_control_ay76; assert_in_epsilon(20, worksheet.control_ay76, 0.001); end
  def test_control_az76; assert_in_epsilon(30, worksheet.control_az76, 0.001); end
  def test_control_ba76; assert_in_epsilon(40, worksheet.control_ba76, 0.001); end
  def test_control_ap77; assert_equal("I.a", worksheet.control_ap77); end
  def test_control_aq77; assert_equal("Biomass and gas power stations", worksheet.control_aq77); end
  def test_control_ar77; assert_in_epsilon(10, worksheet.control_ar77, 0.001); end
  def test_control_as77; assert_in_epsilon(30, worksheet.control_as77, 0.001); end
  def test_control_at77; assert_in_epsilon(15, worksheet.control_at77, 0.001); end
  def test_control_au77; assert_in_epsilon(30, worksheet.control_au77, 0.001); end
  def test_control_av77; assert_in_epsilon(30, worksheet.control_av77, 0.001); end
  def test_control_aw77; assert_in_epsilon(25, worksheet.control_aw77, 0.001); end
  def test_control_ax77; assert_in_epsilon(27, worksheet.control_ax77, 0.001); end
  def test_control_ay77; assert_in_epsilon(20, worksheet.control_ay77, 0.001); end
  def test_control_az77; assert_in_epsilon(30, worksheet.control_az77, 0.001); end
  def test_control_ba77; assert_in_epsilon(40, worksheet.control_ba77, 0.001); end
  def test_control_ap78; assert_equal("VII.a", worksheet.control_ap78); end
  def test_control_aq78; assert_equal("Imports of decarbonized electricity", worksheet.control_aq78); end
  def test_control_ap79; assert_in_delta(0, (worksheet.control_ap79||0), 0.001); end
  def test_control_aq79; assert_equal("(i) Share of imported electricity", worksheet.control_aq79); end
  def test_control_ar79; assert_in_epsilon(15, worksheet.control_ar79, 0.001); end
  def test_control_as79; assert_in_epsilon(15, worksheet.control_as79, 0.001); end
  def test_control_at79; assert_in_epsilon(10, worksheet.control_at79, 0.001); end
  def test_control_au79; assert_in_epsilon(15, worksheet.control_au79, 0.001); end
  def test_control_av79; assert_in_epsilon(15, worksheet.control_av79, 0.001); end
  def test_control_aw79; assert_in_epsilon(35, worksheet.control_aw79, 0.001); end
  def test_control_ax79; assert_in_epsilon(35, worksheet.control_ax79, 0.001); end
  def test_control_ay79; assert_in_epsilon(10, worksheet.control_ay79, 0.001); end
  def test_control_az79; assert_in_epsilon(10, worksheet.control_az79, 0.001); end
  def test_control_ba79; assert_in_epsilon(40, worksheet.control_ba79, 0.001); end
  def test_control_ap80; assert_in_delta(0, (worksheet.control_ap80||0), 0.001); end
  def test_control_aq80; assert_equal("(ii) Share of RES in imported electricity", worksheet.control_aq80); end
  def test_control_ar80; assert_in_epsilon(10, worksheet.control_ar80, 0.001); end
  def test_control_as80; assert_in_epsilon(10, worksheet.control_as80, 0.001); end
  def test_control_at80; assert_in_epsilon(10, worksheet.control_at80, 0.001); end
  def test_control_au80; assert_in_epsilon(10, worksheet.control_au80, 0.001); end
  def test_control_av80; assert_in_epsilon(10, worksheet.control_av80, 0.001); end
  def test_control_aw80; assert_in_epsilon(10, worksheet.control_aw80, 0.001); end
  def test_control_ax80; assert_in_epsilon(10, worksheet.control_ax80, 0.001); end
  def test_control_ay80; assert_in_epsilon(10, worksheet.control_ay80, 0.001); end
  def test_control_az80; assert_in_epsilon(10, worksheet.control_az80, 0.001); end
  def test_control_ba80; assert_in_epsilon(10, worksheet.control_ba80, 0.001); end
  def test_control_ap81; assert_equal("VI.a", worksheet.control_ap81); end
  def test_control_aq81; assert_equal("Agriculture and land use", worksheet.control_aq81); end
  def test_control_aq82; assert_equal("(i) Number of animals and meat consumption", worksheet.control_aq82); end
  def test_control_ar82; assert_in_delta(1, worksheet.control_ar82, 0.001); end
  def test_control_as82; assert_in_epsilon(3, worksheet.control_as82, 0.001); end
  def test_control_at82; assert_in_epsilon(4, worksheet.control_at82, 0.001); end
  def test_control_au82; assert_in_epsilon(2, worksheet.control_au82, 0.001); end
  def test_control_av82; assert_in_epsilon(4, worksheet.control_av82, 0.001); end
  def test_control_aw82; assert_in_epsilon(4, worksheet.control_aw82, 0.001); end
  def test_control_ax82; assert_in_epsilon(4, worksheet.control_ax82, 0.001); end
  def test_control_ay82; assert_in_epsilon(2, worksheet.control_ay82, 0.001); end
  def test_control_az82; assert_in_epsilon(3, worksheet.control_az82, 0.001); end
  def test_control_ba82; assert_in_epsilon(4, worksheet.control_ba82, 0.001); end
  def test_control_aq83; assert_equal("(ii) Emissions intensity per animal (enteric fermentation)", worksheet.control_aq83); end
  def test_control_ar83; assert_in_delta(1, worksheet.control_ar83, 0.001); end
  def test_control_as83; assert_in_epsilon(3, worksheet.control_as83, 0.001); end
  def test_control_at83; assert_in_epsilon(4, worksheet.control_at83, 0.001); end
  def test_control_au83; assert_in_epsilon(3, worksheet.control_au83, 0.001); end
  def test_control_av83; assert_in_epsilon(4, worksheet.control_av83, 0.001); end
  def test_control_aw83; assert_in_epsilon(4, worksheet.control_aw83, 0.001); end
  def test_control_ax83; assert_in_epsilon(4, worksheet.control_ax83, 0.001); end
  def test_control_ay83; assert_in_epsilon(2, worksheet.control_ay83, 0.001); end
  def test_control_az83; assert_in_epsilon(3, worksheet.control_az83, 0.001); end
  def test_control_ba83; assert_in_epsilon(4, worksheet.control_ba83, 0.001); end
  def test_control_aq84; assert_equal("(iii) Emissions intensity per animal (manure management)", worksheet.control_aq84); end
  def test_control_ar84; assert_in_delta(1, worksheet.control_ar84, 0.001); end
  def test_control_as84; assert_in_epsilon(3, worksheet.control_as84, 0.001); end
  def test_control_at84; assert_in_epsilon(4, worksheet.control_at84, 0.001); end
  def test_control_au84; assert_in_epsilon(3, worksheet.control_au84, 0.001); end
  def test_control_av84; assert_in_epsilon(4, worksheet.control_av84, 0.001); end
  def test_control_aw84; assert_in_epsilon(4, worksheet.control_aw84, 0.001); end
  def test_control_ax84; assert_in_epsilon(4, worksheet.control_ax84, 0.001); end
  def test_control_ay84; assert_in_epsilon(2, worksheet.control_ay84, 0.001); end
  def test_control_az84; assert_in_epsilon(3, worksheet.control_az84, 0.001); end
  def test_control_ba84; assert_in_epsilon(4, worksheet.control_ba84, 0.001); end
  def test_control_aq85; assert_equal("(iv) Evolution of soil emissions", worksheet.control_aq85); end
  def test_control_ar85; assert_in_delta(1, worksheet.control_ar85, 0.001); end
  def test_control_as85; assert_in_epsilon(3, worksheet.control_as85, 0.001); end
  def test_control_at85; assert_in_epsilon(4, worksheet.control_at85, 0.001); end
  def test_control_au85; assert_in_epsilon(3, worksheet.control_au85, 0.001); end
  def test_control_av85; assert_in_epsilon(4, worksheet.control_av85, 0.001); end
  def test_control_aw85; assert_in_epsilon(4, worksheet.control_aw85, 0.001); end
  def test_control_ax85; assert_in_epsilon(4, worksheet.control_ax85, 0.001); end
  def test_control_ay85; assert_in_epsilon(2, worksheet.control_ay85, 0.001); end
  def test_control_az85; assert_in_epsilon(3, worksheet.control_az85, 0.001); end
  def test_control_ba85; assert_in_epsilon(4, worksheet.control_ba85, 0.001); end
  def test_control_aq86; assert_equal("(v) Belgian indigenous biomass production ", worksheet.control_aq86); end
  def test_control_ar86; assert_in_delta(1, worksheet.control_ar86, 0.001); end
  def test_control_as86; assert_in_epsilon(3, worksheet.control_as86, 0.001); end
  def test_control_at86; assert_in_epsilon(3, worksheet.control_at86, 0.001); end
  def test_control_au86; assert_in_epsilon(3, worksheet.control_au86, 0.001); end
  def test_control_av86; assert_in_epsilon(4, worksheet.control_av86, 0.001); end
  def test_control_aw86; assert_in_epsilon(4, worksheet.control_aw86, 0.001); end
  def test_control_ax86; assert_in_epsilon(4, worksheet.control_ax86, 0.001); end
  def test_control_ay86; assert_in_epsilon(2, worksheet.control_ay86, 0.001); end
  def test_control_az86; assert_in_epsilon(3, worksheet.control_az86, 0.001); end
  def test_control_ba86; assert_in_epsilon(4, worksheet.control_ba86, 0.001); end
  def test_control_ap87; assert_equal("VI.b", worksheet.control_ap87); end
  def test_control_aq87; assert_equal("Volume of Waste & Recycling", worksheet.control_aq87); end
  def test_control_ar87; assert_in_delta(1, worksheet.control_ar87, 0.001); end
  def test_control_as87; assert_in_epsilon(3, worksheet.control_as87, 0.001); end
  def test_control_at87; assert_in_epsilon(4, worksheet.control_at87, 0.001); end
  def test_control_au87; assert_in_epsilon(2, worksheet.control_au87, 0.001); end
  def test_control_av87; assert_in_epsilon(4, worksheet.control_av87, 0.001); end
  def test_control_aw87; assert_in_epsilon(4, worksheet.control_aw87, 0.001); end
  def test_control_ax87; assert_in_epsilon(4, worksheet.control_ax87, 0.001); end
  def test_control_ay87; assert_in_epsilon(2, worksheet.control_ay87, 0.001); end
  def test_control_az87; assert_in_epsilon(3, worksheet.control_az87, 0.001); end
  def test_control_ba87; assert_in_epsilon(4, worksheet.control_ba87, 0.001); end
  def test_control_ap88; assert_equal("VI.c", worksheet.control_ap88); end
  def test_control_aq88; assert_equal("Marine algae  [UNUSED]", worksheet.control_aq88); end
  def test_control_ar88; assert_in_epsilon(10, worksheet.control_ar88, 0.001); end
  def test_control_as88; assert_in_epsilon(10, worksheet.control_as88, 0.001); end
  def test_control_at88; assert_in_epsilon(10, worksheet.control_at88, 0.001); end
  def test_control_au88; assert_in_epsilon(10, worksheet.control_au88, 0.001); end
  def test_control_av88; assert_in_epsilon(10, worksheet.control_av88, 0.001); end
  def test_control_aw88; assert_in_epsilon(10, worksheet.control_aw88, 0.001); end
  def test_control_ax88; assert_in_epsilon(10, worksheet.control_ax88, 0.001); end
  def test_control_ay88; assert_in_epsilon(10, worksheet.control_ay88, 0.001); end
  def test_control_az88; assert_in_epsilon(10, worksheet.control_az88, 0.001); end
  def test_control_ba88; assert_in_epsilon(10, worksheet.control_ba88, 0.001); end
  def test_control_ap89; assert_equal("V.b", worksheet.control_ap89); end
  def test_control_aq89; assert_equal("Bioenergy imports", worksheet.control_aq89); end
  def test_control_ar89; assert_in_epsilon(10, worksheet.control_ar89, 0.001); end
  def test_control_as89; assert_in_epsilon(30, worksheet.control_as89, 0.001); end
  def test_control_at89; assert_in_epsilon(40, worksheet.control_at89, 0.001); end
  def test_control_au89; assert_in_epsilon(30, worksheet.control_au89, 0.001); end
  def test_control_av89; assert_in_epsilon(35, worksheet.control_av89, 0.001); end
  def test_control_aw89; assert_in_epsilon(40, worksheet.control_aw89, 0.001); end
  def test_control_ax89; assert_in_epsilon(40, worksheet.control_ax89, 0.001); end
  def test_control_ay89; assert_in_epsilon(20, worksheet.control_ay89, 0.001); end
  def test_control_az89; assert_in_epsilon(30, worksheet.control_az89, 0.001); end
  def test_control_ba89; assert_in_epsilon(40, worksheet.control_ba89, 0.001); end
  def test_control_ap91; assert_equal("XIV.a", worksheet.control_ap91); end
  def test_control_aq91; assert_equal("Geosequestration [UNUSED]", worksheet.control_aq91); end
  def test_control_ar91; assert_in_epsilon(10, worksheet.control_ar91, 0.001); end
  def test_control_as91; assert_in_epsilon(10, worksheet.control_as91, 0.001); end
  def test_control_at91; assert_in_epsilon(10, worksheet.control_at91, 0.001); end
  def test_control_au91; assert_in_epsilon(10, worksheet.control_au91, 0.001); end
  def test_control_av91; assert_in_epsilon(10, worksheet.control_av91, 0.001); end
  def test_control_aw91; assert_in_epsilon(10, worksheet.control_aw91, 0.001); end
  def test_control_ax91; assert_in_epsilon(10, worksheet.control_ax91, 0.001); end
  def test_control_ay91; assert_in_epsilon(10, worksheet.control_ay91, 0.001); end
  def test_control_az91; assert_in_epsilon(10, worksheet.control_az91, 0.001); end
  def test_control_ba91; assert_in_epsilon(10, worksheet.control_ba91, 0.001); end
  def test_control_ap92; assert_equal("VII.c", worksheet.control_ap92); end
  def test_control_aq92; assert_equal("EU transmission integration", worksheet.control_aq92); end
  def test_control_ar92; assert_in_epsilon(10, worksheet.control_ar92, 0.001); end
  def test_control_as92; assert_in_epsilon(20, worksheet.control_as92, 0.001); end
  def test_control_at92; assert_in_epsilon(20, worksheet.control_at92, 0.001); end
  def test_control_au92; assert_in_epsilon(20, worksheet.control_au92, 0.001); end
  def test_control_av92; assert_in_epsilon(20, worksheet.control_av92, 0.001); end
  def test_control_aw92; assert_in_epsilon(40, worksheet.control_aw92, 0.001); end
  def test_control_ax92; assert_in_epsilon(40, worksheet.control_ax92, 0.001); end
  def test_control_ay92; assert_in_epsilon(20, worksheet.control_ay92, 0.001); end
  def test_control_az92; assert_in_epsilon(30, worksheet.control_az92, 0.001); end
  def test_control_ba92; assert_in_epsilon(40, worksheet.control_ba92, 0.001); end
  def test_output_b1; assert_equal("OPEERA", worksheet.output_b1); end
  def test_output_e1; assert_equal("BELGIUM", worksheet.output_e1); end
  def test_output_ae1; assert_equal("Quick  jump >", worksheet.output_ae1); end
  def test_output_af1; assert_equal("Energy", worksheet.output_af1); end
  def test_output_ag1; assert_equal("Electricity", worksheet.output_ag1); end
  def test_output_ah1; assert_equal("Heat", worksheet.output_ah1); end
  def test_output_ai1; assert_equal("Emissions", worksheet.output_ai1); end
  def test_output_aj1; assert_equal("BioEnergy", worksheet.output_aj1); end
  def test_output_ak1; assert_equal("Costs", worksheet.output_ak1); end
  def test_output_al1; assert_equal("Other info", worksheet.output_al1); end
  def test_output_b2; assert_equal("Open-source Prospective Energy & Emissions Roadmap Analysis", worksheet.output_b2); end
  def test_output_h2; assert_equal("Chosen", worksheet.output_h2); end
  def test_output_h3; assert_in_epsilon(1990, worksheet.output_h3, 0.001); end
  def test_output_m3; assert_in_epsilon(1995, worksheet.output_m3, 0.001); end
  def test_output_r3; assert_in_epsilon(2000, worksheet.output_r3, 0.001); end
  def test_output_w3; assert_in_epsilon(2005, worksheet.output_w3, 0.001); end
  def test_output_ab3; assert_in_epsilon(2010, worksheet.output_ab3, 0.001); end
  def test_output_ac3; assert_in_epsilon(2010, worksheet.output_ac3, 0.001); end
  def test_output_ad3; assert_in_epsilon(2015, worksheet.output_ad3, 0.001); end
  def test_output_ae3; assert_in_epsilon(2020, worksheet.output_ae3, 0.001); end
  def test_output_af3; assert_in_epsilon(2025, worksheet.output_af3, 0.001); end
  def test_output_ag3; assert_in_epsilon(2030, worksheet.output_ag3, 0.001); end
  def test_output_ah3; assert_in_epsilon(2035, worksheet.output_ah3, 0.001); end
  def test_output_ai3; assert_in_epsilon(2040, worksheet.output_ai3, 0.001); end
  def test_output_aj3; assert_in_epsilon(2045, worksheet.output_aj3, 0.001); end
  def test_output_ak3; assert_in_epsilon(2050, worksheet.output_ak3, 0.001); end
  def test_output_al3; assert_equal("Mix", worksheet.output_al3); end
  def test_output_am3; assert_equal("CAGR", worksheet.output_am3); end
  def test_output_an3; assert_equal("Growth", worksheet.output_an3); end
  def test_output_ao3; assert_equal("Growth", worksheet.output_ao3); end
  def test_output_c4; assert_equal("Codes", worksheet.output_c4); end
  def test_output_e4; assert_equal("Description", worksheet.output_e4); end
  def test_output_f4; assert_equal("Units", worksheet.output_f4); end
  def test_output_g4; assert_equal("Comments/ Sources", worksheet.output_g4); end
  def test_output_h4; assert_equal("Actual", worksheet.output_h4); end
  def test_output_m4; assert_equal("Actual", worksheet.output_m4); end
  def test_output_r4; assert_equal("Actual", worksheet.output_r4); end
  def test_output_w4; assert_equal("Actual", worksheet.output_w4); end
  def test_output_ab4; assert_equal("Actual", worksheet.output_ab4); end
  def test_output_ac4; assert_equal("Modeled", worksheet.output_ac4); end
  def test_output_ad4; assert_equal("Modeled", worksheet.output_ad4); end
  def test_output_ae4; assert_equal("Modeled", worksheet.output_ae4); end
  def test_output_af4; assert_equal("Modeled", worksheet.output_af4); end
  def test_output_ag4; assert_equal("Modeled", worksheet.output_ag4); end
  def test_output_ah4; assert_equal("Modeled", worksheet.output_ah4); end
  def test_output_ai4; assert_equal("Modeled", worksheet.output_ai4); end
  def test_output_aj4; assert_equal("Modeled", worksheet.output_aj4); end
  def test_output_ak4; assert_equal("Modeled", worksheet.output_ak4); end
  def test_output_al4; assert_equal("%", worksheet.output_al4); end
  def test_output_am4; assert_equal("%/yr", worksheet.output_am4); end
  def test_output_an4; assert_equal("% to 2010", worksheet.output_an4); end
  def test_output_ao4; assert_equal("% to 1990", worksheet.output_ao4); end
  def test_output_b5; assert_equal("Final energy demand", worksheet.output_b5); end
  def test_output_c6; assert_equal("T.01", worksheet.output_c6); end
  def test_output_e6; assert_equal("Road transport", worksheet.output_e6); end
  def test_output_f6; assert_equal("TWh/yr", worksheet.output_f6); end
  def test_output_g6; assert_equal("NIR", worksheet.output_g6); end
  def test_output_h6; assert_in_epsilon(75.24521128805556, worksheet.output_h6, 0.001); end
  def test_output_m6; assert_in_epsilon(82.76357564944443, worksheet.output_m6, 0.001); end
  def test_output_r6; assert_in_epsilon(90.30742228805555, worksheet.output_r6, 0.001); end
  def test_output_w6; assert_in_epsilon(95.96334084099999, worksheet.output_w6, 0.001); end
  def test_output_ab6; assert_in_epsilon(93.45014293030167, worksheet.output_ab6, 0.001); end
  def test_output_ac6; assert_in_epsilon(102.02103453907664, worksheet.output_ac6, 0.001); end
  def test_output_ad6; assert_in_epsilon(95.5148262599515, worksheet.output_ad6, 0.001); end
  def test_output_ae6; assert_in_epsilon(82.81784230789651, worksheet.output_ae6, 0.001); end
  def test_output_af6; assert_in_epsilon(70.11134568675303, worksheet.output_af6, 0.001); end
  def test_output_ag6; assert_in_epsilon(57.546480676768546, worksheet.output_ag6, 0.001); end
  def test_output_ah6; assert_in_epsilon(46.94235436188666, worksheet.output_ah6, 0.001); end
  def test_output_ai6; assert_in_epsilon(40.15321059661236, worksheet.output_ai6, 0.001); end
  def test_output_aj6; assert_in_epsilon(34.24074227344014, worksheet.output_aj6, 0.001); end
  def test_output_ak6; assert_in_epsilon(29.286426382033518, worksheet.output_ak6, 0.001); end
  def test_output_al6; assert_in_delta(0.18345285998602331, worksheet.output_al6, 0.001); end
  def test_output_am6; assert_in_delta(-0.030719632206461123, worksheet.output_am6, 0.001); end
  def test_output_an6; assert_in_delta(-0.712937371059337, worksheet.output_an6, 0.001); end
  def test_output_ao6; assert_in_delta(-0.610786841040043, worksheet.output_ao6, 0.001); end
  def test_output_c7; assert_equal("T.02", worksheet.output_c7); end
  def test_output_e7; assert_equal("Rail transport", worksheet.output_e7); end
  def test_output_f7; assert_equal("TWh/yr", worksheet.output_f7); end
  def test_output_g7; assert_equal("NIR (excludes electricity)", worksheet.output_g7); end
  def test_output_h7; assert_in_delta(0.8489311282741945, worksheet.output_h7, 0.001); end
  def test_output_m7; assert_in_delta(0.7164294941825307, worksheet.output_m7, 0.001); end
  def test_output_r7; assert_in_delta(0.6288815472685639, worksheet.output_r7, 0.001); end
  def test_output_w7; assert_in_delta(0.49162048983395307, worksheet.output_w7, 0.001); end
  def test_output_ab7; assert_in_delta(0.4005557778461738, worksheet.output_ab7, 0.001); end
  def test_output_ac7; assert_in_epsilon(1.715531102175385, worksheet.output_ac7, 0.001); end
  def test_output_ad7; assert_in_epsilon(1.8300232929214857, worksheet.output_ad7, 0.001); end
  def test_output_ae7; assert_in_epsilon(1.925064568092179, worksheet.output_ae7, 0.001); end
  def test_output_af7; assert_in_epsilon(1.976809426893284, worksheet.output_af7, 0.001); end
  def test_output_ag7; assert_in_epsilon(2.016453824589062, worksheet.output_ag7, 0.001); end
  def test_output_ah7; assert_in_epsilon(2.0281565644246853, worksheet.output_ah7, 0.001); end
  def test_output_ai7; assert_in_epsilon(2.0307762599789356, worksheet.output_ai7, 0.001); end
  def test_output_aj7; assert_in_epsilon(2.0183366327897696, worksheet.output_aj7, 0.001); end
  def test_output_ak7; assert_in_epsilon(1.9993368531748317, worksheet.output_ak7, 0.001); end
  def test_output_al7; assert_in_delta(0.012524029357688775, worksheet.output_al7, 0.001); end
  def test_output_am7; assert_in_delta(0.0038346545188556735, worksheet.output_am7, 0.001); end
  def test_output_an7; assert_in_delta(0.16543317147649828, worksheet.output_an7, 0.001); end
  def test_output_ao7; assert_in_epsilon(1.355122561283994, worksheet.output_ao7, 0.001); end
  def test_output_as7; assert_equal("Conversion factor", worksheet.output_as7); end
  def test_output_at7; assert_in_delta(0.0002777778, worksheet.output_at7, 0.001); end
  def test_output_c8; assert_equal("T.03", worksheet.output_c8); end
  def test_output_e8; assert_equal("Domestic aviation", worksheet.output_e8); end
  def test_output_f8; assert_equal("TWh/yr", worksheet.output_f8); end
  def test_output_g8; assert_equal("NIR", worksheet.output_g8); end
  def test_output_h8; assert_in_delta(0.00019822267564840673, worksheet.output_h8, 0.001); end
  def test_output_m8; assert_in_delta(0.00016885733041112035, worksheet.output_m8, 0.001); end
  def test_output_r8; assert_in_delta(9.599764530042064e-05, worksheet.output_r8, 0.001); end
  def test_output_w8; assert_in_delta(8.332281211333842e-05, worksheet.output_w8, 0.001); end
  def test_output_ab8; assert_in_delta(9.821877600125115e-05, worksheet.output_ab8, 0.001); end
  def test_output_ac8; assert_in_delta(0, (worksheet.output_ac8||0), 0.001); end
  def test_output_ad8; assert_in_delta(0, (worksheet.output_ad8||0), 0.001); end
  def test_output_ae8; assert_in_delta(0, (worksheet.output_ae8||0), 0.001); end
  def test_output_af8; assert_in_delta(0, (worksheet.output_af8||0), 0.001); end
  def test_output_ag8; assert_in_delta(0, (worksheet.output_ag8||0), 0.001); end
  def test_output_ah8; assert_in_delta(0, (worksheet.output_ah8||0), 0.001); end
  def test_output_ai8; assert_in_delta(0, (worksheet.output_ai8||0), 0.001); end
  def test_output_aj8; assert_in_delta(0, (worksheet.output_aj8||0), 0.001); end
  def test_output_ak8; assert_in_delta(0, (worksheet.output_ak8||0), 0.001); end
  def test_output_al8; assert_in_delta(0, (worksheet.output_al8||0), 0.001); end
  def test_output_am8; assert_equal("", worksheet.output_am8); end
  def test_output_an8; assert_equal("", worksheet.output_an8); end
  def test_output_ao8; assert_in_delta(-1, worksheet.output_ao8, 0.001); end
  def test_output_c9; assert_equal("T.04", worksheet.output_c9); end
  def test_output_e9; assert_equal("National navigation", worksheet.output_e9); end
  def test_output_f9; assert_equal("TWh/yr", worksheet.output_f9); end
  def test_output_g9; assert_equal("NIR", worksheet.output_g9); end
  def test_output_h9; assert_in_delta(0.045451997884405966, worksheet.output_h9, 0.001); end
  def test_output_m9; assert_in_delta(0.047880372786496615, worksheet.output_m9, 0.001); end
  def test_output_r9; assert_in_delta(0.05661766881251676, worksheet.output_r9, 0.001); end
  def test_output_w9; assert_in_delta(0.04362834192871655, worksheet.output_w9, 0.001); end
  def test_output_ab9; assert_in_delta(0.04079216546155834, worksheet.output_ab9, 0.001); end
  def test_output_ac9; assert_in_epsilon(1.78, worksheet.output_ac9, 0.001); end
  def test_output_ad9; assert_in_epsilon(1.8074696723090276, worksheet.output_ad9, 0.001); end
  def test_output_ae9; assert_in_epsilon(1.8273351391032233, worksheet.output_ae9, 0.001); end
  def test_output_af9; assert_in_epsilon(1.8393134825906636, worksheet.output_af9, 0.001); end
  def test_output_ag9; assert_in_epsilon(1.8431217849794237, worksheet.output_ag9, 0.001); end
  def test_output_ah9; assert_in_epsilon(1.8384771284775805, worksheet.output_ah9, 0.001); end
  def test_output_ai9; assert_in_epsilon(1.8250965952932097, worksheet.output_ai9, 0.001); end
  def test_output_aj9; assert_in_epsilon(1.8026972676343875, worksheet.output_aj9, 0.001); end
  def test_output_ak9; assert_in_epsilon(1.7709962277091904, worksheet.output_ak9, 0.001); end
  def test_output_al9; assert_in_delta(0.011093682744338654, worksheet.output_al9, 0.001); end
  def test_output_am9; assert_in_delta(-0.00012677035245722834, worksheet.output_am9, 0.001); end
  def test_output_an9; assert_in_delta(-0.005058299039780723, worksheet.output_an9, 0.001); end
  def test_output_ao9; assert_in_epsilon(37.96410081275653, worksheet.output_ao9, 0.001); end
  def test_output_ar9; assert_equal("NIR", worksheet.output_ar9); end
  def test_output_as9; assert_equal("(TJ)", worksheet.output_as9); end
  def test_output_at9; assert_equal("TWh", worksheet.output_at9); end
  def test_output_c10; assert_equal("T.05", worksheet.output_c10); end
  def test_output_e10; assert_equal("International aviation", worksheet.output_e10); end
  def test_output_f10; assert_equal("TWh/yr", worksheet.output_f10); end
  def test_output_g10; assert_equal("NIR", worksheet.output_g10); end
  def test_output_h10; assert_in_delta(0.04897084896840799, worksheet.output_h10, 0.001); end
  def test_output_m10; assert_in_delta(0.04363466575560193, worksheet.output_m10, 0.001); end
  def test_output_r10; assert_in_delta(0.04182748174958541, worksheet.output_r10, 0.001); end
  def test_output_w10; assert_in_delta(0.033969658316219994, worksheet.output_w10, 0.001); end
  def test_output_ab10; assert_in_delta(0.0402723485685543, worksheet.output_ab10, 0.001); end
  def test_output_ac10; assert_in_epsilon(16.785, worksheet.output_ac10, 0.001); end
  def test_output_ad10; assert_in_epsilon(15.7327303267589, worksheet.output_ad10, 0.001); end
  def test_output_ae10; assert_in_epsilon(14.74642856922962, worksheet.output_ae10, 0.001); end
  def test_output_af10; assert_in_epsilon(13.821959127941774, worksheet.output_af10, 0.001); end
  def test_output_ag10; assert_in_epsilon(12.955445668596457, worksheet.output_ag10, 0.001); end
  def test_output_ah10; assert_in_epsilon(12.143254868454257, worksheet.output_ah10, 0.001); end
  def test_output_ai10; assert_in_epsilon(11.38198118167965, worksheet.output_ai10, 0.001); end
  def test_output_aj10; assert_in_epsilon(10.66843255976232, worksheet.output_aj10, 0.001); end
  def test_output_ak10; assert_in_epsilon(9.999617067140584, worksheet.output_ak10, 0.001); end
  def test_output_al10; assert_in_delta(0.06263851812447095, worksheet.output_al10, 0.001); end
  def test_output_am10; assert_in_delta(-0.012865000000000015, worksheet.output_am10, 0.001); end
  def test_output_an10; assert_in_delta(-0.4042527812248684, worksheet.output_an10, 0.001); end
  def test_output_ao10; assert_in_epsilon(203.19529736132455, worksheet.output_ao10, 0.001); end
  def test_output_c11; assert_equal("T.06", worksheet.output_c11); end
  def test_output_e11; assert_equal("International shipping", worksheet.output_e11); end
  def test_output_f11; assert_equal("TWh/yr", worksheet.output_f11); end
  def test_output_g11; assert_equal("NIR", worksheet.output_g11); end
  def test_output_h11; assert_in_epsilon(1.46355654342888, worksheet.output_h11, 0.001); end
  def test_output_m11; assert_in_epsilon(1.4822031244787972, worksheet.output_m11, 0.001); end
  def test_output_r11; assert_in_epsilon(1.7934453107431383, worksheet.output_r11, 0.001); end
  def test_output_w11; assert_in_epsilon(1.9689245884651752, worksheet.output_w11, 0.001); end
  def test_output_ab11; assert_in_epsilon(1.7434372672705813, worksheet.output_ab11, 0.001); end
  def test_output_ac11; assert_in_delta(0, (worksheet.output_ac11||0), 0.001); end
  def test_output_ad11; assert_in_delta(0, (worksheet.output_ad11||0), 0.001); end
  def test_output_ae11; assert_in_delta(0, (worksheet.output_ae11||0), 0.001); end
  def test_output_af11; assert_in_delta(0, (worksheet.output_af11||0), 0.001); end
  def test_output_ag11; assert_in_delta(0, (worksheet.output_ag11||0), 0.001); end
  def test_output_ah11; assert_in_delta(0, (worksheet.output_ah11||0), 0.001); end
  def test_output_ai11; assert_in_delta(0, (worksheet.output_ai11||0), 0.001); end
  def test_output_aj11; assert_in_delta(0, (worksheet.output_aj11||0), 0.001); end
  def test_output_ak11; assert_in_delta(0, (worksheet.output_ak11||0), 0.001); end
  def test_output_al11; assert_in_delta(0, (worksheet.output_al11||0), 0.001); end
  def test_output_am11; assert_equal("", worksheet.output_am11); end
  def test_output_an11; assert_equal("", worksheet.output_an11); end
  def test_output_ao11; assert_in_delta(-1, worksheet.output_ao11, 0.001); end
  def test_output_e12; assert_equal("Transport", worksheet.output_e12); end
  def test_output_f12; assert_equal("TWh/yr", worksheet.output_f12); end
  def test_output_h12; assert_in_epsilon(77.65232002928708, worksheet.output_h12, 0.001); end
  def test_output_i12; assert_in_delta(0, (worksheet.output_i12||0), 0.001); end
  def test_output_j12; assert_in_delta(0, (worksheet.output_j12||0), 0.001); end
  def test_output_k12; assert_in_delta(0, (worksheet.output_k12||0), 0.001); end
  def test_output_l12; assert_in_delta(0, (worksheet.output_l12||0), 0.001); end
  def test_output_m12; assert_in_epsilon(85.05389216397828, worksheet.output_m12, 0.001); end
  def test_output_n12; assert_in_delta(0, (worksheet.output_n12||0), 0.001); end
  def test_output_o12; assert_in_delta(0, (worksheet.output_o12||0), 0.001); end
  def test_output_p12; assert_in_delta(0, (worksheet.output_p12||0), 0.001); end
  def test_output_q12; assert_in_delta(0, (worksheet.output_q12||0), 0.001); end
  def test_output_r12; assert_in_epsilon(92.82829029427465, worksheet.output_r12, 0.001); end
  def test_output_s12; assert_in_delta(0, (worksheet.output_s12||0), 0.001); end
  def test_output_t12; assert_in_delta(0, (worksheet.output_t12||0), 0.001); end
  def test_output_u12; assert_in_delta(0, (worksheet.output_u12||0), 0.001); end
  def test_output_v12; assert_in_delta(0, (worksheet.output_v12||0), 0.001); end
  def test_output_w12; assert_in_epsilon(98.50156724235617, worksheet.output_w12, 0.001); end
  def test_output_x12; assert_in_delta(0, (worksheet.output_x12||0), 0.001); end
  def test_output_y12; assert_in_delta(0, (worksheet.output_y12||0), 0.001); end
  def test_output_z12; assert_in_delta(0, (worksheet.output_z12||0), 0.001); end
  def test_output_aa12; assert_in_delta(0, (worksheet.output_aa12||0), 0.001); end
  def test_output_ab12; assert_in_epsilon(95.67529870822453, worksheet.output_ab12, 0.001); end
  def test_output_ad12; assert_in_epsilon(114.88504955194091, worksheet.output_ad12, 0.001); end
  def test_output_ae12; assert_in_epsilon(101.31667058432154, worksheet.output_ae12, 0.001); end
  def test_output_af12; assert_in_epsilon(87.74942772417876, worksheet.output_af12, 0.001); end
  def test_output_ag12; assert_in_epsilon(74.36150195493349, worksheet.output_ag12, 0.001); end
  def test_output_ah12; assert_in_epsilon(62.952242923243176, worksheet.output_ah12, 0.001); end
  def test_output_ai12; assert_in_epsilon(55.391064633564156, worksheet.output_ai12, 0.001); end
  def test_output_aj12; assert_in_epsilon(48.73020873362661, worksheet.output_aj12, 0.001); end
  def test_output_al12; assert_in_delta(0.2697090902125217, worksheet.output_al12, 0.001); end
  def test_output_am12; assert_in_delta(-0.02576183985809033, worksheet.output_am12, 0.001); end
  def test_output_an12; assert_in_delta(-0.6479490977543519, worksheet.output_an12, 0.001); end
  def test_output_ao12; assert_in_delta(-0.4455236300239436, worksheet.output_ao12, 0.001); end
  def test_output_ar12; assert_equal("1.A.3  Transport", worksheet.output_ar12); end
  def test_output_as12; assert_in_epsilon(347846.1568138497, worksheet.output_as12, 0.001); end
  def test_output_at12; assert_in_epsilon(96.62394017820617, worksheet.output_at12, 0.001); end
  def test_output_c13; assert_equal("I.01", worksheet.output_c13); end
  def test_output_e13; assert_equal("Industry Heat", worksheet.output_e13); end
  def test_output_f13; assert_equal("TWh/yr", worksheet.output_f13); end
  def test_output_g13; assert_equal("NIR", worksheet.output_g13); end
  def test_output_h13; assert_in_epsilon(136.2563651780339, worksheet.output_h13, 0.001); end
  def test_output_m13; assert_in_epsilon(142.34083184257193, worksheet.output_m13, 0.001); end
  def test_output_r13; assert_in_epsilon(148.2033928890706, worksheet.output_r13, 0.001); end
  def test_output_w13; assert_in_epsilon(138.14067775039763, worksheet.output_w13, 0.001); end
  def test_output_ab13; assert_in_epsilon(118.94336577640077, worksheet.output_ab13, 0.001); end
  def test_output_ac13; assert_in_epsilon(126.16545745745992, worksheet.output_ac13, 0.001); end
  def test_output_ad13; assert_in_epsilon(105.01099351722648, worksheet.output_ad13, 0.001); end
  def test_output_ae13; assert_in_epsilon(80.01314882992806, worksheet.output_ae13, 0.001); end
  def test_output_af13; assert_in_epsilon(62.36740387496312, worksheet.output_af13, 0.001); end
  def test_output_ag13; assert_in_epsilon(48.21440813598017, worksheet.output_ag13, 0.001); end
  def test_output_ah13; assert_in_epsilon(40.03707738239071, worksheet.output_ah13, 0.001); end
  def test_output_ai13; assert_in_epsilon(32.97654003323694, worksheet.output_ai13, 0.001); end
  def test_output_aj13; assert_in_epsilon(26.871419521334634, worksheet.output_aj13, 0.001); end
  def test_output_ak13; assert_in_epsilon(21.98731795680016, worksheet.output_ak13, 0.001); end
  def test_output_al13; assert_in_delta(0.13773057559086724, worksheet.output_al13, 0.001); end
  def test_output_am13; assert_in_delta(-0.04273805402744291, worksheet.output_am13, 0.001); end
  def test_output_an13; assert_in_delta(-0.8257263247809823, worksheet.output_an13, 0.001); end
  def test_output_ao13; assert_in_delta(-0.8386327278870875, worksheet.output_ao13, 0.001); end
  def test_output_ap13; assert_in_delta(0.5912499207744164, worksheet.output_ap13, 0.001); end
  def test_output_c14; assert_equal("I.02", worksheet.output_c14); end
  def test_output_e14; assert_equal("Industry Power", worksheet.output_e14); end
  def test_output_f14; assert_equal("TWh/yr", worksheet.output_f14); end
  def test_output_g14; assert_equal("SPF Economie (total-NIR heating)", worksheet.output_g14); end
  def test_output_ab14; assert_in_epsilon(14.801634223599237, worksheet.output_ab14, 0.001); end
  def test_output_ac14; assert_in_epsilon(31.884979304622664, worksheet.output_ac14, 0.001); end
  def test_output_ad14; assert_in_epsilon(28.990994609796385, worksheet.output_ad14, 0.001); end
  def test_output_ae14; assert_in_epsilon(26.250350586147935, worksheet.output_ae14, 0.001); end
  def test_output_af14; assert_in_epsilon(23.996228765811928, worksheet.output_af14, 0.001); end
  def test_output_ag14; assert_in_epsilon(22.051603057798822, worksheet.output_ag14, 0.001); end
  def test_output_ah14; assert_in_epsilon(20.030265403141666, worksheet.output_ah14, 0.001); end
  def test_output_ai14; assert_in_epsilon(18.174439133254026, worksheet.output_ai14, 0.001); end
  def test_output_aj14; assert_in_epsilon(16.50849150103237, worksheet.output_aj14, 0.001); end
  def test_output_ak14; assert_in_epsilon(15.247792136127861, worksheet.output_ak14, 0.001); end
  def test_output_al14; assert_in_delta(0.09551356793606934, worksheet.output_al14, 0.001); end
  def test_output_am14; assert_in_delta(-0.0182734855139296, worksheet.output_am14, 0.001); end
  def test_output_an14; assert_in_delta(-0.5217876106973904, worksheet.output_an14, 0.001); end
  def test_output_ao14; assert_equal("", worksheet.output_ao14); end
  def test_output_c15; assert_equal("I.03", worksheet.output_c15); end
  def test_output_e15; assert_equal("Industry CHP", worksheet.output_e15); end
  def test_output_f15; assert_equal("TWh/yr", worksheet.output_f15); end
  def test_output_ac15; assert_in_epsilon(2.646275003128475, worksheet.output_ac15, 0.001); end
  def test_output_ad15; assert_in_epsilon(3.885292646437326, worksheet.output_ad15, 0.001); end
  def test_output_ae15; assert_in_epsilon(3.597867258403887, worksheet.output_ae15, 0.001); end
  def test_output_af15; assert_in_epsilon(3.3505383850561388, worksheet.output_af15, 0.001); end
  def test_output_ag15; assert_in_epsilon(3.14831606642753, worksheet.output_ag15, 0.001); end
  def test_output_ah15; assert_in_epsilon(2.9978743623998354, worksheet.output_ah15, 0.001); end
  def test_output_ai15; assert_in_epsilon(2.8936370088283265, worksheet.output_ai15, 0.001); end
  def test_output_aj15; assert_in_epsilon(2.814062059680872, worksheet.output_aj15, 0.001); end
  def test_output_ak15; assert_in_epsilon(2.754160304589507, worksheet.output_ak15, 0.001); end
  def test_output_al15; assert_in_delta(0.0172523126634148, worksheet.output_al15, 0.001); end
  def test_output_am15; assert_in_delta(0.000999489521796626, worksheet.output_am15, 0.001); end
  def test_output_an15; assert_in_delta(0.040768741469986436, worksheet.output_an15, 0.001); end
  def test_output_ao15; assert_equal("", worksheet.output_ao15); end
  def test_output_e16; assert_equal("Industry", worksheet.output_e16); end
  def test_output_f16; assert_equal("TWh/yr", worksheet.output_f16); end
  def test_output_h16; assert_in_epsilon(136.2563651780339, worksheet.output_h16, 0.001); end
  def test_output_i16; assert_in_delta(0, (worksheet.output_i16||0), 0.001); end
  def test_output_j16; assert_in_delta(0, (worksheet.output_j16||0), 0.001); end
  def test_output_k16; assert_in_delta(0, (worksheet.output_k16||0), 0.001); end
  def test_output_l16; assert_in_delta(0, (worksheet.output_l16||0), 0.001); end
  def test_output_m16; assert_in_epsilon(142.34083184257193, worksheet.output_m16, 0.001); end
  def test_output_n16; assert_in_delta(0, (worksheet.output_n16||0), 0.001); end
  def test_output_o16; assert_in_delta(0, (worksheet.output_o16||0), 0.001); end
  def test_output_p16; assert_in_delta(0, (worksheet.output_p16||0), 0.001); end
  def test_output_q16; assert_in_delta(0, (worksheet.output_q16||0), 0.001); end
  def test_output_r16; assert_in_epsilon(148.2033928890706, worksheet.output_r16, 0.001); end
  def test_output_s16; assert_in_delta(0, (worksheet.output_s16||0), 0.001); end
  def test_output_t16; assert_in_delta(0, (worksheet.output_t16||0), 0.001); end
  def test_output_u16; assert_in_delta(0, (worksheet.output_u16||0), 0.001); end
  def test_output_v16; assert_in_delta(0, (worksheet.output_v16||0), 0.001); end
  def test_output_w16; assert_in_epsilon(138.14067775039763, worksheet.output_w16, 0.001); end
  def test_output_x16; assert_in_delta(0, (worksheet.output_x16||0), 0.001); end
  def test_output_y16; assert_in_delta(0, (worksheet.output_y16||0), 0.001); end
  def test_output_z16; assert_in_delta(0, (worksheet.output_z16||0), 0.001); end
  def test_output_aa16; assert_in_delta(0, (worksheet.output_aa16||0), 0.001); end
  def test_output_ab16; assert_in_epsilon(133.745, worksheet.output_ab16, 0.001); end
  def test_output_ad16; assert_in_epsilon(137.8872807734602, worksheet.output_ad16, 0.001); end
  def test_output_ae16; assert_in_epsilon(109.86136667447987, worksheet.output_ae16, 0.001); end
  def test_output_af16; assert_in_epsilon(89.71417102583119, worksheet.output_af16, 0.001); end
  def test_output_ag16; assert_in_epsilon(73.41432726020652, worksheet.output_ag16, 0.001); end
  def test_output_ah16; assert_in_epsilon(63.06521714793221, worksheet.output_ah16, 0.001); end
  def test_output_ai16; assert_in_epsilon(54.04461617531929, worksheet.output_ai16, 0.001); end
  def test_output_aj16; assert_in_epsilon(46.193973082047876, worksheet.output_aj16, 0.001); end
  def test_output_al16; assert_in_delta(0.2504964561903514, worksheet.output_al16, 0.001); end
  def test_output_am16; assert_in_delta(-0.03417506781221946, worksheet.output_am16, 0.001); end
  def test_output_an16; assert_in_delta(-0.751150661651717, worksheet.output_an16, 0.001); end
  def test_output_ao16; assert_in_delta(-0.7065144784592841, worksheet.output_ao16, 0.001); end
  def test_output_ar16; assert_equal("1.A.2 Manufacturing Industries and Construction", worksheet.output_ar16); end
  def test_output_as16; assert_in_epsilon(510763.928765043, worksheet.output_as16, 0.001); end
  def test_output_at16; assert_in_epsilon(141.87888045171036, worksheet.output_at16, 0.001); end
  def test_output_c17; assert_equal("H.01", worksheet.output_c17); end
  def test_output_e17; assert_equal("Heating and cooling", worksheet.output_e17); end
  def test_output_f17; assert_equal("TWh/yr", worksheet.output_f17); end
  def test_output_g17; assert_equal("NIR", worksheet.output_g17); end
  def test_output_h17; assert_in_epsilon(103.21850568882088, worksheet.output_h17, 0.001); end
  def test_output_m17; assert_in_epsilon(119.02138653274301, worksheet.output_m17, 0.001); end
  def test_output_r17; assert_in_epsilon(116.90815490107154, worksheet.output_r17, 0.001); end
  def test_output_w17; assert_in_epsilon(123.52897166486473, worksheet.output_w17, 0.001); end
  def test_output_ab17; assert_in_epsilon(133.21174249276112, worksheet.output_ab17, 0.001); end
  def test_output_ac17; assert_in_epsilon(101.97077783246047, worksheet.output_ac17, 0.001); end
  def test_output_ad17; assert_in_epsilon(100.05830843901539, worksheet.output_ad17, 0.001); end
  def test_output_ae17; assert_in_epsilon(91.7267922839585, worksheet.output_ae17, 0.001); end
  def test_output_af17; assert_in_epsilon(81.05025909106214, worksheet.output_af17, 0.001); end
  def test_output_ag17; assert_in_epsilon(71.32020826395356, worksheet.output_ag17, 0.001); end
  def test_output_ah17; assert_in_epsilon(62.14901820234749, worksheet.output_ah17, 0.001); end
  def test_output_ai17; assert_in_epsilon(53.599541474878485, worksheet.output_ai17, 0.001); end
  def test_output_aj17; assert_in_epsilon(45.4848615811678, worksheet.output_aj17, 0.001); end
  def test_output_ak17; assert_in_epsilon(37.78422903946148, worksheet.output_ak17, 0.001); end
  def test_output_al17; assert_in_delta(0.23668387495404833, worksheet.output_al17, 0.001); end
  def test_output_am17; assert_in_delta(-0.02451438191616062, worksheet.output_am17, 0.001); end
  def test_output_an17; assert_in_delta(-0.6294602253447401, worksheet.output_an17, 0.001); end
  def test_output_ao17; assert_in_delta(-0.6339393911265108, worksheet.output_ao17, 0.001); end
  def test_output_c18; assert_equal("L.01", worksheet.output_c18); end
  def test_output_e18; assert_equal("Lighting & appliances", worksheet.output_e18); end
  def test_output_f18; assert_equal("TWh/yr", worksheet.output_f18); end
  def test_output_g18; assert_equal("SPF Economie (total-NIR heating)", worksheet.output_g18); end
  def test_output_ab18; assert_in_epsilon(41.2382575072389, worksheet.output_ab18, 0.001); end
  def test_output_ac18; assert_in_epsilon(34.73695908729563, worksheet.output_ac18, 0.001); end
  def test_output_ad18; assert_in_epsilon(36.64166705356269, worksheet.output_ad18, 0.001); end
  def test_output_ae18; assert_in_epsilon(38.78446575625929, worksheet.output_ae18, 0.001); end
  def test_output_af18; assert_in_epsilon(39.325385571089576, worksheet.output_af18, 0.001); end
  def test_output_ag18; assert_in_epsilon(39.68206274878486, worksheet.output_ag18, 0.001); end
  def test_output_ah18; assert_in_epsilon(39.58427747067493, worksheet.output_ah18, 0.001); end
  def test_output_ai18; assert_in_epsilon(39.441622657983935, worksheet.output_ai18, 0.001); end
  def test_output_aj18; assert_in_epsilon(39.14572656341096, worksheet.output_aj18, 0.001); end
  def test_output_ak18; assert_in_epsilon(38.810188430240494, worksheet.output_ak18, 0.001); end
  def test_output_al18; assert_in_delta(0.24311057864307858, worksheet.output_al18, 0.001); end
  def test_output_am18; assert_in_delta(0.0027758098720722657, worksheet.output_am18, 0.001); end
  def test_output_an18; assert_in_delta(0.11725923771014735, worksheet.output_an18, 0.001); end
  def test_output_ao18; assert_equal("", worksheet.output_ao18); end
  def test_output_e19; assert_equal("Buildings", worksheet.output_e19); end
  def test_output_f19; assert_equal("TWh/yr", worksheet.output_f19); end
  def test_output_h19; assert_in_epsilon(103.21850568882088, worksheet.output_h19, 0.001); end
  def test_output_i19; assert_in_delta(0, (worksheet.output_i19||0), 0.001); end
  def test_output_j19; assert_in_delta(0, (worksheet.output_j19||0), 0.001); end
  def test_output_k19; assert_in_delta(0, (worksheet.output_k19||0), 0.001); end
  def test_output_l19; assert_in_delta(0, (worksheet.output_l19||0), 0.001); end
  def test_output_m19; assert_in_epsilon(119.02138653274301, worksheet.output_m19, 0.001); end
  def test_output_n19; assert_in_delta(0, (worksheet.output_n19||0), 0.001); end
  def test_output_o19; assert_in_delta(0, (worksheet.output_o19||0), 0.001); end
  def test_output_p19; assert_in_delta(0, (worksheet.output_p19||0), 0.001); end
  def test_output_q19; assert_in_delta(0, (worksheet.output_q19||0), 0.001); end
  def test_output_r19; assert_in_epsilon(116.90815490107154, worksheet.output_r19, 0.001); end
  def test_output_s19; assert_in_delta(0, (worksheet.output_s19||0), 0.001); end
  def test_output_t19; assert_in_delta(0, (worksheet.output_t19||0), 0.001); end
  def test_output_u19; assert_in_delta(0, (worksheet.output_u19||0), 0.001); end
  def test_output_v19; assert_in_delta(0, (worksheet.output_v19||0), 0.001); end
  def test_output_w19; assert_in_epsilon(123.52897166486473, worksheet.output_w19, 0.001); end
  def test_output_x19; assert_in_delta(0, (worksheet.output_x19||0), 0.001); end
  def test_output_y19; assert_in_delta(0, (worksheet.output_y19||0), 0.001); end
  def test_output_z19; assert_in_delta(0, (worksheet.output_z19||0), 0.001); end
  def test_output_aa19; assert_in_delta(0, (worksheet.output_aa19||0), 0.001); end
  def test_output_ab19; assert_in_epsilon(174.45000000000002, worksheet.output_ab19, 0.001); end
  def test_output_ad19; assert_in_epsilon(136.6999754925781, worksheet.output_ad19, 0.001); end
  def test_output_ae19; assert_in_epsilon(130.5112580402178, worksheet.output_ae19, 0.001); end
  def test_output_af19; assert_in_epsilon(120.37564466215173, worksheet.output_af19, 0.001); end
  def test_output_ag19; assert_in_epsilon(111.00227101273842, worksheet.output_ag19, 0.001); end
  def test_output_ah19; assert_in_epsilon(101.73329567302241, worksheet.output_ah19, 0.001); end
  def test_output_ai19; assert_in_epsilon(93.04116413286242, worksheet.output_ai19, 0.001); end
  def test_output_aj19; assert_in_epsilon(84.63058814457875, worksheet.output_aj19, 0.001); end
  def test_output_al19; assert_in_delta(0.47979445359712686, worksheet.output_al19, 0.001); end
  def test_output_am19; assert_in_delta(-0.014378654055822393, worksheet.output_am19, 0.001); end
  def test_output_an19; assert_in_delta(-0.4397214144897965, worksheet.output_an19, 0.001); end
  def test_output_ao19; assert_in_delta(-0.2579390976593303, worksheet.output_ao19, 0.001); end
  def test_output_ar19; assert_equal("b.  Residential + Commercial", worksheet.output_ar19); end
  def test_output_as19; assert_in_epsilon(479562.270132713, worksheet.output_as19, 0.001); end
  def test_output_at19; assert_in_epsilon(133.21175236047074, worksheet.output_at19, 0.001); end
  def test_output_c20; assert_equal("F.01", worksheet.output_c20); end
  def test_output_e20; assert_equal("Food consumption [UNUSED]", worksheet.output_e20); end
  def test_output_f20; assert_equal("TWh/yr", worksheet.output_f20); end
  def test_output_g20; assert_equal("NIR : actually agriculture consumption, which is split in the model btw transport and heating", worksheet.output_g20); end
  def test_output_h20; assert_in_epsilon(11.405010130573304, worksheet.output_h20, 0.001); end
  def test_output_m20; assert_in_epsilon(11.129600734792305, worksheet.output_m20, 0.001); end
  def test_output_r20; assert_in_epsilon(9.125679593118583, worksheet.output_r20, 0.001); end
  def test_output_w20; assert_in_epsilon(9.935619273628443, worksheet.output_w20, 0.001); end
  def test_output_ab20; assert_in_epsilon(10.030134709179222, worksheet.output_ab20, 0.001); end
  def test_output_ac20; assert_in_delta(0, (worksheet.output_ac20||0), 0.001); end
  def test_output_ad20; assert_in_delta(0, (worksheet.output_ad20||0), 0.001); end
  def test_output_ae20; assert_in_delta(0, (worksheet.output_ae20||0), 0.001); end
  def test_output_af20; assert_in_delta(0, (worksheet.output_af20||0), 0.001); end
  def test_output_ag20; assert_in_delta(0, (worksheet.output_ag20||0), 0.001); end
  def test_output_ah20; assert_in_delta(0, (worksheet.output_ah20||0), 0.001); end
  def test_output_ai20; assert_in_delta(0, (worksheet.output_ai20||0), 0.001); end
  def test_output_aj20; assert_in_delta(0, (worksheet.output_aj20||0), 0.001); end
  def test_output_ak20; assert_in_delta(0, (worksheet.output_ak20||0), 0.001); end
  def test_output_al20; assert_in_delta(0, (worksheet.output_al20||0), 0.001); end
  def test_output_am20; assert_equal("", worksheet.output_am20); end
  def test_output_an20; assert_equal("", worksheet.output_an20); end
  def test_output_ao20; assert_in_delta(-1, worksheet.output_ao20, 0.001); end
  def test_output_ar20; assert_equal("c.  Agriculture/Forestry/Fisheries", worksheet.output_ar20); end
  def test_output_as20; assert_in_epsilon(36904.444907751, worksheet.output_as20, 0.001); end
  def test_output_at20; assert_in_epsilon(10.251235516696276, worksheet.output_at20, 0.001); end
  def test_output_b21; assert_equal("REF", worksheet.output_b21); end
  def test_output_e21; assert_equal("Total final energy demand", worksheet.output_e21); end
  def test_output_f21; assert_equal("TWh/yr", worksheet.output_f21); end
  def test_output_h21; assert_in_epsilon(328.53220102671514, worksheet.output_h21, 0.001); end
  def test_output_i21; assert_in_delta(0, (worksheet.output_i21||0), 0.001); end
  def test_output_j21; assert_in_delta(0, (worksheet.output_j21||0), 0.001); end
  def test_output_k21; assert_in_delta(0, (worksheet.output_k21||0), 0.001); end
  def test_output_l21; assert_in_delta(0, (worksheet.output_l21||0), 0.001); end
  def test_output_m21; assert_in_epsilon(357.54571127408553, worksheet.output_m21, 0.001); end
  def test_output_n21; assert_in_delta(0, (worksheet.output_n21||0), 0.001); end
  def test_output_o21; assert_in_delta(0, (worksheet.output_o21||0), 0.001); end
  def test_output_p21; assert_in_delta(0, (worksheet.output_p21||0), 0.001); end
  def test_output_q21; assert_in_delta(0, (worksheet.output_q21||0), 0.001); end
  def test_output_r21; assert_in_epsilon(367.0655176775354, worksheet.output_r21, 0.001); end
  def test_output_s21; assert_in_delta(0, (worksheet.output_s21||0), 0.001); end
  def test_output_t21; assert_in_delta(0, (worksheet.output_t21||0), 0.001); end
  def test_output_u21; assert_in_delta(0, (worksheet.output_u21||0), 0.001); end
  def test_output_v21; assert_in_delta(0, (worksheet.output_v21||0), 0.001); end
  def test_output_w21; assert_in_epsilon(370.1068359312469, worksheet.output_w21, 0.001); end
  def test_output_x21; assert_in_delta(0, (worksheet.output_x21||0), 0.001); end
  def test_output_y21; assert_in_delta(0, (worksheet.output_y21||0), 0.001); end
  def test_output_z21; assert_in_delta(0, (worksheet.output_z21||0), 0.001); end
  def test_output_aa21; assert_in_delta(0, (worksheet.output_aa21||0), 0.001); end
  def test_output_ab21; assert_in_epsilon(413.9004334174038, worksheet.output_ab21, 0.001); end
  def test_output_al21; assert_in_delta(1, worksheet.output_al21, 0.001); end
  def test_output_am21; assert_in_delta(-0.02387616492527922, worksheet.output_am21, 0.001); end
  def test_output_an21; assert_in_delta(-0.61963836840995, worksheet.output_an21, 0.001); end
  def test_output_ao21; assert_in_delta(-0.5140809214488651, worksheet.output_ao21, 0.001); end
  def test_output_ap21; assert_in_delta(-0.6842578359850513, worksheet.output_ap21, 0.001); end
  def test_output_b22; assert_equal("REF", worksheet.output_b22); end
  def test_output_e22; assert_equal("Reference scenario", worksheet.output_e22); end
  def test_output_f22; assert_equal("TWh/yr", worksheet.output_f22); end
  def test_output_ac22; assert_in_epsilon(436.3553827735202, worksheet.output_ac22, 0.001); end
  def test_output_ad22; assert_in_epsilon(441.11346504785604, worksheet.output_ad22, 0.001); end
  def test_output_ae22; assert_in_epsilon(453.1876875559278, worksheet.output_ae22, 0.001); end
  def test_output_af22; assert_in_epsilon(462.1026484626134, worksheet.output_af22, 0.001); end
  def test_output_ag22; assert_in_epsilon(470.9078230554442, worksheet.output_ag22, 0.001); end
  def test_output_ah22; assert_in_epsilon(477.7594469802544, worksheet.output_ah22, 0.001); end
  def test_output_ai22; assert_in_epsilon(486.46251709184156, worksheet.output_ai22, 0.001); end
  def test_output_aj22; assert_in_epsilon(494.8598002846595, worksheet.output_aj22, 0.001); end
  def test_output_ak22; assert_in_epsilon(505.602616917896, worksheet.output_ak22, 0.001); end
  def test_output_al22; assert_in_epsilon(3.167141148600778, worksheet.output_al22, 0.001); end
  def test_output_am22; assert_in_delta(0.0036891384123074467, worksheet.output_am22, 0.001); end
  def test_output_an22; assert_in_delta(0.1586945798725643, worksheet.output_an22, 0.001); end
  def test_output_ao22; assert_equal("", worksheet.output_ao22); end
  def test_output_am23; assert_equal("", worksheet.output_am23); end
  def test_output_an23; assert_equal("", worksheet.output_an23); end
  def test_output_ao23; assert_equal("", worksheet.output_ao23); end
  def test_output_e24; assert_equal("Conversion and distribution losses", worksheet.output_e24); end
  def test_output_f24; assert_equal("TWh/yr", worksheet.output_f24); end
  def test_output_ad24; assert_in_epsilon(118.35022120350135, worksheet.output_ad24, 0.001); end
  def test_output_ae24; assert_in_epsilon(126.07381358010474, worksheet.output_ae24, 0.001); end
  def test_output_af24; assert_in_epsilon(139.57035645519244, worksheet.output_af24, 0.001); end
  def test_output_ag24; assert_in_epsilon(165.96994192824366, worksheet.output_ag24, 0.001); end
  def test_output_ah24; assert_in_epsilon(160.85679507316397, worksheet.output_ah24, 0.001); end
  def test_output_ai24; assert_in_epsilon(185.65366310300385, worksheet.output_ai24, 0.001); end
  def test_output_aj24; assert_in_epsilon(141.95175402756183, worksheet.output_aj24, 0.001); end
  def test_output_ak24; assert_in_epsilon(166.1868388796043, worksheet.output_ak24, 0.001); end
  def test_output_al24; assert_in_epsilon(1.0410095955989749, worksheet.output_al24, 0.001); end
  def test_output_am24; assert_in_delta(0.004062758318606363, worksheet.output_am24, 0.001); end
  def test_output_an24; assert_in_delta(0.17607321366639184, worksheet.output_an24, 0.001); end
  def test_output_ao24; assert_equal("", worksheet.output_ao24); end
  def test_output_ac24; assert_in_epsilon(141.30654192991875, worksheet.output_ac24, 0.001); end
  def test_output_ac12; assert_in_epsilon(122.30156564125203, worksheet.output_ac12, 0.001); end
  def test_output_ac16; assert_in_epsilon(160.69671176521106, worksheet.output_ac16, 0.001); end
  def test_output_ac19; assert_in_epsilon(136.7077369197561, worksheet.output_ac19, 0.001); end
  def test_output_ac21; assert_in_epsilon(419.7060143262192, worksheet.output_ac21, 0.001); end
  def test_output_ac25; assert_in_delta(0.33667981183630913, worksheet.output_ac25, 0.001); end
  def test_output_ae21; assert_in_epsilon(341.6892952990192, worksheet.output_ae21, 0.001); end
  def test_output_ae25; assert_in_delta(0.36897209047703705, worksheet.output_ae25, 0.001); end
  def test_output_am25; assert_in_delta(0.028622314341649968, worksheet.output_am25, 0.001); end
  def test_output_an25; assert_in_epsilon(2.09198698288778, worksheet.output_an25, 0.001); end
  def test_output_ak25; assert_in_epsilon(1.0410095955989749, worksheet.output_ak25, 0.001); end
  def test_output_ao25; assert_equal("", worksheet.output_ao25); end
  def test_output_b26; assert_equal("Energy sources", worksheet.output_b26); end
  def test_output_am26; assert_equal("", worksheet.output_am26); end
  def test_output_an26; assert_equal("", worksheet.output_an26); end
  def test_output_ao26; assert_equal("", worksheet.output_ao26); end
  def test_output_c27; assert_equal("N.01", worksheet.output_c27); end
  def test_output_e27; assert_equal("Nuclear fission", worksheet.output_e27); end
  def test_output_f27; assert_equal("TWh/yr", worksheet.output_f27); end
  def test_output_g27; assert_equal("SPF Economie (Chiffres clés 2010)", worksheet.output_g27); end
  def test_output_h27; assert_in_delta(0, (worksheet.output_h27||0), 0.001); end
  def test_output_m27; assert_in_delta(0, (worksheet.output_m27||0), 0.001); end
  def test_output_r27; assert_in_delta(0, (worksheet.output_r27||0), 0.001); end
  def test_output_w27; assert_in_delta(0, (worksheet.output_w27||0), 0.001); end
  def test_output_ab27; assert_in_epsilon(145.4, worksheet.output_ab27, 0.001); end
  def test_output_ak27; assert_in_epsilon(150.74598, worksheet.output_ak27, 0.001); end
  def test_output_ak28; assert_in_epsilon(48.73914962333242, worksheet.output_ak28, 0.001); end
  def test_output_ak29; assert_in_epsilon(96.21966333632473, worksheet.output_ak29, 0.001); end
  def test_output_ak30; assert_in_delta(0, (worksheet.output_ak30||0), 0.001); end
  def test_output_ak31; assert_in_delta(0, (worksheet.output_ak31||0), 0.001); end
  def test_output_ak32; assert_in_epsilon(48.7093397260274, worksheet.output_ak32, 0.001); end
  def test_output_ak33; assert_in_delta(0.591705, worksheet.output_ak33, 0.001); end
  def test_output_ak34; assert_in_epsilon(-220.55230552085533, worksheet.output_ak34, 0.001); end
  def test_output_ak35; assert_in_epsilon(124.4535321648292, worksheet.output_ak35, 0.001); end
  def test_output_ak36; assert_in_epsilon(16.164297499404814, worksheet.output_ak36, 0.001); end
  def test_output_ak40; assert_in_epsilon(54.00965140273461, worksheet.output_ak40, 0.001); end
  def test_output_ak37; assert_in_epsilon(45.086, worksheet.output_ak37, 0.001); end
  def test_output_ak38; assert_in_delta(0.6, worksheet.output_ak38, 0.001); end
  def test_output_ak39; assert_in_epsilon(45.686, worksheet.output_ak39, 0.001); end
  def test_output_ak41; assert_in_epsilon(99.69565140273461, worksheet.output_ak41, 0.001); end
  def test_output_ak42; assert_in_delta(0, (worksheet.output_ak42||0), 0.001); end
  def test_output_ak44; assert_in_delta(0, (worksheet.output_ak44||0), 0.001); end
  def test_output_ak46; assert_in_epsilon(14.802091105222026, worksheet.output_ak46, 0.001); end
  def test_output_ak48; assert_in_epsilon(14.802091105222026, worksheet.output_ak48, 0.001); end
  def test_output_ak49; assert_in_epsilon(70.71133110469128, worksheet.output_ak49, 0.001); end
  def test_output_ak51; assert_in_epsilon(70.71133110469128, worksheet.output_ak51, 0.001); end
  def test_output_ak52; assert_in_epsilon(325.8269032768819, worksheet.output_ak52, 0.001); end
  def test_output_al27; assert_in_delta(0.4626566391047787, worksheet.output_al27, 0.001); end
  def test_output_am27; assert_in_delta(0.000742433226471384, worksheet.output_am27, 0.001); end
  def test_output_an27; assert_in_delta(0.030131341746072904, worksheet.output_an27, 0.001); end
  def test_output_ao27; assert_equal("", worksheet.output_ao27); end
  def test_output_c28; assert_equal("R.01", worksheet.output_c28); end
  def test_output_e28; assert_equal("Solar", worksheet.output_e28); end
  def test_output_f28; assert_equal("TWh/yr", worksheet.output_f28); end
  def test_output_h28; assert_in_delta(0, (worksheet.output_h28||0), 0.001); end
  def test_output_m28; assert_in_delta(0, (worksheet.output_m28||0), 0.001); end
  def test_output_r28; assert_in_delta(0, (worksheet.output_r28||0), 0.001); end
  def test_output_w28; assert_in_delta(0, (worksheet.output_w28||0), 0.001); end
  def test_output_ab28; assert_in_delta(0, (worksheet.output_ab28||0), 0.001); end
  def test_output_ad28; assert_in_epsilon(3.97353921975714, worksheet.output_ad28, 0.001); end
  def test_output_ae28; assert_in_epsilon(7.51728226355338, worksheet.output_ae28, 0.001); end
  def test_output_af28; assert_in_epsilon(11.331285311737432, worksheet.output_af28, 0.001); end
  def test_output_ag28; assert_in_epsilon(15.584722203278162, worksheet.output_ag28, 0.001); end
  def test_output_ah28; assert_in_epsilon(19.416216729934334, worksheet.output_ah28, 0.001); end
  def test_output_ai28; assert_in_epsilon(25.250256779576382, worksheet.output_ai28, 0.001); end
  def test_output_aj28; assert_in_epsilon(34.308450698084954, worksheet.output_aj28, 0.001); end
  def test_output_al28; assert_in_delta(0.14958601985642284, worksheet.output_al28, 0.001); end
  def test_output_am28; assert_in_delta(0.11613628093199235, worksheet.output_am28, 0.001); end
  def test_output_an28; assert_in_epsilon(80.03805679941182, worksheet.output_an28, 0.001); end
  def test_output_ao28; assert_equal("", worksheet.output_ao28); end
  def test_output_c29; assert_equal("R.02", worksheet.output_c29); end
  def test_output_e29; assert_equal("Wind", worksheet.output_e29); end
  def test_output_f29; assert_equal("TWh/yr", worksheet.output_f29); end
  def test_output_h29; assert_in_delta(0, (worksheet.output_h29||0), 0.001); end
  def test_output_m29; assert_in_delta(0, (worksheet.output_m29||0), 0.001); end
  def test_output_r29; assert_in_delta(0, (worksheet.output_r29||0), 0.001); end
  def test_output_w29; assert_in_delta(0, (worksheet.output_w29||0), 0.001); end
  def test_output_ab29; assert_in_delta(0, (worksheet.output_ab29||0), 0.001); end
  def test_output_ad29; assert_in_epsilon(10.920252763123038, worksheet.output_ad29, 0.001); end
  def test_output_ae29; assert_in_epsilon(20.657769721053953, worksheet.output_ae29, 0.001); end
  def test_output_af29; assert_in_epsilon(33.34122288418922, worksheet.output_af29, 0.001); end
  def test_output_ag29; assert_in_epsilon(49.12808435552847, worksheet.output_ag29, 0.001); end
  def test_output_ah29; assert_in_epsilon(66.03278089425567, worksheet.output_ah29, 0.001); end
  def test_output_ai29; assert_in_epsilon(74.4815922596768, worksheet.output_ai29, 0.001); end
  def test_output_aj29; assert_in_epsilon(85.17122557503052, worksheet.output_aj29, 0.001); end
  def test_output_al29; assert_in_delta(0.29530914227349414, worksheet.output_al29, 0.001); end
  def test_output_am29; assert_in_delta(0.10273728848248953, worksheet.output_am29, 0.001); end
  def test_output_an29; assert_in_epsilon(48.98991640398468, worksheet.output_an29, 0.001); end
  def test_output_ao29; assert_equal("", worksheet.output_ao29); end
  def test_output_c30; assert_equal("R.03", worksheet.output_c30); end
  def test_output_e30; assert_equal("Tidal", worksheet.output_e30); end
  def test_output_f30; assert_equal("TWh/yr", worksheet.output_f30); end
  def test_output_h30; assert_in_delta(0, (worksheet.output_h30||0), 0.001); end
  def test_output_m30; assert_in_delta(0, (worksheet.output_m30||0), 0.001); end
  def test_output_r30; assert_in_delta(0, (worksheet.output_r30||0), 0.001); end
  def test_output_w30; assert_in_delta(0, (worksheet.output_w30||0), 0.001); end
  def test_output_ab30; assert_in_delta(0, (worksheet.output_ab30||0), 0.001); end
  def test_output_ad30; assert_in_delta(0, (worksheet.output_ad30||0), 0.001); end
  def test_output_ae30; assert_in_delta(0, (worksheet.output_ae30||0), 0.001); end
  def test_output_af30; assert_in_delta(0, (worksheet.output_af30||0), 0.001); end
  def test_output_ag30; assert_in_delta(0, (worksheet.output_ag30||0), 0.001); end
  def test_output_ah30; assert_in_delta(0, (worksheet.output_ah30||0), 0.001); end
  def test_output_ai30; assert_in_delta(0, (worksheet.output_ai30||0), 0.001); end
  def test_output_aj30; assert_in_delta(0, (worksheet.output_aj30||0), 0.001); end
  def test_output_al30; assert_in_delta(0, (worksheet.output_al30||0), 0.001); end
  def test_output_am30; assert_equal("", worksheet.output_am30); end
  def test_output_an30; assert_equal("", worksheet.output_an30); end
  def test_output_ao30; assert_equal("", worksheet.output_ao30); end
  def test_output_c31; assert_equal("R.04", worksheet.output_c31); end
  def test_output_e31; assert_equal("Wave", worksheet.output_e31); end
  def test_output_f31; assert_equal("TWh/yr", worksheet.output_f31); end
  def test_output_h31; assert_in_delta(0, (worksheet.output_h31||0), 0.001); end
  def test_output_m31; assert_in_delta(0, (worksheet.output_m31||0), 0.001); end
  def test_output_r31; assert_in_delta(0, (worksheet.output_r31||0), 0.001); end
  def test_output_w31; assert_in_delta(0, (worksheet.output_w31||0), 0.001); end
  def test_output_ab31; assert_in_delta(0, (worksheet.output_ab31||0), 0.001); end
  def test_output_ad31; assert_in_delta(0, (worksheet.output_ad31||0), 0.001); end
  def test_output_ae31; assert_in_delta(0, (worksheet.output_ae31||0), 0.001); end
  def test_output_af31; assert_in_delta(0, (worksheet.output_af31||0), 0.001); end
  def test_output_ag31; assert_in_delta(0, (worksheet.output_ag31||0), 0.001); end
  def test_output_ah31; assert_in_delta(0, (worksheet.output_ah31||0), 0.001); end
  def test_output_ai31; assert_in_delta(0, (worksheet.output_ai31||0), 0.001); end
  def test_output_aj31; assert_in_delta(0, (worksheet.output_aj31||0), 0.001); end
  def test_output_al31; assert_in_delta(0, (worksheet.output_al31||0), 0.001); end
  def test_output_am31; assert_equal("", worksheet.output_am31); end
  def test_output_an31; assert_equal("", worksheet.output_an31); end
  def test_output_ao31; assert_equal("", worksheet.output_ao31); end
  def test_output_ar31; assert_equal("NIR", worksheet.output_ar31); end
  def test_output_c32; assert_equal("R.05", worksheet.output_c32); end
  def test_output_e32; assert_equal("Geothermal", worksheet.output_e32); end
  def test_output_f32; assert_equal("TWh/yr", worksheet.output_f32); end
  def test_output_h32; assert_in_delta(0, (worksheet.output_h32||0), 0.001); end
  def test_output_m32; assert_in_delta(0, (worksheet.output_m32||0), 0.001); end
  def test_output_r32; assert_in_delta(0, (worksheet.output_r32||0), 0.001); end
  def test_output_w32; assert_in_delta(0, (worksheet.output_w32||0), 0.001); end
  def test_output_ab32; assert_in_delta(0, (worksheet.output_ab32||0), 0.001); end
  def test_output_ad32; assert_in_delta(0.372555, worksheet.output_ad32, 0.001); end
  def test_output_ae32; assert_in_epsilon(2.23533, worksheet.output_ae32, 0.001); end
  def test_output_af32; assert_in_epsilon(4.268488287671233, worksheet.output_af32, 0.001); end
  def test_output_ag32; assert_in_epsilon(9.282086575342465, worksheet.output_ag32, 0.001); end
  def test_output_ah32; assert_in_epsilon(17.276124863013703, worksheet.output_ah32, 0.001); end
  def test_output_ai32; assert_in_epsilon(27.505493150684938, worksheet.output_ai32, 0.001); end
  def test_output_aj32; assert_in_epsilon(36.989751438356166, worksheet.output_aj32, 0.001); end
  def test_output_al32; assert_in_delta(0.14949452987507011, worksheet.output_al32, 0.001); end
  def test_output_am32; assert_equal("", worksheet.output_am32); end
  def test_output_an32; assert_equal("", worksheet.output_an32); end
  def test_output_ao32; assert_equal("", worksheet.output_ao32); end
  def test_output_ar32; assert_equal("Imported Petroleum", worksheet.output_ar32); end
  def test_output_as32; assert_in_epsilon(1396000, worksheet.output_as32, 0.001); end
  def test_output_at32; assert_in_epsilon(387.7778088, worksheet.output_at32, 0.001); end
  def test_output_c33; assert_equal("R.06", worksheet.output_c33); end
  def test_output_e33; assert_equal("Hydro", worksheet.output_e33); end
  def test_output_f33; assert_equal("TWh/yr", worksheet.output_f33); end
  def test_output_h33; assert_in_delta(0, (worksheet.output_h33||0), 0.001); end
  def test_output_m33; assert_in_delta(0, (worksheet.output_m33||0), 0.001); end
  def test_output_r33; assert_in_delta(0, (worksheet.output_r33||0), 0.001); end
  def test_output_w33; assert_in_delta(0, (worksheet.output_w33||0), 0.001); end
  def test_output_ab33; assert_in_delta(0, (worksheet.output_ab33||0), 0.001); end
  def test_output_ad33; assert_in_delta(0.40071577500000005, worksheet.output_ad33, 0.001); end
  def test_output_ae33; assert_in_delta(0.42602760000000006, worksheet.output_ae33, 0.001); end
  def test_output_af33; assert_in_delta(0.4519968750000001, worksheet.output_af33, 0.001); end
  def test_output_ag33; assert_in_delta(0.4786236000000001, worksheet.output_ag33, 0.001); end
  def test_output_ah33; assert_in_delta(0.5059077750000001, worksheet.output_ah33, 0.001); end
  def test_output_ai33; assert_in_delta(0.5338494000000001, worksheet.output_ai33, 0.001); end
  def test_output_aj33; assert_in_delta(0.5624484750000001, worksheet.output_aj33, 0.001); end
  def test_output_al33; assert_in_delta(0.0018160102620414361, worksheet.output_al33, 0.001); end
  def test_output_am33; assert_in_delta(0.011395837728269242, worksheet.output_am33, 0.001); end
  def test_output_an33; assert_in_delta(0.5734265734265735, worksheet.output_an33, 0.001); end
  def test_output_ao33; assert_equal("", worksheet.output_ao33); end
  def test_output_ar33; assert_equal("Net secondary fuels used", worksheet.output_ar33); end
  def test_output_as33; assert_in_epsilon(1016000, worksheet.output_as33, 0.001); end
  def test_output_at33; assert_in_epsilon(282.2222448, worksheet.output_at33, 0.001); end
  def test_output_c34; assert_equal("Y.02", worksheet.output_c34); end
  def test_output_e34; assert_equal("Electricity imports (exports)", worksheet.output_e34); end
  def test_output_f34; assert_equal("TWh/yr", worksheet.output_f34); end
  def test_output_h34; assert_in_delta(0, (worksheet.output_h34||0), 0.001); end
  def test_output_m34; assert_in_delta(0, (worksheet.output_m34||0), 0.001); end
  def test_output_r34; assert_in_delta(0, (worksheet.output_r34||0), 0.001); end
  def test_output_w34; assert_in_delta(0, (worksheet.output_w34||0), 0.001); end
  def test_output_ab34; assert_in_delta(0, (worksheet.output_ab34||0), 0.001); end
  def test_output_al34; assert_in_delta(-0.676900229240536, worksheet.output_al34, 0.001); end
  def test_output_am34; assert_in_delta(0.05794440044483662, worksheet.output_am34, 0.001); end
  def test_output_an34; assert_in_epsilon(8.517300233173566, worksheet.output_an34, 0.001); end
  def test_output_ao34; assert_equal("", worksheet.output_ao34); end
  def test_output_e35; assert_equal("Electricity (nuclear, RES) and net imports", worksheet.output_e35); end
  def test_output_f35; assert_equal("TWh/yr", worksheet.output_f35); end
  def test_output_h35; assert_in_delta(0, (worksheet.output_h35||0), 0.001); end
  def test_output_i35; assert_in_delta(0, (worksheet.output_i35||0), 0.001); end
  def test_output_j35; assert_in_delta(0, (worksheet.output_j35||0), 0.001); end
  def test_output_k35; assert_in_delta(0, (worksheet.output_k35||0), 0.001); end
  def test_output_l35; assert_in_delta(0, (worksheet.output_l35||0), 0.001); end
  def test_output_m35; assert_in_delta(0, (worksheet.output_m35||0), 0.001); end
  def test_output_n35; assert_in_delta(0, (worksheet.output_n35||0), 0.001); end
  def test_output_o35; assert_in_delta(0, (worksheet.output_o35||0), 0.001); end
  def test_output_p35; assert_in_delta(0, (worksheet.output_p35||0), 0.001); end
  def test_output_q35; assert_in_delta(0, (worksheet.output_q35||0), 0.001); end
  def test_output_r35; assert_in_delta(0, (worksheet.output_r35||0), 0.001); end
  def test_output_s35; assert_in_delta(0, (worksheet.output_s35||0), 0.001); end
  def test_output_t35; assert_in_delta(0, (worksheet.output_t35||0), 0.001); end
  def test_output_u35; assert_in_delta(0, (worksheet.output_u35||0), 0.001); end
  def test_output_v35; assert_in_delta(0, (worksheet.output_v35||0), 0.001); end
  def test_output_w35; assert_in_delta(0, (worksheet.output_w35||0), 0.001); end
  def test_output_x35; assert_in_delta(0, (worksheet.output_x35||0), 0.001); end
  def test_output_y35; assert_in_delta(0, (worksheet.output_y35||0), 0.001); end
  def test_output_z35; assert_in_delta(0, (worksheet.output_z35||0), 0.001); end
  def test_output_aa35; assert_in_delta(0, (worksheet.output_aa35||0), 0.001); end
  def test_output_ab35; assert_in_epsilon(145.4, worksheet.output_ab35, 0.001); end
  def test_output_ad35; assert_in_epsilon(158.0967798441951, worksheet.output_ad35, 0.001); end
  def test_output_ae35; assert_in_epsilon(161.17109668778153, worksheet.output_ae35, 0.001); end
  def test_output_af35; assert_in_epsilon(179.24412502836844, worksheet.output_af35, 0.001); end
  def test_output_ag35; assert_in_epsilon(189.29375570232997, worksheet.output_ag35, 0.001); end
  def test_output_ah35; assert_in_epsilon(167.71414636972554, worksheet.output_ah35, 0.001); end
  def test_output_ai35; assert_in_epsilon(176.34024790983523, worksheet.output_ai35, 0.001); end
  def test_output_aj35; assert_in_epsilon(116.18494950395731, worksheet.output_aj35, 0.001); end
  def test_output_al35; assert_in_delta(0.3819621121312711, worksheet.output_al35, 0.001); end
  def test_output_am35; assert_in_delta(-0.0003216004865342903, worksheet.output_am35, 0.001); end
  def test_output_an35; assert_in_delta(-0.012783674155000369, worksheet.output_an35, 0.001); end
  def test_output_ao35; assert_equal("", worksheet.output_ao35); end
  def test_output_c36; assert_equal("R.07", worksheet.output_c36); end
  def test_output_e36; assert_equal("Environmental heat", worksheet.output_e36); end
  def test_output_f36; assert_equal("TWh/yr", worksheet.output_f36); end
  def test_output_al36; assert_in_delta(0.049610076199474176, worksheet.output_al36, 0.001); end
  def test_output_am36; assert_in_delta(0.07534760073098012, worksheet.output_am36, 0.001); end
  def test_output_an36; assert_in_epsilon(17.27910041213586, worksheet.output_an36, 0.001); end
  def test_output_ao36; assert_equal("", worksheet.output_ao36); end
  def test_output_ar36; assert_equal("NIR", worksheet.output_ar36); end
  def test_output_as36; assert_equal("(TJ)", worksheet.output_as36); end
  def test_output_at36; assert_equal("TWh", worksheet.output_at36); end
  def test_output_c37; assert_equal("W.01", worksheet.output_c37); end
  def test_output_e37; assert_equal("Waste", worksheet.output_e37); end
  def test_output_f37; assert_equal("TWh/yr", worksheet.output_f37); end
  def test_output_ad37; assert_in_epsilon(27.392613803383853, worksheet.output_ad37, 0.001); end
  def test_output_ae37; assert_in_epsilon(34.12852586150693, worksheet.output_ae37, 0.001); end
  def test_output_af37; assert_in_epsilon(36.05076916007124, worksheet.output_af37, 0.001); end
  def test_output_ag37; assert_in_epsilon(37.93203918637083, worksheet.output_ag37, 0.001); end
  def test_output_ah37; assert_in_epsilon(39.77843513783762, worksheet.output_ah37, 0.001); end
  def test_output_ai37; assert_in_epsilon(41.58626082681434, worksheet.output_ai37, 0.001); end
  def test_output_aj37; assert_in_epsilon(43.33734015201782, worksheet.output_aj37, 0.001); end
  def test_output_al37; assert_in_delta(0.1383740861990353, worksheet.output_al37, 0.001); end
  def test_output_am37; assert_in_delta(0.019766606781329132, worksheet.output_am37, 0.001); end
  def test_output_an37; assert_in_epsilon(1.1879201060750497, worksheet.output_an37, 0.001); end
  def test_output_ao37; assert_equal("", worksheet.output_ao37); end
  def test_output_ar37; assert_equal("1.A. Fuel Combustion", worksheet.output_ar37); end
  def test_output_as37; assert_in_epsilon(1706261.4076463738, worksheet.output_as37, 0.001); end
  def test_output_at37; assert_in_epsilon(473.9615400409129, worksheet.output_at37, 0.001); end
  def test_output_c38; assert_equal("A.01", worksheet.output_c38); end
  def test_output_e38; assert_equal("Agriculture", worksheet.output_e38); end
  def test_output_f38; assert_equal("TWh/yr", worksheet.output_f38); end
  def test_output_ad38; assert_in_delta(0.41, worksheet.output_ad38, 0.001); end
  def test_output_ae38; assert_in_delta(0.6, worksheet.output_ae38, 0.001); end
  def test_output_af38; assert_in_delta(0.6, worksheet.output_af38, 0.001); end
  def test_output_ag38; assert_in_delta(0.6, worksheet.output_ag38, 0.001); end
  def test_output_ah38; assert_in_delta(0.6, worksheet.output_ah38, 0.001); end
  def test_output_ai38; assert_in_delta(0.6, worksheet.output_ai38, 0.001); end
  def test_output_aj38; assert_in_delta(0.6, worksheet.output_aj38, 0.001); end
  def test_output_al38; assert_in_delta(0.001841468564951896, worksheet.output_al38, 0.001); end
  def test_output_am38; assert_in_delta(0.025399766571952975, worksheet.output_am38, 0.001); end
  def test_output_an38; assert_in_epsilon(1.727272727272727, worksheet.output_an38, 0.001); end
  def test_output_ao38; assert_equal("", worksheet.output_ao38); end
  def test_output_ar38; assert_equal("Liquid Fuels", worksheet.output_ar38); end
  def test_output_as38; assert_in_epsilon(660628.5025096091, worksheet.output_as38, 0.001); end
  def test_output_at38; assert_in_epsilon(183.50793204441368, worksheet.output_at38, 0.001); end
  def test_output_e39; assert_equal("Local Biomass", worksheet.output_e39); end
  def test_output_f39; assert_equal("TWh/yr", worksheet.output_f39); end
  def test_output_ad39; assert_in_epsilon(27.802613803383853, worksheet.output_ad39, 0.001); end
  def test_output_ae39; assert_in_epsilon(34.72852586150693, worksheet.output_ae39, 0.001); end
  def test_output_af39; assert_in_epsilon(36.65076916007124, worksheet.output_af39, 0.001); end
  def test_output_ag39; assert_in_epsilon(38.53203918637083, worksheet.output_ag39, 0.001); end
  def test_output_ah39; assert_in_epsilon(40.37843513783762, worksheet.output_ah39, 0.001); end
  def test_output_ai39; assert_in_epsilon(42.18626082681434, worksheet.output_ai39, 0.001); end
  def test_output_aj39; assert_in_epsilon(43.937340152017825, worksheet.output_aj39, 0.001); end
  def test_output_al39; assert_in_delta(0.1402155547639872, worksheet.output_al39, 0.001); end
  def test_output_am39; assert_in_delta(0.01983290957798922, worksheet.output_am39, 0.001); end
  def test_output_an39; assert_in_epsilon(1.1936174604502137, worksheet.output_an39, 0.001); end
  def test_output_ao39; assert_equal("", worksheet.output_ao39); end
  def test_output_ar39; assert_equal("Solid Fuels", worksheet.output_ar39); end
  def test_output_as39; assert_in_epsilon(179707.136001178, worksheet.output_as39, 0.001); end
  def test_output_at39; assert_in_epsilon(49.918652882708024, worksheet.output_at39, 0.001); end
  def test_output_c40; assert_equal("Y.01", worksheet.output_c40); end
  def test_output_e40; assert_equal("Biomass imports (exports)", worksheet.output_e40); end
  def test_output_f40; assert_equal("TWh/yr", worksheet.output_f40); end
  def test_output_ad40; assert_in_epsilon(21.346242662072274, worksheet.output_ad40, 0.001); end
  def test_output_ae40; assert_in_epsilon(27.361760727655923, worksheet.output_ae40, 0.001); end
  def test_output_af40; assert_in_epsilon(34.588720848931914, worksheet.output_af40, 0.001); end
  def test_output_ag40; assert_in_epsilon(39.18114790044423, worksheet.output_ag40, 0.001); end
  def test_output_ah40; assert_in_epsilon(43.052559864942396, worksheet.output_ah40, 0.001); end
  def test_output_ai40; assert_in_epsilon(46.75095244928977, worksheet.output_ai40, 0.001); end
  def test_output_aj40; assert_in_epsilon(50.39130191544706, worksheet.output_aj40, 0.001); end
  def test_output_al40; assert_in_delta(0.16576179210357644, worksheet.output_al40, 0.001); end
  def test_output_am40; assert_in_delta(0.027361072660865737, worksheet.output_am40, 0.001); end
  def test_output_an40; assert_in_epsilon(1.9439080468716545, worksheet.output_an40, 0.001); end
  def test_output_ao40; assert_equal("", worksheet.output_ao40); end
  def test_output_ar40; assert_equal("Gaseous Fuels", worksheet.output_ar40); end
  def test_output_as40; assert_in_epsilon(661442.3745763535, worksheet.output_as40, 0.001); end
  def test_output_at40; assert_in_epsilon(183.7340076365954, worksheet.output_at40, 0.001); end
  def test_output_e41; assert_equal("Total Biomass", worksheet.output_e41); end
  def test_output_f41; assert_equal("TWh/yr", worksheet.output_f41); end
  def test_output_g41; assert_equal("NIR", worksheet.output_g41); end
  def test_output_h41; assert_in_epsilon(5.813220292196417, worksheet.output_h41, 0.001); end
  def test_output_i41; assert_in_delta(0, (worksheet.output_i41||0), 0.001); end
  def test_output_j41; assert_in_delta(0, (worksheet.output_j41||0), 0.001); end
  def test_output_k41; assert_in_delta(0, (worksheet.output_k41||0), 0.001); end
  def test_output_l41; assert_in_delta(0, (worksheet.output_l41||0), 0.001); end
  def test_output_m41; assert_in_epsilon(6.132011385448, worksheet.output_m41, 0.001); end
  def test_output_n41; assert_in_delta(0, (worksheet.output_n41||0), 0.001); end
  def test_output_o41; assert_in_delta(0, (worksheet.output_o41||0), 0.001); end
  def test_output_p41; assert_in_delta(0, (worksheet.output_p41||0), 0.001); end
  def test_output_q41; assert_in_delta(0, (worksheet.output_q41||0), 0.001); end
  def test_output_r41; assert_in_epsilon(7.04027535947325, worksheet.output_r41, 0.001); end
  def test_output_s41; assert_in_delta(0, (worksheet.output_s41||0), 0.001); end
  def test_output_t41; assert_in_delta(0, (worksheet.output_t41||0), 0.001); end
  def test_output_u41; assert_in_delta(0, (worksheet.output_u41||0), 0.001); end
  def test_output_v41; assert_in_delta(0, (worksheet.output_v41||0), 0.001); end
  def test_output_w41; assert_in_epsilon(12.262136986004055, worksheet.output_w41, 0.001); end
  def test_output_x41; assert_in_delta(0, (worksheet.output_x41||0), 0.001); end
  def test_output_y41; assert_in_delta(0, (worksheet.output_y41||0), 0.001); end
  def test_output_z41; assert_in_delta(0, (worksheet.output_z41||0), 0.001); end
  def test_output_aa41; assert_in_delta(0, (worksheet.output_aa41||0), 0.001); end
  def test_output_ab41; assert_in_epsilon(28.64358923708111, worksheet.output_ab41, 0.001); end
  def test_output_al41; assert_in_delta(0.30597734686756367, worksheet.output_al41, 0.001); end
  def test_output_am41; assert_in_delta(0.023628164686863684, worksheet.output_am41, 0.001); end
  def test_output_an41; assert_in_epsilon(1.5450075332197093, worksheet.output_an41, 0.001); end
  def test_output_ao41; assert_in_epsilon(16.149814799993838, worksheet.output_ao41, 0.001); end
  def test_output_ar41; assert_equal("Biomass", worksheet.output_ar41); end
  def test_output_as41; assert_in_epsilon(103116.921253492, worksheet.output_as41, 0.001); end
  def test_output_at41; assert_in_epsilon(28.643591528568248, worksheet.output_at41, 0.001); end
  def test_output_c42; assert_equal("Y.04", worksheet.output_c42); end
  def test_output_e42; assert_equal("Coal imports (exports)", worksheet.output_e42); end
  def test_output_f42; assert_equal("TWh/yr", worksheet.output_f42); end
  def test_output_g42; assert_equal("NIR", worksheet.output_g42); end
  def test_output_h42; assert_in_epsilon(122.35595086906251, worksheet.output_h42, 0.001); end
  def test_output_m42; assert_in_epsilon(108.90307089440945, worksheet.output_m42, 0.001); end
  def test_output_r42; assert_in_epsilon(91.60107708935166, worksheet.output_r42, 0.001); end
  def test_output_w42; assert_in_epsilon(75.65307958894279, worksheet.output_w42, 0.001); end
  def test_output_ab42; assert_in_epsilon(49.918648889216115, worksheet.output_ab42, 0.001); end
  def test_output_ad42; assert_in_epsilon(37.945283578534436, worksheet.output_ad42, 0.001); end
  def test_output_ae42; assert_in_epsilon(27.77861426617532, worksheet.output_ae42, 0.001); end
  def test_output_af42; assert_in_epsilon(3.0999953567357443, worksheet.output_af42, 0.001); end
  def test_output_ag42; assert_in_delta(-0.06788837924725387, worksheet.output_ag42, 0.001); end
  def test_output_ah42; assert_in_delta(-0.052001147023488625, worksheet.output_ah42, 0.001); end
  def test_output_ai42; assert_in_delta(-0.0353906730743579, worksheet.output_ai42, 0.001); end
  def test_output_aj42; assert_in_delta(-0.017695336537178953, worksheet.output_aj42, 0.001); end
  def test_output_al42; assert_in_delta(0, (worksheet.output_al42||0), 0.001); end
  def test_output_am42; assert_in_delta(-1, worksheet.output_am42, 0.001); end
  def test_output_an42; assert_in_delta(-1, worksheet.output_an42, 0.001); end
  def test_output_ao42; assert_in_delta(-1, worksheet.output_ao42, 0.001); end
  def test_output_ar42; assert_equal("Other Fuels", worksheet.output_ar42); end
  def test_output_as42; assert_in_epsilon(101366.47330574159, worksheet.output_as42, 0.001); end
  def test_output_at42; assert_in_epsilon(28.157355948627625, worksheet.output_at42, 0.001); end
  def test_output_c43; assert_equal("Q.01", worksheet.output_c43); end
  def test_output_e43; assert_equal("Coal reserves", worksheet.output_e43); end
  def test_output_f43; assert_equal("TWh/yr", worksheet.output_f43); end
  def test_output_h43; assert_in_delta(0, (worksheet.output_h43||0), 0.001); end
  def test_output_m43; assert_in_delta(0, (worksheet.output_m43||0), 0.001); end
  def test_output_r43; assert_in_delta(0, (worksheet.output_r43||0), 0.001); end
  def test_output_w43; assert_in_delta(0, (worksheet.output_w43||0), 0.001); end
  def test_output_ab43; assert_in_delta(0, (worksheet.output_ab43||0), 0.001); end
  def test_output_ac43; assert_in_delta(0, (worksheet.output_ac43||0), 0.001); end
  def test_output_ad43; assert_in_delta(0, (worksheet.output_ad43||0), 0.001); end
  def test_output_ae43; assert_in_delta(0, (worksheet.output_ae43||0), 0.001); end
  def test_output_af43; assert_in_delta(0, (worksheet.output_af43||0), 0.001); end
  def test_output_ag43; assert_in_delta(0, (worksheet.output_ag43||0), 0.001); end
  def test_output_ah43; assert_in_delta(0, (worksheet.output_ah43||0), 0.001); end
  def test_output_ai43; assert_in_delta(0, (worksheet.output_ai43||0), 0.001); end
  def test_output_aj43; assert_in_delta(0, (worksheet.output_aj43||0), 0.001); end
  def test_output_ak43; assert_in_delta(0, (worksheet.output_ak43||0), 0.001); end
  def test_output_al43; assert_in_delta(0, (worksheet.output_al43||0), 0.001); end
  def test_output_am43; assert_equal("", worksheet.output_am43); end
  def test_output_an43; assert_equal("", worksheet.output_an43); end
  def test_output_ao43; assert_equal("", worksheet.output_ao43); end
  def test_output_ap43; assert_equal("2010 to 2050 fossil fuels", worksheet.output_ap43); end
  def test_output_e44; assert_equal("Coal", worksheet.output_e44); end
  def test_output_f44; assert_equal("TWh/yr", worksheet.output_f44); end
  def test_output_g44; assert_equal("Sum of above", worksheet.output_g44); end
  def test_output_h44; assert_in_epsilon(122.35595086906251, worksheet.output_h44, 0.001); end
  def test_output_i44; assert_in_delta(0, (worksheet.output_i44||0), 0.001); end
  def test_output_j44; assert_in_delta(0, (worksheet.output_j44||0), 0.001); end
  def test_output_k44; assert_in_delta(0, (worksheet.output_k44||0), 0.001); end
  def test_output_l44; assert_in_delta(0, (worksheet.output_l44||0), 0.001); end
  def test_output_m44; assert_in_epsilon(108.90307089440945, worksheet.output_m44, 0.001); end
  def test_output_n44; assert_in_delta(0, (worksheet.output_n44||0), 0.001); end
  def test_output_o44; assert_in_delta(0, (worksheet.output_o44||0), 0.001); end
  def test_output_p44; assert_in_delta(0, (worksheet.output_p44||0), 0.001); end
  def test_output_q44; assert_in_delta(0, (worksheet.output_q44||0), 0.001); end
  def test_output_r44; assert_in_epsilon(91.60107708935166, worksheet.output_r44, 0.001); end
  def test_output_s44; assert_in_delta(0, (worksheet.output_s44||0), 0.001); end
  def test_output_t44; assert_in_delta(0, (worksheet.output_t44||0), 0.001); end
  def test_output_u44; assert_in_delta(0, (worksheet.output_u44||0), 0.001); end
  def test_output_v44; assert_in_delta(0, (worksheet.output_v44||0), 0.001); end
  def test_output_w44; assert_in_epsilon(75.65307958894279, worksheet.output_w44, 0.001); end
  def test_output_x44; assert_in_delta(0, (worksheet.output_x44||0), 0.001); end
  def test_output_y44; assert_in_delta(0, (worksheet.output_y44||0), 0.001); end
  def test_output_z44; assert_in_delta(0, (worksheet.output_z44||0), 0.001); end
  def test_output_aa44; assert_in_delta(0, (worksheet.output_aa44||0), 0.001); end
  def test_output_ab44; assert_in_epsilon(49.918648889216115, worksheet.output_ab44, 0.001); end
  def test_output_al44; assert_in_delta(0, (worksheet.output_al44||0), 0.001); end
  def test_output_am44; assert_in_delta(-1, worksheet.output_am44, 0.001); end
  def test_output_an44; assert_in_delta(-1, worksheet.output_an44, 0.001); end
  def test_output_ao44; assert_in_delta(-1, worksheet.output_ao44, 0.001); end
  def test_output_ac42; assert_in_epsilon(47.18969341914303, worksheet.output_ac42, 0.001); end
  def test_output_ac44; assert_in_epsilon(47.18969341914303, worksheet.output_ac44, 0.001); end
  def test_output_ac46; assert_in_epsilon(171.99383681532072, worksheet.output_ac46, 0.001); end
  def test_output_ac48; assert_in_epsilon(171.99383681532072, worksheet.output_ac48, 0.001); end
  def test_output_ac49; assert_in_epsilon(175.7065857148738, worksheet.output_ac49, 0.001); end
  def test_output_ac51; assert_in_epsilon(175.7065857148738, worksheet.output_ac51, 0.001); end
  def test_output_ap44; assert_in_delta(-0.7834500820453956, worksheet.output_ap44, 0.001); end
  def test_output_c45; assert_equal("Q.02", worksheet.output_c45); end
  def test_output_e45; assert_equal("Oil reserves", worksheet.output_e45); end
  def test_output_f45; assert_equal("TWh/yr", worksheet.output_f45); end
  def test_output_h45; assert_in_delta(0, (worksheet.output_h45||0), 0.001); end
  def test_output_m45; assert_in_delta(0, (worksheet.output_m45||0), 0.001); end
  def test_output_r45; assert_in_delta(0, (worksheet.output_r45||0), 0.001); end
  def test_output_w45; assert_in_delta(0, (worksheet.output_w45||0), 0.001); end
  def test_output_ab45; assert_in_delta(0, (worksheet.output_ab45||0), 0.001); end
  def test_output_ac45; assert_in_delta(0, (worksheet.output_ac45||0), 0.001); end
  def test_output_ad45; assert_in_delta(0, (worksheet.output_ad45||0), 0.001); end
  def test_output_ae45; assert_in_delta(0, (worksheet.output_ae45||0), 0.001); end
  def test_output_af45; assert_in_delta(0, (worksheet.output_af45||0), 0.001); end
  def test_output_ag45; assert_in_delta(0, (worksheet.output_ag45||0), 0.001); end
  def test_output_ah45; assert_in_delta(0, (worksheet.output_ah45||0), 0.001); end
  def test_output_ai45; assert_in_delta(0, (worksheet.output_ai45||0), 0.001); end
  def test_output_aj45; assert_in_delta(0, (worksheet.output_aj45||0), 0.001); end
  def test_output_ak45; assert_in_delta(0, (worksheet.output_ak45||0), 0.001); end
  def test_output_al45; assert_in_delta(0, (worksheet.output_al45||0), 0.001); end
  def test_output_am45; assert_equal("", worksheet.output_am45); end
  def test_output_an45; assert_equal("", worksheet.output_an45); end
  def test_output_ao45; assert_equal("", worksheet.output_ao45); end
  def test_output_as45; assert_equal("conversion factor", worksheet.output_as45); end
  def test_output_at45; assert_in_epsilon(11.63, worksheet.output_at45, 0.001); end
  def test_output_c46; assert_equal("Y.05", worksheet.output_c46); end
  def test_output_e46; assert_equal("Oil and petroleum products imports (exports)", worksheet.output_e46); end
  def test_output_f46; assert_equal("TWh/yr", worksheet.output_f46); end
  def test_output_g46; assert_equal("NIR", worksheet.output_g46); end
  def test_output_h46; assert_in_epsilon(191.05551678525424, worksheet.output_h46, 0.001); end
  def test_output_m46; assert_in_epsilon(203.9391825148134, worksheet.output_m46, 0.001); end
  def test_output_r46; assert_in_epsilon(195.12328128477102, worksheet.output_r46, 0.001); end
  def test_output_w46; assert_in_epsilon(204.63227248509088, worksheet.output_w46, 0.001); end
  def test_output_ab46; assert_in_epsilon(183.5079173637803, worksheet.output_ab46, 0.001); end
  def test_output_ad46; assert_in_epsilon(156.93084685448636, worksheet.output_ad46, 0.001); end
  def test_output_ae46; assert_in_epsilon(125.66827587329207, worksheet.output_ae46, 0.001); end
  def test_output_af46; assert_in_epsilon(96.66622395396303, worksheet.output_af46, 0.001); end
  def test_output_ag46; assert_in_epsilon(72.24296939547003, worksheet.output_ag46, 0.001); end
  def test_output_ah46; assert_in_epsilon(52.54716973225044, worksheet.output_ah46, 0.001); end
  def test_output_ai46; assert_in_epsilon(37.81184236845431, worksheet.output_ai46, 0.001); end
  def test_output_aj46; assert_in_epsilon(25.346535672530337, worksheet.output_aj46, 0.001); end
  def test_output_al46; assert_in_delta(0.045429309109700715, worksheet.output_al46, 0.001); end
  def test_output_am46; assert_in_delta(-0.05947519333588047, worksheet.output_am46, 0.001); end
  def test_output_an46; assert_in_delta(-0.91393824697849, worksheet.output_an46, 0.001); end
  def test_output_ao46; assert_in_delta(-0.92252466008684, worksheet.output_ao46, 0.001); end
  def test_output_ar46; assert_equal("SPF ECONOMIE = includes energy for combustion and feedstock", worksheet.output_ar46); end
  def test_output_c47; assert_equal("Y.03", worksheet.output_c47); end
  def test_output_e47; assert_equal("Petroleum products imports (exports)", worksheet.output_e47); end
  def test_output_f47; assert_equal("TWh/yr", worksheet.output_f47); end
  def test_output_h47; assert_in_delta(0, (worksheet.output_h47||0), 0.001); end
  def test_output_m47; assert_in_delta(0, (worksheet.output_m47||0), 0.001); end
  def test_output_r47; assert_in_delta(0, (worksheet.output_r47||0), 0.001); end
  def test_output_w47; assert_in_delta(0, (worksheet.output_w47||0), 0.001); end
  def test_output_ab47; assert_in_delta(0, (worksheet.output_ab47||0), 0.001); end
  def test_output_ac47; assert_in_delta(0, (worksheet.output_ac47||0), 0.001); end
  def test_output_ad47; assert_in_delta(0, (worksheet.output_ad47||0), 0.001); end
  def test_output_ae47; assert_in_delta(0, (worksheet.output_ae47||0), 0.001); end
  def test_output_af47; assert_in_delta(0, (worksheet.output_af47||0), 0.001); end
  def test_output_ag47; assert_in_delta(0, (worksheet.output_ag47||0), 0.001); end
  def test_output_ah47; assert_in_delta(0, (worksheet.output_ah47||0), 0.001); end
  def test_output_ai47; assert_in_delta(0, (worksheet.output_ai47||0), 0.001); end
  def test_output_aj47; assert_in_delta(0, (worksheet.output_aj47||0), 0.001); end
  def test_output_ak47; assert_in_delta(0, (worksheet.output_ak47||0), 0.001); end
  def test_output_al47; assert_in_delta(0, (worksheet.output_al47||0), 0.001); end
  def test_output_am47; assert_equal("", worksheet.output_am47); end
  def test_output_an47; assert_equal("", worksheet.output_an47); end
  def test_output_ao47; assert_equal("", worksheet.output_ao47); end
  def test_output_ar47; assert_equal("Energy source", worksheet.output_ar47); end
  def test_output_as47; assert_equal("Mtep", worksheet.output_as47); end
  def test_output_at47; assert_equal("TWh", worksheet.output_at47); end
  def test_output_e48; assert_equal("Oil and petroleum products", worksheet.output_e48); end
  def test_output_f48; assert_equal("TWh/yr", worksheet.output_f48); end
  def test_output_g48; assert_equal("Sum of above", worksheet.output_g48); end
  def test_output_h48; assert_in_epsilon(191.05551678525424, worksheet.output_h48, 0.001); end
  def test_output_i48; assert_in_delta(0, (worksheet.output_i48||0), 0.001); end
  def test_output_j48; assert_in_delta(0, (worksheet.output_j48||0), 0.001); end
  def test_output_k48; assert_in_delta(0, (worksheet.output_k48||0), 0.001); end
  def test_output_l48; assert_in_delta(0, (worksheet.output_l48||0), 0.001); end
  def test_output_m48; assert_in_epsilon(203.9391825148134, worksheet.output_m48, 0.001); end
  def test_output_n48; assert_in_delta(0, (worksheet.output_n48||0), 0.001); end
  def test_output_o48; assert_in_delta(0, (worksheet.output_o48||0), 0.001); end
  def test_output_p48; assert_in_delta(0, (worksheet.output_p48||0), 0.001); end
  def test_output_q48; assert_in_delta(0, (worksheet.output_q48||0), 0.001); end
  def test_output_r48; assert_in_epsilon(195.12328128477102, worksheet.output_r48, 0.001); end
  def test_output_s48; assert_in_delta(0, (worksheet.output_s48||0), 0.001); end
  def test_output_t48; assert_in_delta(0, (worksheet.output_t48||0), 0.001); end
  def test_output_u48; assert_in_delta(0, (worksheet.output_u48||0), 0.001); end
  def test_output_v48; assert_in_delta(0, (worksheet.output_v48||0), 0.001); end
  def test_output_w48; assert_in_epsilon(204.63227248509088, worksheet.output_w48, 0.001); end
  def test_output_x48; assert_in_delta(0, (worksheet.output_x48||0), 0.001); end
  def test_output_y48; assert_in_delta(0, (worksheet.output_y48||0), 0.001); end
  def test_output_z48; assert_in_delta(0, (worksheet.output_z48||0), 0.001); end
  def test_output_aa48; assert_in_delta(0, (worksheet.output_aa48||0), 0.001); end
  def test_output_ab48; assert_in_epsilon(183.5079173637803, worksheet.output_ab48, 0.001); end
  def test_output_al48; assert_in_delta(0.045429309109700715, worksheet.output_al48, 0.001); end
  def test_output_am48; assert_in_delta(-0.05947519333588047, worksheet.output_am48, 0.001); end
  def test_output_an48; assert_in_delta(-0.91393824697849, worksheet.output_an48, 0.001); end
  def test_output_ao48; assert_in_delta(-0.92252466008684, worksheet.output_ao48, 0.001); end
  def test_output_ar48; assert_equal("Pétrole", worksheet.output_ar48); end
  def test_output_as48; assert_in_epsilon(25.9, worksheet.output_as48, 0.001); end
  def test_output_at48; assert_in_epsilon(301.217, worksheet.output_at48, 0.001); end
  def test_output_c49; assert_equal("Y.06", worksheet.output_c49); end
  def test_output_e49; assert_equal("Gas imports (exports)", worksheet.output_e49); end
  def test_output_f49; assert_equal("TWh/yr", worksheet.output_f49); end
  def test_output_g49; assert_equal("NIR", worksheet.output_g49); end
  def test_output_h49; assert_in_epsilon(92.32749043642889, worksheet.output_h49, 0.001); end
  def test_output_m49; assert_in_epsilon(118.71732708836666, worksheet.output_m49, 0.001); end
  def test_output_r49; assert_in_epsilon(148.23251445397443, worksheet.output_r49, 0.001); end
  def test_output_w49; assert_in_epsilon(160.1035298066882, worksheet.output_w49, 0.001); end
  def test_output_ab49; assert_in_epsilon(183.73399293787597, worksheet.output_ab49, 0.001); end
  def test_output_ad49; assert_in_epsilon(100.34643629500692, worksheet.output_ad49, 0.001); end
  def test_output_ae49; assert_in_epsilon(80.733835784066, worksheet.output_ae49, 0.001); end
  def test_output_af49; assert_in_epsilon(73.39861380708993, worksheet.output_af49, 0.001); end
  def test_output_ag49; assert_in_epsilon(69.5071272226522, worksheet.output_ag49, 0.001); end
  def test_output_ah49; assert_in_epsilon(67.56760623404033, worksheet.output_ah49, 0.001); end
  def test_output_ai49; assert_in_epsilon(67.28530260738273, worksheet.output_ai49, 0.001); end
  def test_output_aj49; assert_in_epsilon(68.40158872037455, worksheet.output_aj49, 0.001); end
  def test_output_al49; assert_in_delta(0.21702115569199038, worksheet.output_al49, 0.001); end
  def test_output_am49; assert_in_delta(-0.02249829333309117, worksheet.output_am49, 0.001); end
  def test_output_an49; assert_in_delta(-0.5975601550903878, worksheet.output_an49, 0.001); end
  def test_output_ao49; assert_in_delta(-0.23412484439421843, worksheet.output_ao49, 0.001); end
  def test_output_ar49; assert_equal("Gaz naturel", worksheet.output_ar49); end
  def test_output_as49; assert_in_epsilon(17, worksheet.output_as49, 0.001); end
  def test_output_at49; assert_in_epsilon(197.71, worksheet.output_at49, 0.001); end
  def test_output_c50; assert_equal("Q.03", worksheet.output_c50); end
  def test_output_e50; assert_equal("Gas reserves", worksheet.output_e50); end
  def test_output_f50; assert_equal("TWh/yr", worksheet.output_f50); end
  def test_output_h50; assert_in_delta(0, (worksheet.output_h50||0), 0.001); end
  def test_output_m50; assert_in_delta(0, (worksheet.output_m50||0), 0.001); end
  def test_output_r50; assert_in_delta(0, (worksheet.output_r50||0), 0.001); end
  def test_output_w50; assert_in_delta(0, (worksheet.output_w50||0), 0.001); end
  def test_output_ab50; assert_in_epsilon(28.157355948627625, worksheet.output_ab50, 0.001); end
  def test_output_ac50; assert_in_delta(0, (worksheet.output_ac50||0), 0.001); end
  def test_output_ad50; assert_in_delta(0, (worksheet.output_ad50||0), 0.001); end
  def test_output_ae50; assert_in_delta(0, (worksheet.output_ae50||0), 0.001); end
  def test_output_af50; assert_in_delta(0, (worksheet.output_af50||0), 0.001); end
  def test_output_ag50; assert_in_delta(0, (worksheet.output_ag50||0), 0.001); end
  def test_output_ah50; assert_in_delta(0, (worksheet.output_ah50||0), 0.001); end
  def test_output_ai50; assert_in_delta(0, (worksheet.output_ai50||0), 0.001); end
  def test_output_aj50; assert_in_delta(0, (worksheet.output_aj50||0), 0.001); end
  def test_output_ak50; assert_in_delta(0, (worksheet.output_ak50||0), 0.001); end
  def test_output_al50; assert_in_delta(0, (worksheet.output_al50||0), 0.001); end
  def test_output_am50; assert_equal("", worksheet.output_am50); end
  def test_output_an50; assert_equal("", worksheet.output_an50); end
  def test_output_ao50; assert_equal("", worksheet.output_ao50); end
  def test_output_ar50; assert_equal("Solides ", worksheet.output_ar50); end
  def test_output_as50; assert_in_epsilon(3.4, worksheet.output_as50, 0.001); end
  def test_output_at50; assert_in_epsilon(39.542, worksheet.output_at50, 0.001); end
  def test_output_e51; assert_equal("Natural gas", worksheet.output_e51); end
  def test_output_f51; assert_equal("TWh/yr", worksheet.output_f51); end
  def test_output_g51; assert_equal("Sum of above", worksheet.output_g51); end
  def test_output_h51; assert_in_epsilon(92.32749043642889, worksheet.output_h51, 0.001); end
  def test_output_i51; assert_in_delta(0, (worksheet.output_i51||0), 0.001); end
  def test_output_j51; assert_in_delta(0, (worksheet.output_j51||0), 0.001); end
  def test_output_k51; assert_in_delta(0, (worksheet.output_k51||0), 0.001); end
  def test_output_l51; assert_in_delta(0, (worksheet.output_l51||0), 0.001); end
  def test_output_m51; assert_in_epsilon(118.71732708836666, worksheet.output_m51, 0.001); end
  def test_output_n51; assert_in_delta(0, (worksheet.output_n51||0), 0.001); end
  def test_output_o51; assert_in_delta(0, (worksheet.output_o51||0), 0.001); end
  def test_output_p51; assert_in_delta(0, (worksheet.output_p51||0), 0.001); end
  def test_output_q51; assert_in_delta(0, (worksheet.output_q51||0), 0.001); end
  def test_output_r51; assert_in_epsilon(148.23251445397443, worksheet.output_r51, 0.001); end
  def test_output_s51; assert_in_delta(0, (worksheet.output_s51||0), 0.001); end
  def test_output_t51; assert_in_delta(0, (worksheet.output_t51||0), 0.001); end
  def test_output_u51; assert_in_delta(0, (worksheet.output_u51||0), 0.001); end
  def test_output_v51; assert_in_delta(0, (worksheet.output_v51||0), 0.001); end
  def test_output_w51; assert_in_epsilon(160.1035298066882, worksheet.output_w51, 0.001); end
  def test_output_x51; assert_in_delta(0, (worksheet.output_x51||0), 0.001); end
  def test_output_y51; assert_in_delta(0, (worksheet.output_y51||0), 0.001); end
  def test_output_z51; assert_in_delta(0, (worksheet.output_z51||0), 0.001); end
  def test_output_aa51; assert_in_delta(0, (worksheet.output_aa51||0), 0.001); end
  def test_output_ab51; assert_in_epsilon(183.73399293787597, worksheet.output_ab51, 0.001); end
  def test_output_al51; assert_in_delta(0.21702115569199038, worksheet.output_al51, 0.001); end
  def test_output_am51; assert_in_delta(-0.02249829333309117, worksheet.output_am51, 0.001); end
  def test_output_an51; assert_in_delta(-0.5975601550903878, worksheet.output_an51, 0.001); end
  def test_output_ao51; assert_in_delta(-0.23412484439421843, worksheet.output_ao51, 0.001); end
  def test_output_ap51; assert_equal("Scenario VS reference case", worksheet.output_ap51); end
  def test_output_ar51; assert_equal("Nucléaire", worksheet.output_ar51); end
  def test_output_as51; assert_in_epsilon(12.5, worksheet.output_as51, 0.001); end
  def test_output_at51; assert_in_epsilon(145.375, worksheet.output_at51, 0.001); end
  def test_output_b52; assert_equal("REF", worksheet.output_b52); end
  def test_output_e52; assert_equal("Total Supply (excluding exports)", worksheet.output_e52); end
  def test_output_f52; assert_equal("TWh/yr", worksheet.output_f52); end
  def test_output_g52; assert_equal("Sum of above", worksheet.output_g52); end
  def test_output_h52; assert_in_epsilon(411.5521783829421, worksheet.output_h52, 0.001); end
  def test_output_i52; assert_in_delta(0, (worksheet.output_i52||0), 0.001); end
  def test_output_j52; assert_in_delta(0, (worksheet.output_j52||0), 0.001); end
  def test_output_k52; assert_in_delta(0, (worksheet.output_k52||0), 0.001); end
  def test_output_l52; assert_in_delta(0, (worksheet.output_l52||0), 0.001); end
  def test_output_m52; assert_in_epsilon(437.6915918830375, worksheet.output_m52, 0.001); end
  def test_output_n52; assert_in_delta(0, (worksheet.output_n52||0), 0.001); end
  def test_output_o52; assert_in_delta(0, (worksheet.output_o52||0), 0.001); end
  def test_output_p52; assert_in_delta(0, (worksheet.output_p52||0), 0.001); end
  def test_output_q52; assert_in_delta(0, (worksheet.output_q52||0), 0.001); end
  def test_output_r52; assert_in_epsilon(441.99714818757036, worksheet.output_r52, 0.001); end
  def test_output_s52; assert_in_delta(0, (worksheet.output_s52||0), 0.001); end
  def test_output_t52; assert_in_delta(0, (worksheet.output_t52||0), 0.001); end
  def test_output_u52; assert_in_delta(0, (worksheet.output_u52||0), 0.001); end
  def test_output_v52; assert_in_delta(0, (worksheet.output_v52||0), 0.001); end
  def test_output_w52; assert_in_epsilon(452.6510188667259, worksheet.output_w52, 0.001); end
  def test_output_x52; assert_in_delta(0, (worksheet.output_x52||0), 0.001); end
  def test_output_y52; assert_in_delta(0, (worksheet.output_y52||0), 0.001); end
  def test_output_z52; assert_in_delta(0, (worksheet.output_z52||0), 0.001); end
  def test_output_aa52; assert_in_delta(0, (worksheet.output_aa52||0), 0.001); end
  def test_output_ab52; assert_in_epsilon(591.2041484279536, worksheet.output_ab52, 0.001); end
  def test_output_ad36; assert_in_epsilon(5.3543239838015735, worksheet.output_ad36, 0.001); end
  def test_output_ad41; assert_in_epsilon(49.14885646545613, worksheet.output_ad41, 0.001); end
  def test_output_ad44; assert_in_epsilon(37.945283578534436, worksheet.output_ad44, 0.001); end
  def test_output_ad48; assert_in_epsilon(156.93084685448636, worksheet.output_ad48, 0.001); end
  def test_output_ad51; assert_in_epsilon(100.34643629500692, worksheet.output_ad51, 0.001); end
  def test_output_ad52; assert_in_epsilon(507.82252702148054, worksheet.output_ad52, 0.001); end
  def test_output_ae36; assert_in_epsilon(10.320999678646096, worksheet.output_ae36, 0.001); end
  def test_output_ae41; assert_in_epsilon(62.09028658916286, worksheet.output_ae41, 0.001); end
  def test_output_ae44; assert_in_epsilon(27.77861426617532, worksheet.output_ae44, 0.001); end
  def test_output_ae48; assert_in_epsilon(125.66827587329207, worksheet.output_ae48, 0.001); end
  def test_output_ae51; assert_in_epsilon(80.733835784066, worksheet.output_ae51, 0.001); end
  def test_output_ae52; assert_in_epsilon(467.76310887912393, worksheet.output_ae52, 0.001); end
  def test_output_af36; assert_in_epsilon(13.76115171219378, worksheet.output_af36, 0.001); end
  def test_output_af41; assert_in_epsilon(71.23949000900316, worksheet.output_af41, 0.001); end
  def test_output_af44; assert_in_epsilon(3.0999953567357443, worksheet.output_af44, 0.001); end
  def test_output_af48; assert_in_epsilon(96.66622395396303, worksheet.output_af48, 0.001); end
  def test_output_af51; assert_in_epsilon(73.39861380708993, worksheet.output_af51, 0.001); end
  def test_output_af52; assert_in_epsilon(437.40959986735413, worksheet.output_af52, 0.001); end
  def test_output_ag36; assert_in_epsilon(16.05889112810207, worksheet.output_ag36, 0.001); end
  def test_output_ag41; assert_in_epsilon(77.71318708681505, worksheet.output_ag41, 0.001); end
  def test_output_ag44; assert_in_delta(-0.06788837924725387, worksheet.output_ag44, 0.001); end
  def test_output_ag48; assert_in_epsilon(72.24296939547003, worksheet.output_ag48, 0.001); end
  def test_output_ag51; assert_in_epsilon(69.5071272226522, worksheet.output_ag51, 0.001); end
  def test_output_ag52; assert_in_epsilon(424.7480421561221, worksheet.output_ag52, 0.001); end
  def test_output_ah36; assert_in_epsilon(17.399634625588906, worksheet.output_ah36, 0.001); end
  def test_output_ah41; assert_in_epsilon(83.43099500278001, worksheet.output_ah41, 0.001); end
  def test_output_ah44; assert_in_delta(-0.052001147023488625, worksheet.output_ah44, 0.001); end
  def test_output_ah48; assert_in_epsilon(52.54716973225044, worksheet.output_ah48, 0.001); end
  def test_output_ah51; assert_in_epsilon(67.56760623404033, worksheet.output_ah51, 0.001); end
  def test_output_ah52; assert_in_epsilon(388.60755081736175, worksheet.output_ah52, 0.001); end
  def test_output_ai36; assert_in_epsilon(17.791292556047676, worksheet.output_ai36, 0.001); end
  def test_output_ai41; assert_in_epsilon(88.9372132761041, worksheet.output_ai41, 0.001); end
  def test_output_ai44; assert_in_delta(-0.0353906730743579, worksheet.output_ai44, 0.001); end
  def test_output_ai48; assert_in_epsilon(37.81184236845431, worksheet.output_ai48, 0.001); end
  def test_output_ai51; assert_in_epsilon(67.28530260738273, worksheet.output_ai51, 0.001); end
  def test_output_ai52; assert_in_epsilon(388.1305080447497, worksheet.output_ai52, 0.001); end
  def test_output_aj36; assert_in_epsilon(17.262503360025125, worksheet.output_aj36, 0.001); end
  def test_output_aj41; assert_in_epsilon(94.32864206746488, worksheet.output_aj41, 0.001); end
  def test_output_aj44; assert_in_delta(-0.017695336537178953, worksheet.output_aj44, 0.001); end
  def test_output_aj48; assert_in_epsilon(25.346535672530337, worksheet.output_aj48, 0.001); end
  def test_output_aj51; assert_in_epsilon(68.40158872037455, worksheet.output_aj51, 0.001); end
  def test_output_aj52; assert_in_epsilon(321.50652398781506, worksheet.output_aj52, 0.001); end
  def test_output_al52; assert_in_delta(1, worksheet.output_al52, 0.001); end
  def test_output_am52; assert_in_delta(-0.013492573540947905, worksheet.output_am52, 0.001); end
  def test_output_an52; assert_in_delta(-0.4192163800196279, worksheet.output_an52, 0.001); end
  def test_output_ao52; assert_in_delta(-0.20829746410987116, worksheet.output_ao52, 0.001); end
  def test_output_ap52; assert_in_delta(-0.4338240979501735, worksheet.output_ap52, 0.001); end
  def test_output_ar52; assert_equal("RES et récupération", worksheet.output_ar52); end
  def test_output_as52; assert_in_epsilon(2.9, worksheet.output_as52, 0.001); end
  def test_output_at52; assert_in_epsilon(33.727000000000004, worksheet.output_at52, 0.001); end
  def test_output_b53; assert_equal("REF", worksheet.output_b53); end
  def test_output_e53; assert_equal("Reference scenario", worksheet.output_e53); end
  def test_output_f53; assert_equal("TWh/yr", worksheet.output_f53); end
  def test_output_g53; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g53); end
  def test_output_ac53; assert_in_epsilon(590.4035237132654, worksheet.output_ac53, 0.001); end
  def test_output_ad53; assert_in_epsilon(577.0239059196327, worksheet.output_ad53, 0.001); end
  def test_output_ae53; assert_in_epsilon(579.2841739025088, worksheet.output_ae53, 0.001); end
  def test_output_af53; assert_in_epsilon(523.9556446140252, worksheet.output_af53, 0.001); end
  def test_output_ag53; assert_in_epsilon(531.6762218441254, worksheet.output_ag53, 0.001); end
  def test_output_ah53; assert_in_epsilon(538.7563602813423, worksheet.output_ah53, 0.001); end
  def test_output_ai53; assert_in_epsilon(550.2514372863805, worksheet.output_ai53, 0.001); end
  def test_output_aj53; assert_in_epsilon(561.415939351949, worksheet.output_aj53, 0.001); end
  def test_output_ak53; assert_in_epsilon(575.4870564028481, worksheet.output_ak53, 0.001); end
  def test_output_al53; assert_in_epsilon(1.7662355398375726, worksheet.output_al53, 0.001); end
  def test_output_am53; assert_in_delta(-0.0006395330303889946, worksheet.output_am53, 0.001); end
  def test_output_an53; assert_in_delta(-0.02526486836765829, worksheet.output_an53, 0.001); end
  def test_output_ao53; assert_equal("", worksheet.output_ao53); end
  def test_output_ar53; assert_equal("Total", worksheet.output_ar53); end
  def test_output_as53; assert_in_epsilon(61.699999999999996, worksheet.output_as53, 0.001); end
  def test_output_at53; assert_in_epsilon(717.571, worksheet.output_at53, 0.001); end
  def test_output_e54; assert_equal("Nuclear", worksheet.output_e54); end
  def test_output_f54; assert_equal("TWh/yr", worksheet.output_f54); end
  def test_output_ac27; assert_in_epsilon(146.33666008499998, worksheet.output_ac27, 0.001); end
  def test_output_ac54; assert_in_epsilon(146.33666008499998, worksheet.output_ac54, 0.001); end
  def test_output_ad27; assert_in_epsilon(146.33666008499998, worksheet.output_ad27, 0.001); end
  def test_output_ad54; assert_in_epsilon(146.33666008499998, worksheet.output_ad54, 0.001); end
  def test_output_ae27; assert_in_epsilon(146.33666008499998, worksheet.output_ae27, 0.001); end
  def test_output_ae54; assert_in_epsilon(146.33666008499998, worksheet.output_ae54, 0.001); end
  def test_output_af27; assert_in_epsilon(171.460990085, worksheet.output_af27, 0.001); end
  def test_output_af54; assert_in_epsilon(171.460990085, worksheet.output_af54, 0.001); end
  def test_output_ag27; assert_in_epsilon(196.585320085, worksheet.output_ag27, 0.001); end
  def test_output_ag54; assert_in_epsilon(196.585320085, worksheet.output_ag54, 0.001); end
  def test_output_ah27; assert_in_epsilon(176.79991021, worksheet.output_ah27, 0.001); end
  def test_output_ah54; assert_in_epsilon(176.79991021, worksheet.output_ah54, 0.001); end
  def test_output_ai27; assert_in_epsilon(201.92424020999997, worksheet.output_ai27, 0.001); end
  def test_output_ai54; assert_in_epsilon(201.92424020999997, worksheet.output_ai54, 0.001); end
  def test_output_aj27; assert_in_epsilon(125.62165, worksheet.output_aj27, 0.001); end
  def test_output_aj54; assert_in_epsilon(125.62165, worksheet.output_aj54, 0.001); end
  def test_output_ak54; assert_in_epsilon(150.74598, worksheet.output_ak54, 0.001); end
  def test_output_al54; assert_in_delta(0.4626566391047787, worksheet.output_al54, 0.001); end
  def test_output_ao54; assert_equal("", worksheet.output_ao54); end
  def test_output_e55; assert_equal("Imports of decarbonized electricity", worksheet.output_e55); end
  def test_output_f55; assert_equal("TWh/yr", worksheet.output_f55); end
  def test_output_ac34; assert_in_epsilon(-23.173830825689066, worksheet.output_ac34, 0.001); end
  def test_output_ac55; assert_in_epsilon(-23.173830825689066, worksheet.output_ac55, 0.001); end
  def test_output_ad34; assert_in_epsilon(-3.906942998685048, worksheet.output_ad34, 0.001); end
  def test_output_ad55; assert_in_epsilon(-3.906942998685048, worksheet.output_ad55, 0.001); end
  def test_output_ae34; assert_in_epsilon(-16.00197298182579, worksheet.output_ae34, 0.001); end
  def test_output_ae55; assert_in_epsilon(-16.00197298182579, worksheet.output_ae55, 0.001); end
  def test_output_af34; assert_in_epsilon(-41.60985841522941, worksheet.output_af34, 0.001); end
  def test_output_af55; assert_in_epsilon(-41.60985841522941, worksheet.output_af55, 0.001); end
  def test_output_ag34; assert_in_epsilon(-81.76508111681915, worksheet.output_ag34, 0.001); end
  def test_output_ag55; assert_in_epsilon(-81.76508111681915, worksheet.output_ag55, 0.001); end
  def test_output_ah34; assert_in_epsilon(-112.31679410247817, worksheet.output_ah34, 0.001); end
  def test_output_ah55; assert_in_epsilon(-112.31679410247817, worksheet.output_ah55, 0.001); end
  def test_output_ai34; assert_in_epsilon(-153.3551838901028, worksheet.output_ai34, 0.001); end
  def test_output_ai55; assert_in_epsilon(-153.3551838901028, worksheet.output_ai55, 0.001); end
  def test_output_aj34; assert_in_epsilon(-166.46857668251434, worksheet.output_aj34, 0.001); end
  def test_output_aj55; assert_in_epsilon(-166.46857668251434, worksheet.output_aj55, 0.001); end
  def test_output_ak55; assert_in_epsilon(-220.55230552085533, worksheet.output_ak55, 0.001); end
  def test_output_al55; assert_in_delta(-0.676900229240536, worksheet.output_al55, 0.001); end
  def test_output_ao55; assert_equal("", worksheet.output_ao55); end
  def test_output_e56; assert_equal("Renewables", worksheet.output_e56); end
  def test_output_f56; assert_equal("TWh/yr", worksheet.output_f56); end
  def test_output_h56; assert_in_epsilon(5.813220292196417, worksheet.output_h56, 0.001); end
  def test_output_i56; assert_in_delta(0, (worksheet.output_i56||0), 0.001); end
  def test_output_j56; assert_in_delta(0, (worksheet.output_j56||0), 0.001); end
  def test_output_k56; assert_in_delta(0, (worksheet.output_k56||0), 0.001); end
  def test_output_l56; assert_in_delta(0, (worksheet.output_l56||0), 0.001); end
  def test_output_m56; assert_in_epsilon(6.132011385448, worksheet.output_m56, 0.001); end
  def test_output_n56; assert_in_delta(0, (worksheet.output_n56||0), 0.001); end
  def test_output_o56; assert_in_delta(0, (worksheet.output_o56||0), 0.001); end
  def test_output_p56; assert_in_delta(0, (worksheet.output_p56||0), 0.001); end
  def test_output_q56; assert_in_delta(0, (worksheet.output_q56||0), 0.001); end
  def test_output_r56; assert_in_epsilon(7.04027535947325, worksheet.output_r56, 0.001); end
  def test_output_s56; assert_in_delta(0, (worksheet.output_s56||0), 0.001); end
  def test_output_t56; assert_in_delta(0, (worksheet.output_t56||0), 0.001); end
  def test_output_u56; assert_in_delta(0, (worksheet.output_u56||0), 0.001); end
  def test_output_v56; assert_in_delta(0, (worksheet.output_v56||0), 0.001); end
  def test_output_w56; assert_in_epsilon(12.262136986004055, worksheet.output_w56, 0.001); end
  def test_output_x56; assert_in_delta(0, (worksheet.output_x56||0), 0.001); end
  def test_output_y56; assert_in_delta(0, (worksheet.output_y56||0), 0.001); end
  def test_output_z56; assert_in_delta(0, (worksheet.output_z56||0), 0.001); end
  def test_output_aa56; assert_in_delta(0, (worksheet.output_aa56||0), 0.001); end
  def test_output_ab56; assert_in_epsilon(28.64358923708111, worksheet.output_ab56, 0.001); end
  def test_output_ak56; assert_in_epsilon(310.119806587824, worksheet.output_ak56, 0.001); end
  def test_output_al56; assert_in_delta(0.9517931253340663, worksheet.output_al56, 0.001); end
  def test_output_am56; assert_in_delta(0.05065886460915059, worksheet.output_am56, 0.001); end
  def test_output_an56; assert_in_epsilon(6.218869049931662, worksheet.output_an56, 0.001); end
  def test_output_ao56; assert_in_epsilon(52.347334351688744, worksheet.output_ao56, 0.001); end
  def test_output_ar56; assert_equal("Energy use", worksheet.output_ar56); end
  def test_output_as56; assert_equal("Mtep", worksheet.output_as56); end
  def test_output_at56; assert_equal("TWh", worksheet.output_at56); end
  def test_output_e57; assert_equal("Fossil fuels", worksheet.output_e57); end
  def test_output_f57; assert_equal("TWh/yr", worksheet.output_f57); end
  def test_output_h57; assert_in_epsilon(405.7389580907456, worksheet.output_h57, 0.001); end
  def test_output_i57; assert_in_delta(0, (worksheet.output_i57||0), 0.001); end
  def test_output_j57; assert_in_delta(0, (worksheet.output_j57||0), 0.001); end
  def test_output_k57; assert_in_delta(0, (worksheet.output_k57||0), 0.001); end
  def test_output_l57; assert_in_delta(0, (worksheet.output_l57||0), 0.001); end
  def test_output_m57; assert_in_epsilon(431.55958049758954, worksheet.output_m57, 0.001); end
  def test_output_n57; assert_in_delta(0, (worksheet.output_n57||0), 0.001); end
  def test_output_o57; assert_in_delta(0, (worksheet.output_o57||0), 0.001); end
  def test_output_p57; assert_in_delta(0, (worksheet.output_p57||0), 0.001); end
  def test_output_q57; assert_in_delta(0, (worksheet.output_q57||0), 0.001); end
  def test_output_r57; assert_in_epsilon(434.95687282809706, worksheet.output_r57, 0.001); end
  def test_output_s57; assert_in_delta(0, (worksheet.output_s57||0), 0.001); end
  def test_output_t57; assert_in_delta(0, (worksheet.output_t57||0), 0.001); end
  def test_output_u57; assert_in_delta(0, (worksheet.output_u57||0), 0.001); end
  def test_output_v57; assert_in_delta(0, (worksheet.output_v57||0), 0.001); end
  def test_output_w57; assert_in_epsilon(440.38888188072184, worksheet.output_w57, 0.001); end
  def test_output_x57; assert_in_delta(0, (worksheet.output_x57||0), 0.001); end
  def test_output_y57; assert_in_delta(0, (worksheet.output_y57||0), 0.001); end
  def test_output_z57; assert_in_delta(0, (worksheet.output_z57||0), 0.001); end
  def test_output_aa57; assert_in_delta(0, (worksheet.output_aa57||0), 0.001); end
  def test_output_ab57; assert_in_epsilon(417.1605591908724, worksheet.output_ab57, 0.001); end
  def test_output_ac57; assert_in_epsilon(394.89011594933754, worksheet.output_ac57, 0.001); end
  def test_output_ad57; assert_in_epsilon(295.22256672802774, worksheet.output_ad57, 0.001); end
  def test_output_ae57; assert_in_epsilon(234.1807259235334, worksheet.output_ae57, 0.001); end
  def test_output_af57; assert_in_epsilon(173.1648331177887, worksheet.output_af57, 0.001); end
  def test_output_ag57; assert_in_epsilon(141.68220823887498, worksheet.output_ag57, 0.001); end
  def test_output_ah57; assert_in_epsilon(120.06277481926728, worksheet.output_ah57, 0.001); end
  def test_output_ai57; assert_in_epsilon(105.06175430276268, worksheet.output_ai57, 0.001); end
  def test_output_aj57; assert_in_epsilon(93.73042905636771, worksheet.output_aj57, 0.001); end
  def test_output_ak57; assert_in_epsilon(85.5134222099133, worksheet.output_ak57, 0.001); end
  def test_output_al57; assert_in_delta(0.2624504648016911, worksheet.output_al57, 0.001); end
  def test_output_am57; assert_in_delta(-0.03752612375763997, worksheet.output_am57, 0.001); end
  def test_output_an57; assert_in_delta(-0.7834500820453956, worksheet.output_an57, 0.001); end
  def test_output_ao57; assert_in_delta(-0.789240297228772, worksheet.output_ao57, 0.001); end
  def test_output_e58; assert_equal("RES supply", worksheet.output_e58); end
  def test_output_f58; assert_equal("%", worksheet.output_f58); end
  def test_output_h58; assert_in_delta(0, (worksheet.output_h58||0), 0.001); end
  def test_output_i58; assert_equal(:div0, worksheet.output_i58); end
  def test_output_j58; assert_equal(:div0, worksheet.output_j58); end
  def test_output_k58; assert_equal(:div0, worksheet.output_k58); end
  def test_output_l58; assert_equal(:div0, worksheet.output_l58); end
  def test_output_m58; assert_in_delta(0, (worksheet.output_m58||0), 0.001); end
  def test_output_n58; assert_equal(:div0, worksheet.output_n58); end
  def test_output_o58; assert_equal(:div0, worksheet.output_o58); end
  def test_output_p58; assert_equal(:div0, worksheet.output_p58); end
  def test_output_q58; assert_equal(:div0, worksheet.output_q58); end
  def test_output_r58; assert_in_delta(0, (worksheet.output_r58||0), 0.001); end
  def test_output_s58; assert_equal(:div0, worksheet.output_s58); end
  def test_output_t58; assert_equal(:div0, worksheet.output_t58); end
  def test_output_u58; assert_equal(:div0, worksheet.output_u58); end
  def test_output_v58; assert_equal(:div0, worksheet.output_v58); end
  def test_output_w58; assert_in_delta(0, (worksheet.output_w58||0), 0.001); end
  def test_output_x58; assert_equal(:div0, worksheet.output_x58); end
  def test_output_y58; assert_equal(:div0, worksheet.output_y58); end
  def test_output_z58; assert_equal(:div0, worksheet.output_z58); end
  def test_output_aa58; assert_equal(:div0, worksheet.output_aa58); end
  def test_output_ab58; assert_in_delta(0, (worksheet.output_ab58||0), 0.001); end
  def test_output_ad58; assert_in_delta(0.13817867359824654, worksheet.output_ad58, 0.001); end
  def test_output_ae58; assert_in_delta(0.22072646151985625, worksheet.output_ae58, 0.001); end
  def test_output_af58; assert_in_delta(0.30724893811326986, worksheet.output_af58, 0.001); end
  def test_output_ag58; assert_in_delta(0.3961068168672693, worksheet.output_ag58, 0.001); end
  def test_output_ah58; assert_in_delta(0.5251098684556382, worksheet.output_ah58, 0.001); end
  def test_output_ai58; assert_in_delta(0.6041774417667087, worksheet.output_ai58, 0.001); end
  def test_output_aj58; assert_in_delta(0.8355134392984893, worksheet.output_aj58, 0.001); end
  def test_output_am58; assert_in_delta(0.06502884461839487, worksheet.output_am58, 0.001); end
  def test_output_an58; assert_in_epsilon(11.429532792566754, worksheet.output_an58, 0.001); end
  def test_output_ak58; assert_in_delta(0.9517931253340663, worksheet.output_ak58, 0.001); end
  def test_output_ao58; assert_equal("", worksheet.output_ao58); end
  def test_output_ar58; assert_equal("Residential and equivalent", worksheet.output_ar58); end
  def test_output_as58; assert_in_epsilon(15, worksheet.output_as58, 0.001); end
  def test_output_at58; assert_in_epsilon(174.45000000000002, worksheet.output_at58, 0.001); end
  def test_output_e59; assert_equal("Biomass used in power production", worksheet.output_e59); end
  def test_output_f59; assert_equal("TWh/yr", worksheet.output_f59); end
  def test_output_h59; assert_in_delta(0, (worksheet.output_h59||0), 0.001); end
  def test_output_m59; assert_in_delta(0, (worksheet.output_m59||0), 0.001); end
  def test_output_r59; assert_in_delta(0, (worksheet.output_r59||0), 0.001); end
  def test_output_w59; assert_in_delta(0, (worksheet.output_w59||0), 0.001); end
  def test_output_ab59; assert_in_delta(0, (worksheet.output_ab59||0), 0.001); end
  def test_output_ac59; assert_in_epsilon(10.970100135284348, worksheet.output_ac59, 0.001); end
  def test_output_ad59; assert_in_epsilon(14.627426932340017, worksheet.output_ad59, 0.001); end
  def test_output_ae59; assert_in_epsilon(18.712751129441877, worksheet.output_ae59, 0.001); end
  def test_output_af59; assert_in_epsilon(25.081892711501517, worksheet.output_af59, 0.001); end
  def test_output_ag59; assert_in_epsilon(31.668717354809303, worksheet.output_ag59, 0.001); end
  def test_output_ah59; assert_in_epsilon(35.95610916650387, worksheet.output_ah59, 0.001); end
  def test_output_ai59; assert_in_epsilon(40.22424021126717, worksheet.output_ai59, 0.001); end
  def test_output_aj59; assert_in_epsilon(44.46348010563359, worksheet.output_aj59, 0.001); end
  def test_output_ak59; assert_in_epsilon(48.70272, worksheet.output_ak59, 0.001); end
  def test_output_am59; assert_in_delta(0.03796704632199255, worksheet.output_am59, 0.001); end
  def test_output_an59; assert_in_epsilon(3.4395875515622736, worksheet.output_an59, 0.001); end
  def test_output_ao59; assert_equal("", worksheet.output_ao59); end
  def test_output_ar59; assert_equal("Industry", worksheet.output_ar59); end
  def test_output_as59; assert_in_epsilon(11.5, worksheet.output_as59, 0.001); end
  def test_output_at59; assert_in_epsilon(133.745, worksheet.output_at59, 0.001); end
  def test_output_e60; assert_equal("RES share in final energy demand", worksheet.output_e60); end
  def test_output_f60; assert_equal("%", worksheet.output_f60); end
  def test_output_g60; assert_equal("! primary RES electricity supply + env heat + biomass for heat + effective biomass-based electricity production", worksheet.output_g60); end
  def test_output_h60; assert_in_delta(0, (worksheet.output_h60||0), 0.001); end
  def test_output_i60; assert_equal(:value, worksheet.output_i60); end
  def test_output_j60; assert_equal(:value, worksheet.output_j60); end
  def test_output_k60; assert_equal(:value, worksheet.output_k60); end
  def test_output_l60; assert_equal(:value, worksheet.output_l60); end
  def test_output_m60; assert_in_delta(0, (worksheet.output_m60||0), 0.001); end
  def test_output_n60; assert_equal(:value, worksheet.output_n60); end
  def test_output_o60; assert_equal(:value, worksheet.output_o60); end
  def test_output_p60; assert_equal(:value, worksheet.output_p60); end
  def test_output_q60; assert_equal(:value, worksheet.output_q60); end
  def test_output_r60; assert_in_delta(0, (worksheet.output_r60||0), 0.001); end
  def test_output_s60; assert_equal(:value, worksheet.output_s60); end
  def test_output_t60; assert_equal(:value, worksheet.output_t60); end
  def test_output_u60; assert_equal(:value, worksheet.output_u60); end
  def test_output_v60; assert_equal(:value, worksheet.output_v60); end
  def test_output_w60; assert_in_delta(0, (worksheet.output_w60||0), 0.001); end
  def test_output_x60; assert_equal(:value, worksheet.output_x60); end
  def test_output_y60; assert_equal(:value, worksheet.output_y60); end
  def test_output_z60; assert_equal(:value, worksheet.output_z60); end
  def test_output_aa60; assert_equal(:value, worksheet.output_aa60); end
  def test_output_ab60; assert_in_delta(0, (worksheet.output_ab60||0), 0.001); end
  def test_output_ac36; assert_in_delta(0.8843048692195494, worksheet.output_ac36, 0.001); end
  def test_output_ac40; assert_in_epsilon(18.346242662072274, worksheet.output_ac40, 0.001); end
  def test_output_ac37; assert_in_epsilon(20.60678535510175, worksheet.output_ac37, 0.001); end
  def test_output_ac38; assert_in_delta(0.22, worksheet.output_ac38, 0.001); end
  def test_output_ac39; assert_in_epsilon(20.826785355101748, worksheet.output_ac39, 0.001); end
  def test_output_ac41; assert_in_epsilon(39.17302801717402, worksheet.output_ac41, 0.001); end
  def test_output_ac60; assert_in_delta(0.08518047899135993, worksheet.output_ac60, 0.001); end
  def test_output_ad21; assert_in_epsilon(389.4723058179792, worksheet.output_ad21, 0.001); end
  def test_output_ad60; assert_in_delta(0.15583606463981725, worksheet.output_ad60, 0.001); end
  def test_output_ae60; assert_in_delta(0.26719692317833793, worksheet.output_ae60, 0.001); end
  def test_output_af21; assert_in_epsilon(297.8392434121617, worksheet.output_af21, 0.001); end
  def test_output_af60; assert_in_delta(0.39823495946241394, worksheet.output_af60, 0.001); end
  def test_output_ag21; assert_in_epsilon(258.77810022787844, worksheet.output_ag21, 0.001); end
  def test_output_ag60; assert_in_delta(0.5742796243508185, worksheet.output_ag60, 0.001); end
  def test_output_ah21; assert_in_epsilon(227.7507557441978, worksheet.output_ah21, 0.001); end
  def test_output_ah60; assert_in_delta(0.7981043646305046, worksheet.output_ah60, 0.001); end
  def test_output_ai21; assert_in_epsilon(202.47684494174587, worksheet.output_ai21, 0.001); end
  def test_output_ai60; assert_in_epsilon(1.0349858451784768, worksheet.output_ai60, 0.001); end
  def test_output_aj21; assert_in_epsilon(179.55476996025322, worksheet.output_aj21, 0.001); end
  def test_output_aj60; assert_in_epsilon(1.3425188537281947, worksheet.output_aj60, 0.001); end
  def test_output_am60; assert_in_delta(0.07854671087017961, worksheet.output_am60, 0.001); end
  def test_output_an60; assert_in_epsilon(19.585354467256096, worksheet.output_an60, 0.001); end
  def test_output_ak60; assert_in_epsilon(1.7534703537278051, worksheet.output_ak60, 0.001); end
  def test_output_ao60; assert_equal("", worksheet.output_ao60); end
  def test_output_ar60; assert_equal("Transport", worksheet.output_ar60); end
  def test_output_as60; assert_in_epsilon(10.4, worksheet.output_as60, 0.001); end
  def test_output_at60; assert_in_epsilon(120.95200000000001, worksheet.output_at60, 0.001); end
  def test_output_e61; assert_equal("RES supply in final energy demand", worksheet.output_e61); end
  def test_output_f61; assert_equal("%", worksheet.output_f61); end
  def test_output_h61; assert_in_delta(0, (worksheet.output_h61||0), 0.001); end
  def test_output_i61; assert_equal(:div0, worksheet.output_i61); end
  def test_output_j61; assert_equal(:div0, worksheet.output_j61); end
  def test_output_k61; assert_equal(:div0, worksheet.output_k61); end
  def test_output_l61; assert_equal(:div0, worksheet.output_l61); end
  def test_output_m61; assert_in_delta(0, (worksheet.output_m61||0), 0.001); end
  def test_output_n61; assert_equal(:div0, worksheet.output_n61); end
  def test_output_o61; assert_equal(:div0, worksheet.output_o61); end
  def test_output_p61; assert_equal(:div0, worksheet.output_p61); end
  def test_output_q61; assert_equal(:div0, worksheet.output_q61); end
  def test_output_r61; assert_in_delta(0, (worksheet.output_r61||0), 0.001); end
  def test_output_s61; assert_equal(:div0, worksheet.output_s61); end
  def test_output_t61; assert_equal(:div0, worksheet.output_t61); end
  def test_output_u61; assert_equal(:div0, worksheet.output_u61); end
  def test_output_v61; assert_equal(:div0, worksheet.output_v61); end
  def test_output_w61; assert_in_delta(0, (worksheet.output_w61||0), 0.001); end
  def test_output_x61; assert_equal(:div0, worksheet.output_x61); end
  def test_output_y61; assert_equal(:div0, worksheet.output_y61); end
  def test_output_z61; assert_equal(:div0, worksheet.output_z61); end
  def test_output_aa61; assert_equal(:div0, worksheet.output_aa61); end
  def test_output_ab61; assert_in_delta(0, (worksheet.output_ab61||0), 0.001); end
  def test_output_ac56; assert_in_epsilon(42.95961104748946, worksheet.output_ac56, 0.001); end
  def test_output_ac61; assert_in_delta(0.10235643422088021, worksheet.output_ac61, 0.001); end
  def test_output_ad56; assert_in_epsilon(70.17024320713789, worksheet.output_ad56, 0.001); end
  def test_output_ad61; assert_in_delta(0.18016747830058066, worksheet.output_ad61, 0.001); end
  def test_output_ae56; assert_in_epsilon(103.24769585241629, worksheet.output_ae56, 0.001); end
  def test_output_ae61; assert_in_delta(0.3021683654504369, worksheet.output_ae61, 0.001); end
  def test_output_af56; assert_in_epsilon(134.39363507979482, worksheet.output_af56, 0.001); end
  def test_output_af61; assert_in_delta(0.45122876871472445, worksheet.output_af61, 0.001); end
  def test_output_ag56; assert_in_epsilon(168.24559494906623, worksheet.output_ag56, 0.001); end
  def test_output_ag61; assert_in_delta(0.6501539148827129, worksheet.output_ag61, 0.001); end
  def test_output_ah56; assert_in_epsilon(204.0616598905726, worksheet.output_ah56, 0.001); end
  def test_output_ah61; assert_in_delta(0.8959867519375786, worksheet.output_ah61, 0.001); end
  def test_output_ai56; assert_in_epsilon(234.49969742208987, worksheet.output_ai56, 0.001); end
  def test_output_ai61; assert_in_epsilon(1.1581556275709315, worksheet.output_ai61, 0.001); end
  def test_output_aj56; assert_in_epsilon(268.6230216139616, worksheet.output_aj56, 0.001); end
  def test_output_aj61; assert_in_epsilon(1.4960506015709012, worksheet.output_aj61, 0.001); end
  def test_output_am61; assert_in_delta(0.07635816978972154, worksheet.output_am61, 0.001); end
  def test_output_an61; assert_in_epsilon(17.978962256929446, worksheet.output_an61, 0.001); end
  def test_output_ak61; assert_in_epsilon(1.942618901831967, worksheet.output_ak61, 0.001); end
  def test_output_ao61; assert_equal("", worksheet.output_ao61); end
  def test_output_ar61; assert_equal("Non-energetic uses", worksheet.output_ar61); end
  def test_output_as61; assert_in_epsilon(7.2, worksheet.output_as61, 0.001); end
  def test_output_at61; assert_in_epsilon(83.736, worksheet.output_at61, 0.001); end
  def test_output_e62; assert_equal("SHOULD BE O", worksheet.output_e62); end
  def test_output_f62; assert_equal("%", worksheet.output_f62); end
  def test_output_h62; assert_in_delta(0, (worksheet.output_h62||0), 0.001); end
  def test_output_i62; assert_in_delta(0, (worksheet.output_i62||0), 0.001); end
  def test_output_j62; assert_in_delta(0, (worksheet.output_j62||0), 0.001); end
  def test_output_k62; assert_in_delta(0, (worksheet.output_k62||0), 0.001); end
  def test_output_l62; assert_in_delta(0, (worksheet.output_l62||0), 0.001); end
  def test_output_m62; assert_in_delta(0, (worksheet.output_m62||0), 0.001); end
  def test_output_n62; assert_in_delta(0, (worksheet.output_n62||0), 0.001); end
  def test_output_o62; assert_in_delta(0, (worksheet.output_o62||0), 0.001); end
  def test_output_p62; assert_in_delta(0, (worksheet.output_p62||0), 0.001); end
  def test_output_q62; assert_in_delta(0, (worksheet.output_q62||0), 0.001); end
  def test_output_r62; assert_in_delta(0, (worksheet.output_r62||0), 0.001); end
  def test_output_s62; assert_in_delta(0, (worksheet.output_s62||0), 0.001); end
  def test_output_t62; assert_in_delta(0, (worksheet.output_t62||0), 0.001); end
  def test_output_u62; assert_in_delta(0, (worksheet.output_u62||0), 0.001); end
  def test_output_v62; assert_in_delta(0, (worksheet.output_v62||0), 0.001); end
  def test_output_w62; assert_in_delta(0, (worksheet.output_w62||0), 0.001); end
  def test_output_x62; assert_in_delta(0, (worksheet.output_x62||0), 0.001); end
  def test_output_y62; assert_in_delta(0, (worksheet.output_y62||0), 0.001); end
  def test_output_z62; assert_in_delta(0, (worksheet.output_z62||0), 0.001); end
  def test_output_aa62; assert_in_delta(0, (worksheet.output_aa62||0), 0.001); end
  def test_output_ab62; assert_in_delta(0, (worksheet.output_ab62||0), 0.001); end
  def test_output_ac62; assert_in_delta(0, (worksheet.output_ac62||0), 0.001); end
  def test_output_ad62; assert_in_delta(0, (worksheet.output_ad62||0), 0.001); end
  def test_output_ae62; assert_in_delta(0, (worksheet.output_ae62||0), 0.001); end
  def test_output_af62; assert_in_delta(0, (worksheet.output_af62||0), 0.001); end
  def test_output_ag62; assert_in_delta(0, (worksheet.output_ag62||0), 0.001); end
  def test_output_ah62; assert_in_delta(0, (worksheet.output_ah62||0), 0.001); end
  def test_output_ai62; assert_in_delta(0, (worksheet.output_ai62||0), 0.001); end
  def test_output_aj62; assert_in_delta(0, (worksheet.output_aj62||0), 0.001); end
  def test_output_am62; assert_equal("", worksheet.output_am62); end
  def test_output_an62; assert_equal("", worksheet.output_an62); end
  def test_output_ak62; assert_in_delta(0, (worksheet.output_ak62||0), 0.001); end
  def test_output_ao62; assert_equal("", worksheet.output_ao62); end
  def test_output_ar62; assert_equal("Total", worksheet.output_ar62); end
  def test_output_as62; assert_in_epsilon(44.1, worksheet.output_as62, 0.001); end
  def test_output_at62; assert_in_epsilon(512.883, worksheet.output_at62, 0.001); end
  def test_output_h63; assert_in_delta(0, (worksheet.output_h63||0), 0.001); end
  def test_output_m63; assert_in_delta(0, (worksheet.output_m63||0), 0.001); end
  def test_output_r63; assert_in_delta(0, (worksheet.output_r63||0), 0.001); end
  def test_output_w63; assert_in_delta(0, (worksheet.output_w63||0), 0.001); end
  def test_output_ab63; assert_in_delta(0, (worksheet.output_ab63||0), 0.001); end
  def test_output_ae63; assert_in_delta(0.22072646151985625, worksheet.output_ae63, 0.001); end
  def test_output_am63; assert_equal("", worksheet.output_am63); end
  def test_output_an63; assert_equal("", worksheet.output_an63); end
  def test_output_ao63; assert_equal("", worksheet.output_ao63); end
  def test_output_b64; assert_equal("Conversion losses, distribution, and own use", worksheet.output_b64); end
  def test_output_h64; assert_in_delta(0, (worksheet.output_h64||0), 0.001); end
  def test_output_m64; assert_in_delta(0, (worksheet.output_m64||0), 0.001); end
  def test_output_r64; assert_in_delta(0, (worksheet.output_r64||0), 0.001); end
  def test_output_w64; assert_in_delta(0, (worksheet.output_w64||0), 0.001); end
  def test_output_ab64; assert_in_delta(0, (worksheet.output_ab64||0), 0.001); end
  def test_output_am64; assert_equal("", worksheet.output_am64); end
  def test_output_an64; assert_equal("", worksheet.output_an64); end
  def test_output_ao64; assert_equal("", worksheet.output_ao64); end
  def test_output_c65; assert_equal("X.01", worksheet.output_c65); end
  def test_output_e65; assert_equal("Conversion losses", worksheet.output_e65); end
  def test_output_f65; assert_equal("TWh/yr", worksheet.output_f65); end
  def test_output_h65; assert_in_delta(0, (worksheet.output_h65||0), 0.001); end
  def test_output_m65; assert_in_delta(0, (worksheet.output_m65||0), 0.001); end
  def test_output_r65; assert_in_delta(0, (worksheet.output_r65||0), 0.001); end
  def test_output_w65; assert_in_delta(0, (worksheet.output_w65||0), 0.001); end
  def test_output_ab65; assert_in_delta(0, (worksheet.output_ab65||0), 0.001); end
  def test_output_ac65; assert_in_epsilon(129.0631273984344, worksheet.output_ac65, 0.001); end
  def test_output_ad65; assert_in_epsilon(106.58933240390621, worksheet.output_ad65, 0.001); end
  def test_output_ae65; assert_in_epsilon(113.97959210545206, worksheet.output_ae65, 0.001); end
  def test_output_af65; assert_in_epsilon(126.22172315845638, worksheet.output_af65, 0.001); end
  def test_output_ag65; assert_in_epsilon(151.09888368978852, worksheet.output_ag65, 0.001); end
  def test_output_ah65; assert_in_epsilon(146.05277083587947, worksheet.output_ah65, 0.001); end
  def test_output_ai65; assert_in_epsilon(169.4652877627628, worksheet.output_ai65, 0.001); end
  def test_output_aj65; assert_in_epsilon(127.75123872547232, worksheet.output_aj65, 0.001); end
  def test_output_ak65; assert_in_epsilon(150.7817214757594, worksheet.output_ak65, 0.001); end
  def test_output_am65; assert_in_delta(0.0038958590439812646, worksheet.output_am65, 0.001); end
  def test_output_an65; assert_in_delta(0.16827884551624828, worksheet.output_an65, 0.001); end
  def test_output_ao65; assert_equal("", worksheet.output_ao65); end
  def test_output_c66; assert_equal("X.02", worksheet.output_c66); end
  def test_output_e66; assert_equal("Distribution losses and own use", worksheet.output_e66); end
  def test_output_f66; assert_equal("TWh/yr", worksheet.output_f66); end
  def test_output_h66; assert_in_delta(0, (worksheet.output_h66||0), 0.001); end
  def test_output_m66; assert_in_delta(0, (worksheet.output_m66||0), 0.001); end
  def test_output_r66; assert_in_delta(0, (worksheet.output_r66||0), 0.001); end
  def test_output_w66; assert_in_delta(0, (worksheet.output_w66||0), 0.001); end
  def test_output_ab66; assert_in_delta(0, (worksheet.output_ab66||0), 0.001); end
  def test_output_ac66; assert_in_epsilon(10.626035944628587, worksheet.output_ac66, 0.001); end
  def test_output_ad66; assert_in_epsilon(10.144785820308634, worksheet.output_ad66, 0.001); end
  def test_output_ae66; assert_in_epsilon(10.479579720176876, worksheet.output_ae66, 0.001); end
  def test_output_af66; assert_in_epsilon(11.736667081037737, worksheet.output_af66, 0.001); end
  def test_output_ag66; assert_in_epsilon(13.261095216927835, worksheet.output_ag66, 0.001); end
  def test_output_ah66; assert_in_epsilon(13.193843657279583, worksheet.output_ah66, 0.001); end
  def test_output_ai66; assert_in_epsilon(14.577870227780036, worksheet.output_ai66, 0.001); end
  def test_output_aj66; assert_in_epsilon(12.589762589985988, worksheet.output_aj66, 0.001); end
  def test_output_ak66; assert_in_epsilon(13.793963275141177, worksheet.output_ak66, 0.001); end
  def test_output_am66; assert_in_delta(0.006544417774479561, worksheet.output_am66, 0.001); end
  def test_output_an66; assert_in_delta(0.298128798643295, worksheet.output_an66, 0.001); end
  def test_output_ao66; assert_equal("", worksheet.output_ao66); end
  def test_output_e67; assert_equal("Supply net of losses", worksheet.output_e67); end
  def test_output_f67; assert_equal("TWh/yr", worksheet.output_f67); end
  def test_output_h67; assert_in_delta(0, (worksheet.output_h67||0), 0.001); end
  def test_output_m67; assert_in_delta(0, (worksheet.output_m67||0), 0.001); end
  def test_output_r67; assert_in_delta(0, (worksheet.output_r67||0), 0.001); end
  def test_output_w67; assert_in_delta(0, (worksheet.output_w67||0), 0.001); end
  def test_output_ab67; assert_in_delta(0, (worksheet.output_ab67||0), 0.001); end
  def test_output_ad67; assert_in_epsilon(391.0884087972657, worksheet.output_ad67, 0.001); end
  def test_output_ae67; assert_in_epsilon(343.303937053495, worksheet.output_ae67, 0.001); end
  def test_output_af67; assert_in_epsilon(299.45120962786, worksheet.output_af67, 0.001); end
  def test_output_ag67; assert_in_epsilon(260.3880632494057, worksheet.output_ag67, 0.001); end
  def test_output_ah67; assert_in_epsilon(229.3609363242027, worksheet.output_ah67, 0.001); end
  def test_output_ai67; assert_in_epsilon(204.08735005420687, worksheet.output_ai67, 0.001); end
  def test_output_aj67; assert_in_epsilon(181.16552267235676, worksheet.output_aj67, 0.001); end
  def test_output_am67; assert_in_delta(-0.02372496051292272, worksheet.output_am67, 0.001); end
  def test_output_an67; assert_in_delta(-0.6172744707786739, worksheet.output_an67, 0.001); end
  def test_output_ak67; assert_in_epsilon(161.25121852598133, worksheet.output_ak67, 0.001); end
  def test_output_ao67; assert_equal("", worksheet.output_ao67); end
  def test_output_h68; assert_in_delta(0, (worksheet.output_h68||0), 0.001); end
  def test_output_m68; assert_in_delta(0, (worksheet.output_m68||0), 0.001); end
  def test_output_r68; assert_in_delta(0, (worksheet.output_r68||0), 0.001); end
  def test_output_w68; assert_in_delta(0, (worksheet.output_w68||0), 0.001); end
  def test_output_ab68; assert_in_delta(0, (worksheet.output_ab68||0), 0.001); end
  def test_output_am68; assert_equal("", worksheet.output_am68); end
  def test_output_an68; assert_equal("", worksheet.output_an68); end
  def test_output_ao68; assert_equal("", worksheet.output_ao68); end
  def test_output_b69; assert_equal("Supply / demand not accounted for", worksheet.output_b69); end
  def test_output_h69; assert_in_delta(0, (worksheet.output_h69||0), 0.001); end
  def test_output_m69; assert_in_delta(0, (worksheet.output_m69||0), 0.001); end
  def test_output_r69; assert_in_delta(0, (worksheet.output_r69||0), 0.001); end
  def test_output_w69; assert_in_delta(0, (worksheet.output_w69||0), 0.001); end
  def test_output_ab69; assert_in_delta(0, (worksheet.output_ab69||0), 0.001); end
  def test_output_am69; assert_equal("", worksheet.output_am69); end
  def test_output_an69; assert_equal("", worksheet.output_an69); end
  def test_output_ao69; assert_equal("", worksheet.output_ao69); end
  def test_output_c70; assert_equal("C.01", worksheet.output_c70); end
  def test_output_e70; assert_equal("Coal and fossil waste", worksheet.output_e70); end
  def test_output_f70; assert_equal("TWh/yr", worksheet.output_f70); end
  def test_output_h70; assert_in_delta(0, (worksheet.output_h70||0), 0.001); end
  def test_output_m70; assert_in_delta(0, (worksheet.output_m70||0), 0.001); end
  def test_output_r70; assert_in_delta(0, (worksheet.output_r70||0), 0.001); end
  def test_output_w70; assert_in_delta(0, (worksheet.output_w70||0), 0.001); end
  def test_output_ab70; assert_in_delta(0, (worksheet.output_ab70||0), 0.001); end
  def test_output_ac70; assert_in_delta(-1.6930901125533637e-15, worksheet.output_ac70, 0.001); end
  def test_output_ad70; assert_in_delta(-3.7470027081099033e-16, worksheet.output_ad70, 0.001); end
  def test_output_ae70; assert_in_delta(-3.191891195797325e-16, worksheet.output_ae70, 0.001); end
  def test_output_af70; assert_in_delta(0, (worksheet.output_af70||0), 0.001); end
  def test_output_ag70; assert_in_delta(0, (worksheet.output_ag70||0), 0.001); end
  def test_output_ah70; assert_in_delta(0, (worksheet.output_ah70||0), 0.001); end
  def test_output_ai70; assert_in_delta(0, (worksheet.output_ai70||0), 0.001); end
  def test_output_aj70; assert_in_delta(0, (worksheet.output_aj70||0), 0.001); end
  def test_output_ak70; assert_in_delta(0, (worksheet.output_ak70||0), 0.001); end
  def test_output_am70; assert_in_delta(-1, worksheet.output_am70, 0.001); end
  def test_output_an70; assert_in_delta(-1, worksheet.output_an70, 0.001); end
  def test_output_ao70; assert_equal("", worksheet.output_ao70); end
  def test_output_c71; assert_equal("C.02", worksheet.output_c71); end
  def test_output_e71; assert_equal("Oil and petroleum products", worksheet.output_e71); end
  def test_output_f71; assert_equal("TWh/yr", worksheet.output_f71); end
  def test_output_h71; assert_in_delta(0, (worksheet.output_h71||0), 0.001); end
  def test_output_m71; assert_in_delta(0, (worksheet.output_m71||0), 0.001); end
  def test_output_r71; assert_in_delta(0, (worksheet.output_r71||0), 0.001); end
  def test_output_w71; assert_in_delta(0, (worksheet.output_w71||0), 0.001); end
  def test_output_ab71; assert_in_delta(0, (worksheet.output_ab71||0), 0.001); end
  def test_output_ac71; assert_in_delta(0, (worksheet.output_ac71||0), 0.001); end
  def test_output_ad71; assert_in_delta(0, (worksheet.output_ad71||0), 0.001); end
  def test_output_ae71; assert_in_delta(0, (worksheet.output_ae71||0), 0.001); end
  def test_output_af71; assert_in_delta(0, (worksheet.output_af71||0), 0.001); end
  def test_output_ag71; assert_in_delta(0, (worksheet.output_ag71||0), 0.001); end
  def test_output_ah71; assert_in_delta(0, (worksheet.output_ah71||0), 0.001); end
  def test_output_ai71; assert_in_delta(0, (worksheet.output_ai71||0), 0.001); end
  def test_output_aj71; assert_in_delta(0, (worksheet.output_aj71||0), 0.001); end
  def test_output_ak71; assert_in_delta(0, (worksheet.output_ak71||0), 0.001); end
  def test_output_am71; assert_equal("", worksheet.output_am71); end
  def test_output_an71; assert_equal("", worksheet.output_an71); end
  def test_output_ao71; assert_equal("", worksheet.output_ao71); end
  def test_output_c72; assert_equal("C.03", worksheet.output_c72); end
  def test_output_e72; assert_equal("Natural gas", worksheet.output_e72); end
  def test_output_f72; assert_equal("TWh/yr", worksheet.output_f72); end
  def test_output_h72; assert_in_delta(0, (worksheet.output_h72||0), 0.001); end
  def test_output_m72; assert_in_delta(0, (worksheet.output_m72||0), 0.001); end
  def test_output_r72; assert_in_delta(0, (worksheet.output_r72||0), 0.001); end
  def test_output_w72; assert_in_delta(0, (worksheet.output_w72||0), 0.001); end
  def test_output_ab72; assert_in_delta(0, (worksheet.output_ab72||0), 0.001); end
  def test_output_ac72; assert_in_delta(0, (worksheet.output_ac72||0), 0.001); end
  def test_output_ad72; assert_in_delta(0, (worksheet.output_ad72||0), 0.001); end
  def test_output_ae72; assert_in_delta(0, (worksheet.output_ae72||0), 0.001); end
  def test_output_af72; assert_in_delta(0, (worksheet.output_af72||0), 0.001); end
  def test_output_ag72; assert_in_delta(0, (worksheet.output_ag72||0), 0.001); end
  def test_output_ah72; assert_in_delta(0, (worksheet.output_ah72||0), 0.001); end
  def test_output_ai72; assert_in_delta(0, (worksheet.output_ai72||0), 0.001); end
  def test_output_aj72; assert_in_delta(0, (worksheet.output_aj72||0), 0.001); end
  def test_output_ak72; assert_in_delta(0, (worksheet.output_ak72||0), 0.001); end
  def test_output_am72; assert_equal("", worksheet.output_am72); end
  def test_output_an72; assert_equal("", worksheet.output_an72); end
  def test_output_ao72; assert_equal("", worksheet.output_ao72); end
  def test_output_c73; assert_equal("V.03", worksheet.output_c73); end
  def test_output_e73; assert_equal("Solid hydrocarbons", worksheet.output_e73); end
  def test_output_f73; assert_equal("TWh/yr", worksheet.output_f73); end
  def test_output_h73; assert_in_delta(0, (worksheet.output_h73||0), 0.001); end
  def test_output_m73; assert_in_delta(0, (worksheet.output_m73||0), 0.001); end
  def test_output_r73; assert_in_delta(0, (worksheet.output_r73||0), 0.001); end
  def test_output_w73; assert_in_delta(0, (worksheet.output_w73||0), 0.001); end
  def test_output_ab73; assert_in_delta(0, (worksheet.output_ab73||0), 0.001); end
  def test_output_ac73; assert_in_delta(0, (worksheet.output_ac73||0), 0.001); end
  def test_output_ad73; assert_in_delta(0, (worksheet.output_ad73||0), 0.001); end
  def test_output_ae73; assert_in_delta(0, (worksheet.output_ae73||0), 0.001); end
  def test_output_af73; assert_in_delta(0, (worksheet.output_af73||0), 0.001); end
  def test_output_ag73; assert_in_delta(0, (worksheet.output_ag73||0), 0.001); end
  def test_output_ah73; assert_in_delta(0, (worksheet.output_ah73||0), 0.001); end
  def test_output_ai73; assert_in_delta(0, (worksheet.output_ai73||0), 0.001); end
  def test_output_aj73; assert_in_delta(0, (worksheet.output_aj73||0), 0.001); end
  def test_output_ak73; assert_in_delta(0, (worksheet.output_ak73||0), 0.001); end
  def test_output_am73; assert_equal("", worksheet.output_am73); end
  def test_output_an73; assert_equal("", worksheet.output_an73); end
  def test_output_ao73; assert_equal("", worksheet.output_ao73); end
  def test_output_c74; assert_equal("V.04", worksheet.output_c74); end
  def test_output_e74; assert_equal("Liquid hydrocarbons", worksheet.output_e74); end
  def test_output_f74; assert_equal("TWh/yr", worksheet.output_f74); end
  def test_output_h74; assert_in_delta(0, (worksheet.output_h74||0), 0.001); end
  def test_output_m74; assert_in_delta(0, (worksheet.output_m74||0), 0.001); end
  def test_output_r74; assert_in_delta(0, (worksheet.output_r74||0), 0.001); end
  def test_output_w74; assert_in_delta(0, (worksheet.output_w74||0), 0.001); end
  def test_output_ab74; assert_in_delta(0, (worksheet.output_ab74||0), 0.001); end
  def test_output_ac74; assert_in_delta(0, (worksheet.output_ac74||0), 0.001); end
  def test_output_ad74; assert_in_delta(0, (worksheet.output_ad74||0), 0.001); end
  def test_output_ae74; assert_in_delta(0, (worksheet.output_ae74||0), 0.001); end
  def test_output_af74; assert_in_delta(0, (worksheet.output_af74||0), 0.001); end
  def test_output_ag74; assert_in_delta(0, (worksheet.output_ag74||0), 0.001); end
  def test_output_ah74; assert_in_delta(0, (worksheet.output_ah74||0), 0.001); end
  def test_output_ai74; assert_in_delta(0, (worksheet.output_ai74||0), 0.001); end
  def test_output_aj74; assert_in_delta(0, (worksheet.output_aj74||0), 0.001); end
  def test_output_ak74; assert_in_delta(0, (worksheet.output_ak74||0), 0.001); end
  def test_output_am74; assert_equal("", worksheet.output_am74); end
  def test_output_an74; assert_equal("", worksheet.output_an74); end
  def test_output_ao74; assert_equal("", worksheet.output_ao74); end
  def test_output_c75; assert_equal("V.05", worksheet.output_c75); end
  def test_output_e75; assert_equal("Gaseous hydrocarbons", worksheet.output_e75); end
  def test_output_f75; assert_equal("TWh/yr", worksheet.output_f75); end
  def test_output_h75; assert_in_delta(0, (worksheet.output_h75||0), 0.001); end
  def test_output_m75; assert_in_delta(0, (worksheet.output_m75||0), 0.001); end
  def test_output_r75; assert_in_delta(0, (worksheet.output_r75||0), 0.001); end
  def test_output_w75; assert_in_delta(0, (worksheet.output_w75||0), 0.001); end
  def test_output_ab75; assert_in_delta(0, (worksheet.output_ab75||0), 0.001); end
  def test_output_ac75; assert_in_delta(0, (worksheet.output_ac75||0), 0.001); end
  def test_output_ad75; assert_in_delta(0, (worksheet.output_ad75||0), 0.001); end
  def test_output_ae75; assert_in_delta(0, (worksheet.output_ae75||0), 0.001); end
  def test_output_af75; assert_in_delta(0, (worksheet.output_af75||0), 0.001); end
  def test_output_ag75; assert_in_delta(0, (worksheet.output_ag75||0), 0.001); end
  def test_output_ah75; assert_in_delta(0, (worksheet.output_ah75||0), 0.001); end
  def test_output_ai75; assert_in_delta(0, (worksheet.output_ai75||0), 0.001); end
  def test_output_aj75; assert_in_delta(0, (worksheet.output_aj75||0), 0.001); end
  def test_output_ak75; assert_in_delta(0, (worksheet.output_ak75||0), 0.001); end
  def test_output_am75; assert_equal("", worksheet.output_am75); end
  def test_output_an75; assert_equal("", worksheet.output_an75); end
  def test_output_ao75; assert_equal("", worksheet.output_ao75); end
  def test_output_c76; assert_equal("V.06", worksheet.output_c76); end
  def test_output_e76; assert_equal("Blast furnace gas", worksheet.output_e76); end
  def test_output_f76; assert_equal("TWh/yr", worksheet.output_f76); end
  def test_output_h76; assert_in_delta(0, (worksheet.output_h76||0), 0.001); end
  def test_output_m76; assert_in_delta(0, (worksheet.output_m76||0), 0.001); end
  def test_output_r76; assert_in_delta(0, (worksheet.output_r76||0), 0.001); end
  def test_output_w76; assert_in_delta(0, (worksheet.output_w76||0), 0.001); end
  def test_output_ab76; assert_in_delta(0, (worksheet.output_ab76||0), 0.001); end
  def test_output_ac76; assert_in_delta(0, (worksheet.output_ac76||0), 0.001); end
  def test_output_ad76; assert_in_delta(0, (worksheet.output_ad76||0), 0.001); end
  def test_output_ae76; assert_in_delta(0, (worksheet.output_ae76||0), 0.001); end
  def test_output_af76; assert_in_delta(0, (worksheet.output_af76||0), 0.001); end
  def test_output_ag76; assert_in_delta(0, (worksheet.output_ag76||0), 0.001); end
  def test_output_ah76; assert_in_delta(0, (worksheet.output_ah76||0), 0.001); end
  def test_output_ai76; assert_in_delta(0, (worksheet.output_ai76||0), 0.001); end
  def test_output_aj76; assert_in_delta(0, (worksheet.output_aj76||0), 0.001); end
  def test_output_ak76; assert_in_delta(0, (worksheet.output_ak76||0), 0.001); end
  def test_output_am76; assert_equal("", worksheet.output_am76); end
  def test_output_an76; assert_equal("", worksheet.output_an76); end
  def test_output_ao76; assert_equal("", worksheet.output_ao76); end
  def test_output_c77; assert_equal("V.08", worksheet.output_c77); end
  def test_output_e77; assert_equal("Edible biomass", worksheet.output_e77); end
  def test_output_f77; assert_equal("TWh/yr", worksheet.output_f77); end
  def test_output_h77; assert_in_delta(0, (worksheet.output_h77||0), 0.001); end
  def test_output_m77; assert_in_delta(0, (worksheet.output_m77||0), 0.001); end
  def test_output_r77; assert_in_delta(0, (worksheet.output_r77||0), 0.001); end
  def test_output_w77; assert_in_delta(0, (worksheet.output_w77||0), 0.001); end
  def test_output_ab77; assert_in_delta(0, (worksheet.output_ab77||0), 0.001); end
  def test_output_ac77; assert_in_delta(0, (worksheet.output_ac77||0), 0.001); end
  def test_output_ad77; assert_in_delta(0, (worksheet.output_ad77||0), 0.001); end
  def test_output_ae77; assert_in_delta(0, (worksheet.output_ae77||0), 0.001); end
  def test_output_af77; assert_in_delta(0, (worksheet.output_af77||0), 0.001); end
  def test_output_ag77; assert_in_delta(0, (worksheet.output_ag77||0), 0.001); end
  def test_output_ah77; assert_in_delta(0, (worksheet.output_ah77||0), 0.001); end
  def test_output_ai77; assert_in_delta(0, (worksheet.output_ai77||0), 0.001); end
  def test_output_aj77; assert_in_delta(0, (worksheet.output_aj77||0), 0.001); end
  def test_output_ak77; assert_in_delta(0, (worksheet.output_ak77||0), 0.001); end
  def test_output_am77; assert_equal("", worksheet.output_am77); end
  def test_output_an77; assert_equal("", worksheet.output_an77); end
  def test_output_ao77; assert_equal("", worksheet.output_ao77); end
  def test_output_c78; assert_equal("V.07", worksheet.output_c78); end
  def test_output_e78; assert_equal("Heat transport", worksheet.output_e78); end
  def test_output_f78; assert_equal("TWh/yr", worksheet.output_f78); end
  def test_output_h78; assert_in_delta(0, (worksheet.output_h78||0), 0.001); end
  def test_output_m78; assert_in_delta(0, (worksheet.output_m78||0), 0.001); end
  def test_output_r78; assert_in_delta(0, (worksheet.output_r78||0), 0.001); end
  def test_output_w78; assert_in_delta(0, (worksheet.output_w78||0), 0.001); end
  def test_output_ab78; assert_in_delta(0, (worksheet.output_ab78||0), 0.001); end
  def test_output_ac78; assert_in_delta(0, (worksheet.output_ac78||0), 0.001); end
  def test_output_ad78; assert_in_delta(0, (worksheet.output_ad78||0), 0.001); end
  def test_output_ae78; assert_in_delta(0, (worksheet.output_ae78||0), 0.001); end
  def test_output_af78; assert_in_delta(0, (worksheet.output_af78||0), 0.001); end
  def test_output_ag78; assert_in_delta(0, (worksheet.output_ag78||0), 0.001); end
  def test_output_ah78; assert_in_delta(0, (worksheet.output_ah78||0), 0.001); end
  def test_output_ai78; assert_in_delta(0, (worksheet.output_ai78||0), 0.001); end
  def test_output_aj78; assert_in_delta(0, (worksheet.output_aj78||0), 0.001); end
  def test_output_ak78; assert_in_delta(0, (worksheet.output_ak78||0), 0.001); end
  def test_output_am78; assert_equal("", worksheet.output_am78); end
  def test_output_an78; assert_equal("", worksheet.output_an78); end
  def test_output_ao78; assert_equal("", worksheet.output_ao78); end
  def test_output_c79; assert_equal("V.09", worksheet.output_c79); end
  def test_output_e79; assert_equal("Dry biomass and waste", worksheet.output_e79); end
  def test_output_f79; assert_equal("TWh/yr", worksheet.output_f79); end
  def test_output_h79; assert_in_delta(0, (worksheet.output_h79||0), 0.001); end
  def test_output_m79; assert_in_delta(0, (worksheet.output_m79||0), 0.001); end
  def test_output_r79; assert_in_delta(0, (worksheet.output_r79||0), 0.001); end
  def test_output_w79; assert_in_delta(0, (worksheet.output_w79||0), 0.001); end
  def test_output_ab79; assert_in_delta(0, (worksheet.output_ab79||0), 0.001); end
  def test_output_ac79; assert_in_delta(0, (worksheet.output_ac79||0), 0.001); end
  def test_output_ad79; assert_in_delta(0, (worksheet.output_ad79||0), 0.001); end
  def test_output_ae79; assert_in_delta(0, (worksheet.output_ae79||0), 0.001); end
  def test_output_af79; assert_in_delta(0, (worksheet.output_af79||0), 0.001); end
  def test_output_ag79; assert_in_delta(0, (worksheet.output_ag79||0), 0.001); end
  def test_output_ah79; assert_in_delta(0, (worksheet.output_ah79||0), 0.001); end
  def test_output_ai79; assert_in_delta(0, (worksheet.output_ai79||0), 0.001); end
  def test_output_aj79; assert_in_delta(0, (worksheet.output_aj79||0), 0.001); end
  def test_output_ak79; assert_in_delta(0, (worksheet.output_ak79||0), 0.001); end
  def test_output_am79; assert_equal("", worksheet.output_am79); end
  def test_output_an79; assert_equal("", worksheet.output_an79); end
  def test_output_ao79; assert_equal("", worksheet.output_ao79); end
  def test_output_c80; assert_equal("V.10", worksheet.output_c80); end
  def test_output_e80; assert_equal("Wet biomass and waste", worksheet.output_e80); end
  def test_output_f80; assert_equal("TWh/yr", worksheet.output_f80); end
  def test_output_h80; assert_in_delta(0, (worksheet.output_h80||0), 0.001); end
  def test_output_m80; assert_in_delta(0, (worksheet.output_m80||0), 0.001); end
  def test_output_r80; assert_in_delta(0, (worksheet.output_r80||0), 0.001); end
  def test_output_w80; assert_in_delta(0, (worksheet.output_w80||0), 0.001); end
  def test_output_ab80; assert_in_delta(0, (worksheet.output_ab80||0), 0.001); end
  def test_output_ac80; assert_in_delta(0, (worksheet.output_ac80||0), 0.001); end
  def test_output_ad80; assert_in_delta(0, (worksheet.output_ad80||0), 0.001); end
  def test_output_ae80; assert_in_delta(0, (worksheet.output_ae80||0), 0.001); end
  def test_output_af80; assert_in_delta(0, (worksheet.output_af80||0), 0.001); end
  def test_output_ag80; assert_in_delta(0, (worksheet.output_ag80||0), 0.001); end
  def test_output_ah80; assert_in_delta(0, (worksheet.output_ah80||0), 0.001); end
  def test_output_ai80; assert_in_delta(0, (worksheet.output_ai80||0), 0.001); end
  def test_output_aj80; assert_in_delta(0, (worksheet.output_aj80||0), 0.001); end
  def test_output_ak80; assert_in_delta(0, (worksheet.output_ak80||0), 0.001); end
  def test_output_am80; assert_equal("", worksheet.output_am80); end
  def test_output_an80; assert_equal("", worksheet.output_an80); end
  def test_output_ao80; assert_equal("", worksheet.output_ao80); end
  def test_output_c81; assert_equal("V.11", worksheet.output_c81); end
  def test_output_e81; assert_equal("Domestic solar thermal", worksheet.output_e81); end
  def test_output_f81; assert_equal("TWh/yr", worksheet.output_f81); end
  def test_output_h81; assert_in_delta(0, (worksheet.output_h81||0), 0.001); end
  def test_output_m81; assert_in_delta(0, (worksheet.output_m81||0), 0.001); end
  def test_output_r81; assert_in_delta(0, (worksheet.output_r81||0), 0.001); end
  def test_output_w81; assert_in_delta(0, (worksheet.output_w81||0), 0.001); end
  def test_output_ab81; assert_in_delta(0, (worksheet.output_ab81||0), 0.001); end
  def test_output_ac81; assert_in_delta(0, (worksheet.output_ac81||0), 0.001); end
  def test_output_ad81; assert_in_delta(0, (worksheet.output_ad81||0), 0.001); end
  def test_output_ae81; assert_in_delta(0, (worksheet.output_ae81||0), 0.001); end
  def test_output_af81; assert_in_delta(0, (worksheet.output_af81||0), 0.001); end
  def test_output_ag81; assert_in_delta(0, (worksheet.output_ag81||0), 0.001); end
  def test_output_ah81; assert_in_delta(0, (worksheet.output_ah81||0), 0.001); end
  def test_output_ai81; assert_in_delta(0, (worksheet.output_ai81||0), 0.001); end
  def test_output_aj81; assert_in_delta(0, (worksheet.output_aj81||0), 0.001); end
  def test_output_ak81; assert_in_delta(0, (worksheet.output_ak81||0), 0.001); end
  def test_output_am81; assert_equal("", worksheet.output_am81); end
  def test_output_an81; assert_equal("", worksheet.output_an81); end
  def test_output_ao81; assert_equal("", worksheet.output_ao81); end
  def test_output_c82; assert_equal("V.12", worksheet.output_c82); end
  def test_output_e82; assert_equal("H2", worksheet.output_e82); end
  def test_output_f82; assert_equal("TWh/yr", worksheet.output_f82); end
  def test_output_h82; assert_in_delta(0, (worksheet.output_h82||0), 0.001); end
  def test_output_m82; assert_in_delta(0, (worksheet.output_m82||0), 0.001); end
  def test_output_r82; assert_in_delta(0, (worksheet.output_r82||0), 0.001); end
  def test_output_w82; assert_in_delta(0, (worksheet.output_w82||0), 0.001); end
  def test_output_ab82; assert_in_delta(0, (worksheet.output_ab82||0), 0.001); end
  def test_output_ac82; assert_in_delta(0, (worksheet.output_ac82||0), 0.001); end
  def test_output_ad82; assert_in_delta(0, (worksheet.output_ad82||0), 0.001); end
  def test_output_ae82; assert_in_delta(0, (worksheet.output_ae82||0), 0.001); end
  def test_output_af82; assert_in_delta(0, (worksheet.output_af82||0), 0.001); end
  def test_output_ag82; assert_in_delta(0, (worksheet.output_ag82||0), 0.001); end
  def test_output_ah82; assert_in_delta(0, (worksheet.output_ah82||0), 0.001); end
  def test_output_ai82; assert_in_delta(0, (worksheet.output_ai82||0), 0.001); end
  def test_output_aj82; assert_in_delta(0, (worksheet.output_aj82||0), 0.001); end
  def test_output_ak82; assert_in_delta(0, (worksheet.output_ak82||0), 0.001); end
  def test_output_am82; assert_equal("", worksheet.output_am82); end
  def test_output_an82; assert_equal("", worksheet.output_an82); end
  def test_output_ao82; assert_equal("", worksheet.output_ao82); end
  def test_output_c83; assert_equal("V.13", worksheet.output_c83); end
  def test_output_e83; assert_equal("Energy crops (second generation)", worksheet.output_e83); end
  def test_output_f83; assert_equal("TWh/yr", worksheet.output_f83); end
  def test_output_h83; assert_in_delta(0, (worksheet.output_h83||0), 0.001); end
  def test_output_m83; assert_in_delta(0, (worksheet.output_m83||0), 0.001); end
  def test_output_r83; assert_in_delta(0, (worksheet.output_r83||0), 0.001); end
  def test_output_w83; assert_in_delta(0, (worksheet.output_w83||0), 0.001); end
  def test_output_ab83; assert_in_delta(0, (worksheet.output_ab83||0), 0.001); end
  def test_output_ac83; assert_in_delta(0, (worksheet.output_ac83||0), 0.001); end
  def test_output_ad83; assert_in_delta(0, (worksheet.output_ad83||0), 0.001); end
  def test_output_ae83; assert_in_delta(0, (worksheet.output_ae83||0), 0.001); end
  def test_output_af83; assert_in_delta(0, (worksheet.output_af83||0), 0.001); end
  def test_output_ag83; assert_in_delta(0, (worksheet.output_ag83||0), 0.001); end
  def test_output_ah83; assert_in_delta(0, (worksheet.output_ah83||0), 0.001); end
  def test_output_ai83; assert_in_delta(0, (worksheet.output_ai83||0), 0.001); end
  def test_output_aj83; assert_in_delta(0, (worksheet.output_aj83||0), 0.001); end
  def test_output_ak83; assert_in_delta(0, (worksheet.output_ak83||0), 0.001); end
  def test_output_am83; assert_equal("", worksheet.output_am83); end
  def test_output_an83; assert_equal("", worksheet.output_an83); end
  def test_output_ao83; assert_equal("", worksheet.output_ao83); end
  def test_output_e84; assert_equal("Total unnaccounted supply / demand", worksheet.output_e84); end
  def test_output_f84; assert_equal("TWh/yr", worksheet.output_f84); end
  def test_output_h84; assert_in_delta(0, (worksheet.output_h84||0), 0.001); end
  def test_output_m84; assert_in_delta(0, (worksheet.output_m84||0), 0.001); end
  def test_output_r84; assert_in_delta(0, (worksheet.output_r84||0), 0.001); end
  def test_output_w84; assert_in_delta(0, (worksheet.output_w84||0), 0.001); end
  def test_output_ab84; assert_in_delta(0, (worksheet.output_ab84||0), 0.001); end
  def test_output_ad84; assert_in_delta(-3.7470027081099033e-16, worksheet.output_ad84, 0.001); end
  def test_output_ae84; assert_in_delta(-3.191891195797325e-16, worksheet.output_ae84, 0.001); end
  def test_output_af84; assert_in_delta(0, (worksheet.output_af84||0), 0.001); end
  def test_output_ag84; assert_in_delta(0, (worksheet.output_ag84||0), 0.001); end
  def test_output_ah84; assert_in_delta(0, (worksheet.output_ah84||0), 0.001); end
  def test_output_ai84; assert_in_delta(0, (worksheet.output_ai84||0), 0.001); end
  def test_output_aj84; assert_in_delta(0, (worksheet.output_aj84||0), 0.001); end
  def test_output_am84; assert_in_delta(-1, worksheet.output_am84, 0.001); end
  def test_output_an84; assert_in_delta(-1, worksheet.output_an84, 0.001); end
  def test_output_ak84; assert_in_delta(0, (worksheet.output_ak84||0), 0.001); end
  def test_output_ao84; assert_equal("", worksheet.output_ao84); end
  def test_output_h85; assert_in_delta(0, (worksheet.output_h85||0), 0.001); end
  def test_output_m85; assert_in_delta(0, (worksheet.output_m85||0), 0.001); end
  def test_output_r85; assert_in_delta(0, (worksheet.output_r85||0), 0.001); end
  def test_output_w85; assert_in_delta(0, (worksheet.output_w85||0), 0.001); end
  def test_output_ab85; assert_in_delta(0, (worksheet.output_ab85||0), 0.001); end
  def test_output_am85; assert_equal("", worksheet.output_am85); end
  def test_output_an85; assert_equal("", worksheet.output_an85); end
  def test_output_ao85; assert_equal("", worksheet.output_ao85); end
  def test_output_e86; assert_equal("Supply, Demand, and Unaccounted supply", worksheet.output_e86); end
  def test_output_f86; assert_equal("TWh/yr", worksheet.output_f86); end
  def test_output_h86; assert_in_delta(0, (worksheet.output_h86||0), 0.001); end
  def test_output_m86; assert_in_delta(0, (worksheet.output_m86||0), 0.001); end
  def test_output_r86; assert_in_delta(0, (worksheet.output_r86||0), 0.001); end
  def test_output_w86; assert_in_delta(0, (worksheet.output_w86||0), 0.001); end
  def test_output_ab86; assert_in_delta(0, (worksheet.output_ab86||0), 0.001); end
  def test_output_ad86; assert_in_epsilon(-1.6161029792864956, worksheet.output_ad86, 0.001); end
  def test_output_ae86; assert_in_epsilon(-1.6146417544758267, worksheet.output_ae86, 0.001); end
  def test_output_af86; assert_in_epsilon(-1.6119662156983168, worksheet.output_af86, 0.001); end
  def test_output_ag86; assert_in_epsilon(-1.6099630215272782, worksheet.output_ag86, 0.001); end
  def test_output_ah86; assert_in_epsilon(-1.6101805800049078, worksheet.output_ah86, 0.001); end
  def test_output_ai86; assert_in_epsilon(-1.6105051124609986, worksheet.output_ai86, 0.001); end
  def test_output_aj86; assert_in_epsilon(-1.6107527121035332, worksheet.output_aj86, 0.001); end
  def test_output_am86; assert_in_delta(-9.639310500964005e-05, worksheet.output_am86, 0.001); end
  def test_output_an86; assert_in_delta(-0.0038484855695720688, worksheet.output_an86, 0.001); end
  def test_output_ak86; assert_in_epsilon(-1.6111541287037028, worksheet.output_ak86, 0.001); end
  def test_output_ao86; assert_equal("", worksheet.output_ao86); end
  def test_output_h87; assert_in_delta(0, (worksheet.output_h87||0), 0.001); end
  def test_output_m87; assert_in_delta(0, (worksheet.output_m87||0), 0.001); end
  def test_output_r87; assert_in_delta(0, (worksheet.output_r87||0), 0.001); end
  def test_output_w87; assert_in_delta(0, (worksheet.output_w87||0), 0.001); end
  def test_output_ab87; assert_in_delta(0, (worksheet.output_ab87||0), 0.001); end
  def test_output_am87; assert_equal("", worksheet.output_am87); end
  def test_output_an87; assert_equal("", worksheet.output_an87); end
  def test_output_ao87; assert_equal("", worksheet.output_ao87); end
  def test_output_b88; assert_equal("Electricity Consumption", worksheet.output_b88); end
  def test_output_h88; assert_in_delta(0, (worksheet.output_h88||0), 0.001); end
  def test_output_m88; assert_in_delta(0, (worksheet.output_m88||0), 0.001); end
  def test_output_r88; assert_in_delta(0, (worksheet.output_r88||0), 0.001); end
  def test_output_w88; assert_in_delta(0, (worksheet.output_w88||0), 0.001); end
  def test_output_ab88; assert_in_delta(0, (worksheet.output_ab88||0), 0.001); end
  def test_output_am88; assert_equal("", worksheet.output_am88); end
  def test_output_an88; assert_equal("", worksheet.output_an88); end
  def test_output_ao88; assert_equal("", worksheet.output_ao88); end
  def test_output_c89; assert_equal("IX.a", worksheet.output_c89); end
  def test_output_d89; assert_equal("V.01", worksheet.output_d89); end
  def test_output_e89; assert_equal("Domestic space heating and hot water", worksheet.output_e89); end
  def test_output_f89; assert_equal("TWh/yr", worksheet.output_f89); end
  def test_output_g89; assert_equal("IEA - Electricity demand - Residential (incl. appliances)", worksheet.output_g89); end
  def test_output_h89; assert_in_epsilon(18.414, worksheet.output_h89, 0.001); end
  def test_output_m89; assert_in_epsilon(22.109, worksheet.output_m89, 0.001); end
  def test_output_r89; assert_in_epsilon(23.738, worksheet.output_r89, 0.001); end
  def test_output_w89; assert_in_epsilon(26.007, worksheet.output_w89, 0.001); end
  def test_output_ab89; assert_in_epsilon(20.276, worksheet.output_ab89, 0.001); end
  def test_output_al89; assert_in_delta(0.08890838061322451, worksheet.output_al89, 0.001); end
  def test_output_am89; assert_in_delta(0.00927075804722266, worksheet.output_am89, 0.001); end
  def test_output_an89; assert_in_delta(0.4464639651636362, worksheet.output_an89, 0.001); end
  def test_output_ao89; assert_in_delta(-0.6216374686177734, worksheet.output_ao89, 0.001); end
  def test_output_c90; assert_equal("IX.b", worksheet.output_c90); end
  def test_output_d90; assert_equal("V.01", worksheet.output_d90); end
  def test_output_e90; assert_equal("Domestic hot water [UNUSED - See IX.a]", worksheet.output_e90); end
  def test_output_f90; assert_equal("TWh/yr", worksheet.output_f90); end
  def test_output_g90; assert_equal("/", worksheet.output_g90); end
  def test_output_h90; assert_in_delta(0, (worksheet.output_h90||0), 0.001); end
  def test_output_m90; assert_in_delta(0, (worksheet.output_m90||0), 0.001); end
  def test_output_r90; assert_in_delta(0, (worksheet.output_r90||0), 0.001); end
  def test_output_w90; assert_in_delta(0, (worksheet.output_w90||0), 0.001); end
  def test_output_ab90; assert_in_delta(0, (worksheet.output_ab90||0), 0.001); end
  def test_output_ac90; assert_in_delta(0, (worksheet.output_ac90||0), 0.001); end
  def test_output_ad90; assert_in_delta(0, (worksheet.output_ad90||0), 0.001); end
  def test_output_ae90; assert_in_delta(0, (worksheet.output_ae90||0), 0.001); end
  def test_output_af90; assert_in_delta(0, (worksheet.output_af90||0), 0.001); end
  def test_output_ag90; assert_in_delta(0, (worksheet.output_ag90||0), 0.001); end
  def test_output_ah90; assert_in_delta(0, (worksheet.output_ah90||0), 0.001); end
  def test_output_ai90; assert_in_delta(0, (worksheet.output_ai90||0), 0.001); end
  def test_output_aj90; assert_in_delta(0, (worksheet.output_aj90||0), 0.001); end
  def test_output_ak90; assert_in_delta(0, (worksheet.output_ak90||0), 0.001); end
  def test_output_al90; assert_in_delta(0, (worksheet.output_al90||0), 0.001); end
  def test_output_am90; assert_equal("", worksheet.output_am90); end
  def test_output_an90; assert_equal("", worksheet.output_an90); end
  def test_output_ao90; assert_equal("", worksheet.output_ao90); end
  def test_output_c91; assert_equal("IX.c", worksheet.output_c91); end
  def test_output_d91; assert_equal("V.01", worksheet.output_d91); end
  def test_output_e91; assert_equal("Commercial heating and cooling", worksheet.output_e91); end
  def test_output_f91; assert_equal("TWh/yr", worksheet.output_f91); end
  def test_output_g91; assert_equal("IEA - Electricity demand - Commercial (incl. appliances)", worksheet.output_g91); end
  def test_output_h91; assert_in_epsilon(7.798, worksheet.output_h91, 0.001); end
  def test_output_m91; assert_in_epsilon(10.27, worksheet.output_m91, 0.001); end
  def test_output_r91; assert_in_epsilon(12.236, worksheet.output_r91, 0.001); end
  def test_output_w91; assert_in_epsilon(12.703, worksheet.output_w91, 0.001); end
  def test_output_ab91; assert_in_epsilon(22.182, worksheet.output_ab91, 0.001); end
  def test_output_ad91; assert_in_delta(0.32324136840846274, worksheet.output_ad91, 0.001); end
  def test_output_ae91; assert_in_epsilon(1.0636974603415554, worksheet.output_ae91, 0.001); end
  def test_output_af91; assert_in_epsilon(1.604078959124847, worksheet.output_af91, 0.001); end
  def test_output_ag91; assert_in_epsilon(1.9878049032852285, worksheet.output_ag91, 0.001); end
  def test_output_ah91; assert_in_epsilon(2.2257369535659204, worksheet.output_ah91, 0.001); end
  def test_output_ai91; assert_in_epsilon(2.3456667349167217, worksheet.output_ai91, 0.001); end
  def test_output_aj91; assert_in_epsilon(2.3617878625432778, worksheet.output_aj91, 0.001); end
  def test_output_al91; assert_in_delta(0.03292139599999673, worksheet.output_al91, 0.001); end
  def test_output_am91; assert_in_delta(0.054786534834963874, worksheet.output_am91, 0.001); end
  def test_output_an91; assert_in_epsilon(7.444677761632297, worksheet.output_an91, 0.001); end
  def test_output_ao91; assert_in_delta(-0.6691671904775038, worksheet.output_ao91, 0.001); end
  def test_output_c92; assert_equal("IX.d", worksheet.output_c92); end
  def test_output_d92; assert_equal("V.01", worksheet.output_d92); end
  def test_output_e92; assert_equal("Commercial hot water [UNUSED - See IX.c]", worksheet.output_e92); end
  def test_output_f92; assert_equal("TWh/yr", worksheet.output_f92); end
  def test_output_g92; assert_equal("/", worksheet.output_g92); end
  def test_output_h92; assert_in_delta(0, (worksheet.output_h92||0), 0.001); end
  def test_output_m92; assert_in_delta(0, (worksheet.output_m92||0), 0.001); end
  def test_output_r92; assert_in_delta(0, (worksheet.output_r92||0), 0.001); end
  def test_output_w92; assert_in_delta(0, (worksheet.output_w92||0), 0.001); end
  def test_output_ab92; assert_in_delta(0, (worksheet.output_ab92||0), 0.001); end
  def test_output_ac92; assert_in_delta(0, (worksheet.output_ac92||0), 0.001); end
  def test_output_ad92; assert_in_delta(0, (worksheet.output_ad92||0), 0.001); end
  def test_output_ae92; assert_in_delta(0, (worksheet.output_ae92||0), 0.001); end
  def test_output_af92; assert_in_delta(0, (worksheet.output_af92||0), 0.001); end
  def test_output_ag92; assert_in_delta(0, (worksheet.output_ag92||0), 0.001); end
  def test_output_ah92; assert_in_delta(0, (worksheet.output_ah92||0), 0.001); end
  def test_output_ai92; assert_in_delta(0, (worksheet.output_ai92||0), 0.001); end
  def test_output_aj92; assert_in_delta(0, (worksheet.output_aj92||0), 0.001); end
  def test_output_ak92; assert_in_delta(0, (worksheet.output_ak92||0), 0.001); end
  def test_output_al92; assert_in_delta(0, (worksheet.output_al92||0), 0.001); end
  def test_output_am92; assert_equal("", worksheet.output_am92); end
  def test_output_an92; assert_equal("", worksheet.output_an92); end
  def test_output_ao92; assert_equal("", worksheet.output_ao92); end
  def test_output_c93; assert_equal("IV.b", worksheet.output_c93); end
  def test_output_d93; assert_equal("V.01", worksheet.output_d93); end
  def test_output_e93; assert_equal("Solar thermal production", worksheet.output_e93); end
  def test_output_ad93; assert_in_delta(0.08785051569693854, worksheet.output_ad93, 0.001); end
  def test_output_ae93; assert_in_delta(0.20550787596809852, worksheet.output_ae93, 0.001); end
  def test_output_af93; assert_in_delta(0.3371509508383878, worksheet.output_af93, 0.001); end
  def test_output_ag93; assert_in_delta(0.4229171391170758, worksheet.output_ag93, 0.001); end
  def test_output_ah93; assert_in_delta(0.40599179220261333, worksheet.output_ah93, 0.001); end
  def test_output_ai93; assert_in_delta(0.38659193323504715, worksheet.output_ai93, 0.001); end
  def test_output_aj93; assert_in_delta(0.3621459907869477, worksheet.output_aj93, 0.001); end
  def test_output_ao93; assert_equal("", worksheet.output_ao93); end
  def test_output_c94; assert_equal("IX", worksheet.output_c94); end
  def test_output_d94; assert_equal("V.01", worksheet.output_d94); end
  def test_output_e94; assert_equal("Heating", worksheet.output_e94); end
  def test_output_f94; assert_equal("TWh/yr", worksheet.output_f94); end
  def test_output_h94; assert_in_delta(0, (worksheet.output_h94||0), 0.001); end
  def test_output_m94; assert_in_delta(0, (worksheet.output_m94||0), 0.001); end
  def test_output_r94; assert_in_delta(0, (worksheet.output_r94||0), 0.001); end
  def test_output_w94; assert_in_delta(0, (worksheet.output_w94||0), 0.001); end
  def test_output_ab94; assert_in_delta(0, (worksheet.output_ab94||0), 0.001); end
  def test_output_ad94; assert_in_epsilon(7.156967086430905, worksheet.output_ad94, 0.001); end
  def test_output_ae94; assert_in_epsilon(9.193182693645436, worksheet.output_ae94, 0.001); end
  def test_output_af94; assert_in_epsilon(10.18113143969095, worksheet.output_af94, 0.001); end
  def test_output_ag94; assert_in_epsilon(10.630153807674093, worksheet.output_ag94, 0.001); end
  def test_output_ah94; assert_in_epsilon(10.915975891573927, worksheet.output_ah94, 0.001); end
  def test_output_ai94; assert_in_epsilon(10.826302931737628, worksheet.output_ai94, 0.001); end
  def test_output_aj94; assert_in_epsilon(10.367515944764678, worksheet.output_aj94, 0.001); end
  def test_output_al94; assert_in_delta(0.12610716566123367, worksheet.output_al94, 0.001); end
  def test_output_am94; assert_in_delta(0.016564515527355494, worksheet.output_am94, 0.001); end
  def test_output_an94; assert_in_delta(0.9292914572302322, worksheet.output_an94, 0.001); end
  def test_output_ao94; assert_equal("", worksheet.output_ao94); end
  def test_output_c95; assert_equal("X.a", worksheet.output_c95); end
  def test_output_d95; assert_equal("V.01", worksheet.output_d95); end
  def test_output_e95; assert_equal("Domestic lighting, appliances, and cooking", worksheet.output_e95); end
  def test_output_f95; assert_equal("TWh/yr", worksheet.output_f95); end
  def test_output_g95; assert_equal("Included in domestic space heating", worksheet.output_g95); end
  def test_output_h95; assert_in_delta(0, (worksheet.output_h95||0), 0.001); end
  def test_output_i95; assert_in_epsilon(19.897, worksheet.output_i95, 0.001); end
  def test_output_j95; assert_in_epsilon(20.245, worksheet.output_j95, 0.001); end
  def test_output_k95; assert_in_epsilon(21.09, worksheet.output_k95, 0.001); end
  def test_output_l95; assert_in_epsilon(21.358, worksheet.output_l95, 0.001); end
  def test_output_m95; assert_in_delta(0, (worksheet.output_m95||0), 0.001); end
  def test_output_n95; assert_in_epsilon(23.229, worksheet.output_n95, 0.001); end
  def test_output_o95; assert_in_epsilon(22.933, worksheet.output_o95, 0.001); end
  def test_output_p95; assert_in_epsilon(23.388, worksheet.output_p95, 0.001); end
  def test_output_q95; assert_in_epsilon(23.482, worksheet.output_q95, 0.001); end
  def test_output_r95; assert_in_delta(0, (worksheet.output_r95||0), 0.001); end
  def test_output_s95; assert_in_epsilon(24.396, worksheet.output_s95, 0.001); end
  def test_output_t95; assert_in_epsilon(25.921, worksheet.output_t95, 0.001); end
  def test_output_u95; assert_in_epsilon(26.026, worksheet.output_u95, 0.001); end
  def test_output_v95; assert_in_epsilon(26.543, worksheet.output_v95, 0.001); end
  def test_output_w95; assert_in_delta(0, (worksheet.output_w95||0), 0.001); end
  def test_output_x95; assert_in_epsilon(22.722, worksheet.output_x95, 0.001); end
  def test_output_y95; assert_in_epsilon(21.856, worksheet.output_y95, 0.001); end
  def test_output_z95; assert_in_epsilon(19.982, worksheet.output_z95, 0.001); end
  def test_output_aa95; assert_in_epsilon(20.21, worksheet.output_aa95, 0.001); end
  def test_output_ab95; assert_in_delta(0, (worksheet.output_ab95||0), 0.001); end
  def test_output_ad95; assert_in_epsilon(13.427466380048077, worksheet.output_ad95, 0.001); end
  def test_output_ae95; assert_in_epsilon(14.743934732000405, worksheet.output_ae95, 0.001); end
  def test_output_af95; assert_in_epsilon(15.134229007745835, worksheet.output_af95, 0.001); end
  def test_output_ag95; assert_in_epsilon(15.506251576759084, worksheet.output_ag95, 0.001); end
  def test_output_ah95; assert_in_epsilon(15.64877587028355, worksheet.output_ah95, 0.001); end
  def test_output_ai95; assert_in_epsilon(15.772970928011766, worksheet.output_ai95, 0.001); end
  def test_output_aj95; assert_in_epsilon(15.773906554262032, worksheet.output_aj95, 0.001); end
  def test_output_ak95; assert_in_epsilon(15.75486351306977, worksheet.output_ak95, 0.001); end
  def test_output_al95; assert_in_delta(0.20104861423162887, worksheet.output_al95, 0.001); end
  def test_output_am95; assert_in_delta(0.004986916950415976, worksheet.output_am95, 0.001); end
  def test_output_an95; assert_in_delta(0.22015870781917712, worksheet.output_an95, 0.001); end
  def test_output_ao95; assert_equal("", worksheet.output_ao95); end
  def test_output_c96; assert_equal("X.b", worksheet.output_c96); end
  def test_output_d96; assert_equal("V.01", worksheet.output_d96); end
  def test_output_e96; assert_equal("Commercial lighting, appliances, and catering", worksheet.output_e96); end
  def test_output_f96; assert_equal("TWh/yr", worksheet.output_f96); end
  def test_output_g96; assert_equal("Included in commercial space heating", worksheet.output_g96); end
  def test_output_h96; assert_in_delta(0, (worksheet.output_h96||0), 0.001); end
  def test_output_i96; assert_in_epsilon(8.262, worksheet.output_i96, 0.001); end
  def test_output_j96; assert_in_epsilon(8.821, worksheet.output_j96, 0.001); end
  def test_output_k96; assert_in_epsilon(9.595, worksheet.output_k96, 0.001); end
  def test_output_l96; assert_in_epsilon(10.097, worksheet.output_l96, 0.001); end
  def test_output_m96; assert_in_delta(0, (worksheet.output_m96||0), 0.001); end
  def test_output_n96; assert_in_epsilon(10.871, worksheet.output_n96, 0.001); end
  def test_output_o96; assert_in_epsilon(10.988, worksheet.output_o96, 0.001); end
  def test_output_p96; assert_in_epsilon(11.567, worksheet.output_p96, 0.001); end
  def test_output_q96; assert_in_epsilon(11.738, worksheet.output_q96, 0.001); end
  def test_output_r96; assert_in_delta(0, (worksheet.output_r96||0), 0.001); end
  def test_output_s96; assert_in_epsilon(12.791, worksheet.output_s96, 0.001); end
  def test_output_t96; assert_in_epsilon(11.858, worksheet.output_t96, 0.001); end
  def test_output_u96; assert_in_epsilon(11.906, worksheet.output_u96, 0.001); end
  def test_output_v96; assert_in_epsilon(11.928, worksheet.output_v96, 0.001); end
  def test_output_w96; assert_in_delta(0, (worksheet.output_w96||0), 0.001); end
  def test_output_x96; assert_in_epsilon(17.148, worksheet.output_x96, 0.001); end
  def test_output_y96; assert_in_epsilon(18.147, worksheet.output_y96, 0.001); end
  def test_output_z96; assert_in_epsilon(20.83, worksheet.output_z96, 0.001); end
  def test_output_aa96; assert_in_epsilon(21.476, worksheet.output_aa96, 0.001); end
  def test_output_ab96; assert_in_delta(0, (worksheet.output_ab96||0), 0.001); end
  def test_output_ac96; assert_in_epsilon(21.539210527295626, worksheet.output_ac96, 0.001); end
  def test_output_ad96; assert_in_epsilon(22.857955435471524, worksheet.output_ad96, 0.001); end
  def test_output_ae96; assert_in_epsilon(23.573857312363728, worksheet.output_ae96, 0.001); end
  def test_output_af96; assert_in_epsilon(23.622772167008858, worksheet.output_af96, 0.001); end
  def test_output_ag96; assert_in_epsilon(23.55647200864492, worksheet.output_ag96, 0.001); end
  def test_output_ah96; assert_in_epsilon(23.375232527724833, worksheet.output_ah96, 0.001); end
  def test_output_ai96; assert_in_epsilon(23.174329232425727, worksheet.output_ai96, 0.001); end
  def test_output_aj96; assert_in_epsilon(22.95360830870714, worksheet.output_aj96, 0.001); end
  def test_output_ak96; assert_in_epsilon(22.72013394407555, worksheet.output_ak96, 0.001); end
  def test_output_al96; assert_in_delta(0.28993278430016395, worksheet.output_al96, 0.001); end
  def test_output_am96; assert_in_delta(0.0013353024654205736, worksheet.output_am96, 0.001); end
  def test_output_an96; assert_in_delta(0.05482668063824314, worksheet.output_an96, 0.001); end
  def test_output_ao96; assert_equal("", worksheet.output_ao96); end
  def test_output_c97; assert_equal("X", worksheet.output_c97); end
  def test_output_d97; assert_equal("V.01", worksheet.output_d97); end
  def test_output_e97; assert_equal("Lighting and appliances", worksheet.output_e97); end
  def test_output_f97; assert_equal("TWh/yr", worksheet.output_f97); end
  def test_output_h97; assert_in_delta(0, (worksheet.output_h97||0), 0.001); end
  def test_output_m97; assert_in_delta(0, (worksheet.output_m97||0), 0.001); end
  def test_output_r97; assert_in_delta(0, (worksheet.output_r97||0), 0.001); end
  def test_output_w97; assert_in_delta(0, (worksheet.output_w97||0), 0.001); end
  def test_output_ab97; assert_in_delta(0, (worksheet.output_ab97||0), 0.001); end
  def test_output_ad97; assert_in_epsilon(36.2854218155196, worksheet.output_ad97, 0.001); end
  def test_output_ae97; assert_in_epsilon(38.31779204436413, worksheet.output_ae97, 0.001); end
  def test_output_af97; assert_in_epsilon(38.75700117475469, worksheet.output_af97, 0.001); end
  def test_output_ag97; assert_in_epsilon(39.062723585404, worksheet.output_ag97, 0.001); end
  def test_output_ah97; assert_in_epsilon(39.024008398008384, worksheet.output_ah97, 0.001); end
  def test_output_ai97; assert_in_epsilon(38.94730016043749, worksheet.output_ai97, 0.001); end
  def test_output_aj97; assert_in_epsilon(38.72751486296917, worksheet.output_aj97, 0.001); end
  def test_output_al97; assert_in_delta(0.49098139853179285, worksheet.output_al97, 0.001); end
  def test_output_am97; assert_in_delta(0.002765324781471401, worksheet.output_am97, 0.001); end
  def test_output_an97; assert_in_delta(0.11679204749627181, worksheet.output_an97, 0.001); end
  def test_output_ao97; assert_equal("", worksheet.output_ao97); end
  def test_output_c98; assert_equal("XI.a", worksheet.output_c98); end
  def test_output_d98; assert_equal("V.01", worksheet.output_d98); end
  def test_output_e98; assert_equal("Steel Industry", worksheet.output_e98); end
  def test_output_f98; assert_equal("TWh/yr", worksheet.output_f98); end
  def test_output_g98; assert_equal("IEA - Electricity demand - Steel", worksheet.output_g98); end
  def test_output_h98; assert_in_epsilon(5.136, worksheet.output_h98, 0.001); end
  def test_output_i98; assert_in_epsilon(5.388, worksheet.output_i98, 0.001); end
  def test_output_j98; assert_in_epsilon(5.566, worksheet.output_j98, 0.001); end
  def test_output_k98; assert_in_epsilon(5.302, worksheet.output_k98, 0.001); end
  def test_output_l98; assert_in_epsilon(5.873, worksheet.output_l98, 0.001); end
  def test_output_m98; assert_in_epsilon(6.126, worksheet.output_m98, 0.001); end
  def test_output_n98; assert_in_epsilon(5.798, worksheet.output_n98, 0.001); end
  def test_output_o98; assert_in_epsilon(6.303, worksheet.output_o98, 0.001); end
  def test_output_p98; assert_in_epsilon(6.445, worksheet.output_p98, 0.001); end
  def test_output_q98; assert_in_epsilon(6.198, worksheet.output_q98, 0.001); end
  def test_output_r98; assert_in_epsilon(6.876, worksheet.output_r98, 0.001); end
  def test_output_s98; assert_in_epsilon(6.663, worksheet.output_s98, 0.001); end
  def test_output_t98; assert_in_epsilon(6.833, worksheet.output_t98, 0.001); end
  def test_output_u98; assert_in_epsilon(7.015, worksheet.output_u98, 0.001); end
  def test_output_v98; assert_in_epsilon(7.061, worksheet.output_v98, 0.001); end
  def test_output_w98; assert_in_epsilon(5.997, worksheet.output_w98, 0.001); end
  def test_output_x98; assert_in_epsilon(6.193, worksheet.output_x98, 0.001); end
  def test_output_y98; assert_in_epsilon(6.486, worksheet.output_y98, 0.001); end
  def test_output_z98; assert_in_epsilon(6.346, worksheet.output_z98, 0.001); end
  def test_output_aa98; assert_in_epsilon(5.198, worksheet.output_aa98, 0.001); end
  def test_output_ab98; assert_in_epsilon(5.986, worksheet.output_ab98, 0.001); end
  def test_output_ac98; assert_in_epsilon(5.441092698287021, worksheet.output_ac98, 0.001); end
  def test_output_ad98; assert_in_epsilon(5.238747094979106, worksheet.output_ad98, 0.001); end
  def test_output_ae98; assert_in_epsilon(5.211162186872965, worksheet.output_ae98, 0.001); end
  def test_output_af98; assert_in_epsilon(5.133205577822941, worksheet.output_af98, 0.001); end
  def test_output_ag98; assert_in_epsilon(5.01551462802179, worksheet.output_ag98, 0.001); end
  def test_output_ah98; assert_in_epsilon(4.513491850027481, worksheet.output_ah98, 0.001); end
  def test_output_ai98; assert_in_epsilon(4.063329307109306, worksheet.output_ai98, 0.001); end
  def test_output_aj98; assert_in_epsilon(3.659773981561777, worksheet.output_aj98, 0.001); end
  def test_output_ak98; assert_in_epsilon(3.5345955669159417, worksheet.output_ak98, 0.001); end
  def test_output_al98; assert_in_delta(0.045105153720195336, worksheet.output_al98, 0.001); end
  def test_output_am98; assert_in_delta(-0.010726580987764134, worksheet.output_am98, 0.001); end
  def test_output_an98; assert_in_delta(-0.35038865115664874, worksheet.output_an98, 0.001); end
  def test_output_ao98; assert_in_delta(-0.3117999285599802, worksheet.output_ao98, 0.001); end
  def test_output_c99; assert_equal("XI.b", worksheet.output_c99); end
  def test_output_d99; assert_equal("V.01", worksheet.output_d99); end
  def test_output_e99; assert_equal("Cement Industry", worksheet.output_e99); end
  def test_output_f99; assert_equal("TWh/yr", worksheet.output_f99); end
  def test_output_g99; assert_equal("IEA - Electricity demand - Minerals (incl. cement and lime)", worksheet.output_g99); end
  def test_output_h99; assert_in_epsilon(2.085, worksheet.output_h99, 0.001); end
  def test_output_m99; assert_in_epsilon(2.424, worksheet.output_m99, 0.001); end
  def test_output_r99; assert_in_epsilon(2.518, worksheet.output_r99, 0.001); end
  def test_output_w99; assert_in_epsilon(2.325, worksheet.output_w99, 0.001); end
  def test_output_ab99; assert_in_epsilon(1.059, worksheet.output_ab99, 0.001); end
  def test_output_ac99; assert_in_delta(0.7368000000000001, worksheet.output_ac99, 0.001); end
  def test_output_ad99; assert_in_delta(0.40098258633205497, worksheet.output_ad99, 0.001); end
  def test_output_ae99; assert_in_delta(0.27864916056554684, worksheet.output_ae99, 0.001); end
  def test_output_af99; assert_in_delta(0.14278859528403087, worksheet.output_af99, 0.001); end
  def test_output_ag99; assert_in_delta(0.09469307454913746, worksheet.output_ag99, 0.001); end
  def test_output_ah99; assert_in_delta(0.05900719892964311, worksheet.output_ah99, 0.001); end
  def test_output_ai99; assert_in_delta(0.030963594736385196, worksheet.output_ai99, 0.001); end
  def test_output_aj99; assert_in_delta(0.011121818987294644, worksheet.output_aj99, 0.001); end
  def test_output_ak99; assert_in_delta(0, (worksheet.output_ak99||0), 0.001); end
  def test_output_al99; assert_in_delta(0, (worksheet.output_al99||0), 0.001); end
  def test_output_am99; assert_in_delta(-1, worksheet.output_am99, 0.001); end
  def test_output_an99; assert_in_delta(-1, worksheet.output_an99, 0.001); end
  def test_output_ao99; assert_in_delta(-1, worksheet.output_ao99, 0.001); end
  def test_output_c100; assert_equal("XI.c", worksheet.output_c100); end
  def test_output_d100; assert_equal("V.01", worksheet.output_d100); end
  def test_output_e100; assert_equal("Lime Industry", worksheet.output_e100); end
  def test_output_f100; assert_equal("TWh/yr", worksheet.output_f100); end
  def test_output_g100; assert_equal("included in cement", worksheet.output_g100); end
  def test_output_h100; assert_in_delta(0, (worksheet.output_h100||0), 0.001); end
  def test_output_m100; assert_in_delta(0, (worksheet.output_m100||0), 0.001); end
  def test_output_r100; assert_in_delta(0, (worksheet.output_r100||0), 0.001); end
  def test_output_w100; assert_in_delta(0, (worksheet.output_w100||0), 0.001); end
  def test_output_ab100; assert_in_delta(0, (worksheet.output_ab100||0), 0.001); end
  def test_output_ac100; assert_in_delta(0.3632617650452761, worksheet.output_ac100, 0.001); end
  def test_output_ad100; assert_in_delta(0.31768366693171723, worksheet.output_ad100, 0.001); end
  def test_output_ae100; assert_in_delta(0.2753014483649211, worksheet.output_ae100, 0.001); end
  def test_output_af100; assert_in_delta(0.23605932362641519, worksheet.output_af100, 0.001); end
  def test_output_ag100; assert_in_delta(0.20879456773194827, worksheet.output_ag100, 0.001); end
  def test_output_ah100; assert_in_delta(0.18235270924912161, worksheet.output_ah100, 0.001); end
  def test_output_ai100; assert_in_delta(0.1568049016274234, worksheet.output_ai100, 0.001); end
  def test_output_aj100; assert_in_delta(0.1322168781151362, worksheet.output_aj100, 0.001); end
  def test_output_ak100; assert_in_delta(0.1086373220158386, worksheet.output_ak100, 0.001); end
  def test_output_al100; assert_in_delta(0.0013863263891179132, worksheet.output_al100, 0.001); end
  def test_output_am100; assert_in_delta(-0.02972691571826347, worksheet.output_am100, 0.001); end
  def test_output_an100; assert_in_delta(-0.7009392882229202, worksheet.output_an100, 0.001); end
  def test_output_ao100; assert_equal("", worksheet.output_ao100); end
  def test_output_c101; assert_equal("XI.d", worksheet.output_c101); end
  def test_output_d101; assert_equal("V.01", worksheet.output_d101); end
  def test_output_e101; assert_equal("Glass Industry", worksheet.output_e101); end
  def test_output_f101; assert_equal("TWh/yr", worksheet.output_f101); end
  def test_output_g101; assert_equal("included in cement", worksheet.output_g101); end
  def test_output_h101; assert_in_delta(0, (worksheet.output_h101||0), 0.001); end
  def test_output_m101; assert_in_delta(0, (worksheet.output_m101||0), 0.001); end
  def test_output_r101; assert_in_delta(0, (worksheet.output_r101||0), 0.001); end
  def test_output_w101; assert_in_delta(0, (worksheet.output_w101||0), 0.001); end
  def test_output_ab101; assert_in_delta(0, (worksheet.output_ab101||0), 0.001); end
  def test_output_ac101; assert_in_delta(0.6750342857142856, worksheet.output_ac101, 0.001); end
  def test_output_ad101; assert_in_delta(0.6154894928144589, worksheet.output_ad101, 0.001); end
  def test_output_ae101; assert_in_delta(0.5562095383882948, worksheet.output_ae101, 0.001); end
  def test_output_af101; assert_in_delta(0.5254527832423861, worksheet.output_af101, 0.001); end
  def test_output_ag101; assert_in_delta(0.49032618266511496, worksheet.output_ag101, 0.001); end
  def test_output_ah101; assert_in_delta(0.45776134230000437, worksheet.output_ah101, 0.001); end
  def test_output_ai101; assert_in_delta(0.4274904716045674, worksheet.output_ai101, 0.001); end
  def test_output_aj101; assert_in_delta(0.3992831315659058, worksheet.output_aj101, 0.001); end
  def test_output_ak101; assert_in_delta(0.3729406661804617, worksheet.output_ak101, 0.001); end
  def test_output_al101; assert_in_delta(0.004759114800582168, worksheet.output_al101, 0.001); end
  def test_output_am101; assert_in_delta(-0.014724127780162632, worksheet.output_am101, 0.001); end
  def test_output_an101; assert_in_delta(-0.4475233716672101, worksheet.output_an101, 0.001); end
  def test_output_ao101; assert_equal("", worksheet.output_ao101); end
  def test_output_c102; assert_equal("XI.e", worksheet.output_c102); end
  def test_output_d102; assert_equal("V.01", worksheet.output_d102); end
  def test_output_e102; assert_equal("Chemicals Industry", worksheet.output_e102); end
  def test_output_f102; assert_equal("TWh/yr", worksheet.output_f102); end
  def test_output_g102; assert_equal("IEA - Electricity demand - Chemicals (including oil & gas)", worksheet.output_g102); end
  def test_output_h102; assert_in_epsilon(9.875, worksheet.output_h102, 0.001); end
  def test_output_i102; assert_in_epsilon(10.01, worksheet.output_i102, 0.001); end
  def test_output_j102; assert_in_epsilon(10.636, worksheet.output_j102, 0.001); end
  def test_output_k102; assert_in_epsilon(10.279, worksheet.output_k102, 0.001); end
  def test_output_l102; assert_in_epsilon(11.106, worksheet.output_l102, 0.001); end
  def test_output_m102; assert_in_epsilon(11.426, worksheet.output_m102, 0.001); end
  def test_output_n102; assert_in_epsilon(11.555, worksheet.output_n102, 0.001); end
  def test_output_o102; assert_in_epsilon(12.323, worksheet.output_o102, 0.001); end
  def test_output_p102; assert_in_epsilon(12.757, worksheet.output_p102, 0.001); end
  def test_output_q102; assert_in_epsilon(12.79, worksheet.output_q102, 0.001); end
  def test_output_r102; assert_in_epsilon(13.48, worksheet.output_r102, 0.001); end
  def test_output_s102; assert_in_epsilon(13.189, worksheet.output_s102, 0.001); end
  def test_output_t102; assert_in_epsilon(13.177, worksheet.output_t102, 0.001); end
  def test_output_u102; assert_in_epsilon(13.537, worksheet.output_u102, 0.001); end
  def test_output_v102; assert_in_epsilon(13.473, worksheet.output_v102, 0.001); end
  def test_output_w102; assert_in_epsilon(13.767, worksheet.output_w102, 0.001); end
  def test_output_x102; assert_in_epsilon(11.766, worksheet.output_x102, 0.001); end
  def test_output_y102; assert_in_epsilon(13.176, worksheet.output_y102, 0.001); end
  def test_output_z102; assert_in_epsilon(12.222, worksheet.output_z102, 0.001); end
  def test_output_aa102; assert_in_epsilon(8.678, worksheet.output_aa102, 0.001); end
  def test_output_ab102; assert_in_epsilon(13.5, worksheet.output_ab102, 0.001); end
  def test_output_ac102; assert_in_epsilon(6.777914478038954, worksheet.output_ac102, 0.001); end
  def test_output_ad102; assert_in_epsilon(5.368549718512344, worksheet.output_ad102, 0.001); end
  def test_output_ae102; assert_in_epsilon(4.110215985370435, worksheet.output_ae102, 0.001); end
  def test_output_af102; assert_in_epsilon(3.0162350982782717, worksheet.output_af102, 0.001); end
  def test_output_ag102; assert_in_epsilon(2.0657744067901325, worksheet.output_ag102, 0.001); end
  def test_output_ah102; assert_in_epsilon(1.2404924959909387, worksheet.output_ah102, 0.001); end
  def test_output_ai102; assert_in_delta(0.5242559639301119, worksheet.output_ai102, 0.001); end
  def test_output_aj102; assert_in_delta(-0.09711286750209336, worksheet.output_aj102, 0.001); end
  def test_output_ak102; assert_in_delta(-0.6360605813721127, worksheet.output_ak102, 0.001); end
  def test_output_al102; assert_in_delta(-0.008116801414759496, worksheet.output_al102, 0.001); end
  def test_output_am102; assert_equal("", worksheet.output_am102); end
  def test_output_an102; assert_in_epsilon(-1.093843111097522, worksheet.output_an102, 0.001); end
  def test_output_ao102; assert_in_epsilon(-1.0644111981136317, worksheet.output_ao102, 0.001); end
  def test_output_c103; assert_equal("XI.f", worksheet.output_c103); end
  def test_output_d103; assert_equal("V.01", worksheet.output_d103); end
  def test_output_e103; assert_equal("Pulp & Paper Industry", worksheet.output_e103); end
  def test_output_f103; assert_equal("TWh/yr", worksheet.output_f103); end
  def test_output_g103; assert_equal("IEA - Electricity demand - Pulp & Paper", worksheet.output_g103); end
  def test_output_h103; assert_in_epsilon(2.117, worksheet.output_h103, 0.001); end
  def test_output_m103; assert_in_epsilon(2.329, worksheet.output_m103, 0.001); end
  def test_output_r103; assert_in_epsilon(2.525, worksheet.output_r103, 0.001); end
  def test_output_w103; assert_in_epsilon(2.71, worksheet.output_w103, 0.001); end
  def test_output_ab103; assert_in_epsilon(2.6, worksheet.output_ab103, 0.001); end
  def test_output_ac103; assert_in_epsilon(2.6266213333333335, worksheet.output_ac103, 0.001); end
  def test_output_ad103; assert_in_epsilon(2.3787236516355525, worksheet.output_ad103, 0.001); end
  def test_output_ae103; assert_in_epsilon(2.144806571965802, worksheet.output_ae103, 0.001); end
  def test_output_af103; assert_in_epsilon(1.9241535437328006, worksheet.output_af103, 0.001); end
  def test_output_ag103; assert_in_epsilon(1.716082766020421, worksheet.output_ag103, 0.001); end
  def test_output_ah103; assert_in_epsilon(1.5785499284490099, worksheet.output_ah103, 0.001); end
  def test_output_ai103; assert_in_epsilon(1.3905012782881827, worksheet.output_ai103, 0.001); end
  def test_output_aj103; assert_in_epsilon(1.21334540702982, worksheet.output_aj103, 0.001); end
  def test_output_ak103; assert_in_epsilon(1.046516126290753, worksheet.output_ak103, 0.001); end
  def test_output_al103; assert_in_delta(0.013354645490090475, worksheet.output_al103, 0.001); end
  def test_output_am103; assert_in_delta(-0.022743176603722604, worksheet.output_am103, 0.001); end
  def test_output_an103; assert_in_delta(-0.6015732785651811, worksheet.output_an103, 0.001); end
  def test_output_ao103; assert_in_delta(-0.5056607811569425, worksheet.output_ao103, 0.001); end
  def test_output_c104; assert_equal("XI.g", worksheet.output_c104); end
  def test_output_d104; assert_equal("V.01", worksheet.output_d104); end
  def test_output_e104; assert_equal("Oil & Gas Industry", worksheet.output_e104); end
  def test_output_f104; assert_equal("TWh/yr", worksheet.output_f104); end
  def test_output_g104; assert_equal("included in chemicals", worksheet.output_g104); end
  def test_output_h104; assert_in_epsilon(2.117, worksheet.output_h104, 0.001); end
  def test_output_i104; assert_in_epsilon(2.047, worksheet.output_i104, 0.001); end
  def test_output_j104; assert_in_epsilon(2.229, worksheet.output_j104, 0.001); end
  def test_output_k104; assert_in_epsilon(2.045, worksheet.output_k104, 0.001); end
  def test_output_l104; assert_in_epsilon(2.199, worksheet.output_l104, 0.001); end
  def test_output_m104; assert_in_epsilon(2.329, worksheet.output_m104, 0.001); end
  def test_output_n104; assert_in_epsilon(2.232, worksheet.output_n104, 0.001); end
  def test_output_o104; assert_in_epsilon(2.38, worksheet.output_o104, 0.001); end
  def test_output_p104; assert_in_epsilon(2.371, worksheet.output_p104, 0.001); end
  def test_output_q104; assert_in_epsilon(2.475, worksheet.output_q104, 0.001); end
  def test_output_r104; assert_in_epsilon(2.525, worksheet.output_r104, 0.001); end
  def test_output_s104; assert_in_epsilon(2.465, worksheet.output_s104, 0.001); end
  def test_output_t104; assert_in_epsilon(2.497, worksheet.output_t104, 0.001); end
  def test_output_u104; assert_in_epsilon(2.563, worksheet.output_u104, 0.001); end
  def test_output_v104; assert_in_epsilon(2.612, worksheet.output_v104, 0.001); end
  def test_output_w104; assert_in_epsilon(2.71, worksheet.output_w104, 0.001); end
  def test_output_x104; assert_in_epsilon(2.739, worksheet.output_x104, 0.001); end
  def test_output_y104; assert_in_epsilon(2.848, worksheet.output_y104, 0.001); end
  def test_output_z104; assert_in_epsilon(2.671, worksheet.output_z104, 0.001); end
  def test_output_aa104; assert_in_epsilon(2.382, worksheet.output_aa104, 0.001); end
  def test_output_ab104; assert_in_epsilon(2.6, worksheet.output_ab104, 0.001); end
  def test_output_ac104; assert_in_epsilon(-1.5510879741391, worksheet.output_ac104, 0.001); end
  def test_output_ad104; assert_in_epsilon(-1.670624209666048, worksheet.output_ad104, 0.001); end
  def test_output_ae104; assert_in_epsilon(-2.1889088563215653, worksheet.output_ae104, 0.001); end
  def test_output_af104; assert_in_epsilon(-2.3906737792071695, worksheet.output_af104, 0.001); end
  def test_output_ag104; assert_in_epsilon(-2.5471436183395113, worksheet.output_ag104, 0.001); end
  def test_output_ah104; assert_in_epsilon(-2.668718955573622, worksheet.output_ah104, 0.001); end
  def test_output_ai104; assert_in_epsilon(-2.755999430899618, worksheet.output_ai104, 0.001); end
  def test_output_aj104; assert_in_epsilon(-2.825861121206025, worksheet.output_aj104, 0.001); end
  def test_output_ak104; assert_in_epsilon(-2.881078287552097, worksheet.output_ak104, 0.001); end
  def test_output_al104; assert_in_delta(-0.03676558649490461, worksheet.output_al104, 0.001); end
  def test_output_am104; assert_in_delta(0.015600639626082602, worksheet.output_am104, 0.001); end
  def test_output_an104; assert_in_delta(0.8574564019498514, worksheet.output_an104, 0.001); end
  def test_output_ao104; assert_in_epsilon(-2.3609250295475186, worksheet.output_ao104, 0.001); end
  def test_output_c105; assert_equal("XI.h", worksheet.output_c105); end
  def test_output_d105; assert_equal("V.01", worksheet.output_d105); end
  def test_output_e105; assert_equal("Food, drinks and tobacco Industry", worksheet.output_e105); end
  def test_output_f105; assert_equal("TWh/yr", worksheet.output_f105); end
  def test_output_g105; assert_equal("IEA - Electricity demand - Food, drinks and tobacco", worksheet.output_g105); end
  def test_output_h105; assert_in_epsilon(2.793, worksheet.output_h105, 0.001); end
  def test_output_m105; assert_in_epsilon(3.312, worksheet.output_m105, 0.001); end
  def test_output_r105; assert_in_epsilon(3.953, worksheet.output_r105, 0.001); end
  def test_output_w105; assert_in_epsilon(3.991, worksheet.output_w105, 0.001); end
  def test_output_ab105; assert_in_epsilon(4.72, worksheet.output_ab105, 0.001); end
  def test_output_ac105; assert_in_epsilon(3.8470838333333335, worksheet.output_ac105, 0.001); end
  def test_output_ad105; assert_in_epsilon(3.37462766340591, worksheet.output_ad105, 0.001); end
  def test_output_ae105; assert_in_epsilon(2.937587346224836, worksheet.output_ae105, 0.001); end
  def test_output_af105; assert_in_epsilon(2.533251475157306, worksheet.output_af105, 0.001); end
  def test_output_ag105; assert_in_epsilon(2.178932942750315, worksheet.output_ag105, 0.001); end
  def test_output_ah105; assert_in_epsilon(1.8935555998641065, worksheet.output_ah105, 0.001); end
  def test_output_ai105; assert_in_epsilon(1.6251705005306443, worksheet.output_ai105, 0.001); end
  def test_output_aj105; assert_in_epsilon(1.371932780204093, worksheet.output_aj105, 0.001); end
  def test_output_ak105; assert_in_epsilon(1.132157210331783, worksheet.output_ak105, 0.001); end
  def test_output_al105; assert_in_delta(0.01444751571733554, worksheet.output_al105, 0.001); end
  def test_output_am105; assert_in_delta(-0.030116932938053953, worksheet.output_am105, 0.001); end
  def test_output_an105; assert_in_delta(-0.7057102835861996, worksheet.output_an105, 0.001); end
  def test_output_ao105; assert_in_delta(-0.5946447510448325, worksheet.output_ao105, 0.001); end
  def test_output_c106; assert_equal("XI.i", worksheet.output_c106); end
  def test_output_d106; assert_equal("V.01", worksheet.output_d106); end
  def test_output_e106; assert_equal("Machines Industry", worksheet.output_e106); end
  def test_output_f106; assert_equal("TWh/yr", worksheet.output_f106); end
  def test_output_g106; assert_equal("IEA - Electricity demand - Machines", worksheet.output_g106); end
  def test_output_h106; assert_in_epsilon(2.003, worksheet.output_h106, 0.001); end
  def test_output_m106; assert_in_epsilon(1.909, worksheet.output_m106, 0.001); end
  def test_output_r106; assert_in_epsilon(2.092, worksheet.output_r106, 0.001); end
  def test_output_w106; assert_in_epsilon(2.169, worksheet.output_w106, 0.001); end
  def test_output_ab106; assert_in_epsilon(1.899, worksheet.output_ab106, 0.001); end
  def test_output_ac106; assert_in_delta(0, (worksheet.output_ac106||0), 0.001); end
  def test_output_ad106; assert_in_delta(0, (worksheet.output_ad106||0), 0.001); end
  def test_output_ae106; assert_in_delta(0, (worksheet.output_ae106||0), 0.001); end
  def test_output_af106; assert_in_delta(0, (worksheet.output_af106||0), 0.001); end
  def test_output_ag106; assert_in_delta(0, (worksheet.output_ag106||0), 0.001); end
  def test_output_ah106; assert_in_delta(0, (worksheet.output_ah106||0), 0.001); end
  def test_output_ai106; assert_in_delta(0, (worksheet.output_ai106||0), 0.001); end
  def test_output_aj106; assert_in_delta(0, (worksheet.output_aj106||0), 0.001); end
  def test_output_ak106; assert_in_delta(0, (worksheet.output_ak106||0), 0.001); end
  def test_output_al106; assert_in_delta(0, (worksheet.output_al106||0), 0.001); end
  def test_output_am106; assert_equal("", worksheet.output_am106); end
  def test_output_an106; assert_equal("", worksheet.output_an106); end
  def test_output_ao106; assert_in_delta(-1, worksheet.output_ao106, 0.001); end
  def test_output_c107; assert_equal("XI.j", worksheet.output_c107); end
  def test_output_d107; assert_equal("V.01", worksheet.output_d107); end
  def test_output_e107; assert_equal("Non-Ferrous metals Industry", worksheet.output_e107); end
  def test_output_f107; assert_equal("TWh/yr", worksheet.output_f107); end
  def test_output_g107; assert_equal("IEA - Electricity demand - Non-Ferrous metals", worksheet.output_g107); end
  def test_output_h107; assert_in_epsilon(2.106, worksheet.output_h107, 0.001); end
  def test_output_m107; assert_in_epsilon(1.843, worksheet.output_m107, 0.001); end
  def test_output_r107; assert_in_epsilon(2.045, worksheet.output_r107, 0.001); end
  def test_output_w107; assert_in_epsilon(1.729, worksheet.output_w107, 0.001); end
  def test_output_ab107; assert_in_epsilon(1.775, worksheet.output_ab107, 0.001); end
  def test_output_ac107; assert_in_epsilon(1.8179999999999996, worksheet.output_ac107, 0.001); end
  def test_output_ad107; assert_in_epsilon(1.7925898985669135, worksheet.output_ad107, 0.001); end
  def test_output_ae107; assert_in_epsilon(1.758005852445393, worksheet.output_ae107, 0.001); end
  def test_output_af107; assert_in_epsilon(1.7153384896167094, worksheet.output_af107, 0.001); end
  def test_output_ag107; assert_in_epsilon(1.6734838631804454, worksheet.output_ag107, 0.001); end
  def test_output_ah107; assert_in_epsilon(1.6243027335922529, worksheet.output_ah107, 0.001); end
  def test_output_ai107; assert_in_epsilon(1.5684827111094555, worksheet.output_ai107, 0.001); end
  def test_output_aj107; assert_in_epsilon(1.5066958338246768, worksheet.output_aj107, 0.001); end
  def test_output_ak107; assert_in_epsilon(1.4396027339936759, worksheet.output_ak107, 0.001); end
  def test_output_al107; assert_in_delta(0.01837084367461451, worksheet.output_al107, 0.001); end
  def test_output_am107; assert_in_delta(-0.0058172588275854364, worksheet.output_am107, 0.001); end
  def test_output_an107; assert_in_delta(-0.2081393102345015, worksheet.output_an107, 0.001); end
  def test_output_ao107; assert_in_delta(-0.3164279515699544, worksheet.output_ao107, 0.001); end
  def test_output_c108; assert_equal("XI.k", worksheet.output_c108); end
  def test_output_d108; assert_equal("V.01", worksheet.output_d108); end
  def test_output_e108; assert_equal("Construction industry", worksheet.output_e108); end
  def test_output_f108; assert_equal("TWh/yr", worksheet.output_f108); end
  def test_output_g108; assert_equal("IEA - Electricity demand - Construction", worksheet.output_g108); end
  def test_output_h108; assert_in_delta(0.082, worksheet.output_h108, 0.001); end
  def test_output_m108; assert_in_delta(0.19, worksheet.output_m108, 0.001); end
  def test_output_r108; assert_in_delta(0.294, worksheet.output_r108, 0.001); end
  def test_output_w108; assert_in_delta(0.321, worksheet.output_w108, 0.001); end
  def test_output_ab108; assert_in_epsilon(1.41, worksheet.output_ab108, 0.001); end
  def test_output_ac108; assert_in_delta(0.15322865172725741, worksheet.output_ac108, 0.001); end
  def test_output_ad108; assert_in_delta(0.17719481300206957, worksheet.output_ad108, 0.001); end
  def test_output_ae108; assert_in_delta(0.17029111898900193, worksheet.output_ae108, 0.001); end
  def test_output_af108; assert_in_delta(0.16338742497593425, worksheet.output_af108, 0.001); end
  def test_output_ag108; assert_in_delta(0.15811401114673096, worksheet.output_ag108, 0.001); end
  def test_output_ah108; assert_in_delta(0.15244026703042796, worksheet.output_ah108, 0.001); end
  def test_output_ai108; assert_in_delta(0.1464096019352649, worksheet.output_ai108, 0.001); end
  def test_output_aj108; assert_in_delta(0.14006542516948156, worksheet.output_aj108, 0.001); end
  def test_output_ak108; assert_in_delta(0.13345114604131766, worksheet.output_ak108, 0.001); end
  def test_output_al108; assert_in_delta(0.0017029768589852984, worksheet.output_al108, 0.001); end
  def test_output_am108; assert_in_delta(-0.003448933665857856, worksheet.output_am108, 0.001); end
  def test_output_an108; assert_in_delta(-0.1290718508777532, worksheet.output_an108, 0.001); end
  def test_output_ao108; assert_in_delta(0.6274530005038739, worksheet.output_ao108, 0.001); end
  def test_output_c109; assert_equal("XI.l", worksheet.output_c109); end
  def test_output_d109; assert_equal("V.01", worksheet.output_d109); end
  def test_output_e109; assert_equal("Other Industry", worksheet.output_e109); end
  def test_output_f109; assert_equal("TWh/yr", worksheet.output_f109); end
  def test_output_g109; assert_equal("IEA - Electricity demand - Other", worksheet.output_g109); end
  def test_output_h109; assert_in_epsilon(3.993, worksheet.output_h109, 0.001); end
  def test_output_m109; assert_in_epsilon(4.65, worksheet.output_m109, 0.001); end
  def test_output_r109; assert_in_epsilon(5.707, worksheet.output_r109, 0.001); end
  def test_output_w109; assert_in_epsilon(5.885, worksheet.output_w109, 0.001); end
  def test_output_ab109; assert_in_epsilon(4.002, worksheet.output_ab109, 0.001); end
  def test_output_ac109; assert_in_delta(0, (worksheet.output_ac109||0), 0.001); end
  def test_output_ad109; assert_in_delta(0, (worksheet.output_ad109||0), 0.001); end
  def test_output_ae109; assert_in_delta(0, (worksheet.output_ae109||0), 0.001); end
  def test_output_af109; assert_in_delta(0, (worksheet.output_af109||0), 0.001); end
  def test_output_ag109; assert_in_delta(0, (worksheet.output_ag109||0), 0.001); end
  def test_output_ah109; assert_in_delta(0, (worksheet.output_ah109||0), 0.001); end
  def test_output_ai109; assert_in_delta(0, (worksheet.output_ai109||0), 0.001); end
  def test_output_aj109; assert_in_delta(0, (worksheet.output_aj109||0), 0.001); end
  def test_output_ak109; assert_in_delta(0, (worksheet.output_ak109||0), 0.001); end
  def test_output_al109; assert_in_delta(0, (worksheet.output_al109||0), 0.001); end
  def test_output_am109; assert_equal("", worksheet.output_am109); end
  def test_output_an109; assert_equal("", worksheet.output_an109); end
  def test_output_ao109; assert_in_delta(-1, worksheet.output_ao109, 0.001); end
  def test_output_c110; assert_equal("XI", worksheet.output_c110); end
  def test_output_d110; assert_equal("V.01", worksheet.output_d110); end
  def test_output_e110; assert_equal("Industry", worksheet.output_e110); end
  def test_output_f110; assert_equal("TWh/yr", worksheet.output_f110); end
  def test_output_g110; assert_equal("IEA - Electricity demand - Total industry", worksheet.output_g110); end
  def test_output_h110; assert_in_epsilon(30.522999999999996, worksheet.output_h110, 0.001); end
  def test_output_i110; assert_in_epsilon(31.081, worksheet.output_i110, 0.001); end
  def test_output_j110; assert_in_epsilon(32.212, worksheet.output_j110, 0.001); end
  def test_output_k110; assert_in_epsilon(31.255, worksheet.output_k110, 0.001); end
  def test_output_l110; assert_in_epsilon(33.608, worksheet.output_l110, 0.001); end
  def test_output_m110; assert_in_epsilon(34.605, worksheet.output_m110, 0.001); end
  def test_output_n110; assert_in_epsilon(34.498, worksheet.output_n110, 0.001); end
  def test_output_o110; assert_in_epsilon(36.421, worksheet.output_o110, 0.001); end
  def test_output_p110; assert_in_epsilon(37.395, worksheet.output_p110, 0.001); end
  def test_output_q110; assert_in_epsilon(37.633, worksheet.output_q110, 0.001); end
  def test_output_r110; assert_in_epsilon(39.867999999999995, worksheet.output_r110, 0.001); end
  def test_output_s110; assert_in_epsilon(39.224, worksheet.output_s110, 0.001); end
  def test_output_t110; assert_in_epsilon(38.933, worksheet.output_t110, 0.001); end
  def test_output_u110; assert_in_epsilon(40.026, worksheet.output_u110, 0.001); end
  def test_output_v110; assert_in_epsilon(40.367, worksheet.output_v110, 0.001); end
  def test_output_w110; assert_in_epsilon(39.423, worksheet.output_w110, 0.001); end
  def test_output_x110; assert_in_epsilon(40.211, worksheet.output_x110, 0.001); end
  def test_output_y110; assert_in_epsilon(40.134, worksheet.output_y110, 0.001); end
  def test_output_z110; assert_in_epsilon(39.019, worksheet.output_z110, 0.001); end
  def test_output_aa110; assert_in_epsilon(32.676, worksheet.output_aa110, 0.001); end
  def test_output_ab110; assert_in_epsilon(38.137, worksheet.output_ab110, 0.001); end
  def test_output_ad110; assert_in_epsilon(17.99396437651408, worksheet.output_ad110, 0.001); end
  def test_output_ae110; assert_in_epsilon(15.25332035286563, worksheet.output_ae110, 0.001); end
  def test_output_af110; assert_in_epsilon(12.999198532529624, worksheet.output_af110, 0.001); end
  def test_output_ag110; assert_in_epsilon(11.054572824516525, worksheet.output_ag110, 0.001); end
  def test_output_ah110; assert_in_epsilon(9.033235169859363, worksheet.output_ah110, 0.001); end
  def test_output_ai110; assert_in_epsilon(7.177408899971724, worksheet.output_ai110, 0.001); end
  def test_output_aj110; assert_in_epsilon(5.511461267750066, worksheet.output_aj110, 0.001); end
  def test_output_al110; assert_in_delta(0.05424418874125713, worksheet.output_al110, 0.001); end
  def test_output_am110; assert_in_delta(-0.03902016528305796, worksheet.output_am110, 0.001); end
  def test_output_an110; assert_in_delta(-0.796496923258115, worksheet.output_an110, 0.001); end
  def test_output_ao110; assert_in_delta(-0.8607357762066127, worksheet.output_ao110, 0.001); end
  def test_output_e111; assert_equal("Industry electricity consumption based on CHP", worksheet.output_e111); end
  def test_output_f111; assert_equal("TWh/yr", worksheet.output_f111); end
  def test_output_ac149; assert_in_epsilon(10.997030233282302, worksheet.output_ac149, 0.001); end
  def test_output_ac111; assert_in_epsilon(10.997030233282302, worksheet.output_ac111, 0.001); end
  def test_output_ad149; assert_in_epsilon(10.997030233282306, worksheet.output_ad149, 0.001); end
  def test_output_ad111; assert_in_epsilon(10.997030233282306, worksheet.output_ad111, 0.001); end
  def test_output_ae149; assert_in_epsilon(10.997030233282304, worksheet.output_ae149, 0.001); end
  def test_output_ae111; assert_in_epsilon(10.997030233282304, worksheet.output_ae111, 0.001); end
  def test_output_af149; assert_in_epsilon(10.997030233282304, worksheet.output_af149, 0.001); end
  def test_output_af111; assert_in_epsilon(10.997030233282304, worksheet.output_af111, 0.001); end
  def test_output_ag149; assert_in_epsilon(10.997030233282297, worksheet.output_ag149, 0.001); end
  def test_output_ag111; assert_in_epsilon(10.997030233282297, worksheet.output_ag111, 0.001); end
  def test_output_ah149; assert_in_epsilon(10.997030233282302, worksheet.output_ah149, 0.001); end
  def test_output_ah111; assert_in_epsilon(10.997030233282302, worksheet.output_ah111, 0.001); end
  def test_output_ai149; assert_in_epsilon(10.997030233282302, worksheet.output_ai149, 0.001); end
  def test_output_ai111; assert_in_epsilon(10.997030233282302, worksheet.output_ai111, 0.001); end
  def test_output_aj149; assert_in_epsilon(10.997030233282304, worksheet.output_aj149, 0.001); end
  def test_output_aj111; assert_in_epsilon(10.997030233282304, worksheet.output_aj111, 0.001); end
  def test_output_ak111; assert_in_epsilon(10.997030233282299, worksheet.output_ak111, 0.001); end
  def test_output_am111; assert_in_delta(0, (worksheet.output_am111||0), 0.001); end
  def test_output_an111; assert_in_delta(-3.3306690738754696e-16, worksheet.output_an111, 0.001); end
  def test_output_ao111; assert_equal("", worksheet.output_ao111); end
  def test_output_c112; assert_equal("XII.a", worksheet.output_c112); end
  def test_output_d112; assert_equal("V.01", worksheet.output_d112); end
  def test_output_e112; assert_equal("Domestic passenger transport", worksheet.output_e112); end
  def test_output_f112; assert_equal("TWh/yr", worksheet.output_f112); end
  def test_output_g112; assert_equal("IEA - Electricity demand - Rail", worksheet.output_g112); end
  def test_output_h112; assert_in_epsilon(1.249, worksheet.output_h112, 0.001); end
  def test_output_m112; assert_in_epsilon(1.455, worksheet.output_m112, 0.001); end
  def test_output_r112; assert_in_epsilon(1.44, worksheet.output_r112, 0.001); end
  def test_output_w112; assert_in_epsilon(1.675, worksheet.output_w112, 0.001); end
  def test_output_ab112; assert_in_epsilon(1.664, worksheet.output_ab112, 0.001); end
  def test_output_al112; assert_in_delta(0.0690071655009191, worksheet.output_al112, 0.001); end
  def test_output_am112; assert_in_delta(0.041496624594317355, worksheet.output_am112, 0.001); end
  def test_output_an112; assert_in_epsilon(4.085277662436938, worksheet.output_an112, 0.001); end
  def test_output_ao112; assert_in_epsilon(3.3295754439986585, worksheet.output_ao112, 0.001); end
  def test_output_c113; assert_equal("XII.b", worksheet.output_c113); end
  def test_output_d113; assert_equal("V.01", worksheet.output_d113); end
  def test_output_e113; assert_equal("Domestic freight", worksheet.output_e113); end
  def test_output_f113; assert_equal("TWh/yr", worksheet.output_f113); end
  def test_output_g113; assert_equal("included in passenger", worksheet.output_g113); end
  def test_output_h113; assert_in_delta(0, (worksheet.output_h113||0), 0.001); end
  def test_output_i113; assert_in_epsilon(1.276, worksheet.output_i113, 0.001); end
  def test_output_j113; assert_in_epsilon(1.305, worksheet.output_j113, 0.001); end
  def test_output_k113; assert_in_epsilon(1.36, worksheet.output_k113, 0.001); end
  def test_output_l113; assert_in_epsilon(1.376, worksheet.output_l113, 0.001); end
  def test_output_m113; assert_in_delta(0, (worksheet.output_m113||0), 0.001); end
  def test_output_n113; assert_in_epsilon(1.267, worksheet.output_n113, 0.001); end
  def test_output_o113; assert_in_epsilon(1.252, worksheet.output_o113, 0.001); end
  def test_output_p113; assert_in_epsilon(1.366, worksheet.output_p113, 0.001); end
  def test_output_q113; assert_in_epsilon(1.401, worksheet.output_q113, 0.001); end
  def test_output_r113; assert_in_delta(0, (worksheet.output_r113||0), 0.001); end
  def test_output_s113; assert_in_epsilon(1.463, worksheet.output_s113, 0.001); end
  def test_output_t113; assert_in_epsilon(1.452, worksheet.output_t113, 0.001); end
  def test_output_u113; assert_in_epsilon(1.49, worksheet.output_u113, 0.001); end
  def test_output_v113; assert_in_epsilon(1.502, worksheet.output_v113, 0.001); end
  def test_output_w113; assert_in_delta(0, (worksheet.output_w113||0), 0.001); end
  def test_output_x113; assert_in_epsilon(1.585, worksheet.output_x113, 0.001); end
  def test_output_y113; assert_in_epsilon(1.658, worksheet.output_y113, 0.001); end
  def test_output_z113; assert_in_epsilon(1.676, worksheet.output_z113, 0.001); end
  def test_output_aa113; assert_in_epsilon(1.651, worksheet.output_aa113, 0.001); end
  def test_output_ab113; assert_in_delta(0, (worksheet.output_ab113||0), 0.001); end
  def test_output_ad113; assert_in_delta(0.3171120793269231, worksheet.output_ad113, 0.001); end
  def test_output_ae113; assert_in_delta(0.7833250182708477, worksheet.output_ae113, 0.001); end
  def test_output_af113; assert_in_epsilon(1.2045776948854878, worksheet.output_af113, 0.001); end
  def test_output_ag113; assert_in_epsilon(1.5813439257684763, worksheet.output_ag113, 0.001); end
  def test_output_ah113; assert_in_epsilon(1.9142168816457819, worksheet.output_ah113, 0.001); end
  def test_output_ai113; assert_in_epsilon(2.203909087371712, worksheet.output_ai113, 0.001); end
  def test_output_aj113; assert_in_epsilon(2.4512524219289036, worksheet.output_aj113, 0.001); end
  def test_output_al113; assert_in_delta(0.03390864027515885, worksheet.output_al113, 0.001); end
  def test_output_am113; assert_in_delta(0.05604534618564161, worksheet.output_am113, 0.001); end
  def test_output_an113; assert_in_epsilon(7.857327061427782, worksheet.output_an113, 0.001); end
  def test_output_ao113; assert_equal("", worksheet.output_ao113); end
  def test_output_c114; assert_equal("XII.c", worksheet.output_c114); end
  def test_output_d114; assert_equal("V.01", worksheet.output_d114); end
  def test_output_e114; assert_equal("International aviation", worksheet.output_e114); end
  def test_output_f114; assert_equal("TWh/yr", worksheet.output_f114); end
  def test_output_h114; assert_in_delta(0, (worksheet.output_h114||0), 0.001); end
  def test_output_m114; assert_in_delta(0, (worksheet.output_m114||0), 0.001); end
  def test_output_r114; assert_in_delta(0, (worksheet.output_r114||0), 0.001); end
  def test_output_w114; assert_in_delta(0, (worksheet.output_w114||0), 0.001); end
  def test_output_ab114; assert_in_delta(0, (worksheet.output_ab114||0), 0.001); end
  def test_output_ac114; assert_in_delta(0, (worksheet.output_ac114||0), 0.001); end
  def test_output_ad114; assert_in_delta(0, (worksheet.output_ad114||0), 0.001); end
  def test_output_ae114; assert_in_delta(0, (worksheet.output_ae114||0), 0.001); end
  def test_output_af114; assert_in_delta(0, (worksheet.output_af114||0), 0.001); end
  def test_output_ag114; assert_in_delta(0, (worksheet.output_ag114||0), 0.001); end
  def test_output_ah114; assert_in_delta(0, (worksheet.output_ah114||0), 0.001); end
  def test_output_ai114; assert_in_delta(0, (worksheet.output_ai114||0), 0.001); end
  def test_output_aj114; assert_in_delta(0, (worksheet.output_aj114||0), 0.001); end
  def test_output_ak114; assert_in_delta(0, (worksheet.output_ak114||0), 0.001); end
  def test_output_al114; assert_in_delta(0, (worksheet.output_al114||0), 0.001); end
  def test_output_am114; assert_equal("", worksheet.output_am114); end
  def test_output_an114; assert_equal("", worksheet.output_an114); end
  def test_output_ao114; assert_equal("", worksheet.output_ao114); end
  def test_output_c115; assert_equal("XII.d", worksheet.output_c115); end
  def test_output_d115; assert_equal("V.01", worksheet.output_d115); end
  def test_output_e115; assert_equal("Domestic aviation [UNUSED - see XII.a]", worksheet.output_e115); end
  def test_output_f115; assert_equal("TWh/yr", worksheet.output_f115); end
  def test_output_h115; assert_in_delta(0, (worksheet.output_h115||0), 0.001); end
  def test_output_m115; assert_in_delta(0, (worksheet.output_m115||0), 0.001); end
  def test_output_r115; assert_in_delta(0, (worksheet.output_r115||0), 0.001); end
  def test_output_w115; assert_in_delta(0, (worksheet.output_w115||0), 0.001); end
  def test_output_ab115; assert_in_delta(0, (worksheet.output_ab115||0), 0.001); end
  def test_output_ac115; assert_in_delta(0, (worksheet.output_ac115||0), 0.001); end
  def test_output_ad115; assert_in_delta(0, (worksheet.output_ad115||0), 0.001); end
  def test_output_ae115; assert_in_delta(0, (worksheet.output_ae115||0), 0.001); end
  def test_output_af115; assert_in_delta(0, (worksheet.output_af115||0), 0.001); end
  def test_output_ag115; assert_in_delta(0, (worksheet.output_ag115||0), 0.001); end
  def test_output_ah115; assert_in_delta(0, (worksheet.output_ah115||0), 0.001); end
  def test_output_ai115; assert_in_delta(0, (worksheet.output_ai115||0), 0.001); end
  def test_output_aj115; assert_in_delta(0, (worksheet.output_aj115||0), 0.001); end
  def test_output_ak115; assert_in_delta(0, (worksheet.output_ak115||0), 0.001); end
  def test_output_al115; assert_in_delta(0, (worksheet.output_al115||0), 0.001); end
  def test_output_am115; assert_equal("", worksheet.output_am115); end
  def test_output_an115; assert_equal("", worksheet.output_an115); end
  def test_output_ao115; assert_equal("", worksheet.output_ao115); end
  def test_output_c116; assert_equal("XII.e", worksheet.output_c116); end
  def test_output_d116; assert_equal("V.01", worksheet.output_d116); end
  def test_output_e116; assert_equal("International shipping [UNUSED]", worksheet.output_e116); end
  def test_output_f116; assert_equal("TWh/yr", worksheet.output_f116); end
  def test_output_h116; assert_in_delta(0, (worksheet.output_h116||0), 0.001); end
  def test_output_m116; assert_in_delta(0, (worksheet.output_m116||0), 0.001); end
  def test_output_r116; assert_in_delta(0, (worksheet.output_r116||0), 0.001); end
  def test_output_w116; assert_in_delta(0, (worksheet.output_w116||0), 0.001); end
  def test_output_ab116; assert_in_delta(0, (worksheet.output_ab116||0), 0.001); end
  def test_output_ac116; assert_in_delta(0, (worksheet.output_ac116||0), 0.001); end
  def test_output_ad116; assert_in_delta(0, (worksheet.output_ad116||0), 0.001); end
  def test_output_ae116; assert_in_delta(0, (worksheet.output_ae116||0), 0.001); end
  def test_output_af116; assert_in_delta(0, (worksheet.output_af116||0), 0.001); end
  def test_output_ag116; assert_in_delta(0, (worksheet.output_ag116||0), 0.001); end
  def test_output_ah116; assert_in_delta(0, (worksheet.output_ah116||0), 0.001); end
  def test_output_ai116; assert_in_delta(0, (worksheet.output_ai116||0), 0.001); end
  def test_output_aj116; assert_in_delta(0, (worksheet.output_aj116||0), 0.001); end
  def test_output_ak116; assert_in_delta(0, (worksheet.output_ak116||0), 0.001); end
  def test_output_al116; assert_in_delta(0, (worksheet.output_al116||0), 0.001); end
  def test_output_am116; assert_equal("", worksheet.output_am116); end
  def test_output_an116; assert_equal("", worksheet.output_an116); end
  def test_output_ao116; assert_equal("", worksheet.output_ao116); end
  def test_output_c117; assert_equal("XII.f", worksheet.output_c117); end
  def test_output_d117; assert_equal("V.01", worksheet.output_d117); end
  def test_output_e117; assert_equal("National navigation [UNUSED - see XII.a]", worksheet.output_e117); end
  def test_output_f117; assert_equal("TWh/yr", worksheet.output_f117); end
  def test_output_h117; assert_in_delta(0, (worksheet.output_h117||0), 0.001); end
  def test_output_m117; assert_in_delta(0, (worksheet.output_m117||0), 0.001); end
  def test_output_r117; assert_in_delta(0, (worksheet.output_r117||0), 0.001); end
  def test_output_w117; assert_in_delta(0, (worksheet.output_w117||0), 0.001); end
  def test_output_ab117; assert_in_delta(0, (worksheet.output_ab117||0), 0.001); end
  def test_output_ac117; assert_in_delta(0, (worksheet.output_ac117||0), 0.001); end
  def test_output_ad117; assert_in_delta(0, (worksheet.output_ad117||0), 0.001); end
  def test_output_ae117; assert_in_delta(0, (worksheet.output_ae117||0), 0.001); end
  def test_output_af117; assert_in_delta(0, (worksheet.output_af117||0), 0.001); end
  def test_output_ag117; assert_in_delta(0, (worksheet.output_ag117||0), 0.001); end
  def test_output_ah117; assert_in_delta(0, (worksheet.output_ah117||0), 0.001); end
  def test_output_ai117; assert_in_delta(0, (worksheet.output_ai117||0), 0.001); end
  def test_output_aj117; assert_in_delta(0, (worksheet.output_aj117||0), 0.001); end
  def test_output_ak117; assert_in_delta(0, (worksheet.output_ak117||0), 0.001); end
  def test_output_al117; assert_in_delta(0, (worksheet.output_al117||0), 0.001); end
  def test_output_am117; assert_equal("", worksheet.output_am117); end
  def test_output_an117; assert_equal("", worksheet.output_an117); end
  def test_output_ao117; assert_equal("", worksheet.output_ao117); end
  def test_output_c118; assert_equal("VIII.a", worksheet.output_c118); end
  def test_output_d118; assert_equal("V.01", worksheet.output_d118); end
  def test_output_e118; assert_equal("H2 Production for Transport", worksheet.output_e118); end
  def test_output_f118; assert_equal("TWh/yr", worksheet.output_f118); end
  def test_output_g118; assert_equal("IEA - Electricity demand - Pipeline", worksheet.output_g118); end
  def test_output_h118; assert_in_delta(0, (worksheet.output_h118||0), 0.001); end
  def test_output_m118; assert_in_delta(0.009, worksheet.output_m118, 0.001); end
  def test_output_r118; assert_in_delta(0.003, worksheet.output_r118, 0.001); end
  def test_output_w118; assert_in_delta(0.02, worksheet.output_w118, 0.001); end
  def test_output_ab118; assert_in_delta(0.072, worksheet.output_ab118, 0.001); end
  def test_output_ad118; assert_in_delta(0, (worksheet.output_ad118||0), 0.001); end
  def test_output_ae118; assert_in_delta(0.1094239422971906, worksheet.output_ae118, 0.001); end
  def test_output_af118; assert_in_delta(0.2530928338939615, worksheet.output_af118, 0.001); end
  def test_output_ag118; assert_in_delta(0.43747468879929374, worksheet.output_ag118, 0.001); end
  def test_output_ah118; assert_in_delta(0.662034623699569, worksheet.output_ah118, 0.001); end
  def test_output_ai118; assert_in_delta(0.9364986684951584, worksheet.output_ai118, 0.001); end
  def test_output_aj118; assert_in_epsilon(1.261560764868731, worksheet.output_aj118, 0.001); end
  def test_output_al118; assert_in_delta(0.02107201082190762, worksheet.output_al118, 0.001); end
  def test_output_am118; assert_equal("", worksheet.output_am118); end
  def test_output_an118; assert_equal("", worksheet.output_an118); end
  def test_output_ao118; assert_equal("", worksheet.output_ao118); end
  def test_output_c119; assert_equal("VI.a", worksheet.output_c119); end
  def test_output_d119; assert_equal("V.01", worksheet.output_d119); end
  def test_output_e119; assert_equal("Agriculture", worksheet.output_e119); end
  def test_output_f119; assert_equal("TWh/yr", worksheet.output_f119); end
  def test_output_ac119; assert_in_delta(0.5914174336555542, worksheet.output_ac119, 0.001); end
  def test_output_ad119; assert_in_delta(0.5798500002841273, worksheet.output_ad119, 0.001); end
  def test_output_ae119; assert_in_delta(0.5690741180120076, worksheet.output_ae119, 0.001); end
  def test_output_af119; assert_in_delta(0.5590356215699692, worksheet.output_af119, 0.001); end
  def test_output_ag119; assert_in_delta(0.549684052178984, worksheet.output_ag119, 0.001); end
  def test_output_ah119; assert_in_delta(0.5409724039177771, worksheet.output_ah119, 0.001); end
  def test_output_ai119; assert_in_delta(0.5328568874462697, worksheet.output_ai119, 0.001); end
  def test_output_aj119; assert_in_delta(0.5252967098972525, worksheet.output_aj119, 0.001); end
  def test_output_al119; assert_in_delta(0.006613463979744867, worksheet.output_al119, 0.001); end
  def test_output_am119; assert_in_delta(-0.0032959779798689137, worksheet.output_am119, 0.001); end
  def test_output_an119; assert_in_delta(-0.12370883856671888, worksheet.output_an119, 0.001); end
  def test_output_ao119; assert_equal("", worksheet.output_ao119); end
  def test_output_c120; assert_equal("XII", worksheet.output_c120); end
  def test_output_d120; assert_equal("V.01", worksheet.output_d120); end
  def test_output_e120; assert_equal("Transport", worksheet.output_e120); end
  def test_output_f120; assert_equal("TWh/yr", worksheet.output_f120); end
  def test_output_g120; assert_equal("IEA - Electricity demand - Total transport excluding aviation, navigation and H2 production", worksheet.output_g120); end
  def test_output_h120; assert_in_epsilon(1.249, worksheet.output_h120, 0.001); end
  def test_output_i120; assert_in_epsilon(1.276, worksheet.output_i120, 0.001); end
  def test_output_j120; assert_in_epsilon(1.305, worksheet.output_j120, 0.001); end
  def test_output_k120; assert_in_epsilon(1.36, worksheet.output_k120, 0.001); end
  def test_output_l120; assert_in_epsilon(1.384, worksheet.output_l120, 0.001); end
  def test_output_m120; assert_in_epsilon(1.464, worksheet.output_m120, 0.001); end
  def test_output_n120; assert_in_epsilon(1.278, worksheet.output_n120, 0.001); end
  def test_output_o120; assert_in_epsilon(1.264, worksheet.output_o120, 0.001); end
  def test_output_p120; assert_in_epsilon(1.369, worksheet.output_p120, 0.001); end
  def test_output_q120; assert_in_epsilon(1.404, worksheet.output_q120, 0.001); end
  def test_output_r120; assert_in_epsilon(1.4429999999999998, worksheet.output_r120, 0.001); end
  def test_output_s120; assert_in_epsilon(1.467, worksheet.output_s120, 0.001); end
  def test_output_t120; assert_in_epsilon(1.456, worksheet.output_t120, 0.001); end
  def test_output_u120; assert_in_epsilon(1.494, worksheet.output_u120, 0.001); end
  def test_output_v120; assert_in_epsilon(1.508, worksheet.output_v120, 0.001); end
  def test_output_w120; assert_in_epsilon(1.695, worksheet.output_w120, 0.001); end
  def test_output_x120; assert_in_epsilon(1.608, worksheet.output_x120, 0.001); end
  def test_output_y120; assert_in_epsilon(1.675, worksheet.output_y120, 0.001); end
  def test_output_z120; assert_in_epsilon(1.723, worksheet.output_z120, 0.001); end
  def test_output_aa120; assert_in_epsilon(1.762, worksheet.output_aa120, 0.001); end
  def test_output_ab120; assert_in_epsilon(1.736, worksheet.output_ab120, 0.001); end
  def test_output_ad120; assert_in_epsilon(2.037882720021198, worksheet.output_ad120, 0.001); end
  def test_output_ae120; assert_in_epsilon(4.259574920607255, worksheet.output_ae120, 0.001); end
  def test_output_af120; assert_in_epsilon(5.931243089345719, worksheet.output_af120, 0.001); end
  def test_output_ag120; assert_in_epsilon(7.12838362486766, worksheet.output_ag120, 0.001); end
  def test_output_ah120; assert_in_epsilon(7.849472132099703, worksheet.output_ah120, 0.001); end
  def test_output_ai120; assert_in_epsilon(8.774507806531274, worksheet.output_ai120, 0.001); end
  def test_output_aj120; assert_in_epsilon(9.522186640756118, worksheet.output_aj120, 0.001); end
  def test_output_al120; assert_in_delta(0.13060128057773043, worksheet.output_al120, 0.001); end
  def test_output_am120; assert_in_delta(0.042254834953080245, worksheet.output_am120, 0.001); end
  def test_output_an120; assert_in_epsilon(4.235482818481737, worksheet.output_an120, 0.001); end
  def test_output_ao120; assert_in_epsilon(7.194049027221521, worksheet.output_ao120, 0.001); end
  def test_output_c121; assert_equal("XIII.a", worksheet.output_c121); end
  def test_output_d121; assert_equal("V.01", worksheet.output_d121); end
  def test_output_e121; assert_equal("Food consumption [UNUSED]", worksheet.output_e121); end
  def test_output_f121; assert_equal("TWh/yr", worksheet.output_f121); end
  def test_output_g121; assert_equal("IEA - Electricity demand - Agriculture/Forestry", worksheet.output_g121); end
  def test_output_h121; assert_in_delta(0, (worksheet.output_h121||0), 0.001); end
  def test_output_m121; assert_in_delta(0, (worksheet.output_m121||0), 0.001); end
  def test_output_r121; assert_in_delta(0.257, worksheet.output_r121, 0.001); end
  def test_output_w121; assert_in_delta(0.374, worksheet.output_w121, 0.001); end
  def test_output_ab121; assert_in_delta(0.826, worksheet.output_ab121, 0.001); end
  def test_output_ac121; assert_in_delta(0, (worksheet.output_ac121||0), 0.001); end
  def test_output_ad121; assert_in_delta(0, (worksheet.output_ad121||0), 0.001); end
  def test_output_ae121; assert_in_delta(0, (worksheet.output_ae121||0), 0.001); end
  def test_output_af121; assert_in_delta(0, (worksheet.output_af121||0), 0.001); end
  def test_output_ag121; assert_in_delta(0, (worksheet.output_ag121||0), 0.001); end
  def test_output_ah121; assert_in_delta(0, (worksheet.output_ah121||0), 0.001); end
  def test_output_ai121; assert_in_delta(0, (worksheet.output_ai121||0), 0.001); end
  def test_output_aj121; assert_in_delta(0, (worksheet.output_aj121||0), 0.001); end
  def test_output_ak121; assert_in_delta(0, (worksheet.output_ak121||0), 0.001); end
  def test_output_al121; assert_in_delta(0, (worksheet.output_al121||0), 0.001); end
  def test_output_am121; assert_equal("", worksheet.output_am121); end
  def test_output_an121; assert_equal("", worksheet.output_an121); end
  def test_output_ao121; assert_equal("", worksheet.output_ao121); end
  def test_output_c122; assert_equal("XIII", worksheet.output_c122); end
  def test_output_d122; assert_equal("V.01", worksheet.output_d122); end
  def test_output_e122; assert_equal("Food consumption [UNUSED]", worksheet.output_e122); end
  def test_output_f122; assert_equal("TWh/yr", worksheet.output_f122); end
  def test_output_ac122; assert_in_delta(0, (worksheet.output_ac122||0), 0.001); end
  def test_output_ad122; assert_in_delta(0, (worksheet.output_ad122||0), 0.001); end
  def test_output_ae122; assert_in_delta(0, (worksheet.output_ae122||0), 0.001); end
  def test_output_af122; assert_in_delta(0, (worksheet.output_af122||0), 0.001); end
  def test_output_ag122; assert_in_delta(0, (worksheet.output_ag122||0), 0.001); end
  def test_output_ah122; assert_in_delta(0, (worksheet.output_ah122||0), 0.001); end
  def test_output_ai122; assert_in_delta(0, (worksheet.output_ai122||0), 0.001); end
  def test_output_aj122; assert_in_delta(0, (worksheet.output_aj122||0), 0.001); end
  def test_output_ak122; assert_in_delta(0, (worksheet.output_ak122||0), 0.001); end
  def test_output_al122; assert_in_delta(0, (worksheet.output_al122||0), 0.001); end
  def test_output_am122; assert_equal("", worksheet.output_am122); end
  def test_output_an122; assert_equal("", worksheet.output_an122); end
  def test_output_ao122; assert_equal("", worksheet.output_ao122); end
  def test_output_c123; assert_equal("XIV.a", worksheet.output_c123); end
  def test_output_d123; assert_equal("V.01", worksheet.output_d123); end
  def test_output_e123; assert_equal("Geosequestration [UNUSED]", worksheet.output_e123); end
  def test_output_f123; assert_equal("TWh/yr", worksheet.output_f123); end
  def test_output_ac123; assert_in_delta(0, (worksheet.output_ac123||0), 0.001); end
  def test_output_ad123; assert_in_delta(0, (worksheet.output_ad123||0), 0.001); end
  def test_output_ae123; assert_in_delta(0, (worksheet.output_ae123||0), 0.001); end
  def test_output_af123; assert_in_delta(0, (worksheet.output_af123||0), 0.001); end
  def test_output_ag123; assert_in_delta(0, (worksheet.output_ag123||0), 0.001); end
  def test_output_ah123; assert_in_delta(0, (worksheet.output_ah123||0), 0.001); end
  def test_output_ai123; assert_in_delta(0, (worksheet.output_ai123||0), 0.001); end
  def test_output_aj123; assert_in_delta(0, (worksheet.output_aj123||0), 0.001); end
  def test_output_ak123; assert_in_delta(0, (worksheet.output_ak123||0), 0.001); end
  def test_output_al123; assert_in_delta(0, (worksheet.output_al123||0), 0.001); end
  def test_output_am123; assert_equal("", worksheet.output_am123); end
  def test_output_an123; assert_equal("", worksheet.output_an123); end
  def test_output_ao123; assert_equal("", worksheet.output_ao123); end
  def test_output_c124; assert_equal("XIV", worksheet.output_c124); end
  def test_output_d124; assert_equal("V.01", worksheet.output_d124); end
  def test_output_e124; assert_equal("Geosequestration", worksheet.output_e124); end
  def test_output_f124; assert_equal("TWh/yr", worksheet.output_f124); end
  def test_output_ad124; assert_in_delta(0, (worksheet.output_ad124||0), 0.001); end
  def test_output_ae124; assert_in_delta(0, (worksheet.output_ae124||0), 0.001); end
  def test_output_af124; assert_in_delta(0, (worksheet.output_af124||0), 0.001); end
  def test_output_ag124; assert_in_delta(0, (worksheet.output_ag124||0), 0.001); end
  def test_output_ah124; assert_in_delta(0, (worksheet.output_ah124||0), 0.001); end
  def test_output_ai124; assert_in_delta(0, (worksheet.output_ai124||0), 0.001); end
  def test_output_aj124; assert_in_delta(0, (worksheet.output_aj124||0), 0.001); end
  def test_output_al124; assert_in_delta(0, (worksheet.output_al124||0), 0.001); end
  def test_output_am124; assert_equal("", worksheet.output_am124); end
  def test_output_an124; assert_equal("", worksheet.output_an124); end
  def test_output_ao124; assert_equal("", worksheet.output_ao124); end
  def test_output_c125; assert_equal("VII.b", worksheet.output_c125); end
  def test_output_d125; assert_equal("V.02", worksheet.output_d125); end
  def test_output_e125; assert_equal("Electricity losses", worksheet.output_e125); end
  def test_output_f125; assert_equal("TWh/yr", worksheet.output_f125); end
  def test_output_ad125; assert_in_epsilon(4.709223125863488, worksheet.output_ad125, 0.001); end
  def test_output_ae125; assert_in_epsilon(4.959155525004022, worksheet.output_ae125, 0.001); end
  def test_output_af125; assert_in_epsilon(5.002601142397836, worksheet.output_af125, 0.001); end
  def test_output_ag125; assert_in_epsilon(4.983590992080963, worksheet.output_ag125, 0.001); end
  def test_output_ah125; assert_in_epsilon(4.889711361472791, worksheet.output_ah125, 0.001); end
  def test_output_ai125; assert_in_epsilon(4.7889294425848306, worksheet.output_ai125, 0.001); end
  def test_output_aj125; assert_in_epsilon(4.647225289243181, worksheet.output_aj125, 0.001); end
  def test_output_am125; assert_in_delta(-0.0006085759989393758, worksheet.output_am125, 0.001); end
  def test_output_an125; assert_in_delta(-0.02405636987762738, worksheet.output_an125, 0.001); end
  def test_output_ao125; assert_equal("", worksheet.output_ao125); end
  def test_output_e126; assert_equal("Total consumption", worksheet.output_e126); end
  def test_output_f126; assert_equal("TWh/yr", worksheet.output_f126); end
  def test_output_g126; assert_equal("IEA - ELET34 - Consommation totale observée", worksheet.output_g126); end
  def test_output_h126; assert_in_epsilon(59.108000000000004, worksheet.output_h126, 0.001); end
  def test_output_i126; assert_in_epsilon(61.783, worksheet.output_i126, 0.001); end
  def test_output_j126; assert_in_epsilon(63.871, worksheet.output_j126, 0.001); end
  def test_output_k126; assert_in_epsilon(64.644, worksheet.output_k126, 0.001); end
  def test_output_l126; assert_in_epsilon(67.822, worksheet.output_l126, 0.001); end
  def test_output_m126; assert_in_epsilon(69.829, worksheet.output_m126, 0.001); end
  def test_output_n126; assert_in_epsilon(71.405, worksheet.output_n126, 0.001); end
  def test_output_o126; assert_in_epsilon(73.321, worksheet.output_o126, 0.001); end
  def test_output_p126; assert_in_epsilon(75.527, worksheet.output_p126, 0.001); end
  def test_output_q126; assert_in_epsilon(76.05, worksheet.output_q126, 0.001); end
  def test_output_r126; assert_in_epsilon(79.166, worksheet.output_r126, 0.001); end
  def test_output_s126; assert_in_epsilon(79.816, worksheet.output_s126, 0.001); end
  def test_output_t126; assert_in_epsilon(80.438, worksheet.output_t126, 0.001); end
  def test_output_u126; assert_in_epsilon(82.065, worksheet.output_u126, 0.001); end
  def test_output_v126; assert_in_epsilon(83.76, worksheet.output_v126, 0.001); end
  def test_output_w126; assert_in_epsilon(83.63600000000001, worksheet.output_w126, 0.001); end
  def test_output_x126; assert_in_epsilon(86.055, worksheet.output_x126, 0.001); end
  def test_output_y126; assert_in_epsilon(86.084, worksheet.output_y126, 0.001); end
  def test_output_z126; assert_in_epsilon(85.822, worksheet.output_z126, 0.001); end
  def test_output_aa126; assert_in_epsilon(79.662, worksheet.output_aa126, 0.001); end
  def test_output_ab126; assert_in_epsilon(85.91799999999999, worksheet.output_ab126, 0.001); end
  def test_output_ad126; assert_in_epsilon(79.84818987361264, worksheet.output_ad126, 0.001); end
  def test_output_ae126; assert_in_epsilon(83.75463776374887, worksheet.output_ae126, 0.001); end
  def test_output_af126; assert_in_epsilon(84.76439218440949, worksheet.output_af126, 0.001); end
  def test_output_ag126; assert_in_epsilon(84.82905625912161, worksheet.output_ag126, 0.001); end
  def test_output_ah126; assert_in_epsilon(83.65639738241687, worksheet.output_ah126, 0.001); end
  def test_output_ai126; assert_in_epsilon(82.43092829522658, worksheet.output_ai126, 0.001); end
  def test_output_aj126; assert_in_epsilon(80.6603769394497, worksheet.output_aj126, 0.001); end
  def test_output_al126; assert_in_delta(1, worksheet.output_al126, 0.001); end
  def test_output_am126; assert_in_delta(-8.818287463607799e-05, worksheet.output_am126, 0.001); end
  def test_output_an126; assert_in_delta(-0.0035212563038090616, worksheet.output_an126, 0.001); end
  def test_output_ao126; assert_in_delta(0.32576728037109914, worksheet.output_ao126, 0.001); end
  def test_output_aq126; assert_in_epsilon(62.84231946961448, worksheet.output_aq126, 0.001); end
  def test_output_b127; assert_equal("REF", worksheet.output_b127); end
  def test_output_e127; assert_equal("Reference scenario", worksheet.output_e127); end
  def test_output_f127; assert_equal("TWh/yr", worksheet.output_f127); end
  def test_output_g127; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g127); end
  def test_output_ac127; assert_in_epsilon(86.41144920235298, worksheet.output_ac127, 0.001); end
  def test_output_ad127; assert_in_epsilon(90.84444349677565, worksheet.output_ad127, 0.001); end
  def test_output_ae127; assert_in_epsilon(97.17267127504138, worksheet.output_ae127, 0.001); end
  def test_output_af127; assert_in_epsilon(102.96413619106767, worksheet.output_af127, 0.001); end
  def test_output_ag127; assert_in_epsilon(108.77025799002102, worksheet.output_ag127, 0.001); end
  def test_output_ah127; assert_in_epsilon(114.60924701733546, worksheet.output_ah127, 0.001); end
  def test_output_ai127; assert_in_epsilon(120.85059253546466, worksheet.output_ai127, 0.001); end
  def test_output_aj127; assert_in_epsilon(127.41509247448818, worksheet.output_aj127, 0.001); end
  def test_output_ak127; assert_in_epsilon(134.32104286496013, worksheet.output_ak127, 0.001); end
  def test_output_al127; assert_in_epsilon(1.7140776565753713, worksheet.output_al127, 0.001); end
  def test_output_am127; assert_in_delta(0.011088845384315649, worksheet.output_am127, 0.001); end
  def test_output_an127; assert_in_delta(0.5544357154619108, worksheet.output_an127, 0.001); end
  def test_output_ao127; assert_equal("", worksheet.output_ao127); end
  def test_output_e128; assert_equal("Domestic electricity demand", worksheet.output_e128); end
  def test_output_f128; assert_equal("TWh/yr", worksheet.output_f128); end
  def test_output_h128; assert_in_delta(0, (worksheet.output_h128||0), 0.001); end
  def test_output_m128; assert_in_delta(0, (worksheet.output_m128||0), 0.001); end
  def test_output_r128; assert_in_delta(0, (worksheet.output_r128||0), 0.001); end
  def test_output_w128; assert_in_delta(0, (worksheet.output_w128||0), 0.001); end
  def test_output_ab128; assert_in_delta(0, (worksheet.output_ab128||0), 0.001); end
  def test_output_ac95; assert_in_epsilon(12.912142832, worksheet.output_ac95, 0.001); end
  def test_output_ac89; assert_in_epsilon(4.816689403032683, worksheet.output_ac89, 0.001); end
  def test_output_ac112; assert_in_epsilon(1.0633912420355247, worksheet.output_ac112, 0.001); end
  def test_output_ac128; assert_in_epsilon(18.79222347706821, worksheet.output_ac128, 0.001); end
  def test_output_ad89; assert_in_epsilon(6.745875202325503, worksheet.output_ad89, 0.001); end
  def test_output_ad112; assert_in_epsilon(1.1409206404101477, worksheet.output_ad112, 0.001); end
  def test_output_ad128; assert_in_epsilon(21.31426222278373, worksheet.output_ad128, 0.001); end
  def test_output_ae89; assert_in_epsilon(7.923977357335781, worksheet.output_ae89, 0.001); end
  def test_output_ae112; assert_in_epsilon(2.7977518420272096, worksheet.output_ae112, 0.001); end
  def test_output_ae128; assert_in_epsilon(25.465663931363395, worksheet.output_ae128, 0.001); end
  def test_output_af89; assert_in_epsilon(8.239901529727716, worksheet.output_af89, 0.001); end
  def test_output_af112; assert_in_epsilon(3.9145369389962994, worksheet.output_af112, 0.001); end
  def test_output_af128; assert_in_epsilon(27.28866747646985, worksheet.output_af128, 0.001); end
  def test_output_ag89; assert_in_epsilon(8.21943176527179, worksheet.output_ag89, 0.001); end
  def test_output_ag112; assert_in_epsilon(4.559880958120906, worksheet.output_ag112, 0.001); end
  def test_output_ag128; assert_in_epsilon(28.28556430015178, worksheet.output_ag128, 0.001); end
  def test_output_ah89; assert_in_epsilon(8.284247145805393, worksheet.output_ah89, 0.001); end
  def test_output_ah112; assert_in_epsilon(4.732248222836575, worksheet.output_ah112, 0.001); end
  def test_output_ah128; assert_in_epsilon(28.66527123892552, worksheet.output_ah128, 0.001); end
  def test_output_ai89; assert_in_epsilon(8.09404426358586, worksheet.output_ai89, 0.001); end
  def test_output_ai112; assert_in_epsilon(5.1012431632181325, worksheet.output_ai112, 0.001); end
  def test_output_ai128; assert_in_epsilon(28.968258354815756, worksheet.output_ai128, 0.001); end
  def test_output_aj89; assert_in_epsilon(7.643582091434452, worksheet.output_aj89, 0.001); end
  def test_output_aj112; assert_in_epsilon(5.28407674406123, worksheet.output_aj112, 0.001); end
  def test_output_aj128; assert_in_epsilon(28.701565389757715, worksheet.output_aj128, 0.001); end
  def test_output_ak128; assert_in_epsilon(28.129670895496417, worksheet.output_ak128, 0.001); end
  def test_output_al128; assert_in_delta(0.35896416034577244, worksheet.output_al128, 0.001); end
  def test_output_am128; assert_in_delta(0.010135564971218258, worksheet.output_am128, 0.001); end
  def test_output_an128; assert_in_delta(0.49687826615208763, worksheet.output_an128, 0.001); end
  def test_output_ao128; assert_equal("", worksheet.output_ao128); end
  def test_output_b129; assert_equal("Electricity Generation", worksheet.output_b129); end
  def test_output_am129; assert_equal("", worksheet.output_am129); end
  def test_output_an129; assert_equal("", worksheet.output_an129); end
  def test_output_ao129; assert_equal("", worksheet.output_ao129); end
  def test_output_c130; assert_equal("I.a", worksheet.output_c130); end
  def test_output_d130; assert_equal("V.02", worksheet.output_d130); end
  def test_output_e130; assert_equal("Coal+Gas+Oil power stations", worksheet.output_e130); end
  def test_output_f130; assert_equal("TWh/yr", worksheet.output_f130); end
  def test_output_g130; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g130); end
  def test_output_h130; assert_in_epsilon(27.297, worksheet.output_h130, 0.001); end
  def test_output_i130; assert_in_epsilon(28.088, worksheet.output_i130, 0.001); end
  def test_output_j130; assert_in_epsilon(27.604, worksheet.output_j130, 0.001); end
  def test_output_k130; assert_in_epsilon(27.879, worksheet.output_k130, 0.001); end
  def test_output_l130; assert_in_epsilon(30.362, worksheet.output_l130, 0.001); end
  def test_output_m130; assert_in_epsilon(31.813, worksheet.output_m130, 0.001); end
  def test_output_n130; assert_in_epsilon(31.555, worksheet.output_n130, 0.001); end
  def test_output_o130; assert_in_epsilon(30.14, worksheet.output_o130, 0.001); end
  def test_output_p130; assert_in_epsilon(35.51, worksheet.output_p130, 0.001); end
  def test_output_q130; assert_in_epsilon(33.995, worksheet.output_q130, 0.001); end
  def test_output_r130; assert_in_epsilon(34.14, worksheet.output_r130, 0.001); end
  def test_output_s130; assert_in_epsilon(31.791, worksheet.output_s130, 0.001); end
  def test_output_t130; assert_in_epsilon(33.162, worksheet.output_t130, 0.001); end
  def test_output_u130; assert_in_epsilon(35.847, worksheet.output_u130, 0.001); end
  def test_output_v130; assert_in_epsilon(36.581, worksheet.output_v130, 0.001); end
  def test_output_w130; assert_in_epsilon(37.332, worksheet.output_w130, 0.001); end
  def test_output_x130; assert_in_epsilon(36.72, worksheet.output_x130, 0.001); end
  def test_output_y130; assert_in_epsilon(38.167, worksheet.output_y130, 0.001); end
  def test_output_z130; assert_in_epsilon(36.68, worksheet.output_z130, 0.001); end
  def test_output_aa130; assert_in_epsilon(40.999, worksheet.output_aa130, 0.001); end
  def test_output_ab130; assert_in_epsilon(43.401, worksheet.output_ab130, 0.001); end
  def test_output_ad130; assert_in_epsilon(6.3043150684931515, worksheet.output_ad130, 0.001); end
  def test_output_ae130; assert_in_epsilon(6.3043150684931515, worksheet.output_ae130, 0.001); end
  def test_output_af130; assert_in_delta(0, (worksheet.output_af130||0), 0.001); end
  def test_output_ag130; assert_in_delta(0, (worksheet.output_ag130||0), 0.001); end
  def test_output_ah130; assert_in_delta(0, (worksheet.output_ah130||0), 0.001); end
  def test_output_ai130; assert_in_delta(0, (worksheet.output_ai130||0), 0.001); end
  def test_output_aj130; assert_in_delta(0, (worksheet.output_aj130||0), 0.001); end
  def test_output_am130; assert_in_delta(-1, worksheet.output_am130, 0.001); end
  def test_output_an130; assert_in_delta(-1, worksheet.output_an130, 0.001); end
  def test_output_ao130; assert_in_delta(-1, worksheet.output_ao130, 0.001); end
  def test_output_c131; assert_equal("I.a", worksheet.output_c131); end
  def test_output_e131; assert_equal("Biomass power stations", worksheet.output_e131); end
  def test_output_f131; assert_equal("TWh/yr", worksheet.output_f131); end
  def test_output_h131; assert_equal("above", worksheet.output_h131); end
  def test_output_i131; assert_equal("above", worksheet.output_i131); end
  def test_output_j131; assert_equal("above", worksheet.output_j131); end
  def test_output_k131; assert_equal("above", worksheet.output_k131); end
  def test_output_l131; assert_equal("above", worksheet.output_l131); end
  def test_output_m131; assert_equal("above", worksheet.output_m131); end
  def test_output_n131; assert_equal("above", worksheet.output_n131); end
  def test_output_o131; assert_equal("above", worksheet.output_o131); end
  def test_output_p131; assert_equal("above", worksheet.output_p131); end
  def test_output_q131; assert_equal("above", worksheet.output_q131); end
  def test_output_r131; assert_equal("above", worksheet.output_r131); end
  def test_output_s131; assert_equal("above", worksheet.output_s131); end
  def test_output_t131; assert_equal("above", worksheet.output_t131); end
  def test_output_u131; assert_equal("above", worksheet.output_u131); end
  def test_output_v131; assert_equal("above", worksheet.output_v131); end
  def test_output_w131; assert_equal("above", worksheet.output_w131); end
  def test_output_x131; assert_equal("above", worksheet.output_x131); end
  def test_output_y131; assert_equal("above", worksheet.output_y131); end
  def test_output_z131; assert_equal("above", worksheet.output_z131); end
  def test_output_aa131; assert_equal("above", worksheet.output_aa131); end
  def test_output_ab131; assert_equal("above", worksheet.output_ab131); end
  def test_output_ac131; assert_in_epsilon(3.7612484236568107, worksheet.output_ac131, 0.001); end
  def test_output_ad131; assert_in_epsilon(5.151015150071418, worksheet.output_ad131, 0.001); end
  def test_output_ae131; assert_in_epsilon(6.763383663898049, worksheet.output_ae131, 0.001); end
  def test_output_af131; assert_in_epsilon(9.298256658264933, worksheet.output_af131, 0.001); end
  def test_output_ag131; assert_in_epsilon(12.034112594827535, worksheet.output_ag131, 0.001); end
  def test_output_ah131; assert_in_epsilon(13.663321483271472, worksheet.output_ah131, 0.001); end
  def test_output_ai131; assert_in_epsilon(15.285211280281526, worksheet.output_ai131, 0.001); end
  def test_output_aj131; assert_in_epsilon(16.896122440140765, worksheet.output_aj131, 0.001); end
  def test_output_ak131; assert_in_epsilon(18.5070336, worksheet.output_ak131, 0.001); end
  def test_output_am131; assert_in_delta(0.040639052619312555, worksheet.output_am131, 0.001); end
  def test_output_an131; assert_in_epsilon(3.920449679313351, worksheet.output_an131, 0.001); end
  def test_output_ao131; assert_equal("", worksheet.output_ao131); end
  def test_output_aq131; assert_equal("CHART", worksheet.output_aq131); end
  def test_output_c132; assert_equal("IX.a", worksheet.output_c132); end
  def test_output_d132; assert_equal("V.02", worksheet.output_d132); end
  def test_output_e132; assert_equal("Domestic space heating and hot water", worksheet.output_e132); end
  def test_output_f132; assert_equal("TWh/yr", worksheet.output_f132); end
  def test_output_h132; assert_in_delta(0, (worksheet.output_h132||0), 0.001); end
  def test_output_i132; assert_in_delta(0, (worksheet.output_i132||0), 0.001); end
  def test_output_j132; assert_in_delta(0, (worksheet.output_j132||0), 0.001); end
  def test_output_k132; assert_in_delta(0, (worksheet.output_k132||0), 0.001); end
  def test_output_l132; assert_in_delta(0, (worksheet.output_l132||0), 0.001); end
  def test_output_m132; assert_in_delta(0, (worksheet.output_m132||0), 0.001); end
  def test_output_n132; assert_in_delta(0, (worksheet.output_n132||0), 0.001); end
  def test_output_o132; assert_in_delta(0, (worksheet.output_o132||0), 0.001); end
  def test_output_p132; assert_in_delta(0, (worksheet.output_p132||0), 0.001); end
  def test_output_q132; assert_in_delta(0, (worksheet.output_q132||0), 0.001); end
  def test_output_r132; assert_in_delta(0, (worksheet.output_r132||0), 0.001); end
  def test_output_s132; assert_in_delta(0, (worksheet.output_s132||0), 0.001); end
  def test_output_t132; assert_in_delta(0, (worksheet.output_t132||0), 0.001); end
  def test_output_u132; assert_in_delta(0, (worksheet.output_u132||0), 0.001); end
  def test_output_v132; assert_in_delta(0, (worksheet.output_v132||0), 0.001); end
  def test_output_w132; assert_in_delta(0.266, worksheet.output_w132, 0.001); end
  def test_output_x132; assert_in_delta(0.256, worksheet.output_x132, 0.001); end
  def test_output_y132; assert_in_delta(0.246, worksheet.output_y132, 0.001); end
  def test_output_z132; assert_in_delta(0.244, worksheet.output_z132, 0.001); end
  def test_output_aa132; assert_in_delta(0.083, worksheet.output_aa132, 0.001); end
  def test_output_ab132; assert_in_delta(0.255, worksheet.output_ab132, 0.001); end
  def test_output_ac132; assert_in_delta(0, (worksheet.output_ac132||0), 0.001); end
  def test_output_ad132; assert_in_delta(0.17429681551268142, worksheet.output_ad132, 0.001); end
  def test_output_ae132; assert_in_delta(0.3219045615213166, worksheet.output_ae132, 0.001); end
  def test_output_af132; assert_in_delta(0.42384932748594234, worksheet.output_af132, 0.001); end
  def test_output_ag132; assert_in_delta(0.49303014497197023, worksheet.output_ag132, 0.001); end
  def test_output_ah132; assert_in_delta(0.5395077744382489, worksheet.output_ah132, 0.001); end
  def test_output_ai132; assert_in_delta(0.5588184439772026, worksheet.output_ai132, 0.001); end
  def test_output_aj132; assert_in_delta(0.5510708446761581, worksheet.output_aj132, 0.001); end
  def test_output_ak132; assert_in_delta(0.5191325895426346, worksheet.output_ak132, 0.001); end
  def test_output_am132; assert_equal("", worksheet.output_am132); end
  def test_output_an132; assert_equal("", worksheet.output_an132); end
  def test_output_ao132; assert_equal("", worksheet.output_ao132); end
  def test_output_aq132; assert_equal("Imports of decarbonized electricity", worksheet.output_aq132); end
  def test_output_ar132; assert_in_epsilon(16.8, worksheet.output_ar132, 0.001); end
  def test_output_c133; assert_equal("IX.c", worksheet.output_c133); end
  def test_output_d133; assert_equal("V.02", worksheet.output_d133); end
  def test_output_e133; assert_equal("Commercial heating and cooling", worksheet.output_e133); end
  def test_output_f133; assert_equal("TWh/yr", worksheet.output_f133); end
  def test_output_h133; assert_in_delta(0, (worksheet.output_h133||0), 0.001); end
  def test_output_m133; assert_in_delta(0, (worksheet.output_m133||0), 0.001); end
  def test_output_r133; assert_in_delta(0, (worksheet.output_r133||0), 0.001); end
  def test_output_w133; assert_in_delta(0, (worksheet.output_w133||0), 0.001); end
  def test_output_ab133; assert_in_delta(0, (worksheet.output_ab133||0), 0.001); end
  def test_output_ac133; assert_in_delta(0, (worksheet.output_ac133||0), 0.001); end
  def test_output_ad133; assert_in_delta(0, (worksheet.output_ad133||0), 0.001); end
  def test_output_ae133; assert_in_delta(0.04660787704349344, worksheet.output_ae133, 0.001); end
  def test_output_af133; assert_in_delta(0.07822224803279638, worksheet.output_af133, 0.001); end
  def test_output_ag133; assert_in_delta(0.0976635622478918, worksheet.output_ag133, 0.001); end
  def test_output_ah133; assert_in_delta(0.10567956729868155, worksheet.output_ah133, 0.001); end
  def test_output_ai133; assert_in_delta(0.10432854484878872, worksheet.output_ai133, 0.001); end
  def test_output_aj133; assert_in_delta(0.09462924352589439, worksheet.output_aj133, 0.001); end
  def test_output_ak133; assert_in_delta(0.08891270824391925, worksheet.output_ak133, 0.001); end
  def test_output_am133; assert_equal("", worksheet.output_am133); end
  def test_output_an133; assert_equal("", worksheet.output_an133); end
  def test_output_ao133; assert_equal("", worksheet.output_ao133); end
  def test_output_aq133; assert_equal("Solar PV", worksheet.output_aq133); end
  def test_output_ar133; assert_in_epsilon(44.04647600000002, worksheet.output_ar133, 0.001); end
  def test_output_c134; assert_equal("XVII.a", worksheet.output_c134); end
  def test_output_d134; assert_equal("V.02", worksheet.output_d134); end
  def test_output_e134; assert_equal("District heating effective demand", worksheet.output_e134); end
  def test_output_f134; assert_equal("TWh/yr", worksheet.output_f134); end
  def test_output_ac134; assert_in_epsilon(-2.034091050307794, worksheet.output_ac134, 0.001); end
  def test_output_ad134; assert_in_epsilon(-1.8683782951659504, worksheet.output_ad134, 0.001); end
  def test_output_ae134; assert_in_epsilon(-1.302509819697695, worksheet.output_ae134, 0.001); end
  def test_output_af134; assert_in_epsilon(-1.0772825244767286, worksheet.output_af134, 0.001); end
  def test_output_ag134; assert_in_delta(-0.8872337229210652, worksheet.output_ag134, 0.001); end
  def test_output_ah134; assert_in_delta(-0.7009213533215346, worksheet.output_ah134, 0.001); end
  def test_output_ai134; assert_in_delta(-0.561242622772758, worksheet.output_ai134, 0.001); end
  def test_output_aj134; assert_in_delta(-0.44887853936125716, worksheet.output_aj134, 0.001); end
  def test_output_ak134; assert_in_delta(-0.35929559315784176, worksheet.output_ak134, 0.001); end
  def test_output_am134; assert_in_delta(-0.0424156547471819, worksheet.output_am134, 0.001); end
  def test_output_an134; assert_in_delta(-0.8233630726100123, worksheet.output_an134, 0.001); end
  def test_output_ao134; assert_equal("", worksheet.output_ao134); end
  def test_output_aq134; assert_equal("Wind on/offshore", worksheet.output_aq134); end
  def test_output_ar134; assert_in_epsilon(96.21966333632473, worksheet.output_ar134, 0.001); end
  def test_output_e135; assert_equal("Residential CHP", worksheet.output_e135); end
  def test_output_f135; assert_equal("TWh/yr", worksheet.output_f135); end
  def test_output_h135; assert_in_delta(0, (worksheet.output_h135||0), 0.001); end
  def test_output_m135; assert_in_delta(0, (worksheet.output_m135||0), 0.001); end
  def test_output_r135; assert_in_delta(0, (worksheet.output_r135||0), 0.001); end
  def test_output_w135; assert_in_delta(0, (worksheet.output_w135||0), 0.001); end
  def test_output_ab135; assert_in_delta(0, (worksheet.output_ab135||0), 0.001); end
  def test_output_ad135; assert_in_epsilon(-1.694081479653269, worksheet.output_ad135, 0.001); end
  def test_output_ae135; assert_in_delta(-0.933997381132885, worksheet.output_ae135, 0.001); end
  def test_output_af135; assert_in_delta(-0.5752109489579899, worksheet.output_af135, 0.001); end
  def test_output_ag135; assert_in_delta(-0.29654001570120314, worksheet.output_ag135, 0.001); end
  def test_output_ah135; assert_in_delta(-0.055734011584604115, worksheet.output_ah135, 0.001); end
  def test_output_ai135; assert_in_delta(0.10190436605323328, worksheet.output_ai135, 0.001); end
  def test_output_aj135; assert_in_delta(0.19682154884079534, worksheet.output_aj135, 0.001); end
  def test_output_am135; assert_equal("", worksheet.output_am135); end
  def test_output_an135; assert_in_epsilon(-1.1222903490928156, worksheet.output_an135, 0.001); end
  def test_output_ao135; assert_equal("", worksheet.output_ao135); end
  def test_output_aq135; assert_equal("Geothermal and hydro electricity", worksheet.output_aq135); end
  def test_output_ar135; assert_in_epsilon(49.3010447260274, worksheet.output_ar135, 0.001); end
  def test_output_c136; assert_equal("I.b", worksheet.output_c136); end
  def test_output_e136; assert_equal("Carbon Capture Storage (CCS)", worksheet.output_e136); end
  def test_output_f136; assert_equal("TWh/yr", worksheet.output_f136); end
  def test_output_h136; assert_in_delta(0, (worksheet.output_h136||0), 0.001); end
  def test_output_m136; assert_in_delta(0, (worksheet.output_m136||0), 0.001); end
  def test_output_r136; assert_in_delta(0, (worksheet.output_r136||0), 0.001); end
  def test_output_w136; assert_in_delta(0, (worksheet.output_w136||0), 0.001); end
  def test_output_ab136; assert_in_delta(0, (worksheet.output_ab136||0), 0.001); end
  def test_output_ac136; assert_in_delta(0, (worksheet.output_ac136||0), 0.001); end
  def test_output_ad136; assert_in_delta(0, (worksheet.output_ad136||0), 0.001); end
  def test_output_ae136; assert_in_delta(0, (worksheet.output_ae136||0), 0.001); end
  def test_output_af136; assert_in_epsilon(4.970602191780821, worksheet.output_af136, 0.001); end
  def test_output_ag136; assert_in_epsilon(9.997242739726026, worksheet.output_ag136, 0.001); end
  def test_output_ah136; assert_in_epsilon(15.012675616438358, worksheet.output_ah136, 0.001); end
  def test_output_ai136; assert_in_epsilon(20.039316164383557, worksheet.output_ai136, 0.001); end
  def test_output_aj136; assert_in_epsilon(25.077164383561644, worksheet.output_aj136, 0.001); end
  def test_output_ak136; assert_in_epsilon(30.26071232876712, worksheet.output_ak136, 0.001); end
  def test_output_am136; assert_equal("", worksheet.output_am136); end
  def test_output_an136; assert_equal("", worksheet.output_an136); end
  def test_output_ao136; assert_equal("", worksheet.output_ao136); end
  def test_output_aq136; assert_equal("Industrial and residential CHP", worksheet.output_aq136); end
  def test_output_ar136; assert_in_epsilon(11.245779937911012, worksheet.output_ar136, 0.001); end
  def test_output_c137; assert_equal("II.a", worksheet.output_c137); end
  def test_output_e137; assert_equal("Nuclear power", worksheet.output_e137); end
  def test_output_f137; assert_equal("TWh/yr", worksheet.output_f137); end
  def test_output_g137; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g137); end
  def test_output_h137; assert_in_epsilon(42.722, worksheet.output_h137, 0.001); end
  def test_output_i137; assert_in_epsilon(42.861, worksheet.output_i137, 0.001); end
  def test_output_j137; assert_in_epsilon(43.456, worksheet.output_j137, 0.001); end
  def test_output_k137; assert_in_epsilon(41.927, worksheet.output_k137, 0.001); end
  def test_output_l137; assert_in_epsilon(40.624, worksheet.output_l137, 0.001); end
  def test_output_m137; assert_in_epsilon(41.356, worksheet.output_m137, 0.001); end
  def test_output_n137; assert_in_epsilon(43.336, worksheet.output_n137, 0.001); end
  def test_output_o137; assert_in_epsilon(47.408, worksheet.output_o137, 0.001); end
  def test_output_p137; assert_in_epsilon(46.165, worksheet.output_p137, 0.001); end
  def test_output_q137; assert_in_epsilon(49.017, worksheet.output_q137, 0.001); end
  def test_output_r137; assert_in_epsilon(48.157, worksheet.output_r137, 0.001); end
  def test_output_s137; assert_in_epsilon(46.349, worksheet.output_s137, 0.001); end
  def test_output_t137; assert_in_epsilon(47.36, worksheet.output_t137, 0.001); end
  def test_output_u137; assert_in_epsilon(47.379, worksheet.output_u137, 0.001); end
  def test_output_v137; assert_in_epsilon(47.312, worksheet.output_v137, 0.001); end
  def test_output_w137; assert_in_epsilon(47.595, worksheet.output_w137, 0.001); end
  def test_output_x137; assert_in_epsilon(46.645, worksheet.output_x137, 0.001); end
  def test_output_y137; assert_in_epsilon(48.227, worksheet.output_y137, 0.001); end
  def test_output_z137; assert_in_epsilon(45.568, worksheet.output_z137, 0.001); end
  def test_output_aa137; assert_in_epsilon(47.222, worksheet.output_aa137, 0.001); end
  def test_output_ab137; assert_in_epsilon(47.944, worksheet.output_ab137, 0.001); end
  def test_output_ac137; assert_in_epsilon(47.89199784599999, worksheet.output_ac137, 0.001); end
  def test_output_ad137; assert_in_epsilon(47.89199784599999, worksheet.output_ad137, 0.001); end
  def test_output_ae137; assert_in_epsilon(47.89199784599999, worksheet.output_ae137, 0.001); end
  def test_output_af137; assert_in_epsilon(56.11450584599999, worksheet.output_af137, 0.001); end
  def test_output_ag137; assert_in_epsilon(64.337013846, worksheet.output_ag137, 0.001); end
  def test_output_ah137; assert_in_epsilon(57.861788796, worksheet.output_ah137, 0.001); end
  def test_output_ai137; assert_in_epsilon(66.08429679599999, worksheet.output_ai137, 0.001); end
  def test_output_aj137; assert_in_epsilon(41.112539999999996, worksheet.output_aj137, 0.001); end
  def test_output_ak137; assert_in_epsilon(49.335048, worksheet.output_ak137, 0.001); end
  def test_output_am137; assert_in_delta(0.000742433226471384, worksheet.output_am137, 0.001); end
  def test_output_an137; assert_in_delta(0.030131341746072904, worksheet.output_an137, 0.001); end
  def test_output_ao137; assert_in_delta(0.15479256589111, worksheet.output_ao137, 0.001); end
  def test_output_aq137; assert_equal("Biomass power stations", worksheet.output_aq137); end
  def test_output_ar137; assert_in_epsilon(18.5070336, worksheet.output_ar137, 0.001); end
  def test_output_c138; assert_equal("III.a.1", worksheet.output_c138); end
  def test_output_e138; assert_equal("Onshore wind", worksheet.output_e138); end
  def test_output_f138; assert_equal("TWh/yr", worksheet.output_f138); end
  def test_output_h138; assert_in_delta(0, (worksheet.output_h138||0), 0.001); end
  def test_output_m138; assert_in_delta(0, (worksheet.output_m138||0), 0.001); end
  def test_output_r138; assert_in_delta(0, (worksheet.output_r138||0), 0.001); end
  def test_output_w138; assert_in_delta(0, (worksheet.output_w138||0), 0.001); end
  def test_output_ab138; assert_in_delta(0, (worksheet.output_ab138||0), 0.001); end
  def test_output_ac138; assert_in_epsilon(1.2988890410958904, worksheet.output_ac138, 0.001); end
  def test_output_ad138; assert_in_epsilon(4.687254208123038, worksheet.output_ad138, 0.001); end
  def test_output_ae138; assert_in_epsilon(8.16054811905395, worksheet.output_ae138, 0.001); end
  def test_output_af138; assert_in_epsilon(12.262733044189225, worksheet.output_af138, 0.001); end
  def test_output_ag138; assert_in_epsilon(17.045257777528477, worksheet.output_ag138, 0.001); end
  def test_output_ah138; assert_in_epsilon(21.822424154255664, worksheet.output_ah138, 0.001); end
  def test_output_ai138; assert_in_epsilon(24.439193804676805, worksheet.output_ai138, 0.001); end
  def test_output_aj138; assert_in_epsilon(27.718905405030515, worksheet.output_aj138, 0.001); end
  def test_output_ak138; assert_in_epsilon(31.108050666324726, worksheet.output_ak138, 0.001); end
  def test_output_am138; assert_in_delta(0.08263613559865868, worksheet.output_am138, 0.001); end
  def test_output_an138; assert_in_epsilon(22.949736799748838, worksheet.output_an138, 0.001); end
  def test_output_ao138; assert_equal("", worksheet.output_ao138); end
  def test_output_aq138; assert_equal("CCS", worksheet.output_aq138); end
  def test_output_ar138; assert_in_epsilon(30.26071232876712, worksheet.output_ar138, 0.001); end
  def test_output_c139; assert_equal("III.a.2", worksheet.output_c139); end
  def test_output_e139; assert_equal("Offshore wind", worksheet.output_e139); end
  def test_output_f139; assert_equal("TWh/yr", worksheet.output_f139); end
  def test_output_h139; assert_in_delta(0, (worksheet.output_h139||0), 0.001); end
  def test_output_m139; assert_in_delta(0, (worksheet.output_m139||0), 0.001); end
  def test_output_r139; assert_in_delta(0, (worksheet.output_r139||0), 0.001); end
  def test_output_w139; assert_in_delta(0, (worksheet.output_w139||0), 0.001); end
  def test_output_ab139; assert_in_delta(0, (worksheet.output_ab139||0), 0.001); end
  def test_output_ac139; assert_in_delta(0.6258924000000001, worksheet.output_ac139, 0.001); end
  def test_output_ad139; assert_in_epsilon(6.232998555, worksheet.output_ad139, 0.001); end
  def test_output_ae139; assert_in_epsilon(12.497221602000002, worksheet.output_ae139, 0.001); end
  def test_output_af139; assert_in_epsilon(21.07848984, worksheet.output_af139, 0.001); end
  def test_output_ag139; assert_in_epsilon(32.082826577999995, worksheet.output_ag139, 0.001); end
  def test_output_ah139; assert_in_epsilon(44.210356739999995, worksheet.output_ah139, 0.001); end
  def test_output_ai139; assert_in_epsilon(50.042398455, worksheet.output_ai139, 0.001); end
  def test_output_aj139; assert_in_epsilon(57.45232017000001, worksheet.output_aj139, 0.001); end
  def test_output_ak139; assert_in_epsilon(65.11161267, worksheet.output_ak139, 0.001); end
  def test_output_am139; assert_in_delta(0.12312726255855222, worksheet.output_am139, 0.001); end
  def test_output_an139; assert_in_epsilon(103.0300420168067, worksheet.output_an139, 0.001); end
  def test_output_ao139; assert_equal("", worksheet.output_ao139); end
  def test_output_aq139; assert_equal("Gas", worksheet.output_aq139); end
  def test_output_ar139; assert_in_delta(0, (worksheet.output_ar139||0), 0.001); end
  def test_output_e140; assert_equal("Total Wind", worksheet.output_e140); end
  def test_output_f140; assert_equal("TWh/yr", worksheet.output_f140); end
  def test_output_g140; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g140); end
  def test_output_h140; assert_in_delta(0.007, worksheet.output_h140, 0.001); end
  def test_output_i140; assert_in_delta(0.008, worksheet.output_i140, 0.001); end
  def test_output_j140; assert_in_delta(0.009, worksheet.output_j140, 0.001); end
  def test_output_k140; assert_in_delta(0.008, worksheet.output_k140, 0.001); end
  def test_output_l140; assert_in_delta(0.009, worksheet.output_l140, 0.001); end
  def test_output_m140; assert_in_delta(0.009, worksheet.output_m140, 0.001); end
  def test_output_n140; assert_in_delta(0.008, worksheet.output_n140, 0.001); end
  def test_output_o140; assert_in_delta(0.008, worksheet.output_o140, 0.001); end
  def test_output_p140; assert_in_delta(0.011, worksheet.output_p140, 0.001); end
  def test_output_q140; assert_in_delta(0.013, worksheet.output_q140, 0.001); end
  def test_output_r140; assert_in_delta(0.016, worksheet.output_r140, 0.001); end
  def test_output_s140; assert_in_delta(0.037, worksheet.output_s140, 0.001); end
  def test_output_t140; assert_in_delta(0.057, worksheet.output_t140, 0.001); end
  def test_output_u140; assert_in_delta(0.088, worksheet.output_u140, 0.001); end
  def test_output_v140; assert_in_delta(0.142, worksheet.output_v140, 0.001); end
  def test_output_w140; assert_in_delta(0.227, worksheet.output_w140, 0.001); end
  def test_output_x140; assert_in_delta(0.366, worksheet.output_x140, 0.001); end
  def test_output_y140; assert_in_delta(0.491, worksheet.output_y140, 0.001); end
  def test_output_z140; assert_in_delta(0.637, worksheet.output_z140, 0.001); end
  def test_output_aa140; assert_in_delta(0.996, worksheet.output_aa140, 0.001); end
  def test_output_ab140; assert_in_epsilon(1.292, worksheet.output_ab140, 0.001); end
  def test_output_ac140; assert_in_epsilon(1.9247814410958906, worksheet.output_ac140, 0.001); end
  def test_output_ad140; assert_in_epsilon(10.920252763123038, worksheet.output_ad140, 0.001); end
  def test_output_ae140; assert_in_epsilon(20.657769721053953, worksheet.output_ae140, 0.001); end
  def test_output_af140; assert_in_epsilon(33.34122288418922, worksheet.output_af140, 0.001); end
  def test_output_ag140; assert_in_epsilon(49.12808435552847, worksheet.output_ag140, 0.001); end
  def test_output_ah140; assert_in_epsilon(66.03278089425567, worksheet.output_ah140, 0.001); end
  def test_output_ai140; assert_in_epsilon(74.4815922596768, worksheet.output_ai140, 0.001); end
  def test_output_aj140; assert_in_epsilon(85.17122557503052, worksheet.output_aj140, 0.001); end
  def test_output_am140; assert_in_delta(0.10273728848248953, worksheet.output_am140, 0.001); end
  def test_output_an140; assert_in_epsilon(48.98991640398468, worksheet.output_an140, 0.001); end
  def test_output_ao140; assert_in_epsilon(13744.666190903532, worksheet.output_ao140, 0.001); end
  def test_output_aq140; assert_equal("Nuclear power", worksheet.output_aq140); end
  def test_output_ar140; assert_in_epsilon(49.335048, worksheet.output_ar140, 0.001); end
  def test_output_c141; assert_equal("IV.a", worksheet.output_c141); end
  def test_output_e141; assert_equal("Solar PV", worksheet.output_e141); end
  def test_output_f141; assert_equal("TWh/yr", worksheet.output_f141); end
  def test_output_g141; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g141); end
  def test_output_h141; assert_in_delta(0, (worksheet.output_h141||0), 0.001); end
  def test_output_i141; assert_in_delta(0, (worksheet.output_i141||0), 0.001); end
  def test_output_j141; assert_in_delta(0, (worksheet.output_j141||0), 0.001); end
  def test_output_k141; assert_in_delta(0, (worksheet.output_k141||0), 0.001); end
  def test_output_l141; assert_in_delta(0, (worksheet.output_l141||0), 0.001); end
  def test_output_m141; assert_in_delta(0, (worksheet.output_m141||0), 0.001); end
  def test_output_n141; assert_in_delta(0, (worksheet.output_n141||0), 0.001); end
  def test_output_o141; assert_in_delta(0, (worksheet.output_o141||0), 0.001); end
  def test_output_p141; assert_in_delta(0, (worksheet.output_p141||0), 0.001); end
  def test_output_q141; assert_in_delta(0, (worksheet.output_q141||0), 0.001); end
  def test_output_r141; assert_in_delta(0, (worksheet.output_r141||0), 0.001); end
  def test_output_s141; assert_in_delta(0, (worksheet.output_s141||0), 0.001); end
  def test_output_t141; assert_in_delta(0, (worksheet.output_t141||0), 0.001); end
  def test_output_u141; assert_in_delta(0, (worksheet.output_u141||0), 0.001); end
  def test_output_v141; assert_in_delta(0.001, worksheet.output_v141, 0.001); end
  def test_output_w141; assert_in_delta(0.001, worksheet.output_w141, 0.001); end
  def test_output_x141; assert_in_delta(0.002, worksheet.output_x141, 0.001); end
  def test_output_y141; assert_in_delta(0.006, worksheet.output_y141, 0.001); end
  def test_output_z141; assert_in_delta(0.042, worksheet.output_z141, 0.001); end
  def test_output_aa141; assert_in_delta(0.166, worksheet.output_aa141, 0.001); end
  def test_output_ab141; assert_in_delta(0.56, worksheet.output_ab141, 0.001); end
  def test_output_ac141; assert_in_delta(0.60143532, worksheet.output_ac141, 0.001); end
  def test_output_ad141; assert_in_epsilon(2.7436320000000007, worksheet.output_ad141, 0.001); end
  def test_output_ae141; assert_in_epsilon(4.640172000000001, worksheet.output_ae141, 0.001); end
  def test_output_af141; assert_in_epsilon(6.611172000000002, worksheet.output_af141, 0.001); end
  def test_output_ag141; assert_in_epsilon(9.6638822556391, worksheet.output_ag141, 0.001); end
  def test_output_ah141; assert_in_epsilon(13.732331639097747, worksheet.output_ah141, 0.001); end
  def test_output_ai141; assert_in_epsilon(19.837969714285723, worksheet.output_ai141, 0.001); end
  def test_output_aj141; assert_in_epsilon(29.23840682706769, worksheet.output_aj141, 0.001); end
  def test_output_ak141; assert_in_epsilon(44.04647600000002, worksheet.output_ak141, 0.001); end
  def test_output_am141; assert_in_delta(0.11331498844772825, worksheet.output_am141, 0.001); end
  def test_output_an141; assert_in_epsilon(72.23559913308719, worksheet.output_an141, 0.001); end
  def test_output_ao141; assert_equal("", worksheet.output_ao141); end
  def test_output_c142; assert_equal("III.d", worksheet.output_c142); end
  def test_output_e142; assert_equal("Geothermal electricity", worksheet.output_e142); end
  def test_output_f142; assert_equal("TWh/yr", worksheet.output_f142); end
  def test_output_g142; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g142); end
  def test_output_h142; assert_in_delta(0, (worksheet.output_h142||0), 0.001); end
  def test_output_i142; assert_in_delta(0, (worksheet.output_i142||0), 0.001); end
  def test_output_j142; assert_in_delta(0, (worksheet.output_j142||0), 0.001); end
  def test_output_k142; assert_in_delta(0, (worksheet.output_k142||0), 0.001); end
  def test_output_l142; assert_in_delta(0, (worksheet.output_l142||0), 0.001); end
  def test_output_m142; assert_in_delta(0, (worksheet.output_m142||0), 0.001); end
  def test_output_n142; assert_in_delta(0, (worksheet.output_n142||0), 0.001); end
  def test_output_o142; assert_in_delta(0, (worksheet.output_o142||0), 0.001); end
  def test_output_p142; assert_in_delta(0, (worksheet.output_p142||0), 0.001); end
  def test_output_q142; assert_in_delta(0, (worksheet.output_q142||0), 0.001); end
  def test_output_r142; assert_in_delta(0, (worksheet.output_r142||0), 0.001); end
  def test_output_s142; assert_in_delta(0, (worksheet.output_s142||0), 0.001); end
  def test_output_t142; assert_in_delta(0, (worksheet.output_t142||0), 0.001); end
  def test_output_u142; assert_in_delta(0, (worksheet.output_u142||0), 0.001); end
  def test_output_v142; assert_in_delta(0, (worksheet.output_v142||0), 0.001); end
  def test_output_w142; assert_in_delta(0, (worksheet.output_w142||0), 0.001); end
  def test_output_x142; assert_in_delta(0, (worksheet.output_x142||0), 0.001); end
  def test_output_y142; assert_in_delta(0, (worksheet.output_y142||0), 0.001); end
  def test_output_z142; assert_in_delta(0, (worksheet.output_z142||0), 0.001); end
  def test_output_aa142; assert_in_delta(0, (worksheet.output_aa142||0), 0.001); end
  def test_output_ab142; assert_in_delta(0, (worksheet.output_ab142||0), 0.001); end
  def test_output_ac142; assert_in_delta(0, (worksheet.output_ac142||0), 0.001); end
  def test_output_ad142; assert_in_delta(0.372555, worksheet.output_ad142, 0.001); end
  def test_output_ae142; assert_in_epsilon(2.23533, worksheet.output_ae142, 0.001); end
  def test_output_af142; assert_in_epsilon(4.268488287671233, worksheet.output_af142, 0.001); end
  def test_output_ag142; assert_in_epsilon(9.282086575342465, worksheet.output_ag142, 0.001); end
  def test_output_ah142; assert_in_epsilon(17.276124863013703, worksheet.output_ah142, 0.001); end
  def test_output_ai142; assert_in_epsilon(27.505493150684938, worksheet.output_ai142, 0.001); end
  def test_output_aj142; assert_in_epsilon(36.989751438356166, worksheet.output_aj142, 0.001); end
  def test_output_ak142; assert_in_epsilon(48.7093397260274, worksheet.output_ak142, 0.001); end
  def test_output_am142; assert_equal("", worksheet.output_am142); end
  def test_output_an142; assert_equal("", worksheet.output_an142); end
  def test_output_ao142; assert_equal("", worksheet.output_ao142); end
  def test_output_c143; assert_equal("III.b", worksheet.output_c143); end
  def test_output_e143; assert_equal("Hydroelectric power stations", worksheet.output_e143); end
  def test_output_f143; assert_equal("TWh/yr", worksheet.output_f143); end
  def test_output_g143; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g143); end
  def test_output_h143; assert_in_delta(0.897, worksheet.output_h143, 0.001); end
  def test_output_i143; assert_in_delta(0.979, worksheet.output_i143, 0.001); end
  def test_output_j143; assert_in_epsilon(1.156, worksheet.output_j143, 0.001); end
  def test_output_k143; assert_in_epsilon(1.02, worksheet.output_k143, 0.001); end
  def test_output_l143; assert_in_epsilon(1.184, worksheet.output_l143, 0.001); end
  def test_output_m143; assert_in_epsilon(1.23, worksheet.output_m143, 0.001); end
  def test_output_n143; assert_in_epsilon(1.2, worksheet.output_n143, 0.001); end
  def test_output_o143; assert_in_epsilon(1.277, worksheet.output_o143, 0.001); end
  def test_output_p143; assert_in_epsilon(1.497, worksheet.output_p143, 0.001); end
  def test_output_q143; assert_in_epsilon(1.489, worksheet.output_q143, 0.001); end
  def test_output_r143; assert_in_epsilon(1.699, worksheet.output_r143, 0.001); end
  def test_output_s143; assert_in_epsilon(1.644, worksheet.output_s143, 0.001); end
  def test_output_t143; assert_in_epsilon(1.49, worksheet.output_t143, 0.001); end
  def test_output_u143; assert_in_epsilon(1.316, worksheet.output_u143, 0.001); end
  def test_output_v143; assert_in_epsilon(1.607, worksheet.output_v143, 0.001); end
  def test_output_w143; assert_in_epsilon(1.604, worksheet.output_w143, 0.001); end
  def test_output_x143; assert_in_epsilon(1.628, worksheet.output_x143, 0.001); end
  def test_output_y143; assert_in_epsilon(1.683, worksheet.output_y143, 0.001); end
  def test_output_z143; assert_in_epsilon(1.757, worksheet.output_z143, 0.001); end
  def test_output_aa143; assert_in_epsilon(1.757, worksheet.output_aa143, 0.001); end
  def test_output_ab143; assert_in_epsilon(1.668, worksheet.output_ab143, 0.001); end
  def test_output_ac143; assert_in_delta(0.3760614, worksheet.output_ac143, 0.001); end
  def test_output_ad143; assert_in_delta(0.40071577500000005, worksheet.output_ad143, 0.001); end
  def test_output_ae143; assert_in_delta(0.42602760000000006, worksheet.output_ae143, 0.001); end
  def test_output_af143; assert_in_delta(0.4519968750000001, worksheet.output_af143, 0.001); end
  def test_output_ag143; assert_in_delta(0.4786236000000001, worksheet.output_ag143, 0.001); end
  def test_output_ah143; assert_in_delta(0.5059077750000001, worksheet.output_ah143, 0.001); end
  def test_output_ai143; assert_in_delta(0.5338494000000001, worksheet.output_ai143, 0.001); end
  def test_output_aj143; assert_in_delta(0.5624484750000001, worksheet.output_aj143, 0.001); end
  def test_output_ak143; assert_in_delta(0.591705, worksheet.output_ak143, 0.001); end
  def test_output_am143; assert_in_delta(0.011395837728269242, worksheet.output_am143, 0.001); end
  def test_output_an143; assert_in_delta(0.5734265734265735, worksheet.output_an143, 0.001); end
  def test_output_ao143; assert_in_delta(-0.3403511705685619, worksheet.output_ao143, 0.001); end
  def test_output_c144; assert_equal("III.c", worksheet.output_c144); end
  def test_output_e144; assert_equal("Tidal and Wave [UNUSED]", worksheet.output_e144); end
  def test_output_f144; assert_equal("TWh/yr", worksheet.output_f144); end
  def test_output_h144; assert_in_delta(0, (worksheet.output_h144||0), 0.001); end
  def test_output_i144; assert_in_delta(0, (worksheet.output_i144||0), 0.001); end
  def test_output_j144; assert_in_delta(0, (worksheet.output_j144||0), 0.001); end
  def test_output_k144; assert_in_delta(0, (worksheet.output_k144||0), 0.001); end
  def test_output_l144; assert_in_delta(0, (worksheet.output_l144||0), 0.001); end
  def test_output_m144; assert_in_delta(0, (worksheet.output_m144||0), 0.001); end
  def test_output_n144; assert_in_delta(0, (worksheet.output_n144||0), 0.001); end
  def test_output_o144; assert_in_delta(0, (worksheet.output_o144||0), 0.001); end
  def test_output_p144; assert_in_delta(0, (worksheet.output_p144||0), 0.001); end
  def test_output_q144; assert_in_delta(0, (worksheet.output_q144||0), 0.001); end
  def test_output_r144; assert_in_delta(0, (worksheet.output_r144||0), 0.001); end
  def test_output_s144; assert_in_delta(0, (worksheet.output_s144||0), 0.001); end
  def test_output_t144; assert_in_delta(0, (worksheet.output_t144||0), 0.001); end
  def test_output_u144; assert_in_delta(0, (worksheet.output_u144||0), 0.001); end
  def test_output_v144; assert_in_delta(0, (worksheet.output_v144||0), 0.001); end
  def test_output_w144; assert_in_delta(0, (worksheet.output_w144||0), 0.001); end
  def test_output_x144; assert_in_delta(0, (worksheet.output_x144||0), 0.001); end
  def test_output_y144; assert_in_delta(0, (worksheet.output_y144||0), 0.001); end
  def test_output_z144; assert_in_delta(0, (worksheet.output_z144||0), 0.001); end
  def test_output_aa144; assert_in_delta(0, (worksheet.output_aa144||0), 0.001); end
  def test_output_ab144; assert_in_delta(0, (worksheet.output_ab144||0), 0.001); end
  def test_output_ac144; assert_in_delta(0, (worksheet.output_ac144||0), 0.001); end
  def test_output_ad144; assert_in_delta(0, (worksheet.output_ad144||0), 0.001); end
  def test_output_ae144; assert_in_delta(0, (worksheet.output_ae144||0), 0.001); end
  def test_output_af144; assert_in_delta(0, (worksheet.output_af144||0), 0.001); end
  def test_output_ag144; assert_in_delta(0, (worksheet.output_ag144||0), 0.001); end
  def test_output_ah144; assert_in_delta(0, (worksheet.output_ah144||0), 0.001); end
  def test_output_ai144; assert_in_delta(0, (worksheet.output_ai144||0), 0.001); end
  def test_output_aj144; assert_in_delta(0, (worksheet.output_aj144||0), 0.001); end
  def test_output_ak144; assert_in_delta(0, (worksheet.output_ak144||0), 0.001); end
  def test_output_am144; assert_equal("", worksheet.output_am144); end
  def test_output_an144; assert_equal("", worksheet.output_an144); end
  def test_output_ao144; assert_equal("", worksheet.output_ao144); end
  def test_output_c145; assert_equal("III.e", worksheet.output_c145); end
  def test_output_e145; assert_equal("Tidal [UNUSED]", worksheet.output_e145); end
  def test_output_f145; assert_equal("TWh/yr", worksheet.output_f145); end
  def test_output_h145; assert_in_delta(0, (worksheet.output_h145||0), 0.001); end
  def test_output_m145; assert_in_delta(0, (worksheet.output_m145||0), 0.001); end
  def test_output_r145; assert_in_delta(0, (worksheet.output_r145||0), 0.001); end
  def test_output_w145; assert_in_delta(0, (worksheet.output_w145||0), 0.001); end
  def test_output_ab145; assert_in_delta(0, (worksheet.output_ab145||0), 0.001); end
  def test_output_ac145; assert_in_delta(0, (worksheet.output_ac145||0), 0.001); end
  def test_output_ad145; assert_in_delta(0, (worksheet.output_ad145||0), 0.001); end
  def test_output_ae145; assert_in_delta(0, (worksheet.output_ae145||0), 0.001); end
  def test_output_af145; assert_in_delta(0, (worksheet.output_af145||0), 0.001); end
  def test_output_ag145; assert_in_delta(0, (worksheet.output_ag145||0), 0.001); end
  def test_output_ah145; assert_in_delta(0, (worksheet.output_ah145||0), 0.001); end
  def test_output_ai145; assert_in_delta(0, (worksheet.output_ai145||0), 0.001); end
  def test_output_aj145; assert_in_delta(0, (worksheet.output_aj145||0), 0.001); end
  def test_output_ak145; assert_in_delta(0, (worksheet.output_ak145||0), 0.001); end
  def test_output_am145; assert_equal("", worksheet.output_am145); end
  def test_output_an145; assert_equal("", worksheet.output_an145); end
  def test_output_ao145; assert_equal("", worksheet.output_ao145); end
  def test_output_c146; assert_equal("VII.a", worksheet.output_c146); end
  def test_output_e146; assert_equal("Imports of decarbonized electricity", worksheet.output_e146); end
  def test_output_f146; assert_equal("TWh/yr", worksheet.output_f146); end
  def test_output_g146; assert_equal("IEA - TAB8IMPE-TAB8EXPE", worksheet.output_g146); end
  def test_output_h146; assert_in_epsilon(-3.724, worksheet.output_h146, 0.001); end
  def test_output_i146; assert_in_epsilon(-1.847, worksheet.output_i146, 0.001); end
  def test_output_j146; assert_in_delta(0.128, worksheet.output_j146, 0.001); end
  def test_output_k146; assert_in_epsilon(2.231, worksheet.output_k146, 0.001); end
  def test_output_l146; assert_in_epsilon(3.983, worksheet.output_l146, 0.001); end
  def test_output_m146; assert_in_epsilon(4.072, worksheet.output_m146, 0.001); end
  def test_output_n146; assert_in_epsilon(4.191, worksheet.output_n146, 0.001); end
  def test_output_o146; assert_in_epsilon(3.27, worksheet.output_o146, 0.001); end
  def test_output_p146; assert_in_epsilon(1.393, worksheet.output_p146, 0.001); end
  def test_output_q146; assert_in_delta(0.852, worksheet.output_q146, 0.001); end
  def test_output_r146; assert_in_epsilon(4.326, worksheet.output_r146, 0.001); end
  def test_output_s146; assert_in_epsilon(9.106, worksheet.output_s146, 0.001); end
  def test_output_t146; assert_in_epsilon(7.588, worksheet.output_t146, 0.001); end
  def test_output_u146; assert_in_epsilon(6.41, worksheet.output_u146, 0.001); end
  def test_output_v146; assert_in_epsilon(7.777, worksheet.output_v146, 0.001); end
  def test_output_w146; assert_in_epsilon(6.304, worksheet.output_w146, 0.001); end
  def test_output_x146; assert_in_epsilon(10.157, worksheet.output_x146, 0.001); end
  def test_output_y146; assert_in_epsilon(6.779, worksheet.output_y146, 0.001); end
  def test_output_z146; assert_in_epsilon(10.597, worksheet.output_z146, 0.001); end
  def test_output_aa146; assert_in_epsilon(-1.835, worksheet.output_aa146, 0.001); end
  def test_output_ab146; assert_in_delta(0.551, worksheet.output_ab146, 0.001); end
  def test_output_ac146; assert_in_delta(0, (worksheet.output_ac146||0), 0.001); end
  def test_output_ad146; assert_in_epsilon(2.1, worksheet.output_ad146, 0.001); end
  def test_output_ae146; assert_in_epsilon(4.2, worksheet.output_ae146, 0.001); end
  def test_output_af146; assert_in_epsilon(6.300000000000001, worksheet.output_af146, 0.001); end
  def test_output_ag146; assert_in_epsilon(8.4, worksheet.output_ag146, 0.001); end
  def test_output_ah146; assert_in_epsilon(10.5, worksheet.output_ah146, 0.001); end
  def test_output_ai146; assert_in_epsilon(12.6, worksheet.output_ai146, 0.001); end
  def test_output_aj146; assert_in_epsilon(14.7, worksheet.output_aj146, 0.001); end
  def test_output_ak146; assert_in_epsilon(16.8, worksheet.output_ak146, 0.001); end
  def test_output_am146; assert_equal("", worksheet.output_am146); end
  def test_output_an146; assert_equal("", worksheet.output_an146); end
  def test_output_ao146; assert_in_epsilon(-5.511278195488722, worksheet.output_ao146, 0.001); end
  def test_output_c147; assert_equal("XI", worksheet.output_c147); end
  def test_output_d147; assert_equal("I.02", worksheet.output_d147); end
  def test_output_e147; assert_equal("Electricity used by industry", worksheet.output_e147); end
  def test_output_f147; assert_equal("TWh/yr", worksheet.output_f147); end
  def test_output_ac147; assert_in_epsilon(31.884979304622664, worksheet.output_ac147, 0.001); end
  def test_output_ad147; assert_in_epsilon(28.990994609796385, worksheet.output_ad147, 0.001); end
  def test_output_ae147; assert_in_epsilon(26.250350586147935, worksheet.output_ae147, 0.001); end
  def test_output_af147; assert_in_epsilon(23.996228765811928, worksheet.output_af147, 0.001); end
  def test_output_ag147; assert_in_epsilon(22.051603057798822, worksheet.output_ag147, 0.001); end
  def test_output_ah147; assert_in_epsilon(20.030265403141666, worksheet.output_ah147, 0.001); end
  def test_output_ai147; assert_in_epsilon(18.174439133254026, worksheet.output_ai147, 0.001); end
  def test_output_aj147; assert_in_epsilon(16.50849150103237, worksheet.output_aj147, 0.001); end
  def test_output_ak147; assert_in_epsilon(15.247792136127861, worksheet.output_ak147, 0.001); end
  def test_output_am147; assert_in_delta(-0.0182734855139296, worksheet.output_am147, 0.001); end
  def test_output_an147; assert_in_delta(-0.5217876106973904, worksheet.output_an147, 0.001); end
  def test_output_ao147; assert_equal("", worksheet.output_ao147); end
  def test_output_c148; assert_equal("XI", worksheet.output_c148); end
  def test_output_d148; assert_equal("V.01", worksheet.output_d148); end
  def test_output_e148; assert_equal("Electricity used by industry from network", worksheet.output_e148); end
  def test_output_f148; assert_equal("TWh/yr", worksheet.output_f148); end
  def test_output_ac148; assert_in_epsilon(-20.887949071340362, worksheet.output_ac148, 0.001); end
  def test_output_ad148; assert_in_epsilon(-17.99396437651408, worksheet.output_ad148, 0.001); end
  def test_output_ae148; assert_in_epsilon(-15.25332035286563, worksheet.output_ae148, 0.001); end
  def test_output_af148; assert_in_epsilon(-12.999198532529624, worksheet.output_af148, 0.001); end
  def test_output_ag148; assert_in_epsilon(-11.054572824516525, worksheet.output_ag148, 0.001); end
  def test_output_ah148; assert_in_epsilon(-9.033235169859363, worksheet.output_ah148, 0.001); end
  def test_output_ai148; assert_in_epsilon(-7.177408899971724, worksheet.output_ai148, 0.001); end
  def test_output_aj148; assert_in_epsilon(-5.511461267750066, worksheet.output_aj148, 0.001); end
  def test_output_ak148; assert_in_epsilon(-4.250761902845562, worksheet.output_ak148, 0.001); end
  def test_output_am148; assert_in_delta(-0.03902016528305796, worksheet.output_am148, 0.001); end
  def test_output_an148; assert_in_delta(-0.796496923258115, worksheet.output_an148, 0.001); end
  def test_output_ao148; assert_equal("", worksheet.output_ao148); end
  def test_output_e149; assert_equal("Industry CHP", worksheet.output_e149); end
  def test_output_f149; assert_equal("TWh/yr", worksheet.output_f149); end
  def test_output_g149; assert_equal("line XI industry (col I2+ Col v1)", worksheet.output_g149); end
  def test_output_ab149; assert_in_epsilon(12.1161346777267, worksheet.output_ab149, 0.001); end
  def test_output_am149; assert_in_delta(0, (worksheet.output_am149||0), 0.001); end
  def test_output_an149; assert_in_delta(-3.3306690738754696e-16, worksheet.output_an149, 0.001); end
  def test_output_ao149; assert_equal("", worksheet.output_ao149); end
  def test_output_e150; assert_equal("Electricity produced by Public CHP and allocated in industry in the model (gap opera IEA)", worksheet.output_e150); end
  def test_output_f150; assert_equal("TWh/yr", worksheet.output_f150); end
  def test_output_ab150; assert_in_epsilon(10.02, worksheet.output_ab150, 0.001); end
  def test_output_am150; assert_equal("", worksheet.output_am150); end
  def test_output_an150; assert_equal("", worksheet.output_an150); end
  def test_output_ao150; assert_equal("", worksheet.output_ao150); end
  def test_output_b151; assert_equal("Electricity", worksheet.output_b151); end
  def test_output_e151; assert_equal("Total generation", worksheet.output_e151); end
  def test_output_f151; assert_equal("TWh/yr", worksheet.output_f151); end
  def test_output_g151; assert_equal("IEA - GELE - Total producteurs & autoproducteurs", worksheet.output_g151); end
  def test_output_h151; assert_in_epsilon(70.923, worksheet.output_h151, 0.001); end
  def test_output_i151; assert_in_epsilon(71.936, worksheet.output_i151, 0.001); end
  def test_output_j151; assert_in_epsilon(72.225, worksheet.output_j151, 0.001); end
  def test_output_k151; assert_in_epsilon(70.834, worksheet.output_k151, 0.001); end
  def test_output_l151; assert_in_epsilon(72.179, worksheet.output_l151, 0.001); end
  def test_output_m151; assert_in_epsilon(74.408, worksheet.output_m151, 0.001); end
  def test_output_n151; assert_in_epsilon(76.099, worksheet.output_n151, 0.001); end
  def test_output_o151; assert_in_epsilon(78.833, worksheet.output_o151, 0.001); end
  def test_output_p151; assert_in_epsilon(83.183, worksheet.output_p151, 0.001); end
  def test_output_q151; assert_in_epsilon(84.514, worksheet.output_q151, 0.001); end
  def test_output_r151; assert_in_epsilon(84.012, worksheet.output_r151, 0.001); end
  def test_output_s151; assert_in_epsilon(79.821, worksheet.output_s151, 0.001); end
  def test_output_t151; assert_in_epsilon(82.069, worksheet.output_t151, 0.001); end
  def test_output_u151; assert_in_epsilon(84.63, worksheet.output_u151, 0.001); end
  def test_output_v151; assert_in_epsilon(85.643, worksheet.output_v151, 0.001); end
  def test_output_w151; assert_in_epsilon(87.025, worksheet.output_w151, 0.001); end
  def test_output_x151; assert_in_epsilon(85.617, worksheet.output_x151, 0.001); end
  def test_output_y151; assert_in_epsilon(88.82, worksheet.output_y151, 0.001); end
  def test_output_z151; assert_in_epsilon(84.93, worksheet.output_z151, 0.001); end
  def test_output_aa151; assert_in_epsilon(91.225, worksheet.output_aa151, 0.001); end
  def test_output_ab151; assert_in_epsilon(95.12, worksheet.output_ab151, 0.001); end
  def test_output_am151; assert_in_delta(0.02884618158461416, worksheet.output_am151, 0.001); end
  def test_output_an151; assert_in_epsilon(2.1190188813151543, worksheet.output_an151, 0.001); end
  def test_output_ao151; assert_in_epsilon(3.451528529941349, worksheet.output_ao151, 0.001); end
  def test_output_aq151; assert_in_epsilon(237.35230552085537, worksheet.output_aq151, 0.001); end
  def test_output_b152; assert_equal("REF", worksheet.output_b152); end
  def test_output_e152; assert_equal("Reference scenario", worksheet.output_e152); end
  def test_output_f152; assert_equal("TWh/yr", worksheet.output_f152); end
  def test_output_g152; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g152); end
  def test_output_ac152; assert_in_epsilon(103.25504594567349, worksheet.output_ac152, 0.001); end
  def test_output_ad152; assert_in_epsilon(90.23523011855958, worksheet.output_ad152, 0.001); end
  def test_output_ae152; assert_in_epsilon(96.54378848102128, worksheet.output_ae152, 0.001); end
  def test_output_af152; assert_in_epsilon(102.31351327998009, worksheet.output_af152, 0.001); end
  def test_output_ag152; assert_in_epsilon(108.09560626715707, worksheet.output_ag152, 0.001); end
  def test_output_ah152; assert_in_epsilon(113.95185839005318, worksheet.output_ah152, 0.001); end
  def test_output_ai152; assert_in_epsilon(120.19320390818237, worksheet.output_ai152, 0.001); end
  def test_output_aj152; assert_in_epsilon(126.75770384720593, worksheet.output_aj152, 0.001); end
  def test_output_ak152; assert_in_epsilon(134.32104286496013, worksheet.output_ak152, 0.001); end
  def test_output_am152; assert_in_delta(0.006597434697665605, worksheet.output_am152, 0.001); end
  def test_output_an152; assert_in_delta(0.3008666223985963, worksheet.output_an152, 0.001); end
  def test_output_ao152; assert_equal("", worksheet.output_ao152); end
  def test_output_aq152; assert_in_epsilon(220.55230552085536, worksheet.output_aq152, 0.001); end
  def test_output_e153; assert_equal("Intermittent sources", worksheet.output_e153); end
  def test_output_f153; assert_equal("TWh/yr", worksheet.output_f153); end
  def test_output_ac153; assert_in_epsilon(2.5262167610958906, worksheet.output_ac153, 0.001); end
  def test_output_ad153; assert_in_epsilon(13.66388476312304, worksheet.output_ad153, 0.001); end
  def test_output_ae153; assert_in_epsilon(25.297941721053952, worksheet.output_ae153, 0.001); end
  def test_output_af153; assert_in_epsilon(39.952394884189225, worksheet.output_af153, 0.001); end
  def test_output_ag153; assert_in_epsilon(58.791966611167574, worksheet.output_ag153, 0.001); end
  def test_output_ah153; assert_in_epsilon(79.76511253335342, worksheet.output_ah153, 0.001); end
  def test_output_ai153; assert_in_epsilon(94.31956197396252, worksheet.output_ai153, 0.001); end
  def test_output_aj153; assert_in_epsilon(114.40963240209821, worksheet.output_aj153, 0.001); end
  def test_output_al153; assert_in_delta(0.44427981756886253, worksheet.output_al153, 0.001); end
  def test_output_am153; assert_in_delta(0.10563570647509968, worksheet.output_am153, 0.001); end
  def test_output_an153; assert_in_epsilon(54.524189965185855, worksheet.output_an153, 0.001); end
  def test_output_ak153; assert_in_epsilon(140.26613933632476, worksheet.output_ak153, 0.001); end
  def test_output_ao153; assert_equal("", worksheet.output_ao153); end
  def test_output_aq153; assert_in_epsilon(209.55527528757307, worksheet.output_aq153, 0.001); end
  def test_output_e154; assert_equal("Renewable energy sources", worksheet.output_e154); end
  def test_output_f154; assert_equal("TWh/yr", worksheet.output_f154); end
  def test_output_ad154; assert_in_epsilon(19.588170688194452, worksheet.output_ad154, 0.001); end
  def test_output_ae154; assert_in_epsilon(34.722682984951994, worksheet.output_ae154, 0.001); end
  def test_output_af154; assert_in_epsilon(53.97113670512539, worksheet.output_af154, 0.001); end
  def test_output_ag154; assert_in_epsilon(80.58678938133757, worksheet.output_ag154, 0.001); end
  def test_output_ah154; assert_in_epsilon(111.21046665463858, worksheet.output_ah154, 0.001); end
  def test_output_ai154; assert_in_epsilon(137.644115804929, worksheet.output_ai154, 0.001); end
  def test_output_aj154; assert_in_epsilon(168.85795475559513, worksheet.output_aj154, 0.001); end
  def test_output_am154; assert_in_delta(0.0898402754864589, worksheet.output_am154, 0.001); end
  def test_output_an154; assert_in_epsilon(30.225840403857898, worksheet.output_an154, 0.001); end
  def test_output_ak154; assert_in_epsilon(208.07421766235214, worksheet.output_ak154, 0.001); end
  def test_output_ao154; assert_equal("", worksheet.output_ao154); end
  def test_output_e155; assert_equal("Share of RES in electricity generation", worksheet.output_e155); end
  def test_output_f155; assert_equal("%", worksheet.output_f155); end
  def test_output_ac154; assert_in_epsilon(6.663526584752701, worksheet.output_ac154, 0.001); end
  def test_output_ac130; assert_in_epsilon(37.70431506849315, worksheet.output_ac130, 0.001); end
  def test_output_ac135; assert_in_epsilon(-2.034091050307794, worksheet.output_ac135, 0.001); end
  def test_output_ac151; assert_in_epsilon(101.22277868222034, worksheet.output_ac151, 0.001); end
  def test_output_ac155; assert_in_delta(0.06583030688845476, worksheet.output_ac155, 0.001); end
  def test_output_ad151; assert_in_epsilon(85.18743235631662, worksheet.output_ad151, 0.001); end
  def test_output_ad155; assert_in_delta(0.22994202485482, worksheet.output_ad155, 0.001); end
  def test_output_ae151; assert_in_epsilon(103.18202875159457, worksheet.output_ae151, 0.001); end
  def test_output_ae155; assert_in_delta(0.33651870781243376, worksheet.output_ae155, 0.001); end
  def test_output_af151; assert_in_epsilon(131.77806402723053, worksheet.output_af151, 0.001); end
  def test_output_af155; assert_in_delta(0.4095608560008351, worksheet.output_af155, 0.001); end
  def test_output_ag151; assert_in_epsilon(174.0215361846447, worksheet.output_ag151, 0.001); end
  def test_output_ag155; assert_in_delta(0.46308515111503984, worksheet.output_ag155, 0.001); end
  def test_output_ah151; assert_in_epsilon(205.52622728877463, worksheet.output_ah151, 0.001); end
  def test_output_ah155; assert_in_delta(0.5411010950849708, worksheet.output_ah155, 0.001); end
  def test_output_ai151; assert_in_epsilon(247.46666336464807, worksheet.output_ai151, 0.001); end
  def test_output_ai155; assert_in_delta(0.5562127598661929, worksheet.output_ai155, 0.001); end
  def test_output_aj151; assert_in_epsilon(260.94151092127987, worksheet.output_aj151, 0.001); end
  def test_output_aj155; assert_in_delta(0.6471103587904637, worksheet.output_aj155, 0.001); end
  def test_output_am155; assert_in_delta(0.05928397752120951, worksheet.output_am155, 0.001); end
  def test_output_an155; assert_in_epsilon(9.01143038630511, worksheet.output_an155, 0.001); end
  def test_output_ak155; assert_in_delta(0.6590555347228665, worksheet.output_ak155, 0.001); end
  def test_output_ao155; assert_equal("", worksheet.output_ao155); end
  def test_output_e156; assert_equal("Surface needed for Onshore wind", worksheet.output_e156); end
  def test_output_f156; assert_equal("km²", worksheet.output_f156); end
  def test_output_ac156; assert_in_epsilon(14.760102739726028, worksheet.output_ac156, 0.001); end
  def test_output_ad156; assert_in_epsilon(53.26425236503453, worksheet.output_ad156, 0.001); end
  def test_output_ae156; assert_in_epsilon(92.7335013528858, worksheet.output_ae156, 0.001); end
  def test_output_af156; assert_in_epsilon(139.34923913851392, worksheet.output_af156, 0.001); end
  def test_output_ag156; assert_in_epsilon(193.69611110827816, worksheet.output_ag156, 0.001); end
  def test_output_ah156; assert_in_epsilon(247.9820926619962, worksheet.output_ah156, 0.001); end
  def test_output_ai156; assert_in_epsilon(277.7181114167819, worksheet.output_ai156, 0.001); end
  def test_output_aj156; assert_in_epsilon(314.98756142080134, worksheet.output_aj156, 0.001); end
  def test_output_am156; assert_in_delta(0.08263613559865868, worksheet.output_am156, 0.001); end
  def test_output_an156; assert_in_epsilon(22.949736799748838, worksheet.output_an156, 0.001); end
  def test_output_ak156; assert_in_epsilon(353.5005757536901, worksheet.output_ak156, 0.001); end
  def test_output_ao156; assert_equal("", worksheet.output_ao156); end
  def test_output_e157; assert_equal("Surface needed for PV", worksheet.output_e157); end
  def test_output_f157; assert_equal("km²", worksheet.output_f157); end
  def test_output_ac157; assert_in_epsilon(29.259015567567566, worksheet.output_ac157, 0.001); end
  def test_output_ad157; assert_in_epsilon(66.7369945945946, worksheet.output_ad157, 0.001); end
  def test_output_ae157; assert_in_epsilon(75.24603243243244, worksheet.output_ae157, 0.001); end
  def test_output_af157; assert_in_epsilon(80.40614594594597, worksheet.output_af157, 0.001); end
  def test_output_ag157; assert_in_epsilon(94.02696248729934, worksheet.output_ag157, 0.001); end
  def test_output_ah157; assert_in_epsilon(111.34322950619794, worksheet.output_ah157, 0.001); end
  def test_output_ai157; assert_in_epsilon(137.87005979040268, worksheet.output_ai157, 0.001); end
  def test_output_aj157; assert_in_epsilon(177.80112259703324, worksheet.output_aj157, 0.001); end
  def test_output_am157; assert_in_delta(0.053809218172816475, worksheet.output_am157, 0.001); end
  def test_output_an157; assert_in_epsilon(7.137288792565245, worksheet.output_an157, 0.001); end
  def test_output_ak157; assert_in_epsilon(238.08905945945958, worksheet.output_ak157, 0.001); end
  def test_output_ao157; assert_equal("", worksheet.output_ao157); end
  def test_output_e158; assert_equal("PV efficiency", worksheet.output_e158); end
  def test_output_f158; assert_equal("kWh/m²/yr", worksheet.output_f158); end
  def test_output_ac158; assert_in_epsilon(20.555555555555557, worksheet.output_ac158, 0.001); end
  def test_output_ad158; assert_in_epsilon(41.111111111111114, worksheet.output_ad158, 0.001); end
  def test_output_ae158; assert_in_epsilon(61.66666666666667, worksheet.output_ae158, 0.001); end
  def test_output_af158; assert_in_epsilon(82.22222222222223, worksheet.output_af158, 0.001); end
  def test_output_ag158; assert_in_epsilon(102.77777777777779, worksheet.output_ag158, 0.001); end
  def test_output_ah158; assert_in_epsilon(123.33333333333334, worksheet.output_ah158, 0.001); end
  def test_output_ai158; assert_in_epsilon(143.8888888888889, worksheet.output_ai158, 0.001); end
  def test_output_aj158; assert_in_epsilon(164.44444444444446, worksheet.output_aj158, 0.001); end
  def test_output_ak158; assert_in_epsilon(185, worksheet.output_ak158, 0.001); end
  def test_output_am158; assert_in_delta(0.056467308549537965, worksheet.output_am158, 0.001); end
  def test_output_an158; assert_in_epsilon(8, worksheet.output_an158, 0.001); end
  def test_output_ao158; assert_equal("", worksheet.output_ao158); end
  def test_output_b159; assert_equal("Electricity Production capacity", worksheet.output_b159); end
  def test_output_h159; assert_in_delta(0, (worksheet.output_h159||0), 0.001); end
  def test_output_m159; assert_in_delta(0, (worksheet.output_m159||0), 0.001); end
  def test_output_r159; assert_in_delta(0, (worksheet.output_r159||0), 0.001); end
  def test_output_w159; assert_in_delta(0, (worksheet.output_w159||0), 0.001); end
  def test_output_ab159; assert_in_delta(0, (worksheet.output_ab159||0), 0.001); end
  def test_output_am159; assert_equal("", worksheet.output_am159); end
  def test_output_an159; assert_equal("", worksheet.output_an159); end
  def test_output_ao159; assert_equal("", worksheet.output_ao159); end
  def test_output_c160; assert_equal("I.a", worksheet.output_c160); end
  def test_output_e160; assert_equal("Unabated thermal generation ", worksheet.output_e160); end
  def test_output_f160; assert_equal("GW", worksheet.output_f160); end
  def test_output_g160; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g160); end
  def test_output_h160; assert_in_epsilon(7.235, worksheet.output_h160, 0.001); end
  def test_output_i160; assert_in_epsilon(7.207, worksheet.output_i160, 0.001); end
  def test_output_j160; assert_in_epsilon(7.148, worksheet.output_j160, 0.001); end
  def test_output_k160; assert_in_epsilon(7.161, worksheet.output_k160, 0.001); end
  def test_output_l160; assert_in_epsilon(7.964, worksheet.output_l160, 0.001); end
  def test_output_m160; assert_in_epsilon(7.877, worksheet.output_m160, 0.001); end
  def test_output_n160; assert_in_epsilon(7.751, worksheet.output_n160, 0.001); end
  def test_output_o160; assert_in_epsilon(7.572, worksheet.output_o160, 0.001); end
  def test_output_p160; assert_in_epsilon(8.272, worksheet.output_p160, 0.001); end
  def test_output_q160; assert_in_epsilon(8.389, worksheet.output_q160, 0.001); end
  def test_output_r160; assert_in_epsilon(8.545, worksheet.output_r160, 0.001); end
  def test_output_s160; assert_in_epsilon(8.348, worksheet.output_s160, 0.001); end
  def test_output_t160; assert_in_epsilon(8.338, worksheet.output_t160, 0.001); end
  def test_output_u160; assert_in_epsilon(8.366, worksheet.output_u160, 0.001); end
  def test_output_v160; assert_in_epsilon(8.365, worksheet.output_v160, 0.001); end
  def test_output_w160; assert_in_epsilon(8.713, worksheet.output_w160, 0.001); end
  def test_output_x160; assert_in_epsilon(8.807, worksheet.output_x160, 0.001); end
  def test_output_y160; assert_in_epsilon(8.842, worksheet.output_y160, 0.001); end
  def test_output_z160; assert_in_epsilon(9.13, worksheet.output_z160, 0.001); end
  def test_output_aa160; assert_in_epsilon(9.183, worksheet.output_aa160, 0.001); end
  def test_output_ab160; assert_in_epsilon(9.154, worksheet.output_ab160, 0.001); end
  def test_output_ac160; assert_in_epsilon(5.27842366448078, worksheet.output_ac160, 0.001); end
  def test_output_ad160; assert_in_epsilon(1.4528178641872258, worksheet.output_ad160, 0.001); end
  def test_output_ae160; assert_in_epsilon(1.6693594319855916, worksheet.output_ae160, 0.001); end
  def test_output_af160; assert_in_epsilon(1.2487586164739366, worksheet.output_af160, 0.001); end
  def test_output_ag160; assert_in_epsilon(1.6161848770920675, worksheet.output_ag160, 0.001); end
  def test_output_ah160; assert_in_epsilon(1.8349881121772056, worksheet.output_ah160, 0.001); end
  def test_output_ai160; assert_in_epsilon(2.0528083911202692, worksheet.output_ai160, 0.001); end
  def test_output_aj160; assert_in_epsilon(2.2691542358502232, worksheet.output_aj160, 0.001); end
  def test_output_am160; assert_in_delta(-0.018652685356952525, worksheet.output_am160, 0.001); end
  def test_output_an160; assert_in_delta(-0.5291207681366237, worksheet.output_an160, 0.001); end
  def test_output_ak160; assert_in_epsilon(2.4855000805801772, worksheet.output_ak160, 0.001); end
  def test_output_ao160; assert_in_delta(-0.6564616336447578, worksheet.output_ao160, 0.001); end
  def test_output_ar160; assert_in_epsilon(2010, worksheet.output_ar160, 0.001); end
  def test_output_as160; assert_in_epsilon(2050, worksheet.output_as160, 0.001); end
  def test_output_c161; assert_equal("I.a.Liquid", worksheet.output_c161); end
  def test_output_e161; assert_equal("Oil / Biofuel", worksheet.output_e161); end
  def test_output_f161; assert_equal("GW", worksheet.output_f161); end
  def test_output_h161; assert_in_delta(0, (worksheet.output_h161||0), 0.001); end
  def test_output_m161; assert_in_delta(0, (worksheet.output_m161||0), 0.001); end
  def test_output_r161; assert_in_delta(0, (worksheet.output_r161||0), 0.001); end
  def test_output_w161; assert_in_delta(0, (worksheet.output_w161||0), 0.001); end
  def test_output_ab161; assert_in_delta(0, (worksheet.output_ab161||0), 0.001); end
  def test_output_ac161; assert_in_delta(0.76103500761035, worksheet.output_ac161, 0.001); end
  def test_output_ad161; assert_in_delta(0.76103500761035, worksheet.output_ad161, 0.001); end
  def test_output_ae161; assert_in_delta(0.76103500761035, worksheet.output_ae161, 0.001); end
  def test_output_af161; assert_in_delta(0, (worksheet.output_af161||0), 0.001); end
  def test_output_ag161; assert_in_delta(0, (worksheet.output_ag161||0), 0.001); end
  def test_output_ah161; assert_in_delta(0, (worksheet.output_ah161||0), 0.001); end
  def test_output_ai161; assert_in_delta(0, (worksheet.output_ai161||0), 0.001); end
  def test_output_aj161; assert_in_delta(0, (worksheet.output_aj161||0), 0.001); end
  def test_output_ak161; assert_in_delta(0, (worksheet.output_ak161||0), 0.001); end
  def test_output_am161; assert_in_delta(-1, worksheet.output_am161, 0.001); end
  def test_output_an161; assert_in_delta(-1, worksheet.output_an161, 0.001); end
  def test_output_ao161; assert_equal("", worksheet.output_ao161); end
  def test_output_c162; assert_equal("I.a.Solid", worksheet.output_c162); end
  def test_output_e162; assert_equal("Coal / Biomass", worksheet.output_e162); end
  def test_output_f162; assert_equal("GW", worksheet.output_f162); end
  def test_output_h162; assert_in_delta(0, (worksheet.output_h162||0), 0.001); end
  def test_output_m162; assert_in_delta(0, (worksheet.output_m162||0), 0.001); end
  def test_output_r162; assert_in_delta(0, (worksheet.output_r162||0), 0.001); end
  def test_output_w162; assert_in_delta(0, (worksheet.output_w162||0), 0.001); end
  def test_output_ab162; assert_in_delta(0, (worksheet.output_ab162||0), 0.001); end
  def test_output_am162; assert_in_delta(0.040639052619312555, worksheet.output_am162, 0.001); end
  def test_output_an162; assert_in_epsilon(3.920449679313351, worksheet.output_an162, 0.001); end
  def test_output_ao162; assert_equal("", worksheet.output_ao162); end
  def test_output_aq162; assert_equal("Back-up gas plants", worksheet.output_aq162); end
  def test_output_ac174; assert_in_delta(0, (worksheet.output_ac174||0), 0.001); end
  def test_output_ar162; assert_in_delta(0, (worksheet.output_ar162||0), 0.001); end
  def test_output_ak174; assert_in_epsilon(56.08088844515771, worksheet.output_ak174, 0.001); end
  def test_output_as162; assert_in_epsilon(56.08088844515771, worksheet.output_as162, 0.001); end
  def test_output_c163; assert_equal("I.a.Gas", worksheet.output_c163); end
  def test_output_e163; assert_equal("Gas / Biogas", worksheet.output_e163); end
  def test_output_f163; assert_equal("GW", worksheet.output_f163); end
  def test_output_h163; assert_in_delta(0, (worksheet.output_h163||0), 0.001); end
  def test_output_m163; assert_in_delta(0, (worksheet.output_m163||0), 0.001); end
  def test_output_r163; assert_in_delta(0, (worksheet.output_r163||0), 0.001); end
  def test_output_w163; assert_in_delta(0, (worksheet.output_w163||0), 0.001); end
  def test_output_ab163; assert_in_delta(0, (worksheet.output_ab163||0), 0.001); end
  def test_output_ac163; assert_in_epsilon(4.012251882272416, worksheet.output_ac163, 0.001); end
  def test_output_am163; assert_in_delta(-1, worksheet.output_am163, 0.001); end
  def test_output_an163; assert_in_delta(-1, worksheet.output_an163, 0.001); end
  def test_output_ao163; assert_equal("", worksheet.output_ao163); end
  def test_output_aq163; assert_equal("CCS", worksheet.output_aq163); end
  def test_output_ar163; assert_in_delta(0, (worksheet.output_ar163||0), 0.001); end
  def test_output_as163; assert_in_epsilon(4.51248992747784, worksheet.output_as163, 0.001); end
  def test_output_c164; assert_equal("I.b", worksheet.output_c164); end
  def test_output_e164; assert_equal("Carbon Capture Storage (CCS)", worksheet.output_e164); end
  def test_output_f164; assert_equal("GW", worksheet.output_f164); end
  def test_output_h164; assert_in_delta(0, (worksheet.output_h164||0), 0.001); end
  def test_output_m164; assert_in_delta(0, (worksheet.output_m164||0), 0.001); end
  def test_output_r164; assert_in_delta(0, (worksheet.output_r164||0), 0.001); end
  def test_output_w164; assert_in_delta(0, (worksheet.output_w164||0), 0.001); end
  def test_output_ab164; assert_in_delta(0, (worksheet.output_ab164||0), 0.001); end
  def test_output_ac164; assert_in_delta(0, (worksheet.output_ac164||0), 0.001); end
  def test_output_am164; assert_equal("", worksheet.output_am164); end
  def test_output_an164; assert_equal("", worksheet.output_an164); end
  def test_output_ao164; assert_equal("", worksheet.output_ao164); end
  def test_output_aq164; assert_equal("Biomass", worksheet.output_aq164); end
  def test_output_as164; assert_in_epsilon(2.4855000805801772, worksheet.output_as164, 0.001); end
  def test_output_c165; assert_equal("II.a", worksheet.output_c165); end
  def test_output_e165; assert_equal("Nuclear power", worksheet.output_e165); end
  def test_output_f165; assert_equal("GW", worksheet.output_f165); end
  def test_output_g165; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g165); end
  def test_output_h165; assert_in_epsilon(5.5, worksheet.output_h165, 0.001); end
  def test_output_i165; assert_in_epsilon(5.485, worksheet.output_i165, 0.001); end
  def test_output_j165; assert_in_epsilon(5.485, worksheet.output_j165, 0.001); end
  def test_output_k165; assert_in_epsilon(5.485, worksheet.output_k165, 0.001); end
  def test_output_l165; assert_in_epsilon(5.528, worksheet.output_l165, 0.001); end
  def test_output_m165; assert_in_epsilon(5.632, worksheet.output_m165, 0.001); end
  def test_output_n165; assert_in_epsilon(5.693, worksheet.output_n165, 0.001); end
  def test_output_o165; assert_in_epsilon(5.713, worksheet.output_o165, 0.001); end
  def test_output_p165; assert_in_epsilon(5.722, worksheet.output_p165, 0.001); end
  def test_output_q165; assert_in_epsilon(5.713, worksheet.output_q165, 0.001); end
  def test_output_r165; assert_in_epsilon(5.713, worksheet.output_r165, 0.001); end
  def test_output_s165; assert_in_epsilon(5.738, worksheet.output_s165, 0.001); end
  def test_output_t165; assert_in_epsilon(5.761, worksheet.output_t165, 0.001); end
  def test_output_u165; assert_in_epsilon(5.761, worksheet.output_u165, 0.001); end
  def test_output_v165; assert_in_epsilon(5.761, worksheet.output_v165, 0.001); end
  def test_output_w165; assert_in_epsilon(5.802, worksheet.output_w165, 0.001); end
  def test_output_x165; assert_in_epsilon(5.825, worksheet.output_x165, 0.001); end
  def test_output_y165; assert_in_epsilon(5.825, worksheet.output_y165, 0.001); end
  def test_output_z165; assert_in_epsilon(5.825, worksheet.output_z165, 0.001); end
  def test_output_aa165; assert_in_epsilon(5.902, worksheet.output_aa165, 0.001); end
  def test_output_ab165; assert_in_epsilon(5.927, worksheet.output_ab165, 0.001); end
  def test_output_am165; assert_in_delta(0.000742433226471384, worksheet.output_am165, 0.001); end
  def test_output_an165; assert_in_delta(0.030131341746072682, worksheet.output_an165, 0.001); end
  def test_output_ao165; assert_in_delta(0.09090909090909083, worksheet.output_ao165, 0.001); end
  def test_output_aq165; assert_equal("Geothermal", worksheet.output_aq165); end
  def test_output_ac172; assert_in_delta(0, (worksheet.output_ac172||0), 0.001); end
  def test_output_ar165; assert_in_delta(0, (worksheet.output_ar165||0), 0.001); end
  def test_output_as165; assert_in_epsilon(6.5372011818426, worksheet.output_as165, 0.001); end
  def test_output_c166; assert_equal("III.a.1", worksheet.output_c166); end
  def test_output_e166; assert_equal("Onshore wind", worksheet.output_e166); end
  def test_output_f166; assert_equal("GW", worksheet.output_f166); end
  def test_output_h166; assert_in_delta(0, (worksheet.output_h166||0), 0.001); end
  def test_output_m166; assert_in_delta(0, (worksheet.output_m166||0), 0.001); end
  def test_output_r166; assert_in_delta(0, (worksheet.output_r166||0), 0.001); end
  def test_output_w166; assert_in_delta(0, (worksheet.output_w166||0), 0.001); end
  def test_output_ab166; assert_in_delta(0, (worksheet.output_ab166||0), 0.001); end
  def test_output_ac166; assert_in_delta(0.59, worksheet.output_ac166, 0.001); end
  def test_output_am166; assert_in_delta(0.079936294861505, worksheet.output_am166, 0.001); end
  def test_output_an166; assert_in_epsilon(20.67332249825865, worksheet.output_an166, 0.001); end
  def test_output_ao166; assert_equal("", worksheet.output_ao166); end
  def test_output_aq166; assert_equal("Wind", worksheet.output_aq166); end
  def test_output_ar166; assert_in_delta(0.7999999999999999, worksheet.output_ar166, 0.001); end
  def test_output_as166; assert_in_epsilon(29.293360273972603, worksheet.output_as166, 0.001); end
  def test_output_c167; assert_equal("III.a.2", worksheet.output_c167); end
  def test_output_e167; assert_equal("Offshore wind", worksheet.output_e167); end
  def test_output_f167; assert_equal("GW", worksheet.output_f167); end
  def test_output_g167; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g167); end
  def test_output_h167; assert_in_delta(0.005, worksheet.output_h167, 0.001); end
  def test_output_i167; assert_in_delta(0.005, worksheet.output_i167, 0.001); end
  def test_output_j167; assert_in_delta(0.005, worksheet.output_j167, 0.001); end
  def test_output_k167; assert_in_delta(0.005, worksheet.output_k167, 0.001); end
  def test_output_l167; assert_in_delta(0.005, worksheet.output_l167, 0.001); end
  def test_output_m167; assert_in_delta(0.005, worksheet.output_m167, 0.001); end
  def test_output_n167; assert_in_delta(0.005, worksheet.output_n167, 0.001); end
  def test_output_o167; assert_in_delta(0.005, worksheet.output_o167, 0.001); end
  def test_output_p167; assert_in_delta(0.006, worksheet.output_p167, 0.001); end
  def test_output_q167; assert_in_delta(0.01, worksheet.output_q167, 0.001); end
  def test_output_r167; assert_in_delta(0.014, worksheet.output_r167, 0.001); end
  def test_output_s167; assert_in_delta(0.026, worksheet.output_s167, 0.001); end
  def test_output_t167; assert_in_delta(0.031, worksheet.output_t167, 0.001); end
  def test_output_u167; assert_in_delta(0.067, worksheet.output_u167, 0.001); end
  def test_output_v167; assert_in_delta(0.096, worksheet.output_v167, 0.001); end
  def test_output_w167; assert_in_delta(0.167, worksheet.output_w167, 0.001); end
  def test_output_x167; assert_in_delta(0.212, worksheet.output_x167, 0.001); end
  def test_output_y167; assert_in_delta(0.276, worksheet.output_y167, 0.001); end
  def test_output_z167; assert_in_delta(0.324, worksheet.output_z167, 0.001); end
  def test_output_aa167; assert_in_delta(0.608, worksheet.output_aa167, 0.001); end
  def test_output_ab167; assert_in_delta(0.912, worksheet.output_ab167, 0.001); end
  def test_output_ac167; assert_in_delta(0.21, worksheet.output_ac167, 0.001); end
  def test_output_am167; assert_in_delta(0.11528440478787538, worksheet.output_am167, 0.001); end
  def test_output_an167; assert_in_epsilon(77.60047619047619, worksheet.output_an167, 0.001); end
  def test_output_ao167; assert_in_epsilon(3300.22, worksheet.output_ao167, 0.001); end
  def test_output_aq167; assert_equal("Solar", worksheet.output_aq167); end
  def test_output_ar167; assert_in_delta(0.967, worksheet.output_ar167, 0.001); end
  def test_output_as167; assert_in_epsilon(50.28136529680366, worksheet.output_as167, 0.001); end
  def test_output_c168; assert_equal("III.b", worksheet.output_c168); end
  def test_output_e168; assert_equal("Hydroelectric power stations", worksheet.output_e168); end
  def test_output_f168; assert_equal("GW", worksheet.output_f168); end
  def test_output_g168; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g168); end
  def test_output_h168; assert_in_epsilon(1.401, worksheet.output_h168, 0.001); end
  def test_output_i168; assert_in_epsilon(1.401, worksheet.output_i168, 0.001); end
  def test_output_j168; assert_in_epsilon(1.401, worksheet.output_j168, 0.001); end
  def test_output_k168; assert_in_epsilon(1.402, worksheet.output_k168, 0.001); end
  def test_output_l168; assert_in_epsilon(1.402, worksheet.output_l168, 0.001); end
  def test_output_m168; assert_in_epsilon(1.403, worksheet.output_m168, 0.001); end
  def test_output_n168; assert_in_epsilon(1.403, worksheet.output_n168, 0.001); end
  def test_output_o168; assert_in_epsilon(1.403, worksheet.output_o168, 0.001); end
  def test_output_p168; assert_in_epsilon(1.404, worksheet.output_p168, 0.001); end
  def test_output_q168; assert_in_epsilon(1.41, worksheet.output_q168, 0.001); end
  def test_output_r168; assert_in_epsilon(1.413, worksheet.output_r168, 0.001); end
  def test_output_s168; assert_in_epsilon(1.421, worksheet.output_s168, 0.001); end
  def test_output_t168; assert_in_epsilon(1.421, worksheet.output_t168, 0.001); end
  def test_output_u168; assert_in_epsilon(1.42, worksheet.output_u168, 0.001); end
  def test_output_v168; assert_in_epsilon(1.425, worksheet.output_v168, 0.001); end
  def test_output_w168; assert_in_epsilon(1.412, worksheet.output_w168, 0.001); end
  def test_output_x168; assert_in_epsilon(1.414, worksheet.output_x168, 0.001); end
  def test_output_y168; assert_in_epsilon(1.417, worksheet.output_y168, 0.001); end
  def test_output_z168; assert_in_epsilon(1.418, worksheet.output_z168, 0.001); end
  def test_output_aa168; assert_in_epsilon(1.417, worksheet.output_aa168, 0.001); end
  def test_output_ab168; assert_in_epsilon(1.425, worksheet.output_ab168, 0.001); end
  def test_output_ac168; assert_in_delta(0, (worksheet.output_ac168||0), 0.001); end
  def test_output_ad168; assert_in_delta(0, (worksheet.output_ad168||0), 0.001); end
  def test_output_ae168; assert_in_delta(0, (worksheet.output_ae168||0), 0.001); end
  def test_output_af168; assert_in_delta(0, (worksheet.output_af168||0), 0.001); end
  def test_output_ag168; assert_in_delta(0, (worksheet.output_ag168||0), 0.001); end
  def test_output_ah168; assert_in_delta(0, (worksheet.output_ah168||0), 0.001); end
  def test_output_ai168; assert_in_delta(0, (worksheet.output_ai168||0), 0.001); end
  def test_output_aj168; assert_in_delta(0, (worksheet.output_aj168||0), 0.001); end
  def test_output_ak168; assert_in_delta(0, (worksheet.output_ak168||0), 0.001); end
  def test_output_am168; assert_equal("", worksheet.output_am168); end
  def test_output_an168; assert_equal("", worksheet.output_an168); end
  def test_output_ao168; assert_in_delta(-1, worksheet.output_ao168, 0.001); end
  def test_output_aq168; assert_equal("Unabated fossil fuels", worksheet.output_aq168); end
  def test_output_ac162; assert_in_delta(0.5051367745980138, worksheet.output_ac162, 0.001); end
  def test_output_ar168; assert_in_epsilon(5.27842366448078, worksheet.output_ar168, 0.001); end
  def test_output_c169; assert_equal("III.c.Wave", worksheet.output_c169); end
  def test_output_e169; assert_equal("Wave [UNUSED]", worksheet.output_e169); end
  def test_output_f169; assert_equal("GW", worksheet.output_f169); end
  def test_output_g169; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g169); end
  def test_output_h169; assert_in_delta(0, (worksheet.output_h169||0), 0.001); end
  def test_output_i169; assert_in_delta(0, (worksheet.output_i169||0), 0.001); end
  def test_output_j169; assert_in_delta(0, (worksheet.output_j169||0), 0.001); end
  def test_output_k169; assert_in_delta(0, (worksheet.output_k169||0), 0.001); end
  def test_output_l169; assert_in_delta(0, (worksheet.output_l169||0), 0.001); end
  def test_output_m169; assert_in_delta(0, (worksheet.output_m169||0), 0.001); end
  def test_output_n169; assert_in_delta(0, (worksheet.output_n169||0), 0.001); end
  def test_output_o169; assert_in_delta(0, (worksheet.output_o169||0), 0.001); end
  def test_output_p169; assert_in_delta(0, (worksheet.output_p169||0), 0.001); end
  def test_output_q169; assert_in_delta(0, (worksheet.output_q169||0), 0.001); end
  def test_output_r169; assert_in_delta(0, (worksheet.output_r169||0), 0.001); end
  def test_output_s169; assert_in_delta(0, (worksheet.output_s169||0), 0.001); end
  def test_output_t169; assert_in_delta(0, (worksheet.output_t169||0), 0.001); end
  def test_output_u169; assert_in_delta(0, (worksheet.output_u169||0), 0.001); end
  def test_output_v169; assert_in_delta(0, (worksheet.output_v169||0), 0.001); end
  def test_output_w169; assert_in_delta(0, (worksheet.output_w169||0), 0.001); end
  def test_output_x169; assert_in_delta(0, (worksheet.output_x169||0), 0.001); end
  def test_output_y169; assert_in_delta(0, (worksheet.output_y169||0), 0.001); end
  def test_output_z169; assert_in_delta(0, (worksheet.output_z169||0), 0.001); end
  def test_output_aa169; assert_in_delta(0, (worksheet.output_aa169||0), 0.001); end
  def test_output_ab169; assert_in_delta(0, (worksheet.output_ab169||0), 0.001); end
  def test_output_am169; assert_equal("", worksheet.output_am169); end
  def test_output_an169; assert_equal("", worksheet.output_an169); end
  def test_output_ao169; assert_equal("", worksheet.output_ao169); end
  def test_output_aq169; assert_equal("Nuclear", worksheet.output_aq169); end
  def test_output_ac165; assert_in_epsilon(5.8245, worksheet.output_ac165, 0.001); end
  def test_output_ar169; assert_in_epsilon(5.8245, worksheet.output_ar169, 0.001); end
  def test_output_c170; assert_equal("III.c.TidalStream", worksheet.output_c170); end
  def test_output_e170; assert_equal("Tidal Stream  [UNUSED]", worksheet.output_e170); end
  def test_output_f170; assert_equal("GW", worksheet.output_f170); end
  def test_output_h170; assert_in_delta(0, (worksheet.output_h170||0), 0.001); end
  def test_output_m170; assert_in_delta(0, (worksheet.output_m170||0), 0.001); end
  def test_output_r170; assert_in_delta(0, (worksheet.output_r170||0), 0.001); end
  def test_output_w170; assert_in_delta(0, (worksheet.output_w170||0), 0.001); end
  def test_output_ab170; assert_in_delta(0, (worksheet.output_ab170||0), 0.001); end
  def test_output_am170; assert_equal("", worksheet.output_am170); end
  def test_output_an170; assert_equal("", worksheet.output_an170); end
  def test_output_ao170; assert_equal("", worksheet.output_ao170); end
  def test_output_c171; assert_equal("III.c.TidalRange", worksheet.output_c171); end
  def test_output_e171; assert_equal("Tidal Range  [UNUSED]", worksheet.output_e171); end
  def test_output_f171; assert_equal("GW", worksheet.output_f171); end
  def test_output_h171; assert_in_delta(0, (worksheet.output_h171||0), 0.001); end
  def test_output_m171; assert_in_delta(0, (worksheet.output_m171||0), 0.001); end
  def test_output_r171; assert_in_delta(0, (worksheet.output_r171||0), 0.001); end
  def test_output_w171; assert_in_delta(0, (worksheet.output_w171||0), 0.001); end
  def test_output_ab171; assert_in_delta(0, (worksheet.output_ab171||0), 0.001); end
  def test_output_am171; assert_equal("", worksheet.output_am171); end
  def test_output_an171; assert_equal("", worksheet.output_an171); end
  def test_output_ao171; assert_equal("", worksheet.output_ao171); end
  def test_output_c172; assert_equal("III.d", worksheet.output_c172); end
  def test_output_e172; assert_equal("Geothermal electricity", worksheet.output_e172); end
  def test_output_f172; assert_equal("GW", worksheet.output_f172); end
  def test_output_g172; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g172); end
  def test_output_h172; assert_in_delta(0, (worksheet.output_h172||0), 0.001); end
  def test_output_i172; assert_in_delta(0, (worksheet.output_i172||0), 0.001); end
  def test_output_j172; assert_in_delta(0, (worksheet.output_j172||0), 0.001); end
  def test_output_k172; assert_in_delta(0, (worksheet.output_k172||0), 0.001); end
  def test_output_l172; assert_in_delta(0, (worksheet.output_l172||0), 0.001); end
  def test_output_m172; assert_in_delta(0, (worksheet.output_m172||0), 0.001); end
  def test_output_n172; assert_in_delta(0, (worksheet.output_n172||0), 0.001); end
  def test_output_o172; assert_in_delta(0, (worksheet.output_o172||0), 0.001); end
  def test_output_p172; assert_in_delta(0, (worksheet.output_p172||0), 0.001); end
  def test_output_q172; assert_in_delta(0, (worksheet.output_q172||0), 0.001); end
  def test_output_r172; assert_in_delta(0, (worksheet.output_r172||0), 0.001); end
  def test_output_s172; assert_in_delta(0, (worksheet.output_s172||0), 0.001); end
  def test_output_t172; assert_in_delta(0, (worksheet.output_t172||0), 0.001); end
  def test_output_u172; assert_in_delta(0, (worksheet.output_u172||0), 0.001); end
  def test_output_v172; assert_in_delta(0, (worksheet.output_v172||0), 0.001); end
  def test_output_w172; assert_in_delta(0, (worksheet.output_w172||0), 0.001); end
  def test_output_x172; assert_in_delta(0, (worksheet.output_x172||0), 0.001); end
  def test_output_y172; assert_in_delta(0, (worksheet.output_y172||0), 0.001); end
  def test_output_z172; assert_in_delta(0, (worksheet.output_z172||0), 0.001); end
  def test_output_aa172; assert_in_delta(0, (worksheet.output_aa172||0), 0.001); end
  def test_output_ab172; assert_in_delta(0, (worksheet.output_ab172||0), 0.001); end
  def test_output_am172; assert_equal("", worksheet.output_am172); end
  def test_output_an172; assert_equal("", worksheet.output_an172); end
  def test_output_ao172; assert_equal("", worksheet.output_ao172); end
  def test_output_c173; assert_equal("IV.a", worksheet.output_c173); end
  def test_output_e173; assert_equal("Solar PV", worksheet.output_e173); end
  def test_output_f173; assert_equal("GW", worksheet.output_f173); end
  def test_output_h173; assert_in_delta(0, (worksheet.output_h173||0), 0.001); end
  def test_output_m173; assert_in_delta(0, (worksheet.output_m173||0), 0.001); end
  def test_output_r173; assert_in_delta(0, (worksheet.output_r173||0), 0.001); end
  def test_output_w173; assert_in_delta(0, (worksheet.output_w173||0), 0.001); end
  def test_output_ab173; assert_in_delta(0, (worksheet.output_ab173||0), 0.001); end
  def test_output_ac173; assert_in_delta(0.967, worksheet.output_ac173, 0.001); end
  def test_output_am173; assert_in_delta(0.10382319218064451, worksheet.output_am173, 0.001); end
  def test_output_an173; assert_in_epsilon(50.9972753844919, worksheet.output_an173, 0.001); end
  def test_output_ao173; assert_equal("", worksheet.output_ao173); end
  def test_output_c174; assert_equal("VII.c", worksheet.output_c174); end
  def test_output_e174; assert_equal("Standby / peaking gas", worksheet.output_e174); end
  def test_output_f174; assert_equal("GW", worksheet.output_f174); end
  def test_output_h174; assert_in_delta(0, (worksheet.output_h174||0), 0.001); end
  def test_output_m174; assert_in_delta(0, (worksheet.output_m174||0), 0.001); end
  def test_output_r174; assert_in_delta(0, (worksheet.output_r174||0), 0.001); end
  def test_output_w174; assert_in_delta(0, (worksheet.output_w174||0), 0.001); end
  def test_output_ab174; assert_in_delta(0, (worksheet.output_ab174||0), 0.001); end
  def test_output_am174; assert_equal("", worksheet.output_am174); end
  def test_output_an174; assert_equal("", worksheet.output_an174); end
  def test_output_ao174; assert_equal("", worksheet.output_ao174); end
  def test_output_e175; assert_equal("Total capacity", worksheet.output_e175); end
  def test_output_f175; assert_equal("GW", worksheet.output_f175); end
  def test_output_g175; assert_equal("IEA TAB7MAIN+TAB7AUTO", worksheet.output_g175); end
  def test_output_h175; assert_in_epsilon(14.141, worksheet.output_h175, 0.001); end
  def test_output_i175; assert_in_epsilon(14.098, worksheet.output_i175, 0.001); end
  def test_output_j175; assert_in_epsilon(14.039, worksheet.output_j175, 0.001); end
  def test_output_k175; assert_in_epsilon(14.053, worksheet.output_k175, 0.001); end
  def test_output_l175; assert_in_epsilon(14.899, worksheet.output_l175, 0.001); end
  def test_output_m175; assert_in_epsilon(14.917, worksheet.output_m175, 0.001); end
  def test_output_n175; assert_in_epsilon(14.852, worksheet.output_n175, 0.001); end
  def test_output_o175; assert_in_epsilon(14.693, worksheet.output_o175, 0.001); end
  def test_output_p175; assert_in_epsilon(15.404, worksheet.output_p175, 0.001); end
  def test_output_q175; assert_in_epsilon(15.522, worksheet.output_q175, 0.001); end
  def test_output_r175; assert_in_epsilon(15.685, worksheet.output_r175, 0.001); end
  def test_output_s175; assert_in_epsilon(15.533, worksheet.output_s175, 0.001); end
  def test_output_t175; assert_in_epsilon(15.552, worksheet.output_t175, 0.001); end
  def test_output_u175; assert_in_epsilon(15.615, worksheet.output_u175, 0.001); end
  def test_output_v175; assert_in_epsilon(15.648, worksheet.output_v175, 0.001); end
  def test_output_w175; assert_in_epsilon(16.096, worksheet.output_w175, 0.001); end
  def test_output_x175; assert_in_epsilon(16.26, worksheet.output_x175, 0.001); end
  def test_output_y175; assert_in_epsilon(16.38, worksheet.output_y175, 0.001); end
  def test_output_z175; assert_in_epsilon(16.76, worksheet.output_z175, 0.001); end
  def test_output_aa175; assert_in_epsilon(17.496, worksheet.output_aa175, 0.001); end
  def test_output_ab175; assert_in_epsilon(18.322, worksheet.output_ab175, 0.001); end
  def test_output_am175; assert_in_delta(0.06422204363254425, worksheet.output_am175, 0.001); end
  def test_output_an175; assert_in_epsilon(11.058409144581008, worksheet.output_an175, 0.001); end
  def test_output_ak175; assert_in_epsilon(155.19080520583458, worksheet.output_ak175, 0.001); end
  def test_output_ao175; assert_in_epsilon(9.974528336456727, worksheet.output_ao175, 0.001); end
  def test_output_e176; assert_equal("Share of intermittent over total", worksheet.output_e176); end
  def test_output_f176; assert_equal("%", worksheet.output_f176); end
  def test_output_h176; assert_in_delta(0, (worksheet.output_h176||0), 0.001); end
  def test_output_m176; assert_in_delta(0, (worksheet.output_m176||0), 0.001); end
  def test_output_r176; assert_in_delta(0, (worksheet.output_r176||0), 0.001); end
  def test_output_w176; assert_in_delta(0, (worksheet.output_w176||0), 0.001); end
  def test_output_ab176; assert_in_delta(0, (worksheet.output_ab176||0), 0.001); end
  def test_output_ac169; assert_in_delta(0, (worksheet.output_ac169||0), 0.001); end
  def test_output_ac170; assert_in_delta(0, (worksheet.output_ac170||0), 0.001); end
  def test_output_ac171; assert_in_delta(0, (worksheet.output_ac171||0), 0.001); end
  def test_output_ac175; assert_in_epsilon(12.869923664480782, worksheet.output_ac175, 0.001); end
  def test_output_ac176; assert_in_delta(0.13729685164152736, worksheet.output_ac176, 0.001); end
  def test_output_ad162; assert_in_delta(0.6917828565768758, worksheet.output_ad162, 0.001); end
  def test_output_ad163; assert_in_delta(0, (worksheet.output_ad163||0), 0.001); end
  def test_output_ad164; assert_in_delta(0, (worksheet.output_ad164||0), 0.001); end
  def test_output_ad165; assert_in_epsilon(5.8245, worksheet.output_ad165, 0.001); end
  def test_output_ad166; assert_in_epsilon(2.1026963470319635, worksheet.output_ad166, 0.001); end
  def test_output_ad167; assert_in_epsilon(2.03155, worksheet.output_ad167, 0.001); end
  def test_output_ad169; assert_in_delta(0, (worksheet.output_ad169||0), 0.001); end
  def test_output_ad170; assert_in_delta(0, (worksheet.output_ad170||0), 0.001); end
  def test_output_ad171; assert_in_delta(0, (worksheet.output_ad171||0), 0.001); end
  def test_output_ad172; assert_in_delta(0.05, worksheet.output_ad172, 0.001); end
  def test_output_ad173; assert_in_epsilon(3.132, worksheet.output_ad173, 0.001); end
  def test_output_ad174; assert_in_delta(0.9245074561565608, worksheet.output_ad174, 0.001); end
  def test_output_ad175; assert_in_epsilon(15.518071667375752, worksheet.output_ad175, 0.001); end
  def test_output_ad176; assert_in_delta(0.46824415447881174, worksheet.output_ad176, 0.001); end
  def test_output_ae162; assert_in_delta(0.9083244243752415, worksheet.output_ae162, 0.001); end
  def test_output_ae163; assert_in_delta(0, (worksheet.output_ae163||0), 0.001); end
  def test_output_ae164; assert_in_delta(0, (worksheet.output_ae164||0), 0.001); end
  def test_output_ae165; assert_in_epsilon(5.8245, worksheet.output_ae165, 0.001); end
  def test_output_ae166; assert_in_epsilon(3.6153926940639267, worksheet.output_ae166, 0.001); end
  def test_output_ae167; assert_in_epsilon(3.8531000000000004, worksheet.output_ae167, 0.001); end
  def test_output_ae169; assert_in_delta(0, (worksheet.output_ae169||0), 0.001); end
  def test_output_ae170; assert_in_delta(0, (worksheet.output_ae170||0), 0.001); end
  def test_output_ae171; assert_in_delta(0, (worksheet.output_ae171||0), 0.001); end
  def test_output_ae172; assert_in_delta(0.30000000000000004, worksheet.output_ae172, 0.001); end
  def test_output_ae173; assert_in_epsilon(5.297000000000001, worksheet.output_ae173, 0.001); end
  def test_output_ae174; assert_in_epsilon(3.952344144405445, worksheet.output_ae174, 0.001); end
  def test_output_ae175; assert_in_epsilon(24.511696270454962, worksheet.output_ae175, 0.001); end
  def test_output_ae176; assert_in_delta(0.520791892703515, worksheet.output_ae176, 0.001); end
  def test_output_af162; assert_in_epsilon(1.2487586164739366, worksheet.output_af162, 0.001); end
  def test_output_af163; assert_in_delta(0, (worksheet.output_af163||0), 0.001); end
  def test_output_af164; assert_in_delta(0.75208165457964, worksheet.output_af164, 0.001); end
  def test_output_af165; assert_in_epsilon(6.8245, worksheet.output_af165, 0.001); end
  def test_output_af166; assert_in_epsilon(5.365392694063926, worksheet.output_af166, 0.001); end
  def test_output_af167; assert_in_epsilon(6.011433333333334, worksheet.output_af167, 0.001); end
  def test_output_af169; assert_in_delta(0, (worksheet.output_af169||0), 0.001); end
  def test_output_af170; assert_in_delta(0, (worksheet.output_af170||0), 0.001); end
  def test_output_af171; assert_in_delta(0, (worksheet.output_af171||0), 0.001); end
  def test_output_af172; assert_in_delta(0.5728668636404334, worksheet.output_af172, 0.001); end
  def test_output_af173; assert_in_epsilon(7.547000000000001, worksheet.output_af173, 0.001); end
  def test_output_af174; assert_in_epsilon(8.375907458357338, worksheet.output_af174, 0.001); end
  def test_output_af175; assert_in_epsilon(36.69794062044861, worksheet.output_af175, 0.001); end
  def test_output_af176; assert_in_delta(0.5156645225169021, worksheet.output_af176, 0.001); end
  def test_output_ag162; assert_in_epsilon(1.6161848770920675, worksheet.output_ag162, 0.001); end
  def test_output_ag163; assert_in_delta(0, (worksheet.output_ag163||0), 0.001); end
  def test_output_ag164; assert_in_epsilon(1.50416330915928, worksheet.output_ag164, 0.001); end
  def test_output_ag165; assert_in_epsilon(7.8245, worksheet.output_ag165, 0.001); end
  def test_output_ag166; assert_in_epsilon(7.365392694063926, worksheet.output_ag166, 0.001); end
  def test_output_ag167; assert_in_epsilon(8.511433333333333, worksheet.output_ag167, 0.001); end
  def test_output_ag169; assert_in_delta(0, (worksheet.output_ag169||0), 0.001); end
  def test_output_ag170; assert_in_delta(0, (worksheet.output_ag170||0), 0.001); end
  def test_output_ag171; assert_in_delta(0, (worksheet.output_ag171||0), 0.001); end
  def test_output_ag172; assert_in_epsilon(1.2457337272808666, worksheet.output_ag172, 0.001); end
  def test_output_ag173; assert_in_epsilon(11.031829058948745, worksheet.output_ag173, 0.001); end
  def test_output_ag174; assert_in_epsilon(15.123016204246705, worksheet.output_ag174, 0.001); end
  def test_output_ag175; assert_in_epsilon(54.22225320412492, worksheet.output_ag175, 0.001); end
  def test_output_ag176; assert_in_delta(0.4962658963109808, worksheet.output_ag176, 0.001); end
  def test_output_ah162; assert_in_epsilon(1.8349881121772056, worksheet.output_ah162, 0.001); end
  def test_output_ah163; assert_in_delta(0, (worksheet.output_ah163||0), 0.001); end
  def test_output_ah164; assert_in_epsilon(2.2562449637389204, worksheet.output_ah164, 0.001); end
  def test_output_ah165; assert_in_epsilon(7.037, worksheet.output_ah165, 0.001); end
  def test_output_ah166; assert_in_epsilon(9.312652968036529, worksheet.output_ah166, 0.001); end
  def test_output_ah167; assert_in_epsilon(11.207533333333332, worksheet.output_ah167, 0.001); end
  def test_output_ah169; assert_in_delta(0, (worksheet.output_ah169||0), 0.001); end
  def test_output_ah170; assert_in_delta(0, (worksheet.output_ah170||0), 0.001); end
  def test_output_ah171; assert_in_delta(0, (worksheet.output_ah171||0), 0.001); end
  def test_output_ah172; assert_in_epsilon(2.3186005909213003, worksheet.output_ah172, 0.001); end
  def test_output_ah173; assert_in_epsilon(15.676177670202907, worksheet.output_ah173, 0.001); end
  def test_output_ah174; assert_in_epsilon(22.921179542650318, worksheet.output_ah174, 0.001); end
  def test_output_ah175; assert_in_epsilon(72.56437718106051, worksheet.output_ah175, 0.001); end
  def test_output_ah176; assert_in_delta(0.4988172623773323, worksheet.output_ah176, 0.001); end
  def test_output_ai162; assert_in_epsilon(2.0528083911202692, worksheet.output_ai162, 0.001); end
  def test_output_ai163; assert_in_delta(0, (worksheet.output_ai163||0), 0.001); end
  def test_output_ai164; assert_in_epsilon(3.00832661831856, worksheet.output_ai164, 0.001); end
  def test_output_ai165; assert_in_epsilon(8.036999999999999, worksheet.output_ai165, 0.001); end
  def test_output_ai166; assert_in_epsilon(10.299956621004565, worksheet.output_ai166, 0.001); end
  def test_output_ai167; assert_in_epsilon(12.685983333333333, worksheet.output_ai167, 0.001); end
  def test_output_ai169; assert_in_delta(0, (worksheet.output_ai169||0), 0.001); end
  def test_output_ai170; assert_in_delta(0, (worksheet.output_ai170||0), 0.001); end
  def test_output_ai171; assert_in_delta(0, (worksheet.output_ai171||0), 0.001); end
  def test_output_ai172; assert_in_epsilon(3.6914674545617334, worksheet.output_ai172, 0.001); end
  def test_output_ai173; assert_in_epsilon(22.64608414872799, worksheet.output_ai173, 0.001); end
  def test_output_ai174; assert_in_epsilon(32.53036375100266, worksheet.output_ai174, 0.001); end
  def test_output_ai175; assert_in_epsilon(94.95199031806911, worksheet.output_ai175, 0.001); end
  def test_output_ai176; assert_in_delta(0.4805799641503906, worksheet.output_ai176, 0.001); end
  def test_output_aj162; assert_in_epsilon(2.2691542358502232, worksheet.output_aj162, 0.001); end
  def test_output_aj163; assert_in_delta(0, (worksheet.output_aj163||0), 0.001); end
  def test_output_aj164; assert_in_epsilon(3.7604082728982, worksheet.output_aj164, 0.001); end
  def test_output_aj165; assert_in_epsilon(5, worksheet.output_aj165, 0.001); end
  def test_output_aj166; assert_in_epsilon(11.537260273972603, worksheet.output_aj166, 0.001); end
  def test_output_aj167; assert_in_epsilon(14.564433333333334, worksheet.output_aj167, 0.001); end
  def test_output_aj169; assert_in_delta(0, (worksheet.output_aj169||0), 0.001); end
  def test_output_aj170; assert_in_delta(0, (worksheet.output_aj170||0), 0.001); end
  def test_output_aj171; assert_in_delta(0, (worksheet.output_aj171||0), 0.001); end
  def test_output_aj172; assert_in_epsilon(4.964334318202167, worksheet.output_aj172, 0.001); end
  def test_output_aj173; assert_in_epsilon(33.37717674322795, worksheet.output_aj173, 0.001); end
  def test_output_aj174; assert_in_epsilon(40.877230225170536, worksheet.output_aj174, 0.001); end
  def test_output_aj175; assert_in_epsilon(116.34999740265502, worksheet.output_aj175, 0.001); end
  def test_output_aj176; assert_in_delta(0.5112064604925949, worksheet.output_aj176, 0.001); end
  def test_output_am176; assert_in_delta(0.033489847325140154, worksheet.output_am176, 0.001); end
  def test_output_an176; assert_in_epsilon(2.7346386251647723, worksheet.output_an176, 0.001); end
  def test_output_ak176; assert_in_delta(0.5127541252539655, worksheet.output_ak176, 0.001); end
  def test_output_ao176; assert_equal("", worksheet.output_ao176); end
  def test_output_e177; assert_equal("Total generation excl. Back-up", worksheet.output_e177); end
  def test_output_f177; assert_equal("GW", worksheet.output_f177); end
  def test_output_h177; assert_in_delta(0, (worksheet.output_h177||0), 0.001); end
  def test_output_m177; assert_in_delta(0, (worksheet.output_m177||0), 0.001); end
  def test_output_r177; assert_in_delta(0, (worksheet.output_r177||0), 0.001); end
  def test_output_w177; assert_in_delta(0, (worksheet.output_w177||0), 0.001); end
  def test_output_ab177; assert_in_delta(0, (worksheet.output_ab177||0), 0.001); end
  def test_output_am177; assert_in_delta(0.05235805235291324, worksheet.output_am177, 0.001); end
  def test_output_an177; assert_in_epsilon(6.700893909278314, worksheet.output_an177, 0.001); end
  def test_output_ao177; assert_equal("", worksheet.output_ao177); end
  def test_output_e178; assert_equal("Share of intermittent over total excl. Back-up", worksheet.output_e178); end
  def test_output_f178; assert_equal("%", worksheet.output_f178); end
  def test_output_h178; assert_in_delta(0, (worksheet.output_h178||0), 0.001); end
  def test_output_m178; assert_in_delta(0, (worksheet.output_m178||0), 0.001); end
  def test_output_r178; assert_in_delta(0, (worksheet.output_r178||0), 0.001); end
  def test_output_w178; assert_in_delta(0, (worksheet.output_w178||0), 0.001); end
  def test_output_ab178; assert_in_delta(0, (worksheet.output_ab178||0), 0.001); end
  def test_output_ac177; assert_in_epsilon(12.869923664480782, worksheet.output_ac177, 0.001); end
  def test_output_ac178; assert_in_delta(0.13729685164152736, worksheet.output_ac178, 0.001); end
  def test_output_ad177; assert_in_epsilon(14.59356421121919, worksheet.output_ad177, 0.001); end
  def test_output_ad178; assert_in_delta(0.49790758733537094, worksheet.output_ad178, 0.001); end
  def test_output_ae177; assert_in_epsilon(20.559352126049518, worksheet.output_ae177, 0.001); end
  def test_output_ae178; assert_in_delta(0.6209092881817779, worksheet.output_ae178, 0.001); end
  def test_output_af177; assert_in_epsilon(28.322033162091273, worksheet.output_af177, 0.001); end
  def test_output_af178; assert_in_delta(0.6681662265944449, worksheet.output_af178, 0.001); end
  def test_output_ag177; assert_in_epsilon(39.099236999878215, worksheet.output_ag177, 0.001); end
  def test_output_ag178; assert_in_delta(0.688214327211291, worksheet.output_ag178, 0.001); end
  def test_output_ah177; assert_in_epsilon(49.643197638410186, worksheet.output_ah177, 0.001); end
  def test_output_ah178; assert_in_delta(0.7291303883206495, worksheet.output_ah178, 0.001); end
  def test_output_ai177; assert_in_epsilon(62.421626567066454, worksheet.output_ai177, 0.001); end
  def test_output_ai178; assert_in_delta(0.7310290777834564, worksheet.output_ai178, 0.001); end
  def test_output_aj177; assert_in_epsilon(75.47276717748449, worksheet.output_aj177, 0.001); end
  def test_output_aj178; assert_in_delta(0.7880838688564475, worksheet.output_aj178, 0.001); end
  def test_output_am178; assert_in_delta(0.04514112372183643, worksheet.output_am178, 0.001); end
  def test_output_an178; assert_in_epsilon(4.847866634694708, worksheet.output_an178, 0.001); end
  def test_output_ao178; assert_equal("", worksheet.output_ao178); end
  def test_output_e179; assert_equal("Share of back-up over total excl. Back-up", worksheet.output_e179); end
  def test_output_f179; assert_equal("%", worksheet.output_f179); end
  def test_output_h179; assert_in_delta(0, (worksheet.output_h179||0), 0.001); end
  def test_output_m179; assert_in_delta(0, (worksheet.output_m179||0), 0.001); end
  def test_output_r179; assert_in_delta(0, (worksheet.output_r179||0), 0.001); end
  def test_output_w179; assert_in_delta(0, (worksheet.output_w179||0), 0.001); end
  def test_output_ab179; assert_in_delta(0, (worksheet.output_ab179||0), 0.001); end
  def test_output_ac179; assert_in_delta(0, (worksheet.output_ac179||0), 0.001); end
  def test_output_ad179; assert_in_delta(0.06335035381184133, worksheet.output_ad179, 0.001); end
  def test_output_ae179; assert_in_delta(0.19224069514319314, worksheet.output_ae179, 0.001); end
  def test_output_af179; assert_in_delta(0.2957382123811788, worksheet.output_af179, 0.001); end
  def test_output_ag179; assert_in_delta(0.386785455795309, worksheet.output_ag179, 0.001); end
  def test_output_ah179; assert_in_delta(0.4617184354159255, worksheet.output_ah179, 0.001); end
  def test_output_ai179; assert_in_delta(0.5211393156513103, worksheet.output_ai179, 0.001); end
  def test_output_aj179; assert_in_delta(0.541615628443067, worksheet.output_aj179, 0.001); end
  def test_output_am179; assert_equal("", worksheet.output_am179); end
  def test_output_an179; assert_equal("", worksheet.output_an179); end
  def test_output_ak179; assert_in_delta(0.565845379333509, worksheet.output_ak179, 0.001); end
  def test_output_ao179; assert_equal("", worksheet.output_ao179); end
  def test_output_e180; assert_equal("Number of onshore wind turbines", worksheet.output_e180); end
  def test_output_f180; assert_equal("units", worksheet.output_f180); end
  def test_output_h180; assert_in_delta(0, (worksheet.output_h180||0), 0.001); end
  def test_output_m180; assert_in_delta(0, (worksheet.output_m180||0), 0.001); end
  def test_output_r180; assert_in_delta(0, (worksheet.output_r180||0), 0.001); end
  def test_output_w180; assert_in_delta(0, (worksheet.output_w180||0), 0.001); end
  def test_output_ab180; assert_in_delta(0, (worksheet.output_ab180||0), 0.001); end
  def test_output_ac180; assert_in_epsilon(235.99999999999997, worksheet.output_ac180, 0.001); end
  def test_output_ad180; assert_in_epsilon(841.0785388127854, worksheet.output_ad180, 0.001); end
  def test_output_ae180; assert_in_epsilon(1446.1570776255708, worksheet.output_ae180, 0.001); end
  def test_output_af180; assert_in_epsilon(2146.1570776255703, worksheet.output_af180, 0.001); end
  def test_output_ag180; assert_in_epsilon(2946.1570776255703, worksheet.output_ag180, 0.001); end
  def test_output_ah180; assert_in_epsilon(3725.0611872146114, worksheet.output_ah180, 0.001); end
  def test_output_ai180; assert_in_epsilon(4119.982648401826, worksheet.output_ai180, 0.001); end
  def test_output_aj180; assert_in_epsilon(4614.904109589041, worksheet.output_aj180, 0.001); end
  def test_output_am180; assert_in_delta(0.079936294861505, worksheet.output_am180, 0.001); end
  def test_output_an180; assert_in_epsilon(20.67332249825865, worksheet.output_an180, 0.001); end
  def test_output_ak180; assert_in_epsilon(5114.904109589041, worksheet.output_ak180, 0.001); end
  def test_output_ao180; assert_equal("", worksheet.output_ao180); end
  def test_output_e181; assert_equal("Number of offshore wind turbines", worksheet.output_e181); end
  def test_output_f181; assert_equal("units", worksheet.output_f181); end
  def test_output_h181; assert_in_delta(0, (worksheet.output_h181||0), 0.001); end
  def test_output_m181; assert_in_delta(0, (worksheet.output_m181||0), 0.001); end
  def test_output_r181; assert_in_delta(0, (worksheet.output_r181||0), 0.001); end
  def test_output_w181; assert_in_delta(0, (worksheet.output_w181||0), 0.001); end
  def test_output_ab181; assert_in_delta(0, (worksheet.output_ab181||0), 0.001); end
  def test_output_ac181; assert_in_epsilon(35, worksheet.output_ac181, 0.001); end
  def test_output_ad181; assert_in_epsilon(338.5916666666667, worksheet.output_ad181, 0.001); end
  def test_output_ae181; assert_in_epsilon(642.1833333333334, worksheet.output_ae181, 0.001); end
  def test_output_af181; assert_in_epsilon(1001.9055555555556, worksheet.output_af181, 0.001); end
  def test_output_ag181; assert_in_epsilon(1418.572222222222, worksheet.output_ag181, 0.001); end
  def test_output_ah181; assert_in_epsilon(1867.922222222222, worksheet.output_ah181, 0.001); end
  def test_output_ai181; assert_in_epsilon(2114.3305555555553, worksheet.output_ai181, 0.001); end
  def test_output_aj181; assert_in_epsilon(2427.4055555555556, worksheet.output_aj181, 0.001); end
  def test_output_am181; assert_in_delta(0.11528440478787538, worksheet.output_am181, 0.001); end
  def test_output_an181; assert_in_epsilon(77.60047619047619, worksheet.output_an181, 0.001); end
  def test_output_ak181; assert_in_epsilon(2751.0166666666664, worksheet.output_ak181, 0.001); end
  def test_output_ao181; assert_equal("", worksheet.output_ao181); end
  def test_output_am182; assert_equal("", worksheet.output_am182); end
  def test_output_an182; assert_equal("", worksheet.output_an182); end
  def test_output_ao182; assert_equal("", worksheet.output_ao182); end
  def test_output_b183; assert_equal("Electricity grid (net of distribution losses)", worksheet.output_b183); end
  def test_output_am183; assert_equal("", worksheet.output_am183); end
  def test_output_an183; assert_equal("", worksheet.output_an183); end
  def test_output_ao183; assert_equal("", worksheet.output_ao183); end
  def test_output_c184; assert_equal("V.01", worksheet.output_c184); end
  def test_output_e184; assert_equal("Electricity (delivered to end user)", worksheet.output_e184); end
  def test_output_f184; assert_equal("TWh/yr", worksheet.output_f184); end
  def test_output_ac184; assert_in_epsilon(-62.41629875588583, worksheet.output_ac184, 0.001); end
  def test_output_ad184; assert_in_epsilon(-63.47423599848578, worksheet.output_ad184, 0.001); end
  def test_output_ae184; assert_in_epsilon(-67.02387001148244, worksheet.output_ae184, 0.001); end
  def test_output_af184; assert_in_epsilon(-67.86857423632098, worksheet.output_af184, 0.001); end
  def test_output_ag184; assert_in_epsilon(-67.87583384246227, worksheet.output_ag184, 0.001); end
  def test_output_ah184; assert_in_epsilon(-66.82269159154139, worksheet.output_ah184, 0.001); end
  def test_output_ai184; assert_in_epsilon(-65.7255197986781, worksheet.output_ai184, 0.001); end
  def test_output_aj184; assert_in_epsilon(-64.12867871624005, worksheet.output_aj184, 0.001); end
  def test_output_ak184; assert_in_epsilon(-62.84231946961448, worksheet.output_ak184, 0.001); end
  def test_output_am184; assert_in_delta(0.00017007156416992686, worksheet.output_am184, 0.001); end
  def test_output_an184; assert_in_delta(0.006825472227932616, worksheet.output_an184, 0.001); end
  def test_output_ao184; assert_equal("", worksheet.output_ao184); end
  def test_output_c185; assert_equal("V.02", worksheet.output_c185); end
  def test_output_e185; assert_equal("Electricity (supplied to grid)", worksheet.output_e185); end
  def test_output_f185; assert_equal("TWh/yr", worksheet.output_f185); end
  def test_output_ac185; assert_in_epsilon(62.416298755885826, worksheet.output_ac185, 0.001); end
  def test_output_ad185; assert_in_epsilon(63.47423599848578, worksheet.output_ad185, 0.001); end
  def test_output_ae185; assert_in_epsilon(67.02387001148244, worksheet.output_ae185, 0.001); end
  def test_output_af185; assert_in_epsilon(67.86857423632098, worksheet.output_af185, 0.001); end
  def test_output_ag185; assert_in_epsilon(67.87583384246227, worksheet.output_ag185, 0.001); end
  def test_output_ah185; assert_in_epsilon(66.82269159154139, worksheet.output_ah185, 0.001); end
  def test_output_ai185; assert_in_epsilon(65.72551979867814, worksheet.output_ai185, 0.001); end
  def test_output_aj185; assert_in_epsilon(64.12867871624005, worksheet.output_aj185, 0.001); end
  def test_output_ak185; assert_in_epsilon(62.842319469614495, worksheet.output_ak185, 0.001); end
  def test_output_am185; assert_in_delta(0.00017007156416992686, worksheet.output_am185, 0.001); end
  def test_output_an185; assert_in_delta(0.00682547222793306, worksheet.output_an185, 0.001); end
  def test_output_ao185; assert_equal("", worksheet.output_ao185); end
  def test_output_e186; assert_equal("Total electricity grid", worksheet.output_e186); end
  def test_output_f186; assert_equal("TWh/yr", worksheet.output_f186); end
  def test_output_ad186; assert_in_delta(0, (worksheet.output_ad186||0), 0.001); end
  def test_output_ae186; assert_in_delta(0, (worksheet.output_ae186||0), 0.001); end
  def test_output_af186; assert_in_delta(0, (worksheet.output_af186||0), 0.001); end
  def test_output_ag186; assert_in_delta(0, (worksheet.output_ag186||0), 0.001); end
  def test_output_ah186; assert_in_delta(0, (worksheet.output_ah186||0), 0.001); end
  def test_output_ai186; assert_in_delta(0, (worksheet.output_ai186||0), 0.001); end
  def test_output_aj186; assert_in_delta(0, (worksheet.output_aj186||0), 0.001); end
  def test_output_am186; assert_equal("", worksheet.output_am186); end
  def test_output_an186; assert_equal("", worksheet.output_an186); end
  def test_output_ak186; assert_in_delta(0, (worksheet.output_ak186||0), 0.001); end
  def test_output_ao186; assert_equal("", worksheet.output_ao186); end
  def test_output_c187; assert_equal("V.02", worksheet.output_c187); end
  def test_output_e187; assert_equal("Losses", worksheet.output_e187); end
  def test_output_f187; assert_equal("TWh/yr", worksheet.output_f187); end
  def test_output_ac187; assert_in_epsilon(-4.635618867363156, worksheet.output_ac187, 0.001); end
  def test_output_ad187; assert_in_epsilon(-4.709223125863488, worksheet.output_ad187, 0.001); end
  def test_output_ae187; assert_in_epsilon(-4.959155525004022, worksheet.output_ae187, 0.001); end
  def test_output_af187; assert_in_epsilon(-5.002601142397836, worksheet.output_af187, 0.001); end
  def test_output_ag187; assert_in_epsilon(-4.983590992080963, worksheet.output_ag187, 0.001); end
  def test_output_ah187; assert_in_epsilon(-4.889711361472791, worksheet.output_ah187, 0.001); end
  def test_output_ai187; assert_in_epsilon(-4.7889294425848306, worksheet.output_ai187, 0.001); end
  def test_output_aj187; assert_in_epsilon(-4.647225289243181, worksheet.output_aj187, 0.001); end
  def test_output_ak187; assert_in_epsilon(-4.52410270527816, worksheet.output_ak187, 0.001); end
  def test_output_am187; assert_in_delta(-0.0006085759989393758, worksheet.output_am187, 0.001); end
  def test_output_an187; assert_in_delta(-0.02405636987762738, worksheet.output_an187, 0.001); end
  def test_output_ao187; assert_equal("", worksheet.output_ao187); end
  def test_output_e188; assert_equal("Demand (for charting)", worksheet.output_e188); end
  def test_output_f188; assert_equal("TWh/yr", worksheet.output_f188); end
  def test_output_ac188; assert_in_epsilon(67.05191762324898, worksheet.output_ac188, 0.001); end
  def test_output_ad188; assert_in_epsilon(68.18345912434927, worksheet.output_ad188, 0.001); end
  def test_output_ae188; assert_in_epsilon(71.98302553648647, worksheet.output_ae188, 0.001); end
  def test_output_af188; assert_in_epsilon(72.87117537871882, worksheet.output_af188, 0.001); end
  def test_output_ag188; assert_in_epsilon(72.85942483454323, worksheet.output_ag188, 0.001); end
  def test_output_ah188; assert_in_epsilon(71.71240295301418, worksheet.output_ah188, 0.001); end
  def test_output_ai188; assert_in_epsilon(70.51444924126294, worksheet.output_ai188, 0.001); end
  def test_output_aj188; assert_in_epsilon(68.77590400548323, worksheet.output_aj188, 0.001); end
  def test_output_am188; assert_in_delta(0.00011699427448541577, worksheet.output_am188, 0.001); end
  def test_output_an188; assert_in_delta(0.004690463193175232, worksheet.output_an188, 0.001); end
  def test_output_ak188; assert_in_epsilon(67.36642217489265, worksheet.output_ak188, 0.001); end
  def test_output_ao188; assert_equal("", worksheet.output_ao188); end
  def test_output_e189; assert_equal("Dummy for charting", worksheet.output_e189); end
  def test_output_f189; assert_equal("TWh/yr", worksheet.output_f189); end
  def test_output_ac189; assert_in_epsilon(101.22277868222034, worksheet.output_ac189, 0.001); end
  def test_output_ad189; assert_in_epsilon(85.18743235631662, worksheet.output_ad189, 0.001); end
  def test_output_ae189; assert_in_epsilon(103.18202875159457, worksheet.output_ae189, 0.001); end
  def test_output_af189; assert_in_epsilon(131.77806402723053, worksheet.output_af189, 0.001); end
  def test_output_ag189; assert_in_epsilon(174.0215361846447, worksheet.output_ag189, 0.001); end
  def test_output_ah189; assert_in_epsilon(205.52622728877463, worksheet.output_ah189, 0.001); end
  def test_output_ai189; assert_in_epsilon(247.46666336464807, worksheet.output_ai189, 0.001); end
  def test_output_aj189; assert_in_epsilon(260.94151092127987, worksheet.output_aj189, 0.001); end
  def test_output_ak189; assert_in_epsilon(315.7157579290303, worksheet.output_ak189, 0.001); end
  def test_output_am189; assert_in_delta(0.02884618158461416, worksheet.output_am189, 0.001); end
  def test_output_an189; assert_in_epsilon(2.1190188813151543, worksheet.output_an189, 0.001); end
  def test_output_ao189; assert_equal("", worksheet.output_ao189); end
  def test_output_c190; assert_equal("Z.01", worksheet.output_c190); end
  def test_output_e190; assert_equal("Unallocated", worksheet.output_e190); end
  def test_output_f190; assert_equal("TWh/yr", worksheet.output_f190); end
  def test_output_ac190; assert_in_epsilon(-1.6173785868557502, worksheet.output_ac190, 0.001); end
  def test_output_ad190; assert_in_epsilon(-1.6161029792864383, worksheet.output_ad190, 0.001); end
  def test_output_ae190; assert_in_epsilon(-1.6146417544757554, worksheet.output_ae190, 0.001); end
  def test_output_af190; assert_in_epsilon(-1.6119662156983168, worksheet.output_af190, 0.001); end
  def test_output_ag190; assert_in_epsilon(-1.6099630215273635, worksheet.output_ag190, 0.001); end
  def test_output_ah190; assert_in_epsilon(-1.6101805800049362, worksheet.output_ah190, 0.001); end
  def test_output_ai190; assert_in_epsilon(-1.6105051124609702, worksheet.output_ai190, 0.001); end
  def test_output_aj190; assert_in_epsilon(-1.610752712103448, worksheet.output_aj190, 0.001); end
  def test_output_ak190; assert_in_epsilon(-1.6111541287037596, worksheet.output_ak190, 0.001); end
  def test_output_am190; assert_in_delta(-9.639310500864084e-05, worksheet.output_am190, 0.001); end
  def test_output_an190; assert_in_delta(-0.0038484855695357645, worksheet.output_an190, 0.001); end
  def test_output_ao190; assert_equal("", worksheet.output_ao190); end
  def test_output_am191; assert_equal("", worksheet.output_am191); end
  def test_output_an191; assert_equal("", worksheet.output_an191); end
  def test_output_ao191; assert_equal("", worksheet.output_ao191); end
  def test_output_e192; assert_equal("Net balance (should be zero!)", worksheet.output_e192); end
  def test_output_f192; assert_equal("TWh/yr", worksheet.output_f192); end
  def test_output_ac28; assert_in_delta(0.60143532, worksheet.output_ac28, 0.001); end
  def test_output_ac29; assert_in_epsilon(1.9247814410958906, worksheet.output_ac29, 0.001); end
  def test_output_ac30; assert_in_delta(0, (worksheet.output_ac30||0), 0.001); end
  def test_output_ac31; assert_in_delta(0, (worksheet.output_ac31||0), 0.001); end
  def test_output_ac32; assert_in_delta(0, (worksheet.output_ac32||0), 0.001); end
  def test_output_ac33; assert_in_delta(0.3760614, worksheet.output_ac33, 0.001); end
  def test_output_ac35; assert_in_epsilon(126.0651074204068, worksheet.output_ac35, 0.001); end
  def test_output_ac52; assert_in_epsilon(561.0125562561379, worksheet.output_ac52, 0.001); end
  def test_output_ac67; assert_in_epsilon(421.32339291307494, worksheet.output_ac67, 0.001); end
  def test_output_ac84; assert_in_delta(-1.6930901125533637e-15, worksheet.output_ac84, 0.001); end
  def test_output_ac86; assert_in_epsilon(-1.617378586855752, worksheet.output_ac86, 0.001); end
  def test_output_ac186; assert_in_delta(0, (worksheet.output_ac186||0), 0.001); end
  def test_output_ac192; assert_in_epsilon(-3.234757173711502, worksheet.output_ac192, 0.001); end
  def test_output_ad192; assert_in_epsilon(-3.232205958572934, worksheet.output_ad192, 0.001); end
  def test_output_ae192; assert_in_epsilon(-3.229283508951582, worksheet.output_ae192, 0.001); end
  def test_output_af192; assert_in_epsilon(-3.2239324313966335, worksheet.output_af192, 0.001); end
  def test_output_ag192; assert_in_epsilon(-3.2199260430546417, worksheet.output_ag192, 0.001); end
  def test_output_ah192; assert_in_epsilon(-3.220361160009844, worksheet.output_ah192, 0.001); end
  def test_output_ai192; assert_in_epsilon(-3.2210102249219688, worksheet.output_ai192, 0.001); end
  def test_output_aj192; assert_in_epsilon(-3.221505424206981, worksheet.output_aj192, 0.001); end
  def test_output_am192; assert_in_delta(-9.639310500919596e-05, worksheet.output_am192, 0.001); end
  def test_output_an192; assert_in_delta(-0.003848485569553972, worksheet.output_an192, 0.001); end
  def test_output_ak192; assert_in_epsilon(-3.2223082574074624, worksheet.output_ak192, 0.001); end
  def test_output_ao192; assert_equal("", worksheet.output_ao192); end
  def test_output_am193; assert_equal("", worksheet.output_am193); end
  def test_output_an193; assert_equal("", worksheet.output_an193); end
  def test_output_ao193; assert_equal("", worksheet.output_ao193); end
  def test_output_am194; assert_equal("", worksheet.output_am194); end
  def test_output_an194; assert_equal("", worksheet.output_an194); end
  def test_output_ao194; assert_equal("", worksheet.output_ao194); end
  def test_output_b195; assert_equal("Heat demand", worksheet.output_b195); end
  def test_output_am195; assert_equal("", worksheet.output_am195); end
  def test_output_an195; assert_equal("", worksheet.output_an195); end
  def test_output_ao195; assert_equal("", worksheet.output_ao195); end
  def test_output_c196; assert_equal("IX.a", worksheet.output_c196); end
  def test_output_d196; assert_equal("H.01", worksheet.output_d196); end
  def test_output_e196; assert_equal("Heating and cooling / Domestic space heating and hot water", worksheet.output_e196); end
  def test_output_f196; assert_equal("TWh/yr", worksheet.output_f196); end
  def test_output_g196; assert_equal("NIR", worksheet.output_g196); end
  def test_output_h196; assert_in_epsilon(84.44099755264888, worksheet.output_h196, 0.001); end
  def test_output_m196; assert_in_epsilon(94.56243360318945, worksheet.output_m196, 0.001); end
  def test_output_r196; assert_in_epsilon(90.32120404322806, worksheet.output_r196, 0.001); end
  def test_output_w196; assert_in_epsilon(94.89659740822027, worksheet.output_w196, 0.001); end
  def test_output_ab196; assert_in_epsilon(101.53865837019805, worksheet.output_ab196, 0.001); end
  def test_output_ac196; assert_in_epsilon(72.19613855748818, worksheet.output_ac196, 0.001); end
  def test_output_ad196; assert_in_epsilon(72.12403777651502, worksheet.output_ad196, 0.001); end
  def test_output_ae196; assert_in_epsilon(67.12509503661677, worksheet.output_ae196, 0.001); end
  def test_output_af196; assert_in_epsilon(59.77868579577105, worksheet.output_af196, 0.001); end
  def test_output_ag196; assert_in_epsilon(52.91580790526237, worksheet.output_ag196, 0.001); end
  def test_output_ah196; assert_in_epsilon(46.36434164122021, worksheet.output_ah196, 0.001); end
  def test_output_ai196; assert_in_epsilon(40.13287333628548, worksheet.output_ai196, 0.001); end
  def test_output_aj196; assert_in_epsilon(34.09018203188147, worksheet.output_aj196, 0.001); end
  def test_output_ak196; assert_in_epsilon(28.349018355400858, worksheet.output_ak196, 0.001); end
  def test_output_am196; assert_in_delta(-0.023098893789396335, worksheet.output_am196, 0.001); end
  def test_output_an196; assert_in_delta(-0.607333315578545, worksheet.output_an196, 0.001); end
  def test_output_ao196; assert_in_delta(-0.6642742367210279, worksheet.output_ao196, 0.001); end
  def test_output_c197; assert_equal("IX.b", worksheet.output_c197); end
  def test_output_d197; assert_equal("H.01", worksheet.output_d197); end
  def test_output_e197; assert_equal("Heating and cooling / Domestic hot water [UNUSED - See IX.a]", worksheet.output_e197); end
  def test_output_f197; assert_equal("TWh/yr", worksheet.output_f197); end
  def test_output_ac197; assert_in_delta(0, (worksheet.output_ac197||0), 0.001); end
  def test_output_ad197; assert_in_delta(0, (worksheet.output_ad197||0), 0.001); end
  def test_output_ae197; assert_in_delta(0, (worksheet.output_ae197||0), 0.001); end
  def test_output_af197; assert_in_delta(0, (worksheet.output_af197||0), 0.001); end
  def test_output_ag197; assert_in_delta(0, (worksheet.output_ag197||0), 0.001); end
  def test_output_ah197; assert_in_delta(0, (worksheet.output_ah197||0), 0.001); end
  def test_output_ai197; assert_in_delta(0, (worksheet.output_ai197||0), 0.001); end
  def test_output_aj197; assert_in_delta(0, (worksheet.output_aj197||0), 0.001); end
  def test_output_ak197; assert_in_delta(0, (worksheet.output_ak197||0), 0.001); end
  def test_output_am197; assert_equal("", worksheet.output_am197); end
  def test_output_an197; assert_equal("", worksheet.output_an197); end
  def test_output_ao197; assert_equal("", worksheet.output_ao197); end
  def test_output_c198; assert_equal("IX.c", worksheet.output_c198); end
  def test_output_d198; assert_equal("H.01", worksheet.output_d198); end
  def test_output_e198; assert_equal("Heating and cooling / Commercial heating and cooling", worksheet.output_e198); end
  def test_output_f198; assert_equal("TWh/yr", worksheet.output_f198); end
  def test_output_g198; assert_equal("NIR", worksheet.output_g198); end
  def test_output_h198; assert_in_epsilon(18.777508136172, worksheet.output_h198, 0.001); end
  def test_output_m198; assert_in_epsilon(24.458952929553558, worksheet.output_m198, 0.001); end
  def test_output_r198; assert_in_epsilon(26.586950857843473, worksheet.output_r198, 0.001); end
  def test_output_w198; assert_in_epsilon(28.632374256644443, worksheet.output_w198, 0.001); end
  def test_output_ab198; assert_in_epsilon(31.673084122563054, worksheet.output_ab198, 0.001); end
  def test_output_ac198; assert_in_epsilon(26.175415496219273, worksheet.output_ac198, 0.001); end
  def test_output_ad198; assert_in_epsilon(24.33504688374735, worksheet.output_ad198, 0.001); end
  def test_output_ae198; assert_in_epsilon(21.00247346858872, worksheet.output_ae198, 0.001); end
  def test_output_af198; assert_in_epsilon(17.672349516538077, worksheet.output_af198, 0.001); end
  def test_output_ag198; assert_in_epsilon(14.805176579938184, worksheet.output_ag198, 0.001); end
  def test_output_ah198; assert_in_epsilon(12.185452782374263, worksheet.output_ah198, 0.001); end
  def test_output_ai198; assert_in_epsilon(9.86744435983999, worksheet.output_ai198, 0.001); end
  def test_output_aj198; assert_in_epsilon(7.795455770533307, worksheet.output_aj198, 0.001); end
  def test_output_ak198; assert_in_epsilon(5.8359869053076014, worksheet.output_ak198, 0.001); end
  def test_output_am198; assert_in_delta(-0.03682429801313303, worksheet.output_am198, 0.001); end
  def test_output_an198; assert_in_delta(-0.7770431989455702, worksheet.output_an198, 0.001); end
  def test_output_ao198; assert_in_delta(-0.6892033350226346, worksheet.output_ao198, 0.001); end
  def test_output_c199; assert_equal("IX.d", worksheet.output_c199); end
  def test_output_d199; assert_equal("H.01", worksheet.output_d199); end
  def test_output_e199; assert_equal("Heating and cooling / Commercial hot water [UNUSED - See IX.c]", worksheet.output_e199); end
  def test_output_f199; assert_equal("TWh/yr", worksheet.output_f199); end
  def test_output_ac199; assert_in_delta(0, (worksheet.output_ac199||0), 0.001); end
  def test_output_ad199; assert_in_delta(0, (worksheet.output_ad199||0), 0.001); end
  def test_output_ae199; assert_in_delta(0, (worksheet.output_ae199||0), 0.001); end
  def test_output_af199; assert_in_delta(0, (worksheet.output_af199||0), 0.001); end
  def test_output_ag199; assert_in_delta(0, (worksheet.output_ag199||0), 0.001); end
  def test_output_ah199; assert_in_delta(0, (worksheet.output_ah199||0), 0.001); end
  def test_output_ai199; assert_in_delta(0, (worksheet.output_ai199||0), 0.001); end
  def test_output_aj199; assert_in_delta(0, (worksheet.output_aj199||0), 0.001); end
  def test_output_ak199; assert_in_delta(0, (worksheet.output_ak199||0), 0.001); end
  def test_output_am199; assert_equal("", worksheet.output_am199); end
  def test_output_an199; assert_equal("", worksheet.output_an199); end
  def test_output_ao199; assert_equal("", worksheet.output_ao199); end
  def test_output_c200; assert_equal("IX", worksheet.output_c200); end
  def test_output_d200; assert_equal("H.01", worksheet.output_d200); end
  def test_output_e200; assert_equal("Heating and cooling / Heating", worksheet.output_e200); end
  def test_output_f200; assert_equal("TWh/yr", worksheet.output_f200); end
  def test_output_g200; assert_equal("sum of above", worksheet.output_g200); end
  def test_output_h200; assert_in_epsilon(103.21850568882088, worksheet.output_h200, 0.001); end
  def test_output_m200; assert_in_epsilon(119.02138653274301, worksheet.output_m200, 0.001); end
  def test_output_r200; assert_in_epsilon(116.90815490107154, worksheet.output_r200, 0.001); end
  def test_output_w200; assert_in_epsilon(123.52897166486471, worksheet.output_w200, 0.001); end
  def test_output_ab200; assert_in_epsilon(133.21174249276112, worksheet.output_ab200, 0.001); end
  def test_output_ac200; assert_in_epsilon(98.37155405370746, worksheet.output_ac200, 0.001); end
  def test_output_ad200; assert_in_epsilon(96.45908466026238, worksheet.output_ad200, 0.001); end
  def test_output_ae200; assert_in_epsilon(88.12756850520549, worksheet.output_ae200, 0.001); end
  def test_output_af200; assert_in_epsilon(77.45103531230913, worksheet.output_af200, 0.001); end
  def test_output_ag200; assert_in_epsilon(67.72098448520055, worksheet.output_ag200, 0.001); end
  def test_output_ah200; assert_in_epsilon(58.54979442359447, worksheet.output_ah200, 0.001); end
  def test_output_ai200; assert_in_epsilon(50.000317696125464, worksheet.output_ai200, 0.001); end
  def test_output_aj200; assert_in_epsilon(41.88563780241478, worksheet.output_aj200, 0.001); end
  def test_output_ak200; assert_in_epsilon(34.18500526070846, worksheet.output_ak200, 0.001); end
  def test_output_am200; assert_in_delta(-0.026078052224499326, worksheet.output_am200, 0.001); end
  def test_output_an200; assert_in_delta(-0.6524909503610705, worksheet.output_an200, 0.001); end
  def test_output_ao200; assert_in_delta(-0.668809337699888, worksheet.output_ao200, 0.001); end
  def test_output_c201; assert_equal("XII.a", worksheet.output_c201); end
  def test_output_d201; assert_equal("V.04", worksheet.output_d201); end
  def test_output_e201; assert_equal("Liquid hydrocarbons / Domestic passenger transport", worksheet.output_e201); end
  def test_output_f201; assert_equal("TWh/yr", worksheet.output_f201); end
  def test_output_g201; assert_equal("NIR", worksheet.output_g201); end
  def test_output_h201; assert_in_epsilon(76.09414241632976, worksheet.output_h201, 0.001); end
  def test_output_m201; assert_in_epsilon(83.48000514362698, worksheet.output_m201, 0.001); end
  def test_output_r201; assert_in_epsilon(90.93630383532414, worksheet.output_r201, 0.001); end
  def test_output_w201; assert_in_epsilon(96.4549491070562, worksheet.output_w201, 0.001); end
  def test_output_ab201; assert_in_epsilon(93.85021878870344, worksheet.output_ab201, 0.001); end
  def test_output_ac201; assert_in_epsilon(62.82116266127325, worksheet.output_ac201, 0.001); end
  def test_output_ad201; assert_in_epsilon(58.385847796458016, worksheet.output_ad201, 0.001); end
  def test_output_ae201; assert_in_epsilon(46.29470274156892, worksheet.output_ae201, 0.001); end
  def test_output_af201; assert_in_epsilon(34.61141166032602, worksheet.output_af201, 0.001); end
  def test_output_ag201; assert_in_epsilon(23.450965665415065, worksheet.output_ag201, 0.001); end
  def test_output_ah201; assert_in_epsilon(14.629710273397775, worksheet.output_ah201, 0.001); end
  def test_output_ai201; assert_in_epsilon(9.345347406256323, worksheet.output_ai201, 0.001); end
  def test_output_aj201; assert_in_epsilon(5.0425888660069225, worksheet.output_aj201, 0.001); end
  def test_output_am201; assert_in_delta(-0.08656572933311979, worksheet.output_am201, 0.001); end
  def test_output_an201; assert_in_delta(-0.9732642688211841, worksheet.output_an201, 0.001); end
  def test_output_ak201; assert_in_epsilon(1.679569717252468, worksheet.output_ak201, 0.001); end
  def test_output_ao201; assert_in_delta(-0.977927739719266, worksheet.output_ao201, 0.001); end
  def test_output_c202; assert_equal("XII.b", worksheet.output_c202); end
  def test_output_d202; assert_equal("V.04", worksheet.output_d202); end
  def test_output_e202; assert_equal("Liquid hydrocarbons / Domestic freight", worksheet.output_e202); end
  def test_output_f202; assert_equal("TWh/yr", worksheet.output_f202); end
  def test_output_g202; assert_equal("included above", worksheet.output_g202); end
  def test_output_ac202; assert_in_epsilon(34.68000000000001, worksheet.output_ac202, 0.001); end
  def test_output_ad202; assert_in_epsilon(32.85692914948175, worksheet.output_ad202, 0.001); end
  def test_output_ae202; assert_in_epsilon(28.328410307168177, worksheet.output_ae202, 0.001); end
  def test_output_af202; assert_in_epsilon(24.149732726715452, worksheet.output_af202, 0.001); end
  def test_output_ag202; assert_in_epsilon(20.316517056262402, worksheet.output_ag202, 0.001); end
  def test_output_ah202; assert_in_epsilon(16.823366132081247, worksheet.output_ah202, 0.001); end
  def test_output_ai202; assert_in_epsilon(13.66386497857766, worksheet.output_ai202, 0.001); end
  def test_output_aj202; assert_in_epsilon(10.830580808290705, worksheet.output_aj202, 0.001); end
  def test_output_am202; assert_in_delta(-0.03507254969441087, worksheet.output_am202, 0.001); end
  def test_output_an202; assert_in_delta(-0.7602346302799051, worksheet.output_an202, 0.001); end
  def test_output_ak202; assert_in_epsilon(8.315063021892893, worksheet.output_ak202, 0.001); end
  def test_output_ao202; assert_equal("", worksheet.output_ao202); end
  def test_output_c203; assert_equal("XII.c", worksheet.output_c203); end
  def test_output_d203; assert_equal("V.04", worksheet.output_d203); end
  def test_output_e203; assert_equal("Liquid hydrocarbons / International aviation", worksheet.output_e203); end
  def test_output_f203; assert_equal("TWh/yr", worksheet.output_f203); end
  def test_output_g203; assert_equal("NIR", worksheet.output_g203); end
  def test_output_h203; assert_in_delta(0.04897084896840799, worksheet.output_h203, 0.001); end
  def test_output_m203; assert_in_delta(0.04363466575560185, worksheet.output_m203, 0.001); end
  def test_output_r203; assert_in_delta(0.04182748174958541, worksheet.output_r203, 0.001); end
  def test_output_w203; assert_in_delta(0.033969658316219994, worksheet.output_w203, 0.001); end
  def test_output_ab203; assert_in_delta(0.04027234856855431, worksheet.output_ab203, 0.001); end
  def test_output_ac203; assert_in_epsilon(16.785, worksheet.output_ac203, 0.001); end
  def test_output_ad203; assert_in_epsilon(15.7327303267589, worksheet.output_ad203, 0.001); end
  def test_output_ae203; assert_in_epsilon(14.74642856922962, worksheet.output_ae203, 0.001); end
  def test_output_af203; assert_in_epsilon(13.821959127941774, worksheet.output_af203, 0.001); end
  def test_output_ag203; assert_in_epsilon(12.955445668596457, worksheet.output_ag203, 0.001); end
  def test_output_ah203; assert_in_epsilon(12.143254868454257, worksheet.output_ah203, 0.001); end
  def test_output_ai203; assert_in_epsilon(11.38198118167965, worksheet.output_ai203, 0.001); end
  def test_output_aj203; assert_in_epsilon(10.66843255976232, worksheet.output_aj203, 0.001); end
  def test_output_am203; assert_in_delta(-0.012865000000000015, worksheet.output_am203, 0.001); end
  def test_output_an203; assert_in_delta(-0.4042527812248684, worksheet.output_an203, 0.001); end
  def test_output_ak203; assert_in_epsilon(9.999617067140584, worksheet.output_ak203, 0.001); end
  def test_output_ao203; assert_in_epsilon(203.19529736132455, worksheet.output_ao203, 0.001); end
  def test_output_c204; assert_equal("XII.d", worksheet.output_c204); end
  def test_output_d204; assert_equal("V.04", worksheet.output_d204); end
  def test_output_e204; assert_equal("Liquid hydrocarbons / Domestic aviation [UNUSED - see XII.a]", worksheet.output_e204); end
  def test_output_f204; assert_equal("TWh/yr", worksheet.output_f204); end
  def test_output_g204; assert_equal("NIR", worksheet.output_g204); end
  def test_output_h204; assert_in_delta(0.00019822267564840673, worksheet.output_h204, 0.001); end
  def test_output_m204; assert_in_delta(0.00016885733041112003, worksheet.output_m204, 0.001); end
  def test_output_r204; assert_in_delta(9.599764530042064e-05, worksheet.output_r204, 0.001); end
  def test_output_w204; assert_in_delta(8.332281211333842e-05, worksheet.output_w204, 0.001); end
  def test_output_ab204; assert_in_delta(9.821877600125116e-05, worksheet.output_ab204, 0.001); end
  def test_output_ac204; assert_in_delta(0, (worksheet.output_ac204||0), 0.001); end
  def test_output_ad204; assert_in_delta(0, (worksheet.output_ad204||0), 0.001); end
  def test_output_ae204; assert_in_delta(0, (worksheet.output_ae204||0), 0.001); end
  def test_output_af204; assert_in_delta(0, (worksheet.output_af204||0), 0.001); end
  def test_output_ag204; assert_in_delta(0, (worksheet.output_ag204||0), 0.001); end
  def test_output_ah204; assert_in_delta(0, (worksheet.output_ah204||0), 0.001); end
  def test_output_ai204; assert_in_delta(0, (worksheet.output_ai204||0), 0.001); end
  def test_output_aj204; assert_in_delta(0, (worksheet.output_aj204||0), 0.001); end
  def test_output_ak204; assert_in_delta(0, (worksheet.output_ak204||0), 0.001); end
  def test_output_am204; assert_equal("", worksheet.output_am204); end
  def test_output_an204; assert_equal("", worksheet.output_an204); end
  def test_output_ao204; assert_in_delta(-1, worksheet.output_ao204, 0.001); end
  def test_output_c205; assert_equal("XII.e", worksheet.output_c205); end
  def test_output_d205; assert_equal("V.04", worksheet.output_d205); end
  def test_output_e205; assert_equal("Liquid hydrocarbons / International shipping [UNUSED]", worksheet.output_e205); end
  def test_output_f205; assert_equal("TWh/yr", worksheet.output_f205); end
  def test_output_g205; assert_equal("NIR", worksheet.output_g205); end
  def test_output_h205; assert_in_epsilon(1.46355654342888, worksheet.output_h205, 0.001); end
  def test_output_m205; assert_in_epsilon(1.4822031244787972, worksheet.output_m205, 0.001); end
  def test_output_r205; assert_in_epsilon(1.7934453107431383, worksheet.output_r205, 0.001); end
  def test_output_w205; assert_in_epsilon(1.9689245884651752, worksheet.output_w205, 0.001); end
  def test_output_ab205; assert_in_epsilon(1.7434372672705813, worksheet.output_ab205, 0.001); end
  def test_output_ac205; assert_in_delta(0, (worksheet.output_ac205||0), 0.001); end
  def test_output_ad205; assert_in_delta(0, (worksheet.output_ad205||0), 0.001); end
  def test_output_ae205; assert_in_delta(0, (worksheet.output_ae205||0), 0.001); end
  def test_output_af205; assert_in_delta(0, (worksheet.output_af205||0), 0.001); end
  def test_output_ag205; assert_in_delta(0, (worksheet.output_ag205||0), 0.001); end
  def test_output_ah205; assert_in_delta(0, (worksheet.output_ah205||0), 0.001); end
  def test_output_ai205; assert_in_delta(0, (worksheet.output_ai205||0), 0.001); end
  def test_output_aj205; assert_in_delta(0, (worksheet.output_aj205||0), 0.001); end
  def test_output_am205; assert_equal("", worksheet.output_am205); end
  def test_output_an205; assert_equal("", worksheet.output_an205); end
  def test_output_ak205; assert_in_delta(0, (worksheet.output_ak205||0), 0.001); end
  def test_output_ao205; assert_in_delta(-1, worksheet.output_ao205, 0.001); end
  def test_output_c206; assert_equal("XII.f", worksheet.output_c206); end
  def test_output_d206; assert_equal("V.04", worksheet.output_d206); end
  def test_output_e206; assert_equal("Liquid hydrocarbons / National navigation [UNUSED - see XII.a]", worksheet.output_e206); end
  def test_output_f206; assert_equal("TWh/yr", worksheet.output_f206); end
  def test_output_g206; assert_equal("NIR", worksheet.output_g206); end
  def test_output_h206; assert_in_delta(0.045451997884405966, worksheet.output_h206, 0.001); end
  def test_output_m206; assert_in_delta(0.047880372786496615, worksheet.output_m206, 0.001); end
  def test_output_r206; assert_in_delta(0.05661766881251676, worksheet.output_r206, 0.001); end
  def test_output_w206; assert_in_delta(0.04362834192871655, worksheet.output_w206, 0.001); end
  def test_output_ab206; assert_in_delta(0.04079216546155834, worksheet.output_ab206, 0.001); end
  def test_output_ac206; assert_in_delta(0, (worksheet.output_ac206||0), 0.001); end
  def test_output_ad206; assert_in_delta(0, (worksheet.output_ad206||0), 0.001); end
  def test_output_ae206; assert_in_delta(0, (worksheet.output_ae206||0), 0.001); end
  def test_output_af206; assert_in_delta(0, (worksheet.output_af206||0), 0.001); end
  def test_output_ag206; assert_in_delta(0, (worksheet.output_ag206||0), 0.001); end
  def test_output_ah206; assert_in_delta(0, (worksheet.output_ah206||0), 0.001); end
  def test_output_ai206; assert_in_delta(0, (worksheet.output_ai206||0), 0.001); end
  def test_output_aj206; assert_in_delta(0, (worksheet.output_aj206||0), 0.001); end
  def test_output_ak206; assert_in_delta(0, (worksheet.output_ak206||0), 0.001); end
  def test_output_am206; assert_equal("", worksheet.output_am206); end
  def test_output_an206; assert_equal("", worksheet.output_an206); end
  def test_output_ao206; assert_in_delta(-1, worksheet.output_ao206, 0.001); end
  def test_output_c207; assert_equal("VIII.a", worksheet.output_c207); end
  def test_output_d207; assert_equal("V.04", worksheet.output_d207); end
  def test_output_e207; assert_equal("Liquid hydrocarbons / H2 Production for Transport", worksheet.output_e207); end
  def test_output_f207; assert_equal("TWh/yr", worksheet.output_f207); end
  def test_output_h207; assert_in_delta(0, (worksheet.output_h207||0), 0.001); end
  def test_output_m207; assert_in_delta(0, (worksheet.output_m207||0), 0.001); end
  def test_output_r207; assert_in_delta(0, (worksheet.output_r207||0), 0.001); end
  def test_output_w207; assert_in_delta(0, (worksheet.output_w207||0), 0.001); end
  def test_output_ab207; assert_in_delta(0, (worksheet.output_ab207||0), 0.001); end
  def test_output_ac207; assert_in_delta(0, (worksheet.output_ac207||0), 0.001); end
  def test_output_ad207; assert_in_delta(0, (worksheet.output_ad207||0), 0.001); end
  def test_output_ae207; assert_in_delta(0, (worksheet.output_ae207||0), 0.001); end
  def test_output_af207; assert_in_delta(0, (worksheet.output_af207||0), 0.001); end
  def test_output_ag207; assert_in_delta(0, (worksheet.output_ag207||0), 0.001); end
  def test_output_ah207; assert_in_delta(0, (worksheet.output_ah207||0), 0.001); end
  def test_output_ai207; assert_in_delta(0, (worksheet.output_ai207||0), 0.001); end
  def test_output_aj207; assert_in_delta(0, (worksheet.output_aj207||0), 0.001); end
  def test_output_ak207; assert_in_delta(0, (worksheet.output_ak207||0), 0.001); end
  def test_output_am207; assert_equal("", worksheet.output_am207); end
  def test_output_an207; assert_equal("", worksheet.output_an207); end
  def test_output_ao207; assert_equal("", worksheet.output_ao207); end
  def test_output_c208; assert_equal("XII", worksheet.output_c208); end
  def test_output_d208; assert_equal("V.04", worksheet.output_d208); end
  def test_output_e208; assert_equal("Liquid hydrocarbons / Transport", worksheet.output_e208); end
  def test_output_f208; assert_equal("TWh/yr", worksheet.output_f208); end
  def test_output_g208; assert_equal("NIR", worksheet.output_g208); end
  def test_output_h208; assert_in_epsilon(77.6523200292871, worksheet.output_h208, 0.001); end
  def test_output_m208; assert_in_epsilon(85.05389216397828, worksheet.output_m208, 0.001); end
  def test_output_r208; assert_in_epsilon(92.82829029427467, worksheet.output_r208, 0.001); end
  def test_output_w208; assert_in_epsilon(98.5015550185784, worksheet.output_w208, 0.001); end
  def test_output_ab208; assert_in_epsilon(95.67481878878019, worksheet.output_ab208, 0.001); end
  def test_output_am208; assert_in_delta(-0.04264549213565849, worksheet.output_am208, 0.001); end
  def test_output_an208; assert_in_delta(-0.8250510005699828, worksheet.output_an208, 0.001); end
  def test_output_ak208; assert_in_epsilon(19.994249806285943, worksheet.output_ak208, 0.001); end
  def test_output_ao208; assert_in_delta(-0.7425157445554109, worksheet.output_ao208, 0.001); end
  def test_output_c209; assert_equal("XI.a", worksheet.output_c209); end
  def test_output_d209; assert_equal("V.03", worksheet.output_d209); end
  def test_output_e209; assert_equal("Solid hydrocarbons / Steel Industry", worksheet.output_e209); end
  def test_output_f209; assert_equal("TWh/yr", worksheet.output_f209); end
  def test_output_g209; assert_equal("NIR", worksheet.output_g209); end
  def test_output_h209; assert_in_epsilon(49.598996927580004, worksheet.output_h209, 0.001); end
  def test_output_m209; assert_in_epsilon(47.47824117438111, worksheet.output_m209, 0.001); end
  def test_output_r209; assert_in_epsilon(45.53663005277778, worksheet.output_r209, 0.001); end
  def test_output_w209; assert_in_epsilon(39.978313344444445, worksheet.output_w209, 0.001); end
  def test_output_ab209; assert_in_epsilon(25.32300002102325, worksheet.output_ab209, 0.001); end
  def test_output_ad209; assert_in_epsilon(18.401788208247197, worksheet.output_ad209, 0.001); end
  def test_output_ae209; assert_in_epsilon(10.929039870763194, worksheet.output_ae209, 0.001); end
  def test_output_af209; assert_in_epsilon(5.065125317571619, worksheet.output_af209, 0.001); end
  def test_output_ag209; assert_in_delta(0.529639101812797, worksheet.output_ag209, 0.001); end
  def test_output_ah209; assert_in_delta(0.47364456161334106, worksheet.output_ah209, 0.001); end
  def test_output_ai209; assert_in_delta(0.42343440042020325, worksheet.output_ai209, 0.001); end
  def test_output_aj209; assert_in_delta(0.3784227079441065, worksheet.output_aj209, 0.001); end
  def test_output_am209; assert_in_delta(-0.10050116481001548, worksheet.output_am209, 0.001); end
  def test_output_an209; assert_in_delta(-0.9855447964474838, worksheet.output_an209, 0.001); end
  def test_output_ak209; assert_in_delta(0.36446057698464257, worksheet.output_ak209, 0.001); end
  def test_output_ao209; assert_in_delta(-0.9926518558930376, worksheet.output_ao209, 0.001); end
  def test_output_c210; assert_equal("XI.b", worksheet.output_c210); end
  def test_output_d210; assert_equal("V.03", worksheet.output_d210); end
  def test_output_e210; assert_equal("Solid hydrocarbons / Cement Industry", worksheet.output_e210); end
  def test_output_f210; assert_equal("TWh/yr", worksheet.output_f210); end
  def test_output_g210; assert_equal("Wallonia", worksheet.output_g210); end
  def test_output_h210; assert_in_epsilon(2.9910763386102457, worksheet.output_h210, 0.001); end
  def test_output_m210; assert_in_epsilon(3.15483230771447, worksheet.output_m210, 0.001); end
  def test_output_r210; assert_in_epsilon(3.2718012631200932, worksheet.output_r210, 0.001); end
  def test_output_w210; assert_in_epsilon(3.0785461794612274, worksheet.output_w210, 0.001); end
  def test_output_ab210; assert_in_epsilon(2.7582265202523124, worksheet.output_ab210, 0.001); end
  def test_output_ad210; assert_in_epsilon(3.3264932578357636, worksheet.output_ad210, 0.001); end
  def test_output_ae210; assert_in_epsilon(2.7623253714533256, worksheet.output_ae210, 0.001); end
  def test_output_af210; assert_in_epsilon(1.7388309869516376, worksheet.output_af210, 0.001); end
  def test_output_ag210; assert_in_epsilon(1.474772665253538, worksheet.output_ag210, 0.001); end
  def test_output_ah210; assert_in_epsilon(1.2530300423087528, worksheet.output_ah210, 0.001); end
  def test_output_ai210; assert_in_epsilon(1.0080860571333898, worksheet.output_ai210, 0.001); end
  def test_output_aj210; assert_in_delta(0.7398560640949493, worksheet.output_aj210, 0.001); end
  def test_output_am210; assert_in_delta(-0.05847894029513012, worksheet.output_am210, 0.001); end
  def test_output_an210; assert_in_delta(-0.9102154632913776, worksheet.output_an210, 0.001); end
  def test_output_ak210; assert_in_delta(0.46854958326761703, worksheet.output_ak210, 0.001); end
  def test_output_ao210; assert_in_delta(-0.8433508442364528, worksheet.output_ao210, 0.001); end
  def test_output_c211; assert_equal("XI.c", worksheet.output_c211); end
  def test_output_d211; assert_equal("V.03", worksheet.output_d211); end
  def test_output_e211; assert_equal("Solid hydrocarbons / Lime Industry", worksheet.output_e211); end
  def test_output_f211; assert_equal("TWh/yr", worksheet.output_f211); end
  def test_output_g211; assert_equal("Wallonia", worksheet.output_g211); end
  def test_output_h211; assert_in_delta(0.8431569802063185, worksheet.output_h211, 0.001); end
  def test_output_m211; assert_in_delta(0.8893182856261694, worksheet.output_m211, 0.001); end
  def test_output_r211; assert_in_delta(0.9222907611008397, worksheet.output_r211, 0.001); end
  def test_output_w211; assert_in_delta(0.867813925908115, worksheet.output_w211, 0.001); end
  def test_output_ab211; assert_in_delta(0.7775187525375837, worksheet.output_ab211, 0.001); end
  def test_output_ad211; assert_in_epsilon(2.0456060039917854, worksheet.output_ad211, 0.001); end
  def test_output_ae211; assert_in_epsilon(1.7380936235824787, worksheet.output_ae211, 0.001); end
  def test_output_af211; assert_in_epsilon(1.6798645036080824, worksheet.output_af211, 0.001); end
  def test_output_ag211; assert_in_epsilon(1.704959467368807, worksheet.output_ag211, 0.001); end
  def test_output_ah211; assert_in_epsilon(1.7412152081327361, worksheet.output_ah211, 0.001); end
  def test_output_ai211; assert_in_epsilon(1.7872629289942406, worksheet.output_ai211, 0.001); end
  def test_output_aj211; assert_in_epsilon(1.8416021599813095, worksheet.output_aj211, 0.001); end
  def test_output_am211; assert_in_delta(-0.006384413332671146, worksheet.output_am211, 0.001); end
  def test_output_an211; assert_in_delta(-0.22600915564173285, worksheet.output_an211, 0.001); end
  def test_output_ak211; assert_in_epsilon(1.8867926645999762, worksheet.output_ak211, 0.001); end
  def test_output_ao211; assert_in_epsilon(1.23777150506218, worksheet.output_ao211, 0.001); end
  def test_output_c212; assert_equal("XI.d", worksheet.output_c212); end
  def test_output_d212; assert_equal("V.03", worksheet.output_d212); end
  def test_output_e212; assert_equal("Solid hydrocarbons / Glass Industry", worksheet.output_e212); end
  def test_output_f212; assert_equal("TWh/yr", worksheet.output_f212); end
  def test_output_g212; assert_equal("Wallonia", worksheet.output_g212); end
  def test_output_h212; assert_in_epsilon(4.684092681239687, worksheet.output_h212, 0.001); end
  def test_output_m212; assert_in_epsilon(3.9457478221960205, worksheet.output_m212, 0.001); end
  def test_output_r212; assert_in_epsilon(4.179959715528829, worksheet.output_r212, 0.001); end
  def test_output_w212; assert_in_epsilon(3.98041346388646, worksheet.output_w212, 0.001); end
  def test_output_ab212; assert_in_epsilon(4.641852511987877, worksheet.output_ab212, 0.001); end
  def test_output_ad212; assert_in_delta(0.029955196627606418, worksheet.output_ad212, 0.001); end
  def test_output_ae212; assert_in_delta(0.054594363132776845, worksheet.output_ae212, 0.001); end
  def test_output_af212; assert_in_delta(0.0780176263462411, worksheet.output_af212, 0.001); end
  def test_output_ag212; assert_in_delta(0.09789766699078081, worksheet.output_ag212, 0.001); end
  def test_output_ah212; assert_in_delta(0.11522785614876425, worksheet.output_ah212, 0.001); end
  def test_output_ai212; assert_in_delta(0.1302504728937513, worksheet.output_ai212, 0.001); end
  def test_output_aj212; assert_in_delta(0.14317480403598865, worksheet.output_aj212, 0.001); end
  def test_output_am212; assert_equal("", worksheet.output_am212); end
  def test_output_an212; assert_equal("", worksheet.output_an212); end
  def test_output_ak212; assert_in_delta(0.15418303614454265, worksheet.output_ak212, 0.001); end
  def test_output_ao212; assert_in_delta(-0.9670836922672211, worksheet.output_ao212, 0.001); end
  def test_output_c213; assert_equal("XI.e", worksheet.output_c213); end
  def test_output_d213; assert_equal("V.03", worksheet.output_d213); end
  def test_output_e213; assert_equal("Solid hydrocarbons / Chemicals Industry", worksheet.output_e213); end
  def test_output_f213; assert_equal("TWh/yr", worksheet.output_f213); end
  def test_output_g213; assert_equal("NIR", worksheet.output_g213); end
  def test_output_h213; assert_in_epsilon(1.296395466339286, worksheet.output_h213, 0.001); end
  def test_output_m213; assert_in_delta(0.13911442520849251, worksheet.output_m213, 0.001); end
  def test_output_r213; assert_in_delta(0.008139444444444444, worksheet.output_r213, 0.001); end
  def test_output_w213; assert_in_delta(0.0724325, worksheet.output_w213, 0.001); end
  def test_output_ab213; assert_in_delta(0.22159105555555556, worksheet.output_ab213, 0.001); end
  def test_output_ad213; assert_in_delta(0.19942720516769563, worksheet.output_ad213, 0.001); end
  def test_output_ae213; assert_in_delta(0.16403382977357625, worksheet.output_ae213, 0.001); end
  def test_output_af213; assert_in_delta(0.1340129047974064, worksheet.output_af213, 0.001); end
  def test_output_ag213; assert_in_delta(0.10864414565689347, worksheet.output_ag213, 0.001); end
  def test_output_ah213; assert_in_delta(0.08729582279300281, worksheet.output_ah213, 0.001); end
  def test_output_ai213; assert_in_delta(0.06941452576609576, worksheet.output_ai213, 0.001); end
  def test_output_aj213; assert_in_delta(0.05451605776878436, worksheet.output_aj213, 0.001); end
  def test_output_am213; assert_in_delta(-0.04255865374034096, worksheet.output_am213, 0.001); end
  def test_output_an213; assert_in_delta(-0.8244151152023409, worksheet.output_an213, 0.001); end
  def test_output_ak213; assert_in_delta(0.04217733999305554, worksheet.output_ak213, 0.001); end
  def test_output_ao213; assert_in_delta(-0.9674656838224263, worksheet.output_ao213, 0.001); end
  def test_output_c214; assert_equal("XI.f", worksheet.output_c214); end
  def test_output_d214; assert_equal("V.03", worksheet.output_d214); end
  def test_output_e214; assert_equal("Solid hydrocarbons / Pulp & Paper Industry", worksheet.output_e214); end
  def test_output_f214; assert_equal("TWh/yr", worksheet.output_f214); end
  def test_output_g214; assert_equal("NIR", worksheet.output_g214); end
  def test_output_h214; assert_in_epsilon(2.0576527777777778, worksheet.output_h214, 0.001); end
  def test_output_m214; assert_in_epsilon(1.5990041666666666, worksheet.output_m214, 0.001); end
  def test_output_r214; assert_in_epsilon(1.944717777777778, worksheet.output_r214, 0.001); end
  def test_output_w214; assert_in_epsilon(3.444607277777778, worksheet.output_w214, 0.001); end
  def test_output_ab214; assert_in_epsilon(4.147410000000001, worksheet.output_ab214, 0.001); end
  def test_output_ad214; assert_in_epsilon(7.715634960400732, worksheet.output_ad214, 0.001); end
  def test_output_ae214; assert_in_epsilon(7.172961579047484, worksheet.output_ae214, 0.001); end
  def test_output_af214; assert_in_epsilon(6.651617462979219, worksheet.output_af214, 0.001); end
  def test_output_ag214; assert_in_epsilon(6.169438780073761, worksheet.output_ag214, 0.001); end
  def test_output_ah214; assert_in_epsilon(5.8507231814417295, worksheet.output_ah214, 0.001); end
  def test_output_ai214; assert_in_epsilon(5.4149433403049985, worksheet.output_ai214, 0.001); end
  def test_output_aj214; assert_in_epsilon(5.004406187459803, worksheet.output_aj214, 0.001); end
  def test_output_am214; assert_in_delta(-0.014490595324522015, worksheet.output_am214, 0.001); end
  def test_output_an214; assert_in_delta(-0.44226111570084214, worksheet.output_an214, 0.001); end
  def test_output_ak214; assert_in_epsilon(4.617799650293761, worksheet.output_ak214, 0.001); end
  def test_output_ao214; assert_in_epsilon(1.2442074290497587, worksheet.output_ao214, 0.001); end
  def test_output_c215; assert_equal("XI.g", worksheet.output_c215); end
  def test_output_d215; assert_equal("V.03", worksheet.output_d215); end
  def test_output_e215; assert_equal("Solid hydrocarbons / Oil & Gas Industry", worksheet.output_e215); end
  def test_output_f215; assert_equal("TWh/yr", worksheet.output_f215); end
  def test_output_h215; assert_in_delta(0, (worksheet.output_h215||0), 0.001); end
  def test_output_m215; assert_in_delta(0, (worksheet.output_m215||0), 0.001); end
  def test_output_r215; assert_in_delta(0, (worksheet.output_r215||0), 0.001); end
  def test_output_w215; assert_in_delta(0, (worksheet.output_w215||0), 0.001); end
  def test_output_ab215; assert_in_delta(0, (worksheet.output_ab215||0), 0.001); end
  def test_output_ad215; assert_in_epsilon(3.1323451297285283, worksheet.output_ad215, 0.001); end
  def test_output_ae215; assert_in_epsilon(1.8684784527957334, worksheet.output_ae215, 0.001); end
  def test_output_af215; assert_in_epsilon(1.3949646211129263, worksheet.output_af215, 0.001); end
  def test_output_ag215; assert_in_epsilon(1.0032182776151455, worksheet.output_ag215, 0.001); end
  def test_output_ah215; assert_in_delta(0.7088760468417382, worksheet.output_ah215, 0.001); end
  def test_output_ai215; assert_in_delta(0.5032223193362614, worksheet.output_ai215, 0.001); end
  def test_output_aj215; assert_in_delta(0.3444525603985709, worksheet.output_aj215, 0.001); end
  def test_output_am215; assert_in_delta(-0.06586573134716689, worksheet.output_am215, 0.001); end
  def test_output_an215; assert_in_delta(-0.9344802581790429, worksheet.output_an215, 0.001); end
  def test_output_ak215; assert_in_delta(0.22352054711228886, worksheet.output_ak215, 0.001); end
  def test_output_ao215; assert_equal("", worksheet.output_ao215); end
  def test_output_c216; assert_equal("XI.h", worksheet.output_c216); end
  def test_output_d216; assert_equal("V.03", worksheet.output_d216); end
  def test_output_e216; assert_equal("Solid hydrocarbons / Food, drinks and tobacco Industry", worksheet.output_e216); end
  def test_output_f216; assert_equal("TWh/yr", worksheet.output_f216); end
  def test_output_g216; assert_equal("NIR", worksheet.output_g216); end
  def test_output_h216; assert_in_epsilon(1.9408306760664782, worksheet.output_h216, 0.001); end
  def test_output_m216; assert_in_delta(0.6602502324534267, worksheet.output_m216, 0.001); end
  def test_output_r216; assert_in_delta(0.4039145833333333, worksheet.output_r216, 0.001); end
  def test_output_w216; assert_in_delta(0.6474168965, worksheet.output_w216, 0.001); end
  def test_output_ab216; assert_in_delta(0.7326633950000001, worksheet.output_ab216, 0.001); end
  def test_output_ad216; assert_in_epsilon(1.9971091765987834, worksheet.output_ad216, 0.001); end
  def test_output_ae216; assert_in_epsilon(2.742371027456708, worksheet.output_ae216, 0.001); end
  def test_output_af216; assert_in_epsilon(3.3968130138423183, worksheet.output_af216, 0.001); end
  def test_output_ag216; assert_in_epsilon(3.9316315119761045, worksheet.output_ag216, 0.001); end
  def test_output_ah216; assert_in_epsilon(4.3822572109988, worksheet.output_ah216, 0.001); end
  def test_output_ai216; assert_in_epsilon(4.713965312216156, worksheet.output_ai216, 0.001); end
  def test_output_aj216; assert_in_epsilon(4.936343126823784, worksheet.output_aj216, 0.001); end
  def test_output_am216; assert_in_delta(0.03733577055728299, worksheet.output_am216, 0.001); end
  def test_output_an216; assert_in_epsilon(3.332855035025763, worksheet.output_an216, 0.001); end
  def test_output_ak216; assert_in_epsilon(5.057421051112982, worksheet.output_ak216, 0.001); end
  def test_output_ao216; assert_in_epsilon(1.605802305929625, worksheet.output_ao216, 0.001); end
  def test_output_c217; assert_equal("XI.i", worksheet.output_c217); end
  def test_output_d217; assert_equal("V.03", worksheet.output_d217); end
  def test_output_e217; assert_equal("Solid hydrocarbons / Machines Industry", worksheet.output_e217); end
  def test_output_f217; assert_equal("TWh/yr", worksheet.output_f217); end
  def test_output_h217; assert_in_delta(0, (worksheet.output_h217||0), 0.001); end
  def test_output_m217; assert_in_delta(0, (worksheet.output_m217||0), 0.001); end
  def test_output_r217; assert_in_delta(0, (worksheet.output_r217||0), 0.001); end
  def test_output_w217; assert_in_delta(0, (worksheet.output_w217||0), 0.001); end
  def test_output_ab217; assert_in_delta(0, (worksheet.output_ab217||0), 0.001); end
  def test_output_ad217; assert_in_delta(0, (worksheet.output_ad217||0), 0.001); end
  def test_output_ae217; assert_in_delta(0, (worksheet.output_ae217||0), 0.001); end
  def test_output_af217; assert_in_delta(0, (worksheet.output_af217||0), 0.001); end
  def test_output_ag217; assert_in_delta(0, (worksheet.output_ag217||0), 0.001); end
  def test_output_ah217; assert_in_delta(0, (worksheet.output_ah217||0), 0.001); end
  def test_output_ai217; assert_in_delta(0, (worksheet.output_ai217||0), 0.001); end
  def test_output_aj217; assert_in_delta(0, (worksheet.output_aj217||0), 0.001); end
  def test_output_am217; assert_equal("", worksheet.output_am217); end
  def test_output_an217; assert_equal("", worksheet.output_an217); end
  def test_output_ak217; assert_in_delta(0, (worksheet.output_ak217||0), 0.001); end
  def test_output_ao217; assert_equal("", worksheet.output_ao217); end
  def test_output_c218; assert_equal("XI.j", worksheet.output_c218); end
  def test_output_d218; assert_equal("V.03", worksheet.output_d218); end
  def test_output_e218; assert_equal("Solid hydrocarbons / Non-Ferrous metals Industry", worksheet.output_e218); end
  def test_output_f218; assert_equal("TWh/yr", worksheet.output_f218); end
  def test_output_g218; assert_equal("NIR", worksheet.output_g218); end
  def test_output_h218; assert_in_delta(0.38252777777777774, worksheet.output_h218, 0.001); end
  def test_output_m218; assert_in_delta(0.46126338888888885, worksheet.output_m218, 0.001); end
  def test_output_r218; assert_in_delta(0.18375983333333332, worksheet.output_r218, 0.001); end
  def test_output_w218; assert_in_delta(0.18717002777777778, worksheet.output_w218, 0.001); end
  def test_output_ab218; assert_in_delta(0.2206734520277778, worksheet.output_ab218, 0.001); end
  def test_output_ad218; assert_in_delta(0.3820896068392072, worksheet.output_ad218, 0.001); end
  def test_output_ae218; assert_in_delta(0.4869931074309762, worksheet.output_ae218, 0.001); end
  def test_output_af218; assert_in_delta(0.5593686432633189, worksheet.output_af218, 0.001); end
  def test_output_ag218; assert_in_delta(0.5926127537412622, worksheet.output_ag218, 0.001); end
  def test_output_ah218; assert_in_delta(0.5984498183760409, worksheet.output_ah218, 0.001); end
  def test_output_ai218; assert_in_delta(0.5819038788494246, worksheet.output_ai218, 0.001); end
  def test_output_aj218; assert_in_delta(0.5475437028019198, worksheet.output_aj218, 0.001); end
  def test_output_am218; assert_in_delta(0.01840154549917039, worksheet.output_am218, 0.001); end
  def test_output_an218; assert_in_epsilon(1.073776691210711, worksheet.output_an218, 0.001); end
  def test_output_ak218; assert_in_delta(0.49951775034667145, worksheet.output_ak218, 0.001); end
  def test_output_ao218; assert_in_delta(0.30583392727326797, worksheet.output_ao218, 0.001); end
  def test_output_c219; assert_equal("XI.k", worksheet.output_c219); end
  def test_output_d219; assert_equal("V.03", worksheet.output_d219); end
  def test_output_e219; assert_equal("Solid hydrocarbons / Construction industry", worksheet.output_e219); end
  def test_output_f219; assert_equal("TWh/yr", worksheet.output_f219); end
  def test_output_g219; assert_equal("IEA", worksheet.output_g219); end
  def test_output_h219; assert_in_delta(0.26657583333333335, worksheet.output_h219, 0.001); end
  def test_output_m219; assert_in_delta(0.2342636111111111, worksheet.output_m219, 0.001); end
  def test_output_r219; assert_in_delta(0.12117083333333332, worksheet.output_r219, 0.001); end
  def test_output_w219; assert_in_delta(0.28646583333333336, worksheet.output_w219, 0.001); end
  def test_output_ab219; assert_in_delta(0, (worksheet.output_ab219||0), 0.001); end
  def test_output_ad219; assert_in_delta(0.23284437650374643, worksheet.output_ad219, 0.001); end
  def test_output_ae219; assert_in_delta(0.43760820148338614, worksheet.output_ae219, 0.001); end
  def test_output_af219; assert_in_delta(0.629800992675414, worksheet.output_af219, 0.001); end
  def test_output_ag219; assert_in_delta(0.8126317855919863, worksheet.output_ag219, 0.001); end
  def test_output_ah219; assert_in_delta(0.9793392556945532, worksheet.output_ah219, 0.001); end
  def test_output_ai219; assert_in_epsilon(1.128714925883968, worksheet.output_ai219, 0.001); end
  def test_output_aj219; assert_in_epsilon(1.2597734225255415, worksheet.output_aj219, 0.001); end
  def test_output_am219; assert_in_delta(0.12212279108040858, worksheet.output_am219, 0.001); end
  def test_output_an219; assert_in_epsilon(99.37263628240163, worksheet.output_an219, 0.001); end
  def test_output_ak219; assert_in_epsilon(1.3717524754490429, worksheet.output_ak219, 0.001); end
  def test_output_ao219; assert_in_epsilon(4.145824579431279, worksheet.output_ao219, 0.001); end
  def test_output_c220; assert_equal("XI.l", worksheet.output_c220); end
  def test_output_d220; assert_equal("V.03", worksheet.output_d220); end
  def test_output_e220; assert_equal("Solid hydrocarbons / Other Industry", worksheet.output_e220); end
  def test_output_f220; assert_equal("TWh/yr", worksheet.output_f220); end
  def test_output_g220; assert_equal("NIR", worksheet.output_g220); end
  def test_output_h220; assert_in_epsilon(-1.5459195666666679, worksheet.output_h220, 0.001); end
  def test_output_m220; assert_in_epsilon(-3.6201557730366596, worksheet.output_m220, 0.001); end
  def test_output_r220; assert_in_epsilon(-3.2848503114164567, worksheet.output_r220, 0.001); end
  def test_output_w220; assert_in_epsilon(-5.075268647033581, worksheet.output_w220, 0.001); end
  def test_output_ab220; assert_in_epsilon(-3.286153631777773, worksheet.output_ab220, 0.001); end
  def test_output_ad220; assert_in_delta(0, (worksheet.output_ad220||0), 0.001); end
  def test_output_ae220; assert_in_delta(0, (worksheet.output_ae220||0), 0.001); end
  def test_output_af220; assert_in_delta(0, (worksheet.output_af220||0), 0.001); end
  def test_output_ag220; assert_in_delta(0, (worksheet.output_ag220||0), 0.001); end
  def test_output_ah220; assert_in_delta(0, (worksheet.output_ah220||0), 0.001); end
  def test_output_ai220; assert_in_delta(0, (worksheet.output_ai220||0), 0.001); end
  def test_output_aj220; assert_in_delta(0, (worksheet.output_aj220||0), 0.001); end
  def test_output_am220; assert_equal("", worksheet.output_am220); end
  def test_output_an220; assert_equal("", worksheet.output_an220); end
  def test_output_ak220; assert_in_delta(0, (worksheet.output_ak220||0), 0.001); end
  def test_output_ao220; assert_in_delta(-1, worksheet.output_ao220, 0.001); end
  def test_output_c221; assert_equal("XI", worksheet.output_c221); end
  def test_output_d221; assert_equal("V.03", worksheet.output_d221); end
  def test_output_e221; assert_equal("Solid hydrocarbons / Industry", worksheet.output_e221); end
  def test_output_f221; assert_equal("TWh/yr", worksheet.output_f221); end
  def test_output_g221; assert_equal("NIR", worksheet.output_g221); end
  def test_output_h221; assert_in_epsilon(62.51885107670178, worksheet.output_h221, 0.001); end
  def test_output_m221; assert_in_epsilon(55.17362374002919, worksheet.output_m221, 0.001); end
  def test_output_r221; assert_in_epsilon(54.10578545333333, worksheet.output_r221, 0.001); end
  def test_output_w221; assert_in_epsilon(49.283033812606114, worksheet.output_w221, 0.001); end
  def test_output_ab221; assert_in_epsilon(40.01805445287667, worksheet.output_ab221, 0.001); end
  def test_output_ad221; assert_in_epsilon(37.46329312194105, worksheet.output_ad221, 0.001); end
  def test_output_ae221; assert_in_epsilon(28.35649942691964, worksheet.output_ae221, 0.001); end
  def test_output_af221; assert_in_epsilon(21.328416073148183, worksheet.output_af221, 0.001); end
  def test_output_ag221; assert_in_epsilon(16.425446156081076, worksheet.output_ag221, 0.001); end
  def test_output_ah221; assert_in_epsilon(16.19005900434946, worksheet.output_ah221, 0.001); end
  def test_output_ai221; assert_in_epsilon(15.761198161798488, worksheet.output_ai221, 0.001); end
  def test_output_aj221; assert_in_epsilon(15.250090793834756, worksheet.output_aj221, 0.001); end
  def test_output_am221; assert_in_delta(-0.02825705035315562, worksheet.output_am221, 0.001); end
  def test_output_an221; assert_in_delta(-0.6822716745024737, worksheet.output_an221, 0.001); end
  def test_output_ak221; assert_in_epsilon(14.68617467530458, worksheet.output_ak221, 0.001); end
  def test_output_ao221; assert_in_delta(-0.7650920574774043, worksheet.output_ao221, 0.001); end
  def test_output_c222; assert_equal("XI.a", worksheet.output_c222); end
  def test_output_d222; assert_equal("V.04", worksheet.output_d222); end
  def test_output_e222; assert_equal("Liquid hydrocarbons / Steel Industry", worksheet.output_e222); end
  def test_output_f222; assert_equal("TWh/yr", worksheet.output_f222); end
  def test_output_g222; assert_equal("NIR", worksheet.output_g222); end
  def test_output_h222; assert_in_epsilon(3.1922768672222226, worksheet.output_h222, 0.001); end
  def test_output_m222; assert_in_epsilon(1.1462742906576278, worksheet.output_m222, 0.001); end
  def test_output_r222; assert_in_delta(0.5155159545621945, worksheet.output_r222, 0.001); end
  def test_output_w222; assert_in_delta(0.3813004655569972, worksheet.output_w222, 0.001); end
  def test_output_ab222; assert_in_delta(0.12431015555555557, worksheet.output_ab222, 0.001); end
  def test_output_am222; assert_in_delta(-0.08226815764078499, worksheet.output_am222, 0.001); end
  def test_output_an222; assert_in_delta(-0.9677424021153009, worksheet.output_an222, 0.001); end
  def test_output_ak222; assert_in_delta(0.07960414876551533, worksheet.output_ak222, 0.001); end
  def test_output_ao222; assert_in_delta(-0.9750635198397489, worksheet.output_ao222, 0.001); end
  def test_output_c223; assert_equal("XI.b", worksheet.output_c223); end
  def test_output_d223; assert_equal("V.04", worksheet.output_d223); end
  def test_output_e223; assert_equal("Liquid hydrocarbons / Cement Industry", worksheet.output_e223); end
  def test_output_f223; assert_equal("TWh/yr", worksheet.output_f223); end
  def test_output_g223; assert_equal("Wallonia", worksheet.output_g223); end
  def test_output_h223; assert_in_epsilon(1.7814047526672008, worksheet.output_h223, 0.001); end
  def test_output_m223; assert_in_epsilon(1.8789334107874514, worksheet.output_m223, 0.001); end
  def test_output_r223; assert_in_epsilon(1.948596979845976, worksheet.output_r223, 0.001); end
  def test_output_w223; assert_in_epsilon(1.8334994411897216, worksheet.output_w223, 0.001); end
  def test_output_ab223; assert_in_epsilon(1.6427256531985304, worksheet.output_ab223, 0.001); end
  def test_output_am223; assert_in_delta(-1, worksheet.output_am223, 0.001); end
  def test_output_an223; assert_in_delta(-1, worksheet.output_an223, 0.001); end
  def test_output_ak223; assert_in_delta(0, (worksheet.output_ak223||0), 0.001); end
  def test_output_ao223; assert_in_delta(-1, worksheet.output_ao223, 0.001); end
  def test_output_c224; assert_equal("XI.c", worksheet.output_c224); end
  def test_output_d224; assert_equal("V.04", worksheet.output_d224); end
  def test_output_e224; assert_equal("Liquid hydrocarbons / Lime Industry", worksheet.output_e224); end
  def test_output_f224; assert_equal("TWh/yr", worksheet.output_f224); end
  def test_output_g224; assert_equal("Wallonia", worksheet.output_g224); end
  def test_output_h224; assert_in_delta(0.20314038155953873, worksheet.output_h224, 0.001); end
  def test_output_m224; assert_in_delta(0.2142619466018875, worksheet.output_m224, 0.001); end
  def test_output_r224; assert_in_delta(0.22220594920890857, worksheet.output_r224, 0.001); end
  def test_output_w224; assert_in_delta(0.2090809376784362, worksheet.output_w224, 0.001); end
  def test_output_ab224; assert_in_delta(0.18732627466540389, worksheet.output_ab224, 0.001); end
  def test_output_am224; assert_in_delta(-0.02972691571826347, worksheet.output_am224, 0.001); end
  def test_output_an224; assert_in_delta(-0.7009392882229202, worksheet.output_an224, 0.001); end
  def test_output_ak224; assert_in_delta(0.09377556890769882, worksheet.output_ak224, 0.001); end
  def test_output_ao224; assert_in_delta(-0.5383706174628111, worksheet.output_ao224, 0.001); end
  def test_output_c225; assert_equal("XI.d", worksheet.output_c225); end
  def test_output_d225; assert_equal("V.04", worksheet.output_d225); end
  def test_output_e225; assert_equal("Liquid hydrocarbons / Glass Industry", worksheet.output_e225); end
  def test_output_f225; assert_equal("TWh/yr", worksheet.output_f225); end
  def test_output_g225; assert_equal("Wallonia", worksheet.output_g225); end
  def test_output_h225; assert_in_epsilon(2.83363919008894, worksheet.output_h225, 0.001); end
  def test_output_m225; assert_in_epsilon(1.8782227390553214, worksheet.output_m225, 0.001); end
  def test_output_r225; assert_in_delta(0.9961011365136054, worksheet.output_r225, 0.001); end
  def test_output_w225; assert_in_epsilon(1.7823006682012323, worksheet.output_w225, 0.001); end
  def test_output_ab225; assert_in_epsilon(2.350856066987716, worksheet.output_ab225, 0.001); end
  def test_output_am225; assert_in_delta(-1, worksheet.output_am225, 0.001); end
  def test_output_an225; assert_in_delta(-1, worksheet.output_an225, 0.001); end
  def test_output_ak225; assert_in_delta(0, (worksheet.output_ak225||0), 0.001); end
  def test_output_ao225; assert_in_delta(-1, worksheet.output_ao225, 0.001); end
  def test_output_c226; assert_equal("XI.e", worksheet.output_c226); end
  def test_output_d226; assert_equal("V.04", worksheet.output_d226); end
  def test_output_e226; assert_equal("Liquid hydrocarbons / Chemicals Industry", worksheet.output_e226); end
  def test_output_f226; assert_equal("TWh/yr", worksheet.output_f226); end
  def test_output_g226; assert_equal("NIR", worksheet.output_g226); end
  def test_output_h226; assert_in_epsilon(6.613420307613639, worksheet.output_h226, 0.001); end
  def test_output_m226; assert_in_epsilon(6.168490409572389, worksheet.output_m226, 0.001); end
  def test_output_r226; assert_in_epsilon(2.895697584293611, worksheet.output_r226, 0.001); end
  def test_output_w226; assert_in_epsilon(2.642089019761208, worksheet.output_w226, 0.001); end
  def test_output_ab226; assert_in_epsilon(2.808808846461806, worksheet.output_ab226, 0.001); end
  def test_output_am226; assert_in_delta(-0.03453706603289708, worksheet.output_am226, 0.001); end
  def test_output_an226; assert_in_delta(-0.754854344840366, worksheet.output_an226, 0.001); end
  def test_output_ak226; assert_in_delta(0.6280199185036522, worksheet.output_ak226, 0.001); end
  def test_output_ao226; assert_in_delta(-0.9050385595815451, worksheet.output_ao226, 0.001); end
  def test_output_c227; assert_equal("XI.f", worksheet.output_c227); end
  def test_output_d227; assert_equal("V.04", worksheet.output_d227); end
  def test_output_e227; assert_equal("Liquid hydrocarbons / Pulp & Paper Industry", worksheet.output_e227); end
  def test_output_f227; assert_equal("TWh/yr", worksheet.output_f227); end
  def test_output_g227; assert_equal("NIR", worksheet.output_g227); end
  def test_output_h227; assert_in_delta(0.8443403795514861, worksheet.output_h227, 0.001); end
  def test_output_m227; assert_in_epsilon(1.1426193136212166, worksheet.output_m227, 0.001); end
  def test_output_r227; assert_in_delta(0.8480627650835612, worksheet.output_r227, 0.001); end
  def test_output_w227; assert_in_delta(0.7000771591604944, worksheet.output_w227, 0.001); end
  def test_output_ab227; assert_in_delta(0.2913889610847611, worksheet.output_ab227, 0.001); end
  def test_output_am227; assert_in_delta(-1, worksheet.output_am227, 0.001); end
  def test_output_an227; assert_in_delta(-1, worksheet.output_an227, 0.001); end
  def test_output_ak227; assert_in_delta(0, (worksheet.output_ak227||0), 0.001); end
  def test_output_ao227; assert_in_delta(-1, worksheet.output_ao227, 0.001); end
  def test_output_c228; assert_equal("XI.g", worksheet.output_c228); end
  def test_output_d228; assert_equal("V.04", worksheet.output_d228); end
  def test_output_e228; assert_equal("Liquid hydrocarbons / Oil & Gas Industry", worksheet.output_e228); end
  def test_output_f228; assert_equal("TWh/yr", worksheet.output_f228); end
  def test_output_h228; assert_in_delta(0, (worksheet.output_h228||0), 0.001); end
  def test_output_m228; assert_in_delta(0, (worksheet.output_m228||0), 0.001); end
  def test_output_r228; assert_in_delta(0, (worksheet.output_r228||0), 0.001); end
  def test_output_w228; assert_in_delta(0, (worksheet.output_w228||0), 0.001); end
  def test_output_ab228; assert_in_delta(0, (worksheet.output_ab228||0), 0.001); end
  def test_output_ad228; assert_in_epsilon(1.0329871863781306, worksheet.output_ad228, 0.001); end
  def test_output_ae228; assert_in_delta(0.528161366960654, worksheet.output_ae228, 0.001); end
  def test_output_af228; assert_in_delta(0.32859464700023616, worksheet.output_af228, 0.001); end
  def test_output_ag228; assert_in_delta(0.18905262588473773, worksheet.output_ag228, 0.001); end
  def test_output_ah228; assert_in_delta(0.10018872343574398, worksheet.output_ah228, 0.001); end
  def test_output_ai228; assert_in_delta(0.04741515530422988, worksheet.output_ai228, 0.001); end
  def test_output_aj228; assert_in_delta(0.01622769004739272, worksheet.output_aj228, 0.001); end
  def test_output_am228; assert_in_delta(-1, worksheet.output_am228, 0.001); end
  def test_output_an228; assert_in_delta(-1, worksheet.output_an228, 0.001); end
  def test_output_ak228; assert_in_delta(0, (worksheet.output_ak228||0), 0.001); end
  def test_output_ao228; assert_equal("", worksheet.output_ao228); end
  def test_output_c229; assert_equal("XI.h", worksheet.output_c229); end
  def test_output_d229; assert_equal("V.04", worksheet.output_d229); end
  def test_output_e229; assert_equal("Liquid hydrocarbons / Food, drinks and tobacco Industry", worksheet.output_e229); end
  def test_output_f229; assert_equal("TWh/yr", worksheet.output_f229); end
  def test_output_g229; assert_equal("NIR", worksheet.output_g229); end
  def test_output_h229; assert_in_epsilon(6.074077199991556, worksheet.output_h229, 0.001); end
  def test_output_m229; assert_in_epsilon(6.623067358709973, worksheet.output_m229, 0.001); end
  def test_output_r229; assert_in_epsilon(3.283631471636917, worksheet.output_r229, 0.001); end
  def test_output_w229; assert_in_epsilon(2.586479777227808, worksheet.output_w229, 0.001); end
  def test_output_ab229; assert_in_delta(0.8235538153236583, worksheet.output_ab229, 0.001); end
  def test_output_am229; assert_in_delta(-1, worksheet.output_am229, 0.001); end
  def test_output_an229; assert_in_delta(-1, worksheet.output_an229, 0.001); end
  def test_output_ak229; assert_in_delta(0, (worksheet.output_ak229||0), 0.001); end
  def test_output_ao229; assert_in_delta(-1, worksheet.output_ao229, 0.001); end
  def test_output_c230; assert_equal("XI.i", worksheet.output_c230); end
  def test_output_d230; assert_equal("V.04", worksheet.output_d230); end
  def test_output_e230; assert_equal("Liquid hydrocarbons / Machines Industry", worksheet.output_e230); end
  def test_output_f230; assert_equal("TWh/yr", worksheet.output_f230); end
  def test_output_h230; assert_in_delta(0, (worksheet.output_h230||0), 0.001); end
  def test_output_m230; assert_in_delta(0, (worksheet.output_m230||0), 0.001); end
  def test_output_r230; assert_in_delta(0, (worksheet.output_r230||0), 0.001); end
  def test_output_w230; assert_in_delta(0, (worksheet.output_w230||0), 0.001); end
  def test_output_ab230; assert_in_delta(0, (worksheet.output_ab230||0), 0.001); end
  def test_output_am230; assert_equal("", worksheet.output_am230); end
  def test_output_an230; assert_equal("", worksheet.output_an230); end
  def test_output_ak230; assert_in_delta(0, (worksheet.output_ak230||0), 0.001); end
  def test_output_ao230; assert_equal("", worksheet.output_ao230); end
  def test_output_c231; assert_equal("XI.j", worksheet.output_c231); end
  def test_output_d231; assert_equal("V.04", worksheet.output_d231); end
  def test_output_e231; assert_equal("Liquid hydrocarbons / Non-Ferrous metals Industry", worksheet.output_e231); end
  def test_output_f231; assert_equal("TWh/yr", worksheet.output_f231); end
  def test_output_g231; assert_equal("NIR", worksheet.output_g231); end
  def test_output_h231; assert_in_delta(0.7956407126934584, worksheet.output_h231, 0.001); end
  def test_output_m231; assert_in_delta(0.6124319624928528, worksheet.output_m231, 0.001); end
  def test_output_r231; assert_in_delta(0.3553972511312333, worksheet.output_r231, 0.001); end
  def test_output_w231; assert_in_delta(0.3571755697809056, worksheet.output_w231, 0.001); end
  def test_output_ab231; assert_in_delta(0.13697218654168222, worksheet.output_ab231, 0.001); end
  def test_output_am231; assert_in_delta(-1, worksheet.output_am231, 0.001); end
  def test_output_an231; assert_in_delta(-1, worksheet.output_an231, 0.001); end
  def test_output_ak231; assert_in_delta(0, (worksheet.output_ak231||0), 0.001); end
  def test_output_ao231; assert_in_delta(-1, worksheet.output_ao231, 0.001); end
  def test_output_c232; assert_equal("XI.k", worksheet.output_c232); end
  def test_output_d232; assert_equal("V.04", worksheet.output_d232); end
  def test_output_e232; assert_equal("Liquid hydrocarbons / Construction industry", worksheet.output_e232); end
  def test_output_f232; assert_equal("TWh/yr", worksheet.output_f232); end
  def test_output_g232; assert_equal("IEA", worksheet.output_g232); end
  def test_output_h232; assert_in_delta(0, (worksheet.output_h232||0), 0.001); end
  def test_output_m232; assert_in_delta(0, (worksheet.output_m232||0), 0.001); end
  def test_output_r232; assert_in_delta(0, (worksheet.output_r232||0), 0.001); end
  def test_output_w232; assert_in_delta(0.9997222222222222, worksheet.output_w232, 0.001); end
  def test_output_ab232; assert_in_epsilon(2.4880555555555555, worksheet.output_ab232, 0.001); end
  def test_output_am232; assert_in_delta(-1, worksheet.output_am232, 0.001); end
  def test_output_an232; assert_in_delta(-1, worksheet.output_an232, 0.001); end
  def test_output_ak232; assert_in_delta(0, (worksheet.output_ak232||0), 0.001); end
  def test_output_ao232; assert_equal("", worksheet.output_ao232); end
  def test_output_c233; assert_equal("XI.l", worksheet.output_c233); end
  def test_output_d233; assert_equal("V.04", worksheet.output_d233); end
  def test_output_e233; assert_equal("Liquid hydrocarbons / Other Industry", worksheet.output_e233); end
  def test_output_f233; assert_equal("TWh/yr", worksheet.output_f233); end
  def test_output_g233; assert_equal("NIR", worksheet.output_g233); end
  def test_output_h233; assert_in_epsilon(5.916116384390763, worksheet.output_h233, 0.001); end
  def test_output_m233; assert_in_epsilon(6.307530727640284, worksheet.output_m233, 0.001); end
  def test_output_r233; assert_in_epsilon(6.195184481793399, worksheet.output_r233, 0.001); end
  def test_output_w233; assert_in_epsilon(5.5302231285416665, worksheet.output_w233, 0.001); end
  def test_output_ab233; assert_in_delta(0.5224686803652938, worksheet.output_ab233, 0.001); end
  def test_output_ad233; assert_in_delta(0, (worksheet.output_ad233||0), 0.001); end
  def test_output_ae233; assert_in_delta(0, (worksheet.output_ae233||0), 0.001); end
  def test_output_af233; assert_in_delta(0, (worksheet.output_af233||0), 0.001); end
  def test_output_ag233; assert_in_delta(0, (worksheet.output_ag233||0), 0.001); end
  def test_output_ah233; assert_in_delta(0, (worksheet.output_ah233||0), 0.001); end
  def test_output_ai233; assert_in_delta(0, (worksheet.output_ai233||0), 0.001); end
  def test_output_aj233; assert_in_delta(0, (worksheet.output_aj233||0), 0.001); end
  def test_output_am233; assert_equal("", worksheet.output_am233); end
  def test_output_an233; assert_equal("", worksheet.output_an233); end
  def test_output_ak233; assert_in_delta(0, (worksheet.output_ak233||0), 0.001); end
  def test_output_ao233; assert_in_delta(-1, worksheet.output_ao233, 0.001); end
  def test_output_c234; assert_equal("XI", worksheet.output_c234); end
  def test_output_d234; assert_equal("V.04", worksheet.output_d234); end
  def test_output_e234; assert_equal("Liquid hydrocarbons / Industry", worksheet.output_e234); end
  def test_output_f234; assert_equal("TWh/yr", worksheet.output_f234); end
  def test_output_g234; assert_equal("NIR", worksheet.output_g234); end
  def test_output_h234; assert_in_epsilon(28.25405617577889, worksheet.output_h234, 0.001); end
  def test_output_m234; assert_in_epsilon(25.971832159139, worksheet.output_m234, 0.001); end
  def test_output_r234; assert_in_epsilon(17.26039357406942, worksheet.output_r234, 0.001); end
  def test_output_w234; assert_in_epsilon(17.021948389320695, worksheet.output_w234, 0.001); end
  def test_output_ab234; assert_in_epsilon(11.376466195739962, worksheet.output_ab234, 0.001); end
  def test_output_ad234; assert_in_epsilon(7.073462111984176, worksheet.output_ad234, 0.001); end
  def test_output_ae234; assert_in_epsilon(4.336607617295266, worksheet.output_ae234, 0.001); end
  def test_output_af234; assert_in_epsilon(2.7650977412034337, worksheet.output_af234, 0.001); end
  def test_output_ag234; assert_in_epsilon(1.786000264295472, worksheet.output_ag234, 0.001); end
  def test_output_ah234; assert_in_epsilon(1.4466625612484598, worksheet.output_ah234, 0.001); end
  def test_output_ai234; assert_in_epsilon(1.1797994975378514, worksheet.output_ai234, 0.001); end
  def test_output_aj234; assert_in_delta(0.9663341466885703, worksheet.output_aj234, 0.001); end
  def test_output_am234; assert_in_delta(-0.06107083272583813, worksheet.output_am234, 0.001); end
  def test_output_an234; assert_in_delta(-0.9195894162902593, worksheet.output_an234, 0.001); end
  def test_output_ak234; assert_in_delta(0.8013996361768664, worksheet.output_ak234, 0.001); end
  def test_output_ao234; assert_in_delta(-0.971635943837902, worksheet.output_ao234, 0.001); end
  def test_output_c235; assert_equal("XI.a", worksheet.output_c235); end
  def test_output_d235; assert_equal("V.05", worksheet.output_d235); end
  def test_output_e235; assert_equal("Gaseous hydrocarbons / Steel Industry", worksheet.output_e235); end
  def test_output_f235; assert_equal("TWh/yr", worksheet.output_f235); end
  def test_output_g235; assert_equal("NIR", worksheet.output_g235); end
  def test_output_h235; assert_in_epsilon(7.392457970854417, worksheet.output_h235, 0.001); end
  def test_output_m235; assert_in_epsilon(7.705084140555556, worksheet.output_m235, 0.001); end
  def test_output_r235; assert_in_epsilon(10.307285215765555, worksheet.output_r235, 0.001); end
  def test_output_w235; assert_in_epsilon(8.878116989093167, worksheet.output_w235, 0.001); end
  def test_output_ab235; assert_in_epsilon(5.979415155290555, worksheet.output_ab235, 0.001); end
  def test_output_ad235; assert_in_epsilon(7.274519836381362, worksheet.output_ad235, 0.001); end
  def test_output_ae235; assert_in_epsilon(7.548595246985366, worksheet.output_ae235, 0.001); end
  def test_output_af235; assert_in_epsilon(7.499719965907836, worksheet.output_af235, 0.001); end
  def test_output_ag235; assert_in_epsilon(7.214695280787781, worksheet.output_ag235, 0.001); end
  def test_output_ah235; assert_in_epsilon(6.451942788488438, worksheet.output_ah235, 0.001); end
  def test_output_ai235; assert_in_epsilon(5.767984576627101, worksheet.output_ai235, 0.001); end
  def test_output_aj235; assert_in_epsilon(5.1548394289670085, worksheet.output_aj235, 0.001); end
  def test_output_am235; assert_in_delta(-0.008626792810820794, worksheet.output_am235, 0.001); end
  def test_output_an235; assert_in_delta(-0.2928898029599223, worksheet.output_an235, 0.001); end
  def test_output_ak235; assert_in_epsilon(4.964648561264439, worksheet.output_ak235, 0.001); end
  def test_output_ao235; assert_in_delta(-0.3284170730712146, worksheet.output_ao235, 0.001); end
  def test_output_c236; assert_equal("XI.b", worksheet.output_c236); end
  def test_output_d236; assert_equal("V.05", worksheet.output_d236); end
  def test_output_e236; assert_equal("Gaseous hydrocarbons / Cement Industry", worksheet.output_e236); end
  def test_output_f236; assert_equal("TWh/yr", worksheet.output_f236); end
  def test_output_g236; assert_equal("Wallonia", worksheet.output_g236); end
  def test_output_h236; assert_in_delta(0.25245601717058547, worksheet.output_h236, 0.001); end
  def test_output_m236; assert_in_delta(0.26627752323323933, worksheet.output_m236, 0.001); end
  def test_output_r236; assert_in_delta(0.2761500618351888, worksheet.output_r236, 0.001); end
  def test_output_w236; assert_in_delta(0.2598387400248086, worksheet.output_w236, 0.001); end
  def test_output_ab236; assert_in_delta(0.23280277830712964, worksheet.output_ab236, 0.001); end
  def test_output_ad236; assert_in_delta(0.09632724997390567, worksheet.output_ad236, 0.001); end
  def test_output_ae236; assert_in_delta(0.06693933417494811, worksheet.output_ae236, 0.001); end
  def test_output_af236; assert_in_delta(0.03430182052832988, worksheet.output_af236, 0.001); end
  def test_output_ag236; assert_in_delta(0.02274792914657617, worksheet.output_ag236, 0.001); end
  def test_output_ah236; assert_in_delta(0.014175182153293739, worksheet.output_ah236, 0.001); end
  def test_output_ai236; assert_in_delta(0.007438322839766799, worksheet.output_ai236, 0.001); end
  def test_output_aj236; assert_in_delta(0.0026717724765895103, worksheet.output_aj236, 0.001); end
  def test_output_am236; assert_in_delta(-1, worksheet.output_am236, 0.001); end
  def test_output_an236; assert_in_delta(-1, worksheet.output_an236, 0.001); end
  def test_output_ak236; assert_in_delta(0, (worksheet.output_ak236||0), 0.001); end
  def test_output_ao236; assert_in_delta(-1, worksheet.output_ao236, 0.001); end
  def test_output_c237; assert_equal("XI.c", worksheet.output_c237); end
  def test_output_d237; assert_equal("V.05", worksheet.output_d237); end
  def test_output_e237; assert_equal("Gaseous hydrocarbons / Lime Industry", worksheet.output_e237); end
  def test_output_f237; assert_equal("TWh/yr", worksheet.output_f237); end
  def test_output_g237; assert_equal("Wallonia", worksheet.output_g237); end
  def test_output_h237; assert_in_delta(0.35489002156142513, worksheet.output_h237, 0.001); end
  def test_output_m237; assert_in_delta(0.3743196023635028, worksheet.output_m237, 0.001); end
  def test_output_r237; assert_in_delta(0.38819792254211993, worksheet.output_r237, 0.001); end
  def test_output_w237; assert_in_delta(0.3652682834950549, worksheet.output_w237, 0.001); end
  def test_output_ab237; assert_in_delta(0.32726248294232846, worksheet.output_ab237, 0.001); end
  def test_output_ad237; assert_in_delta(0.9697998421877575, worksheet.output_ad237, 0.001); end
  def test_output_ae237; assert_in_epsilon(1.1464510365975593, worksheet.output_ae237, 0.001); end
  def test_output_af237; assert_in_epsilon(1.0705030859688331, worksheet.output_af237, 0.001); end
  def test_output_ag237; assert_in_epsilon(1.0242275885583154, worksheet.output_ag237, 0.001); end
  def test_output_ah237; assert_in_delta(0.9620881978963893, worksheet.output_ah237, 0.001); end
  def test_output_ai237; assert_in_delta(0.8854014374568253, worksheet.output_ai237, 0.001); end
  def test_output_aj237; assert_in_delta(0.7955566784352698, worksheet.output_aj237, 0.001); end
  def test_output_am237; assert_in_delta(0.00015404969240084831, worksheet.output_am237, 0.001); end
  def test_output_an237; assert_in_delta(0.006180534286899908, worksheet.output_an237, 0.001); end
  def test_output_ak237; assert_in_delta(0.7094838363750203, worksheet.output_ak237, 0.001); end
  def test_output_ao237; assert_in_delta(0.9991653562235232, worksheet.output_ao237, 0.001); end
  def test_output_c238; assert_equal("XI.d", worksheet.output_c238); end
  def test_output_d238; assert_equal("V.05", worksheet.output_d238); end
  def test_output_e238; assert_equal("Gaseous hydrocarbons / Glass Industry", worksheet.output_e238); end
  def test_output_f238; assert_equal("TWh/yr", worksheet.output_f238); end
  def test_output_g238; assert_equal("Wallonia", worksheet.output_g238); end
  def test_output_h238; assert_in_epsilon(6.5279009518691, worksheet.output_h238, 0.001); end
  def test_output_m238; assert_in_epsilon(7.429660250792147, worksheet.output_m238, 0.001); end
  def test_output_r238; assert_in_epsilon(7.632198839130452, worksheet.output_r238, 0.001); end
  def test_output_w238; assert_in_epsilon(7.616221271707877, worksheet.output_w238, 0.001); end
  def test_output_ab238; assert_in_epsilon(5.484077566311652, worksheet.output_ab238, 0.001); end
  def test_output_ad238; assert_in_epsilon(2.334869102857414, worksheet.output_ad238, 0.001); end
  def test_output_ae238; assert_in_epsilon(2.6979453792532824, worksheet.output_ae238, 0.001); end
  def test_output_af238; assert_in_epsilon(2.5487569175322244, worksheet.output_af238, 0.001); end
  def test_output_ag238; assert_in_epsilon(2.3783721197617043, worksheet.output_ag238, 0.001); end
  def test_output_ah238; assert_in_epsilon(2.220413374854607, worksheet.output_ah238, 0.001); end
  def test_output_ai238; assert_in_epsilon(2.0735817402239296, worksheet.output_ai238, 0.001); end
  def test_output_aj238; assert_in_epsilon(1.9367594503026704, worksheet.output_aj238, 0.001); end
  def test_output_am238; assert_in_delta(0.0036804489698127885, worksheet.output_am238, 0.001); end
  def test_output_an238; assert_in_delta(0.1582933914982212, worksheet.output_an238, 0.001); end
  def test_output_ak238; assert_in_epsilon(1.8089829059256417, worksheet.output_ak238, 0.001); end
  def test_output_ao238; assert_in_delta(-0.7228844433664875, worksheet.output_ao238, 0.001); end
  def test_output_c239; assert_equal("XI.e", worksheet.output_c239); end
  def test_output_d239; assert_equal("V.05", worksheet.output_d239); end
  def test_output_e239; assert_equal("Gaseous hydrocarbons / Chemicals Industry", worksheet.output_e239); end
  def test_output_f239; assert_equal("TWh/yr", worksheet.output_f239); end
  def test_output_g239; assert_equal("NIR", worksheet.output_g239); end
  def test_output_h239; assert_in_epsilon(12.538777713576804, worksheet.output_h239, 0.001); end
  def test_output_m239; assert_in_epsilon(15.647462892222222, worksheet.output_m239, 0.001); end
  def test_output_r239; assert_in_epsilon(17.139496259725554, worksheet.output_r239, 0.001); end
  def test_output_w239; assert_in_epsilon(15.621609508835917, worksheet.output_w239, 0.001); end
  def test_output_ab239; assert_in_epsilon(15.264960985653945, worksheet.output_ab239, 0.001); end
  def test_output_ad239; assert_in_epsilon(31.854001818343814, worksheet.output_ad239, 0.001); end
  def test_output_ae239; assert_in_epsilon(26.72493716357163, worksheet.output_ae239, 0.001); end
  def test_output_af239; assert_in_epsilon(22.378343185725527, worksheet.output_af239, 0.001); end
  def test_output_ag239; assert_in_epsilon(18.707817012552187, worksheet.output_ag239, 0.001); end
  def test_output_ah239; assert_in_epsilon(15.620193699246634, worksheet.output_ah239, 0.001); end
  def test_output_ai239; assert_in_epsilon(13.03400210347708, worksheet.output_ai239, 0.001); end
  def test_output_aj239; assert_in_epsilon(10.87809248473593, worksheet.output_aj239, 0.001); end
  def test_output_am239; assert_in_delta(-0.03497819940082536, worksheet.output_am239, 0.001); end
  def test_output_an239; assert_in_delta(-0.7592950728111478, worksheet.output_an239, 0.001); end
  def test_output_ak239; assert_in_epsilon(9.090417412263374, worksheet.output_ak239, 0.001); end
  def test_output_ao239; assert_in_delta(-0.2750156658076486, worksheet.output_ao239, 0.001); end
  def test_output_c240; assert_equal("XI.f", worksheet.output_c240); end
  def test_output_d240; assert_equal("V.05", worksheet.output_d240); end
  def test_output_e240; assert_equal("Gaseous hydrocarbons / Pulp & Paper Industry", worksheet.output_e240); end
  def test_output_f240; assert_equal("TWh/yr", worksheet.output_f240); end
  def test_output_g240; assert_equal("NIR", worksheet.output_g240); end
  def test_output_h240; assert_in_epsilon(1.395441851005422, worksheet.output_h240, 0.001); end
  def test_output_m240; assert_in_epsilon(1.5991180416666668, worksheet.output_m240, 0.001); end
  def test_output_r240; assert_in_epsilon(1.8304070713177778, worksheet.output_r240, 0.001); end
  def test_output_w240; assert_in_epsilon(1.4789523626164445, worksheet.output_w240, 0.001); end
  def test_output_ab240; assert_in_epsilon(1.2706933407702057, worksheet.output_ab240, 0.001); end
  def test_output_ad240; assert_in_epsilon(2.9282360295287604, worksheet.output_ad240, 0.001); end
  def test_output_ae240; assert_in_epsilon(2.85173501686457, worksheet.output_ae240, 0.001); end
  def test_output_af240; assert_in_epsilon(2.772069577993902, worksheet.output_af240, 0.001); end
  def test_output_ag240; assert_in_epsilon(2.571121031947973, worksheet.output_ag240, 0.001); end
  def test_output_ah240; assert_in_epsilon(2.4382959228798016, worksheet.output_ah240, 0.001); end
  def test_output_ai240; assert_in_epsilon(2.2566841499476453, worksheet.output_ai240, 0.001); end
  def test_output_aj240; assert_in_epsilon(2.0855922977218735, worksheet.output_aj240, 0.001); end
  def test_output_am240; assert_in_delta(-0.011011754014363162, worksheet.output_am240, 0.001); end
  def test_output_an240; assert_in_delta(-0.3578371114975698, worksheet.output_an240, 0.001); end
  def test_output_ak240; assert_in_epsilon(1.9244735583631696, worksheet.output_ak240, 0.001); end
  def test_output_ao240; assert_in_delta(0.3791141185686655, worksheet.output_ao240, 0.001); end
  def test_output_c241; assert_equal("XI.g", worksheet.output_c241); end
  def test_output_d241; assert_equal("V.05", worksheet.output_d241); end
  def test_output_e241; assert_equal("Gaseous hydrocarbons / Oil & Gas Industry", worksheet.output_e241); end
  def test_output_f241; assert_equal("TWh/yr", worksheet.output_f241); end
  def test_output_h241; assert_in_delta(0, (worksheet.output_h241||0), 0.001); end
  def test_output_m241; assert_in_delta(0, (worksheet.output_m241||0), 0.001); end
  def test_output_r241; assert_in_delta(0, (worksheet.output_r241||0), 0.001); end
  def test_output_w241; assert_in_delta(0, (worksheet.output_w241||0), 0.001); end
  def test_output_ab241; assert_in_delta(0, (worksheet.output_ab241||0), 0.001); end
  def test_output_ad241; assert_in_epsilon(7.7230631616729415, worksheet.output_ad241, 0.001); end
  def test_output_ae241; assert_in_epsilon(4.694919337542024, worksheet.output_ae241, 0.001); end
  def test_output_af241; assert_in_epsilon(3.5708417019161924, worksheet.output_af241, 0.001); end
  def test_output_ag241; assert_in_epsilon(2.6153094048230976, worksheet.output_ag241, 0.001); end
  def test_output_ah241; assert_in_epsilon(1.8813791113997518, worksheet.output_ah241, 0.001); end
  def test_output_ai241; assert_in_epsilon(1.3592752896765938, worksheet.output_ai241, 0.001); end
  def test_output_aj241; assert_in_delta(0.9466432058638705, worksheet.output_aj241, 0.001); end
  def test_output_am241; assert_in_delta(-0.06247741795051365, worksheet.output_am241, 0.001); end
  def test_output_an241; assert_in_delta(-0.924269731951096, worksheet.output_an241, 0.001); end
  def test_output_ak241; assert_in_delta(0.6248216857600059, worksheet.output_ak241, 0.001); end
  def test_output_ao241; assert_equal("", worksheet.output_ao241); end
  def test_output_c242; assert_equal("XI.h", worksheet.output_c242); end
  def test_output_d242; assert_equal("V.05", worksheet.output_d242); end
  def test_output_e242; assert_equal("Gaseous hydrocarbons / Food, drinks and tobacco Industry", worksheet.output_e242); end
  def test_output_f242; assert_equal("TWh/yr", worksheet.output_f242); end
  def test_output_g242; assert_equal("NIR", worksheet.output_g242); end
  def test_output_h242; assert_in_epsilon(3.3877731294475835, worksheet.output_h242, 0.001); end
  def test_output_m242; assert_in_epsilon(3.783129195, worksheet.output_m242, 0.001); end
  def test_output_r242; assert_in_epsilon(5.438133538148334, worksheet.output_r242, 0.001); end
  def test_output_w242; assert_in_epsilon(6.701722599900639, worksheet.output_w242, 0.001); end
  def test_output_ab242; assert_in_epsilon(8.473917498855556, worksheet.output_ab242, 0.001); end
  def test_output_ad242; assert_in_epsilon(7.500686109424958, worksheet.output_ad242, 0.001); end
  def test_output_ae242; assert_in_epsilon(6.074380207103317, worksheet.output_ae242, 0.001); end
  def test_output_af242; assert_in_epsilon(4.767200239464338, worksheet.output_af242, 0.001); end
  def test_output_ag242; assert_in_epsilon(3.446764943444839, worksheet.output_ag242, 0.001); end
  def test_output_ah242; assert_in_epsilon(2.3633830835056995, worksheet.output_ah242, 0.001); end
  def test_output_ai242; assert_in_epsilon(1.4365950667495158, worksheet.output_ai242, 0.001); end
  def test_output_aj242; assert_in_delta(0.6527230350731053, worksheet.output_aj242, 0.001); end
  def test_output_am242; assert_in_delta(-1, worksheet.output_am242, 0.001); end
  def test_output_an242; assert_in_delta(-1, worksheet.output_an242, 0.001); end
  def test_output_ak242; assert_in_delta(0, (worksheet.output_ak242||0), 0.001); end
  def test_output_ao242; assert_in_delta(-1, worksheet.output_ao242, 0.001); end
  def test_output_c243; assert_equal("XI.i", worksheet.output_c243); end
  def test_output_d243; assert_equal("V.05", worksheet.output_d243); end
  def test_output_e243; assert_equal("Gaseous hydrocarbons / Machines Industry", worksheet.output_e243); end
  def test_output_f243; assert_equal("TWh/yr", worksheet.output_f243); end
  def test_output_h243; assert_in_delta(0, (worksheet.output_h243||0), 0.001); end
  def test_output_m243; assert_in_delta(0, (worksheet.output_m243||0), 0.001); end
  def test_output_r243; assert_in_delta(0, (worksheet.output_r243||0), 0.001); end
  def test_output_w243; assert_in_delta(0, (worksheet.output_w243||0), 0.001); end
  def test_output_ab243; assert_in_delta(0, (worksheet.output_ab243||0), 0.001); end
  def test_output_ad243; assert_in_delta(0, (worksheet.output_ad243||0), 0.001); end
  def test_output_ae243; assert_in_delta(0, (worksheet.output_ae243||0), 0.001); end
  def test_output_af243; assert_in_delta(0, (worksheet.output_af243||0), 0.001); end
  def test_output_ag243; assert_in_delta(0, (worksheet.output_ag243||0), 0.001); end
  def test_output_ah243; assert_in_delta(0, (worksheet.output_ah243||0), 0.001); end
  def test_output_ai243; assert_in_delta(0, (worksheet.output_ai243||0), 0.001); end
  def test_output_aj243; assert_in_delta(0, (worksheet.output_aj243||0), 0.001); end
  def test_output_am243; assert_equal("", worksheet.output_am243); end
  def test_output_an243; assert_equal("", worksheet.output_an243); end
  def test_output_ak243; assert_in_delta(0, (worksheet.output_ak243||0), 0.001); end
  def test_output_ao243; assert_equal("", worksheet.output_ao243); end
  def test_output_c244; assert_equal("XI.j", worksheet.output_c244); end
  def test_output_d244; assert_equal("V.05", worksheet.output_d244); end
  def test_output_e244; assert_equal("Gaseous hydrocarbons / Non-Ferrous metals Industry", worksheet.output_e244); end
  def test_output_f244; assert_equal("TWh/yr", worksheet.output_f244); end
  def test_output_g244; assert_equal("NIR", worksheet.output_g244); end
  def test_output_h244; assert_in_epsilon(1.2915243150834943, worksheet.output_h244, 0.001); end
  def test_output_m244; assert_in_epsilon(1.2237401572222222, worksheet.output_m244, 0.001); end
  def test_output_r244; assert_in_epsilon(1.3271083733333333, worksheet.output_r244, 0.001); end
  def test_output_w244; assert_in_epsilon(1.6504345251752224, worksheet.output_w244, 0.001); end
  def test_output_ab244; assert_in_epsilon(1.5541568631772027, worksheet.output_ab244, 0.001); end
  def test_output_ad244; assert_in_epsilon(1.21306488094908, worksheet.output_ad244, 0.001); end
  def test_output_ae244; assert_in_delta(0.9212491477744394, worksheet.output_ae244, 0.001); end
  def test_output_af244; assert_in_delta(0.6756527999063779, worksheet.output_af244, 0.001); end
  def test_output_ag244; assert_in_delta(0.46122496838574034, worksheet.output_ag244, 0.001); end
  def test_output_ah244; assert_in_delta(0.292427523682622, worksheet.output_ah244, 0.001); end
  def test_output_ai244; assert_in_delta(0.16301042883438652, worksheet.output_ai244, 0.001); end
  def test_output_aj244; assert_in_delta(0.06727020680393204, worksheet.output_aj244, 0.001); end
  def test_output_am244; assert_in_delta(-1, worksheet.output_am244, 0.001); end
  def test_output_an244; assert_in_delta(-1, worksheet.output_an244, 0.001); end
  def test_output_ak244; assert_in_delta(0, (worksheet.output_ak244||0), 0.001); end
  def test_output_ao244; assert_in_delta(-1, worksheet.output_ao244, 0.001); end
  def test_output_c245; assert_equal("XI.k", worksheet.output_c245); end
  def test_output_d245; assert_equal("V.05", worksheet.output_d245); end
  def test_output_e245; assert_equal("Gaseous hydrocarbons / Construction industry", worksheet.output_e245); end
  def test_output_f245; assert_equal("TWh/yr", worksheet.output_f245); end
  def test_output_g245; assert_equal("IEA", worksheet.output_g245); end
  def test_output_h245; assert_in_epsilon(4.889891391999999, worksheet.output_h245, 0.001); end
  def test_output_m245; assert_in_epsilon(5.3228505256666665, worksheet.output_m245, 0.001); end
  def test_output_r245; assert_in_epsilon(4.456932258333333, worksheet.output_r245, 0.001); end
  def test_output_w245; assert_in_epsilon(3.654684451833333, worksheet.output_w245, 0.001); end
  def test_output_ab245; assert_in_epsilon(1.9228479171666666, worksheet.output_ab245, 0.001); end
  def test_output_ad245; assert_in_epsilon(2.0244806639040958, worksheet.output_ad245, 0.001); end
  def test_output_ae245; assert_in_epsilon(1.7504328059335448, worksheet.output_ae245, 0.001); end
  def test_output_af245; assert_in_epsilon(1.4695356495759653, worksheet.output_af245, 0.001); end
  def test_output_ag245; assert_in_epsilon(1.2189476783879791, worksheet.output_ag245, 0.001); end
  def test_output_ah245; assert_in_delta(0.9793392556945533, worksheet.output_ah245, 0.001); end
  def test_output_ai245; assert_in_delta(0.7524766172559787, worksheet.output_ai245, 0.001); end
  def test_output_aj245; assert_in_delta(0.5399028953680893, worksheet.output_aj245, 0.001); end
  def test_output_am245; assert_in_delta(-0.04216858492303621, worksheet.output_am245, 0.001); end
  def test_output_an245; assert_in_delta(-0.8215308811421208, worksheet.output_an245, 0.001); end
  def test_output_ak245; assert_in_delta(0.3429381188622606, worksheet.output_ak245, 0.001); end
  def test_output_ao245; assert_in_delta(-0.9298679476964832, worksheet.output_ao245, 0.001); end
  def test_output_c246; assert_equal("XI.l", worksheet.output_c246); end
  def test_output_d246; assert_equal("V.05", worksheet.output_d246); end
  def test_output_e246; assert_equal("Gaseous hydrocarbons / Other Industry", worksheet.output_e246); end
  def test_output_f246; assert_equal("TWh/yr", worksheet.output_f246); end
  def test_output_g246; assert_equal("NIR", worksheet.output_g246); end
  def test_output_h246; assert_in_delta(0.6930740640241666, worksheet.output_h246, 0.001); end
  def test_output_m246; assert_in_epsilon(1.3035701387715841, worksheet.output_m246, 0.001); end
  def test_output_r246; assert_in_epsilon(3.756945723566239, worksheet.output_r246, 0.001); end
  def test_output_w246; assert_in_epsilon(2.4722650001341755, worksheet.output_w246, 0.001); end
  def test_output_ab246; assert_in_epsilon(4.123881195063056, worksheet.output_ab246, 0.001); end
  def test_output_ad246; assert_in_delta(0, (worksheet.output_ad246||0), 0.001); end
  def test_output_ae246; assert_in_delta(0, (worksheet.output_ae246||0), 0.001); end
  def test_output_af246; assert_in_delta(0, (worksheet.output_af246||0), 0.001); end
  def test_output_ag246; assert_in_delta(0, (worksheet.output_ag246||0), 0.001); end
  def test_output_ah246; assert_in_delta(0, (worksheet.output_ah246||0), 0.001); end
  def test_output_ai246; assert_in_delta(0, (worksheet.output_ai246||0), 0.001); end
  def test_output_aj246; assert_in_delta(0, (worksheet.output_aj246||0), 0.001); end
  def test_output_am246; assert_equal("", worksheet.output_am246); end
  def test_output_an246; assert_equal("", worksheet.output_an246); end
  def test_output_ak246; assert_in_delta(0, (worksheet.output_ak246||0), 0.001); end
  def test_output_ao246; assert_in_delta(-1, worksheet.output_ao246, 0.001); end
  def test_output_c247; assert_equal("XI", worksheet.output_c247); end
  def test_output_d247; assert_equal("V.05", worksheet.output_d247); end
  def test_output_e247; assert_equal("Gaseous hydrocarbons / Industry", worksheet.output_e247); end
  def test_output_f247; assert_equal("TWh/yr", worksheet.output_f247); end
  def test_output_g247; assert_equal("NIR", worksheet.output_g247); end
  def test_output_h247; assert_in_epsilon(38.724187426593055, worksheet.output_h247, 0.001); end
  def test_output_m247; assert_in_epsilon(44.65521246749389, worksheet.output_m247, 0.001); end
  def test_output_r247; assert_in_epsilon(52.55285526369778, worksheet.output_r247, 0.001); end
  def test_output_w247; assert_in_epsilon(48.69911373281666, worksheet.output_w247, 0.001); end
  def test_output_ab247; assert_in_epsilon(44.63401578353834, worksheet.output_ab247, 0.001); end
  def test_output_ad247; assert_in_epsilon(63.919048695224085, worksheet.output_ad247, 0.001); end
  def test_output_ae247; assert_in_epsilon(54.477584675800685, worksheet.output_ae247, 0.001); end
  def test_output_af247; assert_in_epsilon(46.786924944519534, worksheet.output_af247, 0.001); end
  def test_output_ag247; assert_in_epsilon(39.6612279577962, worksheet.output_ag247, 0.001); end
  def test_output_ah247; assert_in_epsilon(33.22363813980179, worksheet.output_ah247, 0.001); end
  def test_output_ai247; assert_in_epsilon(27.736449733088822, worksheet.output_ai247, 0.001); end
  def test_output_aj247; assert_in_epsilon(23.060051455748344, worksheet.output_aj247, 0.001); end
  def test_output_am247; assert_in_delta(-0.03182853524507312, worksheet.output_am247, 0.001); end
  def test_output_an247; assert_in_delta(-0.7257850456468884, worksheet.output_an247, 0.001); end
  def test_output_ak247; assert_in_epsilon(19.465766078813907, worksheet.output_ak247, 0.001); end
  def test_output_ao247; assert_in_delta(-0.49732280075046364, worksheet.output_ao247, 0.001); end
  def test_output_f248; assert_equal("TWh/yr", worksheet.output_f248); end
  def test_output_am248; assert_equal("", worksheet.output_am248); end
  def test_output_an248; assert_equal("", worksheet.output_an248); end
  def test_output_ao248; assert_equal("", worksheet.output_ao248); end
  def test_output_e249; assert_equal("Residential heat demand", worksheet.output_e249); end
  def test_output_f249; assert_equal("TWh/yr", worksheet.output_f249); end
  def test_output_g249; assert_equal("same as above", worksheet.output_g249); end
  def test_output_h249; assert_in_epsilon(84.44099755264888, worksheet.output_h249, 0.001); end
  def test_output_m249; assert_in_epsilon(94.56243360318945, worksheet.output_m249, 0.001); end
  def test_output_r249; assert_in_epsilon(90.32120404322806, worksheet.output_r249, 0.001); end
  def test_output_w249; assert_in_epsilon(94.89659740822027, worksheet.output_w249, 0.001); end
  def test_output_ab249; assert_in_epsilon(101.53865837019805, worksheet.output_ab249, 0.001); end
  def test_output_am249; assert_in_delta(-0.023098893789396335, worksheet.output_am249, 0.001); end
  def test_output_an249; assert_in_delta(-0.607333315578545, worksheet.output_an249, 0.001); end
  def test_output_ak249; assert_in_epsilon(28.349018355400858, worksheet.output_ak249, 0.001); end
  def test_output_ao249; assert_in_delta(-0.6642742367210279, worksheet.output_ao249, 0.001); end
  def test_output_e250; assert_equal("Residential heat demand per household", worksheet.output_e250); end
  def test_output_f250; assert_equal("MWh/yr", worksheet.output_f250); end
  def test_output_ac249; assert_in_epsilon(72.19613855748818, worksheet.output_ac249, 0.001); end
  def test_output_ac250; assert_in_epsilon(15.672516871105145, worksheet.output_ac250, 0.001); end
  def test_output_ad249; assert_in_epsilon(72.12403777651502, worksheet.output_ad249, 0.001); end
  def test_output_ad250; assert_in_epsilon(14.578263742196905, worksheet.output_ad250, 0.001); end
  def test_output_ae249; assert_in_epsilon(67.12509503661677, worksheet.output_ae249, 0.001); end
  def test_output_ae250; assert_in_epsilon(11.951474847860426, worksheet.output_ae250, 0.001); end
  def test_output_af249; assert_in_epsilon(59.77868579577105, worksheet.output_af249, 0.001); end
  def test_output_af250; assert_in_epsilon(10.017686107701076, worksheet.output_af250, 0.001); end
  def test_output_ag249; assert_in_epsilon(52.91580790526237, worksheet.output_ag249, 0.001); end
  def test_output_ag250; assert_in_epsilon(8.351354952234006, worksheet.output_ag250, 0.001); end
  def test_output_ah249; assert_in_epsilon(46.36434164122021, worksheet.output_ah249, 0.001); end
  def test_output_ah250; assert_in_epsilon(6.987230653254854, worksheet.output_ah250, 0.001); end
  def test_output_ai249; assert_in_epsilon(40.13287333628548, worksheet.output_ai249, 0.001); end
  def test_output_ai250; assert_in_epsilon(5.774215893962429, worksheet.output_ai250, 0.001); end
  def test_output_aj249; assert_in_epsilon(34.09018203188147, worksheet.output_aj249, 0.001); end
  def test_output_aj250; assert_in_epsilon(4.712308332019156, worksheet.output_aj250, 0.001); end
  def test_output_am250; assert_in_delta(-0.035036108452919934, worksheet.output_am250, 0.001); end
  def test_output_an250; assert_in_delta(-0.759872166333634, worksheet.output_an250, 0.001); end
  def test_output_ak250; assert_in_epsilon(3.7634075243580516, worksheet.output_ak250, 0.001); end
  def test_output_ao250; assert_equal("", worksheet.output_ao250); end
  def test_output_e251; assert_equal("Commercial Heat demand", worksheet.output_e251); end
  def test_output_f251; assert_equal("TWh/yr", worksheet.output_f251); end
  def test_output_g251; assert_equal("same as above", worksheet.output_g251); end
  def test_output_h251; assert_in_delta(0, (worksheet.output_h251||0), 0.001); end
  def test_output_m251; assert_in_delta(0, (worksheet.output_m251||0), 0.001); end
  def test_output_r251; assert_in_delta(0, (worksheet.output_r251||0), 0.001); end
  def test_output_w251; assert_in_delta(0, (worksheet.output_w251||0), 0.001); end
  def test_output_ab251; assert_in_epsilon(31.673084122563054, worksheet.output_ab251, 0.001); end
  def test_output_ad251; assert_in_epsilon(24.33504688374735, worksheet.output_ad251, 0.001); end
  def test_output_ae251; assert_in_epsilon(21.00247346858872, worksheet.output_ae251, 0.001); end
  def test_output_af251; assert_in_epsilon(17.672349516538077, worksheet.output_af251, 0.001); end
  def test_output_ag251; assert_in_epsilon(14.805176579938184, worksheet.output_ag251, 0.001); end
  def test_output_ah251; assert_in_epsilon(12.185452782374263, worksheet.output_ah251, 0.001); end
  def test_output_ai251; assert_in_epsilon(9.86744435983999, worksheet.output_ai251, 0.001); end
  def test_output_aj251; assert_in_epsilon(7.795455770533307, worksheet.output_aj251, 0.001); end
  def test_output_am251; assert_in_delta(-0.03682429801313303, worksheet.output_am251, 0.001); end
  def test_output_an251; assert_in_delta(-0.7770431989455702, worksheet.output_an251, 0.001); end
  def test_output_ak251; assert_in_epsilon(5.8359869053076014, worksheet.output_ak251, 0.001); end
  def test_output_ao251; assert_equal("", worksheet.output_ao251); end
  def test_output_e252; assert_equal("Transport heat demand", worksheet.output_e252); end
  def test_output_f252; assert_equal("TWh/yr", worksheet.output_f252); end
  def test_output_g252; assert_equal("not same as above as includes other heats (not only liquid)", worksheet.output_g252); end
  def test_output_h252; assert_in_epsilon(78.63030965781796, worksheet.output_h252, 0.001); end
  def test_output_m252; assert_in_epsilon(85.95171327468337, worksheet.output_m252, 0.001); end
  def test_output_r252; assert_in_epsilon(93.50280602370111, worksheet.output_r252, 0.001); end
  def test_output_w252; assert_in_epsilon(99.18759836466883, worksheet.output_w252, 0.001); end
  def test_output_ab252; assert_in_epsilon(96.62393244829158, worksheet.output_ab252, 0.001); end
  def test_output_ac208; assert_in_epsilon(114.28616266127325, worksheet.output_ac208, 0.001); end
  def test_output_ac252; assert_in_epsilon(114.28616266127325, worksheet.output_ac252, 0.001); end
  def test_output_ad208; assert_in_epsilon(106.97550727269866, worksheet.output_ad208, 0.001); end
  def test_output_ad252; assert_in_epsilon(106.97550727269866, worksheet.output_ad252, 0.001); end
  def test_output_ae208; assert_in_epsilon(89.36954161796672, worksheet.output_ae208, 0.001); end
  def test_output_ae252; assert_in_epsilon(89.36954161796672, worksheet.output_ae252, 0.001); end
  def test_output_af208; assert_in_epsilon(72.58310351498324, worksheet.output_af208, 0.001); end
  def test_output_af252; assert_in_epsilon(72.58310351498324, worksheet.output_af252, 0.001); end
  def test_output_ag208; assert_in_epsilon(56.72292839027392, worksheet.output_ag208, 0.001); end
  def test_output_ag252; assert_in_epsilon(56.72292839027392, worksheet.output_ag252, 0.001); end
  def test_output_ah208; assert_in_epsilon(43.59633127393328, worksheet.output_ah208, 0.001); end
  def test_output_ah252; assert_in_epsilon(43.59633127393328, worksheet.output_ah252, 0.001); end
  def test_output_ai208; assert_in_epsilon(34.391193566513635, worksheet.output_ai208, 0.001); end
  def test_output_ai252; assert_in_epsilon(34.391193566513635, worksheet.output_ai252, 0.001); end
  def test_output_aj208; assert_in_epsilon(26.541602234059948, worksheet.output_aj208, 0.001); end
  def test_output_aj252; assert_in_epsilon(26.541602234059948, worksheet.output_aj252, 0.001); end
  def test_output_ak252; assert_in_epsilon(19.994249806285943, worksheet.output_ak252, 0.001); end
  def test_output_am252; assert_in_delta(-0.04264549213565849, worksheet.output_am252, 0.001); end
  def test_output_an252; assert_in_delta(-0.8250510005699828, worksheet.output_an252, 0.001); end
  def test_output_ao252; assert_in_delta(-0.7457182873462336, worksheet.output_ao252, 0.001); end
  def test_output_e253; assert_equal("Steel Industry", worksheet.output_e253); end
  def test_output_f253; assert_equal("TWh/yr", worksheet.output_f253); end
  def test_output_g253; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g253); end
  def test_output_h253; assert_in_epsilon(60.183731765656674, worksheet.output_h253, 0.001); end
  def test_output_m253; assert_in_epsilon(56.32959960559417, worksheet.output_m253, 0.001); end
  def test_output_r253; assert_in_epsilon(56.35943122310556, worksheet.output_r253, 0.001); end
  def test_output_w253; assert_in_epsilon(49.23773079909472, worksheet.output_w253, 0.001); end
  def test_output_ab253; assert_in_epsilon(31.42672533186936, worksheet.output_ab253, 0.001); end
  def test_output_ac209; assert_in_epsilon(25.213105831443173, worksheet.output_ac209, 0.001); end
  def test_output_ac222; assert_in_epsilon(2.4677643093590182, worksheet.output_ac222, 0.001); end
  def test_output_ac235; assert_in_epsilon(7.021039410895458, worksheet.output_ac235, 0.001); end
  def test_output_ac253; assert_in_epsilon(34.70190955169765, worksheet.output_ac253, 0.001); end
  def test_output_ad222; assert_in_epsilon(1.9771045827301874, worksheet.output_ad222, 0.001); end
  def test_output_ad253; assert_in_epsilon(27.653412627358747, worksheet.output_ad253, 0.001); end
  def test_output_ae222; assert_in_epsilon(1.2970429531666028, worksheet.output_ae222, 0.001); end
  def test_output_ae253; assert_in_epsilon(19.774678070915165, worksheet.output_ae253, 0.001); end
  def test_output_af222; assert_in_delta(0.6758791247158482, worksheet.output_af222, 0.001); end
  def test_output_af253; assert_in_epsilon(13.240724408195303, worksheet.output_af253, 0.001); end
  def test_output_ag222; assert_in_delta(0.11568183917602806, worksheet.output_ag222, 0.001); end
  def test_output_ag253; assert_in_epsilon(7.860016221776607, worksheet.output_ag253, 0.001); end
  def test_output_ah222; assert_in_delta(0.10345171611313794, worksheet.output_ah222, 0.001); end
  def test_output_ah253; assert_in_epsilon(7.029039066214917, worksheet.output_ah253, 0.001); end
  def test_output_ai222; assert_in_delta(0.09248499599699361, worksheet.output_ai222, 0.001); end
  def test_output_ai253; assert_in_epsilon(6.283903973044298, worksheet.output_ai253, 0.001); end
  def test_output_aj222; assert_in_delta(0.08265370644107048, worksheet.output_aj222, 0.001); end
  def test_output_aj253; assert_in_epsilon(5.615915843352186, worksheet.output_aj253, 0.001); end
  def test_output_am253; assert_in_delta(-0.045406408077078186, worksheet.output_am253, 0.001); end
  def test_output_an253; assert_in_delta(-0.8441378772267016, worksheet.output_an253, 0.001); end
  def test_output_ak253; assert_in_epsilon(5.408713287014597, worksheet.output_ak253, 0.001); end
  def test_output_ao253; assert_in_delta(-0.910129978179568, worksheet.output_ao253, 0.001); end
  def test_output_e254; assert_equal("Cement Industry", worksheet.output_e254); end
  def test_output_f254; assert_equal("TWh/yr", worksheet.output_f254); end
  def test_output_g254; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g254); end
  def test_output_h254; assert_in_epsilon(6.624320139361679, worksheet.output_h254, 0.001); end
  def test_output_m254; assert_in_epsilon(6.920126173894529, worksheet.output_m254, 0.001); end
  def test_output_r254; assert_in_epsilon(7.205143913490148, worksheet.output_r254, 0.001); end
  def test_output_w254; assert_in_epsilon(6.715928995253674, worksheet.output_w254, 0.001); end
  def test_output_ab254; assert_in_epsilon(5.78262110784015, worksheet.output_ab254, 0.001); end
  def test_output_ac210; assert_in_epsilon(5.2186, worksheet.output_ac210, 0.001); end
  def test_output_ac223; assert_in_delta(0.12409999999999999, worksheet.output_ac223, 0.001); end
  def test_output_ac236; assert_in_delta(0.17699999999999996, worksheet.output_ac236, 0.001); end
  def test_output_ac254; assert_in_epsilon(5.5197, worksheet.output_ac254, 0.001); end
  def test_output_ad223; assert_in_delta(0.06753791933198698, worksheet.output_ad223, 0.001); end
  def test_output_ad254; assert_in_epsilon(3.4903584271416563, worksheet.output_ad254, 0.001); end
  def test_output_ae223; assert_in_delta(0.04693317158819809, worksheet.output_ae223, 0.001); end
  def test_output_ae254; assert_in_epsilon(2.876197877216472, worksheet.output_ae254, 0.001); end
  def test_output_af223; assert_in_delta(0.02405003348907197, worksheet.output_af223, 0.001); end
  def test_output_af254; assert_in_epsilon(1.7971828409690394, worksheet.output_af254, 0.001); end
  def test_output_ag223; assert_in_delta(0.015949254277345216, worksheet.output_ag223, 0.001); end
  def test_output_ag254; assert_in_epsilon(1.5134698486774594, worksheet.output_ag254, 0.001); end
  def test_output_ah223; assert_in_delta(0.009938644662281091, worksheet.output_ah223, 0.001); end
  def test_output_ah254; assert_in_epsilon(1.2771438691243278, worksheet.output_ah254, 0.001); end
  def test_output_ai223; assert_in_delta(0.005215230872401469, worksheet.output_ai223, 0.001); end
  def test_output_ai254; assert_in_epsilon(1.020739610845558, worksheet.output_ai254, 0.001); end
  def test_output_aj223; assert_in_delta(0.0018732596855636063, worksheet.output_aj223, 0.001); end
  def test_output_aj254; assert_in_delta(0.7444010962571025, worksheet.output_aj254, 0.001); end
  def test_output_am254; assert_in_delta(-0.059798365087689875, worksheet.output_am254, 0.001); end
  def test_output_an254; assert_in_delta(-0.9151132157059955, worksheet.output_an254, 0.001); end
  def test_output_ak254; assert_in_delta(0.46854958326761703, worksheet.output_ak254, 0.001); end
  def test_output_ao254; assert_in_delta(-0.9292682760780993, worksheet.output_ao254, 0.001); end
  def test_output_e255; assert_equal("Lime Industry", worksheet.output_e255); end
  def test_output_f255; assert_equal("TWh/yr", worksheet.output_f255); end
  def test_output_g255; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g255); end
  def test_output_h255; assert_in_epsilon(1.4801823674857828, worksheet.output_h255, 0.001); end
  def test_output_m255; assert_in_epsilon(1.546279244946419, worksheet.output_m255, 0.001); end
  def test_output_r255; assert_in_epsilon(1.6099655136796125, worksheet.output_r255, 0.001); end
  def test_output_w255; assert_in_epsilon(1.5006520625403974, worksheet.output_w255, 0.001); end
  def test_output_ab255; assert_in_epsilon(1.292107510145316, worksheet.output_ab255, 0.001); end
  def test_output_ac211; assert_in_epsilon(2.437745457007773, worksheet.output_ac211, 0.001); end
  def test_output_ac224; assert_in_delta(0.31356699564601864, worksheet.output_ac224, 0.001); end
  def test_output_ac237; assert_in_delta(0.7051257823009323, worksheet.output_ac237, 0.001); end
  def test_output_ac255; assert_in_epsilon(3.456438234954724, worksheet.output_ac255, 0.001); end
  def test_output_ad224; assert_in_delta(0.27422405160965185, worksheet.output_ad224, 0.001); end
  def test_output_ad255; assert_in_epsilon(3.2896298977891947, worksheet.output_ad255, 0.001); end
  def test_output_ae224; assert_in_delta(0.2376397858718394, worksheet.output_ae224, 0.001); end
  def test_output_ae255; assert_in_epsilon(3.122184446051877, worksheet.output_ae255, 0.001); end
  def test_output_af224; assert_in_delta(0.20376604428638534, worksheet.output_af224, 0.001); end
  def test_output_af255; assert_in_epsilon(2.954133633863301, worksheet.output_af255, 0.001); end
  def test_output_ag224; assert_in_delta(0.1802311490248802, worksheet.output_ag224, 0.001); end
  def test_output_ag255; assert_in_epsilon(2.9094182049520025, worksheet.output_ag255, 0.001); end
  def test_output_ah224; assert_in_delta(0.15740657754066759, worksheet.output_ah224, 0.001); end
  def test_output_ah255; assert_in_epsilon(2.860709983569793, worksheet.output_ah255, 0.001); end
  def test_output_ai224; assert_in_delta(0.13535374938166797, worksheet.output_ai224, 0.001); end
  def test_output_ai255; assert_in_epsilon(2.8080181158327338, worksheet.output_ai255, 0.001); end
  def test_output_aj224; assert_in_delta(0.11412940538647592, worksheet.output_aj224, 0.001); end
  def test_output_aj255; assert_in_epsilon(2.7512882438030553, worksheet.output_aj255, 0.001); end
  def test_output_am255; assert_in_delta(-0.006247356030067541, worksheet.output_am255, 0.001); end
  def test_output_an255; assert_in_delta(-0.22172714018772788, worksheet.output_an255, 0.001); end
  def test_output_ak255; assert_in_epsilon(2.6900520698826953, worksheet.output_ak255, 0.001); end
  def test_output_ao255; assert_in_delta(0.8173788101880854, worksheet.output_ao255, 0.001); end
  def test_output_e256; assert_equal("Minerals Industry", worksheet.output_e256); end
  def test_output_f256; assert_equal("TWh/yr", worksheet.output_f256); end
  def test_output_g256; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g256); end
  def test_output_h256; assert_in_epsilon(13.74981695562558, worksheet.output_h256, 0.001); end
  def test_output_m256; assert_in_epsilon(12.947730617029261, worksheet.output_m256, 0.001); end
  def test_output_r256; assert_in_epsilon(12.404955349156253, worksheet.output_r256, 0.001); end
  def test_output_w256; assert_in_epsilon(13.158964001258862, worksheet.output_w256, 0.001); end
  def test_output_ab256; assert_in_epsilon(12.71048213670507, worksheet.output_ab256, 0.001); end
  def test_output_ac212; assert_in_delta(0, (worksheet.output_ac212||0), 0.001); end
  def test_output_ac225; assert_in_epsilon(1.71255, worksheet.output_ac225, 0.001); end
  def test_output_ac238; assert_in_epsilon(1.561765714285714, worksheet.output_ac238, 0.001); end
  def test_output_ac256; assert_in_epsilon(3.2743157142857138, worksheet.output_ac256, 0.001); end
  def test_output_ad225; assert_in_delta(0.6506191322588739, worksheet.output_ad225, 0.001); end
  def test_output_ad256; assert_in_epsilon(3.0154434317438943, worksheet.output_ad256, 0.001); end
  def test_output_ae225; assert_in_delta(0, (worksheet.output_ae225||0), 0.001); end
  def test_output_ae256; assert_in_epsilon(2.7525397423860594, worksheet.output_ae256, 0.001); end
  def test_output_af225; assert_in_delta(0, (worksheet.output_af225||0), 0.001); end
  def test_output_af256; assert_in_epsilon(2.6267745438784655, worksheet.output_af256, 0.001); end
  def test_output_ag225; assert_in_delta(0, (worksheet.output_ag225||0), 0.001); end
  def test_output_ag256; assert_in_epsilon(2.476269786752485, worksheet.output_ag256, 0.001); end
  def test_output_ah225; assert_in_delta(0, (worksheet.output_ah225||0), 0.001); end
  def test_output_ah256; assert_in_epsilon(2.3356412310033714, worksheet.output_ah256, 0.001); end
  def test_output_ai225; assert_in_delta(0, (worksheet.output_ai225||0), 0.001); end
  def test_output_ai256; assert_in_epsilon(2.203832213117681, worksheet.output_ai256, 0.001); end
  def test_output_aj225; assert_in_delta(0, (worksheet.output_aj225||0), 0.001); end
  def test_output_aj256; assert_in_epsilon(2.079934254338659, worksheet.output_aj256, 0.001); end
  def test_output_am256; assert_in_delta(-0.0127073327439301, worksheet.output_am256, 0.001); end
  def test_output_an256; assert_in_delta(-0.40043474320299455, worksheet.output_an256, 0.001); end
  def test_output_ak256; assert_in_epsilon(1.9631659420701844, worksheet.output_ak256, 0.001); end
  def test_output_ao256; assert_in_delta(-0.8572223944212597, worksheet.output_ao256, 0.001); end
  def test_output_e257; assert_equal("Chemicals Industry", worksheet.output_e257); end
  def test_output_f257; assert_equal("TWh/yr", worksheet.output_f257); end
  def test_output_g257; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g257); end
  def test_output_h257; assert_in_epsilon(26.61461208364439, worksheet.output_h257, 0.001); end
  def test_output_m257; assert_in_epsilon(37.16335258484, worksheet.output_m257, 0.001); end
  def test_output_r257; assert_in_epsilon(42.40534317759028, worksheet.output_r257, 0.001); end
  def test_output_w257; assert_in_epsilon(39.253887530775, worksheet.output_w257, 0.001); end
  def test_output_ab257; assert_in_epsilon(38.91646071997278, worksheet.output_ab257, 0.001); end
  def test_output_ac213; assert_in_delta(0.2402105399998409, worksheet.output_ac213, 0.001); end
  def test_output_ac226; assert_in_epsilon(2.5618235742122293, worksheet.output_ac226, 0.001); end
  def test_output_ac239; assert_in_epsilon(37.76581359770511, worksheet.output_ac239, 0.001); end
  def test_output_ac257; assert_in_epsilon(40.56784771191718, worksheet.output_ac257, 0.001); end
  def test_output_ad226; assert_in_epsilon(2.168013344623918, worksheet.output_ad226, 0.001); end
  def test_output_ad257; assert_in_epsilon(34.22144236813543, worksheet.output_ad257, 0.001); end
  def test_output_ae226; assert_in_epsilon(1.8248390777270123, worksheet.output_ae226, 0.001); end
  def test_output_ae257; assert_in_epsilon(28.71381007107222, worksheet.output_ae257, 0.001); end
  def test_output_af226; assert_in_epsilon(1.532807891711892, worksheet.output_af226, 0.001); end
  def test_output_af257; assert_in_epsilon(24.045163982234826, worksheet.output_af257, 0.001); end
  def test_output_ag226; assert_in_epsilon(1.2850853959324806, worksheet.output_ag226, 0.001); end
  def test_output_ag257; assert_in_epsilon(20.10154655414156, worksheet.output_ag257, 0.001); end
  def test_output_ah226; assert_in_epsilon(1.0756768994966293, worksheet.output_ah226, 0.001); end
  def test_output_ah257; assert_in_epsilon(16.783166421536265, worksheet.output_ah257, 0.001); end
  def test_output_ai226; assert_in_delta(0.8993303659825584, worksheet.output_ai226, 0.001); end
  def test_output_ai257; assert_in_epsilon(14.002746995225735, worksheet.output_ai257, 0.001); end
  def test_output_aj226; assert_in_delta(0.7514500851280675, worksheet.output_aj226, 0.001); end
  def test_output_aj257; assert_in_epsilon(11.684058627632782, worksheet.output_aj257, 0.001); end
  def test_output_am257; assert_in_delta(-0.03498874180668832, worksheet.output_am257, 0.001); end
  def test_output_an257; assert_in_delta(-0.7594002338977226, worksheet.output_an257, 0.001); end
  def test_output_ak257; assert_in_epsilon(9.760614670760082, worksheet.output_ak257, 0.001); end
  def test_output_ao257; assert_in_delta(-0.6332610582455822, worksheet.output_ao257, 0.001); end
  def test_output_e258; assert_equal("Pulp & Paper Industry", worksheet.output_e258); end
  def test_output_f258; assert_equal("TWh/yr", worksheet.output_f258); end
  def test_output_g258; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g258); end
  def test_output_h258; assert_in_epsilon(4.297435008334694, worksheet.output_h258, 0.001); end
  def test_output_m258; assert_in_epsilon(4.3407415219545555, worksheet.output_m258, 0.001); end
  def test_output_r258; assert_in_epsilon(4.623187614179112, worksheet.output_r258, 0.001); end
  def test_output_w258; assert_in_epsilon(5.623636799554722, worksheet.output_w258, 0.001); end
  def test_output_ab258; assert_in_epsilon(6.04977507963275, worksheet.output_ab258, 0.001); end
  def test_output_ac214; assert_in_epsilon(8.279500999999998, worksheet.output_ac214, 0.001); end
  def test_output_ac227; assert_in_delta(0.45363, worksheet.output_ac227, 0.001); end
  def test_output_ac240; assert_in_epsilon(2.9968619999999992, worksheet.output_ac240, 0.001); end
  def test_output_ac258; assert_in_epsilon(11.729992999999997, worksheet.output_ac258, 0.001); end
  def test_output_ad227; assert_in_delta(0.2722371473159307, worksheet.output_ad227, 0.001); end
  def test_output_ad258; assert_in_epsilon(10.916108137245423, worksheet.output_ad258, 0.001); end
  def test_output_ae227; assert_in_delta(0.12342706895308264, worksheet.output_ae227, 0.001); end
  def test_output_ae258; assert_in_epsilon(10.148123664865135, worksheet.output_ae258, 0.001); end
  def test_output_af227; assert_in_delta(0, (worksheet.output_af227||0), 0.001); end
  def test_output_af258; assert_in_epsilon(9.423687040973121, worksheet.output_af258, 0.001); end
  def test_output_ag227; assert_in_delta(0, (worksheet.output_ag227||0), 0.001); end
  def test_output_ag258; assert_in_epsilon(8.740559812021733, worksheet.output_ag258, 0.001); end
  def test_output_ah227; assert_in_delta(0, (worksheet.output_ah227||0), 0.001); end
  def test_output_ah258; assert_in_epsilon(8.28901910432153, worksheet.output_ah258, 0.001); end
  def test_output_ai227; assert_in_delta(0, (worksheet.output_ai227||0), 0.001); end
  def test_output_ai258; assert_in_epsilon(7.671627490252644, worksheet.output_ai258, 0.001); end
  def test_output_aj227; assert_in_delta(0, (worksheet.output_aj227||0), 0.001); end
  def test_output_aj258; assert_in_epsilon(7.089998485181676, worksheet.output_aj258, 0.001); end
  def test_output_am258; assert_in_delta(-0.014490595324522015, worksheet.output_am258, 0.001); end
  def test_output_an258; assert_in_delta(-0.44226111570084203, worksheet.output_an258, 0.001); end
  def test_output_ak258; assert_in_epsilon(6.542273208656931, worksheet.output_ak258, 0.001); end
  def test_output_ao258; assert_in_delta(0.5223669923962708, worksheet.output_ao258, 0.001); end
  def test_output_e259; assert_equal("Oil & Gas Industry", worksheet.output_e259); end
  def test_output_f259; assert_equal("TWh/yr", worksheet.output_f259); end
  def test_output_g259; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g259); end
  def test_output_h259; assert_in_epsilon(15.665450305555554, worksheet.output_h259, 0.001); end
  def test_output_m259; assert_in_epsilon(17.89842569405039, worksheet.output_m259, 0.001); end
  def test_output_r259; assert_in_epsilon(17.976915309166667, worksheet.output_r259, 0.001); end
  def test_output_w259; assert_in_epsilon(18.223878578888886, worksheet.output_w259, 0.001); end
  def test_output_ab259; assert_in_epsilon(21.15161443611111, worksheet.output_ab259, 0.001); end
  def test_output_ac215; assert_in_epsilon(3.4114992046686248, worksheet.output_ac215, 0.001); end
  def test_output_ac228; assert_in_epsilon(1.285767807938034, worksheet.output_ac228, 0.001); end
  def test_output_ac241; assert_in_epsilon(8.250620285095483, worksheet.output_ac241, 0.001); end
  def test_output_ac259; assert_in_epsilon(12.947887297702142, worksheet.output_ac259, 0.001); end
  def test_output_ad259; assert_in_epsilon(11.8883954777796, worksheet.output_ad259, 0.001); end
  def test_output_ae259; assert_in_epsilon(7.091559157298412, worksheet.output_ae259, 0.001); end
  def test_output_af259; assert_in_epsilon(5.294400970029355, worksheet.output_af259, 0.001); end
  def test_output_ag259; assert_in_epsilon(3.807580308322981, worksheet.output_ag259, 0.001); end
  def test_output_ah259; assert_in_epsilon(2.690443881677234, worksheet.output_ah259, 0.001); end
  def test_output_ai259; assert_in_epsilon(1.909912764317085, worksheet.output_ai259, 0.001); end
  def test_output_aj259; assert_in_epsilon(1.3073234563098342, worksheet.output_aj259, 0.001); end
  def test_output_am259; assert_in_delta(-0.06586573134716689, worksheet.output_am259, 0.001); end
  def test_output_an259; assert_in_delta(-0.9344802581790429, worksheet.output_an259, 0.001); end
  def test_output_ak259; assert_in_delta(0.8483422328722947, worksheet.output_ak259, 0.001); end
  def test_output_ao259; assert_in_delta(-0.9458462912763228, worksheet.output_ao259, 0.001); end
  def test_output_e260; assert_equal("Food, drinks and tobacco Industry", worksheet.output_e260); end
  def test_output_f260; assert_equal("TWh/yr", worksheet.output_f260); end
  def test_output_g260; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g260); end
  def test_output_h260; assert_in_epsilon(11.405010130573304, worksheet.output_h260, 0.001); end
  def test_output_m260; assert_in_epsilon(11.129600734792305, worksheet.output_m260, 0.001); end
  def test_output_r260; assert_in_epsilon(9.125679593118583, worksheet.output_r260, 0.001); end
  def test_output_w260; assert_in_epsilon(9.935619273628443, worksheet.output_w260, 0.001); end
  def test_output_ab260; assert_in_epsilon(10.030134709179222, worksheet.output_ab260, 0.001); end
  def test_output_ac216; assert_in_epsilon(1.167226, worksheet.output_ac216, 0.001); end
  def test_output_ac229; assert_in_delta(0.876583, worksheet.output_ac229, 0.001); end
  def test_output_ac242; assert_in_epsilon(9.033314000000003, worksheet.output_ac242, 0.001); end
  def test_output_ac260; assert_in_epsilon(11.077123000000002, worksheet.output_ac260, 0.001); end
  def test_output_ad229; assert_in_delta(0.5317688949716026, worksheet.output_ad229, 0.001); end
  def test_output_ad260; assert_in_epsilon(10.029564180995344, worksheet.output_ad260, 0.001); end
  def test_output_ae229; assert_in_delta(0.24378032994106125, worksheet.output_ae229, 0.001); end
  def test_output_ae260; assert_in_epsilon(9.060531564501087, worksheet.output_ae260, 0.001); end
  def test_output_af229; assert_in_delta(0, (worksheet.output_af229||0), 0.001); end
  def test_output_af260; assert_in_epsilon(8.164013253306656, worksheet.output_af260, 0.001); end
  def test_output_ag229; assert_in_delta(0, (worksheet.output_ag229||0), 0.001); end
  def test_output_ag260; assert_in_epsilon(7.378396455420944, worksheet.output_ag260, 0.001); end
  def test_output_ah229; assert_in_delta(0, (worksheet.output_ah229||0), 0.001); end
  def test_output_ah260; assert_in_epsilon(6.745640294504499, worksheet.output_ah260, 0.001); end
  def test_output_ai229; assert_in_delta(0, (worksheet.output_ai229||0), 0.001); end
  def test_output_ai260; assert_in_epsilon(6.150560378965672, worksheet.output_ai260, 0.001); end
  def test_output_aj229; assert_in_delta(0, (worksheet.output_aj229||0), 0.001); end
  def test_output_aj260; assert_in_epsilon(5.5890661618968895, worksheet.output_aj260, 0.001); end
  def test_output_am260; assert_in_delta(-0.019409789287899715, worksheet.output_am260, 0.001); end
  def test_output_an260; assert_in_delta(-0.543435506573956, worksheet.output_an260, 0.001); end
  def test_output_ak260; assert_in_epsilon(5.057421051112982, worksheet.output_ak260, 0.001); end
  def test_output_ao260; assert_in_delta(-0.5565614591121142, worksheet.output_ao260, 0.001); end
  def test_output_e261; assert_equal("Machines", worksheet.output_e261); end
  def test_output_f261; assert_equal("TWh/yr", worksheet.output_f261); end
  def test_output_g261; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g261); end
  def test_output_h261; assert_in_delta(0, (worksheet.output_h261||0), 0.001); end
  def test_output_m261; assert_in_delta(0, (worksheet.output_m261||0), 0.001); end
  def test_output_r261; assert_in_delta(0, (worksheet.output_r261||0), 0.001); end
  def test_output_w261; assert_in_delta(0, (worksheet.output_w261||0), 0.001); end
  def test_output_ab261; assert_in_delta(0, (worksheet.output_ab261||0), 0.001); end
  def test_output_ac217; assert_in_delta(0, (worksheet.output_ac217||0), 0.001); end
  def test_output_ac230; assert_in_delta(0, (worksheet.output_ac230||0), 0.001); end
  def test_output_ac243; assert_in_delta(0, (worksheet.output_ac243||0), 0.001); end
  def test_output_ac261; assert_in_delta(0, (worksheet.output_ac261||0), 0.001); end
  def test_output_ad230; assert_in_delta(0, (worksheet.output_ad230||0), 0.001); end
  def test_output_ad261; assert_in_delta(0, (worksheet.output_ad261||0), 0.001); end
  def test_output_ae230; assert_in_delta(0, (worksheet.output_ae230||0), 0.001); end
  def test_output_ae261; assert_in_delta(0, (worksheet.output_ae261||0), 0.001); end
  def test_output_af230; assert_in_delta(0, (worksheet.output_af230||0), 0.001); end
  def test_output_af261; assert_in_delta(0, (worksheet.output_af261||0), 0.001); end
  def test_output_ag230; assert_in_delta(0, (worksheet.output_ag230||0), 0.001); end
  def test_output_ag261; assert_in_delta(0, (worksheet.output_ag261||0), 0.001); end
  def test_output_ah230; assert_in_delta(0, (worksheet.output_ah230||0), 0.001); end
  def test_output_ah261; assert_in_delta(0, (worksheet.output_ah261||0), 0.001); end
  def test_output_ai230; assert_in_delta(0, (worksheet.output_ai230||0), 0.001); end
  def test_output_ai261; assert_in_delta(0, (worksheet.output_ai261||0), 0.001); end
  def test_output_aj230; assert_in_delta(0, (worksheet.output_aj230||0), 0.001); end
  def test_output_aj261; assert_in_delta(0, (worksheet.output_aj261||0), 0.001); end
  def test_output_am261; assert_equal("", worksheet.output_am261); end
  def test_output_an261; assert_equal("", worksheet.output_an261); end
  def test_output_ak261; assert_in_delta(0, (worksheet.output_ak261||0), 0.001); end
  def test_output_ao261; assert_equal("", worksheet.output_ao261); end
  def test_output_e262; assert_equal("Non-Ferrous metals", worksheet.output_e262); end
  def test_output_f262; assert_equal("TWh/yr", worksheet.output_f262); end
  def test_output_g262; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g262); end
  def test_output_h262; assert_in_epsilon(2.4708324344366974, worksheet.output_h262, 0.001); end
  def test_output_m262; assert_in_epsilon(2.297435508603964, worksheet.output_m262, 0.001); end
  def test_output_r262; assert_in_epsilon(1.8662654577978999, worksheet.output_r262, 0.001); end
  def test_output_w262; assert_in_epsilon(2.1985910586505724, worksheet.output_w262, 0.001); end
  def test_output_ab262; assert_in_epsilon(1.9320511128577749, worksheet.output_ab262, 0.001); end
  def test_output_ac218; assert_in_delta(0.24087345202777996, worksheet.output_ac218, 0.001); end
  def test_output_ac231; assert_in_delta(0.1369721865416833, worksheet.output_ac231, 0.001); end
  def test_output_ac244; assert_in_epsilon(1.5541568631772151, worksheet.output_ac244, 0.001); end
  def test_output_ac262; assert_in_epsilon(1.9320025017466784, worksheet.output_ac262, 0.001); end
  def test_output_ad231; assert_in_delta(0.07954952058925395, worksheet.output_ad231, 0.001); end
  def test_output_ad262; assert_in_epsilon(1.674704008377541, worksheet.output_ad262, 0.001); end
  def test_output_ae231; assert_in_delta(0.034783863086816386, worksheet.output_ae231, 0.001); end
  def test_output_ae262; assert_in_epsilon(1.4430261182922322, worksheet.output_ae262, 0.001); end
  def test_output_af231; assert_in_delta(0, (worksheet.output_af231||0), 0.001); end
  def test_output_af262; assert_in_epsilon(1.2350214431696969, worksheet.output_af262, 0.001); end
  def test_output_ag231; assert_in_delta(0, (worksheet.output_ag231||0), 0.001); end
  def test_output_ag262; assert_in_epsilon(1.0538377221270026, worksheet.output_ag262, 0.001); end
  def test_output_ah231; assert_in_delta(0, (worksheet.output_ah231||0), 0.001); end
  def test_output_ah262; assert_in_delta(0.8908773420586629, worksheet.output_ah262, 0.001); end
  def test_output_ai231; assert_in_delta(0, (worksheet.output_ai231||0), 0.001); end
  def test_output_ai262; assert_in_delta(0.7449143076838112, worksheet.output_ai262, 0.001); end
  def test_output_aj231; assert_in_delta(0, (worksheet.output_aj231||0), 0.001); end
  def test_output_aj262; assert_in_delta(0.6148139096058518, worksheet.output_aj262, 0.001); end
  def test_output_am262; assert_in_delta(-0.033251334988879555, worksheet.output_am262, 0.001); end
  def test_output_an262; assert_in_delta(-0.7414507745745313, worksheet.output_an262, 0.001); end
  def test_output_ak262; assert_in_delta(0.49951775034667145, worksheet.output_ak262, 0.001); end
  def test_output_ao262; assert_in_delta(-0.7978342264798091, worksheet.output_ao262, 0.001); end
  def test_output_e263; assert_equal("Construction", worksheet.output_e263); end
  def test_output_f263; assert_equal("TWh/yr", worksheet.output_f263); end
  def test_output_g263; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g263); end
  def test_output_h263; assert_in_epsilon(5.156467225333333, worksheet.output_h263, 0.001); end
  def test_output_m263; assert_in_epsilon(5.557114136777778, worksheet.output_m263, 0.001); end
  def test_output_r263; assert_in_epsilon(4.578103091666666, worksheet.output_r263, 0.001); end
  def test_output_w263; assert_in_epsilon(4.940872507388889, worksheet.output_w263, 0.001); end
  def test_output_ab263; assert_in_epsilon(4.410903472722222, worksheet.output_ab263, 0.001); end
  def test_output_ac219; assert_in_delta(0.013666598051580247, worksheet.output_ac219, 0.001); end
  def test_output_ac232; assert_in_delta(0.03358734112810429, worksheet.output_ac232, 0.001); end
  def test_output_ac245; assert_in_epsilon(1.9215543902323706, worksheet.output_ac245, 0.001); end
  def test_output_ac263; assert_in_epsilon(1.968808329412055, worksheet.output_ac263, 0.001); end
  def test_output_ad232; assert_in_delta(0.019420332174640103, worksheet.output_ad232, 0.001); end
  def test_output_ad263; assert_in_epsilon(2.276745372582482, worksheet.output_ad263, 0.001); end
  def test_output_ae232; assert_in_delta(0, (worksheet.output_ae232||0), 0.001); end
  def test_output_ae263; assert_in_epsilon(2.1880410074169307, worksheet.output_ae263, 0.001); end
  def test_output_af232; assert_in_delta(0, (worksheet.output_af232||0), 0.001); end
  def test_output_af263; assert_in_epsilon(2.0993366422513793, worksheet.output_af263, 0.001); end
  def test_output_ag232; assert_in_delta(0, (worksheet.output_ag232||0), 0.001); end
  def test_output_ag263; assert_in_epsilon(2.0315794639799654, worksheet.output_ag263, 0.001); end
  def test_output_ah232; assert_in_delta(0, (worksheet.output_ah232||0), 0.001); end
  def test_output_ah263; assert_in_epsilon(1.9586785113891065, worksheet.output_ah263, 0.001); end
  def test_output_ai232; assert_in_delta(0, (worksheet.output_ai232||0), 0.001); end
  def test_output_ai263; assert_in_epsilon(1.8811915431399466, worksheet.output_ai263, 0.001); end
  def test_output_aj232; assert_in_delta(0, (worksheet.output_aj232||0), 0.001); end
  def test_output_aj263; assert_in_epsilon(1.7996763178936308, worksheet.output_aj263, 0.001); end
  def test_output_am263; assert_in_delta(-0.003448933665857856, worksheet.output_am263, 0.001); end
  def test_output_an263; assert_in_delta(-0.1290718508777534, worksheet.output_an263, 0.001); end
  def test_output_ak263; assert_in_epsilon(1.7146905943113036, worksheet.output_ak263, 0.001); end
  def test_output_ao263; assert_in_delta(-0.6674679544384267, worksheet.output_ao263, 0.001); end
  def test_output_e264; assert_equal("Other", worksheet.output_e264); end
  def test_output_f264; assert_equal("TWh/yr", worksheet.output_f264); end
  def test_output_g264; assert_equal("not sum of above as includes biomass and other fuels", worksheet.output_g264); end
  def test_output_h264; assert_in_epsilon(4.2739570675816845, worksheet.output_h264, 0.001); end
  def test_output_m264; assert_in_epsilon(4.108851714138953, worksheet.output_m264, 0.001); end
  def test_output_r264; assert_in_epsilon(8.025317955286493, worksheet.output_r264, 0.001); end
  def test_output_w264; assert_in_epsilon(5.574794722252346, worksheet.output_w264, 0.001); end
  def test_output_ab264; assert_in_epsilon(6.392104595476129, worksheet.output_ab264, 0.001); end
  def test_output_ac220; assert_in_delta(0, (worksheet.output_ac220||0), 0.001); end
  def test_output_ac233; assert_in_delta(0, (worksheet.output_ac233||0), 0.001); end
  def test_output_ac246; assert_in_delta(0, (worksheet.output_ac246||0), 0.001); end
  def test_output_ac264; assert_in_delta(0, (worksheet.output_ac264||0), 0.001); end
  def test_output_ad264; assert_in_delta(0, (worksheet.output_ad264||0), 0.001); end
  def test_output_ae264; assert_in_delta(0, (worksheet.output_ae264||0), 0.001); end
  def test_output_af264; assert_in_delta(0, (worksheet.output_af264||0), 0.001); end
  def test_output_ag264; assert_in_delta(0, (worksheet.output_ag264||0), 0.001); end
  def test_output_ah264; assert_in_delta(0, (worksheet.output_ah264||0), 0.001); end
  def test_output_ai264; assert_in_delta(0, (worksheet.output_ai264||0), 0.001); end
  def test_output_aj264; assert_in_delta(0, (worksheet.output_aj264||0), 0.001); end
  def test_output_am264; assert_equal("", worksheet.output_am264); end
  def test_output_an264; assert_equal("", worksheet.output_an264); end
  def test_output_ak264; assert_in_delta(0, (worksheet.output_ak264||0), 0.001); end
  def test_output_ao264; assert_in_delta(-1, worksheet.output_ao264, 0.001); end
  def test_output_e265; assert_equal("Industry Heat demand", worksheet.output_e265); end
  def test_output_f265; assert_equal("TWh/yr", worksheet.output_f265); end
  def test_output_g265; assert_equal("not same as above as includes other heats (not only liquid)", worksheet.output_g265); end
  def test_output_h265; assert_in_epsilon(151.92181548358934, worksheet.output_h265, 0.001); end
  def test_output_m265; assert_in_epsilon(160.23925753662232, worksheet.output_m265, 0.001); end
  def test_output_r265; assert_in_epsilon(166.18030819823727, worksheet.output_r265, 0.001); end
  def test_output_w265; assert_in_epsilon(156.3645563292865, worksheet.output_w265, 0.001); end
  def test_output_ab265; assert_in_epsilon(140.09498021251187, worksheet.output_ab265, 0.001); end
  def test_output_ad265; assert_in_epsilon(108.45580392914931, worksheet.output_ad265, 0.001); end
  def test_output_ae265; assert_in_epsilon(87.17069172001558, worksheet.output_ae265, 0.001); end
  def test_output_af265; assert_in_epsilon(70.88043875887115, worksheet.output_af265, 0.001); end
  def test_output_ag265; assert_in_epsilon(57.872674378172746, worksheet.output_ag265, 0.001); end
  def test_output_ah265; assert_in_epsilon(50.860359705399716, worksheet.output_ah265, 0.001); end
  def test_output_ai265; assert_in_epsilon(44.677447392425165, worksheet.output_ai265, 0.001); end
  def test_output_aj265; assert_in_epsilon(39.27647639627167, worksheet.output_aj265, 0.001); end
  def test_output_am265; assert_in_delta(-0.031773230199464986, worksheet.output_am265, 0.001); end
  def test_output_an265; assert_in_delta(-0.7251577858611533, worksheet.output_an265, 0.001); end
  def test_output_ak265; assert_in_epsilon(34.95334039029535, worksheet.output_ak265, 0.001); end
  def test_output_ao265; assert_in_delta(-0.7699254693670309, worksheet.output_ao265, 0.001); end
  def test_output_e266; assert_equal("Total heat demand", worksheet.output_e266); end
  def test_output_f266; assert_equal("TWh/yr", worksheet.output_f266); end
  def test_output_g266; assert_equal("sum of above", worksheet.output_g266); end
  def test_output_h266; assert_in_epsilon(299.32767238850073, worksheet.output_h266, 0.001); end
  def test_output_m266; assert_in_epsilon(322.85497872044476, worksheet.output_m266, 0.001); end
  def test_output_r266; assert_in_epsilon(332.0274029559998, worksheet.output_r266, 0.001); end
  def test_output_w266; assert_in_epsilon(332.2248735232867, worksheet.output_w266, 0.001); end
  def test_output_ab266; assert_in_epsilon(473.9615021239927, worksheet.output_ab266, 0.001); end
  def test_output_ac221; assert_in_epsilon(46.222428083198764, worksheet.output_ac221, 0.001); end
  def test_output_ac234; assert_in_epsilon(9.966345214825088, worksheet.output_ac234, 0.001); end
  def test_output_ac247; assert_in_epsilon(70.9872520436923, worksheet.output_ac247, 0.001); end
  def test_output_ac265; assert_in_epsilon(127.17602534171616, worksheet.output_ac265, 0.001); end
  def test_output_ac251; assert_in_epsilon(26.175415496219273, worksheet.output_ac251, 0.001); end
  def test_output_ac266; assert_in_epsilon(339.8337420566969, worksheet.output_ac266, 0.001); end
  def test_output_ad266; assert_in_epsilon(311.8903958621103, worksheet.output_ad266, 0.001); end
  def test_output_ae266; assert_in_epsilon(264.6678018431878, worksheet.output_ae266, 0.001); end
  def test_output_af266; assert_in_epsilon(220.91457758616352, worksheet.output_af266, 0.001); end
  def test_output_ag266; assert_in_epsilon(182.3165872536472, worksheet.output_ag266, 0.001); end
  def test_output_ah266; assert_in_epsilon(153.00648540292747, worksheet.output_ah266, 0.001); end
  def test_output_ai266; assert_in_epsilon(129.06895865506428, worksheet.output_ai266, 0.001); end
  def test_output_aj266; assert_in_epsilon(107.70371643274639, worksheet.output_aj266, 0.001); end
  def test_output_am266; assert_in_delta(-0.032904747387196065, worksheet.output_am266, 0.001); end
  def test_output_an266; assert_in_delta(-0.7377170527039099, worksheet.output_an266, 0.001); end
  def test_output_ak266; assert_in_epsilon(89.13259545728975, worksheet.output_ak266, 0.001); end
  def test_output_ao266; assert_in_delta(-0.7022240050642443, worksheet.output_ao266, 0.001); end
  def test_output_b267; assert_equal("REF", worksheet.output_b267); end
  def test_output_e267; assert_equal("Reference scenario", worksheet.output_e267); end
  def test_output_f267; assert_equal("TWh/yr", worksheet.output_f267); end
  def test_output_g267; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g267); end
  def test_output_ac267; assert_in_epsilon(363.49269692749283, worksheet.output_ac267, 0.001); end
  def test_output_ad267; assert_in_epsilon(365.07393932629054, worksheet.output_ad267, 0.001); end
  def test_output_ae267; assert_in_epsilon(372.2612995928843, worksheet.output_ae267, 0.001); end
  def test_output_af267; assert_in_epsilon(376.7152271386381, worksheet.output_af267, 0.001); end
  def test_output_ag267; assert_in_epsilon(381.03298950389626, worksheet.output_ag267, 0.001); end
  def test_output_ah267; assert_in_epsilon(384.0181036068505, worksheet.output_ah267, 0.001); end
  def test_output_ai267; assert_in_epsilon(388.26932467312133, worksheet.output_ai267, 0.001); end
  def test_output_aj267; assert_in_epsilon(391.94697803980023, worksheet.output_aj267, 0.001); end
  def test_output_ak267; assert_in_epsilon(397.55642547540293, worksheet.output_ak267, 0.001); end
  def test_output_am267; assert_in_delta(0.002241951150351529, worksheet.output_am267, 0.001); end
  def test_output_an267; assert_in_delta(0.0937122776766679, worksheet.output_an267, 0.001); end
  def test_output_ao267; assert_equal("", worksheet.output_ao267); end
  def test_output_b268; assert_equal("Heat production", worksheet.output_b268); end
  def test_output_am268; assert_equal("", worksheet.output_am268); end
  def test_output_an268; assert_equal("", worksheet.output_an268); end
  def test_output_ao268; assert_equal("", worksheet.output_ao268); end
  def test_output_c269; assert_equal("V.01", worksheet.output_c269); end
  def test_output_d269; assert_equal("IX.a", worksheet.output_d269); end
  def test_output_e269; assert_equal("Electricity (delivered to end user) / Domestic space heating and hot water", worksheet.output_e269); end
  def test_output_f269; assert_equal("TWh/yr", worksheet.output_f269); end
  def test_output_ad269; assert_in_epsilon(6.745875202325503, worksheet.output_ad269, 0.001); end
  def test_output_ae269; assert_in_epsilon(7.923977357335781, worksheet.output_ae269, 0.001); end
  def test_output_af269; assert_in_epsilon(8.239901529727716, worksheet.output_af269, 0.001); end
  def test_output_ag269; assert_in_epsilon(8.21943176527179, worksheet.output_ag269, 0.001); end
  def test_output_ah269; assert_in_epsilon(8.284247145805393, worksheet.output_ah269, 0.001); end
  def test_output_ai269; assert_in_epsilon(8.09404426358586, worksheet.output_ai269, 0.001); end
  def test_output_aj269; assert_in_epsilon(7.643582091434452, worksheet.output_aj269, 0.001); end
  def test_output_am269; assert_in_delta(0.00927075804722266, worksheet.output_am269, 0.001); end
  def test_output_an269; assert_in_delta(0.4464639651636362, worksheet.output_an269, 0.001); end
  def test_output_ak269; assert_in_epsilon(6.967167652872322, worksheet.output_ak269, 0.001); end
  def test_output_ao269; assert_equal("", worksheet.output_ao269); end
  def test_output_c270; assert_equal("V.01", worksheet.output_c270); end
  def test_output_d270; assert_equal("IX.c", worksheet.output_d270); end
  def test_output_e270; assert_equal("Electricity (delivered to end user) / Commercial heating and cooling", worksheet.output_e270); end
  def test_output_f270; assert_equal("TWh/yr", worksheet.output_f270); end
  def test_output_ad270; assert_in_delta(0.32324136840846274, worksheet.output_ad270, 0.001); end
  def test_output_ae270; assert_in_epsilon(1.0636974603415554, worksheet.output_ae270, 0.001); end
  def test_output_af270; assert_in_epsilon(1.604078959124847, worksheet.output_af270, 0.001); end
  def test_output_ag270; assert_in_epsilon(1.9878049032852285, worksheet.output_ag270, 0.001); end
  def test_output_ah270; assert_in_epsilon(2.2257369535659204, worksheet.output_ah270, 0.001); end
  def test_output_ai270; assert_in_epsilon(2.3456667349167217, worksheet.output_ai270, 0.001); end
  def test_output_aj270; assert_in_epsilon(2.3617878625432778, worksheet.output_aj270, 0.001); end
  def test_output_am270; assert_in_delta(0.054786534834963874, worksheet.output_am270, 0.001); end
  def test_output_an270; assert_in_epsilon(7.444677761632297, worksheet.output_an270, 0.001); end
  def test_output_ak270; assert_in_epsilon(2.5798342486564247, worksheet.output_ak270, 0.001); end
  def test_output_ao270; assert_equal("", worksheet.output_ao270); end
  def test_output_e271; assert_equal("Electricity ", worksheet.output_e271); end
  def test_output_f271; assert_equal("TWh/yr", worksheet.output_f271); end
  def test_output_ad271; assert_in_epsilon(7.069116570733966, worksheet.output_ad271, 0.001); end
  def test_output_ae271; assert_in_epsilon(8.987674817677338, worksheet.output_ae271, 0.001); end
  def test_output_af271; assert_in_epsilon(9.843980488852562, worksheet.output_af271, 0.001); end
  def test_output_ag271; assert_in_epsilon(10.207236668557018, worksheet.output_ag271, 0.001); end
  def test_output_ah271; assert_in_epsilon(10.509984099371314, worksheet.output_ah271, 0.001); end
  def test_output_ai271; assert_in_epsilon(10.43971099850258, worksheet.output_ai271, 0.001); end
  def test_output_aj271; assert_in_epsilon(10.00536995397773, worksheet.output_aj271, 0.001); end
  def test_output_am271; assert_in_delta(0.01568792204180869, worksheet.output_am271, 0.001); end
  def test_output_an271; assert_in_delta(0.8638524307775317, worksheet.output_an271, 0.001); end
  def test_output_ak271; assert_in_epsilon(9.547001901528747, worksheet.output_ak271, 0.001); end
  def test_output_ao271; assert_equal("", worksheet.output_ao271); end
  def test_output_c272; assert_equal("V.03", worksheet.output_c272); end
  def test_output_d272; assert_equal("IX.a", worksheet.output_d272); end
  def test_output_e272; assert_equal("Solid hydrocarbons / Domestic space heating and hot water", worksheet.output_e272); end
  def test_output_f272; assert_equal("TWh/yr", worksheet.output_f272); end
  def test_output_ac272; assert_in_epsilon(2.9358791259056303, worksheet.output_ac272, 0.001); end
  def test_output_ad272; assert_in_epsilon(2.8575717874793707, worksheet.output_ad272, 0.001); end
  def test_output_ae272; assert_in_epsilon(2.5631934572117983, worksheet.output_ae272, 0.001); end
  def test_output_af272; assert_in_epsilon(2.1701158772885005, worksheet.output_af272, 0.001); end
  def test_output_ag272; assert_in_epsilon(1.826557649310421, worksheet.output_ag272, 0.001); end
  def test_output_ah272; assert_in_epsilon(1.5598419726044783, worksheet.output_ah272, 0.001); end
  def test_output_ai272; assert_in_epsilon(1.3125977116963972, worksheet.output_ai272, 0.001); end
  def test_output_aj272; assert_in_epsilon(1.0809181269554682, worksheet.output_aj272, 0.001); end
  def test_output_am272; assert_in_delta(-0.030020549982884837, worksheet.output_am272, 0.001); end
  def test_output_an272; assert_in_delta(-0.7045382021945836, worksheet.output_an272, 0.001); end
  def test_output_ak272; assert_in_delta(0.8674401246794721, worksheet.output_ak272, 0.001); end
  def test_output_ao272; assert_equal("", worksheet.output_ao272); end
  def test_output_c273; assert_equal("V.03", worksheet.output_c273); end
  def test_output_d273; assert_equal("IX.c", worksheet.output_d273); end
  def test_output_e273; assert_equal("Solid hydrocarbons / Commercial heating and cooling", worksheet.output_e273); end
  def test_output_f273; assert_equal("TWh/yr", worksheet.output_f273); end
  def test_output_ac273; assert_in_delta(0.12400592639987766, worksheet.output_ac273, 0.001); end
  def test_output_ad273; assert_in_delta(0.11475277259340469, worksheet.output_ad273, 0.001); end
  def test_output_ae273; assert_in_delta(0.17105775329211487, worksheet.output_ae273, 0.001); end
  def test_output_af273; assert_in_delta(0.20606435818231833, worksheet.output_af273, 0.001); end
  def test_output_ag273; assert_in_delta(0.2259413613843701, worksheet.output_ag273, 0.001); end
  def test_output_ah273; assert_in_delta(0.23075724084048588, worksheet.output_ah273, 0.001); end
  def test_output_ai273; assert_in_delta(0.2237155038798025, worksheet.output_ai273, 0.001); end
  def test_output_aj273; assert_in_delta(0.20605173104336083, worksheet.output_aj273, 0.001); end
  def test_output_am273; assert_in_delta(0.012146967568814837, worksheet.output_am273, 0.001); end
  def test_output_an273; assert_in_delta(0.6208511421508365, worksheet.output_an273, 0.001); end
  def test_output_ak273; assert_in_delta(0.20099514743871427, worksheet.output_ak273, 0.001); end
  def test_output_ao273; assert_equal("", worksheet.output_ao273); end
  def test_output_c274; assert_equal("V.03", worksheet.output_c274); end
  def test_output_d274; assert_equal("XI", worksheet.output_d274); end
  def test_output_e274; assert_equal("Solid hydrocarbons / Industry", worksheet.output_e274); end
  def test_output_f274; assert_equal("TWh/yr", worksheet.output_f274); end
  def test_output_ac274; assert_in_epsilon(46.222428083198764, worksheet.output_ac274, 0.001); end
  def test_output_ad274; assert_in_epsilon(37.46329312194105, worksheet.output_ad274, 0.001); end
  def test_output_ae274; assert_in_epsilon(28.35649942691964, worksheet.output_ae274, 0.001); end
  def test_output_af274; assert_in_epsilon(21.328416073148183, worksheet.output_af274, 0.001); end
  def test_output_ag274; assert_in_epsilon(16.425446156081076, worksheet.output_ag274, 0.001); end
  def test_output_ah274; assert_in_epsilon(16.19005900434946, worksheet.output_ah274, 0.001); end
  def test_output_ai274; assert_in_epsilon(15.761198161798488, worksheet.output_ai274, 0.001); end
  def test_output_aj274; assert_in_epsilon(15.250090793834756, worksheet.output_aj274, 0.001); end
  def test_output_am274; assert_in_delta(-0.02825705035315562, worksheet.output_am274, 0.001); end
  def test_output_an274; assert_in_delta(-0.6822716745024737, worksheet.output_an274, 0.001); end
  def test_output_ak274; assert_in_epsilon(14.68617467530458, worksheet.output_ak274, 0.001); end
  def test_output_ao274; assert_equal("", worksheet.output_ao274); end
  def test_output_c275; assert_equal("V.03", worksheet.output_c275); end
  def test_output_d275; assert_equal("V", worksheet.output_d275); end
  def test_output_e275; assert_equal("Solid hydrocarbons / Bioenergy", worksheet.output_e275); end
  def test_output_f275; assert_equal("TWh/yr", worksheet.output_f275); end
  def test_output_am275; assert_in_delta(0.025294309472711163, worksheet.output_am275, 0.001); end
  def test_output_an275; assert_in_epsilon(1.7160757586159128, worksheet.output_an275, 0.001); end
  def test_output_ak275; assert_in_delta(1, worksheet.output_ak275, 0.001); end
  def test_output_ao275; assert_equal("", worksheet.output_ao275); end
  def test_output_e276; assert_equal("Coal", worksheet.output_e276); end
  def test_output_f276; assert_equal("TWh/yr", worksheet.output_f276); end
  def test_output_ad276; assert_in_epsilon(21.80814909698974, worksheet.output_ad276, 0.001); end
  def test_output_ae276; assert_in_epsilon(13.272094029075731, worksheet.output_ae276, 0.001); end
  def test_output_af276; assert_in_epsilon(1.5465933889235364, worksheet.output_af276, 0.001); end
  def test_output_ag276; assert_in_delta(0, (worksheet.output_ag276||0), 0.001); end
  def test_output_ah276; assert_in_delta(0, (worksheet.output_ah276||0), 0.001); end
  def test_output_ai276; assert_in_delta(0, (worksheet.output_ai276||0), 0.001); end
  def test_output_aj276; assert_in_delta(0, (worksheet.output_aj276||0), 0.001); end
  def test_output_am276; assert_in_delta(-1, worksheet.output_am276, 0.001); end
  def test_output_an276; assert_in_delta(-1, worksheet.output_an276, 0.001); end
  def test_output_ak276; assert_in_delta(0, (worksheet.output_ak276||0), 0.001); end
  def test_output_ao276; assert_equal("", worksheet.output_ao276); end
  def test_output_c277; assert_equal("V.04", worksheet.output_c277); end
  def test_output_d277; assert_equal("IX.a", worksheet.output_d277); end
  def test_output_e277; assert_equal("Liquid hydrocarbons / Domestic space heating and hot water", worksheet.output_e277); end
  def test_output_f277; assert_equal("TWh/yr", worksheet.output_f277); end
  def test_output_am277; assert_in_delta(-0.1023572970004114, worksheet.output_am277, 0.001); end
  def test_output_an277; assert_in_delta(-0.9866911603354129, worksheet.output_an277, 0.001); end
  def test_output_ak277; assert_in_delta(0.4329020692623239, worksheet.output_ak277, 0.001); end
  def test_output_ao277; assert_equal("", worksheet.output_ao277); end
  def test_output_c278; assert_equal("V.04", worksheet.output_c278); end
  def test_output_d278; assert_equal("IX.c", worksheet.output_d278); end
  def test_output_e278; assert_equal("Liquid hydrocarbons / Commercial heating and cooling", worksheet.output_e278); end
  def test_output_f278; assert_equal("TWh/yr", worksheet.output_f278); end
  def test_output_am278; assert_in_delta(-0.10427122258636334, worksheet.output_am278, 0.001); end
  def test_output_an278; assert_in_delta(-0.9877802847127602, worksheet.output_an278, 0.001); end
  def test_output_ak278; assert_in_delta(0.10224784158677519, worksheet.output_ak278, 0.001); end
  def test_output_ao278; assert_equal("", worksheet.output_ao278); end
  def test_output_c279; assert_equal("V.04", worksheet.output_c279); end
  def test_output_d279; assert_equal("XII", worksheet.output_d279); end
  def test_output_e279; assert_equal("Liquid hydrocarbons / Transport", worksheet.output_e279); end
  def test_output_f279; assert_equal("TWh/yr", worksheet.output_f279); end
  def test_output_am279; assert_in_delta(-0.04264549213565849, worksheet.output_am279, 0.001); end
  def test_output_an279; assert_in_delta(-0.8250510005699828, worksheet.output_an279, 0.001); end
  def test_output_ak279; assert_in_epsilon(19.994249806285943, worksheet.output_ak279, 0.001); end
  def test_output_ao279; assert_equal("", worksheet.output_ao279); end
  def test_output_c280; assert_equal("V.04", worksheet.output_c280); end
  def test_output_d280; assert_equal("XI", worksheet.output_d280); end
  def test_output_e280; assert_equal("Liquid hydrocarbons / Industry", worksheet.output_e280); end
  def test_output_f280; assert_equal("TWh/yr", worksheet.output_f280); end
  def test_output_ac280; assert_in_epsilon(9.966345214825088, worksheet.output_ac280, 0.001); end
  def test_output_ad280; assert_in_epsilon(7.073462111984176, worksheet.output_ad280, 0.001); end
  def test_output_ae280; assert_in_epsilon(4.336607617295266, worksheet.output_ae280, 0.001); end
  def test_output_af280; assert_in_epsilon(2.7650977412034337, worksheet.output_af280, 0.001); end
  def test_output_ag280; assert_in_epsilon(1.786000264295472, worksheet.output_ag280, 0.001); end
  def test_output_ah280; assert_in_epsilon(1.4466625612484598, worksheet.output_ah280, 0.001); end
  def test_output_ai280; assert_in_epsilon(1.1797994975378514, worksheet.output_ai280, 0.001); end
  def test_output_aj280; assert_in_delta(0.9663341466885703, worksheet.output_aj280, 0.001); end
  def test_output_am280; assert_in_delta(-0.06107083272583813, worksheet.output_am280, 0.001); end
  def test_output_an280; assert_in_delta(-0.9195894162902593, worksheet.output_an280, 0.001); end
  def test_output_ak280; assert_in_delta(0.8013996361768664, worksheet.output_ak280, 0.001); end
  def test_output_ao280; assert_equal("", worksheet.output_ao280); end
  def test_output_c281; assert_equal("V.04", worksheet.output_c281); end
  def test_output_d281; assert_equal("V", worksheet.output_d281); end
  def test_output_e281; assert_equal("Liquid hydrocarbons / Bioenergy", worksheet.output_e281); end
  def test_output_f281; assert_equal("TWh/yr", worksheet.output_f281); end
  def test_output_am281; assert_in_delta(0.07791585572923454, worksheet.output_am281, 0.001); end
  def test_output_an281; assert_in_epsilon(19.109182292438387, worksheet.output_an281, 0.001); end
  def test_output_ak281; assert_in_delta(0.5032123915845144, worksheet.output_ak281, 0.001); end
  def test_output_ao281; assert_equal("", worksheet.output_ao281); end
  def test_output_e282; assert_equal("Oil", worksheet.output_e282); end
  def test_output_f282; assert_equal("TWh/yr", worksheet.output_f282); end
  def test_output_ad282; assert_in_epsilon(146.1657292830649, worksheet.output_ad282, 0.001); end
  def test_output_ae282; assert_in_epsilon(115.38964730258958, worksheet.output_ae282, 0.001); end
  def test_output_af282; assert_in_epsilon(88.29758988878366, worksheet.output_af282, 0.001); end
  def test_output_ag282; assert_in_epsilon(64.36210324591245, worksheet.output_ag282, 0.001); end
  def test_output_ah282; assert_in_epsilon(45.276546525154394, worksheet.output_ah282, 0.001); end
  def test_output_ai282; assert_in_epsilon(31.276003732383522, worksheet.output_ai282, 0.001); end
  def test_output_aj282; assert_in_epsilon(19.78652135560321, worksheet.output_aj282, 0.001); end
  def test_output_am282; assert_in_delta(-0.06576139835220485, worksheet.output_am282, 0.001); end
  def test_output_an282; assert_in_delta(-0.9341869050557886, worksheet.output_an282, 0.001); end
  def test_output_ak282; assert_in_epsilon(10.596876796322412, worksheet.output_ak282, 0.001); end
  def test_output_ao282; assert_equal("", worksheet.output_ao282); end
  def test_output_c283; assert_equal("V.05", worksheet.output_c283); end
  def test_output_d283; assert_equal("IX.a", worksheet.output_d283); end
  def test_output_e283; assert_equal("Gaseous hydrocarbons / Domestic space heating and hot water", worksheet.output_e283); end
  def test_output_f283; assert_equal("TWh/yr", worksheet.output_f283); end
  def test_output_ac283; assert_in_epsilon(31.498232239201204, worksheet.output_ac283, 0.001); end
  def test_output_ad283; assert_in_epsilon(28.050180145849446, worksheet.output_ad283, 0.001); end
  def test_output_ae283; assert_in_epsilon(22.77221139140847, worksheet.output_ae283, 0.001); end
  def test_output_af283; assert_in_epsilon(17.15777228050627, worksheet.output_af283, 0.001); end
  def test_output_ag283; assert_in_epsilon(12.623290182033204, worksheet.output_ag283, 0.001); end
  def test_output_ah283; assert_in_epsilon(9.205833861834334, worksheet.output_ah283, 0.001); end
  def test_output_ai283; assert_in_epsilon(6.3537657536352405, worksheet.output_ai283, 0.001); end
  def test_output_aj283; assert_in_epsilon(4.024630163796058, worksheet.output_aj283, 0.001); end
  def test_output_am283; assert_in_delta(-0.06428660974607059, worksheet.output_am283, 0.001); end
  def test_output_an283; assert_in_delta(-0.9299006849174083, worksheet.output_an283, 0.001); end
  def test_output_ak283; assert_in_epsilon(2.208004506280414, worksheet.output_ak283, 0.001); end
  def test_output_ao283; assert_equal("", worksheet.output_ao283); end
  def test_output_c284; assert_equal("V.05", worksheet.output_c284); end
  def test_output_d284; assert_equal("IX.c", worksheet.output_d284); end
  def test_output_e284; assert_equal("Gaseous hydrocarbons / Commercial heating and cooling", worksheet.output_e284); end
  def test_output_f284; assert_equal("TWh/yr", worksheet.output_f284); end
  def test_output_ac284; assert_in_epsilon(16.923565202435206, worksheet.output_ac284, 0.001); end
  def test_output_ad284; assert_in_epsilon(15.649255472991005, worksheet.output_ad284, 0.001); end
  def test_output_ae284; assert_in_epsilon(12.124346985759361, worksheet.output_ae284, 0.001); end
  def test_output_af284; assert_in_epsilon(9.007202743459889, worksheet.output_af284, 0.001); end
  def test_output_ag284; assert_in_epsilon(6.520646613752154, worksheet.output_ag284, 0.001); end
  def test_output_ah284; assert_in_epsilon(4.499549480598471, worksheet.output_ah284, 0.001); end
  def test_output_ai284; assert_in_epsilon(2.9245403763329234, worksheet.output_ai284, 0.001); end
  def test_output_aj284; assert_in_epsilon(1.7311446742400496, worksheet.output_aj284, 0.001); end
  def test_output_am284; assert_in_delta(-0.08625105045460713, worksheet.output_am284, 0.001); end
  def test_output_an284; assert_in_delta(-0.97289336375229, worksheet.output_an284, 0.001); end
  def test_output_ak284; assert_in_delta(0.4587409259568149, worksheet.output_ak284, 0.001); end
  def test_output_ao284; assert_equal("", worksheet.output_ao284); end
  def test_output_c285; assert_equal("V.05", worksheet.output_c285); end
  def test_output_d285; assert_equal("XI", worksheet.output_d285); end
  def test_output_e285; assert_equal("Gaseous hydrocarbons / Industry", worksheet.output_e285); end
  def test_output_f285; assert_equal("TWh/yr", worksheet.output_f285); end
  def test_output_ac285; assert_in_epsilon(70.9872520436923, worksheet.output_ac285, 0.001); end
  def test_output_ad285; assert_in_epsilon(63.919048695224085, worksheet.output_ad285, 0.001); end
  def test_output_ae285; assert_in_epsilon(54.477584675800685, worksheet.output_ae285, 0.001); end
  def test_output_af285; assert_in_epsilon(46.786924944519534, worksheet.output_af285, 0.001); end
  def test_output_ag285; assert_in_epsilon(39.6612279577962, worksheet.output_ag285, 0.001); end
  def test_output_ah285; assert_in_epsilon(33.22363813980179, worksheet.output_ah285, 0.001); end
  def test_output_ai285; assert_in_epsilon(27.736449733088822, worksheet.output_ai285, 0.001); end
  def test_output_aj285; assert_in_epsilon(23.060051455748344, worksheet.output_aj285, 0.001); end
  def test_output_am285; assert_in_delta(-0.03182853524507312, worksheet.output_am285, 0.001); end
  def test_output_an285; assert_in_delta(-0.7257850456468884, worksheet.output_an285, 0.001); end
  def test_output_ak285; assert_in_epsilon(19.465766078813907, worksheet.output_ak285, 0.001); end
  def test_output_ao285; assert_equal("", worksheet.output_ao285); end
  def test_output_c286; assert_equal("V.05", worksheet.output_c286); end
  def test_output_d286; assert_equal("V", worksheet.output_d286); end
  def test_output_e286; assert_equal("Gaseous hydrocarbons / Bioenergy", worksheet.output_e286); end
  def test_output_f286; assert_equal("TWh/yr", worksheet.output_f286); end
  def test_output_am286; assert_in_delta(0.053532040952773974, worksheet.output_am286, 0.001); end
  def test_output_an286; assert_in_epsilon(7.05211431309603, worksheet.output_an286, 0.001); end
  def test_output_ak286; assert_in_delta(0.18264920703933754, worksheet.output_ak286, 0.001); end
  def test_output_ao286; assert_equal("", worksheet.output_ao286); end
  def test_output_e287; assert_equal("Natural Gas", worksheet.output_e287); end
  def test_output_f287; assert_equal("TWh/yr", worksheet.output_f287); end
  def test_output_ad287; assert_in_epsilon(100.09680024891522, worksheet.output_ad287, 0.001); end
  def test_output_ae287; assert_in_epsilon(78.65536441453625, worksheet.output_ae287, 0.001); end
  def test_output_af287; assert_in_epsilon(61.95176175930417, worksheet.output_af287, 0.001); end
  def test_output_ag287; assert_in_epsilon(49.18746928947531, worksheet.output_ag287, 0.001); end
  def test_output_ah287; assert_in_epsilon(38.80353158249403, worksheet.output_ah287, 0.001); end
  def test_output_ai287; assert_in_epsilon(30.37682909815536, worksheet.output_ai287, 0.001); end
  def test_output_aj287; assert_in_epsilon(23.561648782239686, worksheet.output_aj287, 0.001); end
  def test_output_am287; assert_in_delta(-0.04553684820707227, worksheet.output_am287, 0.001); end
  def test_output_an287; assert_in_delta(-0.8449875203351874, worksheet.output_an287, 0.001); end
  def test_output_ak287; assert_in_epsilon(18.090025833768635, worksheet.output_ak287, 0.001); end
  def test_output_ao287; assert_equal("", worksheet.output_ao287); end
  def test_output_c288; assert_equal("V.11", worksheet.output_c288); end
  def test_output_d288; assert_equal("IX.a", worksheet.output_d288); end
  def test_output_e288; assert_equal("Domestic solar thermal / Domestic space heating and hot water", worksheet.output_e288); end
  def test_output_f288; assert_equal("TWh/yr", worksheet.output_f288); end
  def test_output_ad288; assert_in_epsilon(1.2299072197571397, worksheet.output_ad288, 0.001); end
  def test_output_ae288; assert_in_epsilon(2.8771102635533796, worksheet.output_ae288, 0.001); end
  def test_output_af288; assert_in_epsilon(4.720113311737429, worksheet.output_af288, 0.001); end
  def test_output_ag288; assert_in_epsilon(5.920839947639061, worksheet.output_ag288, 0.001); end
  def test_output_ah288; assert_in_epsilon(5.683885090836587, worksheet.output_ah288, 0.001); end
  def test_output_ai288; assert_in_epsilon(5.41228706529066, worksheet.output_ai288, 0.001); end
  def test_output_aj288; assert_in_epsilon(5.070043871017268, worksheet.output_aj288, 0.001); end
  def test_output_am288; assert_equal("", worksheet.output_am288); end
  def test_output_an288; assert_equal("", worksheet.output_an288); end
  def test_output_ak288; assert_in_epsilon(4.6926736233324045, worksheet.output_ak288, 0.001); end
  def test_output_ao288; assert_equal("", worksheet.output_ao288); end
  def test_output_c289; assert_equal("V.11", worksheet.output_c289); end
  def test_output_d289; assert_equal("IX.c", worksheet.output_d289); end
  def test_output_e289; assert_equal("Domestic solar thermal / Commercial heating and cooling", worksheet.output_e289); end
  def test_output_f289; assert_equal("TWh/yr", worksheet.output_f289); end
  def test_output_ac289; assert_in_delta(0, (worksheet.output_ac289||0), 0.001); end
  def test_output_ad289; assert_in_delta(0, (worksheet.output_ad289||0), 0.001); end
  def test_output_ae289; assert_in_delta(0, (worksheet.output_ae289||0), 0.001); end
  def test_output_af289; assert_in_delta(0, (worksheet.output_af289||0), 0.001); end
  def test_output_ag289; assert_in_delta(0, (worksheet.output_ag289||0), 0.001); end
  def test_output_ah289; assert_in_delta(0, (worksheet.output_ah289||0), 0.001); end
  def test_output_ai289; assert_in_delta(0, (worksheet.output_ai289||0), 0.001); end
  def test_output_aj289; assert_in_delta(0, (worksheet.output_aj289||0), 0.001); end
  def test_output_ak289; assert_in_delta(0, (worksheet.output_ak289||0), 0.001); end
  def test_output_am289; assert_equal("", worksheet.output_am289); end
  def test_output_an289; assert_equal("", worksheet.output_an289); end
  def test_output_ao289; assert_equal("", worksheet.output_ao289); end
  def test_output_e290; assert_equal("Solar thermal", worksheet.output_e290); end
  def test_output_f290; assert_equal("TWh/yr", worksheet.output_f290); end
  def test_output_ad290; assert_in_epsilon(1.2299072197571397, worksheet.output_ad290, 0.001); end
  def test_output_ae290; assert_in_epsilon(2.8771102635533796, worksheet.output_ae290, 0.001); end
  def test_output_af290; assert_in_epsilon(4.720113311737429, worksheet.output_af290, 0.001); end
  def test_output_ag290; assert_in_epsilon(5.920839947639061, worksheet.output_ag290, 0.001); end
  def test_output_ah290; assert_in_epsilon(5.683885090836587, worksheet.output_ah290, 0.001); end
  def test_output_ai290; assert_in_epsilon(5.41228706529066, worksheet.output_ai290, 0.001); end
  def test_output_aj290; assert_in_epsilon(5.070043871017268, worksheet.output_aj290, 0.001); end
  def test_output_am290; assert_equal("", worksheet.output_am290); end
  def test_output_an290; assert_equal("", worksheet.output_an290); end
  def test_output_ak290; assert_in_epsilon(4.6926736233324045, worksheet.output_ak290, 0.001); end
  def test_output_ao290; assert_equal("", worksheet.output_ao290); end
  def test_output_c291; assert_equal("R.07", worksheet.output_c291); end
  def test_output_d291; assert_equal("IX.a", worksheet.output_d291); end
  def test_output_e291; assert_equal("Environmental heat / Domestic space heating and hot water", worksheet.output_e291); end
  def test_output_f291; assert_equal("TWh/yr", worksheet.output_f291); end
  def test_output_ad291; assert_in_epsilon(4.859451780232661, worksheet.output_ad291, 0.001); end
  def test_output_ae291; assert_in_epsilon(8.614015347873188, worksheet.output_ae291, 0.001); end
  def test_output_af291; assert_in_epsilon(11.25111006224643, worksheet.output_af291, 0.001); end
  def test_output_ag291; assert_in_epsilon(13.068669451063391, worksheet.output_ag291, 0.001); end
  def test_output_ah291; assert_in_epsilon(14.233025718422809, worksheet.output_ah291, 0.001); end
  def test_output_ai291; assert_in_epsilon(14.695777567946797, worksheet.output_ai291, 0.001); end
  def test_output_aj291; assert_in_epsilon(14.459142137444204, worksheet.output_aj291, 0.001); end
  def test_output_am291; assert_in_delta(0.09043577391858748, worksheet.output_am291, 0.001); end
  def test_output_an291; assert_in_epsilon(30.915645919476365, worksheet.output_an291, 0.001); end
  def test_output_ak291; assert_in_epsilon(13.597900293159222, worksheet.output_ak291, 0.001); end
  def test_output_ao291; assert_equal("", worksheet.output_ao291); end
  def test_output_c292; assert_equal("R.07", worksheet.output_c292); end
  def test_output_d292; assert_equal("IX.c", worksheet.output_d292); end
  def test_output_e292; assert_equal("Environmental heat / Commercial heating and cooling", worksheet.output_e292); end
  def test_output_f292; assert_equal("TWh/yr", worksheet.output_f292); end
  def test_output_ad292; assert_in_delta(0.4948722035689128, worksheet.output_ad292, 0.001); end
  def test_output_ae292; assert_in_epsilon(1.7069843307729085, worksheet.output_ae292, 0.001); end
  def test_output_af292; assert_in_epsilon(2.5100416499473477, worksheet.output_af292, 0.001); end
  def test_output_ag292; assert_in_epsilon(2.990221677038676, worksheet.output_ag292, 0.001); end
  def test_output_ah292; assert_in_epsilon(3.1666089071660974, worksheet.output_ah292, 0.001); end
  def test_output_ai292; assert_in_epsilon(3.09551498810088, worksheet.output_ai292, 0.001); end
  def test_output_aj292; assert_in_epsilon(2.8033612225809206, worksheet.output_aj292, 0.001); end
  def test_output_am292; assert_in_delta(0.04401225672713527, worksheet.output_am292, 0.001); end
  def test_output_an292; assert_in_epsilon(4.600462491310403, worksheet.output_an292, 0.001); end
  def test_output_ak292; assert_in_epsilon(2.5663972062455906, worksheet.output_ak292, 0.001); end
  def test_output_ao292; assert_equal("", worksheet.output_ao292); end
  def test_output_c293; assert_equal("R.07", worksheet.output_c293); end
  def test_output_d293; assert_equal("XI", worksheet.output_d293); end
  def test_output_e293; assert_equal("Environmental heat / Industry", worksheet.output_e293); end
  def test_output_f293; assert_equal("TWh/yr", worksheet.output_f293); end
  def test_output_ac293; assert_in_delta(0, (worksheet.output_ac293||0), 0.001); end
  def test_output_ad293; assert_in_delta(0, (worksheet.output_ad293||0), 0.001); end
  def test_output_ae293; assert_in_delta(0, (worksheet.output_ae293||0), 0.001); end
  def test_output_af293; assert_in_delta(0, (worksheet.output_af293||0), 0.001); end
  def test_output_ag293; assert_in_delta(0, (worksheet.output_ag293||0), 0.001); end
  def test_output_ah293; assert_in_delta(0, (worksheet.output_ah293||0), 0.001); end
  def test_output_ai293; assert_in_delta(0, (worksheet.output_ai293||0), 0.001); end
  def test_output_aj293; assert_in_delta(0, (worksheet.output_aj293||0), 0.001); end
  def test_output_ak293; assert_in_delta(0, (worksheet.output_ak293||0), 0.001); end
  def test_output_am293; assert_equal("", worksheet.output_am293); end
  def test_output_an293; assert_equal("", worksheet.output_an293); end
  def test_output_ao293; assert_equal("", worksheet.output_ao293); end
  def test_output_e294; assert_equal("Environmental heat", worksheet.output_e294); end
  def test_output_f294; assert_equal("TWh/yr", worksheet.output_f294); end
  def test_output_ad294; assert_in_epsilon(5.3543239838015735, worksheet.output_ad294, 0.001); end
  def test_output_ae294; assert_in_epsilon(10.320999678646096, worksheet.output_ae294, 0.001); end
  def test_output_af294; assert_in_epsilon(13.76115171219378, worksheet.output_af294, 0.001); end
  def test_output_ag294; assert_in_epsilon(16.05889112810207, worksheet.output_ag294, 0.001); end
  def test_output_ah294; assert_in_epsilon(17.399634625588906, worksheet.output_ah294, 0.001); end
  def test_output_ai294; assert_in_epsilon(17.791292556047676, worksheet.output_ai294, 0.001); end
  def test_output_aj294; assert_in_epsilon(17.262503360025125, worksheet.output_aj294, 0.001); end
  def test_output_am294; assert_in_delta(0.07534760073098012, worksheet.output_am294, 0.001); end
  def test_output_an294; assert_in_epsilon(17.27910041213586, worksheet.output_an294, 0.001); end
  def test_output_ak294; assert_in_epsilon(16.164297499404814, worksheet.output_ak294, 0.001); end
  def test_output_ao294; assert_equal("", worksheet.output_ao294); end
  def test_output_e295; assert_equal("BioFuels (Solid, Liquid, Gas)", worksheet.output_e295); end
  def test_output_f295; assert_equal("TWh/yr", worksheet.output_f295); end
  def test_output_ad275; assert_in_delta(0.4606698166826762, worksheet.output_ad275, 0.001); end
  def test_output_ad281; assert_in_delta(0.02771515829589633, worksheet.output_ad281, 0.001); end
  def test_output_ad286; assert_in_delta(0.06989212042049109, worksheet.output_ad286, 0.001); end
  def test_output_ad295; assert_in_epsilon(30.315633655282127, worksheet.output_ad295, 0.001); end
  def test_output_ae275; assert_in_delta(0.5731176071027286, worksheet.output_ae275, 0.001); end
  def test_output_ae281; assert_in_delta(0.05665804898749113, worksheet.output_ae281, 0.001); end
  def test_output_ae286; assert_in_delta(0.11993154028989883, worksheet.output_ae286, 0.001); end
  def test_output_ae295; assert_in_epsilon(35.46785139386476, worksheet.output_ae295, 0.001); end
  def test_output_af275; assert_in_delta(0.9347555483000909, worksheet.output_af275, 0.001); end
  def test_output_af281; assert_in_delta(0.08348353636134002, worksheet.output_af281, 0.001); end
  def test_output_af286; assert_in_delta(0.15078617848107376, worksheet.output_af286, 0.001); end
  def test_output_af295; assert_in_epsilon(41.20098089067876, worksheet.output_af295, 0.001); end
  def test_output_ag275; assert_in_delta(1, worksheet.output_ag275, 0.001); end
  def test_output_ag281; assert_in_delta(0.12221937812473192, worksheet.output_ag281, 0.001); end
  def test_output_ag286; assert_in_delta(0.16355188365526147, worksheet.output_ag286, 0.001); end
  def test_output_ag295; assert_in_epsilon(37.057214898390846, worksheet.output_ag295, 0.001); end
  def test_output_ah275; assert_in_delta(1, worksheet.output_ah275, 0.001); end
  def test_output_ah281; assert_in_delta(0.17714805204652115, worksheet.output_ah281, 0.001); end
  def test_output_ah286; assert_in_delta(0.1731442430099793, worksheet.output_ah286, 0.001); end
  def test_output_ah295; assert_in_epsilon(35.85352981879122, worksheet.output_ah295, 0.001); end
  def test_output_ai275; assert_in_delta(1, worksheet.output_ai275, 0.001); end
  def test_output_ai281; assert_in_delta(0.24904154321879898, worksheet.output_ai281, 0.001); end
  def test_output_ai286; assert_in_delta(0.17933190723882889, worksheet.output_ai286, 0.001); end
  def test_output_ai295; assert_in_epsilon(34.30754882948457, worksheet.output_ai295, 0.001); end
  def test_output_aj275; assert_in_delta(1, worksheet.output_aj275, 0.001); end
  def test_output_aj281; assert_in_delta(0.35196807176186445, worksheet.output_aj281, 0.001); end
  def test_output_aj286; assert_in_delta(0.18233652084021912, worksheet.output_aj286, 0.001); end
  def test_output_aj295; assert_in_epsilon(32.537967552686204, worksheet.output_aj295, 0.001); end
  def test_output_am295; assert_in_delta(0.005023335815444119, worksheet.output_am295, 0.001); end
  def test_output_an295; assert_in_delta(0.22192860989258456, worksheet.output_an295, 0.001); end
  def test_output_ak295; assert_in_epsilon(30.531018181694762, worksheet.output_ak295, 0.001); end
  def test_output_ao295; assert_equal("", worksheet.output_ao295); end
  def test_output_am296; assert_equal("", worksheet.output_am296); end
  def test_output_an296; assert_equal("", worksheet.output_an296); end
  def test_output_ao296; assert_equal("", worksheet.output_ao296); end
  def test_output_e297; assert_equal("Total production", worksheet.output_e297); end
  def test_output_f297; assert_equal("TWh/yr", worksheet.output_f297); end
  def test_output_ad297; assert_in_epsilon(312.03966005854465, worksheet.output_ad297, 0.001); end
  def test_output_ae297; assert_in_epsilon(264.97074189994316, worksheet.output_ae297, 0.001); end
  def test_output_af297; assert_in_epsilon(221.32217144047388, worksheet.output_af297, 0.001); end
  def test_output_ag297; assert_in_epsilon(182.79375517807674, worksheet.output_ag297, 0.001); end
  def test_output_ah297; assert_in_epsilon(153.52711174223646, worksheet.output_ah297, 0.001); end
  def test_output_ai297; assert_in_epsilon(129.60367227986436, worksheet.output_ai297, 0.001); end
  def test_output_aj297; assert_in_epsilon(108.22405487554923, worksheet.output_aj297, 0.001); end
  def test_output_am297; assert_in_delta(-0.03277319494556119, worksheet.output_am297, 0.001); end
  def test_output_an297; assert_in_delta(-0.7362861432438625, worksheet.output_an297, 0.001); end
  def test_output_ak297; assert_in_epsilon(89.62189383605177, worksheet.output_ak297, 0.001); end
  def test_output_ao297; assert_equal("", worksheet.output_ao297); end
  def test_output_b298; assert_equal("REF", worksheet.output_b298); end
  def test_output_e298; assert_equal("Reference scenario", worksheet.output_e298); end
  def test_output_f298; assert_equal("TWh/yr", worksheet.output_f298); end
  def test_output_g298; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g298); end
  def test_output_ac298; assert_in_epsilon(363.50417551434856, worksheet.output_ac298, 0.001); end
  def test_output_ad298; assert_in_epsilon(365.42206694402023, worksheet.output_ad298, 0.001); end
  def test_output_ae298; assert_in_epsilon(373.0892100267905, worksheet.output_ae298, 0.001); end
  def test_output_af298; assert_in_epsilon(378.04632176990737, worksheet.output_af298, 0.001); end
  def test_output_ag298; assert_in_epsilon(382.89420008787147, worksheet.output_ag298, 0.001); end
  def test_output_ah298; assert_in_epsilon(386.4324142459772, worksheet.output_ah298, 0.001); end
  def test_output_ai298; assert_in_epsilon(391.2670029013325, worksheet.output_ai298, 0.001); end
  def test_output_aj298; assert_in_epsilon(395.55264624798986, worksheet.output_aj298, 0.001); end
  def test_output_ak298; assert_in_epsilon(401.9205483130132, worksheet.output_ak298, 0.001); end
  def test_output_am298; assert_in_delta(0.002514747791989569, worksheet.output_am298, 0.001); end
  def test_output_an298; assert_in_delta(0.10568344295992338, worksheet.output_an298, 0.001); end
  def test_output_ao298; assert_equal("", worksheet.output_ao298); end
  def test_output_e299; assert_equal("RES production", worksheet.output_e299); end
  def test_output_f299; assert_equal("TWh/yr", worksheet.output_f299); end
  def test_output_ad299; assert_in_epsilon(31.54554087503927, worksheet.output_ad299, 0.001); end
  def test_output_ae299; assert_in_epsilon(38.34496165741814, worksheet.output_ae299, 0.001); end
  def test_output_af299; assert_in_epsilon(45.921094202416185, worksheet.output_af299, 0.001); end
  def test_output_ag299; assert_in_epsilon(42.978054846029906, worksheet.output_ag299, 0.001); end
  def test_output_ah299; assert_in_epsilon(41.53741490962781, worksheet.output_ah299, 0.001); end
  def test_output_ai299; assert_in_epsilon(39.71983589477523, worksheet.output_ai299, 0.001); end
  def test_output_aj299; assert_in_epsilon(37.60801142370347, worksheet.output_aj299, 0.001); end
  def test_output_am299; assert_in_delta(0.00862211315093786, worksheet.output_am299, 0.001); end
  def test_output_an299; assert_in_delta(0.4097412836499281, worksheet.output_an299, 0.001); end
  def test_output_ak299; assert_in_epsilon(35.223691805027165, worksheet.output_ak299, 0.001); end
  def test_output_ao299; assert_equal("", worksheet.output_ao299); end
  def test_output_e300; assert_equal("Share of RES production in total production", worksheet.output_e300); end
  def test_output_f300; assert_equal("%", worksheet.output_f300); end
  def test_output_ac275; assert_in_delta(0.3681782427562296, worksheet.output_ac275, 0.001); end
  def test_output_ac281; assert_in_delta(0.025024010636858978, worksheet.output_ac281, 0.001); end
  def test_output_ac286; assert_in_delta(0.022683384753030052, worksheet.output_ac286, 0.001); end
  def test_output_ac295; assert_in_epsilon(24.9859262926814, worksheet.output_ac295, 0.001); end
  def test_output_ac288; assert_in_delta(0, (worksheet.output_ac288||0), 0.001); end
  def test_output_ac290; assert_in_delta(0, (worksheet.output_ac290||0), 0.001); end
  def test_output_ac299; assert_in_epsilon(24.9859262926814, worksheet.output_ac299, 0.001); end
  def test_output_ac269; assert_in_epsilon(4.816689403032683, worksheet.output_ac269, 0.001); end
  def test_output_ac270; assert_in_delta(0.30549824652607716, worksheet.output_ac270, 0.001); end
  def test_output_ac271; assert_in_epsilon(5.12218764955876, worksheet.output_ac271, 0.001); end
  def test_output_ac276; assert_in_epsilon(31.137637686312054, worksheet.output_ac276, 0.001); end
  def test_output_ac282; assert_in_epsilon(161.01471607292143, worksheet.output_ac282, 0.001); end
  def test_output_ac287; assert_in_epsilon(116.7004480728594, worksheet.output_ac287, 0.001); end
  def test_output_ac291; assert_in_delta(0.42605749943043364, worksheet.output_ac291, 0.001); end
  def test_output_ac292; assert_in_delta(0.45824736978911573, worksheet.output_ac292, 0.001); end
  def test_output_ac294; assert_in_delta(0.8843048692195494, worksheet.output_ac294, 0.001); end
  def test_output_ac297; assert_in_epsilon(339.8452206435526, worksheet.output_ac297, 0.001); end
  def test_output_ac300; assert_in_delta(0.07352148794491344, worksheet.output_ac300, 0.001); end
  def test_output_ad300; assert_in_delta(0.10109465210005907, worksheet.output_ad300, 0.001); end
  def test_output_ae300; assert_in_delta(0.1447139460850276, worksheet.output_ae300, 0.001); end
  def test_output_af300; assert_in_delta(0.2074852867362499, worksheet.output_af300, 0.001); end
  def test_output_ag300; assert_in_delta(0.23511774132634294, worksheet.output_ag300, 0.001); end
  def test_output_ah300; assert_in_delta(0.27055426522558984, worksheet.output_ah300, 0.001); end
  def test_output_ai300; assert_in_delta(0.306471531215603, worksheet.output_ai300, 0.001); end
  def test_output_aj300; assert_in_delta(0.3475014077688208, worksheet.output_aj300, 0.001); end
  def test_output_am300; assert_in_delta(0.04279793310129487, worksheet.output_am300, 0.001); end
  def test_output_an300; assert_in_epsilon(4.345723205411802, worksheet.output_an300, 0.001); end
  def test_output_ak300; assert_in_delta(0.3930255242035278, worksheet.output_ak300, 0.001); end
  def test_output_ao300; assert_equal("", worksheet.output_ao300); end
  def test_output_c301; assert_equal("XI", worksheet.output_c301); end
  def test_output_d301; assert_equal("I.01", worksheet.output_d301); end
  def test_output_e301; assert_equal("Heat required for industry", worksheet.output_e301); end
  def test_output_f301; assert_equal("TWh/yr", worksheet.output_f301); end
  def test_output_ac301; assert_in_epsilon(126.16545745745992, worksheet.output_ac301, 0.001); end
  def test_output_ad301; assert_in_epsilon(105.01099351722648, worksheet.output_ad301, 0.001); end
  def test_output_ae301; assert_in_epsilon(80.01314882992806, worksheet.output_ae301, 0.001); end
  def test_output_af301; assert_in_epsilon(62.36740387496312, worksheet.output_af301, 0.001); end
  def test_output_ag301; assert_in_epsilon(48.21440813598017, worksheet.output_ag301, 0.001); end
  def test_output_ah301; assert_in_epsilon(40.03707738239071, worksheet.output_ah301, 0.001); end
  def test_output_ai301; assert_in_epsilon(32.97654003323694, worksheet.output_ai301, 0.001); end
  def test_output_aj301; assert_in_epsilon(26.871419521334634, worksheet.output_aj301, 0.001); end
  def test_output_ak301; assert_in_epsilon(21.98731795680016, worksheet.output_ak301, 0.001); end
  def test_output_am301; assert_in_delta(-0.04273805402744291, worksheet.output_am301, 0.001); end
  def test_output_an301; assert_in_delta(-0.8257263247809823, worksheet.output_an301, 0.001); end
  def test_output_ao301; assert_equal("", worksheet.output_ao301); end
  def test_output_c302; assert_equal("XI", worksheet.output_c302); end
  def test_output_d302; assert_equal("V.03", worksheet.output_d302); end
  def test_output_e302; assert_equal("Solid hydrocarbons used by industry", worksheet.output_e302); end
  def test_output_f302; assert_equal("TWh/yr", worksheet.output_f302); end
  def test_output_ac302; assert_in_epsilon(-46.222428083198764, worksheet.output_ac302, 0.001); end
  def test_output_ad302; assert_in_epsilon(-37.46329312194105, worksheet.output_ad302, 0.001); end
  def test_output_ae302; assert_in_epsilon(-28.35649942691964, worksheet.output_ae302, 0.001); end
  def test_output_af302; assert_in_epsilon(-21.328416073148183, worksheet.output_af302, 0.001); end
  def test_output_ag302; assert_in_epsilon(-16.425446156081076, worksheet.output_ag302, 0.001); end
  def test_output_ah302; assert_in_epsilon(-16.19005900434946, worksheet.output_ah302, 0.001); end
  def test_output_ai302; assert_in_epsilon(-15.761198161798488, worksheet.output_ai302, 0.001); end
  def test_output_aj302; assert_in_epsilon(-15.250090793834756, worksheet.output_aj302, 0.001); end
  def test_output_ak302; assert_in_epsilon(-14.68617467530458, worksheet.output_ak302, 0.001); end
  def test_output_am302; assert_in_delta(-0.02825705035315562, worksheet.output_am302, 0.001); end
  def test_output_an302; assert_in_delta(-0.6822716745024737, worksheet.output_an302, 0.001); end
  def test_output_ao302; assert_equal("", worksheet.output_ao302); end
  def test_output_c303; assert_equal("XI", worksheet.output_c303); end
  def test_output_d303; assert_equal("V.05", worksheet.output_d303); end
  def test_output_e303; assert_equal("Gaseous hydrocarbons used by Industry", worksheet.output_e303); end
  def test_output_f303; assert_equal("TWh/yr", worksheet.output_f303); end
  def test_output_ac303; assert_in_epsilon(-70.9872520436923, worksheet.output_ac303, 0.001); end
  def test_output_ad303; assert_in_epsilon(-63.919048695224085, worksheet.output_ad303, 0.001); end
  def test_output_ae303; assert_in_epsilon(-54.477584675800685, worksheet.output_ae303, 0.001); end
  def test_output_af303; assert_in_epsilon(-46.786924944519534, worksheet.output_af303, 0.001); end
  def test_output_ag303; assert_in_epsilon(-39.6612279577962, worksheet.output_ag303, 0.001); end
  def test_output_ah303; assert_in_epsilon(-33.22363813980179, worksheet.output_ah303, 0.001); end
  def test_output_ai303; assert_in_epsilon(-27.736449733088822, worksheet.output_ai303, 0.001); end
  def test_output_aj303; assert_in_epsilon(-23.060051455748344, worksheet.output_aj303, 0.001); end
  def test_output_ak303; assert_in_epsilon(-19.465766078813907, worksheet.output_ak303, 0.001); end
  def test_output_am303; assert_in_delta(-0.03182853524507312, worksheet.output_am303, 0.001); end
  def test_output_an303; assert_in_delta(-0.7257850456468884, worksheet.output_an303, 0.001); end
  def test_output_ao303; assert_equal("", worksheet.output_ao303); end
  def test_output_c304; assert_equal("XI", worksheet.output_c304); end
  def test_output_d304; assert_equal("V.04", worksheet.output_d304); end
  def test_output_e304; assert_equal("Liquid hydrocarbons used by Industry", worksheet.output_e304); end
  def test_output_f304; assert_equal("TWh/yr", worksheet.output_f304); end
  def test_output_ac304; assert_in_epsilon(-9.966345214825088, worksheet.output_ac304, 0.001); end
  def test_output_ad304; assert_in_epsilon(-7.073462111984176, worksheet.output_ad304, 0.001); end
  def test_output_ae304; assert_in_epsilon(-4.336607617295266, worksheet.output_ae304, 0.001); end
  def test_output_af304; assert_in_epsilon(-2.7650977412034337, worksheet.output_af304, 0.001); end
  def test_output_ag304; assert_in_epsilon(-1.786000264295472, worksheet.output_ag304, 0.001); end
  def test_output_ah304; assert_in_epsilon(-1.4466625612484598, worksheet.output_ah304, 0.001); end
  def test_output_ai304; assert_in_epsilon(-1.1797994975378514, worksheet.output_ai304, 0.001); end
  def test_output_aj304; assert_in_delta(-0.9663341466885703, worksheet.output_aj304, 0.001); end
  def test_output_ak304; assert_in_delta(-0.8013996361768664, worksheet.output_ak304, 0.001); end
  def test_output_am304; assert_in_delta(-0.06107083272583813, worksheet.output_am304, 0.001); end
  def test_output_an304; assert_in_delta(-0.9195894162902593, worksheet.output_an304, 0.001); end
  def test_output_ao304; assert_equal("", worksheet.output_ao304); end
  def test_output_c305; assert_equal("XI", worksheet.output_c305); end
  def test_output_d305; assert_equal("V.07", worksheet.output_d305); end
  def test_output_e305; assert_equal("Heat transport used by Industry", worksheet.output_e305); end
  def test_output_f305; assert_equal("TWh/yr", worksheet.output_f305); end
  def test_output_ac305; assert_in_epsilon(-14.238637352154559, worksheet.output_ac305, 0.001); end
  def test_output_ad305; assert_in_epsilon(-13.043412467796767, worksheet.output_ad305, 0.001); end
  def test_output_ae305; assert_in_epsilon(-9.04325460159865, worksheet.output_ae305, 0.001); end
  def test_output_af305; assert_in_epsilon(-7.4404337344304095, worksheet.output_af305, 0.001); end
  def test_output_ag305; assert_in_epsilon(-6.0929800575172655, worksheet.output_ag305, 0.001); end
  def test_output_ah305; assert_in_epsilon(-4.777522272673135, worksheet.output_ah305, 0.001); end
  def test_output_ai305; assert_in_epsilon(-3.7956598829224024, worksheet.output_ai305, 0.001); end
  def test_output_aj305; assert_in_epsilon(-3.01193541802614, worksheet.output_aj305, 0.001); end
  def test_output_ak305; assert_in_epsilon(-2.391068104376616, worksheet.output_ak305, 0.001); end
  def test_output_am305; assert_in_delta(-0.04362527976188968, worksheet.output_am305, 0.001); end
  def test_output_an305; assert_in_delta(-0.8320718447109825, worksheet.output_an305, 0.001); end
  def test_output_ao305; assert_equal("", worksheet.output_ao305); end
  def test_output_e306; assert_equal("Heat used by CHPs", worksheet.output_e306); end
  def test_output_f306; assert_equal("TWh/yr", worksheet.output_f306); end
  def test_output_ab306; assert_in_epsilon(-17.1335069891886, worksheet.output_ab306, 0.001); end
  def test_output_ac306; assert_in_epsilon(-15.249205236410782, worksheet.output_ac306, 0.001); end
  def test_output_ad306; assert_in_epsilon(-16.488222879719594, worksheet.output_ad306, 0.001); end
  def test_output_ae306; assert_in_epsilon(-16.200797491686185, worksheet.output_ae306, 0.001); end
  def test_output_af306; assert_in_epsilon(-15.953468618338444, worksheet.output_af306, 0.001); end
  def test_output_ag306; assert_in_epsilon(-15.751246299709841, worksheet.output_ag306, 0.001); end
  def test_output_ah306; assert_in_epsilon(-15.600804595682135, worksheet.output_ah306, 0.001); end
  def test_output_ai306; assert_in_epsilon(-15.496567242110629, worksheet.output_ai306, 0.001); end
  def test_output_aj306; assert_in_epsilon(-15.416992292963176, worksheet.output_aj306, 0.001); end
  def test_output_am306; assert_in_delta(0.0001762631730326536, worksheet.output_am306, 0.001); end
  def test_output_an306; assert_in_delta(0.0070748147059773725, worksheet.output_an306, 0.001); end
  def test_output_ak306; assert_in_epsilon(-15.357090537871807, worksheet.output_ak306, 0.001); end
  def test_output_ao306; assert_equal("", worksheet.output_ao306); end
  def test_output_e307; assert_equal("Heat used by public CHP and allocated in industry in the model (NIR-OPERA gap)", worksheet.output_e307); end
  def test_output_f307; assert_equal("TWh/yr", worksheet.output_f307); end
  def test_output_ab307; assert_in_epsilon(-10.735523836544, worksheet.output_ab307, 0.001); end
  def test_output_am307; assert_equal("", worksheet.output_am307); end
  def test_output_an307; assert_equal("", worksheet.output_an307); end
  def test_output_ao307; assert_equal("", worksheet.output_ao307); end
  def test_output_am308; assert_equal("", worksheet.output_am308); end
  def test_output_an308; assert_equal("", worksheet.output_an308); end
  def test_output_ao308; assert_equal("", worksheet.output_ao308); end
  def test_output_am309; assert_equal("", worksheet.output_am309); end
  def test_output_an309; assert_equal("", worksheet.output_an309); end
  def test_output_b310; assert_equal("Emissions by sector", worksheet.output_b310); end
  def test_output_am310; assert_equal("", worksheet.output_am310); end
  def test_output_an310; assert_equal("to 2010", worksheet.output_an310); end
  def test_output_ao310; assert_equal("to 1990", worksheet.output_ao310); end
  def test_output_c311; assert_equal("Total emissions allocation across sectors - GROSS OF BIOMASS IMPACT (Biomass emits)", worksheet.output_c311); end
  def test_output_am311; assert_equal("", worksheet.output_am311); end
  def test_output_an311; assert_equal("", worksheet.output_an311); end
  def test_output_ao311; assert_equal("", worksheet.output_ao311); end
  def test_output_c312; assert_equal("I", worksheet.output_c312); end
  def test_output_e312; assert_equal("Hydrocarbon fuel power generation", worksheet.output_e312); end
  def test_output_f312; assert_equal("Mt CO2e", worksheet.output_f312); end
  def test_output_g312; assert_equal("Energy - Refining (incl emissions from biomass)", worksheet.output_g312); end
  def test_output_x312; assert_in_delta(0, (worksheet.output_x312||0), 0.001); end
  def test_output_y312; assert_in_delta(0, (worksheet.output_y312||0), 0.001); end
  def test_output_z312; assert_in_delta(0, (worksheet.output_z312||0), 0.001); end
  def test_output_aa312; assert_in_delta(0, (worksheet.output_aa312||0), 0.001); end
  def test_output_ab312; assert_in_epsilon(25.7666478159777, worksheet.output_ab312, 0.001); end
  def test_output_am312; assert_in_delta(-0.005772786482792447, worksheet.output_am312, 0.001); end
  def test_output_an312; assert_in_delta(-0.20672119519870236, worksheet.output_an312, 0.001); end
  def test_output_ak312; assert_in_epsilon(19.011260829331523, worksheet.output_ak312, 0.001); end
  def test_output_ao312; assert_equal("", worksheet.output_ao312); end
  def test_output_c313; assert_equal("II", worksheet.output_c313); end
  def test_output_e313; assert_equal("Nuclear power generation", worksheet.output_e313); end
  def test_output_f313; assert_equal("Mt CO2e", worksheet.output_f313); end
  def test_output_g313; assert_equal("OK", worksheet.output_g313); end
  def test_output_ab313; assert_in_delta(0, (worksheet.output_ab313||0), 0.001); end
  def test_output_am313; assert_equal("", worksheet.output_am313); end
  def test_output_an313; assert_equal("", worksheet.output_an313); end
  def test_output_ak313; assert_in_delta(0, (worksheet.output_ak313||0), 0.001); end
  def test_output_ao313; assert_equal("", worksheet.output_ao313); end
  def test_output_c314; assert_equal("III", worksheet.output_c314); end
  def test_output_e314; assert_equal("National renewable power generation", worksheet.output_e314); end
  def test_output_f314; assert_equal("Mt CO2e", worksheet.output_f314); end
  def test_output_g314; assert_equal("OK", worksheet.output_g314); end
  def test_output_ab314; assert_in_delta(0, (worksheet.output_ab314||0), 0.001); end
  def test_output_am314; assert_equal("", worksheet.output_am314); end
  def test_output_an314; assert_equal("", worksheet.output_an314); end
  def test_output_ak314; assert_in_delta(0, (worksheet.output_ak314||0), 0.001); end
  def test_output_ao314; assert_equal("", worksheet.output_ao314); end
  def test_output_c315; assert_equal("IV", worksheet.output_c315); end
  def test_output_e315; assert_equal("Distributed renewable power generation", worksheet.output_e315); end
  def test_output_f315; assert_equal("Mt CO2e", worksheet.output_f315); end
  def test_output_g315; assert_equal("OK", worksheet.output_g315); end
  def test_output_ab315; assert_in_delta(0, (worksheet.output_ab315||0), 0.001); end
  def test_output_am315; assert_equal("", worksheet.output_am315); end
  def test_output_an315; assert_equal("", worksheet.output_an315); end
  def test_output_ak315; assert_in_delta(0, (worksheet.output_ak315||0), 0.001); end
  def test_output_ao315; assert_equal("", worksheet.output_ao315); end
  def test_output_c316; assert_equal("VI", worksheet.output_c316); end
  def test_output_e316; assert_equal("Agriculture and waste", worksheet.output_e316); end
  def test_output_f316; assert_equal("Mt CO2e", worksheet.output_f316); end
  def test_output_g316; assert_equal("Historic nb ok, fix model", worksheet.output_g316); end
  def test_output_h316; assert_in_epsilon(17.988853785900357, worksheet.output_h316, 0.001); end
  def test_output_i316; assert_in_delta(0, (worksheet.output_i316||0), 0.001); end
  def test_output_j316; assert_in_delta(0, (worksheet.output_j316||0), 0.001); end
  def test_output_k316; assert_in_delta(0, (worksheet.output_k316||0), 0.001); end
  def test_output_l316; assert_in_delta(0, (worksheet.output_l316||0), 0.001); end
  def test_output_m316; assert_in_epsilon(17.746944317184152, worksheet.output_m316, 0.001); end
  def test_output_n316; assert_in_delta(0, (worksheet.output_n316||0), 0.001); end
  def test_output_o316; assert_in_delta(0, (worksheet.output_o316||0), 0.001); end
  def test_output_p316; assert_in_delta(0, (worksheet.output_p316||0), 0.001); end
  def test_output_q316; assert_in_delta(0, (worksheet.output_q316||0), 0.001); end
  def test_output_r316; assert_in_epsilon(15.88406367057655, worksheet.output_r316, 0.001); end
  def test_output_s316; assert_in_delta(0, (worksheet.output_s316||0), 0.001); end
  def test_output_t316; assert_in_delta(0, (worksheet.output_t316||0), 0.001); end
  def test_output_u316; assert_in_delta(0, (worksheet.output_u316||0), 0.001); end
  def test_output_v316; assert_in_delta(0, (worksheet.output_v316||0), 0.001); end
  def test_output_w316; assert_in_epsilon(14.02568362725688, worksheet.output_w316, 0.001); end
  def test_output_x316; assert_in_delta(0, (worksheet.output_x316||0), 0.001); end
  def test_output_y316; assert_in_delta(0, (worksheet.output_y316||0), 0.001); end
  def test_output_z316; assert_in_delta(0, (worksheet.output_z316||0), 0.001); end
  def test_output_aa316; assert_in_delta(0, (worksheet.output_aa316||0), 0.001); end
  def test_output_ab316; assert_in_epsilon(13.463808239851314, worksheet.output_ab316, 0.001); end
  def test_output_am316; assert_in_delta(-0.011579714006163644, worksheet.output_am316, 0.001); end
  def test_output_an316; assert_in_delta(-0.37242446467988577, worksheet.output_an316, 0.001); end
  def test_output_ao316; assert_in_delta(-0.5223099299120428, worksheet.output_ao316, 0.001); end
  def test_output_c317; assert_in_epsilon(4, worksheet.output_c317, 0.001); end
  def test_output_e317; assert_equal("Agriculture", worksheet.output_e317); end
  def test_output_f317; assert_equal("Mt CO2e", worksheet.output_f317); end
  def test_output_g317; assert_equal("non-CO2 only", worksheet.output_g317); end
  def test_output_h317; assert_in_epsilon(11.85618007516327, worksheet.output_h317, 0.001); end
  def test_output_i317; assert_in_delta(0, (worksheet.output_i317||0), 0.001); end
  def test_output_j317; assert_in_delta(0, (worksheet.output_j317||0), 0.001); end
  def test_output_k317; assert_in_delta(0, (worksheet.output_k317||0), 0.001); end
  def test_output_l317; assert_in_delta(0, (worksheet.output_l317||0), 0.001); end
  def test_output_m317; assert_in_epsilon(11.982718812493207, worksheet.output_m317, 0.001); end
  def test_output_n317; assert_in_delta(0, (worksheet.output_n317||0), 0.001); end
  def test_output_o317; assert_in_delta(0, (worksheet.output_o317||0), 0.001); end
  def test_output_p317; assert_in_delta(0, (worksheet.output_p317||0), 0.001); end
  def test_output_q317; assert_in_delta(0, (worksheet.output_q317||0), 0.001); end
  def test_output_r317; assert_in_epsilon(11.0506551688113, worksheet.output_r317, 0.001); end
  def test_output_s317; assert_in_delta(0, (worksheet.output_s317||0), 0.001); end
  def test_output_t317; assert_in_delta(0, (worksheet.output_t317||0), 0.001); end
  def test_output_u317; assert_in_delta(0, (worksheet.output_u317||0), 0.001); end
  def test_output_v317; assert_in_delta(0, (worksheet.output_v317||0), 0.001); end
  def test_output_w317; assert_in_epsilon(9.983700195609668, worksheet.output_w317, 0.001); end
  def test_output_x317; assert_in_delta(0, (worksheet.output_x317||0), 0.001); end
  def test_output_y317; assert_in_delta(0, (worksheet.output_y317||0), 0.001); end
  def test_output_z317; assert_in_delta(0, (worksheet.output_z317||0), 0.001); end
  def test_output_aa317; assert_in_delta(0, (worksheet.output_aa317||0), 0.001); end
  def test_output_ab317; assert_in_epsilon(10.0418232537418, worksheet.output_ab317, 0.001); end
  def test_output_ac317; assert_in_epsilon(10.041845420711166, worksheet.output_ac317, 0.001); end
  def test_output_ad317; assert_in_epsilon(9.183014656924172, worksheet.output_ad317, 0.001); end
  def test_output_ae317; assert_in_epsilon(8.448551252905851, worksheet.output_ae317, 0.001); end
  def test_output_af317; assert_in_epsilon(7.815711238393634, worksheet.output_af317, 0.001); end
  def test_output_ag317; assert_in_epsilon(7.266255261054693, worksheet.output_ag317, 0.001); end
  def test_output_ah317; assert_in_epsilon(7.018694835790048, worksheet.output_ah317, 0.001); end
  def test_output_ai317; assert_in_epsilon(6.788074791374903, worksheet.output_ai317, 0.001); end
  def test_output_aj317; assert_in_epsilon(6.573235909800082, worksheet.output_aj317, 0.001); end
  def test_output_am317; assert_in_delta(-0.011302520212518763, worksheet.output_am317, 0.001); end
  def test_output_an317; assert_in_delta(-0.36534590700212055, worksheet.output_an317, 0.001); end
  def test_output_ak317; assert_in_epsilon(6.373098297506354, worksheet.output_ak317, 0.001); end
  def test_output_ao317; assert_in_delta(-0.4624661352051376, worksheet.output_ao317, 0.001); end
  def test_output_c318; assert_in_epsilon(6, worksheet.output_c318, 0.001); end
  def test_output_e318; assert_equal("Waste", worksheet.output_e318); end
  def test_output_f318; assert_equal("Mt CO2e", worksheet.output_f318); end
  def test_output_g318; assert_equal("non-CO2 only", worksheet.output_g318); end
  def test_output_h318; assert_in_epsilon(3.3266737107370887, worksheet.output_h318, 0.001); end
  def test_output_i318; assert_in_delta(0, (worksheet.output_i318||0), 0.001); end
  def test_output_j318; assert_in_delta(0, (worksheet.output_j318||0), 0.001); end
  def test_output_k318; assert_in_delta(0, (worksheet.output_k318||0), 0.001); end
  def test_output_l318; assert_in_delta(0, (worksheet.output_l318||0), 0.001); end
  def test_output_m318; assert_in_epsilon(2.9662255046909474, worksheet.output_m318, 0.001); end
  def test_output_n318; assert_in_delta(0, (worksheet.output_n318||0), 0.001); end
  def test_output_o318; assert_in_delta(0, (worksheet.output_o318||0), 0.001); end
  def test_output_p318; assert_in_delta(0, (worksheet.output_p318||0), 0.001); end
  def test_output_q318; assert_in_delta(0, (worksheet.output_q318||0), 0.001); end
  def test_output_r318; assert_in_epsilon(2.409408501765251, worksheet.output_r318, 0.001); end
  def test_output_s318; assert_in_delta(0, (worksheet.output_s318||0), 0.001); end
  def test_output_t318; assert_in_delta(0, (worksheet.output_t318||0), 0.001); end
  def test_output_u318; assert_in_delta(0, (worksheet.output_u318||0), 0.001); end
  def test_output_v318; assert_in_delta(0, (worksheet.output_v318||0), 0.001); end
  def test_output_w318; assert_in_epsilon(1.5746834316472123, worksheet.output_w318, 0.001); end
  def test_output_x318; assert_in_delta(0, (worksheet.output_x318||0), 0.001); end
  def test_output_y318; assert_in_delta(0, (worksheet.output_y318||0), 0.001); end
  def test_output_z318; assert_in_delta(0, (worksheet.output_z318||0), 0.001); end
  def test_output_aa318; assert_in_delta(0, (worksheet.output_aa318||0), 0.001); end
  def test_output_ab318; assert_in_epsilon(1.1349849861095138, worksheet.output_ab318, 0.001); end
  def test_output_ac318; assert_in_epsilon(1.117281696428572, worksheet.output_ac318, 0.001); end
  def test_output_ad318; assert_in_delta(0.9776214843750003, worksheet.output_ad318, 0.001); end
  def test_output_ae318; assert_in_delta(0.8379612723214289, worksheet.output_ae318, 0.001); end
  def test_output_af318; assert_in_delta(0.6565671540178576, worksheet.output_af318, 0.001); end
  def test_output_ag318; assert_in_delta(0.4936851607142859, worksheet.output_ag318, 0.001); end
  def test_output_ah318; assert_in_delta(0.34522352678571444, worksheet.output_ah318, 0.001); end
  def test_output_ai318; assert_in_delta(0.21345545535714294, worksheet.output_ai318, 0.001); end
  def test_output_aj318; assert_in_delta(0.09883558705357151, worksheet.output_aj318, 0.001); end
  def test_output_am318; assert_in_delta(-1, worksheet.output_am318, 0.001); end
  def test_output_an318; assert_in_delta(-1, worksheet.output_an318, 0.001); end
  def test_output_ak318; assert_in_delta(0, (worksheet.output_ak318||0), 0.001); end
  def test_output_ao318; assert_in_delta(-1, worksheet.output_ao318, 0.001); end
  def test_output_e319; assert_equal("Agriculture combustion emissions", worksheet.output_e319); end
  def test_output_f319; assert_equal("Mt CO2e", worksheet.output_f319); end
  def test_output_g319; assert_equal("Combustion emissions", worksheet.output_g319); end
  def test_output_h319; assert_in_epsilon(2.806, worksheet.output_h319, 0.001); end
  def test_output_i319; assert_in_delta(0, (worksheet.output_i319||0), 0.001); end
  def test_output_j319; assert_in_delta(0, (worksheet.output_j319||0), 0.001); end
  def test_output_k319; assert_in_delta(0, (worksheet.output_k319||0), 0.001); end
  def test_output_l319; assert_in_delta(0, (worksheet.output_l319||0), 0.001); end
  def test_output_m319; assert_in_epsilon(2.798, worksheet.output_m319, 0.001); end
  def test_output_n319; assert_in_delta(0, (worksheet.output_n319||0), 0.001); end
  def test_output_o319; assert_in_delta(0, (worksheet.output_o319||0), 0.001); end
  def test_output_p319; assert_in_delta(0, (worksheet.output_p319||0), 0.001); end
  def test_output_q319; assert_in_delta(0, (worksheet.output_q319||0), 0.001); end
  def test_output_r319; assert_in_epsilon(2.424, worksheet.output_r319, 0.001); end
  def test_output_s319; assert_in_delta(0, (worksheet.output_s319||0), 0.001); end
  def test_output_t319; assert_in_delta(0, (worksheet.output_t319||0), 0.001); end
  def test_output_u319; assert_in_delta(0, (worksheet.output_u319||0), 0.001); end
  def test_output_v319; assert_in_delta(0, (worksheet.output_v319||0), 0.001); end
  def test_output_w319; assert_in_epsilon(2.4673, worksheet.output_w319, 0.001); end
  def test_output_x319; assert_in_delta(0, (worksheet.output_x319||0), 0.001); end
  def test_output_y319; assert_in_delta(0, (worksheet.output_y319||0), 0.001); end
  def test_output_z319; assert_in_delta(0, (worksheet.output_z319||0), 0.001); end
  def test_output_aa319; assert_in_delta(0, (worksheet.output_aa319||0), 0.001); end
  def test_output_ab319; assert_in_epsilon(2.287, worksheet.output_ab319, 0.001); end
  def test_output_ac319; assert_in_epsilon(2.533402852827276, worksheet.output_ac319, 0.001); end
  def test_output_ad319; assert_in_epsilon(2.4838524557043367, worksheet.output_ad319, 0.001); end
  def test_output_ae319; assert_in_epsilon(2.4376927564185378, worksheet.output_ae319, 0.001); end
  def test_output_af319; assert_in_epsilon(2.3946917319692527, worksheet.output_af319, 0.001); end
  def test_output_ag319; assert_in_epsilon(2.35463323652197, worksheet.output_ag319, 0.001); end
  def test_output_ah319; assert_in_epsilon(2.3173159149453073, worksheet.output_ah319, 0.001); end
  def test_output_ai319; assert_in_epsilon(2.2825521906938877, worksheet.output_ai319, 0.001); end
  def test_output_aj319; assert_in_epsilon(2.2501673229496686, worksheet.output_aj319, 0.001); end
  def test_output_am319; assert_in_delta(-0.0032959779798689137, worksheet.output_am319, 0.001); end
  def test_output_an319; assert_in_delta(-0.12370883856671899, worksheet.output_an319, 0.001); end
  def test_output_ak319; assert_in_epsilon(2.2199985282824013, worksheet.output_ak319, 0.001); end
  def test_output_ao319; assert_in_delta(-0.2088387283384172, worksheet.output_ao319, 0.001); end
  def test_output_c320; assert_equal("VII", worksheet.output_c320); end
  def test_output_e320; assert_equal("Electricity distribution, storage, and balancing", worksheet.output_e320); end
  def test_output_f320; assert_equal("Mt CO2e", worksheet.output_f320); end
  def test_output_g320; assert_equal("Check ?? Mais 2010 = 0", worksheet.output_g320); end
  def test_output_x320; assert_in_delta(0, (worksheet.output_x320||0), 0.001); end
  def test_output_y320; assert_in_delta(0, (worksheet.output_y320||0), 0.001); end
  def test_output_z320; assert_in_delta(0, (worksheet.output_z320||0), 0.001); end
  def test_output_aa320; assert_in_delta(0, (worksheet.output_aa320||0), 0.001); end
  def test_output_ab320; assert_in_delta(0, (worksheet.output_ab320||0), 0.001); end
  def test_output_am320; assert_equal("", worksheet.output_am320); end
  def test_output_an320; assert_equal("", worksheet.output_an320); end
  def test_output_ak320; assert_in_epsilon(12.364191806180145, worksheet.output_ak320, 0.001); end
  def test_output_ao320; assert_equal("", worksheet.output_ao320); end
  def test_output_c321; assert_equal("VIII", worksheet.output_c321); end
  def test_output_e321; assert_equal("H2 Production", worksheet.output_e321); end
  def test_output_f321; assert_equal("Mt CO2e", worksheet.output_f321); end
  def test_output_g321; assert_equal("Check ?? Mais 2010 = 0", worksheet.output_g321); end
  def test_output_x321; assert_in_delta(0, (worksheet.output_x321||0), 0.001); end
  def test_output_y321; assert_in_delta(0, (worksheet.output_y321||0), 0.001); end
  def test_output_z321; assert_in_delta(0, (worksheet.output_z321||0), 0.001); end
  def test_output_aa321; assert_in_delta(0, (worksheet.output_aa321||0), 0.001); end
  def test_output_ab321; assert_in_delta(0, (worksheet.output_ab321||0), 0.001); end
  def test_output_am321; assert_equal("", worksheet.output_am321); end
  def test_output_an321; assert_equal("", worksheet.output_an321); end
  def test_output_ak321; assert_in_delta(0, (worksheet.output_ak321||0), 0.001); end
  def test_output_ao321; assert_equal("", worksheet.output_ao321); end
  def test_output_c322; assert_equal("IX", worksheet.output_c322); end
  def test_output_e322; assert_equal("Heating", worksheet.output_e322); end
  def test_output_f322; assert_equal("Mt CO2e", worksheet.output_f322); end
  def test_output_h322; assert_in_epsilon(25.806224263755844, worksheet.output_h322, 0.001); end
  def test_output_x322; assert_in_delta(0, (worksheet.output_x322||0), 0.001); end
  def test_output_y322; assert_in_delta(0, (worksheet.output_y322||0), 0.001); end
  def test_output_z322; assert_in_delta(0, (worksheet.output_z322||0), 0.001); end
  def test_output_aa322; assert_in_delta(0, (worksheet.output_aa322||0), 0.001); end
  def test_output_ab322; assert_in_epsilon(31.47100519970225, worksheet.output_ab322, 0.001); end
  def test_output_am322; assert_in_delta(-0.07352436307415533, worksheet.output_am322, 0.001); end
  def test_output_an322; assert_in_delta(-0.9528631957617184, worksheet.output_an322, 0.001); end
  def test_output_ak322; assert_in_epsilon(1.1323590302304471, worksheet.output_ak322, 0.001); end
  def test_output_ao322; assert_in_delta(-0.9561207010116232, worksheet.output_ao322, 0.001); end
  def test_output_c323; assert_equal("X", worksheet.output_c323); end
  def test_output_e323; assert_equal("Lighting and appliances", worksheet.output_e323); end
  def test_output_f323; assert_equal("Mt CO2e", worksheet.output_f323); end
  def test_output_ab323; assert_equal("incl. Above", worksheet.output_ab323); end
  def test_output_am323; assert_in_delta(-1, worksheet.output_am323, 0.001); end
  def test_output_an323; assert_in_delta(-1, worksheet.output_an323, 0.001); end
  def test_output_ak323; assert_in_delta(0, (worksheet.output_ak323||0), 0.001); end
  def test_output_ao323; assert_equal("", worksheet.output_ao323); end
  def test_output_c324; assert_equal("XI", worksheet.output_c324); end
  def test_output_e324; assert_equal("Industry", worksheet.output_e324); end
  def test_output_f324; assert_equal("Mt CO2e", worksheet.output_f324); end
  def test_output_g324; assert_equal("ok", worksheet.output_g324); end
  def test_output_h324; assert_in_epsilon(54.71655160941479, worksheet.output_h324, 0.001); end
  def test_output_i324; assert_in_delta(0, (worksheet.output_i324||0), 0.001); end
  def test_output_j324; assert_in_delta(0, (worksheet.output_j324||0), 0.001); end
  def test_output_k324; assert_in_delta(0, (worksheet.output_k324||0), 0.001); end
  def test_output_l324; assert_in_delta(0, (worksheet.output_l324||0), 0.001); end
  def test_output_m324; assert_in_epsilon(57.402834513345, worksheet.output_m324, 0.001); end
  def test_output_n324; assert_in_delta(0.141046429926288, worksheet.output_n324, 0.001); end
  def test_output_o324; assert_in_delta(0, (worksheet.output_o324||0), 0.001); end
  def test_output_p324; assert_in_delta(0, (worksheet.output_p324||0), 0.001); end
  def test_output_q324; assert_in_delta(0, (worksheet.output_q324||0), 0.001); end
  def test_output_r324; assert_in_epsilon(55.37486514951098, worksheet.output_r324, 0.001); end
  def test_output_s324; assert_in_delta(0, (worksheet.output_s324||0), 0.001); end
  def test_output_t324; assert_in_delta(0, (worksheet.output_t324||0), 0.001); end
  def test_output_u324; assert_in_delta(0, (worksheet.output_u324||0), 0.001); end
  def test_output_v324; assert_in_delta(0, (worksheet.output_v324||0), 0.001); end
  def test_output_w324; assert_in_epsilon(51.44861742029085, worksheet.output_w324, 0.001); end
  def test_output_x324; assert_in_delta(0, (worksheet.output_x324||0), 0.001); end
  def test_output_y324; assert_in_delta(0, (worksheet.output_y324||0), 0.001); end
  def test_output_z324; assert_in_delta(0, (worksheet.output_z324||0), 0.001); end
  def test_output_aa324; assert_in_delta(0, (worksheet.output_aa324||0), 0.001); end
  def test_output_ab324; assert_in_epsilon(45.90771252911647, worksheet.output_ab324, 0.001); end
  def test_output_am324; assert_in_delta(-0.05997977231312701, worksheet.output_am324, 0.001); end
  def test_output_an324; assert_in_delta(-0.9157658961046585, worksheet.output_an324, 0.001); end
  def test_output_ak324; assert_in_epsilon(4.3823655431725435, worksheet.output_ak324, 0.001); end
  def test_output_ao324; assert_in_delta(-0.919907863082174, worksheet.output_ao324, 0.001); end
  def test_output_c325; assert_equal("XI.a", worksheet.output_c325); end
  def test_output_e325; assert_equal("Steel Industry", worksheet.output_e325); end
  def test_output_f325; assert_equal("Mt CO2e", worksheet.output_f325); end
  def test_output_ad325; assert_in_epsilon(7.555038773604599, worksheet.output_ad325, 0.001); end
  def test_output_ae325; assert_in_epsilon(5.854918974803335, worksheet.output_ae325, 0.001); end
  def test_output_af325; assert_in_epsilon(4.492708999190783, worksheet.output_af325, 0.001); end
  def test_output_ag325; assert_in_epsilon(3.4092589609948227, worksheet.output_ag325, 0.001); end
  def test_output_ah325; assert_in_epsilon(3.0698484683921645, worksheet.output_ah325, 0.001); end
  def test_output_ai325; assert_in_epsilon(2.7637223813521254, worksheet.output_ai325, 0.001); end
  def test_output_aj325; assert_in_epsilon(2.4876581147888146, worksheet.output_aj325, 0.001); end
  def test_output_am325; assert_in_delta(-0.07950502709101481, worksheet.output_am325, 0.001); end
  def test_output_an325; assert_in_delta(-0.9636204903087284, worksheet.output_an325, 0.001); end
  def test_output_ak325; assert_in_delta(0.33581125328528505, worksheet.output_ak325, 0.001); end
  def test_output_ao325; assert_equal("", worksheet.output_ao325); end
  def test_output_c326; assert_equal("XI.b", worksheet.output_c326); end
  def test_output_e326; assert_equal("Cement Industry", worksheet.output_e326); end
  def test_output_f326; assert_equal("Mt CO2e", worksheet.output_f326); end
  def test_output_ad326; assert_in_epsilon(3.3393373990320656, worksheet.output_ad326, 0.001); end
  def test_output_ae326; assert_in_epsilon(2.8569602492784587, worksheet.output_ae326, 0.001); end
  def test_output_af326; assert_in_epsilon(1.812316667570899, worksheet.output_af326, 0.001); end
  def test_output_ag326; assert_in_epsilon(1.2376799814160593, worksheet.output_ag326, 0.001); end
  def test_output_ah326; assert_in_delta(0.790893279942518, worksheet.output_ah326, 0.001); end
  def test_output_ai326; assert_in_delta(0.44743441721851485, worksheet.output_ai326, 0.001); end
  def test_output_aj326; assert_in_delta(0.20339668650000797, worksheet.output_aj326, 0.001); end
  def test_output_am326; assert_in_delta(-0.10273374484986364, worksheet.output_am326, 0.001); end
  def test_output_an326; assert_in_delta(-0.9869125994199027, worksheet.output_an326, 0.001); end
  def test_output_ak326; assert_in_delta(0.05572633344425354, worksheet.output_ak326, 0.001); end
  def test_output_ao326; assert_equal("", worksheet.output_ao326); end
  def test_output_c327; assert_equal("XI.c", worksheet.output_c327); end
  def test_output_e327; assert_equal("Lime Industry", worksheet.output_e327); end
  def test_output_f327; assert_equal("Mt CO2e", worksheet.output_f327); end
  def test_output_ad327; assert_in_epsilon(2.5505040617668273, worksheet.output_ad327, 0.001); end
  def test_output_ae327; assert_in_epsilon(2.471195933063028, worksheet.output_ae327, 0.001); end
  def test_output_af327; assert_in_epsilon(2.4185870424075775, worksheet.output_af327, 0.001); end
  def test_output_ag327; assert_in_epsilon(1.9648045200498865, worksheet.output_ag327, 0.001); end
  def test_output_ah327; assert_in_epsilon(1.5290971984950728, worksheet.output_ah327, 0.001); end
  def test_output_ai327; assert_in_epsilon(1.1108348219249362, worksheet.output_ai327, 0.001); end
  def test_output_aj327; assert_in_delta(0.7096044932112955, worksheet.output_aj327, 0.001); end
  def test_output_am327; assert_in_delta(-0.051010020947042545, worksheet.output_am327, 0.001); end
  def test_output_an327; assert_in_delta(-0.8768413104664929, worksheet.output_an327, 0.001); end
  def test_output_ak327; assert_in_delta(0.32500915922330975, worksheet.output_ak327, 0.001); end
  def test_output_ao327; assert_equal("", worksheet.output_ao327); end
  def test_output_c328; assert_equal("XI.d", worksheet.output_c328); end
  def test_output_e328; assert_equal("Glass Industry", worksheet.output_e328); end
  def test_output_f328; assert_equal("Mt CO2e", worksheet.output_f328); end
  def test_output_ad328; assert_in_delta(0.8789080022624072, worksheet.output_ad328, 0.001); end
  def test_output_ae328; assert_in_delta(0.7789838479977222, worksheet.output_ae328, 0.001); end
  def test_output_af328; assert_in_delta(0.6395103432879227, worksheet.output_af328, 0.001); end
  def test_output_ag328; assert_in_delta(0.5044039956986807, worksheet.output_ag328, 0.001); end
  def test_output_ah328; assert_in_delta(0.3825644373823323, worksheet.output_ah328, 0.001); end
  def test_output_ai328; assert_in_delta(0.27269720942701103, worksheet.output_ai328, 0.001); end
  def test_output_aj328; assert_in_delta(0.1736833032316445, worksheet.output_aj328, 0.001); end
  def test_output_am328; assert_in_delta(-0.05992394146106894, worksheet.output_am328, 0.001); end
  def test_output_an328; assert_in_delta(-0.9155655466883624, worksheet.output_an328, 0.001); end
  def test_output_ak328; assert_in_delta(0.08455010795725998, worksheet.output_ak328, 0.001); end
  def test_output_ao328; assert_equal("", worksheet.output_ao328); end
  def test_output_c329; assert_equal("XI.e", worksheet.output_c329); end
  def test_output_e329; assert_equal("Chemicals Industry", worksheet.output_e329); end
  def test_output_f329; assert_equal("Mt CO2e", worksheet.output_f329); end
  def test_output_ad329; assert_in_epsilon(11.462247706033112, worksheet.output_ad329, 0.001); end
  def test_output_ae329; assert_in_epsilon(9.714712575806857, worksheet.output_ae329, 0.001); end
  def test_output_af329; assert_in_epsilon(8.211260502410198, worksheet.output_af329, 0.001); end
  def test_output_ag329; assert_in_epsilon(5.275993562123429, worksheet.output_ag329, 0.001); end
  def test_output_ah329; assert_in_epsilon(3.9428015713749884, worksheet.output_ah329, 0.001); end
  def test_output_ai329; assert_in_epsilon(2.9156411043756596, worksheet.output_ai329, 0.001); end
  def test_output_aj329; assert_in_epsilon(2.13350362948219, worksheet.output_aj329, 0.001); end
  def test_output_am329; assert_in_delta(-0.05302059582151575, worksheet.output_am329, 0.001); end
  def test_output_an329; assert_in_delta(-0.8868586527093242, worksheet.output_an329, 0.001); end
  def test_output_ak329; assert_in_epsilon(1.5231413508809901, worksheet.output_ak329, 0.001); end
  def test_output_ao329; assert_equal("", worksheet.output_ao329); end
  def test_output_c330; assert_equal("XI.f", worksheet.output_c330); end
  def test_output_e330; assert_equal("Pulp & Paper Industry", worksheet.output_e330); end
  def test_output_f330; assert_equal("Mt CO2e", worksheet.output_f330); end
  def test_output_ad330; assert_in_epsilon(3.0374144009795714, worksheet.output_ad330, 0.001); end
  def test_output_ae330; assert_in_epsilon(2.815839328266605, worksheet.output_ae330, 0.001); end
  def test_output_af330; assert_in_epsilon(2.606853590652396, worksheet.output_af330, 0.001); end
  def test_output_ag330; assert_in_epsilon(2.4178816243804286, worksheet.output_ag330, 0.001); end
  def test_output_ah330; assert_in_epsilon(1.4791078660573151, worksheet.output_ah330, 0.001); end
  def test_output_ai330; assert_in_epsilon(1.3531477132330418, worksheet.output_ai330, 0.001); end
  def test_output_aj330; assert_in_epsilon(1.2348123864076705, worksheet.output_aj330, 0.001); end
  def test_output_am330; assert_in_delta(-0.026369175570392644, worksheet.output_am330, 0.001); end
  def test_output_an330; assert_in_delta(-0.656621898421686, worksheet.output_an330, 0.001); end
  def test_output_ak330; assert_in_epsilon(1.1236967707584522, worksheet.output_ak330, 0.001); end
  def test_output_ao330; assert_equal("", worksheet.output_ao330); end
  def test_output_c331; assert_equal("XI.g", worksheet.output_c331); end
  def test_output_e331; assert_equal("Oil & Gas Industry", worksheet.output_e331); end
  def test_output_f331; assert_equal("Mt CO2e", worksheet.output_f331); end
  def test_output_ad331; assert_in_epsilon(10.80704350015017, worksheet.output_ad331, 0.001); end
  def test_output_ae331; assert_in_epsilon(6.561661904053403, worksheet.output_ae331, 0.001); end
  def test_output_af331; assert_in_epsilon(4.908337523421697, worksheet.output_af331, 0.001); end
  def test_output_ag331; assert_in_epsilon(2.936495176812118, worksheet.output_ag331, 0.001); end
  def test_output_ah331; assert_in_epsilon(1.654317564722447, worksheet.output_ah331, 0.001); end
  def test_output_ai331; assert_in_delta(0.8745922516852374, worksheet.output_ai331, 0.001); end
  def test_output_aj331; assert_in_delta(0.3923834743204956, worksheet.output_aj331, 0.001); end
  def test_output_am331; assert_in_delta(-0.10838961589566898, worksheet.output_am331, 0.001); end
  def test_output_an331; assert_in_delta(-0.9898374027811097, worksheet.output_an331, 0.001); end
  def test_output_ak331; assert_in_delta(0.11987009452009956, worksheet.output_ak331, 0.001); end
  def test_output_ao331; assert_equal("", worksheet.output_ao331); end
  def test_output_c332; assert_equal("XI.h", worksheet.output_c332); end
  def test_output_e332; assert_equal("Food, drinks and tobacco Industry", worksheet.output_e332); end
  def test_output_f332; assert_equal("Mt CO2e", worksheet.output_f332); end
  def test_output_ad332; assert_in_epsilon(2.2647892104187086, worksheet.output_ad332, 0.001); end
  def test_output_ae332; assert_in_epsilon(2.131626633347693, worksheet.output_ae332, 0.001); end
  def test_output_af332; assert_in_epsilon(2.006070609664599, worksheet.output_af332, 0.001); end
  def test_output_ag332; assert_in_epsilon(1.7004480365706447, worksheet.output_ag332, 0.001); end
  def test_output_ah332; assert_in_epsilon(1.4351560995752335, worksheet.output_ah332, 0.001); end
  def test_output_ai332; assert_in_epsilon(1.185020774179002, worksheet.output_ai332, 0.001); end
  def test_output_aj332; assert_in_delta(0.9517809051096545, worksheet.output_aj332, 0.001); end
  def test_output_am332; assert_in_delta(-0.0291691268623262, worksheet.output_am332, 0.001); end
  def test_output_an332; assert_in_delta(-0.6939846930182717, worksheet.output_an332, 0.001); end
  def test_output_ak332; assert_in_delta(0.7369456218959048, worksheet.output_ak332, 0.001); end
  def test_output_ao332; assert_equal("", worksheet.output_ao332); end
  def test_output_c333; assert_equal("XI.i", worksheet.output_c333); end
  def test_output_e333; assert_equal("Machines Industry", worksheet.output_e333); end
  def test_output_f333; assert_equal("Mt CO2e", worksheet.output_f333); end
  def test_output_ad333; assert_in_delta(0, (worksheet.output_ad333||0), 0.001); end
  def test_output_ae333; assert_in_delta(0, (worksheet.output_ae333||0), 0.001); end
  def test_output_af333; assert_in_delta(0, (worksheet.output_af333||0), 0.001); end
  def test_output_ag333; assert_in_delta(0, (worksheet.output_ag333||0), 0.001); end
  def test_output_ah333; assert_in_delta(0, (worksheet.output_ah333||0), 0.001); end
  def test_output_ai333; assert_in_delta(0, (worksheet.output_ai333||0), 0.001); end
  def test_output_aj333; assert_in_delta(0, (worksheet.output_aj333||0), 0.001); end
  def test_output_am333; assert_equal("", worksheet.output_am333); end
  def test_output_an333; assert_equal("", worksheet.output_an333); end
  def test_output_ak333; assert_in_delta(0, (worksheet.output_ak333||0), 0.001); end
  def test_output_ao333; assert_equal("", worksheet.output_ao333); end
  def test_output_c334; assert_equal("XI.j", worksheet.output_c334); end
  def test_output_e334; assert_equal("Non-Ferrous metals Industry", worksheet.output_e334); end
  def test_output_f334; assert_equal("Mt CO2e", worksheet.output_f334); end
  def test_output_ad334; assert_in_delta(0.3827896982887409, worksheet.output_ad334, 0.001); end
  def test_output_ae334; assert_in_delta(0.34460485536828905, worksheet.output_ae334, 0.001); end
  def test_output_af334; assert_in_delta(0.3083251083793939, worksheet.output_af334, 0.001); end
  def test_output_ag334; assert_in_delta(0.2351270197273745, worksheet.output_ag334, 0.001); end
  def test_output_ah334; assert_in_delta(0.17248946605589366, worksheet.output_ah334, 0.001); end
  def test_output_ai334; assert_in_delta(0.12006447527297953, worksheet.output_ai334, 0.001); end
  def test_output_aj334; assert_in_delta(0.07734168570058494, worksheet.output_aj334, 0.001); end
  def test_output_am334; assert_in_delta(-0.05518280803239728, worksheet.output_am334, 0.001); end
  def test_output_an334; assert_in_delta(-0.8967449062487577, worksheet.output_an334, 0.001); end
  def test_output_ak334; assert_in_delta(0.04368010841639991, worksheet.output_ak334, 0.001); end
  def test_output_ao334; assert_equal("", worksheet.output_ao334); end
  def test_output_c335; assert_equal("XI.k", worksheet.output_c335); end
  def test_output_e335; assert_equal("Construction industry", worksheet.output_e335); end
  def test_output_f335; assert_equal("Mt CO2e", worksheet.output_f335); end
  def test_output_ad335; assert_in_delta(0.5746965137499329, worksheet.output_ad335, 0.001); end
  def test_output_ae335; assert_in_delta(0.5119917941877273, worksheet.output_ae335, 0.001); end
  def test_output_af335; assert_in_delta(0.4554350927701004, worksheet.output_af335, 0.001); end
  def test_output_ag335; assert_in_delta(0.3340338266442351, worksheet.output_ag335, 0.001); end
  def test_output_ah335; assert_in_delta(0.233004879702698, worksheet.output_ah335, 0.001); end
  def test_output_ai335; assert_in_delta(0.15052653082614253, worksheet.output_ai335, 0.001); end
  def test_output_aj335; assert_in_delta(0.08477705889522186, worksheet.output_aj335, 0.001); end
  def test_output_am335; assert_in_delta(-0.06652251316282731, worksheet.output_am335, 0.001); end
  def test_output_an335; assert_in_delta(-0.9362978732007925, worksheet.output_an335, 0.001); end
  def test_output_ak335; assert_in_delta(0.033934742790589334, worksheet.output_ak335, 0.001); end
  def test_output_ao335; assert_equal("", worksheet.output_ao335); end
  def test_output_c336; assert_equal("XI.l", worksheet.output_c336); end
  def test_output_e336; assert_equal("Other Industry", worksheet.output_e336); end
  def test_output_f336; assert_equal("Mt CO2e", worksheet.output_f336); end
  def test_output_ad336; assert_in_delta(0, (worksheet.output_ad336||0), 0.001); end
  def test_output_ae336; assert_in_delta(0, (worksheet.output_ae336||0), 0.001); end
  def test_output_af336; assert_in_delta(0, (worksheet.output_af336||0), 0.001); end
  def test_output_ag336; assert_in_delta(0, (worksheet.output_ag336||0), 0.001); end
  def test_output_ah336; assert_in_delta(0, (worksheet.output_ah336||0), 0.001); end
  def test_output_ai336; assert_in_delta(0, (worksheet.output_ai336||0), 0.001); end
  def test_output_aj336; assert_in_delta(0, (worksheet.output_aj336||0), 0.001); end
  def test_output_am336; assert_in_delta(-1, worksheet.output_am336, 0.001); end
  def test_output_an336; assert_in_delta(-1, worksheet.output_an336, 0.001); end
  def test_output_ak336; assert_in_delta(0, (worksheet.output_ak336||0), 0.001); end
  def test_output_ao336; assert_equal("", worksheet.output_ao336); end
  def test_output_c337; assert_equal("XII", worksheet.output_c337); end
  def test_output_e337; assert_equal("Transport", worksheet.output_e337); end
  def test_output_f337; assert_equal("Mt CO2e", worksheet.output_f337); end
  def test_output_g337; assert_equal("Scope OK = all domestic", worksheet.output_g337); end
  def test_output_x337; assert_in_delta(0, (worksheet.output_x337||0), 0.001); end
  def test_output_y337; assert_in_delta(0, (worksheet.output_y337||0), 0.001); end
  def test_output_z337; assert_in_delta(0, (worksheet.output_z337||0), 0.001); end
  def test_output_aa337; assert_in_delta(0, (worksheet.output_aa337||0), 0.001); end
  def test_output_ab337; assert_in_epsilon(25.3644527403487, worksheet.output_ab337, 0.001); end
  def test_output_am337; assert_in_delta(-0.04492054940064216, worksheet.output_am337, 0.001); end
  def test_output_an337; assert_in_delta(-0.8409330195347342, worksheet.output_an337, 0.001); end
  def test_output_ak338; assert_in_delta(0.4063118085666629, worksheet.output_ak338, 0.001); end
  def test_output_ak339; assert_in_epsilon(3.360285610123943, worksheet.output_ak339, 0.001); end
  def test_output_ak337; assert_in_epsilon(3.766597418690606, worksheet.output_ak337, 0.001); end
  def test_output_ao337; assert_equal("", worksheet.output_ao337); end
  def test_output_c338; assert_equal("XII.a", worksheet.output_c338); end
  def test_output_e338; assert_equal("Domestic passenger transport", worksheet.output_e338); end
  def test_output_f338; assert_equal("Mt CO2e", worksheet.output_f338); end
  def test_output_g338; assert_equal("Energy breakdown available", worksheet.output_g338); end
  def test_output_am338; assert_in_delta(-0.08656572933311979, worksheet.output_am338, 0.001); end
  def test_output_an338; assert_in_delta(-0.9732642688211841, worksheet.output_an338, 0.001); end
  def test_output_ao338; assert_equal("", worksheet.output_ao338); end
  def test_output_c339; assert_equal("XII.b", worksheet.output_c339); end
  def test_output_e339; assert_equal("Domestic freight", worksheet.output_e339); end
  def test_output_f339; assert_equal("Mt CO2e", worksheet.output_f339); end
  def test_output_g339; assert_equal("Energy breakdown available", worksheet.output_g339); end
  def test_output_am339; assert_in_delta(-0.02288210103699595, worksheet.output_am339, 0.001); end
  def test_output_an339; assert_in_delta(-0.6038325841455234, worksheet.output_an339, 0.001); end
  def test_output_ao339; assert_equal("", worksheet.output_ao339); end
  def test_output_c340; assert_equal("XII.c", worksheet.output_c340); end
  def test_output_e340; assert_equal("International aviation", worksheet.output_e340); end
  def test_output_f340; assert_equal("Mt CO2e", worksheet.output_f340); end
  def test_output_g340; assert_equal("Energy breakdown available", worksheet.output_g340); end
  def test_output_ac340; assert_in_epsilon(4.4020670492089, worksheet.output_ac340, 0.001); end
  def test_output_ad340; assert_in_epsilon(4.126096739083403, worksheet.output_ad340, 0.001); end
  def test_output_ae340; assert_in_epsilon(3.867427304028505, worksheet.output_ae340, 0.001); end
  def test_output_af340; assert_in_epsilon(3.6249741336088572, worksheet.output_af340, 0.001); end
  def test_output_ag340; assert_in_epsilon(3.397720612781926, worksheet.output_ag340, 0.001); end
  def test_output_ah340; assert_in_epsilon(3.1847138591938062, worksheet.output_ah340, 0.001); end
  def test_output_ai340; assert_in_epsilon(2.9850607277085355, worksheet.output_ai340, 0.001); end
  def test_output_aj340; assert_in_epsilon(2.797924065417758, worksheet.output_aj340, 0.001); end
  def test_output_am340; assert_in_delta(-0.012865000000000015, worksheet.output_am340, 0.001); end
  def test_output_an340; assert_in_delta(-0.4042527812248683, worksheet.output_an340, 0.001); end
  def test_output_ak340; assert_in_epsilon(2.6225192014278527, worksheet.output_ak340, 0.001); end
  def test_output_ao340; assert_equal("", worksheet.output_ao340); end
  def test_output_c341; assert_equal("XII.d", worksheet.output_c341); end
  def test_output_e341; assert_equal("Domestic aviation [UNUSED - see XII.a]", worksheet.output_e341); end
  def test_output_f341; assert_equal("Mt CO2e", worksheet.output_f341); end
  def test_output_g341; assert_equal("Energy breakdown available", worksheet.output_g341); end
  def test_output_ac341; assert_in_delta(0, (worksheet.output_ac341||0), 0.001); end
  def test_output_ad341; assert_in_delta(0, (worksheet.output_ad341||0), 0.001); end
  def test_output_ae341; assert_in_delta(0, (worksheet.output_ae341||0), 0.001); end
  def test_output_af341; assert_in_delta(0, (worksheet.output_af341||0), 0.001); end
  def test_output_ag341; assert_in_delta(0, (worksheet.output_ag341||0), 0.001); end
  def test_output_ah341; assert_in_delta(0, (worksheet.output_ah341||0), 0.001); end
  def test_output_ai341; assert_in_delta(0, (worksheet.output_ai341||0), 0.001); end
  def test_output_aj341; assert_in_delta(0, (worksheet.output_aj341||0), 0.001); end
  def test_output_am341; assert_equal("", worksheet.output_am341); end
  def test_output_an341; assert_equal("", worksheet.output_an341); end
  def test_output_ak341; assert_in_delta(0, (worksheet.output_ak341||0), 0.001); end
  def test_output_ao341; assert_equal("", worksheet.output_ao341); end
  def test_output_c342; assert_equal("XII.e", worksheet.output_c342); end
  def test_output_e342; assert_equal("International shipping [UNUSED]", worksheet.output_e342); end
  def test_output_f342; assert_equal("Mt CO2e", worksheet.output_f342); end
  def test_output_g342; assert_equal("Energy breakdown available", worksheet.output_g342); end
  def test_output_ac342; assert_in_delta(0, (worksheet.output_ac342||0), 0.001); end
  def test_output_ad342; assert_in_delta(0, (worksheet.output_ad342||0), 0.001); end
  def test_output_ae342; assert_in_delta(0, (worksheet.output_ae342||0), 0.001); end
  def test_output_af342; assert_in_delta(0, (worksheet.output_af342||0), 0.001); end
  def test_output_ag342; assert_in_delta(0, (worksheet.output_ag342||0), 0.001); end
  def test_output_ah342; assert_in_delta(0, (worksheet.output_ah342||0), 0.001); end
  def test_output_ai342; assert_in_delta(0, (worksheet.output_ai342||0), 0.001); end
  def test_output_aj342; assert_in_delta(0, (worksheet.output_aj342||0), 0.001); end
  def test_output_am342; assert_equal("", worksheet.output_am342); end
  def test_output_an342; assert_equal("", worksheet.output_an342); end
  def test_output_ak342; assert_in_delta(0, (worksheet.output_ak342||0), 0.001); end
  def test_output_ao342; assert_equal("", worksheet.output_ao342); end
  def test_output_c343; assert_equal("XII.f", worksheet.output_c343); end
  def test_output_e343; assert_equal("National navigation [UNUSED - see XII.a]", worksheet.output_e343); end
  def test_output_f343; assert_equal("Mt CO2e", worksheet.output_f343); end
  def test_output_g343; assert_equal("Energy breakdown available", worksheet.output_g343); end
  def test_output_ac343; assert_in_delta(0, (worksheet.output_ac343||0), 0.001); end
  def test_output_ad343; assert_in_delta(0, (worksheet.output_ad343||0), 0.001); end
  def test_output_ae343; assert_in_delta(0, (worksheet.output_ae343||0), 0.001); end
  def test_output_af343; assert_in_delta(0, (worksheet.output_af343||0), 0.001); end
  def test_output_ag343; assert_in_delta(0, (worksheet.output_ag343||0), 0.001); end
  def test_output_ah343; assert_in_delta(0, (worksheet.output_ah343||0), 0.001); end
  def test_output_ai343; assert_in_delta(0, (worksheet.output_ai343||0), 0.001); end
  def test_output_aj343; assert_in_delta(0, (worksheet.output_aj343||0), 0.001); end
  def test_output_am343; assert_equal("", worksheet.output_am343); end
  def test_output_an343; assert_equal("", worksheet.output_an343); end
  def test_output_ak343; assert_in_delta(0, (worksheet.output_ak343||0), 0.001); end
  def test_output_ao343; assert_equal("", worksheet.output_ao343); end
  def test_output_c344; assert_equal("XIII", worksheet.output_c344); end
  def test_output_e344; assert_equal("Food consumption [UNUSED]", worksheet.output_e344); end
  def test_output_f344; assert_equal("Mt CO2e", worksheet.output_f344); end
  def test_output_g344; assert_equal("Ok", worksheet.output_g344); end
  def test_output_ab344; assert_in_delta(0, (worksheet.output_ab344||0), 0.001); end
  def test_output_am344; assert_equal("", worksheet.output_am344); end
  def test_output_an344; assert_equal("", worksheet.output_an344); end
  def test_output_ak344; assert_in_delta(0, (worksheet.output_ak344||0), 0.001); end
  def test_output_ao344; assert_equal("", worksheet.output_ao344); end
  def test_output_c345; assert_equal("XIV", worksheet.output_c345); end
  def test_output_e345; assert_equal("Geosequestration", worksheet.output_e345); end
  def test_output_f345; assert_equal("Mt CO2e", worksheet.output_f345); end
  def test_output_g345; assert_equal("Ok", worksheet.output_g345); end
  def test_output_ab345; assert_in_delta(0, (worksheet.output_ab345||0), 0.001); end
  def test_output_am345; assert_equal("", worksheet.output_am345); end
  def test_output_an345; assert_equal("", worksheet.output_an345); end
  def test_output_ak345; assert_in_delta(0, (worksheet.output_ak345||0), 0.001); end
  def test_output_ao345; assert_equal("", worksheet.output_ao345); end
  def test_output_c346; assert_equal("XV", worksheet.output_c346); end
  def test_output_e346; assert_equal("Fossil fuel production", worksheet.output_e346); end
  def test_output_f346; assert_equal("Mt CO2e", worksheet.output_f346); end
  def test_output_g346; assert_equal("Ok", worksheet.output_g346); end
  def test_output_ab346; assert_in_delta(0, (worksheet.output_ab346||0), 0.001); end
  def test_output_am346; assert_equal("", worksheet.output_am346); end
  def test_output_an346; assert_equal("", worksheet.output_an346); end
  def test_output_ak346; assert_in_delta(0, (worksheet.output_ak346||0), 0.001); end
  def test_output_ao346; assert_equal("", worksheet.output_ao346); end
  def test_output_c347; assert_equal("XVI", worksheet.output_c347); end
  def test_output_e347; assert_equal("Transfers", worksheet.output_e347); end
  def test_output_f347; assert_equal("Mt CO2e", worksheet.output_f347); end
  def test_output_g347; assert_equal("Ok", worksheet.output_g347); end
  def test_output_ab347; assert_in_delta(0, (worksheet.output_ab347||0), 0.001); end
  def test_output_am347; assert_equal("", worksheet.output_am347); end
  def test_output_an347; assert_equal("", worksheet.output_an347); end
  def test_output_ak347; assert_in_delta(0, (worksheet.output_ak347||0), 0.001); end
  def test_output_ao347; assert_equal("", worksheet.output_ao347); end
  def test_output_c348; assert_equal("XVII", worksheet.output_c348); end
  def test_output_e348; assert_equal("District heating", worksheet.output_e348); end
  def test_output_f348; assert_equal("Mt CO2e", worksheet.output_f348); end
  def test_output_g348; assert_equal("??? What is this ??", worksheet.output_g348); end
  def test_output_ab348; assert_in_delta(0, (worksheet.output_ab348||0), 0.001); end
  def test_output_am348; assert_equal("", worksheet.output_am348); end
  def test_output_an348; assert_equal("", worksheet.output_an348); end
  def test_output_ak348; assert_in_delta(0, (worksheet.output_ak348||0), 0.001); end
  def test_output_ao348; assert_equal("", worksheet.output_ao348); end
  def test_output_e349; assert_equal("Total gross of biomass excl. int'l aviation", worksheet.output_e349); end
  def test_output_f349; assert_equal("Mt CO2e", worksheet.output_f349); end
  def test_output_h349; assert_in_epsilon(98.51162965907099, worksheet.output_h349, 0.001); end
  def test_output_i349; assert_in_delta(0, (worksheet.output_i349||0), 0.001); end
  def test_output_j349; assert_in_delta(0, (worksheet.output_j349||0), 0.001); end
  def test_output_k349; assert_in_delta(0, (worksheet.output_k349||0), 0.001); end
  def test_output_l349; assert_in_delta(0, (worksheet.output_l349||0), 0.001); end
  def test_output_m349; assert_in_epsilon(75.14977883052916, worksheet.output_m349, 0.001); end
  def test_output_n349; assert_in_delta(0.141046429926288, worksheet.output_n349, 0.001); end
  def test_output_o349; assert_in_delta(0, (worksheet.output_o349||0), 0.001); end
  def test_output_p349; assert_in_delta(0, (worksheet.output_p349||0), 0.001); end
  def test_output_q349; assert_in_delta(0, (worksheet.output_q349||0), 0.001); end
  def test_output_r349; assert_in_epsilon(71.25892882008753, worksheet.output_r349, 0.001); end
  def test_output_s349; assert_in_delta(0, (worksheet.output_s349||0), 0.001); end
  def test_output_t349; assert_in_delta(0, (worksheet.output_t349||0), 0.001); end
  def test_output_u349; assert_in_delta(0, (worksheet.output_u349||0), 0.001); end
  def test_output_v349; assert_in_delta(0, (worksheet.output_v349||0), 0.001); end
  def test_output_w349; assert_in_epsilon(65.47430104754773, worksheet.output_w349, 0.001); end
  def test_output_x349; assert_in_delta(0, (worksheet.output_x349||0), 0.001); end
  def test_output_y349; assert_in_delta(0, (worksheet.output_y349||0), 0.001); end
  def test_output_z349; assert_in_delta(0, (worksheet.output_z349||0), 0.001); end
  def test_output_aa349; assert_in_delta(0, (worksheet.output_aa349||0), 0.001); end
  def test_output_ab349; assert_in_epsilon(141.97362652499643, worksheet.output_ab349, 0.001); end
  def test_output_ac349; assert_in_epsilon(137.44361866125234, worksheet.output_ac349, 0.001); end
  def test_output_ad312; assert_in_epsilon(13.620653524585778, worksheet.output_ad312, 0.001); end
  def test_output_ad313; assert_in_delta(0, (worksheet.output_ad313||0), 0.001); end
  def test_output_ad314; assert_in_delta(0, (worksheet.output_ad314||0), 0.001); end
  def test_output_ad315; assert_in_delta(0, (worksheet.output_ad315||0), 0.001); end
  def test_output_ad316; assert_in_epsilon(12.644488597003509, worksheet.output_ad316, 0.001); end
  def test_output_ad320; assert_in_delta(0.2038267907496103, worksheet.output_ad320, 0.001); end
  def test_output_ad321; assert_in_delta(0, (worksheet.output_ad321||0), 0.001); end
  def test_output_ad322; assert_in_epsilon(21.563433278263705, worksheet.output_ad322, 0.001); end
  def test_output_ad323; assert_in_delta(0.05403942272194062, worksheet.output_ad323, 0.001); end
  def test_output_ad324; assert_in_epsilon(42.85276926628613, worksheet.output_ad324, 0.001); end
  def test_output_ad344; assert_in_delta(0, (worksheet.output_ad344||0), 0.001); end
  def test_output_ad345; assert_in_delta(0, (worksheet.output_ad345||0), 0.001); end
  def test_output_ad346; assert_in_delta(0, (worksheet.output_ad346||0), 0.001); end
  def test_output_ad347; assert_in_delta(0, (worksheet.output_ad347||0), 0.001); end
  def test_output_ad348; assert_in_delta(0, (worksheet.output_ad348||0), 0.001); end
  def test_output_ad338; assert_in_epsilon(14.124367193095095, worksheet.output_ad338, 0.001); end
  def test_output_ad339; assert_in_epsilon(7.999404727805036, worksheet.output_ad339, 0.001); end
  def test_output_ad337; assert_in_epsilon(22.123771920900133, worksheet.output_ad337, 0.001); end
  def test_output_ad349; assert_in_epsilon(113.06298280051081, worksheet.output_ad349, 0.001); end
  def test_output_ae312; assert_in_epsilon(15.119249972146651, worksheet.output_ae312, 0.001); end
  def test_output_ae313; assert_in_delta(0, (worksheet.output_ae313||0), 0.001); end
  def test_output_ae314; assert_in_delta(0, (worksheet.output_ae314||0), 0.001); end
  def test_output_ae315; assert_in_delta(0, (worksheet.output_ae315||0), 0.001); end
  def test_output_ae316; assert_in_epsilon(11.724205281645819, worksheet.output_ae316, 0.001); end
  def test_output_ae320; assert_in_delta(0.8713760149012284, worksheet.output_ae320, 0.001); end
  def test_output_ae321; assert_in_delta(0.04757947015854602, worksheet.output_ae321, 0.001); end
  def test_output_ae322; assert_in_epsilon(17.242695968407578, worksheet.output_ae322, 0.001); end
  def test_output_ae323; assert_in_delta(0.05258393639346289, worksheet.output_ae323, 0.001); end
  def test_output_ae324; assert_in_epsilon(34.04249609617312, worksheet.output_ae324, 0.001); end
  def test_output_ae344; assert_in_delta(0, (worksheet.output_ae344||0), 0.001); end
  def test_output_ae345; assert_in_delta(0, (worksheet.output_ae345||0), 0.001); end
  def test_output_ae346; assert_in_delta(0, (worksheet.output_ae346||0), 0.001); end
  def test_output_ae347; assert_in_delta(0, (worksheet.output_ae347||0), 0.001); end
  def test_output_ae348; assert_in_delta(0, (worksheet.output_ae348||0), 0.001); end
  def test_output_ae338; assert_in_epsilon(11.199347192775944, worksheet.output_ae338, 0.001); end
  def test_output_ae339; assert_in_epsilon(7.198428651950995, worksheet.output_ae339, 0.001); end
  def test_output_ae337; assert_in_epsilon(18.39777584472694, worksheet.output_ae337, 0.001); end
  def test_output_ae349; assert_in_epsilon(97.49796258455333, worksheet.output_ae349, 0.001); end
  def test_output_af312; assert_in_epsilon(9.39163542033357, worksheet.output_af312, 0.001); end
  def test_output_af313; assert_in_delta(0, (worksheet.output_af313||0), 0.001); end
  def test_output_af314; assert_in_delta(0, (worksheet.output_af314||0), 0.001); end
  def test_output_af315; assert_in_delta(0, (worksheet.output_af315||0), 0.001); end
  def test_output_af316; assert_in_epsilon(10.866970124380742, worksheet.output_af316, 0.001); end
  def test_output_af320; assert_in_epsilon(1.84664204218553, worksheet.output_af320, 0.001); end
  def test_output_af321; assert_in_delta(0.08326869996647096, worksheet.output_af321, 0.001); end
  def test_output_af322; assert_in_epsilon(12.905362168783515, worksheet.output_af322, 0.001); end
  def test_output_af323; assert_in_delta(0.04655725641475219, worksheet.output_af323, 0.001); end
  def test_output_af324; assert_in_epsilon(27.859405479755562, worksheet.output_af324, 0.001); end
  def test_output_af344; assert_in_delta(0, (worksheet.output_af344||0), 0.001); end
  def test_output_af345; assert_in_delta(0, (worksheet.output_af345||0), 0.001); end
  def test_output_af346; assert_in_delta(0, (worksheet.output_af346||0), 0.001); end
  def test_output_af347; assert_in_delta(0, (worksheet.output_af347||0), 0.001); end
  def test_output_af348; assert_in_delta(0, (worksheet.output_af348||0), 0.001); end
  def test_output_af338; assert_in_epsilon(8.372992870910661, worksheet.output_af338, 0.001); end
  def test_output_af339; assert_in_epsilon(6.443973683899915, worksheet.output_af339, 0.001); end
  def test_output_af337; assert_in_epsilon(14.816966554810577, worksheet.output_af337, 0.001); end
  def test_output_af349; assert_in_epsilon(77.81680774663072, worksheet.output_af349, 0.001); end
  def test_output_ag312; assert_in_epsilon(11.998829271977456, worksheet.output_ag312, 0.001); end
  def test_output_ag313; assert_in_delta(0, (worksheet.output_ag313||0), 0.001); end
  def test_output_ag314; assert_in_delta(0, (worksheet.output_ag314||0), 0.001); end
  def test_output_ag315; assert_in_delta(0, (worksheet.output_ag315||0), 0.001); end
  def test_output_ag316; assert_in_epsilon(10.114573658290949, worksheet.output_ag316, 0.001); end
  def test_output_ag320; assert_in_epsilon(3.3341817189670735, worksheet.output_ag320, 0.001); end
  def test_output_ag321; assert_in_delta(0.1047358345458414, worksheet.output_ag321, 0.001); end
  def test_output_ag322; assert_in_epsilon(9.390582664955653, worksheet.output_ag322, 0.001); end
  def test_output_ag323; assert_in_delta(0.039548217298400634, worksheet.output_ag323, 0.001); end
  def test_output_ag324; assert_in_epsilon(20.01612670441768, worksheet.output_ag324, 0.001); end
  def test_output_ag344; assert_in_delta(0, (worksheet.output_ag344||0), 0.001); end
  def test_output_ag345; assert_in_delta(0, (worksheet.output_ag345||0), 0.001); end
  def test_output_ag346; assert_in_delta(0, (worksheet.output_ag346||0), 0.001); end
  def test_output_ag347; assert_in_delta(0, (worksheet.output_ag347||0), 0.001); end
  def test_output_ag348; assert_in_delta(0, (worksheet.output_ag348||0), 0.001); end
  def test_output_ag338; assert_in_epsilon(5.673122213549191, worksheet.output_ag338, 0.001); end
  def test_output_ag339; assert_in_epsilon(5.735900585410846, worksheet.output_ag339, 0.001); end
  def test_output_ag337; assert_in_epsilon(11.409022798960038, worksheet.output_ag337, 0.001); end
  def test_output_ag349; assert_in_epsilon(66.4076008694131, worksheet.output_ag349, 0.001); end
  def test_output_ah312; assert_in_epsilon(13.76253513916592, worksheet.output_ah312, 0.001); end
  def test_output_ah313; assert_in_delta(0, (worksheet.output_ah313||0), 0.001); end
  def test_output_ah314; assert_in_delta(0, (worksheet.output_ah314||0), 0.001); end
  def test_output_ah315; assert_in_delta(0, (worksheet.output_ah315||0), 0.001); end
  def test_output_ah316; assert_in_epsilon(9.68123427752107, worksheet.output_ah316, 0.001); end
  def test_output_ah320; assert_in_epsilon(5.053448120144595, worksheet.output_ah320, 0.001); end
  def test_output_ah321; assert_in_delta(0.10836389225960603, worksheet.output_ah321, 0.001); end
  def test_output_ah322; assert_in_epsilon(6.65099402952166, worksheet.output_ah322, 0.001); end
  def test_output_ah323; assert_in_delta(0.031062664356824636, worksheet.output_ah323, 0.001); end
  def test_output_ah324; assert_in_epsilon(14.689280831700664, worksheet.output_ah324, 0.001); end
  def test_output_ah344; assert_in_delta(0, (worksheet.output_ah344||0), 0.001); end
  def test_output_ah345; assert_in_delta(0, (worksheet.output_ah345||0), 0.001); end
  def test_output_ah346; assert_in_delta(0, (worksheet.output_ah346||0), 0.001); end
  def test_output_ah347; assert_in_delta(0, (worksheet.output_ah347||0), 0.001); end
  def test_output_ah348; assert_in_delta(0, (worksheet.output_ah348||0), 0.001); end
  def test_output_ah338; assert_in_epsilon(3.539135040916566, worksheet.output_ah338, 0.001); end
  def test_output_ah339; assert_in_epsilon(5.073945646467642, worksheet.output_ah339, 0.001); end
  def test_output_ah337; assert_in_epsilon(8.613080687384208, worksheet.output_ah337, 0.001); end
  def test_output_ah349; assert_in_epsilon(58.58999964205455, worksheet.output_ah349, 0.001); end
  def test_output_ai312; assert_in_epsilon(15.519175687787747, worksheet.output_ai312, 0.001); end
  def test_output_ai313; assert_in_delta(0, (worksheet.output_ai313||0), 0.001); end
  def test_output_ai314; assert_in_delta(0, (worksheet.output_ai314||0), 0.001); end
  def test_output_ai315; assert_in_delta(0, (worksheet.output_ai315||0), 0.001); end
  def test_output_ai316; assert_in_epsilon(9.284082437425935, worksheet.output_ai316, 0.001); end
  def test_output_ai320; assert_in_epsilon(7.171991530332746, worksheet.output_ai320, 0.001); end
  def test_output_ai321; assert_in_delta(0.09445300310444715, worksheet.output_ai321, 0.001); end
  def test_output_ai322; assert_in_epsilon(4.414985081138259, worksheet.output_ai322, 0.001); end
  def test_output_ai323; assert_in_delta(0.021690804699909763, worksheet.output_ai323, 0.001); end
  def test_output_ai324; assert_in_epsilon(11.19368167949465, worksheet.output_ai324, 0.001); end
  def test_output_ai344; assert_in_delta(0, (worksheet.output_ai344||0), 0.001); end
  def test_output_ai345; assert_in_delta(0, (worksheet.output_ai345||0), 0.001); end
  def test_output_ai346; assert_in_delta(0, (worksheet.output_ai346||0), 0.001); end
  def test_output_ai347; assert_in_delta(0, (worksheet.output_ai347||0), 0.001); end
  def test_output_ai348; assert_in_delta(0, (worksheet.output_ai348||0), 0.001); end
  def test_output_ai338; assert_in_epsilon(2.2607724867362595, worksheet.output_ai338, 0.001); end
  def test_output_ai339; assert_in_epsilon(4.457720685278973, worksheet.output_ai339, 0.001); end
  def test_output_ai337; assert_in_epsilon(6.718493172015233, worksheet.output_ai337, 0.001); end
  def test_output_ai349; assert_in_epsilon(54.41855339599893, worksheet.output_ai349, 0.001); end
  def test_output_aj312; assert_in_epsilon(17.26521825855964, worksheet.output_aj312, 0.001); end
  def test_output_aj313; assert_in_delta(0, (worksheet.output_aj313||0), 0.001); end
  def test_output_aj314; assert_in_delta(0, (worksheet.output_aj314||0), 0.001); end
  def test_output_aj315; assert_in_delta(0, (worksheet.output_aj315||0), 0.001); end
  def test_output_aj316; assert_in_epsilon(8.922238819803322, worksheet.output_aj316, 0.001); end
  def test_output_aj320; assert_in_epsilon(9.012230886884831, worksheet.output_aj320, 0.001); end
  def test_output_aj321; assert_in_delta(0.059123210466289294, worksheet.output_aj321, 0.001); end
  def test_output_aj322; assert_in_epsilon(2.634921636473775, worksheet.output_aj322, 0.001); end
  def test_output_aj323; assert_in_delta(0.01128844322183089, worksheet.output_aj323, 0.001); end
  def test_output_aj324; assert_in_epsilon(8.44894173764758, worksheet.output_aj324, 0.001); end
  def test_output_aj344; assert_in_delta(0, (worksheet.output_aj344||0), 0.001); end
  def test_output_aj345; assert_in_delta(0, (worksheet.output_aj345||0), 0.001); end
  def test_output_aj346; assert_in_delta(0, (worksheet.output_aj346||0), 0.001); end
  def test_output_aj347; assert_in_delta(0, (worksheet.output_aj347||0), 0.001); end
  def test_output_aj348; assert_in_delta(0, (worksheet.output_aj348||0), 0.001); end
  def test_output_aj338; assert_in_epsilon(1.2198739837706964, worksheet.output_aj338, 0.001); end
  def test_output_aj339; assert_in_epsilon(3.8867130482783105, worksheet.output_aj339, 0.001); end
  def test_output_aj337; assert_in_epsilon(5.106587032049007, worksheet.output_aj337, 0.001); end
  def test_output_aj349; assert_in_epsilon(51.46055002510627, worksheet.output_aj349, 0.001); end
  def test_output_am349; assert_in_delta(-0.025331314751749656, worksheet.output_am349, 0.001); end
  def test_output_an349; assert_in_delta(-0.6416721857798525, worksheet.output_an349, 0.001); end
  def test_output_ak316; assert_in_epsilon(8.593096825788756, worksheet.output_ak316, 0.001); end
  def test_output_ak349; assert_in_epsilon(49.24987145339402, worksheet.output_ak349, 0.001); end
  def test_output_ao349; assert_in_delta(-0.5000603317208541, worksheet.output_ao349, 0.001); end
  def test_output_b350; assert_equal("REF", worksheet.output_b350); end
  def test_output_e350; assert_equal("Reference scenario", worksheet.output_e350); end
  def test_output_f350; assert_equal("Mt CO2e", worksheet.output_f350); end
  def test_output_g350; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g350); end
  def test_output_ac350; assert_in_epsilon(133.45335556636047, worksheet.output_ac350, 0.001); end
  def test_output_ad350; assert_in_epsilon(126.81846243997214, worksheet.output_ad350, 0.001); end
  def test_output_ae350; assert_in_epsilon(130.33089453125237, worksheet.output_ae350, 0.001); end
  def test_output_af350; assert_in_epsilon(138.15505486826828, worksheet.output_af350, 0.001); end
  def test_output_ag350; assert_in_epsilon(138.3365846370469, worksheet.output_ag350, 0.001); end
  def test_output_ah350; assert_in_epsilon(138.32641356318643, worksheet.output_ah350, 0.001); end
  def test_output_ai350; assert_in_epsilon(139.90388082416078, worksheet.output_ai350, 0.001); end
  def test_output_aj350; assert_in_epsilon(141.27674183426484, worksheet.output_aj350, 0.001); end
  def test_output_ak350; assert_in_epsilon(142.77120830837623, worksheet.output_ak350, 0.001); end
  def test_output_am350; assert_in_delta(0.0016887089358665897, worksheet.output_am350, 0.001); end
  def test_output_an350; assert_in_delta(0.06982104498213526, worksheet.output_an350, 0.001); end
  def test_output_ao350; assert_equal("", worksheet.output_ao350); end
  def test_output_am351; assert_equal("", worksheet.output_am351); end
  def test_output_an351; assert_equal("", worksheet.output_an351); end
  def test_output_ao351; assert_equal("", worksheet.output_ao351); end
  def test_output_c352; assert_equal("Biomass emissions allocation across sectors", worksheet.output_c352); end
  def test_output_am352; assert_equal("", worksheet.output_am352); end
  def test_output_an352; assert_equal("", worksheet.output_an352); end
  def test_output_ao352; assert_equal("", worksheet.output_ao352); end
  def test_output_c353; assert_equal("I", worksheet.output_c353); end
  def test_output_e353; assert_equal("Hydrocarbon fuel power generation", worksheet.output_e353); end
  def test_output_f353; assert_equal("Mt CO2e", worksheet.output_f353); end
  def test_output_g353; assert_equal("NIR", worksheet.output_g353); end
  def test_output_ab353; assert_in_epsilon(4.113, worksheet.output_ab353, 0.001); end
  def test_output_ac353; assert_in_epsilon(4.002297818189104, worksheet.output_ac353, 0.001); end
  def test_output_ad353; assert_in_epsilon(5.3366257531894, worksheet.output_ad353, 0.001); end
  def test_output_ae353; assert_in_epsilon(6.827102952031498, worksheet.output_ae353, 0.001); end
  def test_output_af353; assert_in_epsilon(9.150801108224679, worksheet.output_af353, 0.001); end
  def test_output_ag353; assert_in_epsilon(11.553918087431875, worksheet.output_ag353, 0.001); end
  def test_output_ah353; assert_in_epsilon(13.118117017437559, worksheet.output_ah353, 0.001); end
  def test_output_ai353; assert_in_epsilon(14.675288908080338, worksheet.output_ai353, 0.001); end
  def test_output_aj353; assert_in_epsilon(16.221920239678767, worksheet.output_aj353, 0.001); end
  def test_output_ak353; assert_in_epsilon(17.76855157127719, worksheet.output_ak353, 0.001); end
  def test_output_am353; assert_in_delta(0.03796704632199255, worksheet.output_am353, 0.001); end
  def test_output_an353; assert_in_epsilon(3.4395875515622727, worksheet.output_an353, 0.001); end
  def test_output_ao353; assert_equal("", worksheet.output_ao353); end
  def test_output_c354; assert_equal("IX", worksheet.output_c354); end
  def test_output_e354; assert_equal("Heating", worksheet.output_e354); end
  def test_output_f354; assert_equal("Mt CO2e", worksheet.output_f354); end
  def test_output_g354; assert_equal("NIR", worksheet.output_g354); end
  def test_output_ab354; assert_in_epsilon(1.157, worksheet.output_ab354, 0.001); end
  def test_output_am354; assert_equal("", worksheet.output_am354); end
  def test_output_an354; assert_in_epsilon(-2.4502403207009267, worksheet.output_an354, 0.001); end
  def test_output_ak451; assert_in_epsilon(25.1712, worksheet.output_ak451, 0.001); end
  def test_output_ak455; assert_in_epsilon(39.286129947422765, worksheet.output_ak455, 0.001); end
  def test_output_ak459; assert_in_epsilon(64.45732994742276, worksheet.output_ak459, 0.001); end
  def test_output_ak463; assert_in_epsilon(19.72493183111309, worksheet.output_ak463, 0.001); end
  def test_output_ak453; assert_in_epsilon(15.801499999999999, worksheet.output_ak453, 0.001); end
  def test_output_ak457; assert_in_delta(0, (worksheet.output_ak457||0), 0.001); end
  def test_output_ak461; assert_in_epsilon(15.801499999999999, worksheet.output_ak461, 0.001); end
  def test_output_ak465; assert_in_epsilon(3.176001424050467, worksheet.output_ak465, 0.001); end
  def test_control_h42; assert_in_epsilon(30, worksheet.control_h42, 0.001); end
  def test_control_h43; assert_in_epsilon(40, worksheet.control_h43, 0.001); end
  def test_control_h36; assert_in_epsilon(30, worksheet.control_h36, 0.001); end
  def test_control_h38; assert_in_epsilon(30, worksheet.control_h38, 0.001); end
  def test_control_h48; assert_in_epsilon(40, worksheet.control_h48, 0.001); end
  def test_control_h50; assert_in_epsilon(30, worksheet.control_h50, 0.001); end
  def test_control_h40; assert_in_epsilon(30, worksheet.control_h40, 0.001); end
  def test_control_h44; assert_in_epsilon(30, worksheet.control_h44, 0.001); end
  def test_control_h52; assert_in_epsilon(30, worksheet.control_h52, 0.001); end
  def test_output_ak354; assert_in_epsilon(-3.692522668760251, worksheet.output_ak354, 0.001); end
  def test_output_ao354; assert_equal("", worksheet.output_ao354); end
  def test_output_c355; assert_equal("XI", worksheet.output_c355); end
  def test_output_e355; assert_equal("Industry", worksheet.output_e355); end
  def test_output_f355; assert_equal("Mt CO2e", worksheet.output_f355); end
  def test_output_g355; assert_equal("NIR", worksheet.output_g355); end
  def test_output_h355; assert_in_delta(0.6169922999999999, worksheet.output_h355, 0.001); end
  def test_output_m355; assert_in_delta(0.5321606000000001, worksheet.output_m355, 0.001); end
  def test_output_n355; assert_in_delta(0.141046429926288, worksheet.output_n355, 0.001); end
  def test_output_r355; assert_in_delta(0.85466233, worksheet.output_r355, 0.001); end
  def test_output_w355; assert_in_epsilon(1.7981648780000001, worksheet.output_w355, 0.001); end
  def test_output_ab355; assert_in_epsilon(3.201552, worksheet.output_ab355, 0.001); end
  def test_output_ac355; assert_in_epsilon(2.704720873797583, worksheet.output_ac355, 0.001); end
  def test_output_ad355; assert_in_epsilon(3.789789676250595, worksheet.output_ad355, 0.001); end
  def test_output_ae355; assert_in_epsilon(4.764166766560307, worksheet.output_ae355, 0.001); end
  def test_output_af355; assert_in_epsilon(5.505033135915741, worksheet.output_af355, 0.001); end
  def test_output_ag355; assert_in_epsilon(6.206874926649814, worksheet.output_ag355, 0.001); end
  def test_output_ah355; assert_in_epsilon(6.988848278761313, worksheet.output_ah355, 0.001); end
  def test_output_ai355; assert_in_epsilon(7.661895977708681, worksheet.output_ai355, 0.001); end
  def test_output_aj355; assert_in_epsilon(8.271197224539328, worksheet.output_aj355, 0.001); end
  def test_output_ak355; assert_in_epsilon(8.82490435264662, worksheet.output_ak355, 0.001); end
  def test_output_am355; assert_in_delta(0.03000584415629115, worksheet.output_am355, 0.001); end
  def test_output_an355; assert_in_epsilon(2.2627782179445184, worksheet.output_an355, 0.001); end
  def test_output_ao355; assert_in_epsilon(13.303102895524985, worksheet.output_ao355, 0.001); end
  def test_output_c356; assert_equal("XII", worksheet.output_c356); end
  def test_output_e356; assert_equal("Transport", worksheet.output_e356); end
  def test_output_f356; assert_equal("Mt CO2e", worksheet.output_f356); end
  def test_output_g356; assert_equal("NIR", worksheet.output_g356); end
  def test_output_ab356; assert_in_epsilon(1.107, worksheet.output_ab356, 0.001); end
  def test_output_ac356; assert_in_epsilon(1.1450529425392655, worksheet.output_ac356, 0.001); end
  def test_output_ad464; assert_in_epsilon(1.160330888925345, worksheet.output_ad464, 0.001); end
  def test_output_ad356; assert_in_epsilon(1.160330888925345, worksheet.output_ad356, 0.001); end
  def test_output_ae464; assert_in_epsilon(1.9577976864530462, worksheet.output_ae464, 0.001); end
  def test_output_ae356; assert_in_epsilon(1.9577976864530462, worksheet.output_ae356, 0.001); end
  def test_output_af464; assert_in_epsilon(2.2839416681312987, worksheet.output_af464, 0.001); end
  def test_output_af356; assert_in_epsilon(2.2839416681312987, worksheet.output_af356, 0.001); end
  def test_output_ag464; assert_in_epsilon(2.6091518534260216, worksheet.output_ag464, 0.001); end
  def test_output_ag356; assert_in_epsilon(2.6091518534260216, worksheet.output_ag356, 0.001); end
  def test_output_ah464; assert_in_epsilon(2.934362038720745, worksheet.output_ah464, 0.001); end
  def test_output_ah356; assert_in_epsilon(2.934362038720745, worksheet.output_ah356, 0.001); end
  def test_output_ai464; assert_in_epsilon(3.2526206287158597, worksheet.output_ai464, 0.001); end
  def test_output_ai356; assert_in_epsilon(3.2526206287158597, worksheet.output_ai356, 0.001); end
  def test_output_aj464; assert_in_epsilon(3.5708792187109744, worksheet.output_aj464, 0.001); end
  def test_output_aj356; assert_in_epsilon(3.5708792187109744, worksheet.output_aj356, 0.001); end
  def test_output_ak452; assert_in_delta(0.27, worksheet.output_ak452, 0.001); end
  def test_output_ak456; assert_in_epsilon(14.723521455311847, worksheet.output_ak456, 0.001); end
  def test_output_ak460; assert_in_epsilon(14.993521455311846, worksheet.output_ak460, 0.001); end
  def test_output_ak464; assert_in_epsilon(3.88913780870609, worksheet.output_ak464, 0.001); end
  def test_output_ak356; assert_in_epsilon(3.88913780870609, worksheet.output_ak356, 0.001); end
  def test_output_am356; assert_in_delta(0.0310404266815123, worksheet.output_am356, 0.001); end
  def test_output_an356; assert_in_epsilon(2.3964698611066413, worksheet.output_an356, 0.001); end
  def test_output_ao356; assert_equal("", worksheet.output_ao356); end
  def test_output_c357; assert_in_epsilon(4, worksheet.output_c357, 0.001); end
  def test_output_e357; assert_equal("Agriculture", worksheet.output_e357); end
  def test_output_f357; assert_equal("Mt CO2e", worksheet.output_f357); end
  def test_output_g357; assert_equal("NIR", worksheet.output_g357); end
  def test_output_ab357; assert_in_delta(0.394, worksheet.output_ab357, 0.001); end
  def test_output_am357; assert_equal("", worksheet.output_am357); end
  def test_output_an357; assert_equal("", worksheet.output_an357); end
  def test_output_ao357; assert_equal("", worksheet.output_ao357); end
  def test_output_am358; assert_equal("", worksheet.output_am358); end
  def test_output_an358; assert_equal("", worksheet.output_an358); end
  def test_output_ao358; assert_equal("", worksheet.output_ao358); end
  def test_output_c359; assert_equal("V", worksheet.output_c359); end
  def test_output_e359; assert_equal("Bioenergy", worksheet.output_e359); end
  def test_output_f359; assert_equal("Mt CO2e", worksheet.output_f359); end
  def test_output_g359; assert_equal("Total of the above maximum allocation", worksheet.output_g359); end
  def test_output_ab359; assert_in_epsilon(9.972552, worksheet.output_ab359, 0.001); end
  def test_output_ac359; assert_in_epsilon(-10.398216998196155, worksheet.output_ac359, 0.001); end
  def test_output_ad359; assert_in_epsilon(-12.623061116910506, worksheet.output_ad359, 0.001); end
  def test_output_ae359; assert_in_epsilon(-15.621912446150645, worksheet.output_ae359, 0.001); end
  def test_output_af359; assert_in_epsilon(-18.85877206201608, worksheet.output_af359, 0.001); end
  def test_output_ag359; assert_in_epsilon(-20.68647004399704, worksheet.output_ag359, 0.001); end
  def test_output_ah359; assert_in_epsilon(-22.28364135775103, worksheet.output_ah359, 0.001); end
  def test_output_ai359; assert_in_epsilon(-23.8103980275483, worksheet.output_ai359, 0.001); end
  def test_output_aj359; assert_in_epsilon(-25.30380738863579, worksheet.output_aj359, 0.001); end
  def test_output_am359; assert_in_delta(0.023942041256785895, worksheet.output_am359, 0.001); end
  def test_output_an359; assert_in_epsilon(1.5764100776620733, worksheet.output_an359, 0.001); end
  def test_output_ak359; assert_in_epsilon(-26.790071063869647, worksheet.output_ak359, 0.001); end
  def test_output_ao359; assert_equal("", worksheet.output_ao359); end
  def test_output_e360; assert_equal("Bioenergy actually used", worksheet.output_e360); end
  def test_output_g360; assert_equal("Total actually used w/o going below 0 in sectors not using CCS (industry is the only exception)", worksheet.output_g360); end
  def test_output_aq360; assert_equal("ratio energy buildings", worksheet.output_aq360); end
  def test_output_as360; assert_in_epsilon(1.2829349638688161, worksheet.output_as360, 0.001); end
  def test_output_am361; assert_equal("", worksheet.output_am361); end
  def test_output_an361; assert_equal("", worksheet.output_an361); end
  def test_output_ao361; assert_equal("", worksheet.output_ao361); end
  def test_output_aq361; assert_equal("ratio emissions buildings", worksheet.output_aq361); end
  def test_output_as361; assert_in_epsilon(1.4114849583350761, worksheet.output_as361, 0.001); end
  def test_output_c362; assert_equal("Total emissions allocation across sectors - NET OF BIOMASS IMPACT ABOVE (Biomass does not emit)", worksheet.output_c362); end
  def test_output_am362; assert_equal("", worksheet.output_am362); end
  def test_output_an362; assert_equal("", worksheet.output_an362); end
  def test_output_ao362; assert_equal("", worksheet.output_ao362); end
  def test_output_aw362; assert_in_epsilon(2010, worksheet.output_aw362, 0.001); end
  def test_output_c363; assert_equal("I", worksheet.output_c363); end
  def test_output_e363; assert_equal("Hydrocarbon fuel power generation", worksheet.output_e363); end
  def test_output_f363; assert_equal("Mt CO2e", worksheet.output_f363); end
  def test_output_g363; assert_equal("Energy - Refining (incl emissions from biomass)", worksheet.output_g363); end
  def test_output_h363; assert_in_epsilon(25.6221067252624, worksheet.output_h363, 0.001); end
  def test_output_i363; assert_in_delta(0, (worksheet.output_i363||0), 0.001); end
  def test_output_j363; assert_in_delta(0, (worksheet.output_j363||0), 0.001); end
  def test_output_k363; assert_in_delta(0, (worksheet.output_k363||0), 0.001); end
  def test_output_l363; assert_in_delta(0, (worksheet.output_l363||0), 0.001); end
  def test_output_m363; assert_in_epsilon(25.2708918337287, worksheet.output_m363, 0.001); end
  def test_output_n363; assert_in_delta(0, (worksheet.output_n363||0), 0.001); end
  def test_output_o363; assert_in_delta(0, (worksheet.output_o363||0), 0.001); end
  def test_output_p363; assert_in_delta(0, (worksheet.output_p363||0), 0.001); end
  def test_output_q363; assert_in_delta(0, (worksheet.output_q363||0), 0.001); end
  def test_output_r363; assert_in_epsilon(23.8022579669393, worksheet.output_r363, 0.001); end
  def test_output_s363; assert_in_delta(0, (worksheet.output_s363||0), 0.001); end
  def test_output_t363; assert_in_delta(0, (worksheet.output_t363||0), 0.001); end
  def test_output_u363; assert_in_delta(0, (worksheet.output_u363||0), 0.001); end
  def test_output_v363; assert_in_delta(0, (worksheet.output_v363||0), 0.001); end
  def test_output_w363; assert_in_epsilon(25.0471976894731, worksheet.output_w363, 0.001); end
  def test_output_x363; assert_in_delta(0, (worksheet.output_x363||0), 0.001); end
  def test_output_y363; assert_in_delta(0, (worksheet.output_y363||0), 0.001); end
  def test_output_z363; assert_in_delta(0, (worksheet.output_z363||0), 0.001); end
  def test_output_aa363; assert_in_delta(0, (worksheet.output_aa363||0), 0.001); end
  def test_output_ab363; assert_in_epsilon(21.6536478159777, worksheet.output_ab363, 0.001); end
  def test_output_ak363; assert_in_epsilon(1.242709258054333, worksheet.output_ak363, 0.001); end
  def test_output_am363; assert_in_delta(-0.06706040379064593, worksheet.output_am363, 0.001); end
  def test_output_an363; assert_in_delta(-0.942609703980806, worksheet.output_an363, 0.001); end
  def test_output_ao363; assert_in_delta(-0.951498552738871, worksheet.output_ao363, 0.001); end
  def test_output_aq363; assert_equal("Emissions by sector", worksheet.output_aq363); end
  def test_output_av363; assert_in_epsilon(1990, worksheet.output_av363, 0.001); end
  def test_output_aw363; assert_equal("Share BE", worksheet.output_aw363); end
  def test_output_ax363; assert_equal("Share RW ", worksheet.output_ax363); end
  def test_output_ay363; assert_in_epsilon(2010, worksheet.output_ay363, 0.001); end
  def test_output_az363; assert_equal("Share BE", worksheet.output_az363); end
  def test_output_ba363; assert_equal("Share RW 2010", worksheet.output_ba363); end
  def test_output_bb363; assert_in_epsilon(2050, worksheet.output_bb363, 0.001); end
  def test_output_c364; assert_equal("II", worksheet.output_c364); end
  def test_output_e364; assert_equal("Nuclear power generation", worksheet.output_e364); end
  def test_output_f364; assert_equal("Mt CO2e", worksheet.output_f364); end
  def test_output_g364; assert_equal("OK", worksheet.output_g364); end
  def test_output_h364; assert_in_delta(0, (worksheet.output_h364||0), 0.001); end
  def test_output_m364; assert_in_delta(0, (worksheet.output_m364||0), 0.001); end
  def test_output_r364; assert_in_delta(0, (worksheet.output_r364||0), 0.001); end
  def test_output_w364; assert_in_delta(0, (worksheet.output_w364||0), 0.001); end
  def test_output_ab364; assert_in_delta(0, (worksheet.output_ab364||0), 0.001); end
  def test_output_ac364; assert_in_delta(0, (worksheet.output_ac364||0), 0.001); end
  def test_output_ad364; assert_in_delta(0, (worksheet.output_ad364||0), 0.001); end
  def test_output_ae364; assert_in_delta(0, (worksheet.output_ae364||0), 0.001); end
  def test_output_af364; assert_in_delta(0, (worksheet.output_af364||0), 0.001); end
  def test_output_ag364; assert_in_delta(0, (worksheet.output_ag364||0), 0.001); end
  def test_output_ah364; assert_in_delta(0, (worksheet.output_ah364||0), 0.001); end
  def test_output_ai364; assert_in_delta(0, (worksheet.output_ai364||0), 0.001); end
  def test_output_aj364; assert_in_delta(0, (worksheet.output_aj364||0), 0.001); end
  def test_output_ak364; assert_in_delta(0, (worksheet.output_ak364||0), 0.001); end
  def test_output_am364; assert_equal("", worksheet.output_am364); end
  def test_output_an364; assert_equal("", worksheet.output_an364); end
  def test_output_ao364; assert_equal("", worksheet.output_ao364); end
  def test_output_aq364; assert_equal("I", worksheet.output_aq364); end
  def test_output_ar364; assert_equal("Hydrocarbon fuel power generation", worksheet.output_ar364); end
  def test_output_av364; assert_in_epsilon(6.902735735087841, worksheet.output_av364, 0.001); end
  def test_output_aw364; assert_in_delta(0.15713377502097986, worksheet.output_aw364, 0.001); end
  def test_output_ax364; assert_in_delta(0.09242131537677116, worksheet.output_ax364, 0.001); end
  def test_output_ay364; assert_in_epsilon(3.7504437698388275, worksheet.output_ay364, 0.001); end
  def test_output_ak370; assert_in_epsilon(4.824881698990698, worksheet.output_ak370, 0.001); end
  def test_output_ak372; assert_in_epsilon(-4.442538809474076, worksheet.output_ak372, 0.001); end
  def test_output_ak373; assert_in_delta(0, (worksheet.output_ak373||0), 0.001); end
  def test_output_ak379; assert_in_epsilon(22.582340779539855, worksheet.output_ak379, 0.001); end
  def test_output_az364; assert_in_delta(0.05503013483793751, worksheet.output_az364, 0.001); end
  def test_output_ba364; assert_in_delta(0.4281277781321722, worksheet.output_ba364, 0.001); end
  def test_output_bb364; assert_in_epsilon(3.5977069263407304, worksheet.output_bb364, 0.001); end
  def test_output_bd364; assert_in_delta(-0.04072500559171455, worksheet.output_bd364, 0.001); end
  def test_output_c365; assert_equal("III", worksheet.output_c365); end
  def test_output_e365; assert_equal("National renewable power generation", worksheet.output_e365); end
  def test_output_f365; assert_equal("Mt CO2e", worksheet.output_f365); end
  def test_output_g365; assert_equal("OK", worksheet.output_g365); end
  def test_output_h365; assert_in_delta(0, (worksheet.output_h365||0), 0.001); end
  def test_output_m365; assert_in_delta(0, (worksheet.output_m365||0), 0.001); end
  def test_output_r365; assert_in_delta(0, (worksheet.output_r365||0), 0.001); end
  def test_output_w365; assert_in_delta(0, (worksheet.output_w365||0), 0.001); end
  def test_output_ab365; assert_in_delta(0, (worksheet.output_ab365||0), 0.001); end
  def test_output_ac365; assert_in_delta(0, (worksheet.output_ac365||0), 0.001); end
  def test_output_ad365; assert_in_delta(0, (worksheet.output_ad365||0), 0.001); end
  def test_output_ae365; assert_in_delta(0, (worksheet.output_ae365||0), 0.001); end
  def test_output_af365; assert_in_delta(0, (worksheet.output_af365||0), 0.001); end
  def test_output_ag365; assert_in_delta(0, (worksheet.output_ag365||0), 0.001); end
  def test_output_ah365; assert_in_delta(0, (worksheet.output_ah365||0), 0.001); end
  def test_output_ai365; assert_in_delta(0, (worksheet.output_ai365||0), 0.001); end
  def test_output_aj365; assert_in_delta(0, (worksheet.output_aj365||0), 0.001); end
  def test_output_ak365; assert_in_delta(0, (worksheet.output_ak365||0), 0.001); end
  def test_output_am365; assert_equal("", worksheet.output_am365); end
  def test_output_an365; assert_equal("", worksheet.output_an365); end
  def test_output_ao365; assert_equal("", worksheet.output_ao365); end
  def test_output_aq365; assert_equal("II", worksheet.output_aq365); end
  def test_output_ar365; assert_equal("Nuclear power generation", worksheet.output_ar365); end
  def test_output_av365; assert_in_delta(0, (worksheet.output_av365||0), 0.001); end
  def test_output_ax365; assert_in_delta(0, (worksheet.output_ax365||0), 0.001); end
  def test_output_ay365; assert_in_delta(0, (worksheet.output_ay365||0), 0.001); end
  def test_output_ba365; assert_in_delta(0, (worksheet.output_ba365||0), 0.001); end
  def test_output_bb365; assert_in_delta(0, (worksheet.output_bb365||0), 0.001); end
  def test_output_bd365; assert_equal(:div0, worksheet.output_bd365); end
  def test_output_c366; assert_equal("IV", worksheet.output_c366); end
  def test_output_e366; assert_equal("Distributed renewable power generation", worksheet.output_e366); end
  def test_output_f366; assert_equal("Mt CO2e", worksheet.output_f366); end
  def test_output_g366; assert_equal("OK", worksheet.output_g366); end
  def test_output_h366; assert_in_delta(0, (worksheet.output_h366||0), 0.001); end
  def test_output_m366; assert_in_delta(0, (worksheet.output_m366||0), 0.001); end
  def test_output_r366; assert_in_delta(0, (worksheet.output_r366||0), 0.001); end
  def test_output_w366; assert_in_delta(0, (worksheet.output_w366||0), 0.001); end
  def test_output_ab366; assert_in_delta(0, (worksheet.output_ab366||0), 0.001); end
  def test_output_ac366; assert_in_delta(0, (worksheet.output_ac366||0), 0.001); end
  def test_output_ad366; assert_in_delta(0, (worksheet.output_ad366||0), 0.001); end
  def test_output_ae366; assert_in_delta(0, (worksheet.output_ae366||0), 0.001); end
  def test_output_af366; assert_in_delta(0, (worksheet.output_af366||0), 0.001); end
  def test_output_ag366; assert_in_delta(0, (worksheet.output_ag366||0), 0.001); end
  def test_output_ah366; assert_in_delta(0, (worksheet.output_ah366||0), 0.001); end
  def test_output_ai366; assert_in_delta(0, (worksheet.output_ai366||0), 0.001); end
  def test_output_aj366; assert_in_delta(0, (worksheet.output_aj366||0), 0.001); end
  def test_output_ak366; assert_in_delta(0, (worksheet.output_ak366||0), 0.001); end
  def test_output_am366; assert_equal("", worksheet.output_am366); end
  def test_output_an366; assert_equal("", worksheet.output_an366); end
  def test_output_ao366; assert_equal("", worksheet.output_ao366); end
  def test_output_aq366; assert_equal("III", worksheet.output_aq366); end
  def test_output_ar366; assert_equal("National renewable power generation", worksheet.output_ar366); end
  def test_output_av366; assert_in_delta(0, (worksheet.output_av366||0), 0.001); end
  def test_output_ax366; assert_in_delta(0, (worksheet.output_ax366||0), 0.001); end
  def test_output_ay366; assert_in_delta(0, (worksheet.output_ay366||0), 0.001); end
  def test_output_ba366; assert_in_delta(0, (worksheet.output_ba366||0), 0.001); end
  def test_output_bb366; assert_in_delta(0, (worksheet.output_bb366||0), 0.001); end
  def test_output_bd366; assert_equal(:div0, worksheet.output_bd366); end
  def test_output_c367; assert_equal("VI", worksheet.output_c367); end
  def test_output_e367; assert_equal("Agriculture and waste", worksheet.output_e367); end
  def test_output_f367; assert_equal("Mt CO2e", worksheet.output_f367); end
  def test_output_g367; assert_equal("Historic nb ok, fix model", worksheet.output_g367); end
  def test_output_h367; assert_in_epsilon(17.988853785900357, worksheet.output_h367, 0.001); end
  def test_output_i367; assert_in_delta(0, (worksheet.output_i367||0), 0.001); end
  def test_output_j367; assert_in_delta(0, (worksheet.output_j367||0), 0.001); end
  def test_output_k367; assert_in_delta(0, (worksheet.output_k367||0), 0.001); end
  def test_output_l367; assert_in_delta(0, (worksheet.output_l367||0), 0.001); end
  def test_output_m367; assert_in_epsilon(17.746944317184152, worksheet.output_m367, 0.001); end
  def test_output_n367; assert_in_delta(0, (worksheet.output_n367||0), 0.001); end
  def test_output_o367; assert_in_delta(0, (worksheet.output_o367||0), 0.001); end
  def test_output_p367; assert_in_delta(0, (worksheet.output_p367||0), 0.001); end
  def test_output_q367; assert_in_delta(0, (worksheet.output_q367||0), 0.001); end
  def test_output_r367; assert_in_epsilon(15.88406367057655, worksheet.output_r367, 0.001); end
  def test_output_s367; assert_in_delta(0, (worksheet.output_s367||0), 0.001); end
  def test_output_t367; assert_in_delta(0, (worksheet.output_t367||0), 0.001); end
  def test_output_u367; assert_in_delta(0, (worksheet.output_u367||0), 0.001); end
  def test_output_v367; assert_in_delta(0, (worksheet.output_v367||0), 0.001); end
  def test_output_w367; assert_in_epsilon(14.02568362725688, worksheet.output_w367, 0.001); end
  def test_output_x367; assert_in_delta(0, (worksheet.output_x367||0), 0.001); end
  def test_output_y367; assert_in_delta(0, (worksheet.output_y367||0), 0.001); end
  def test_output_z367; assert_in_delta(0, (worksheet.output_z367||0), 0.001); end
  def test_output_aa367; assert_in_delta(0, (worksheet.output_aa367||0), 0.001); end
  def test_output_ab367; assert_in_epsilon(13.463808239851314, worksheet.output_ab367, 0.001); end
  def test_output_ac367; assert_in_epsilon(13.692529969967014, worksheet.output_ac367, 0.001); end
  def test_output_ad367; assert_in_epsilon(12.644488597003509, worksheet.output_ad367, 0.001); end
  def test_output_ae367; assert_in_epsilon(11.724205281645819, worksheet.output_ae367, 0.001); end
  def test_output_af367; assert_in_epsilon(10.866970124380742, worksheet.output_af367, 0.001); end
  def test_output_ag367; assert_in_epsilon(10.114573658290949, worksheet.output_ag367, 0.001); end
  def test_output_ah367; assert_in_epsilon(9.68123427752107, worksheet.output_ah367, 0.001); end
  def test_output_ai367; assert_in_epsilon(9.284082437425935, worksheet.output_ai367, 0.001); end
  def test_output_aj367; assert_in_epsilon(8.922238819803322, worksheet.output_aj367, 0.001); end
  def test_output_ak367; assert_in_epsilon(8.593096825788756, worksheet.output_ak367, 0.001); end
  def test_output_am367; assert_in_delta(-0.011579714006163644, worksheet.output_am367, 0.001); end
  def test_output_an367; assert_in_delta(-0.361763278805904, worksheet.output_an367, 0.001); end
  def test_output_ao367; assert_in_delta(-0.5223099299120428, worksheet.output_ao367, 0.001); end
  def test_output_aq367; assert_equal("IV", worksheet.output_aq367); end
  def test_output_ar367; assert_equal("Distributed renewable power generation", worksheet.output_ar367); end
  def test_output_av367; assert_in_delta(0, (worksheet.output_av367||0), 0.001); end
  def test_output_ax367; assert_in_delta(0, (worksheet.output_ax367||0), 0.001); end
  def test_output_ay367; assert_in_delta(0, (worksheet.output_ay367||0), 0.001); end
  def test_output_ba367; assert_in_delta(0, (worksheet.output_ba367||0), 0.001); end
  def test_output_bb367; assert_in_delta(0, (worksheet.output_bb367||0), 0.001); end
  def test_output_bd367; assert_equal(:div0, worksheet.output_bd367); end
  def test_output_c368; assert_equal("VII", worksheet.output_c368); end
  def test_output_e368; assert_equal("Electricity distribution, storage, and balancing", worksheet.output_e368); end
  def test_output_f368; assert_equal("Mt CO2e", worksheet.output_f368); end
  def test_output_g368; assert_equal("Check ?? Mais 2010 = 0", worksheet.output_g368); end
  def test_output_h368; assert_in_delta(0, (worksheet.output_h368||0), 0.001); end
  def test_output_i368; assert_in_delta(0, (worksheet.output_i368||0), 0.001); end
  def test_output_j368; assert_in_delta(0, (worksheet.output_j368||0), 0.001); end
  def test_output_k368; assert_in_delta(0, (worksheet.output_k368||0), 0.001); end
  def test_output_l368; assert_in_delta(0, (worksheet.output_l368||0), 0.001); end
  def test_output_m368; assert_in_delta(0, (worksheet.output_m368||0), 0.001); end
  def test_output_n368; assert_in_delta(0, (worksheet.output_n368||0), 0.001); end
  def test_output_o368; assert_in_delta(0, (worksheet.output_o368||0), 0.001); end
  def test_output_p368; assert_in_delta(0, (worksheet.output_p368||0), 0.001); end
  def test_output_q368; assert_in_delta(0, (worksheet.output_q368||0), 0.001); end
  def test_output_r368; assert_in_delta(0, (worksheet.output_r368||0), 0.001); end
  def test_output_s368; assert_in_delta(0, (worksheet.output_s368||0), 0.001); end
  def test_output_t368; assert_in_delta(0, (worksheet.output_t368||0), 0.001); end
  def test_output_u368; assert_in_delta(0, (worksheet.output_u368||0), 0.001); end
  def test_output_v368; assert_in_delta(0, (worksheet.output_v368||0), 0.001); end
  def test_output_w368; assert_in_delta(0, (worksheet.output_w368||0), 0.001); end
  def test_output_x368; assert_in_delta(0, (worksheet.output_x368||0), 0.001); end
  def test_output_y368; assert_in_delta(0, (worksheet.output_y368||0), 0.001); end
  def test_output_z368; assert_in_delta(0, (worksheet.output_z368||0), 0.001); end
  def test_output_aa368; assert_in_delta(0, (worksheet.output_aa368||0), 0.001); end
  def test_output_ab368; assert_in_delta(0, (worksheet.output_ab368||0), 0.001); end
  def test_output_ac368; assert_in_delta(0, (worksheet.output_ac368||0), 0.001); end
  def test_output_ad368; assert_in_delta(0.2038267907496103, worksheet.output_ad368, 0.001); end
  def test_output_ae368; assert_in_delta(0.8713760149012284, worksheet.output_ae368, 0.001); end
  def test_output_af368; assert_in_epsilon(1.84664204218553, worksheet.output_af368, 0.001); end
  def test_output_ag368; assert_in_epsilon(3.3341817189670735, worksheet.output_ag368, 0.001); end
  def test_output_ah368; assert_in_epsilon(5.053448120144595, worksheet.output_ah368, 0.001); end
  def test_output_ai368; assert_in_epsilon(7.171991530332746, worksheet.output_ai368, 0.001); end
  def test_output_aj368; assert_in_epsilon(9.012230886884831, worksheet.output_aj368, 0.001); end
  def test_output_ak368; assert_in_epsilon(12.364191806180145, worksheet.output_ak368, 0.001); end
  def test_output_am368; assert_equal("", worksheet.output_am368); end
  def test_output_an368; assert_equal("", worksheet.output_an368); end
  def test_output_ao368; assert_equal("", worksheet.output_ao368); end
  def test_output_aq368; assert_equal("V", worksheet.output_aq368); end
  def test_output_ar368; assert_equal("Bioenergy", worksheet.output_ar368); end
  def test_output_av368; assert_in_epsilon(1.07460815808904, worksheet.output_av368, 0.001); end
  def test_output_ax368; assert_in_delta(-0.0826708987605654, worksheet.output_ax368, 0.001); end
  def test_output_ay368; assert_in_epsilon(-3.354773257008485, worksheet.output_ay368, 0.001); end
  def test_output_az368; assert_in_epsilon(-1.1863283494571164, worksheet.output_az368, 0.001); end
  def test_output_ba368; assert_in_epsilon(-1.0242628130359255, worksheet.output_ba368, 0.001); end
  def test_output_bb368; assert_in_epsilon(-8.607237383496646, worksheet.output_bb368, 0.001); end
  def test_output_bd368; assert_in_epsilon(1.5656688914862409, worksheet.output_bd368, 0.001); end
  def test_output_c369; assert_equal("VIII", worksheet.output_c369); end
  def test_output_e369; assert_equal("H2 Production", worksheet.output_e369); end
  def test_output_f369; assert_equal("Mt CO2e", worksheet.output_f369); end
  def test_output_g369; assert_equal("Check ?? Mais 2010 = 0", worksheet.output_g369); end
  def test_output_h369; assert_in_delta(0, (worksheet.output_h369||0), 0.001); end
  def test_output_i369; assert_in_delta(0, (worksheet.output_i369||0), 0.001); end
  def test_output_j369; assert_in_delta(0, (worksheet.output_j369||0), 0.001); end
  def test_output_k369; assert_in_delta(0, (worksheet.output_k369||0), 0.001); end
  def test_output_l369; assert_in_delta(0, (worksheet.output_l369||0), 0.001); end
  def test_output_m369; assert_in_delta(0, (worksheet.output_m369||0), 0.001); end
  def test_output_n369; assert_in_delta(0, (worksheet.output_n369||0), 0.001); end
  def test_output_o369; assert_in_delta(0, (worksheet.output_o369||0), 0.001); end
  def test_output_p369; assert_in_delta(0, (worksheet.output_p369||0), 0.001); end
  def test_output_q369; assert_in_delta(0, (worksheet.output_q369||0), 0.001); end
  def test_output_r369; assert_in_delta(0, (worksheet.output_r369||0), 0.001); end
  def test_output_s369; assert_in_delta(0, (worksheet.output_s369||0), 0.001); end
  def test_output_t369; assert_in_delta(0, (worksheet.output_t369||0), 0.001); end
  def test_output_u369; assert_in_delta(0, (worksheet.output_u369||0), 0.001); end
  def test_output_v369; assert_in_delta(0, (worksheet.output_v369||0), 0.001); end
  def test_output_w369; assert_in_delta(0, (worksheet.output_w369||0), 0.001); end
  def test_output_x369; assert_in_delta(0, (worksheet.output_x369||0), 0.001); end
  def test_output_y369; assert_in_delta(0, (worksheet.output_y369||0), 0.001); end
  def test_output_z369; assert_in_delta(0, (worksheet.output_z369||0), 0.001); end
  def test_output_aa369; assert_in_delta(0, (worksheet.output_aa369||0), 0.001); end
  def test_output_ab369; assert_in_delta(0, (worksheet.output_ab369||0), 0.001); end
  def test_output_ac369; assert_in_delta(0, (worksheet.output_ac369||0), 0.001); end
  def test_output_ad369; assert_in_delta(0, (worksheet.output_ad369||0), 0.001); end
  def test_output_ae369; assert_in_delta(0.04757947015854602, worksheet.output_ae369, 0.001); end
  def test_output_af369; assert_in_delta(0.08326869996647096, worksheet.output_af369, 0.001); end
  def test_output_ag369; assert_in_delta(0.1047358345458414, worksheet.output_ag369, 0.001); end
  def test_output_ah369; assert_in_delta(0.10836389225960603, worksheet.output_ah369, 0.001); end
  def test_output_ai369; assert_in_delta(0.09445300310444715, worksheet.output_ai369, 0.001); end
  def test_output_aj369; assert_in_delta(0.059123210466289294, worksheet.output_aj369, 0.001); end
  def test_output_ak369; assert_in_delta(0, (worksheet.output_ak369||0), 0.001); end
  def test_output_am369; assert_equal("", worksheet.output_am369); end
  def test_output_an369; assert_equal("", worksheet.output_an369); end
  def test_output_ao369; assert_equal("", worksheet.output_ao369); end
  def test_output_aq369; assert_equal("VI", worksheet.output_aq369); end
  def test_output_ar369; assert_equal("Agriculture and waste", worksheet.output_ar369); end
  def test_output_av369; assert_in_epsilon(6.336005481092559, worksheet.output_av369, 0.001); end
  def test_output_aw369; assert_in_delta(0.10777666716566174, worksheet.output_aw369, 0.001); end
  def test_output_ax369; assert_in_delta(0.11834731451539807, worksheet.output_ax369, 0.001); end
  def test_output_ay369; assert_in_epsilon(4.802517109737954, worksheet.output_ay369, 0.001); end
  def test_output_az369; assert_in_delta(0.3805228567613464, worksheet.output_az369, 0.001); end
  def test_output_ba369; assert_in_delta(0.4116942582923946, worksheet.output_ba369, 0.001); end
  def test_output_bb369; assert_in_epsilon(3.4596103318855276, worksheet.output_bb369, 0.001); end
  def test_output_bd369; assert_in_delta(-0.2796256103136926, worksheet.output_bd369, 0.001); end
  def test_output_c370; assert_equal("IX", worksheet.output_c370); end
  def test_output_e370; assert_equal("Heating", worksheet.output_e370); end
  def test_output_f370; assert_equal("Mt CO2e", worksheet.output_f370); end
  def test_output_g370; assert_equal("Ok, but no split ", worksheet.output_g370); end
  def test_output_h370; assert_in_epsilon(24.90969851232879, worksheet.output_h370, 0.001); end
  def test_output_i370; assert_in_delta(0, (worksheet.output_i370||0), 0.001); end
  def test_output_j370; assert_in_delta(0, (worksheet.output_j370||0), 0.001); end
  def test_output_k370; assert_in_delta(0, (worksheet.output_k370||0), 0.001); end
  def test_output_l370; assert_in_delta(0, (worksheet.output_l370||0), 0.001); end
  def test_output_m370; assert_in_epsilon(28.02274488807022, worksheet.output_m370, 0.001); end
  def test_output_n370; assert_in_delta(0, (worksheet.output_n370||0), 0.001); end
  def test_output_o370; assert_in_delta(0, (worksheet.output_o370||0), 0.001); end
  def test_output_p370; assert_in_delta(0, (worksheet.output_p370||0), 0.001); end
  def test_output_q370; assert_in_delta(0, (worksheet.output_q370||0), 0.001); end
  def test_output_r370; assert_in_epsilon(27.19468761043284, worksheet.output_r370, 0.001); end
  def test_output_s370; assert_in_delta(0, (worksheet.output_s370||0), 0.001); end
  def test_output_t370; assert_in_delta(0, (worksheet.output_t370||0), 0.001); end
  def test_output_u370; assert_in_delta(0, (worksheet.output_u370||0), 0.001); end
  def test_output_v370; assert_in_delta(0, (worksheet.output_v370||0), 0.001); end
  def test_output_w370; assert_in_epsilon(28.554665409330354, worksheet.output_w370, 0.001); end
  def test_output_x370; assert_in_delta(0, (worksheet.output_x370||0), 0.001); end
  def test_output_y370; assert_in_delta(0, (worksheet.output_y370||0), 0.001); end
  def test_output_z370; assert_in_delta(0, (worksheet.output_z370||0), 0.001); end
  def test_output_aa370; assert_in_delta(0, (worksheet.output_aa370||0), 0.001); end
  def test_output_ab370; assert_in_epsilon(30.31400519970225, worksheet.output_ab370, 0.001); end
  def test_output_am370; assert_in_delta(-0.03664137482469898, worksheet.output_am370, 0.001); end
  def test_output_an370; assert_in_delta(-0.8408365484136656, worksheet.output_an370, 0.001); end
  def test_output_ao370; assert_in_delta(-0.8063050945155891, worksheet.output_ao370, 0.001); end
  def test_output_aq370; assert_equal("VII", worksheet.output_aq370); end
  def test_output_ar370; assert_equal("Electricity distribution, storage, and balancing", worksheet.output_ar370); end
  def test_output_av370; assert_in_delta(0, (worksheet.output_av370||0), 0.001); end
  def test_output_aw370; assert_in_delta(0, (worksheet.output_aw370||0), 0.001); end
  def test_output_ax370; assert_in_delta(0, (worksheet.output_ax370||0), 0.001); end
  def test_output_ay370; assert_in_delta(0, (worksheet.output_ay370||0), 0.001); end
  def test_output_az370; assert_in_delta(0.5475159518176433, worksheet.output_az370, 0.001); end
  def test_output_ba370; assert_in_delta(0.02073542881602462, worksheet.output_ba370, 0.001); end
  def test_output_bb370; assert_in_delta(0.1742470348397397, worksheet.output_bb370, 0.001); end
  def test_output_bd370; assert_equal(:div0, worksheet.output_bd370); end
  def test_output_c371; assert_equal("X", worksheet.output_c371); end
  def test_output_e371; assert_equal("Lighting and appliances", worksheet.output_e371); end
  def test_output_f371; assert_equal("Mt CO2e", worksheet.output_f371); end
  def test_output_g371; assert_equal("Ok, but no split ", worksheet.output_g371); end
  def test_output_h371; assert_equal("incl. Above", worksheet.output_h371); end
  def test_output_i371; assert_equal("incl. Above", worksheet.output_i371); end
  def test_output_j371; assert_equal("incl. Above", worksheet.output_j371); end
  def test_output_k371; assert_equal("incl. Above", worksheet.output_k371); end
  def test_output_l371; assert_equal("incl. Above", worksheet.output_l371); end
  def test_output_m371; assert_equal("incl. Above", worksheet.output_m371); end
  def test_output_n371; assert_equal("incl. Above", worksheet.output_n371); end
  def test_output_o371; assert_equal("incl. Above", worksheet.output_o371); end
  def test_output_p371; assert_equal("incl. Above", worksheet.output_p371); end
  def test_output_q371; assert_equal("incl. Above", worksheet.output_q371); end
  def test_output_r371; assert_equal("incl. Above", worksheet.output_r371); end
  def test_output_s371; assert_equal("incl. Above", worksheet.output_s371); end
  def test_output_t371; assert_equal("incl. Above", worksheet.output_t371); end
  def test_output_u371; assert_equal("incl. Above", worksheet.output_u371); end
  def test_output_v371; assert_equal("incl. Above", worksheet.output_v371); end
  def test_output_w371; assert_equal("incl. Above", worksheet.output_w371); end
  def test_output_x371; assert_equal("incl. Above", worksheet.output_x371); end
  def test_output_y371; assert_equal("incl. Above", worksheet.output_y371); end
  def test_output_z371; assert_equal("incl. Above", worksheet.output_z371); end
  def test_output_aa371; assert_equal("incl. Above", worksheet.output_aa371); end
  def test_output_ab371; assert_equal("incl. Above", worksheet.output_ab371); end
  def test_output_ac371; assert_in_delta(0.05750473978133632, worksheet.output_ac371, 0.001); end
  def test_output_ad371; assert_in_delta(0.05403942272194062, worksheet.output_ad371, 0.001); end
  def test_output_ae371; assert_in_delta(0.05258393639346289, worksheet.output_ae371, 0.001); end
  def test_output_af371; assert_in_delta(0.04655725641475219, worksheet.output_af371, 0.001); end
  def test_output_ag371; assert_in_delta(0.039548217298400634, worksheet.output_ag371, 0.001); end
  def test_output_ah371; assert_in_delta(0.031062664356824636, worksheet.output_ah371, 0.001); end
  def test_output_ai371; assert_in_delta(0.021690804699909763, worksheet.output_ai371, 0.001); end
  def test_output_aj371; assert_in_delta(0.01128844322183089, worksheet.output_aj371, 0.001); end
  def test_output_ak371; assert_in_delta(0, (worksheet.output_ak371||0), 0.001); end
  def test_output_am371; assert_in_delta(-1, worksheet.output_am371, 0.001); end
  def test_output_an371; assert_equal("", worksheet.output_an371); end
  def test_output_ao371; assert_equal("", worksheet.output_ao371); end
  def test_output_aq371; assert_equal("VIII", worksheet.output_aq371); end
  def test_output_ar371; assert_equal("H2 Production", worksheet.output_ar371); end
  def test_output_av371; assert_in_delta(0, (worksheet.output_av371||0), 0.001); end
  def test_output_aw371; assert_in_delta(0, (worksheet.output_aw371||0), 0.001); end
  def test_output_ax371; assert_in_delta(0, (worksheet.output_ax371||0), 0.001); end
  def test_output_ay371; assert_in_delta(0, (worksheet.output_ay371||0), 0.001); end
  def test_output_az371; assert_in_delta(0, (worksheet.output_az371||0), 0.001); end
  def test_output_ba371; assert_in_delta(0, (worksheet.output_ba371||0), 0.001); end
  def test_output_bb371; assert_in_delta(0, (worksheet.output_bb371||0), 0.001); end
  def test_output_bd371; assert_equal(:div0, worksheet.output_bd371); end
  def test_output_c372; assert_equal("XI", worksheet.output_c372); end
  def test_output_e372; assert_equal("Industry", worksheet.output_e372); end
  def test_output_f372; assert_equal("Mt CO2e", worksheet.output_f372); end
  def test_output_h372; assert_in_epsilon(54.09955930941479, worksheet.output_h372, 0.001); end
  def test_output_i372; assert_in_delta(0, (worksheet.output_i372||0), 0.001); end
  def test_output_j372; assert_in_delta(0, (worksheet.output_j372||0), 0.001); end
  def test_output_k372; assert_in_delta(0, (worksheet.output_k372||0), 0.001); end
  def test_output_l372; assert_in_delta(0, (worksheet.output_l372||0), 0.001); end
  def test_output_m372; assert_in_epsilon(56.870673913345, worksheet.output_m372, 0.001); end
  def test_output_n372; assert_in_delta(0, (worksheet.output_n372||0), 0.001); end
  def test_output_o372; assert_in_delta(0, (worksheet.output_o372||0), 0.001); end
  def test_output_p372; assert_in_delta(0, (worksheet.output_p372||0), 0.001); end
  def test_output_q372; assert_in_delta(0, (worksheet.output_q372||0), 0.001); end
  def test_output_r372; assert_in_epsilon(54.52020281951098, worksheet.output_r372, 0.001); end
  def test_output_s372; assert_in_delta(0, (worksheet.output_s372||0), 0.001); end
  def test_output_t372; assert_in_delta(0, (worksheet.output_t372||0), 0.001); end
  def test_output_u372; assert_in_delta(0, (worksheet.output_u372||0), 0.001); end
  def test_output_v372; assert_in_delta(0, (worksheet.output_v372||0), 0.001); end
  def test_output_w372; assert_in_epsilon(49.65045254229085, worksheet.output_w372, 0.001); end
  def test_output_x372; assert_in_delta(0, (worksheet.output_x372||0), 0.001); end
  def test_output_y372; assert_in_delta(0, (worksheet.output_y372||0), 0.001); end
  def test_output_z372; assert_in_delta(0, (worksheet.output_z372||0), 0.001); end
  def test_output_aa372; assert_in_delta(0, (worksheet.output_aa372||0), 0.001); end
  def test_output_ab372; assert_in_epsilon(42.706160529116474, worksheet.output_ab372, 0.001); end
  def test_output_am372; assert_equal("", worksheet.output_am372); end
  def test_output_an372; assert_in_epsilon(-1.1040257132561757, worksheet.output_an372, 0.001); end
  def test_output_ao372; assert_in_epsilon(-1.0821178373018827, worksheet.output_ao372, 0.001); end
  def test_output_aq372; assert_equal("IX", worksheet.output_aq372); end
  def test_output_ar372; assert_equal("Heating", worksheet.output_ar372); end
  def test_output_av372; assert_in_epsilon(8.12872851, worksheet.output_av372, 0.001); end
  def test_output_aw372; assert_in_delta(0.1690472521549789, worksheet.output_aw372, 0.001); end
  def test_output_ax372; assert_in_delta(0.23291362811396576, worksheet.output_ax372, 0.001); end
  def test_output_ay372; assert_in_epsilon(9.451601742622788, worksheet.output_ay372, 0.001); end
  def test_output_az372; assert_in_delta(0.21365728850226887, worksheet.output_az372, 0.001); end
  def test_output_ba372; assert_in_delta(0.1590441299263065, worksheet.output_ba372, 0.001); end
  def test_output_bb372; assert_in_epsilon(1.3365032521974303, worksheet.output_bb372, 0.001); end
  def test_output_bd372; assert_in_delta(-0.8585950520777492, worksheet.output_bd372, 0.001); end
  def test_output_c373; assert_equal("XII", worksheet.output_c373); end
  def test_output_e373; assert_equal("Transport", worksheet.output_e373); end
  def test_output_f373; assert_equal("Mt CO2e", worksheet.output_f373); end
  def test_output_g373; assert_equal("Scope OK = all domestic", worksheet.output_g373); end
  def test_output_h373; assert_in_epsilon(20.4724552687413, worksheet.output_h373, 0.001); end
  def test_output_i373; assert_in_delta(0, (worksheet.output_i373||0), 0.001); end
  def test_output_j373; assert_in_delta(0, (worksheet.output_j373||0), 0.001); end
  def test_output_k373; assert_in_delta(0, (worksheet.output_k373||0), 0.001); end
  def test_output_l373; assert_in_delta(0, (worksheet.output_l373||0), 0.001); end
  def test_output_m373; assert_in_epsilon(22.5119304822935, worksheet.output_m373, 0.001); end
  def test_output_n373; assert_in_delta(0, (worksheet.output_n373||0), 0.001); end
  def test_output_o373; assert_in_delta(0, (worksheet.output_o373||0), 0.001); end
  def test_output_p373; assert_in_delta(0, (worksheet.output_p373||0), 0.001); end
  def test_output_q373; assert_in_delta(0, (worksheet.output_q373||0), 0.001); end
  def test_output_r373; assert_in_epsilon(24.6590970868922, worksheet.output_r373, 0.001); end
  def test_output_s373; assert_in_delta(0, (worksheet.output_s373||0), 0.001); end
  def test_output_t373; assert_in_delta(0, (worksheet.output_t373||0), 0.001); end
  def test_output_u373; assert_in_delta(0, (worksheet.output_u373||0), 0.001); end
  def test_output_v373; assert_in_delta(0, (worksheet.output_v373||0), 0.001); end
  def test_output_w373; assert_in_epsilon(26.255467159611, worksheet.output_w373, 0.001); end
  def test_output_x373; assert_in_delta(0, (worksheet.output_x373||0), 0.001); end
  def test_output_y373; assert_in_delta(0, (worksheet.output_y373||0), 0.001); end
  def test_output_z373; assert_in_delta(0, (worksheet.output_z373||0), 0.001); end
  def test_output_aa373; assert_in_delta(0, (worksheet.output_aa373||0), 0.001); end
  def test_output_ab373; assert_in_epsilon(24.2574527403487, worksheet.output_ab373, 0.001); end
  def test_output_am373; assert_in_delta(-1, worksheet.output_am373, 0.001); end
  def test_output_an373; assert_in_delta(-1, worksheet.output_an373, 0.001); end
  def test_output_ao373; assert_in_delta(-1, worksheet.output_ao373, 0.001); end
  def test_output_aq373; assert_equal("X", worksheet.output_aq373); end
  def test_output_ar373; assert_equal("Lighting and appliances", worksheet.output_ar373); end
  def test_output_av373; assert_in_delta(0, (worksheet.output_av373||0), 0.001); end
  def test_output_aw373; assert_in_delta(0.0004526314138771247, worksheet.output_aw373, 0.001); end
  def test_output_ax373; assert_in_delta(0.0030872911757230653, worksheet.output_ax373, 0.001); end
  def test_output_ay373; assert_in_delta(0.12528183469869886, worksheet.output_ay373, 0.001); end
  def test_output_az373; assert_in_delta(0, (worksheet.output_az373||0), 0.001); end
  def test_output_ba373; assert_in_delta(0, (worksheet.output_ba373||0), 0.001); end
  def test_output_bb373; assert_in_delta(0, (worksheet.output_bb373||0), 0.001); end
  def test_output_bd373; assert_in_delta(-1, worksheet.output_bd373, 0.001); end
  def test_output_c374; assert_equal("XIII", worksheet.output_c374); end
  def test_output_e374; assert_equal("Food consumption [UNUSED]", worksheet.output_e374); end
  def test_output_f374; assert_equal("Mt CO2e", worksheet.output_f374); end
  def test_output_g374; assert_equal("Ok", worksheet.output_g374); end
  def test_output_h374; assert_in_delta(0, (worksheet.output_h374||0), 0.001); end
  def test_output_m374; assert_in_delta(0, (worksheet.output_m374||0), 0.001); end
  def test_output_r374; assert_in_delta(0, (worksheet.output_r374||0), 0.001); end
  def test_output_w374; assert_in_delta(0, (worksheet.output_w374||0), 0.001); end
  def test_output_ab374; assert_in_delta(0, (worksheet.output_ab374||0), 0.001); end
  def test_output_ac374; assert_in_delta(0, (worksheet.output_ac374||0), 0.001); end
  def test_output_ad374; assert_in_delta(0, (worksheet.output_ad374||0), 0.001); end
  def test_output_ae374; assert_in_delta(0, (worksheet.output_ae374||0), 0.001); end
  def test_output_af374; assert_in_delta(0, (worksheet.output_af374||0), 0.001); end
  def test_output_ag374; assert_in_delta(0, (worksheet.output_ag374||0), 0.001); end
  def test_output_ah374; assert_in_delta(0, (worksheet.output_ah374||0), 0.001); end
  def test_output_ai374; assert_in_delta(0, (worksheet.output_ai374||0), 0.001); end
  def test_output_aj374; assert_in_delta(0, (worksheet.output_aj374||0), 0.001); end
  def test_output_ak374; assert_in_delta(0, (worksheet.output_ak374||0), 0.001); end
  def test_output_am374; assert_equal("", worksheet.output_am374); end
  def test_output_an374; assert_equal("", worksheet.output_an374); end
  def test_output_ao374; assert_equal("", worksheet.output_ao374); end
  def test_output_aq374; assert_equal("XI", worksheet.output_aq374); end
  def test_output_ar374; assert_equal("Industry", worksheet.output_ar374); end
  def test_output_av374; assert_in_epsilon(26.04972370564, worksheet.output_av374, 0.001); end
  def test_output_aw374; assert_in_delta(0.388217935194585, worksheet.output_aw374, 0.001); end
  def test_output_ax374; assert_in_delta(0.3909029523146196, worksheet.output_ax374, 0.001); end
  def test_output_ay374; assert_in_epsilon(15.862785940054295, worksheet.output_ay374, 0.001); end
  def test_output_az374; assert_in_delta(-0.19672623191919605, worksheet.output_az374, 0.001); end
  def test_output_ba374; assert_in_delta(0.6831039456401904, worksheet.output_ba374, 0.001); end
  def test_output_bb374; assert_in_epsilon(5.740360523585739, worksheet.output_bb374, 0.001); end
  def test_output_bd374; assert_in_delta(-0.6381240631198928, worksheet.output_bd374, 0.001); end
  def test_output_c375; assert_equal("XIV", worksheet.output_c375); end
  def test_output_e375; assert_equal("Geosequestration", worksheet.output_e375); end
  def test_output_f375; assert_equal("Mt CO2e", worksheet.output_f375); end
  def test_output_g375; assert_equal("Ok", worksheet.output_g375); end
  def test_output_h375; assert_in_delta(0, (worksheet.output_h375||0), 0.001); end
  def test_output_m375; assert_in_delta(0, (worksheet.output_m375||0), 0.001); end
  def test_output_r375; assert_in_delta(0, (worksheet.output_r375||0), 0.001); end
  def test_output_w375; assert_in_delta(0, (worksheet.output_w375||0), 0.001); end
  def test_output_ab375; assert_in_delta(0, (worksheet.output_ab375||0), 0.001); end
  def test_output_ac375; assert_in_delta(0, (worksheet.output_ac375||0), 0.001); end
  def test_output_ad375; assert_in_delta(0, (worksheet.output_ad375||0), 0.001); end
  def test_output_ae375; assert_in_delta(0, (worksheet.output_ae375||0), 0.001); end
  def test_output_af375; assert_in_delta(0, (worksheet.output_af375||0), 0.001); end
  def test_output_ag375; assert_in_delta(0, (worksheet.output_ag375||0), 0.001); end
  def test_output_ah375; assert_in_delta(0, (worksheet.output_ah375||0), 0.001); end
  def test_output_ai375; assert_in_delta(0, (worksheet.output_ai375||0), 0.001); end
  def test_output_aj375; assert_in_delta(0, (worksheet.output_aj375||0), 0.001); end
  def test_output_ak375; assert_in_delta(0, (worksheet.output_ak375||0), 0.001); end
  def test_output_am375; assert_equal("", worksheet.output_am375); end
  def test_output_an375; assert_equal("", worksheet.output_an375); end
  def test_output_ao375; assert_equal("", worksheet.output_ao375); end
  def test_output_aq375; assert_equal("XII", worksheet.output_aq375); end
  def test_output_ar375; assert_equal("Transport (excl. Int'l aviation)", worksheet.output_ar375); end
  def test_output_av375; assert_in_epsilon(7.287946509648742, worksheet.output_av375, 0.001); end
  def test_output_aw375; assert_in_delta(0.17737173904991743, worksheet.output_aw375, 0.001); end
  def test_output_ax375; assert_in_delta(0.24499839726408779, worksheet.output_ax375, 0.001); end
  def test_output_ay375; assert_in_epsilon(9.941999947671565, worksheet.output_ay375, 0.001); end
  def test_output_az375; assert_in_delta(0, (worksheet.output_az375||0), 0.001); end
  def test_output_ba375; assert_in_delta(0.32155727222883723, worksheet.output_ba375, 0.001); end
  def test_output_bb375; assert_in_epsilon(2.702157824376837, worksheet.output_bb375, 0.001); end
  def test_output_bd375; assert_in_delta(-0.7282078215047982, worksheet.output_bd375, 0.001); end
  def test_output_c376; assert_equal("XV", worksheet.output_c376); end
  def test_output_e376; assert_equal("Fossil fuel production", worksheet.output_e376); end
  def test_output_f376; assert_equal("Mt CO2e", worksheet.output_f376); end
  def test_output_g376; assert_equal("Ok", worksheet.output_g376); end
  def test_output_h376; assert_in_delta(0, (worksheet.output_h376||0), 0.001); end
  def test_output_m376; assert_in_delta(0, (worksheet.output_m376||0), 0.001); end
  def test_output_r376; assert_in_delta(0, (worksheet.output_r376||0), 0.001); end
  def test_output_w376; assert_in_delta(0, (worksheet.output_w376||0), 0.001); end
  def test_output_ab376; assert_in_delta(0, (worksheet.output_ab376||0), 0.001); end
  def test_output_ac376; assert_in_delta(0, (worksheet.output_ac376||0), 0.001); end
  def test_output_ad376; assert_in_delta(0, (worksheet.output_ad376||0), 0.001); end
  def test_output_ae376; assert_in_delta(0, (worksheet.output_ae376||0), 0.001); end
  def test_output_af376; assert_in_delta(0, (worksheet.output_af376||0), 0.001); end
  def test_output_ag376; assert_in_delta(0, (worksheet.output_ag376||0), 0.001); end
  def test_output_ah376; assert_in_delta(0, (worksheet.output_ah376||0), 0.001); end
  def test_output_ai376; assert_in_delta(0, (worksheet.output_ai376||0), 0.001); end
  def test_output_aj376; assert_in_delta(0, (worksheet.output_aj376||0), 0.001); end
  def test_output_ak376; assert_in_delta(0, (worksheet.output_ak376||0), 0.001); end
  def test_output_am376; assert_equal("", worksheet.output_am376); end
  def test_output_an376; assert_equal("", worksheet.output_an376); end
  def test_output_ao376; assert_equal("", worksheet.output_ao376); end
  def test_output_aq376; assert_equal("XIII", worksheet.output_aq376); end
  def test_output_ar376; assert_equal("Food consumption [UNUSED]", worksheet.output_ar376); end
  def test_output_av376; assert_in_delta(0, (worksheet.output_av376||0), 0.001); end
  def test_output_ax376; assert_in_delta(0, (worksheet.output_ax376||0), 0.001); end
  def test_output_ay376; assert_in_delta(0, (worksheet.output_ay376||0), 0.001); end
  def test_output_ba376; assert_in_delta(0, (worksheet.output_ba376||0), 0.001); end
  def test_output_bb376; assert_in_delta(0, (worksheet.output_bb376||0), 0.001); end
  def test_output_bd376; assert_equal(:div0, worksheet.output_bd376); end
  def test_output_c377; assert_equal("XVI", worksheet.output_c377); end
  def test_output_e377; assert_equal("Transfers", worksheet.output_e377); end
  def test_output_f377; assert_equal("Mt CO2e", worksheet.output_f377); end
  def test_output_g377; assert_equal("Ok", worksheet.output_g377); end
  def test_output_h377; assert_in_delta(0, (worksheet.output_h377||0), 0.001); end
  def test_output_m377; assert_in_delta(0, (worksheet.output_m377||0), 0.001); end
  def test_output_r377; assert_in_delta(0, (worksheet.output_r377||0), 0.001); end
  def test_output_w377; assert_in_delta(0, (worksheet.output_w377||0), 0.001); end
  def test_output_ab377; assert_in_delta(0, (worksheet.output_ab377||0), 0.001); end
  def test_output_ac377; assert_in_delta(0, (worksheet.output_ac377||0), 0.001); end
  def test_output_ad377; assert_in_delta(0, (worksheet.output_ad377||0), 0.001); end
  def test_output_ae377; assert_in_delta(0, (worksheet.output_ae377||0), 0.001); end
  def test_output_af377; assert_in_delta(0, (worksheet.output_af377||0), 0.001); end
  def test_output_ag377; assert_in_delta(0, (worksheet.output_ag377||0), 0.001); end
  def test_output_ah377; assert_in_delta(0, (worksheet.output_ah377||0), 0.001); end
  def test_output_ai377; assert_in_delta(0, (worksheet.output_ai377||0), 0.001); end
  def test_output_aj377; assert_in_delta(0, (worksheet.output_aj377||0), 0.001); end
  def test_output_ak377; assert_in_delta(0, (worksheet.output_ak377||0), 0.001); end
  def test_output_am377; assert_equal("", worksheet.output_am377); end
  def test_output_an377; assert_equal("", worksheet.output_an377); end
  def test_output_ao377; assert_equal("", worksheet.output_ao377); end
  def test_output_aq377; assert_equal("XIV", worksheet.output_aq377); end
  def test_output_ar377; assert_equal("Geosequestration", worksheet.output_ar377); end
  def test_output_av377; assert_in_delta(0, (worksheet.output_av377||0), 0.001); end
  def test_output_ax377; assert_in_delta(0, (worksheet.output_ax377||0), 0.001); end
  def test_output_ay377; assert_in_delta(0, (worksheet.output_ay377||0), 0.001); end
  def test_output_ba377; assert_in_delta(0, (worksheet.output_ba377||0), 0.001); end
  def test_output_bb377; assert_in_delta(0, (worksheet.output_bb377||0), 0.001); end
  def test_output_bd377; assert_equal(:div0, worksheet.output_bd377); end
  def test_output_c378; assert_equal("XVII", worksheet.output_c378); end
  def test_output_e378; assert_equal("District heating", worksheet.output_e378); end
  def test_output_f378; assert_equal("Mt CO2e", worksheet.output_f378); end
  def test_output_g378; assert_equal("??? What is this ??", worksheet.output_g378); end
  def test_output_h378; assert_in_delta(0, (worksheet.output_h378||0), 0.001); end
  def test_output_m378; assert_in_delta(0, (worksheet.output_m378||0), 0.001); end
  def test_output_r378; assert_in_delta(0, (worksheet.output_r378||0), 0.001); end
  def test_output_w378; assert_in_delta(0, (worksheet.output_w378||0), 0.001); end
  def test_output_ab378; assert_in_delta(0, (worksheet.output_ab378||0), 0.001); end
  def test_output_ac378; assert_in_delta(0, (worksheet.output_ac378||0), 0.001); end
  def test_output_ad378; assert_in_delta(0, (worksheet.output_ad378||0), 0.001); end
  def test_output_ae378; assert_in_delta(0, (worksheet.output_ae378||0), 0.001); end
  def test_output_af378; assert_in_delta(0, (worksheet.output_af378||0), 0.001); end
  def test_output_ag378; assert_in_delta(0, (worksheet.output_ag378||0), 0.001); end
  def test_output_ah378; assert_in_delta(0, (worksheet.output_ah378||0), 0.001); end
  def test_output_ai378; assert_in_delta(0, (worksheet.output_ai378||0), 0.001); end
  def test_output_aj378; assert_in_delta(0, (worksheet.output_aj378||0), 0.001); end
  def test_output_ak378; assert_in_delta(0, (worksheet.output_ak378||0), 0.001); end
  def test_output_am378; assert_equal("", worksheet.output_am378); end
  def test_output_an378; assert_equal("", worksheet.output_an378); end
  def test_output_ao378; assert_equal("", worksheet.output_ao378); end
  def test_output_aq378; assert_equal("XV", worksheet.output_aq378); end
  def test_output_ar378; assert_equal("Fossil fuel production", worksheet.output_ar378); end
  def test_output_av378; assert_in_delta(0, (worksheet.output_av378||0), 0.001); end
  def test_output_ax378; assert_in_delta(0, (worksheet.output_ax378||0), 0.001); end
  def test_output_ay378; assert_in_delta(0, (worksheet.output_ay378||0), 0.001); end
  def test_output_ba378; assert_in_delta(0, (worksheet.output_ba378||0), 0.001); end
  def test_output_bb378; assert_in_delta(0, (worksheet.output_bb378||0), 0.001); end
  def test_output_bd378; assert_equal(:div0, worksheet.output_bd378); end
  def test_output_e379; assert_equal("Total net of biomass excl. Int'l aviation", worksheet.output_e379); end
  def test_output_h379; assert_in_epsilon(143.09267360164765, worksheet.output_h379, 0.001); end
  def test_output_i379; assert_in_delta(0, (worksheet.output_i379||0), 0.001); end
  def test_output_j379; assert_in_delta(0, (worksheet.output_j379||0), 0.001); end
  def test_output_k379; assert_in_delta(0, (worksheet.output_k379||0), 0.001); end
  def test_output_l379; assert_in_delta(0, (worksheet.output_l379||0), 0.001); end
  def test_output_m379; assert_in_epsilon(150.4231854346216, worksheet.output_m379, 0.001); end
  def test_output_n379; assert_in_delta(0, (worksheet.output_n379||0), 0.001); end
  def test_output_o379; assert_in_delta(0, (worksheet.output_o379||0), 0.001); end
  def test_output_p379; assert_in_delta(0, (worksheet.output_p379||0), 0.001); end
  def test_output_q379; assert_in_delta(0, (worksheet.output_q379||0), 0.001); end
  def test_output_r379; assert_in_epsilon(146.06030915435187, worksheet.output_r379, 0.001); end
  def test_output_s379; assert_in_delta(0, (worksheet.output_s379||0), 0.001); end
  def test_output_t379; assert_in_delta(0, (worksheet.output_t379||0), 0.001); end
  def test_output_u379; assert_in_delta(0, (worksheet.output_u379||0), 0.001); end
  def test_output_v379; assert_in_delta(0, (worksheet.output_v379||0), 0.001); end
  def test_output_w379; assert_in_epsilon(143.5334664279622, worksheet.output_w379, 0.001); end
  def test_output_x379; assert_in_delta(0, (worksheet.output_x379||0), 0.001); end
  def test_output_y379; assert_in_delta(0, (worksheet.output_y379||0), 0.001); end
  def test_output_z379; assert_in_delta(0, (worksheet.output_z379||0), 0.001); end
  def test_output_aa379; assert_in_delta(0, (worksheet.output_aa379||0), 0.001); end
  def test_output_ab379; assert_in_epsilon(132.39507452499643, worksheet.output_ab379, 0.001); end
  def test_output_ad363; assert_in_epsilon(8.284027771396378, worksheet.output_ad363, 0.001); end
  def test_output_ad354; assert_in_epsilon(2.336314798545165, worksheet.output_ad354, 0.001); end
  def test_output_ad370; assert_in_epsilon(19.22711847971854, worksheet.output_ad370, 0.001); end
  def test_output_ad372; assert_in_epsilon(39.06297959003554, worksheet.output_ad372, 0.001); end
  def test_output_ad373; assert_in_epsilon(20.96344103197479, worksheet.output_ad373, 0.001); end
  def test_output_ad379; assert_in_epsilon(100.43992168360032, worksheet.output_ad379, 0.001); end
  def test_output_ae363; assert_in_epsilon(8.292147020115152, worksheet.output_ae363, 0.001); end
  def test_output_ae354; assert_in_epsilon(2.072845041105791, worksheet.output_ae354, 0.001); end
  def test_output_ae370; assert_in_epsilon(15.169850927301788, worksheet.output_ae370, 0.001); end
  def test_output_ae372; assert_in_epsilon(29.27832932961281, worksheet.output_ae372, 0.001); end
  def test_output_ae373; assert_in_epsilon(16.439978158273895, worksheet.output_ae373, 0.001); end
  def test_output_ae379; assert_in_epsilon(81.87605013840269, worksheet.output_ae379, 0.001); end
  def test_output_af363; assert_in_delta(0.24083431210889117, worksheet.output_af363, 0.001); end
  def test_output_af354; assert_in_epsilon(1.9189961497443644, worksheet.output_af354, 0.001); end
  def test_output_af370; assert_in_epsilon(10.986366019039151, worksheet.output_af370, 0.001); end
  def test_output_af372; assert_in_epsilon(22.35437234383982, worksheet.output_af372, 0.001); end
  def test_output_af373; assert_in_epsilon(12.533024886679279, worksheet.output_af373, 0.001); end
  def test_output_af379; assert_in_epsilon(58.958035684614636, worksheet.output_af379, 0.001); end
  def test_output_ag363; assert_in_delta(0.44491118454558176, worksheet.output_ag363, 0.001); end
  def test_output_ag354; assert_in_delta(0.316525176489332, worksheet.output_ag354, 0.001); end
  def test_output_ag370; assert_in_epsilon(9.074057488466321, worksheet.output_ag370, 0.001); end
  def test_output_ag372; assert_in_epsilon(13.809251777767866, worksheet.output_ag372, 0.001); end
  def test_output_ag373; assert_in_epsilon(8.799870945534016, worksheet.output_ag373, 0.001); end
  def test_output_ag379; assert_in_epsilon(45.72113082541605, worksheet.output_ag379, 0.001); end
  def test_output_ah363; assert_in_delta(0.6444181217283607, worksheet.output_ah363, 0.001); end
  def test_output_ah354; assert_in_delta(-0.7576859771685918, worksheet.output_ah354, 0.001); end
  def test_output_ah370; assert_in_epsilon(7.408680006690251, worksheet.output_ah370, 0.001); end
  def test_output_ah372; assert_in_epsilon(7.700432552939351, worksheet.output_ah372, 0.001); end
  def test_output_ah373; assert_in_epsilon(5.678718648663463, worksheet.output_ah373, 0.001); end
  def test_output_ah379; assert_in_epsilon(36.30635828430352, worksheet.output_ah379, 0.001); end
  def test_output_ai363; assert_in_delta(0.8438867797074092, worksheet.output_ai363, 0.001); end
  def test_output_ai354; assert_in_epsilon(-1.7794074869565808, worksheet.output_ai354, 0.001); end
  def test_output_ai370; assert_in_epsilon(6.19439256809484, worksheet.output_ai370, 0.001); end
  def test_output_ai372; assert_in_epsilon(3.53178570178597, worksheet.output_ai372, 0.001); end
  def test_output_ai373; assert_in_epsilon(3.465872543299373, worksheet.output_ai373, 0.001); end
  def test_output_ai379; assert_in_epsilon(30.608155368450632, worksheet.output_ai379, 0.001); end
  def test_output_aj363; assert_in_epsilon(1.043298018880872, worksheet.output_aj363, 0.001); end
  def test_output_aj354; assert_in_epsilon(-2.7601892942932835, worksheet.output_aj354, 0.001); end
  def test_output_aj370; assert_in_epsilon(5.395110930767059, worksheet.output_aj370, 0.001); end
  def test_output_aj372; assert_in_delta(0.17774451310825157, worksheet.output_aj372, 0.001); end
  def test_output_aj373; assert_in_epsilon(1.5357078133380329, worksheet.output_aj373, 0.001); end
  def test_output_aj379; assert_in_epsilon(26.156742636470486, worksheet.output_aj379, 0.001); end
  def test_output_am379; assert_in_delta(-0.04226523960928619, worksheet.output_am379, 0.001); end
  def test_output_an379; assert_in_delta(-0.829432168375144, worksheet.output_an379, 0.001); end
  def test_output_ao379; assert_in_delta(-0.8421838084987754, worksheet.output_ao379, 0.001); end
  def test_output_aq379; assert_equal("XVI", worksheet.output_aq379); end
  def test_output_ar379; assert_equal("Transfers", worksheet.output_ar379); end
  def test_output_av379; assert_in_delta(0, (worksheet.output_av379||0), 0.001); end
  def test_output_ax379; assert_in_delta(0, (worksheet.output_ax379||0), 0.001); end
  def test_output_ay379; assert_in_delta(0, (worksheet.output_ay379||0), 0.001); end
  def test_output_ba379; assert_in_delta(0, (worksheet.output_ba379||0), 0.001); end
  def test_output_bb379; assert_in_delta(0, (worksheet.output_bb379||0), 0.001); end
  def test_output_bd379; assert_equal(:div0, worksheet.output_bd379); end
  def test_output_b380; assert_equal("REF", worksheet.output_b380); end
  def test_output_e380; assert_equal("Reference scenario", worksheet.output_e380); end
  def test_output_f380; assert_equal("Mt CO2e", worksheet.output_f380); end
  def test_output_g380; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g380); end
  def test_output_i380; assert_in_delta(0, (worksheet.output_i380||0), 0.001); end
  def test_output_j380; assert_in_delta(0, (worksheet.output_j380||0), 0.001); end
  def test_output_k380; assert_in_delta(0, (worksheet.output_k380||0), 0.001); end
  def test_output_l380; assert_in_delta(0, (worksheet.output_l380||0), 0.001); end
  def test_output_m380; assert_in_epsilon(144.3450527260345, worksheet.output_m380, 0.001); end
  def test_output_n380; assert_in_delta(0, (worksheet.output_n380||0), 0.001); end
  def test_output_o380; assert_in_delta(0, (worksheet.output_o380||0), 0.001); end
  def test_output_p380; assert_in_delta(0, (worksheet.output_p380||0), 0.001); end
  def test_output_q380; assert_in_delta(0, (worksheet.output_q380||0), 0.001); end
  def test_output_r380; assert_in_epsilon(140.1584666961408, worksheet.output_r380, 0.001); end
  def test_output_s380; assert_in_delta(0, (worksheet.output_s380||0), 0.001); end
  def test_output_t380; assert_in_delta(0, (worksheet.output_t380||0), 0.001); end
  def test_output_u380; assert_in_delta(0, (worksheet.output_u380||0), 0.001); end
  def test_output_v380; assert_in_delta(0, (worksheet.output_v380||0), 0.001); end
  def test_output_w380; assert_in_epsilon(137.7337258191459, worksheet.output_w380, 0.001); end
  def test_output_ab380; assert_in_epsilon(127.04540166305617, worksheet.output_ab380, 0.001); end
  def test_output_ac380; assert_in_epsilon(123.05922787051014, worksheet.output_ac380, 0.001); end
  def test_output_ad380; assert_in_epsilon(115.80572626782956, worksheet.output_ad380, 0.001); end
  def test_output_ae380; assert_in_epsilon(117.16450903080455, worksheet.output_ae380, 0.001); end
  def test_output_af380; assert_in_epsilon(123.70806528955326, worksheet.output_af380, 0.001); end
  def test_output_ag380; assert_in_epsilon(122.92932228726765, worksheet.output_ag380, 0.001); end
  def test_output_ah380; assert_in_epsilon(121.95887844234089, worksheet.output_ah380, 0.001); end
  def test_output_ai380; assert_in_epsilon(122.58302452754658, worksheet.output_ai380, 0.001); end
  def test_output_aj380; assert_in_epsilon(123.04185829633691, worksheet.output_aj380, 0.001); end
  def test_output_ak380; assert_in_epsilon(123.6222975291326, worksheet.output_ak380, 0.001); end
  def test_output_aq380; assert_equal("XVII", worksheet.output_aq380); end
  def test_output_ar380; assert_equal("District heating", worksheet.output_ar380); end
  def test_output_av380; assert_in_delta(0, (worksheet.output_av380||0), 0.001); end
  def test_output_ax380; assert_in_delta(0, (worksheet.output_ax380||0), 0.001); end
  def test_output_ay380; assert_in_delta(0, (worksheet.output_ay380||0), 0.001); end
  def test_output_ba380; assert_in_delta(0, (worksheet.output_ba380||0), 0.001); end
  def test_output_bb380; assert_in_delta(0, (worksheet.output_bb380||0), 0.001); end
  def test_output_bd380; assert_equal(:div0, worksheet.output_bd380); end
  def test_output_r381; assert_equal("adjustment factor including buildings", worksheet.output_r381); end
  def test_output_ac381; assert_in_delta(0.9595931126506505, worksheet.output_ac381, 0.001); end
  def test_output_ar381; assert_equal("Total net biomass excluding int'l aviation", worksheet.output_ar381); end
  def test_output_av381; assert_in_epsilon(54.70513994146914, worksheet.output_av381, 0.001); end
  def test_output_aw381; assert_in_delta(1, worksheet.output_aw381, 0.001); end
  def test_output_ax381; assert_in_delta(1, worksheet.output_ax381, 0.001); end
  def test_output_ay381; assert_in_epsilon(40.57985708761564, worksheet.output_ay381, 0.001); end
  def test_output_ba381; assert_in_delta(1, worksheet.output_ba381, 0.001); end
  def test_output_bb381; assert_in_epsilon(8.403348509729359, worksheet.output_bb381, 0.001); end
  def test_output_bd381; assert_in_delta(-0.7929182330143313, worksheet.output_bd381, 0.001); end
  def test_output_r382; assert_equal("adjustment factor excluding buildings ", worksheet.output_r382); end
  def test_output_b383; assert_equal("IPCC Sectors Emissions", worksheet.output_b383); end
  def test_output_h383; assert_in_delta(0, (worksheet.output_h383||0), 0.001); end
  def test_output_m383; assert_in_delta(0, (worksheet.output_m383||0), 0.001); end
  def test_output_r383; assert_in_delta(0, (worksheet.output_r383||0), 0.001); end
  def test_output_w383; assert_in_delta(0, (worksheet.output_w383||0), 0.001); end
  def test_output_ab383; assert_in_delta(0, (worksheet.output_ab383||0), 0.001); end
  def test_output_am383; assert_equal("", worksheet.output_am383); end
  def test_output_an383; assert_equal("", worksheet.output_an383); end
  def test_output_ao383; assert_equal("", worksheet.output_ao383); end
  def test_output_c384; assert_equal("1A", worksheet.output_c384); end
  def test_output_e384; assert_equal("Fuel Combustion", worksheet.output_e384); end
  def test_output_f384; assert_equal("Mt CO2e", worksheet.output_f384); end
  def test_output_g384; assert_equal("All in CRF NIR (see NIR data pack for how the data is extracted)", worksheet.output_g384); end
  def test_output_h384; assert_in_epsilon(111.1504979340617, worksheet.output_h384, 0.001); end
  def test_output_m384; assert_in_epsilon(115.52208987103579, worksheet.output_m384, 0.001); end
  def test_output_r384; assert_in_epsilon(116.19584271106409, worksheet.output_r384, 0.001); end
  def test_output_w384; assert_in_epsilon(115.5978095289216, worksheet.output_w384, 0.001); end
  def test_output_ab384; assert_in_epsilon(107.06076842136285, worksheet.output_ab384, 0.001); end
  def test_output_am384; assert_in_delta(-0.016759324925558983, worksheet.output_am384, 0.001); end
  def test_output_an384; assert_in_delta(-0.4913799779401342, worksheet.output_an384, 0.001); end
  def test_output_ar384; assert_in_epsilon(1990, worksheet.output_ar384, 0.001); end
  def test_output_as384; assert_in_epsilon(2010, worksheet.output_as384, 0.001); end
  def test_output_at384; assert_in_epsilon(2015, worksheet.output_at384, 0.001); end
  def test_output_au384; assert_in_epsilon(2020, worksheet.output_au384, 0.001); end
  def test_output_av384; assert_in_epsilon(2025, worksheet.output_av384, 0.001); end
  def test_output_aw384; assert_in_epsilon(2030, worksheet.output_aw384, 0.001); end
  def test_output_ax384; assert_in_epsilon(2035, worksheet.output_ax384, 0.001); end
  def test_output_ay384; assert_in_epsilon(2040, worksheet.output_ay384, 0.001); end
  def test_output_az384; assert_in_epsilon(2045, worksheet.output_az384, 0.001); end
  def test_output_ba384; assert_in_epsilon(2050, worksheet.output_ba384, 0.001); end
  def test_output_bb384; assert_equal("% to 2010", worksheet.output_bb384); end
  def test_output_bc384; assert_equal("% to 1990", worksheet.output_bc384); end
  def test_output_c385; assert_equal("1A", worksheet.output_c385); end
  def test_output_d385; assert_equal("E", worksheet.output_d385); end
  def test_output_e385; assert_equal("Fuel Combustion Energy (-petroleum refining)", worksheet.output_e385); end
  def test_output_f385; assert_equal("Mt CO2e", worksheet.output_f385); end
  def test_output_g385; assert_equal("Energy - Refining (incl emissions from biomass)", worksheet.output_g385); end
  def test_output_h385; assert_in_epsilon(25.6221067252624, worksheet.output_h385, 0.001); end
  def test_output_m385; assert_in_epsilon(25.2708918337287, worksheet.output_m385, 0.001); end
  def test_output_r385; assert_in_epsilon(23.8022579669393, worksheet.output_r385, 0.001); end
  def test_output_w385; assert_in_epsilon(25.0471976894731, worksheet.output_w385, 0.001); end
  def test_output_ab385; assert_in_epsilon(21.6536478159777, worksheet.output_ab385, 0.001); end
  def test_output_am385; assert_in_delta(0.012603525620810352, worksheet.output_am385, 0.001); end
  def test_output_an385; assert_in_delta(0.6503551248470163, worksheet.output_an385, 0.001); end
  def test_output_aq385; assert_equal("Total", worksheet.output_aq385); end
  def test_output_ar385; assert_in_epsilon(99.48171309048487, worksheet.output_ar385, 0.001); end
  def test_output_as385; assert_in_epsilon(97.27761846916742, worksheet.output_as385, 0.001); end
  def test_output_at385; assert_in_epsilon(79.3075785244508, worksheet.output_at385, 0.001); end
  def test_output_au385; assert_in_epsilon(60.94074235158195, worksheet.output_au385, 0.001); end
  def test_output_av385; assert_in_epsilon(45.920320505973, worksheet.output_av385, 0.001); end
  def test_output_aw385; assert_in_epsilon(31.722728429066603, worksheet.output_aw385, 0.001); end
  def test_output_ax385; assert_in_epsilon(20.81889387264989, worksheet.output_ax385, 0.001); end
  def test_output_ay385; assert_in_epsilon(13.213741617880093, worksheet.output_ay385, 0.001); end
  def test_output_az385; assert_in_epsilon(7.1198517004351745, worksheet.output_az385, 0.001); end
  def test_output_ba385; assert_in_delta(0.38234288951662165, worksheet.output_ba385, 0.001); end
  def test_output_bb385; assert_in_delta(-0.829432168375144, worksheet.output_bb385, 0.001); end
  def test_output_bc385; assert_in_delta(0.8421838084987754, worksheet.output_bc385, 0.001); end
  def test_output_c386; assert_equal("X3", worksheet.output_c386); end
  def test_output_d386; assert_equal("E", worksheet.output_d386); end
  def test_output_e386; assert_equal("Including CCS", worksheet.output_e386); end
  def test_output_ac385; assert_in_epsilon(26.49882423338907, worksheet.output_ac385, 0.001); end
  def test_output_ac386; assert_in_epsilon(26.49882423338907, worksheet.output_ac386, 0.001); end
  def test_output_ad385; assert_in_epsilon(16.308332771039726, worksheet.output_ad385, 0.001); end
  def test_output_ad386; assert_in_epsilon(16.308332771039726, worksheet.output_ad386, 0.001); end
  def test_output_ae385; assert_in_epsilon(18.475898213624966, worksheet.output_ae385, 0.001); end
  def test_output_ae386; assert_in_epsilon(18.475898213624966, worksheet.output_ae386, 0.001); end
  def test_output_af385; assert_in_epsilon(15.405741096488136, worksheet.output_af385, 0.001); end
  def test_output_af386; assert_in_epsilon(13.716237894454821, worksheet.output_af386, 0.001); end
  def test_output_ag385; assert_in_epsilon(21.171386466078975, worksheet.output_ag385, 0.001); end
  def test_output_ag386; assert_in_epsilon(17.792380062012345, worksheet.output_ag386, 0.001); end
  def test_output_ah385; assert_in_epsilon(26.31017267261537, worksheet.output_ah385, 0.001); end
  def test_output_ah386; assert_in_epsilon(21.241663066515425, worksheet.output_ah386, 0.001); end
  def test_output_ai385; assert_in_epsilon(31.826185220052086, worksheet.output_ai385, 0.001); end
  def test_output_ai386; assert_in_epsilon(25.068172411918827, worksheet.output_ai386, 0.001); end
  def test_output_aj385; assert_in_epsilon(37.034255689027006, worksheet.output_aj385, 0.001); end
  def test_output_aj386; assert_in_epsilon(28.586739678860432, worksheet.output_aj386, 0.001); end
  def test_output_ak385; assert_in_epsilon(43.732470375993955, worksheet.output_ak385, 0.001); end
  def test_output_ak386; assert_in_epsilon(33.59545116379407, worksheet.output_ak386, 0.001); end
  def test_output_am386; assert_in_delta(0.0059498884953126385, worksheet.output_am386, 0.001); end
  def test_output_an386; assert_in_delta(0.26780912495970677, worksheet.output_an386, 0.001); end
  def test_output_c387; assert_equal("1A", worksheet.output_c387); end
  def test_output_d387; assert_equal("XI", worksheet.output_d387); end
  def test_output_e387; assert_equal("Fuel Combustion Industry and Construction (+ petroleum refining)", worksheet.output_e387); end
  def test_output_f387; assert_equal("Mt CO2e", worksheet.output_f387); end
  def test_output_g387; assert_equal("Public CHP emissions of gaz combustion still to add here", worksheet.output_g387); end
  def test_output_h387; assert_in_epsilon(37.1522, worksheet.output_h387, 0.001); end
  def test_output_m387; assert_in_epsilon(36.812356670604906, worksheet.output_m387, 0.001); end
  def test_output_r387; assert_in_epsilon(38.02177403973981, worksheet.output_r387, 0.001); end
  def test_output_w387; assert_in_epsilon(33.18409861172254, worksheet.output_w387, 0.001); end
  def test_output_ab387; assert_in_epsilon(28.4845139912342, worksheet.output_ab387, 0.001); end
  def test_output_am387; assert_in_delta(-0.036793068443224275, worksheet.output_am387, 0.001); end
  def test_output_an387; assert_in_delta(-0.7767538540577555, worksheet.output_an387, 0.001); end
  def test_output_aq387; assert_equal("Agriculture, Waste & others", worksheet.output_aq387); end
  def test_output_ar387; assert_in_epsilon(17.988853785900357, worksheet.output_ar387, 0.001); end
  def test_output_as387; assert_in_epsilon(13.463808239851314, worksheet.output_as387, 0.001); end
  def test_output_at387; assert_in_epsilon(12.644488597003509, worksheet.output_at387, 0.001); end
  def test_output_au387; assert_in_epsilon(11.724205281645819, worksheet.output_au387, 0.001); end
  def test_output_av387; assert_in_epsilon(10.866970124380742, worksheet.output_av387, 0.001); end
  def test_output_aw387; assert_in_epsilon(10.114573658290949, worksheet.output_aw387, 0.001); end
  def test_output_ax387; assert_in_epsilon(9.68123427752107, worksheet.output_ax387, 0.001); end
  def test_output_ay387; assert_in_epsilon(9.284082437425935, worksheet.output_ay387, 0.001); end
  def test_output_az387; assert_in_epsilon(8.922238819803322, worksheet.output_az387, 0.001); end
  def test_output_ba387; assert_in_epsilon(8.593096825788756, worksheet.output_ba387, 0.001); end
  def test_output_bb387; assert_in_delta(-0.361763278805904, worksheet.output_bb387, 0.001); end
  def test_output_bc387; assert_in_delta(0.5223099299120428, worksheet.output_bc387, 0.001); end
  def test_output_c388; assert_equal("X3", worksheet.output_c388); end
  def test_output_d388; assert_equal("XI", worksheet.output_d388); end
  def test_output_e388; assert_equal("Including CCS", worksheet.output_e388); end
  def test_output_ac387; assert_in_epsilon(38.06264177812309, worksheet.output_ac387, 0.001); end
  def test_output_ac388; assert_in_epsilon(38.06264177812309, worksheet.output_ac388, 0.001); end
  def test_output_ad387; assert_in_epsilon(32.807277412760335, worksheet.output_ad387, 0.001); end
  def test_output_ad388; assert_in_epsilon(32.835944420731714, worksheet.output_ad388, 0.001); end
  def test_output_ae387; assert_in_epsilon(24.775201951579724, worksheet.output_ae387, 0.001); end
  def test_output_ae388; assert_in_epsilon(24.828541714598927, worksheet.output_ae388, 0.001); end
  def test_output_af387; assert_in_epsilon(19.861334064716623, worksheet.output_af387, 0.001); end
  def test_output_af388; assert_in_epsilon(19.83193251148263, worksheet.output_af388, 0.001); end
  def test_output_ag387; assert_in_epsilon(15.936453249209663, worksheet.output_ag387, 0.001); end
  def test_output_ag388; assert_in_epsilon(12.635731668730035, worksheet.output_ag388, 0.001); end
  def test_output_ah387; assert_in_epsilon(13.51502577483433, worksheet.output_ah387, 0.001); end
  def test_output_ah388; assert_in_epsilon(8.112238174614662, worksheet.output_ah388, 0.001); end
  def test_output_ai387; assert_in_epsilon(11.558439410983038, worksheet.output_ai387, 0.001); end
  def test_output_ai388; assert_in_epsilon(5.348593560438966, worksheet.output_ai388, 0.001); end
  def test_output_aj387; assert_in_epsilon(9.90053966081105, worksheet.output_aj387, 0.001); end
  def test_output_aj388; assert_in_epsilon(3.2714439161956568, worksheet.output_aj388, 0.001); end
  def test_output_ak387; assert_in_epsilon(8.49733808134624, worksheet.output_ak387, 0.001); end
  def test_output_ak388; assert_in_delta(-0.18556957981810562, worksheet.output_ak388, 0.001); end
  def test_output_am388; assert_equal("", worksheet.output_am388); end
  def test_output_an388; assert_in_epsilon(-1.0048753730994249, worksheet.output_an388, 0.001); end
  def test_output_aq388; assert_equal("Building", worksheet.output_aq388); end
  def test_output_ar388; assert_in_epsilon(24.90969851232879, worksheet.output_ar388, 0.001); end
  def test_output_as388; assert_in_epsilon(30.31400519970225, worksheet.output_as388, 0.001); end
  def test_output_at388; assert_in_epsilon(19.281157902440484, worksheet.output_at388, 0.001); end
  def test_output_au388; assert_in_epsilon(15.22243486369525, worksheet.output_au388, 0.001); end
  def test_output_av388; assert_in_epsilon(11.032923275453903, worksheet.output_av388, 0.001); end
  def test_output_aw388; assert_in_epsilon(9.113605705764723, worksheet.output_aw388, 0.001); end
  def test_output_ax388; assert_in_epsilon(7.439742671047076, worksheet.output_ax388, 0.001); end
  def test_output_ay388; assert_in_epsilon(6.21608337279475, worksheet.output_ay388, 0.001); end
  def test_output_az388; assert_in_epsilon(5.40639937398889, worksheet.output_az388, 0.001); end
  def test_output_ba388; assert_in_epsilon(4.824881698990698, worksheet.output_ba388, 0.001); end
  def test_output_bb388; assert_in_delta(-0.8408365484136656, worksheet.output_bb388, 0.001); end
  def test_output_bc388; assert_in_delta(0.8063050945155891, worksheet.output_bc388, 0.001); end
  def test_output_c389; assert_equal("1A", worksheet.output_c389); end
  def test_output_d389; assert_equal("XII", worksheet.output_d389); end
  def test_output_e389; assert_equal("Fuel Combustion Transport", worksheet.output_e389); end
  def test_output_f389; assert_equal("Mt CO2e", worksheet.output_f389); end
  def test_output_h389; assert_in_epsilon(20.4724552687413, worksheet.output_h389, 0.001); end
  def test_output_m389; assert_in_epsilon(22.5119304822935, worksheet.output_m389, 0.001); end
  def test_output_r389; assert_in_epsilon(24.6590970868922, worksheet.output_r389, 0.001); end
  def test_output_w389; assert_in_epsilon(26.255467159611, worksheet.output_w389, 0.001); end
  def test_output_ab389; assert_in_epsilon(24.2574527403487, worksheet.output_ab389, 0.001); end
  def test_output_am389; assert_in_delta(-0.04492054940064216, worksheet.output_am389, 0.001); end
  def test_output_an389; assert_in_delta(-0.8409330195347342, worksheet.output_an389, 0.001); end
  def test_output_h380; assert_in_epsilon(137.31074405890863, worksheet.output_h380, 0.001); end
  def test_output_ao389; assert_in_delta(-0.8355384282977038, worksheet.output_ao389, 0.001); end
  def test_output_aq389; assert_equal("Transport", worksheet.output_aq389); end
  def test_output_ar389; assert_in_epsilon(20.4724552687413, worksheet.output_ar389, 0.001); end
  def test_output_as389; assert_in_epsilon(24.2574527403487, worksheet.output_as389, 0.001); end
  def test_output_at389; assert_in_epsilon(20.96344103197479, worksheet.output_at389, 0.001); end
  def test_output_au389; assert_in_epsilon(16.439978158273895, worksheet.output_au389, 0.001); end
  def test_output_av389; assert_in_epsilon(12.533024886679279, worksheet.output_av389, 0.001); end
  def test_output_aw389; assert_in_epsilon(8.799870945534016, worksheet.output_aw389, 0.001); end
  def test_output_ax389; assert_in_epsilon(5.678718648663463, worksheet.output_ax389, 0.001); end
  def test_output_ay389; assert_in_epsilon(3.465872543299373, worksheet.output_ay389, 0.001); end
  def test_output_az389; assert_in_epsilon(1.5357078133380329, worksheet.output_az389, 0.001); end
  def test_output_ba389; assert_in_delta(0, (worksheet.output_ba389||0), 0.001); end
  def test_output_bb389; assert_in_delta(-1, worksheet.output_bb389, 0.001); end
  def test_output_bc389; assert_in_delta(1, worksheet.output_bc389, 0.001); end
  def test_output_c390; assert_equal("X3", worksheet.output_c390); end
  def test_output_d390; assert_equal("XII", worksheet.output_d390); end
  def test_output_e390; assert_equal("Including CCS", worksheet.output_e390); end
  def test_output_ac389; assert_in_epsilon(23.67931677381081, worksheet.output_ac389, 0.001); end
  def test_output_ac390; assert_in_epsilon(23.67931677381081, worksheet.output_ac390, 0.001); end
  def test_output_ad389; assert_in_epsilon(22.123771920900133, worksheet.output_ad389, 0.001); end
  def test_output_ad390; assert_in_epsilon(22.123771920900133, worksheet.output_ad390, 0.001); end
  def test_output_ae389; assert_in_epsilon(18.39777584472694, worksheet.output_ae389, 0.001); end
  def test_output_ae390; assert_in_epsilon(18.39777584472694, worksheet.output_ae390, 0.001); end
  def test_output_af389; assert_in_epsilon(14.816966554810577, worksheet.output_af389, 0.001); end
  def test_output_af390; assert_in_epsilon(14.816966554810577, worksheet.output_af390, 0.001); end
  def test_output_ag389; assert_in_epsilon(11.409022798960038, worksheet.output_ag389, 0.001); end
  def test_output_ag390; assert_in_epsilon(11.409022798960038, worksheet.output_ag390, 0.001); end
  def test_output_ah389; assert_in_epsilon(8.613080687384208, worksheet.output_ah389, 0.001); end
  def test_output_ah390; assert_in_epsilon(8.613080687384208, worksheet.output_ah390, 0.001); end
  def test_output_ai389; assert_in_epsilon(6.718493172015233, worksheet.output_ai389, 0.001); end
  def test_output_ai390; assert_in_epsilon(6.718493172015233, worksheet.output_ai390, 0.001); end
  def test_output_aj389; assert_in_epsilon(5.106587032049007, worksheet.output_aj389, 0.001); end
  def test_output_aj390; assert_in_epsilon(5.106587032049007, worksheet.output_aj390, 0.001); end
  def test_output_ak389; assert_in_epsilon(3.766597418690606, worksheet.output_ak389, 0.001); end
  def test_output_ak390; assert_in_epsilon(3.766597418690606, worksheet.output_ak390, 0.001); end
  def test_output_am390; assert_in_delta(-0.04492054940064216, worksheet.output_am390, 0.001); end
  def test_output_an390; assert_in_delta(-0.8409330195347342, worksheet.output_an390, 0.001); end
  def test_output_ao390; assert_in_delta(-0.07475993569336759, worksheet.output_ao390, 0.001); end
  def test_output_aq390; assert_equal("Industry", worksheet.output_aq390); end
  def test_output_ar390; assert_in_epsilon(54.09955930941479, worksheet.output_ar390, 0.001); end
  def test_output_as390; assert_in_epsilon(42.706160529116474, worksheet.output_as390, 0.001); end
  def test_output_at390; assert_in_epsilon(39.06297959003554, worksheet.output_at390, 0.001); end
  def test_output_au390; assert_in_epsilon(29.27832932961281, worksheet.output_au390, 0.001); end
  def test_output_av390; assert_in_epsilon(22.35437234383982, worksheet.output_av390, 0.001); end
  def test_output_aw390; assert_in_epsilon(13.809251777767866, worksheet.output_aw390, 0.001); end
  def test_output_ax390; assert_in_epsilon(7.700432552939351, worksheet.output_ax390, 0.001); end
  def test_output_ay390; assert_in_epsilon(3.53178570178597, worksheet.output_ay390, 0.001); end
  def test_output_az390; assert_in_delta(0.17774451310825157, worksheet.output_az390, 0.001); end
  def test_output_ba390; assert_in_epsilon(-4.442538809474076, worksheet.output_ba390, 0.001); end
  def test_output_bb390; assert_in_epsilon(-1.1040257132561757, worksheet.output_bb390, 0.001); end
  def test_output_bc390; assert_in_epsilon(1.0821178373018827, worksheet.output_bc390, 0.001); end
  def test_output_c391; assert_equal("1A", worksheet.output_c391); end
  def test_output_d391; assert_equal("BR", worksheet.output_d391); end
  def test_output_e391; assert_equal("Fuel combustion Building Residential", worksheet.output_e391); end
  def test_output_f391; assert_equal("Mt CO2e", worksheet.output_f391); end
  def test_output_h391; assert_in_epsilon(20.529262677925356, worksheet.output_h391, 0.001); end
  def test_output_m391; assert_in_epsilon(22.3681085149058, worksheet.output_m391, 0.001); end
  def test_output_r391; assert_in_epsilon(21.089326200227, worksheet.output_r391, 0.001); end
  def test_output_w391; assert_in_epsilon(22.1740260239385, worksheet.output_w391, 0.001); end
  def test_output_ab391; assert_in_epsilon(23.419691425965595, worksheet.output_ab391, 0.001); end
  def test_output_am391; assert_in_delta(-0.07117769193629564, worksheet.output_am391, 0.001); end
  def test_output_an391; assert_in_delta(-0.9478438528049636, worksheet.output_an391, 0.001); end
  def test_output_aq391; assert_equal("Energy", worksheet.output_aq391); end
  def test_output_ar391; assert_in_epsilon(25.6221067252624, worksheet.output_ar391, 0.001); end
  def test_output_as391; assert_in_epsilon(21.6536478159777, worksheet.output_as391, 0.001); end
  def test_output_at391; assert_in_epsilon(8.487854562145989, worksheet.output_at391, 0.001); end
  def test_output_au391; assert_in_epsilon(9.16352303501638, worksheet.output_au391, 0.001); end
  def test_output_av391; assert_in_epsilon(2.087476354294421, worksheet.output_av391, 0.001); end
  def test_output_aw391; assert_in_epsilon(3.7790929035126553, worksheet.output_aw391, 0.001); end
  def test_output_ax391; assert_in_epsilon(5.697866241872956, worksheet.output_ax391, 0.001); end
  def test_output_ay391; assert_in_epsilon(8.015878310040154, worksheet.output_ay391, 0.001); end
  def test_output_az391; assert_in_epsilon(10.055528905765703, worksheet.output_az391, 0.001); end
  def test_output_ba391; assert_in_epsilon(13.606901064234478, worksheet.output_ba391, 0.001); end
  def test_output_bb391; assert_in_delta(-0.942609703980806, worksheet.output_bb391, 0.001); end
  def test_output_bc391; assert_in_delta(0.951498552738871, worksheet.output_bc391, 0.001); end
  def test_output_c392; assert_equal("X3", worksheet.output_c392); end
  def test_output_d392; assert_equal("BR", worksheet.output_d392); end
  def test_output_e392; assert_equal("Including CCS", worksheet.output_e392); end
  def test_output_ac391; assert_in_epsilon(17.916009493182973, worksheet.output_ac391, 0.001); end
  def test_output_ac392; assert_in_epsilon(17.916009493182973, worksheet.output_ac392, 0.001); end
  def test_output_ad391; assert_in_epsilon(15.91185820177884, worksheet.output_ad391, 0.001); end
  def test_output_ad392; assert_in_epsilon(15.91185820177884, worksheet.output_ad392, 0.001); end
  def test_output_ae391; assert_in_epsilon(12.856413615175692, worksheet.output_ae391, 0.001); end
  def test_output_ae392; assert_in_epsilon(12.856413615175692, worksheet.output_ae392, 0.001); end
  def test_output_af391; assert_in_epsilon(9.636176382188049, worksheet.output_af391, 0.001); end
  def test_output_af392; assert_in_epsilon(9.636176382188049, worksheet.output_af392, 0.001); end
  def test_output_ag391; assert_in_epsilon(7.012913891213404, worksheet.output_ag391, 0.001); end
  def test_output_ag392; assert_in_epsilon(7.012913891213404, worksheet.output_ag392, 0.001); end
  def test_output_ah391; assert_in_epsilon(4.997948851708848, worksheet.output_ah391, 0.001); end
  def test_output_ah392; assert_in_epsilon(4.997948851708848, worksheet.output_ah392, 0.001); end
  def test_output_ai391; assert_in_epsilon(3.3268895233643683, worksheet.output_ai391, 0.001); end
  def test_output_ai392; assert_in_epsilon(3.3268895233643683, worksheet.output_ai392, 0.001); end
  def test_output_aj391; assert_in_epsilon(1.97497376684353, worksheet.output_aj391, 0.001); end
  def test_output_aj392; assert_in_epsilon(1.97497376684353, worksheet.output_aj392, 0.001); end
  def test_output_ak391; assert_in_delta(0.9344300282741206, worksheet.output_ak391, 0.001); end
  def test_output_ak392; assert_in_delta(0.9344300282741206, worksheet.output_ak392, 0.001); end
  def test_output_am392; assert_in_delta(-0.07117769193629564, worksheet.output_am392, 0.001); end
  def test_output_an392; assert_in_delta(-0.9478438528049636, worksheet.output_an392, 0.001); end
  def test_output_c393; assert_equal("1A", worksheet.output_c393); end
  def test_output_d393; assert_equal("BC", worksheet.output_d393); end
  def test_output_e393; assert_equal("Fuel combustion Building Commercial", worksheet.output_e393); end
  def test_output_f393; assert_equal("Mt CO2e", worksheet.output_f393); end
  def test_output_h393; assert_in_epsilon(4.3804358344034355, worksheet.output_h393, 0.001); end
  def test_output_m393; assert_in_epsilon(5.654636373164421, worksheet.output_m393, 0.001); end
  def test_output_r393; assert_in_epsilon(6.105361410205841, worksheet.output_r393, 0.001); end
  def test_output_w393; assert_in_epsilon(6.380639385391856, worksheet.output_w393, 0.001); end
  def test_output_ab393; assert_in_epsilon(6.8943137737366555, worksheet.output_ab393, 0.001); end
  def test_output_am393; assert_in_delta(-0.08237420706153609, worksheet.output_am393, 0.001); end
  def test_output_an393; assert_in_delta(-0.9678911689871544, worksheet.output_an393, 0.001); end
  def test_output_aq393; assert_equal("Energy demand (wrt 2010 (1990))", worksheet.output_aq393); end
  def test_output_ar393; assert_in_epsilon(328.53220102671514, worksheet.output_ar393, 0.001); end
  def test_output_as393; assert_in_epsilon(419.7060143262192, worksheet.output_as393, 0.001); end
  def test_output_at393; assert_in_epsilon(389.4723058179792, worksheet.output_at393, 0.001); end
  def test_output_au393; assert_in_epsilon(341.6892952990192, worksheet.output_au393, 0.001); end
  def test_output_av393; assert_in_epsilon(297.8392434121617, worksheet.output_av393, 0.001); end
  def test_output_aw393; assert_in_epsilon(258.77810022787844, worksheet.output_aw393, 0.001); end
  def test_output_ax393; assert_in_epsilon(227.7507557441978, worksheet.output_ax393, 0.001); end
  def test_output_ay393; assert_in_epsilon(202.47684494174587, worksheet.output_ay393, 0.001); end
  def test_output_az393; assert_in_epsilon(179.55476996025322, worksheet.output_az393, 0.001); end
  def test_output_ba393; assert_in_epsilon(159.64006439727763, worksheet.output_ba393, 0.001); end
  def test_output_bb393; assert_in_delta(-0.61963836840995, worksheet.output_bb393, 0.001); end
  def test_output_bc393; assert_in_delta(0.5140809214488651, worksheet.output_bc393, 0.001); end
  def test_output_c394; assert_equal("X3", worksheet.output_c394); end
  def test_output_d394; assert_equal("BC", worksheet.output_d394); end
  def test_output_e394; assert_equal("Including CCS", worksheet.output_e394); end
  def test_output_ac393; assert_in_epsilon(6.164316660333802, worksheet.output_ac393, 0.001); end
  def test_output_ac394; assert_in_epsilon(6.164316660333802, worksheet.output_ac394, 0.001); end
  def test_output_ad393; assert_in_epsilon(5.705614499206807, worksheet.output_ad393, 0.001); end
  def test_output_ad394; assert_in_epsilon(5.705614499206807, worksheet.output_ad394, 0.001); end
  def test_output_ae393; assert_in_epsilon(4.438866289625345, worksheet.output_ae393, 0.001); end
  def test_output_ae394; assert_in_epsilon(4.438866289625345, worksheet.output_ae394, 0.001); end
  def test_output_af393; assert_in_epsilon(3.315743043010218, worksheet.output_af393, 0.001); end
  def test_output_af394; assert_in_epsilon(3.315743043010218, worksheet.output_af394, 0.001); end
  def test_output_ag393; assert_in_epsilon(2.417216991040649, worksheet.output_ag393, 0.001); end
  def test_output_ag394; assert_in_epsilon(2.417216991040649, worksheet.output_ag394, 0.001); end
  def test_output_ah393; assert_in_epsilon(1.6841078421696365, worksheet.output_ah393, 0.001); end
  def test_output_ah394; assert_in_epsilon(1.6841078421696365, worksheet.output_ah394, 0.001); end
  def test_output_ai393; assert_in_epsilon(1.109786362473801, worksheet.output_ai393, 0.001); end
  def test_output_ai394; assert_in_epsilon(1.109786362473801, worksheet.output_ai394, 0.001); end
  def test_output_aj393; assert_in_delta(0.6712363128520759, worksheet.output_aj393, 0.001); end
  def test_output_aj394; assert_in_delta(0.6712363128520759, worksheet.output_aj394, 0.001); end
  def test_output_ak393; assert_in_delta(0.19792900195632646, worksheet.output_ak393, 0.001); end
  def test_output_ak394; assert_in_delta(0.19792900195632646, worksheet.output_ak394, 0.001); end
  def test_output_am394; assert_in_delta(-0.08237420706153609, worksheet.output_am394, 0.001); end
  def test_output_an394; assert_in_delta(-0.9678911689871544, worksheet.output_an394, 0.001); end
  def test_output_aq394; assert_equal("Biomass use ", worksheet.output_aq394); end
  def test_output_ar394; assert_in_epsilon(5.813220292196417, worksheet.output_ar394, 0.001); end
  def test_output_as394; assert_in_epsilon(39.17302801717402, worksheet.output_as394, 0.001); end
  def test_output_at394; assert_in_epsilon(49.14885646545613, worksheet.output_at394, 0.001); end
  def test_output_au394; assert_in_epsilon(62.09028658916286, worksheet.output_au394, 0.001); end
  def test_output_av394; assert_in_epsilon(71.23949000900316, worksheet.output_av394, 0.001); end
  def test_output_aw394; assert_in_epsilon(77.71318708681505, worksheet.output_aw394, 0.001); end
  def test_output_ax394; assert_in_epsilon(83.43099500278001, worksheet.output_ax394, 0.001); end
  def test_output_ay394; assert_in_epsilon(88.9372132761041, worksheet.output_ay394, 0.001); end
  def test_output_az394; assert_in_epsilon(94.32864206746488, worksheet.output_az394, 0.001); end
  def test_output_ba394; assert_in_epsilon(99.69565140273461, worksheet.output_ba394, 0.001); end
  def test_output_bb394; assert_in_epsilon(99.69565140273461, worksheet.output_bb394, 0.001); end
  def test_output_c395; assert_equal("1A", worksheet.output_c395); end
  def test_output_e395; assert_equal("Fuel combustion Agriculture", worksheet.output_e395); end
  def test_output_h395; assert_in_epsilon(2.806, worksheet.output_h395, 0.001); end
  def test_output_m395; assert_in_epsilon(2.798, worksheet.output_m395, 0.001); end
  def test_output_r395; assert_in_epsilon(2.424, worksheet.output_r395, 0.001); end
  def test_output_w395; assert_in_epsilon(2.4673, worksheet.output_w395, 0.001); end
  def test_output_ab395; assert_in_epsilon(2.287, worksheet.output_ab395, 0.001); end
  def test_output_ac395; assert_in_epsilon(2.533402852827276, worksheet.output_ac395, 0.001); end
  def test_output_ad395; assert_in_epsilon(2.4838524557043367, worksheet.output_ad395, 0.001); end
  def test_output_ae395; assert_in_epsilon(2.4376927564185378, worksheet.output_ae395, 0.001); end
  def test_output_af395; assert_in_epsilon(2.3946917319692527, worksheet.output_af395, 0.001); end
  def test_output_ag395; assert_in_epsilon(2.35463323652197, worksheet.output_ag395, 0.001); end
  def test_output_ah395; assert_in_epsilon(2.3173159149453073, worksheet.output_ah395, 0.001); end
  def test_output_ai395; assert_in_epsilon(2.2825521906938877, worksheet.output_ai395, 0.001); end
  def test_output_aj395; assert_in_epsilon(2.2501673229496686, worksheet.output_aj395, 0.001); end
  def test_output_ak395; assert_in_epsilon(2.2199985282824013, worksheet.output_ak395, 0.001); end
  def test_output_am395; assert_in_delta(-0.0032959779798689137, worksheet.output_am395, 0.001); end
  def test_output_an395; assert_in_delta(-0.12370883856671899, worksheet.output_an395, 0.001); end
  def test_output_aq395; assert_equal("CCS", worksheet.output_aq395); end
  def test_output_ar395; assert_in_delta(0, (worksheet.output_ar395||0), 0.001); end
  def test_output_ac405; assert_in_delta(0, (worksheet.output_ac405||0), 0.001); end
  def test_output_as395; assert_in_delta(0, (worksheet.output_as395||0), 0.001); end
  def test_output_ad405; assert_in_delta(0.028667007971375336, worksheet.output_ad405, 0.001); end
  def test_output_at395; assert_in_delta(0.028667007971375336, worksheet.output_at395, 0.001); end
  def test_output_ae405; assert_in_delta(0.05333976301920418, worksheet.output_ae405, 0.001); end
  def test_output_au395; assert_in_delta(0.05333976301920418, worksheet.output_au395, 0.001); end
  def test_output_af405; assert_in_epsilon(-1.718904755267308, worksheet.output_af405, 0.001); end
  def test_output_av395; assert_in_epsilon(-1.718904755267308, worksheet.output_av395, 0.001); end
  def test_output_ag405; assert_in_epsilon(-6.679727984546258, worksheet.output_ag405, 0.001); end
  def test_output_aw395; assert_in_epsilon(-6.679727984546258, worksheet.output_aw395, 0.001); end
  def test_output_ah405; assert_in_epsilon(-10.471297206319612, worksheet.output_ah405, 0.001); end
  def test_output_ax395; assert_in_epsilon(-10.471297206319612, worksheet.output_ax395, 0.001); end
  def test_output_ai405; assert_in_epsilon(-12.96785865867733, worksheet.output_ai405, 0.001); end
  def test_output_ay395; assert_in_epsilon(-12.96785865867733, worksheet.output_ay395, 0.001); end
  def test_output_aj405; assert_in_epsilon(-15.076611754781968, worksheet.output_aj405, 0.001); end
  def test_output_az395; assert_in_epsilon(-15.076611754781968, worksheet.output_az395, 0.001); end
  def test_output_ak405; assert_in_epsilon(-18.81992687336423, worksheet.output_ak405, 0.001); end
  def test_output_ba395; assert_in_epsilon(-18.81992687336423, worksheet.output_ba395, 0.001); end
  def test_output_bb395; assert_in_epsilon(-18.81992687336423, worksheet.output_bb395, 0.001); end
  def test_output_c396; assert_equal("X3", worksheet.output_c396); end
  def test_output_e396; assert_equal("Including CCS", worksheet.output_e396); end
  def test_output_am396; assert_equal("", worksheet.output_am396); end
  def test_output_an396; assert_equal("", worksheet.output_an396); end
  def test_output_aq396; assert_equal("Electricity", worksheet.output_aq396); end
  def test_output_e397; assert_equal("Fuel Combustion Others", worksheet.output_e397); end
  def test_output_f397; assert_equal("Mt CO2e", worksheet.output_f397); end
  def test_output_h397; assert_in_delta(0.162957381997088, worksheet.output_h397, 0.001); end
  def test_output_m397; assert_in_delta(0.10488090628675, worksheet.output_m397, 0.001); end
  def test_output_r397; assert_in_delta(0.0936700427184255, worksheet.output_r397, 0.001); end
  def test_output_w397; assert_in_delta(0.0932368128021564, worksheet.output_w397, 0.001); end
  def test_output_ab397; assert_in_delta(0.0598968715282414, worksheet.output_ab397, 0.001); end
  def test_output_ac384; assert_in_epsilon(112.32110893883974, worksheet.output_ac384, 0.001); end
  def test_output_ac397; assert_in_delta(0, (worksheet.output_ac397||0), 0.001); end
  def test_output_ad384; assert_in_epsilon(92.85685480568584, worksheet.output_ad384, 0.001); end
  def test_output_ad397; assert_in_delta(0, (worksheet.output_ad397||0), 0.001); end
  def test_output_ae384; assert_in_epsilon(78.94415591473266, worksheet.output_ae384, 0.001); end
  def test_output_ae397; assert_in_delta(0, (worksheet.output_ae397||0), 0.001); end
  def test_output_af384; assert_in_epsilon(63.035961141213605, worksheet.output_af384, 0.001); end
  def test_output_af397; assert_in_delta(0, (worksheet.output_af397||0), 0.001); end
  def test_output_ag384; assert_in_epsilon(57.94699339650273, worksheet.output_ag384, 0.001); end
  def test_output_ag397; assert_in_delta(0, (worksheet.output_ag397||0), 0.001); end
  def test_output_ah384; assert_in_epsilon(55.12033582871239, worksheet.output_ah384, 0.001); end
  def test_output_ah397; assert_in_delta(0, (worksheet.output_ah397||0), 0.001); end
  def test_output_ai384; assert_in_epsilon(54.53979368888852, worksheet.output_ai384, 0.001); end
  def test_output_ai397; assert_in_delta(0, (worksheet.output_ai397||0), 0.001); end
  def test_output_aj384; assert_in_epsilon(54.68759246158267, worksheet.output_aj384, 0.001); end
  def test_output_aj397; assert_in_delta(0, (worksheet.output_aj397||0), 0.001); end
  def test_output_ak384; assert_in_epsilon(57.12876490626125, worksheet.output_ak384, 0.001); end
  def test_output_ak397; assert_in_delta(0, (worksheet.output_ak397||0), 0.001); end
  def test_output_am397; assert_equal("", worksheet.output_am397); end
  def test_output_an397; assert_equal("", worksheet.output_an397); end
  def test_output_aq397; assert_equal("Consumption in 2050", worksheet.output_aq397); end
  def test_output_ar397; assert_in_epsilon(59.108000000000004, worksheet.output_ar397, 0.001); end
  def test_output_ac91; assert_in_delta(0.30549824652607716, worksheet.output_ac91, 0.001); end
  def test_output_ac93; assert_in_delta(0, (worksheet.output_ac93||0), 0.001); end
  def test_output_ac94; assert_in_epsilon(5.12218764955876, worksheet.output_ac94, 0.001); end
  def test_output_ac97; assert_in_epsilon(34.451353359295624, worksheet.output_ac97, 0.001); end
  def test_output_ac110; assert_in_epsilon(20.887949071340362, worksheet.output_ac110, 0.001); end
  def test_output_ac113; assert_in_delta(0.3, worksheet.output_ac113, 0.001); end
  def test_output_ac118; assert_in_delta(0, (worksheet.output_ac118||0), 0.001); end
  def test_output_ac120; assert_in_epsilon(1.954808675691079, worksheet.output_ac120, 0.001); end
  def test_output_ac124; assert_in_delta(0, (worksheet.output_ac124||0), 0.001); end
  def test_output_ac125; assert_in_epsilon(4.635618867363156, worksheet.output_ac125, 0.001); end
  def test_output_ac126; assert_in_epsilon(78.64036529018685, worksheet.output_ac126, 0.001); end
  def test_output_as397; assert_in_epsilon(78.64036529018685, worksheet.output_as397, 0.001); end
  def test_output_at397; assert_in_epsilon(79.84818987361264, worksheet.output_at397, 0.001); end
  def test_output_au397; assert_in_epsilon(83.75463776374887, worksheet.output_au397, 0.001); end
  def test_output_av397; assert_in_epsilon(84.76439218440949, worksheet.output_av397, 0.001); end
  def test_output_aw397; assert_in_epsilon(84.82905625912161, worksheet.output_aw397, 0.001); end
  def test_output_ax397; assert_in_epsilon(83.65639738241687, worksheet.output_ax397, 0.001); end
  def test_output_ay397; assert_in_epsilon(82.43092829522658, worksheet.output_ay397, 0.001); end
  def test_output_az397; assert_in_epsilon(80.6603769394497, worksheet.output_az397, 0.001); end
  def test_output_ba397; assert_in_epsilon(78.36345240817494, worksheet.output_ba397, 0.001); end
  def test_output_bb397; assert_in_epsilon(78.36345240817494, worksheet.output_bb397, 0.001); end
  def test_output_c398; assert_equal("1B", worksheet.output_c398); end
  def test_output_e398; assert_equal("Fugitive Emissions from Fuels", worksheet.output_e398); end
  def test_output_f398; assert_equal("Mt CO2e", worksheet.output_f398); end
  def test_output_g398; assert_equal("assumed in the oxygen steel sectorin the model", worksheet.output_g398); end
  def test_output_h398; assert_in_delta(0.942497044154996, worksheet.output_h398, 0.001); end
  def test_output_m398; assert_in_delta(0.624198474011319, worksheet.output_m398, 0.001); end
  def test_output_r398; assert_in_delta(0.631207171178402, worksheet.output_r398, 0.001); end
  def test_output_w398; assert_in_delta(0.530428575760333, worksheet.output_w398, 0.001); end
  def test_output_ab398; assert_in_delta(0.547604979315071, worksheet.output_ab398, 0.001); end
  def test_output_am398; assert_in_delta(-1, worksheet.output_am398, 0.001); end
  def test_output_an398; assert_in_delta(-1, worksheet.output_an398, 0.001); end
  def test_output_aq398; assert_equal("Consumption wrt 2010 (1990)", worksheet.output_aq398); end
  def test_output_bb398; assert_in_delta(-0.0035212563038090616, worksheet.output_bb398, 0.001); end
  def test_output_bc398; assert_in_delta(0.32576728037109914, worksheet.output_bc398, 0.001); end
  def test_output_c399; assert_in_delta(1, worksheet.output_c399, 0.001); end
  def test_output_e399; assert_equal("Fuel Combustion", worksheet.output_e399); end
  def test_output_f399; assert_equal("Mt CO2e", worksheet.output_f399); end
  def test_output_h399; assert_in_epsilon(112.0929949782167, worksheet.output_h399, 0.001); end
  def test_output_m399; assert_in_epsilon(116.14628834504711, worksheet.output_m399, 0.001); end
  def test_output_r399; assert_in_epsilon(116.82704988224249, worksheet.output_r399, 0.001); end
  def test_output_w399; assert_in_epsilon(116.12823810468194, worksheet.output_w399, 0.001); end
  def test_output_ab399; assert_in_epsilon(107.60837340067793, worksheet.output_ab399, 0.001); end
  def test_output_am399; assert_in_delta(-0.016878867587881596, worksheet.output_am399, 0.001); end
  def test_output_an399; assert_in_delta(-0.4938476489801471, worksheet.output_an399, 0.001); end
  def test_output_aq399; assert_equal("Costs (in 2050)", worksheet.output_aq399); end
  def test_output_ar399; assert_equal("Total", worksheet.output_ar399); end
  def test_output_ba399; assert_in_epsilon(72264.26172113392, worksheet.output_ba399, 0.001); end
  def test_output_bb399; assert_in_epsilon(1.0333830946156428, worksheet.output_bb399, 0.001); end
  def test_output_c400; assert_in_epsilon(2, worksheet.output_c400, 0.001); end
  def test_output_e400; assert_equal("Industrial Processes", worksheet.output_e400); end
  def test_output_f400; assert_equal("Mt CO2e", worksheet.output_f400); end
  def test_output_h400; assert_in_epsilon(15.79145017425979, worksheet.output_h400, 0.001); end
  def test_output_m400; assert_in_epsilon(19.23047130572877, worksheet.output_m400, 0.001); end
  def test_output_r400; assert_in_epsilon(15.650006251592766, worksheet.output_r400, 0.001); end
  def test_output_w400; assert_in_epsilon(15.721018536807973, worksheet.output_w400, 0.001); end
  def test_output_ab400; assert_in_epsilon(13.4600670965672, worksheet.output_ab400, 0.001); end
  def test_output_am400; assert_in_delta(-0.026742156667579065, worksheet.output_am400, 0.001); end
  def test_output_an400; assert_in_delta(-0.6618444710913786, worksheet.output_an400, 0.001); end
  def test_output_ar400; assert_equal("Investments", worksheet.output_ar400); end
  def test_costs_n63; assert_in_epsilon(34394.8537328805, worksheet.costs_n63, 0.001); end
  def test_costs_n132; assert_in_epsilon(49884.07794792207, worksheet.costs_n132, 0.001); end
  def test_output_ak489; assert_in_epsilon(42139.46584040129, worksheet.output_ak489, 0.001); end
  def test_costs_n64; assert_in_epsilon(6189.854826177355, worksheet.costs_n64, 0.001); end
  def test_costs_n133; assert_in_epsilon(8282.259437863404, worksheet.costs_n133, 0.001); end
  def test_output_ak494; assert_in_epsilon(7236.05713202038, worksheet.output_ak494, 0.001); end
  def test_costs_n65; assert_in_epsilon(1812.1335477629095, worksheet.costs_n65, 0.001); end
  def test_costs_n134; assert_in_epsilon(2451.710094032172, worksheet.costs_n134, 0.001); end
  def test_output_ak499; assert_in_epsilon(2131.921820897541, worksheet.output_ak499, 0.001); end
  def test_costs_n69; assert_in_delta(0, (worksheet.costs_n69||0), 0.001); end
  def test_costs_n138; assert_in_delta(0, (worksheet.costs_n138||0), 0.001); end
  def test_output_ak504; assert_in_delta(0, (worksheet.output_ak504||0), 0.001); end
  def test_output_ak509; assert_in_epsilon(51507.44479331921, worksheet.output_ak509, 0.001); end
  def test_output_ba400; assert_in_epsilon(51507.44479331921, worksheet.output_ba400, 0.001); end
  def test_output_bb400; assert_in_epsilon(1.6099912531108913, worksheet.output_bb400, 0.001); end
  def test_output_c401; assert_in_epsilon(3, worksheet.output_c401, 0.001); end
  def test_output_e401; assert_equal("Solvent and Other Product Use", worksheet.output_e401); end
  def test_output_f401; assert_equal("Mt CO2e", worksheet.output_f401); end
  def test_output_g401; assert_equal("assumed in the chemical sector in the model", worksheet.output_g401); end
  def test_output_h401; assert_in_delta(0.213412091, worksheet.output_h401, 0.001); end
  def test_output_m401; assert_in_delta(0.203647463, worksheet.output_m401, 0.001); end
  def test_output_r401; assert_in_delta(0.217215357, worksheet.output_r401, 0.001); end
  def test_output_w401; assert_in_delta(0.214906818, worksheet.output_w401, 0.001); end
  def test_output_ab401; assert_in_delta(0.213974462, worksheet.output_ab401, 0.001); end
  def test_output_am401; assert_in_delta(-0.017179401454748944, worksheet.output_am401, 0.001); end
  def test_output_an401; assert_in_delta(-0.5000000000000006, worksheet.output_an401, 0.001); end
  def test_output_ar401; assert_equal("O&M", worksheet.output_ar401); end
  def test_costs_x63; assert_in_epsilon(496.68051368187236, worksheet.costs_x63, 0.001); end
  def test_costs_x132; assert_in_epsilon(1131.1044637428001, worksheet.costs_x132, 0.001); end
  def test_output_ak490; assert_in_epsilon(1627.7849774246724, worksheet.output_ak490, 0.001); end
  def test_costs_x64; assert_in_epsilon(2495.2108195590067, worksheet.costs_x64, 0.001); end
  def test_costs_x133; assert_in_epsilon(13578.37531311527, worksheet.costs_x133, 0.001); end
  def test_output_ak495; assert_in_epsilon(8036.793066337138, worksheet.output_ak495, 0.001); end
  def test_costs_x65; assert_in_delta(0, (worksheet.costs_x65||0), 0.001); end
  def test_costs_x134; assert_in_delta(0, (worksheet.costs_x134||0), 0.001); end
  def test_output_ak500; assert_in_delta(0, (worksheet.output_ak500||0), 0.001); end
  def test_costs_x69; assert_in_delta(0, (worksheet.costs_x69||0), 0.001); end
  def test_costs_x138; assert_in_delta(0, (worksheet.costs_x138||0), 0.001); end
  def test_output_ak505; assert_in_delta(0, (worksheet.output_ak505||0), 0.001); end
  def test_output_ak510; assert_in_epsilon(9664.57804376181, worksheet.output_ak510, 0.001); end
  def test_output_ba401; assert_in_epsilon(9664.57804376181, worksheet.output_ba401, 0.001); end
  def test_output_bb401; assert_in_delta(0.905599068997583, worksheet.output_bb401, 0.001); end
  def test_output_c402; assert_in_epsilon(4, worksheet.output_c402, 0.001); end
  def test_output_e402; assert_equal("Agriculture", worksheet.output_e402); end
  def test_output_f402; assert_equal("Mt CO2e", worksheet.output_f402); end
  def test_output_h402; assert_in_epsilon(11.85618007516327, worksheet.output_h402, 0.001); end
  def test_output_m402; assert_in_epsilon(11.982718812493207, worksheet.output_m402, 0.001); end
  def test_output_r402; assert_in_epsilon(11.0506551688113, worksheet.output_r402, 0.001); end
  def test_output_w402; assert_in_epsilon(9.983700195609668, worksheet.output_w402, 0.001); end
  def test_output_ab402; assert_in_epsilon(10.0418232537418, worksheet.output_ab402, 0.001); end
  def test_output_am402; assert_in_delta(-0.011302520212518763, worksheet.output_am402, 0.001); end
  def test_output_an402; assert_in_delta(-0.36534590700212055, worksheet.output_an402, 0.001); end
  def test_output_ar402; assert_equal("Fuel", worksheet.output_ar402); end
  def test_costs_ah63; assert_in_epsilon(1969.221988612825, worksheet.costs_ah63, 0.001); end
  def test_costs_ah132; assert_in_epsilon(2779.3641221082635, worksheet.costs_ah132, 0.001); end
  def test_output_ak491; assert_in_epsilon(2374.2930553605443, worksheet.output_ak491, 0.001); end
  def test_costs_ah64; assert_in_epsilon(3222.0879766157004, worksheet.costs_ah64, 0.001); end
  def test_costs_ah133; assert_in_epsilon(4402.21152646771, worksheet.costs_ah133, 0.001); end
  def test_output_ak496; assert_in_epsilon(3812.1497515417054, worksheet.output_ak496, 0.001); end
  def test_costs_ah65; assert_in_epsilon(2733.0016655780523, worksheet.costs_ah65, 0.001); end
  def test_costs_ah134; assert_in_epsilon(3697.5904887232473, worksheet.costs_ah134, 0.001); end
  def test_output_ak501; assert_in_epsilon(3215.2960771506496, worksheet.output_ak501, 0.001); end
  def test_costs_ah69; assert_in_epsilon(1491, worksheet.costs_ah69, 0.001); end
  def test_costs_ah138; assert_in_epsilon(1890, worksheet.costs_ah138, 0.001); end
  def test_output_ak506; assert_in_epsilon(1690.5, worksheet.output_ak506, 0.001); end
  def test_output_ak511; assert_in_epsilon(11092.238884052898, worksheet.output_ak511, 0.001); end
  def test_output_ba402; assert_in_epsilon(11092.238884052898, worksheet.output_ba402, 0.001); end
  def test_output_bb402; assert_in_delta(0.4068249340996794, worksheet.output_bb402, 0.001); end
  def test_output_c403; assert_in_epsilon(6, worksheet.output_c403, 0.001); end
  def test_output_e403; assert_equal("Waste", worksheet.output_e403); end
  def test_output_f403; assert_equal("Mt CO2e", worksheet.output_f403); end
  def test_output_h403; assert_in_epsilon(3.3266737107370887, worksheet.output_h403, 0.001); end
  def test_output_m403; assert_in_epsilon(2.9662255046909474, worksheet.output_m403, 0.001); end
  def test_output_r403; assert_in_epsilon(2.409408501765251, worksheet.output_r403, 0.001); end
  def test_output_w403; assert_in_epsilon(1.5746834316472123, worksheet.output_w403, 0.001); end
  def test_output_ab403; assert_in_epsilon(1.1349849861095138, worksheet.output_ab403, 0.001); end
  def test_output_am403; assert_in_delta(-1, worksheet.output_am403, 0.001); end
  def test_output_an403; assert_in_delta(-1, worksheet.output_an403, 0.001); end
  def test_output_c404; assert_in_epsilon(7, worksheet.output_c404, 0.001); end
  def test_output_e404; assert_equal("Other", worksheet.output_e404); end
  def test_output_f404; assert_equal("Mt CO2e", worksheet.output_f404); end
  def test_output_h404; assert_in_delta(0, (worksheet.output_h404||0), 0.001); end
  def test_output_m404; assert_in_delta(0, (worksheet.output_m404||0), 0.001); end
  def test_output_r404; assert_in_delta(0, (worksheet.output_r404||0), 0.001); end
  def test_output_w404; assert_in_delta(0, (worksheet.output_w404||0), 0.001); end
  def test_output_ab404; assert_in_delta(0, (worksheet.output_ab404||0), 0.001); end
  def test_output_am404; assert_equal("", worksheet.output_am404); end
  def test_output_an404; assert_equal("", worksheet.output_an404); end
  def test_output_b405; assert_equal("CCS", worksheet.output_b405); end
  def test_output_c405; assert_equal("X3", worksheet.output_c405); end
  def test_output_e405; assert_equal("Carbon capture", worksheet.output_e405); end
  def test_output_f405; assert_equal("Mt CO2e", worksheet.output_f405); end
  def test_output_h405; assert_in_delta(0, (worksheet.output_h405||0), 0.001); end
  def test_output_m405; assert_in_delta(0, (worksheet.output_m405||0), 0.001); end
  def test_output_r405; assert_in_delta(0, (worksheet.output_r405||0), 0.001); end
  def test_output_w405; assert_in_delta(0, (worksheet.output_w405||0), 0.001); end
  def test_output_ab405; assert_in_delta(0, (worksheet.output_ab405||0), 0.001); end
  def test_output_am405; assert_equal("", worksheet.output_am405); end
  def test_output_an405; assert_equal("", worksheet.output_an405); end
  def test_output_c406; assert_equal("X2", worksheet.output_c406); end
  def test_output_e406; assert_equal("Bioenergy credit", worksheet.output_e406); end
  def test_output_f406; assert_equal("Mt CO2e", worksheet.output_f406); end
  def test_output_h406; assert_in_epsilon(-2.07672194675723, worksheet.output_h406, 0.001); end
  def test_output_m406; assert_in_epsilon(-2.37413202653096, worksheet.output_m406, 0.001); end
  def test_output_r406; assert_in_epsilon(-2.711964937349, worksheet.output_r406, 0.001); end
  def test_output_w406; assert_in_epsilon(-4.48237361596347, worksheet.output_w406, 0.001); end
  def test_output_ab406; assert_in_epsilon(-9.91524520252488, worksheet.output_ab406, 0.001); end
  def test_output_ac360; assert_in_epsilon(-10.398216998196155, worksheet.output_ac360, 0.001); end
  def test_output_ac406; assert_in_epsilon(-10.398216998196155, worksheet.output_ac406, 0.001); end
  def test_output_ad360; assert_in_epsilon(-12.623061116910506, worksheet.output_ad360, 0.001); end
  def test_output_ad406; assert_in_epsilon(-12.623061116910506, worksheet.output_ad406, 0.001); end
  def test_output_ae360; assert_in_epsilon(-15.621912446150644, worksheet.output_ae360, 0.001); end
  def test_output_ae406; assert_in_epsilon(-15.621912446150644, worksheet.output_ae406, 0.001); end
  def test_output_af360; assert_in_epsilon(-18.858772062016083, worksheet.output_af360, 0.001); end
  def test_output_af406; assert_in_epsilon(-18.858772062016083, worksheet.output_af406, 0.001); end
  def test_output_ag360; assert_in_epsilon(-20.68647004399704, worksheet.output_ag360, 0.001); end
  def test_output_ag406; assert_in_epsilon(-20.68647004399704, worksheet.output_ag406, 0.001); end
  def test_output_ah360; assert_in_epsilon(-22.283641357751026, worksheet.output_ah360, 0.001); end
  def test_output_ah406; assert_in_epsilon(-22.283641357751026, worksheet.output_ah406, 0.001); end
  def test_output_ai360; assert_in_epsilon(-23.8103980275483, worksheet.output_ai360, 0.001); end
  def test_output_ai406; assert_in_epsilon(-23.8103980275483, worksheet.output_ai406, 0.001); end
  def test_output_aj360; assert_in_epsilon(-25.303807388635786, worksheet.output_aj360, 0.001); end
  def test_output_aj406; assert_in_epsilon(-25.303807388635786, worksheet.output_aj406, 0.001); end
  def test_output_ak360; assert_in_epsilon(-26.667530673854163, worksheet.output_ak360, 0.001); end
  def test_output_ak406; assert_in_epsilon(-26.667530673854163, worksheet.output_ak406, 0.001); end
  def test_output_am406; assert_in_delta(0.023824689109996244, worksheet.output_am406, 0.001); end
  def test_output_an406; assert_in_epsilon(1.5646253274460755, worksheet.output_an406, 0.001); end
  def test_output_e407; assert_equal("Total net of biomass excl. Int'l aviation", worksheet.output_e407); end
  def test_output_h407; assert_in_epsilon(143.28071102937685, worksheet.output_h407, 0.001); end
  def test_output_i407; assert_in_delta(0, (worksheet.output_i407||0), 0.001); end
  def test_output_j407; assert_in_delta(0, (worksheet.output_j407||0), 0.001); end
  def test_output_k407; assert_in_delta(0, (worksheet.output_k407||0), 0.001); end
  def test_output_l407; assert_in_delta(0, (worksheet.output_l407||0), 0.001); end
  def test_output_m407; assert_in_epsilon(150.52935143096005, worksheet.output_m407, 0.001); end
  def test_output_n407; assert_in_delta(0, (worksheet.output_n407||0), 0.001); end
  def test_output_o407; assert_in_delta(0, (worksheet.output_o407||0), 0.001); end
  def test_output_p407; assert_in_delta(0, (worksheet.output_p407||0), 0.001); end
  def test_output_q407; assert_in_delta(0, (worksheet.output_q407||0), 0.001); end
  def test_output_r407; assert_in_epsilon(146.15433516141178, worksheet.output_r407, 0.001); end
  def test_output_s407; assert_in_delta(0, (worksheet.output_s407||0), 0.001); end
  def test_output_t407; assert_in_delta(0, (worksheet.output_t407||0), 0.001); end
  def test_output_u407; assert_in_delta(0, (worksheet.output_u407||0), 0.001); end
  def test_output_v407; assert_in_delta(0, (worksheet.output_v407||0), 0.001); end
  def test_output_w407; assert_in_epsilon(143.62254708674678, worksheet.output_w407, 0.001); end
  def test_output_x407; assert_in_delta(0, (worksheet.output_x407||0), 0.001); end
  def test_output_y407; assert_in_delta(0, (worksheet.output_y407||0), 0.001); end
  def test_output_z407; assert_in_delta(0, (worksheet.output_z407||0), 0.001); end
  def test_output_aa407; assert_in_delta(0, (worksheet.output_aa407||0), 0.001); end
  def test_output_ab407; assert_in_epsilon(132.45922319909644, worksheet.output_ab407, 0.001); end
  def test_output_am407; assert_in_delta(-0.04226523960928619, worksheet.output_am407, 0.001); end
  def test_output_an407; assert_in_delta(-0.8222498375861593, worksheet.output_an407, 0.001); end
  def test_output_r408; assert_equal("adjustment factor excluding buildings ", worksheet.output_r408); end
  def test_output_ac408; assert_in_epsilon(1.0341655540125947, worksheet.output_ac408, 0.001); end
  def test_output_am408; assert_in_delta(-1, worksheet.output_am408, 0.001); end
  def test_output_an408; assert_in_delta(-1, worksheet.output_an408, 0.001); end
  def test_output_e409; assert_equal("TARGETS", worksheet.output_e409); end
  def test_output_f409; assert_equal("Mt CO2e", worksheet.output_f409); end
  def test_output_h409; assert_in_epsilon(143.28071102937685, worksheet.output_h409, 0.001); end
  def test_output_i409; assert_in_delta(0, (worksheet.output_i409||0), 0.001); end
  def test_output_j409; assert_in_delta(0, (worksheet.output_j409||0), 0.001); end
  def test_output_k409; assert_in_delta(0, (worksheet.output_k409||0), 0.001); end
  def test_output_l409; assert_in_delta(0, (worksheet.output_l409||0), 0.001); end
  def test_output_m409; assert_in_epsilon(140.59419769757602, worksheet.output_m409, 0.001); end
  def test_output_n409; assert_in_delta(0, (worksheet.output_n409||0), 0.001); end
  def test_output_o409; assert_in_delta(0, (worksheet.output_o409||0), 0.001); end
  def test_output_p409; assert_in_delta(0, (worksheet.output_p409||0), 0.001); end
  def test_output_q409; assert_in_delta(0, (worksheet.output_q409||0), 0.001); end
  def test_output_r409; assert_in_epsilon(137.9076843657752, worksheet.output_r409, 0.001); end
  def test_output_s409; assert_in_delta(0, (worksheet.output_s409||0), 0.001); end
  def test_output_t409; assert_in_delta(0, (worksheet.output_t409||0), 0.001); end
  def test_output_u409; assert_in_delta(0, (worksheet.output_u409||0), 0.001); end
  def test_output_v409; assert_in_delta(0, (worksheet.output_v409||0), 0.001); end
  def test_output_w409; assert_in_epsilon(135.22117103397437, worksheet.output_w409, 0.001); end
  def test_output_x409; assert_in_delta(0, (worksheet.output_x409||0), 0.001); end
  def test_output_y409; assert_in_delta(0, (worksheet.output_y409||0), 0.001); end
  def test_output_z409; assert_in_delta(0, (worksheet.output_z409||0), 0.001); end
  def test_output_aa409; assert_in_delta(0, (worksheet.output_aa409||0), 0.001); end
  def test_output_ab409; assert_in_epsilon(132.53465770217358, worksheet.output_ab409, 0.001); end
  def test_output_ac409; assert_in_epsilon(132.53465770217358, worksheet.output_ac409, 0.001); end
  def test_output_ad409; assert_in_epsilon(111.04255104776706, worksheet.output_ad409, 0.001); end
  def test_output_ae409; assert_in_epsilon(100.29649772056379, worksheet.output_ae409, 0.001); end
  def test_output_af409; assert_in_epsilon(88.35643846811571, worksheet.output_af409, 0.001); end
  def test_output_ag409; assert_in_epsilon(76.41637921566763, worksheet.output_ag409, 0.001); end
  def test_output_ah409; assert_in_epsilon(64.47631996321957, worksheet.output_ah409, 0.001); end
  def test_output_ai409; assert_in_epsilon(52.5362607107715, worksheet.output_ai409, 0.001); end
  def test_output_aj409; assert_in_epsilon(40.59620145832343, worksheet.output_aj409, 0.001); end
  def test_output_ak409; assert_in_epsilon(28.65614220587537, worksheet.output_ak409, 0.001); end
  def test_output_am409; assert_in_delta(-0.03756323075984913, worksheet.output_am409, 0.001); end
  def test_output_an409; assert_in_delta(-0.7837837837837838, worksheet.output_an409, 0.001); end
  def test_output_am410; assert_equal("", worksheet.output_am410); end
  def test_output_an410; assert_equal("", worksheet.output_an410); end
  def test_output_c411; assert_in_epsilon(5, worksheet.output_c411, 0.001); end
  def test_output_e411; assert_equal("Land Use, Land-Use Change and Forestry", worksheet.output_e411); end
  def test_output_f411; assert_equal("Mt CO2e", worksheet.output_f411); end
  def test_output_h411; assert_in_epsilon(-1.2432528504407998, worksheet.output_h411, 0.001); end
  def test_output_m411; assert_in_delta(-0.9972413291829679, worksheet.output_m411, 0.001); end
  def test_output_r411; assert_in_delta(-0.955865268483653, worksheet.output_r411, 0.001); end
  def test_output_w411; assert_in_delta(-0.9564070760049957, worksheet.output_w411, 0.001); end
  def test_output_ab411; assert_in_epsilon(-1.0423849055794432, worksheet.output_ab411, 0.001); end
  def test_output_ad411; assert_in_delta(0, (worksheet.output_ad411||0), 0.001); end
  def test_output_ae411; assert_in_delta(0, (worksheet.output_ae411||0), 0.001); end
  def test_output_af411; assert_in_delta(0, (worksheet.output_af411||0), 0.001); end
  def test_output_ag411; assert_in_delta(0, (worksheet.output_ag411||0), 0.001); end
  def test_output_ah411; assert_in_delta(0, (worksheet.output_ah411||0), 0.001); end
  def test_output_ai411; assert_in_delta(0, (worksheet.output_ai411||0), 0.001); end
  def test_output_aj411; assert_in_delta(0, (worksheet.output_aj411||0), 0.001); end
  def test_output_am411; assert_equal("", worksheet.output_am411); end
  def test_output_an411; assert_equal("", worksheet.output_an411); end
  def test_output_c412; assert_equal("X1", worksheet.output_c412); end
  def test_output_e412; assert_equal("International Aviation and Shipping", worksheet.output_e412); end
  def test_output_f412; assert_equal("Mt CO2e", worksheet.output_f412); end
  def test_output_h412; assert_in_epsilon(16.41538462935098, worksheet.output_h412, 0.001); end
  def test_output_m412; assert_in_epsilon(15.855608543299883, worksheet.output_m412, 0.001); end
  def test_output_r412; assert_in_epsilon(20.725912520878488, worksheet.output_r412, 0.001); end
  def test_output_w412; assert_in_epsilon(28.516041922993377, worksheet.output_w412, 0.001); end
  def test_output_ab412; assert_in_epsilon(25.202775861980037, worksheet.output_ab412, 0.001); end
  def test_output_ad412; assert_in_epsilon(4.126096739083403, worksheet.output_ad412, 0.001); end
  def test_output_ae412; assert_in_epsilon(3.867427304028505, worksheet.output_ae412, 0.001); end
  def test_output_af412; assert_in_epsilon(3.6249741336088572, worksheet.output_af412, 0.001); end
  def test_output_ag412; assert_in_epsilon(3.397720612781926, worksheet.output_ag412, 0.001); end
  def test_output_ah412; assert_in_epsilon(3.1847138591938062, worksheet.output_ah412, 0.001); end
  def test_output_ai412; assert_in_epsilon(2.9850607277085355, worksheet.output_ai412, 0.001); end
  def test_output_aj412; assert_in_epsilon(2.797924065417758, worksheet.output_aj412, 0.001); end
  def test_output_am412; assert_in_delta(-0.012865000000000015, worksheet.output_am412, 0.001); end
  def test_output_an412; assert_in_delta(-0.4042527812248683, worksheet.output_an412, 0.001); end
  def test_output_b413; assert_equal("IPCC Sectors Emissions as % of base year", worksheet.output_b413); end
  def test_output_am413; assert_equal("", worksheet.output_am413); end
  def test_output_an413; assert_equal("", worksheet.output_an413); end
  def test_output_c414; assert_equal("1A", worksheet.output_c414); end
  def test_output_e414; assert_equal("Fuel Combustion", worksheet.output_e414); end
  def test_output_f414; assert_equal("%", worksheet.output_f414); end
  def test_output_g414; assert_equal("NIR", worksheet.output_g414); end
  def test_output_h414; assert_in_delta(0.7757533944068195, worksheet.output_h414, 0.001); end
  def test_output_m414; assert_in_delta(0.8062640744946491, worksheet.output_m414, 0.001); end
  def test_output_r414; assert_in_delta(0.810966402080741, worksheet.output_r414, 0.001); end
  def test_output_w414; assert_in_delta(0.8067925451962656, worksheet.output_w414, 0.001); end
  def test_output_ab414; assert_in_delta(0.747209918573144, worksheet.output_ab414, 0.001); end
  def test_output_ac414; assert_in_delta(0.7580250999249273, worksheet.output_ac414, 0.001); end
  def test_output_ad414; assert_in_delta(0.6266660586579637, worksheet.output_ad414, 0.001); end
  def test_output_ae414; assert_in_delta(0.5327729777698224, worksheet.output_ae414, 0.001); end
  def test_output_af414; assert_in_delta(0.42541282929240515, worksheet.output_af414, 0.001); end
  def test_output_ag414; assert_in_delta(0.39106874811617953, worksheet.output_ag414, 0.001); end
  def test_output_ah414; assert_in_delta(0.3719923927852814, worksheet.output_ah414, 0.001); end
  def test_output_ai414; assert_in_delta(0.3680744692737691, worksheet.output_ai414, 0.001); end
  def test_output_aj414; assert_in_delta(0.3690719236302896, worksheet.output_aj414, 0.001); end
  def test_output_ak414; assert_in_delta(0.38554674304574843, worksheet.output_ak414, 0.001); end
  def test_output_am414; assert_in_delta(-0.016759324925558983, worksheet.output_am414, 0.001); end
  def test_output_an414; assert_in_delta(-0.4913799779401343, worksheet.output_an414, 0.001); end
  def test_output_c415; assert_equal("1B", worksheet.output_c415); end
  def test_output_e415; assert_equal("Fugitive Emissions from Fuels", worksheet.output_e415); end
  def test_output_f415; assert_equal("%", worksheet.output_f415); end
  def test_output_g415; assert_equal("NIR", worksheet.output_g415); end
  def test_output_h415; assert_in_delta(0.00657797576089468, worksheet.output_h415, 0.001); end
  def test_output_m415; assert_in_delta(0.004356472476489453, worksheet.output_m415, 0.001); end
  def test_output_r415; assert_in_delta(0.004405388322291237, worksheet.output_r415, 0.001); end
  def test_output_w415; assert_in_delta(0.0037020236146900415, worksheet.output_w415, 0.001); end
  def test_output_ab415; assert_in_delta(0.00382190299992855, worksheet.output_ab415, 0.001); end
  def test_output_ac398; assert_in_delta(0.547604979315071, worksheet.output_ac398, 0.001); end
  def test_output_ac415; assert_in_delta(0.00369563943132649, worksheet.output_ac415, 0.001); end
  def test_output_ad398; assert_in_delta(0.4121005820277864, worksheet.output_ad398, 0.001); end
  def test_output_ad415; assert_in_delta(0.0027811565236667106, worksheet.output_ad415, 0.001); end
  def test_output_ae398; assert_in_delta(0.24906545111041387, worksheet.output_ae398, 0.001); end
  def test_output_ae415; assert_in_delta(0.001680876063720323, worksheet.output_ae415, 0.001); end
  def test_output_af398; assert_in_delta(0.11288272497379992, worksheet.output_af398, 0.001); end
  def test_output_af415; assert_in_delta(0.0007618152962205491, worksheet.output_af415, 0.001); end
  def test_output_ag398; assert_in_delta(0, (worksheet.output_ag398||0), 0.001); end
  def test_output_ag415; assert_in_delta(0, (worksheet.output_ag415||0), 0.001); end
  def test_output_ah398; assert_in_delta(0, (worksheet.output_ah398||0), 0.001); end
  def test_output_ah415; assert_in_delta(0, (worksheet.output_ah415||0), 0.001); end
  def test_output_ai398; assert_in_delta(0, (worksheet.output_ai398||0), 0.001); end
  def test_output_ai415; assert_in_delta(0, (worksheet.output_ai415||0), 0.001); end
  def test_output_aj398; assert_in_delta(0, (worksheet.output_aj398||0), 0.001); end
  def test_output_aj415; assert_in_delta(0, (worksheet.output_aj415||0), 0.001); end
  def test_output_ak398; assert_in_delta(0, (worksheet.output_ak398||0), 0.001); end
  def test_output_ak415; assert_in_delta(0, (worksheet.output_ak415||0), 0.001); end
  def test_output_am415; assert_in_delta(-1, worksheet.output_am415, 0.001); end
  def test_output_an415; assert_in_delta(-1, worksheet.output_an415, 0.001); end
  def test_output_c416; assert_in_delta(1, worksheet.output_c416, 0.001); end
  def test_output_e416; assert_equal("Fuel Combustion", worksheet.output_e416); end
  def test_output_f416; assert_equal("%", worksheet.output_f416); end
  def test_output_g416; assert_equal("NIR", worksheet.output_g416); end
  def test_output_h416; assert_in_delta(0.7823313701677141, worksheet.output_h416, 0.001); end
  def test_output_m416; assert_in_delta(0.8106205469711386, worksheet.output_m416, 0.001); end
  def test_output_r416; assert_in_delta(0.8153717904030323, worksheet.output_r416, 0.001); end
  def test_output_w416; assert_in_delta(0.8104945688109557, worksheet.output_w416, 0.001); end
  def test_output_ab416; assert_in_delta(0.7510318215730727, worksheet.output_ab416, 0.001); end
  def test_output_ac399; assert_in_epsilon(112.86871391815481, worksheet.output_ac399, 0.001); end
  def test_output_ac416; assert_in_delta(0.7617207393562536, worksheet.output_ac416, 0.001); end
  def test_output_ad399; assert_in_epsilon(93.26895538771363, worksheet.output_ad399, 0.001); end
  def test_output_ad416; assert_in_delta(0.6294472151816304, worksheet.output_ad416, 0.001); end
  def test_output_ae399; assert_in_epsilon(79.19322136584307, worksheet.output_ae399, 0.001); end
  def test_output_ae416; assert_in_delta(0.5344538538335427, worksheet.output_ae416, 0.001); end
  def test_output_af399; assert_in_epsilon(63.148843866187406, worksheet.output_af399, 0.001); end
  def test_output_af416; assert_in_delta(0.4261746445886257, worksheet.output_af416, 0.001); end
  def test_output_ag399; assert_in_epsilon(57.94699339650273, worksheet.output_ag399, 0.001); end
  def test_output_ag416; assert_in_delta(0.39106874811617953, worksheet.output_ag416, 0.001); end
  def test_output_ah399; assert_in_epsilon(55.12033582871239, worksheet.output_ah399, 0.001); end
  def test_output_ah416; assert_in_delta(0.3719923927852814, worksheet.output_ah416, 0.001); end
  def test_output_ai399; assert_in_epsilon(54.53979368888852, worksheet.output_ai399, 0.001); end
  def test_output_ai416; assert_in_delta(0.3680744692737691, worksheet.output_ai416, 0.001); end
  def test_output_aj399; assert_in_epsilon(54.68759246158267, worksheet.output_aj399, 0.001); end
  def test_output_aj416; assert_in_delta(0.3690719236302896, worksheet.output_aj416, 0.001); end
  def test_output_ak399; assert_in_epsilon(57.12876490626125, worksheet.output_ak399, 0.001); end
  def test_output_ak416; assert_in_delta(0.38554674304574843, worksheet.output_ak416, 0.001); end
  def test_output_am416; assert_in_delta(-0.016878867587881596, worksheet.output_am416, 0.001); end
  def test_output_an416; assert_in_delta(-0.493847648980147, worksheet.output_an416, 0.001); end
  def test_output_c417; assert_in_epsilon(2, worksheet.output_c417, 0.001); end
  def test_output_e417; assert_equal("Industrial Processes", worksheet.output_e417); end
  def test_output_f417; assert_equal("%", worksheet.output_f417); end
  def test_output_g417; assert_equal("NIR", worksheet.output_g417); end
  def test_output_h417; assert_in_delta(0.11021337108678969, worksheet.output_h417, 0.001); end
  def test_output_m417; assert_in_delta(0.134215353675806, worksheet.output_m417, 0.001); end
  def test_output_r417; assert_in_delta(0.10922619059577422, worksheet.output_r417, 0.001); end
  def test_output_w417; assert_in_delta(0.10972180710064101, worksheet.output_w417, 0.001); end
  def test_output_ab417; assert_in_delta(0.09394193398305709, worksheet.output_ab417, 0.001); end
  def test_output_ac400; assert_in_epsilon(13.22228479946043, worksheet.output_ac400, 0.001); end
  def test_output_ac417; assert_in_delta(0.08923366098356804, worksheet.output_ac417, 0.001); end
  def test_output_ad400; assert_in_epsilon(9.427290559297457, worksheet.output_ad400, 0.001); end
  def test_output_ad417; assert_in_delta(0.0636222606395734, worksheet.output_ad417, 0.001); end
  def test_output_ae400; assert_in_epsilon(8.802181506284835, worksheet.output_ae400, 0.001); end
  def test_output_ae417; assert_in_delta(0.05940356695990285, worksheet.output_ae417, 0.001); end
  def test_output_af400; assert_in_epsilon(7.7653868774676305, worksheet.output_af400, 0.001); end
  def test_output_af417; assert_in_delta(0.05240651752248382, worksheet.output_af417, 0.001); end
  def test_output_ag400; assert_in_epsilon(7.243574945960409, worksheet.output_ag400, 0.001); end
  def test_output_ag417; assert_in_delta(0.048884948466945376, worksheet.output_ag417, 0.001); end
  def test_output_ah400; assert_in_epsilon(6.451578081614504, worksheet.output_ah400, 0.001); end
  def test_output_ah417; assert_in_delta(0.04353997361842484, worksheet.output_ah417, 0.001); end
  def test_output_ai400; assert_in_epsilon(5.730036596069363, worksheet.output_ai400, 0.001); end
  def test_output_ai417; assert_in_delta(0.038670483263070925, worksheet.output_ai417, 0.001); end
  def test_output_aj400; assert_in_epsilon(5.071995109696613, worksheet.output_aj400, 0.001); end
  def test_output_aj417; assert_in_delta(0.03422953740547562, worksheet.output_aj417, 0.001); end
  def test_output_ak400; assert_in_epsilon(4.471188709741967, worksheet.output_ak400, 0.001); end
  def test_output_ak417; assert_in_delta(0.030174855826351064, worksheet.output_ak417, 0.001); end
  def test_output_am417; assert_in_delta(-0.026742156667579065, worksheet.output_am417, 0.001); end
  def test_output_an417; assert_in_delta(-0.6618444710913787, worksheet.output_an417, 0.001); end
  def test_output_c418; assert_in_epsilon(3, worksheet.output_c418, 0.001); end
  def test_output_e418; assert_equal("Solvent and Other Product Use", worksheet.output_e418); end
  def test_output_f418; assert_equal("%", worksheet.output_f418); end
  def test_output_g418; assert_equal("NIR", worksheet.output_g418); end
  def test_output_h418; assert_in_delta(0.0014894683971539205, worksheet.output_h418, 0.001); end
  def test_output_m418; assert_in_delta(0.0014213180653343223, worksheet.output_m418, 0.001); end
  def test_output_r418; assert_in_delta(0.0015160125563270295, worksheet.output_r418, 0.001); end
  def test_output_w418; assert_in_delta(0.001499900555043572, worksheet.output_w418, 0.001); end
  def test_output_ab418; assert_in_delta(0.00149339335673822, worksheet.output_ab418, 0.001); end
  def test_output_ac401; assert_in_delta(0.19349282649736, worksheet.output_ac401, 0.001); end
  def test_output_ac418; assert_in_delta(0.00130583129499089, worksheet.output_ac418, 0.001); end
  def test_output_ad401; assert_in_delta(0.177433704229179, worksheet.output_ad401, 0.001); end
  def test_output_ad418; assert_in_delta(0.0011974525772498374, worksheet.output_ad418, 0.001); end
  def test_output_ae401; assert_in_delta(0.1627074241789389, worksheet.output_ae401, 0.001); end
  def test_output_ae418; assert_in_delta(0.0010980688548839546, worksheet.output_ae418, 0.001); end
  def test_output_af401; assert_in_delta(0.14920336583150445, worksheet.output_af401, 0.001); end
  def test_output_af418; assert_in_delta(0.0010069335796457097, worksheet.output_af418, 0.001); end
  def test_output_ag401; assert_in_delta(0.13682008972723525, worksheet.output_ag401, 0.001); end
  def test_output_ag418; assert_in_delta(0.0009233621637736686, worksheet.output_ag418, 0.001); end
  def test_output_ah401; assert_in_delta(0.1254645754715006, worksheet.output_ah401, 0.001); end
  def test_output_ah418; assert_in_delta(0.0008467268375226678, worksheet.output_ah418, 0.001); end
  def test_output_ai401; assert_in_delta(0.11505152298632368, worksheet.output_ai401, 0.001); end
  def test_output_ai418; assert_in_delta(0.000776451933498191, worksheet.output_ai418, 0.001); end
  def test_output_aj401; assert_in_delta(0.10550271175531396, worksheet.output_aj401, 0.001); end
  def test_output_aj418; assert_in_delta(0.0007120095623719256, worksheet.output_aj418, 0.001); end
  def test_output_ak401; assert_in_delta(0.09674641324867989, worksheet.output_ak401, 0.001); end
  def test_output_ak418; assert_in_delta(0.0006529156474954442, worksheet.output_ak418, 0.001); end
  def test_output_am418; assert_in_delta(-0.017179401454748944, worksheet.output_am418, 0.001); end
  def test_output_an418; assert_in_delta(-0.5000000000000006, worksheet.output_an418, 0.001); end
  def test_output_c419; assert_in_epsilon(4, worksheet.output_c419, 0.001); end
  def test_output_e419; assert_equal("Agriculture", worksheet.output_e419); end
  def test_output_f419; assert_equal("%", worksheet.output_f419); end
  def test_output_g419; assert_equal("NIR", worksheet.output_g419); end
  def test_output_h419; assert_in_delta(0.08274791484481395, worksheet.output_h419, 0.001); end
  def test_output_m419; assert_in_delta(0.08363106747869495, worksheet.output_m419, 0.001); end
  def test_output_r419; assert_in_delta(0.07712590961769854, worksheet.output_r419, 0.001); end
  def test_output_w419; assert_in_delta(0.06967930382173153, worksheet.output_w419, 0.001); end
  def test_output_ab419; assert_in_delta(0.07008496246004059, worksheet.output_ab419, 0.001); end
  def test_output_ac402; assert_in_epsilon(10.041845420711166, worksheet.output_ac402, 0.001); end
  def test_output_ac419; assert_in_delta(0.06776972690511869, worksheet.output_ac419, 0.001); end
  def test_output_ad402; assert_in_epsilon(9.183014656924172, worksheet.output_ad402, 0.001); end
  def test_output_ad419; assert_in_delta(0.06197370795829077, worksheet.output_ad419, 0.001); end
  def test_output_ae402; assert_in_epsilon(8.448551252905851, worksheet.output_ae402, 0.001); end
  def test_output_ae419; assert_in_delta(0.057017011033892145, worksheet.output_ae419, 0.001); end
  def test_output_af402; assert_in_epsilon(7.815711238393634, worksheet.output_af402, 0.001); end
  def test_output_af419; assert_in_delta(0.05274614316435995, worksheet.output_af419, 0.001); end
  def test_output_ag402; assert_in_epsilon(7.266255261054693, worksheet.output_ag402, 0.001); end
  def test_output_ag419; assert_in_delta(0.049038011842815664, worksheet.output_ag419, 0.001); end
  def test_output_ah402; assert_in_epsilon(7.018694835790048, worksheet.output_ah402, 0.001); end
  def test_output_ah419; assert_in_delta(0.04736729279568739, worksheet.output_ah419, 0.001); end
  def test_output_ai402; assert_in_epsilon(6.788074791374903, worksheet.output_ai402, 0.001); end
  def test_output_ai419; assert_in_delta(0.0458108998445844, worksheet.output_ai419, 0.001); end
  def test_output_aj402; assert_in_epsilon(6.573235909800082, worksheet.output_aj402, 0.001); end
  def test_output_aj419; assert_in_delta(0.044361009737443544, worksheet.output_aj419, 0.001); end
  def test_output_ak402; assert_in_epsilon(6.373098297506354, worksheet.output_ak402, 0.001); end
  def test_output_ak419; assert_in_delta(0.04301033456168209, worksheet.output_ak419, 0.001); end
  def test_output_am419; assert_in_delta(-0.011302520212518763, worksheet.output_am419, 0.001); end
  def test_output_an419; assert_in_delta(-0.36534590700212055, worksheet.output_an419, 0.001); end
  def test_output_c420; assert_in_epsilon(6, worksheet.output_c420, 0.001); end
  def test_output_e420; assert_equal("Waste", worksheet.output_e420); end
  def test_output_f420; assert_equal("%", worksheet.output_f420); end
  def test_output_g420; assert_equal("NIR", worksheet.output_g420); end
  def test_output_h420; assert_in_delta(0.023217875503528322, worksheet.output_h420, 0.001); end
  def test_output_m420; assert_in_delta(0.02070219699065272, worksheet.output_m420, 0.001); end
  def test_output_r420; assert_in_delta(0.016816000454319704, worksheet.output_r420, 0.001); end
  def test_output_w420; assert_in_delta(0.01099019833398478, worksheet.output_w420, 0.001); end
  def test_output_ab420; assert_in_delta(0.007921408108288964, worksheet.output_ab420, 0.001); end
  def test_output_ac403; assert_in_epsilon(1.117281696428572, worksheet.output_ac403, 0.001); end
  def test_output_ac420; assert_in_delta(0.007540235113247708, worksheet.output_ac420, 0.001); end
  def test_output_ad403; assert_in_delta(0.9776214843750003, worksheet.output_ad403, 0.001); end
  def test_output_ad420; assert_in_delta(0.006597705724091744, worksheet.output_ad420, 0.001); end
  def test_output_ae403; assert_in_delta(0.8379612723214289, worksheet.output_ae403, 0.001); end
  def test_output_ae420; assert_in_delta(0.005655176334935781, worksheet.output_ae420, 0.001); end
  def test_output_af403; assert_in_delta(0.6565671540178576, worksheet.output_af403, 0.001); end
  def test_output_af420; assert_in_delta(0.004430995983157649, worksheet.output_af420, 0.001); end
  def test_output_ag403; assert_in_delta(0.4936851607142859, worksheet.output_ag403, 0.001); end
  def test_output_ag420; assert_in_delta(0.0033317490079773963, worksheet.output_ag420, 0.001); end
  def test_output_ah403; assert_in_delta(0.34522352678571444, worksheet.output_ah403, 0.001); end
  def test_output_ah420; assert_in_delta(0.002329821178409745, worksheet.output_ah420, 0.001); end
  def test_output_ai403; assert_in_delta(0.21345545535714294, worksheet.output_ai403, 0.001); end
  def test_output_ai420; assert_in_delta(0.0014405537338909621, worksheet.output_ai420, 0.001); end
  def test_output_aj403; assert_in_delta(0.09883558705357151, worksheet.output_aj403, 0.001); end
  def test_output_aj420; assert_in_delta(0.0006670149223083009, worksheet.output_aj420, 0.001); end
  def test_output_ak403; assert_in_delta(0, (worksheet.output_ak403||0), 0.001); end
  def test_output_ak420; assert_in_delta(0, (worksheet.output_ak420||0), 0.001); end
  def test_output_am420; assert_in_delta(-1, worksheet.output_am420, 0.001); end
  def test_output_an420; assert_in_delta(-1, worksheet.output_an420, 0.001); end
  def test_output_c421; assert_in_epsilon(7, worksheet.output_c421, 0.001); end
  def test_output_e421; assert_equal("Other", worksheet.output_e421); end
  def test_output_f421; assert_equal("%", worksheet.output_f421); end
  def test_output_g421; assert_equal("NIR", worksheet.output_g421); end
  def test_output_h421; assert_in_delta(0, (worksheet.output_h421||0), 0.001); end
  def test_output_m421; assert_in_delta(0, (worksheet.output_m421||0), 0.001); end
  def test_output_r421; assert_in_delta(0, (worksheet.output_r421||0), 0.001); end
  def test_output_w421; assert_in_delta(0, (worksheet.output_w421||0), 0.001); end
  def test_output_ab421; assert_in_delta(0, (worksheet.output_ab421||0), 0.001); end
  def test_output_ac404; assert_in_delta(0, (worksheet.output_ac404||0), 0.001); end
  def test_output_ac421; assert_in_delta(0, (worksheet.output_ac421||0), 0.001); end
  def test_output_ad404; assert_in_delta(0, (worksheet.output_ad404||0), 0.001); end
  def test_output_ad421; assert_in_delta(0, (worksheet.output_ad421||0), 0.001); end
  def test_output_ae404; assert_in_delta(0, (worksheet.output_ae404||0), 0.001); end
  def test_output_ae421; assert_in_delta(0, (worksheet.output_ae421||0), 0.001); end
  def test_output_af404; assert_in_delta(0, (worksheet.output_af404||0), 0.001); end
  def test_output_af421; assert_in_delta(0, (worksheet.output_af421||0), 0.001); end
  def test_output_ag404; assert_in_delta(0, (worksheet.output_ag404||0), 0.001); end
  def test_output_ag421; assert_in_delta(0, (worksheet.output_ag421||0), 0.001); end
  def test_output_ah404; assert_in_delta(0, (worksheet.output_ah404||0), 0.001); end
  def test_output_ah421; assert_in_delta(0, (worksheet.output_ah421||0), 0.001); end
  def test_output_ai404; assert_in_delta(0, (worksheet.output_ai404||0), 0.001); end
  def test_output_ai421; assert_in_delta(0, (worksheet.output_ai421||0), 0.001); end
  def test_output_aj404; assert_in_delta(0, (worksheet.output_aj404||0), 0.001); end
  def test_output_aj421; assert_in_delta(0, (worksheet.output_aj421||0), 0.001); end
  def test_output_ak404; assert_in_delta(0, (worksheet.output_ak404||0), 0.001); end
  def test_output_ak421; assert_in_delta(0, (worksheet.output_ak421||0), 0.001); end
  def test_output_am421; assert_equal("", worksheet.output_am421); end
  def test_output_an421; assert_equal("", worksheet.output_an421); end
  def test_output_c422; assert_equal("X3", worksheet.output_c422); end
  def test_output_e422; assert_equal("Carbon capture", worksheet.output_e422); end
  def test_output_f422; assert_equal("%", worksheet.output_f422); end
  def test_output_g422; assert_equal("NIR", worksheet.output_g422); end
  def test_output_h422; assert_in_delta(0, (worksheet.output_h422||0), 0.001); end
  def test_output_m422; assert_in_delta(0, (worksheet.output_m422||0), 0.001); end
  def test_output_r422; assert_in_delta(0, (worksheet.output_r422||0), 0.001); end
  def test_output_w422; assert_in_delta(0, (worksheet.output_w422||0), 0.001); end
  def test_output_ab422; assert_in_delta(0, (worksheet.output_ab422||0), 0.001); end
  def test_output_ac422; assert_in_delta(0, (worksheet.output_ac422||0), 0.001); end
  def test_output_ad422; assert_in_delta(0.00019346596367636384, worksheet.output_ad422, 0.001); end
  def test_output_ae422; assert_in_delta(0.00035997578348892907, worksheet.output_ae422, 0.001); end
  def test_output_af422; assert_in_delta(-0.011600428104590908, worksheet.output_af422, 0.001); end
  def test_output_ag422; assert_in_delta(-0.045079696245824065, worksheet.output_ag422, 0.001); end
  def test_output_ah422; assert_in_delta(-0.07066798205746087, worksheet.output_ah422, 0.001); end
  def test_output_ai422; assert_in_delta(-0.08751660706010972, worksheet.output_ai422, 0.001); end
  def test_output_aj422; assert_in_delta(-0.10174801726869406, worksheet.output_aj422, 0.001); end
  def test_output_ak422; assert_in_delta(-0.1270106490537745, worksheet.output_ak422, 0.001); end
  def test_output_am422; assert_equal("", worksheet.output_am422); end
  def test_output_an422; assert_equal("", worksheet.output_an422); end
  def test_output_c423; assert_equal("X2", worksheet.output_c423); end
  def test_output_e423; assert_equal("Bioenergy credit", worksheet.output_e423); end
  def test_output_f423; assert_equal("%", worksheet.output_f423); end
  def test_output_g423; assert_equal("NIR", worksheet.output_g423); end
  def test_output_h423; assert_in_delta(-0.014494079013409137, worksheet.output_h423, 0.001); end
  def test_output_m423; assert_in_delta(-0.016569795120881217, worksheet.output_m423, 0.001); end
  def test_output_r423; assert_in_delta(-0.01892763455642655, worksheet.output_r423, 0.001); end
  def test_output_w423; assert_in_delta(-0.03128385938177295, worksheet.output_w423, 0.001); end
  def test_output_ab423; assert_in_delta(-0.06920153544249202, worksheet.output_ab423, 0.001); end
  def test_output_ac423; assert_in_delta(-0.07017478329376738, worksheet.output_ac423, 0.001); end
  def test_output_ad423; assert_in_delta(-0.08518966074057167, worksheet.output_ad423, 0.001); end
  def test_output_ae423; assert_in_delta(-0.10542810567744498, worksheet.output_ae423, 0.001); end
  def test_output_af423; assert_in_delta(-0.12727280483453207, worksheet.output_af423, 0.001); end
  def test_output_ag423; assert_in_delta(-0.13960744930619673, worksheet.output_ag423, 0.001); end
  def test_output_ah423; assert_in_delta(-0.15038633099765897, worksheet.output_ah423, 0.001); end
  def test_output_ai423; assert_in_delta(-0.1606900031045138, worksheet.output_ai423, 0.001); end
  def test_output_aj423; assert_in_delta(-0.17076862315075617, worksheet.output_aj423, 0.001); end
  def test_output_ak423; assert_in_delta(-0.17997202658323555, worksheet.output_ak423, 0.001); end
  def test_output_am423; assert_in_delta(0.023824689109996244, worksheet.output_am423, 0.001); end
  def test_output_an423; assert_in_epsilon(1.5646253274460755, worksheet.output_an423, 0.001); end
  def test_output_b424; assert_equal("REF", worksheet.output_b424); end
  def test_output_e424; assert_equal("Total emissions net biomass excluding int'l aviation", worksheet.output_e424); end
  def test_output_f424; assert_equal("%", worksheet.output_f424); end
  def test_output_g424; assert_equal("NIR", worksheet.output_g424); end
  def test_output_h424; assert_in_delta(1, worksheet.output_h424, 0.001); end
  def test_output_m424; assert_in_epsilon(1.0505904831816266, worksheet.output_m424, 0.001); end
  def test_output_n424; assert_equal(:ref, worksheet.output_n424); end
  def test_output_o424; assert_equal(:ref, worksheet.output_o424); end
  def test_output_p424; assert_equal(:ref, worksheet.output_p424); end
  def test_output_q424; assert_equal(:ref, worksheet.output_q424); end
  def test_output_r424; assert_in_epsilon(1.0200559036271515, worksheet.output_r424, 0.001); end
  def test_output_s424; assert_equal(:ref, worksheet.output_s424); end
  def test_output_t424; assert_equal(:ref, worksheet.output_t424); end
  def test_output_u424; assert_equal(:ref, worksheet.output_u424); end
  def test_output_v424; assert_equal(:ref, worksheet.output_v424); end
  def test_output_w424; assert_in_epsilon(1.0023857786223564, worksheet.output_w424, 0.001); end
  def test_output_x424; assert_equal(:ref, worksheet.output_x424); end
  def test_output_y424; assert_equal(:ref, worksheet.output_y424); end
  def test_output_z424; assert_equal(:ref, worksheet.output_z424); end
  def test_output_aa424; assert_equal(:ref, worksheet.output_aa424); end
  def test_output_ab424; assert_in_delta(0.9244735194811975, worksheet.output_ab424, 0.001); end
  def test_output_ad424; assert_in_delta(0.6778421473039409, worksheet.output_ad424, 0.001); end
  def test_output_ae424; assert_in_delta(0.5525595471232014, worksheet.output_ae424, 0.001); end
  def test_output_af424; assert_in_delta(0.3978920018991499, worksheet.output_af424, 0.001); end
  def test_output_ag424; assert_in_delta(0.3085596740456709, worksheet.output_ag424, 0.001); end
  def test_output_ah424; assert_in_delta(0.2450218941602062, worksheet.output_ah424, 0.001); end
  def test_output_ai424; assert_in_delta(0.20656624788419004, worksheet.output_ai424, 0.001); end
  def test_output_aj424; assert_in_delta(0.1765248548384388, worksheet.output_aj424, 0.001); end
  def test_output_am424; assert_in_delta(-0.04226523960928619, worksheet.output_am424, 0.001); end
  def test_output_an424; assert_in_delta(-0.8222498375861592, worksheet.output_an424, 0.001); end
  def test_output_b425; assert_equal("REF", worksheet.output_b425); end
  def test_output_e425; assert_equal("Reference scenario", worksheet.output_e425); end
  def test_output_f425; assert_equal("%", worksheet.output_f425); end
  def test_output_g425; assert_equal("copy-values of BaU Scenario for charts", worksheet.output_g425); end
  def test_output_ac425; assert_in_delta(0.8631012314385033, worksheet.output_ac425, 0.001); end
  def test_output_ad425; assert_in_delta(0.8122273045185132, worksheet.output_ad425, 0.001); end
  def test_output_ae425; assert_in_delta(0.8217574071875723, worksheet.output_ae425, 0.001); end
  def test_output_af425; assert_in_delta(0.8676519862666482, worksheet.output_af425, 0.001); end
  def test_output_ag425; assert_in_delta(0.8621901118840615, worksheet.output_ag425, 0.001); end
  def test_output_ah425; assert_in_delta(0.8553837041721625, worksheet.output_ah425, 0.001); end
  def test_output_ai425; assert_in_delta(0.8597612812467186, worksheet.output_ai425, 0.001); end
  def test_output_aj425; assert_in_delta(0.862979406353803, worksheet.output_aj425, 0.001); end
  def test_output_ak425; assert_in_delta(0.8670504364201408, worksheet.output_ak425, 0.001); end
  def test_output_am425; assert_in_delta(0.00011413557788575446, worksheet.output_am425, 0.001); end
  def test_output_an425; assert_in_delta(0.004575598826403571, worksheet.output_an425, 0.001); end
  def test_output_ap425; assert_in_epsilon(1990, worksheet.output_ap425, 0.001); end
  def test_output_aq425; assert_in_epsilon(2010, worksheet.output_aq425, 0.001); end
  def test_output_ar425; assert_in_epsilon(2020, worksheet.output_ar425, 0.001); end
  def test_output_as425; assert_in_epsilon(2030, worksheet.output_as425, 0.001); end
  def test_output_at425; assert_in_epsilon(2040, worksheet.output_at425, 0.001); end
  def test_output_au425; assert_in_epsilon(2050, worksheet.output_au425, 0.001); end
  def test_output_h426; assert_in_delta(0, (worksheet.output_h426||0), 0.001); end
  def test_output_ad426; assert_in_delta(-0.3221578526960591, worksheet.output_ad426, 0.001); end
  def test_output_ae426; assert_in_delta(-0.44744045287679857, worksheet.output_ae426, 0.001); end
  def test_output_af426; assert_in_delta(-0.6021079981008501, worksheet.output_af426, 0.001); end
  def test_output_ag426; assert_in_delta(-0.6914403259543291, worksheet.output_ag426, 0.001); end
  def test_output_ah426; assert_in_delta(-0.7549781058397937, worksheet.output_ah426, 0.001); end
  def test_output_ai426; assert_in_delta(-0.7934337521158099, worksheet.output_ai426, 0.001); end
  def test_output_aj426; assert_in_delta(-0.8234751451615612, worksheet.output_aj426, 0.001); end
  def test_output_am426; assert_in_delta(0.045565894029538034, worksheet.output_am426, 0.001); end
  def test_output_an426; assert_in_epsilon(4.943692476462116, worksheet.output_an426, 0.001); end
  def test_output_ap426; assert_in_delta(0, (worksheet.output_ap426||0), 0.001); end
  def test_output_ac424; assert_in_delta(0.8573954103594116, worksheet.output_ac424, 0.001); end
  def test_output_ac426; assert_in_delta(-0.14260458964058842, worksheet.output_ac426, 0.001); end
  def test_output_aq426; assert_in_delta(-0.14260458964058842, worksheet.output_aq426, 0.001); end
  def test_output_ar426; assert_in_delta(-0.44744045287679857, worksheet.output_ar426, 0.001); end
  def test_output_as426; assert_in_delta(-0.6914403259543291, worksheet.output_as426, 0.001); end
  def test_output_at426; assert_in_delta(-0.7934337521158099, worksheet.output_at426, 0.001); end
  def test_output_ak426; assert_in_delta(-0.8475978265557329, worksheet.output_ak426, 0.001); end
  def test_output_au426; assert_in_delta(-0.8475978265557329, worksheet.output_au426, 0.001); end
  def test_output_e427; assert_equal("TARGETS", worksheet.output_e427); end
  def test_output_f427; assert_equal("%", worksheet.output_f427); end
  def test_output_h427; assert_in_delta(1, worksheet.output_h427, 0.001); end
  def test_output_m427; assert_in_delta(0.98125, worksheet.output_m427, 0.001); end
  def test_output_r427; assert_in_delta(0.9624999999999999, worksheet.output_r427, 0.001); end
  def test_output_w427; assert_in_delta(0.9437499999999999, worksheet.output_w427, 0.001); end
  def test_output_ab427; assert_in_delta(0.925, worksheet.output_ab427, 0.001); end
  def test_output_ac427; assert_in_delta(0.925, worksheet.output_ac427, 0.001); end
  def test_output_ad427; assert_in_delta(0.775, worksheet.output_ad427, 0.001); end
  def test_output_ae427; assert_in_delta(0.7, worksheet.output_ae427, 0.001); end
  def test_output_af427; assert_in_delta(0.6166666666666666, worksheet.output_af427, 0.001); end
  def test_output_ag427; assert_in_delta(0.5333333333333332, worksheet.output_ag427, 0.001); end
  def test_output_ah427; assert_in_delta(0.4499999999999999, worksheet.output_ah427, 0.001); end
  def test_output_ai427; assert_in_delta(0.3666666666666666, worksheet.output_ai427, 0.001); end
  def test_output_aj427; assert_in_delta(0.28333333333333327, worksheet.output_aj427, 0.001); end
  def test_output_ak427; assert_in_delta(0.2, worksheet.output_ak427, 0.001); end
  def test_output_am427; assert_in_delta(-0.03756323075984913, worksheet.output_am427, 0.001); end
  def test_output_an427; assert_in_delta(-0.7837837837837838, worksheet.output_an427, 0.001); end
  def test_output_am428; assert_equal("", worksheet.output_am428); end
  def test_output_an428; assert_equal("", worksheet.output_an428); end
  def test_output_c429; assert_in_epsilon(5, worksheet.output_c429, 0.001); end
  def test_output_e429; assert_equal("Land Use, Land-Use Change and Forestry", worksheet.output_e429); end
  def test_output_f429; assert_equal("%", worksheet.output_f429); end
  def test_output_g429; assert_equal("NIR", worksheet.output_g429); end
  def test_output_h429; assert_in_delta(-0.008677042719210793, worksheet.output_h429, 0.001); end
  def test_output_m429; assert_in_delta(-0.006960052906064261, worksheet.output_m429, 0.001); end
  def test_output_r429; assert_in_delta(-0.006671276696049282, worksheet.output_r429, 0.001); end
  def test_output_w429; assert_in_delta(-0.006675058136813012, worksheet.output_w429, 0.001); end
  def test_output_ab429; assert_in_delta(-0.007275123762930818, worksheet.output_ab429, 0.001); end
  def test_output_ac411; assert_in_delta(0, (worksheet.output_ac411||0), 0.001); end
  def test_output_ac429; assert_in_delta(0, (worksheet.output_ac429||0), 0.001); end
  def test_output_ad429; assert_in_delta(0, (worksheet.output_ad429||0), 0.001); end
  def test_output_ae429; assert_in_delta(0, (worksheet.output_ae429||0), 0.001); end
  def test_output_af429; assert_in_delta(0, (worksheet.output_af429||0), 0.001); end
  def test_output_ag429; assert_in_delta(0, (worksheet.output_ag429||0), 0.001); end
  def test_output_ah429; assert_in_delta(0, (worksheet.output_ah429||0), 0.001); end
  def test_output_ai429; assert_in_delta(0, (worksheet.output_ai429||0), 0.001); end
  def test_output_aj429; assert_in_delta(0, (worksheet.output_aj429||0), 0.001); end
  def test_output_ak411; assert_in_delta(0, (worksheet.output_ak411||0), 0.001); end
  def test_output_ak429; assert_in_delta(0, (worksheet.output_ak429||0), 0.001); end
  def test_output_am429; assert_equal("", worksheet.output_am429); end
  def test_output_an429; assert_equal("", worksheet.output_an429); end
  def test_output_c430; assert_equal("X1", worksheet.output_c430); end
  def test_output_e430; assert_equal("International Aviation and Shipping", worksheet.output_e430); end
  def test_output_f430; assert_equal("%", worksheet.output_f430); end
  def test_output_g430; assert_equal("NIR", worksheet.output_g430); end
  def test_output_h430; assert_in_delta(0.11456800089430974, worksheet.output_h430, 0.001); end
  def test_output_m430; assert_in_delta(0.11066115200984038, worksheet.output_m430, 0.001); end
  def test_output_r430; assert_in_delta(0.1446524962919053, worksheet.output_r430, 0.001); end
  def test_output_w430; assert_in_delta(0.19902219718289038, worksheet.output_w430, 0.001); end
  def test_output_ab430; assert_in_delta(0.1758978977764335, worksheet.output_ab430, 0.001); end
  def test_output_ac412; assert_in_epsilon(4.4020670492089, worksheet.output_ac412, 0.001); end
  def test_output_ac430; assert_in_delta(0.029708372240784924, worksheet.output_ac430, 0.001); end
  def test_output_ad430; assert_in_delta(0.027845922485030632, worksheet.output_ad430, 0.001); end
  def test_output_ae430; assert_in_delta(0.02610023170430855, worksheet.output_ae430, 0.001); end
  def test_output_af430; assert_in_delta(0.02446398015310153, worksheet.output_af430, 0.001); end
  def test_output_ag430; assert_in_delta(0.022930306968598647, worksheet.output_ag430, 0.001); end
  def test_output_ah430; assert_in_delta(0.021492781402845565, worksheet.output_ah430, 0.001); end
  def test_output_ai430; assert_in_delta(0.020145375858382372, worksheet.output_ai430, 0.001); end
  def test_output_aj430; assert_in_delta(0.018882440614306165, worksheet.output_aj430, 0.001); end
  def test_output_ak412; assert_in_epsilon(2.6225192014278527, worksheet.output_ak412, 0.001); end
  def test_output_ak430; assert_in_delta(0.017698680136783943, worksheet.output_ak430, 0.001); end
  def test_output_am430; assert_in_delta(-0.012865000000000015, worksheet.output_am430, 0.001); end
  def test_output_an430; assert_in_delta(-0.4042527812248684, worksheet.output_an430, 0.001); end
  def test_output_b431; assert_equal("Electricity Generation Emissions", worksheet.output_b431); end
  def test_output_am431; assert_equal("", worksheet.output_am431); end
  def test_output_an431; assert_equal("", worksheet.output_an431); end
  def test_output_c432; assert_equal("Emissions from Electricity Generation, exlcuding CHP", worksheet.output_c432); end
  def test_output_g432; assert_equal("Note: Emissions from CHP are excluded, while emissions from district heating are included.", worksheet.output_g432); end
  def test_output_am432; assert_equal("", worksheet.output_am432); end
  def test_output_an432; assert_equal("", worksheet.output_an432); end
  def test_output_e433; assert_equal("Power Generation", worksheet.output_e433); end
  def test_output_am433; assert_in_delta(-0.06714185488092672, worksheet.output_am433, 0.001); end
  def test_output_an433; assert_in_delta(-0.9379667814710749, worksheet.output_an433, 0.001); end
  def test_output_e434; assert_equal("CCS in Power", worksheet.output_e434); end
  def test_output_ac434; assert_in_delta(0, (worksheet.output_ac434||0), 0.001); end
  def test_output_ad434; assert_in_delta(0, (worksheet.output_ad434||0), 0.001); end
  def test_output_ae434; assert_in_delta(0, (worksheet.output_ae434||0), 0.001); end
  def test_output_af434; assert_in_delta(0.0007220752649559858, worksheet.output_af434, 0.001); end
  def test_output_ag434; assert_in_delta(0.0014441505299119719, worksheet.output_ag434, 0.001); end
  def test_output_ah434; assert_in_delta(0.002166225794867958, worksheet.output_ah434, 0.001); end
  def test_output_ai434; assert_in_delta(0.0028883010598239433, worksheet.output_ai434, 0.001); end
  def test_output_aj434; assert_in_delta(0.00361037632477993, worksheet.output_aj434, 0.001); end
  def test_output_ak434; assert_in_delta(0.004332451589735916, worksheet.output_ak434, 0.001); end
  def test_output_am434; assert_equal("", worksheet.output_am434); end
  def test_output_an434; assert_equal("", worksheet.output_an434); end
  def test_output_e435; assert_equal("Bioenergy in Gas Power", worksheet.output_e435); end
  def test_output_am435; assert_in_delta(-1, worksheet.output_am435, 0.001); end
  def test_output_an435; assert_in_delta(-1, worksheet.output_an435, 0.001); end
  def test_output_e436; assert_equal("Bioenergy in Solid BM Power", worksheet.output_e436); end
  def test_output_am436; assert_in_delta(0.04194324707842956, worksheet.output_am436, 0.001); end
  def test_output_an436; assert_in_epsilon(4.17323934918944, worksheet.output_an436, 0.001); end
  def test_output_e437; assert_equal("Bioenergy in Solid HC CCS Power", worksheet.output_e437); end
  def test_output_am437; assert_equal("", worksheet.output_am437); end
  def test_output_an437; assert_equal("", worksheet.output_an437); end
  def test_output_e438; assert_equal("Bioenergy in Gas CCS Power", worksheet.output_e438); end
  def test_output_am438; assert_equal("", worksheet.output_am438); end
  def test_output_an438; assert_equal("", worksheet.output_an438); end
  def test_output_e439; assert_equal("Total Emissions from Power", worksheet.output_e439); end
  def test_output_am439; assert_equal("", worksheet.output_am439); end
  def test_output_an439; assert_in_epsilon(-1.9422031319714619, worksheet.output_an439, 0.001); end
  def test_output_c440; assert_equal("Emissions reclassified", worksheet.output_c440); end
  def test_output_am440; assert_equal("", worksheet.output_am440); end
  def test_output_an440; assert_equal("", worksheet.output_an440); end
  def test_output_c441; assert_in_delta(1, worksheet.output_c441, 0.001); end
  def test_output_e441; assert_equal("Fuel Combustion", worksheet.output_e441); end
  def test_output_ac433; assert_in_epsilon(19.96312356237269, worksheet.output_ac433, 0.001); end
  def test_output_ac441; assert_in_epsilon(19.96312356237269, worksheet.output_ac441, 0.001); end
  def test_output_ad433; assert_in_epsilon(8.284027771396378, worksheet.output_ad433, 0.001); end
  def test_output_ad441; assert_in_epsilon(8.284027771396378, worksheet.output_ad441, 0.001); end
  def test_output_ae433; assert_in_epsilon(8.292147020115152, worksheet.output_ae433, 0.001); end
  def test_output_ae441; assert_in_epsilon(8.292147020115152, worksheet.output_ae441, 0.001); end
  def test_output_af433; assert_in_delta(0.24011223684393518, worksheet.output_af433, 0.001); end
  def test_output_af441; assert_in_delta(0.24011223684393518, worksheet.output_af441, 0.001); end
  def test_output_ag433; assert_in_delta(0.4434670340156698, worksheet.output_ag433, 0.001); end
  def test_output_ag441; assert_in_delta(0.4434670340156698, worksheet.output_ag441, 0.001); end
  def test_output_ah433; assert_in_delta(0.6422518959334927, worksheet.output_ah433, 0.001); end
  def test_output_ah441; assert_in_delta(0.6422518959334927, worksheet.output_ah441, 0.001); end
  def test_output_ai433; assert_in_delta(0.8409984786475853, worksheet.output_ai433, 0.001); end
  def test_output_ai441; assert_in_delta(0.8409984786475853, worksheet.output_ai441, 0.001); end
  def test_output_aj433; assert_in_epsilon(1.0396876425560921, worksheet.output_aj433, 0.001); end
  def test_output_aj441; assert_in_epsilon(1.0396876425560921, worksheet.output_aj441, 0.001); end
  def test_output_ak433; assert_in_epsilon(1.2383768064645972, worksheet.output_ak433, 0.001); end
  def test_output_ak441; assert_in_epsilon(1.2383768064645972, worksheet.output_ak441, 0.001); end
  def test_output_am441; assert_in_delta(-0.06714185488092672, worksheet.output_am441, 0.001); end
  def test_output_an441; assert_in_delta(-0.9379667814710749, worksheet.output_an441, 0.001); end
  def test_output_c442; assert_equal("X2", worksheet.output_c442); end
  def test_output_e442; assert_equal("Bioenergy credit", worksheet.output_e442); end
  def test_output_ac435; assert_in_delta(-0.2744398665066856, worksheet.output_ac435, 0.001); end
  def test_output_ac471; assert_in_epsilon(25.570105738754286, worksheet.output_ac471, 0.001); end
  def test_output_ac436; assert_in_epsilon(-2.8996478146947897, worksheet.output_ac436, 0.001); end
  def test_output_ac437; assert_in_delta(0, (worksheet.output_ac437||0), 0.001); end
  def test_output_ac438; assert_in_delta(0, (worksheet.output_ac438||0), 0.001); end
  def test_output_ac442; assert_in_epsilon(-3.1740876812014753, worksheet.output_ac442, 0.001); end
  def test_output_ad435; assert_in_delta(0, (worksheet.output_ad435||0), 0.001); end
  def test_output_ad436; assert_in_epsilon(-4.274439077606885, worksheet.output_ad436, 0.001); end
  def test_output_ad437; assert_in_delta(0, (worksheet.output_ad437||0), 0.001); end
  def test_output_ad438; assert_in_delta(0, (worksheet.output_ad438||0), 0.001); end
  def test_output_ad442; assert_in_epsilon(-4.274439077606885, worksheet.output_ad442, 0.001); end
  def test_output_ae435; assert_in_delta(0, (worksheet.output_ae435||0), 0.001); end
  def test_output_ae436; assert_in_epsilon(-6.038962572949471, worksheet.output_ae436, 0.001); end
  def test_output_ae437; assert_in_delta(0, (worksheet.output_ae437||0), 0.001); end
  def test_output_ae438; assert_in_delta(0, (worksheet.output_ae438||0), 0.001); end
  def test_output_ae442; assert_in_epsilon(-6.038962572949471, worksheet.output_ae442, 0.001); end
  def test_output_af435; assert_in_delta(0, (worksheet.output_af435||0), 0.001); end
  def test_output_af436; assert_in_epsilon(-7.221259725822797, worksheet.output_af436, 0.001); end
  def test_output_af437; assert_in_delta(0, (worksheet.output_af437||0), 0.001); end
  def test_output_af438; assert_in_delta(-0.28355179485818266, worksheet.output_af438, 0.001); end
  def test_output_af442; assert_in_epsilon(-7.50481152068098, worksheet.output_af442, 0.001); end
  def test_output_ag435; assert_in_delta(0, (worksheet.output_ag435||0), 0.001); end
  def test_output_ag436; assert_in_epsilon(-9.754052347210742, worksheet.output_ag436, 0.001); end
  def test_output_ag437; assert_in_delta(0, (worksheet.output_ag437||0), 0.001); end
  def test_output_ag438; assert_in_delta(-0.6151151336288687, worksheet.output_ag438, 0.001); end
  def test_output_ag442; assert_in_epsilon(-10.36916748083961, worksheet.output_ag442, 0.001); end
  def test_output_ah435; assert_in_delta(0, (worksheet.output_ah435||0), 0.001); end
  def test_output_ah436; assert_in_epsilon(-11.074580857909035, worksheet.output_ah436, 0.001); end
  def test_output_ah437; assert_in_delta(0, (worksheet.output_ah437||0), 0.001); end
  def test_output_ah438; assert_in_delta(-0.9767876877588609, worksheet.output_ah438, 0.001); end
  def test_output_ah442; assert_in_epsilon(-12.051368545667897, worksheet.output_ah442, 0.001); end
  def test_output_ai435; assert_in_delta(0, (worksheet.output_ai435||0), 0.001); end
  def test_output_ai436; assert_in_epsilon(-12.389176999235051, worksheet.output_ai436, 0.001); end
  def test_output_ai437; assert_in_delta(0, (worksheet.output_ai437||0), 0.001); end
  def test_output_ai438; assert_in_epsilon(-1.348926929116214, worksheet.output_ai438, 0.001); end
  def test_output_ai442; assert_in_epsilon(-13.738103928351265, worksheet.output_ai442, 0.001); end
  def test_output_aj435; assert_in_delta(0, (worksheet.output_aj435||0), 0.001); end
  def test_output_aj436; assert_in_epsilon(-13.694874586502655, worksheet.output_aj436, 0.001); end
  def test_output_aj437; assert_in_delta(0, (worksheet.output_aj437||0), 0.001); end
  def test_output_aj438; assert_in_epsilon(-1.7144093799993092, worksheet.output_aj438, 0.001); end
  def test_output_aj442; assert_in_epsilon(-15.409283966501963, worksheet.output_aj442, 0.001); end
  def test_output_ak484; assert_in_delta(0, (worksheet.output_ak484||0), 0.001); end
  def test_output_ak435; assert_in_delta(0, (worksheet.output_ak435||0), 0.001); end
  def test_output_ak471; assert_in_epsilon(48.70272, worksheet.output_ak471, 0.001); end
  def test_output_ak436; assert_in_epsilon(-15.000572173770255, worksheet.output_ak436, 0.001); end
  def test_output_ak470; assert_in_delta(0, (worksheet.output_ak470||0), 0.001); end
  def test_output_ak437; assert_in_delta(0, (worksheet.output_ak437||0), 0.001); end
  def test_output_ak485; assert_in_epsilon(56.03835616438356, worksheet.output_ak485, 0.001); end
  def test_output_ak438; assert_in_epsilon(-2.0608192743048486, worksheet.output_ak438, 0.001); end
  def test_output_ak442; assert_in_epsilon(-17.061391448075103, worksheet.output_ak442, 0.001); end
  def test_output_am442; assert_in_delta(0.042941354109884866, worksheet.output_am442, 0.001); end
  def test_output_an442; assert_in_epsilon(4.375211135193632, worksheet.output_an442, 0.001); end
  def test_output_c443; assert_equal("X3", worksheet.output_c443); end
  def test_output_e443; assert_equal("Carbon capture", worksheet.output_e443); end
  def test_output_ac443; assert_in_delta(0, (worksheet.output_ac443||0), 0.001); end
  def test_output_ad443; assert_in_delta(0, (worksheet.output_ad443||0), 0.001); end
  def test_output_ae443; assert_in_delta(0, (worksheet.output_ae443||0), 0.001); end
  def test_output_af443; assert_in_delta(0.0007220752649559858, worksheet.output_af443, 0.001); end
  def test_output_ag443; assert_in_delta(0.0014441505299119719, worksheet.output_ag443, 0.001); end
  def test_output_ah443; assert_in_delta(0.002166225794867958, worksheet.output_ah443, 0.001); end
  def test_output_ai443; assert_in_delta(0.0028883010598239433, worksheet.output_ai443, 0.001); end
  def test_output_aj443; assert_in_delta(0.00361037632477993, worksheet.output_aj443, 0.001); end
  def test_output_ak443; assert_in_delta(0.004332451589735916, worksheet.output_ak443, 0.001); end
  def test_output_am443; assert_equal("", worksheet.output_am443); end
  def test_output_an443; assert_equal("", worksheet.output_an443); end
  def test_output_e444; assert_equal("Total", worksheet.output_e444); end
  def test_output_ac439; assert_in_epsilon(16.789035881171216, worksheet.output_ac439, 0.001); end
  def test_output_ac444; assert_in_epsilon(16.789035881171216, worksheet.output_ac444, 0.001); end
  def test_output_ad439; assert_in_epsilon(4.009588693789493, worksheet.output_ad439, 0.001); end
  def test_output_ad444; assert_in_epsilon(4.009588693789493, worksheet.output_ad444, 0.001); end
  def test_output_ae439; assert_in_epsilon(2.2531844471656814, worksheet.output_ae439, 0.001); end
  def test_output_ae444; assert_in_epsilon(2.2531844471656814, worksheet.output_ae444, 0.001); end
  def test_output_af439; assert_in_epsilon(-7.263977208572089, worksheet.output_af439, 0.001); end
  def test_output_af444; assert_in_epsilon(-7.263977208572089, worksheet.output_af444, 0.001); end
  def test_output_ag439; assert_in_epsilon(-9.924256296294029, worksheet.output_ag439, 0.001); end
  def test_output_ag444; assert_in_epsilon(-9.924256296294029, worksheet.output_ag444, 0.001); end
  def test_output_ah439; assert_in_epsilon(-11.406950423939536, worksheet.output_ah439, 0.001); end
  def test_output_ah444; assert_in_epsilon(-11.406950423939536, worksheet.output_ah444, 0.001); end
  def test_output_ai439; assert_in_epsilon(-12.894217148643856, worksheet.output_ai439, 0.001); end
  def test_output_ai444; assert_in_epsilon(-12.894217148643856, worksheet.output_ai444, 0.001); end
  def test_output_aj439; assert_in_epsilon(-14.365985947621091, worksheet.output_aj439, 0.001); end
  def test_output_aj444; assert_in_epsilon(-14.365985947621091, worksheet.output_aj444, 0.001); end
  def test_output_ak439; assert_in_epsilon(-15.81868219002077, worksheet.output_ak439, 0.001); end
  def test_output_ak444; assert_in_epsilon(-15.81868219002077, worksheet.output_ak444, 0.001); end
  def test_output_am444; assert_equal("", worksheet.output_am444); end
  def test_output_an444; assert_in_epsilon(-1.9422031319714619, worksheet.output_an444, 0.001); end
  def test_output_am445; assert_equal("", worksheet.output_am445); end
  def test_output_an445; assert_equal("", worksheet.output_an445); end
  def test_output_e446; assert_equal("Emissions intensity of electricity production", worksheet.output_e446); end
  def test_output_f446; assert_equal("MtCO2e/TWh", worksheet.output_f446); end
  def test_output_ad446; assert_in_delta(0.0470678430242907, worksheet.output_ad446, 0.001); end
  def test_output_ae446; assert_in_delta(0.021836985320283896, worksheet.output_ae446, 0.001); end
  def test_output_af446; assert_in_delta(-0.055122810174772836, worksheet.output_af446, 0.001); end
  def test_output_ag446; assert_in_delta(-0.057028897192149514, worksheet.output_ag446, 0.001); end
  def test_output_ah446; assert_in_delta(-0.05550119113465845, worksheet.output_ah446, 0.001); end
  def test_output_ai446; assert_in_delta(-0.05210486525065365, worksheet.output_ai446, 0.001); end
  def test_output_aj446; assert_in_delta(-0.05505442923550398, worksheet.output_aj446, 0.001); end
  def test_output_am446; assert_equal("", worksheet.output_am446); end
  def test_output_an446; assert_in_epsilon(-1.3020831767373515, worksheet.output_an446, 0.001); end
  def test_output_e447; assert_equal("Emissions intensity of electricity production", worksheet.output_e447); end
  def test_output_f447; assert_equal("gCO2e/KWh", worksheet.output_f447); end
  def test_output_ac446; assert_in_delta(0.16586223081149412, worksheet.output_ac446, 0.001); end
  def test_output_ac447; assert_in_epsilon(165.86223081149413, worksheet.output_ac447, 0.001); end
  def test_output_ad447; assert_in_epsilon(47.0678430242907, worksheet.output_ad447, 0.001); end
  def test_output_ae447; assert_in_epsilon(21.836985320283897, worksheet.output_ae447, 0.001); end
  def test_output_af447; assert_in_epsilon(-55.12281017477284, worksheet.output_af447, 0.001); end
  def test_output_ag447; assert_in_epsilon(-57.028897192149515, worksheet.output_ag447, 0.001); end
  def test_output_ah447; assert_in_epsilon(-55.50119113465845, worksheet.output_ah447, 0.001); end
  def test_output_ai447; assert_in_epsilon(-52.10486525065365, worksheet.output_ai447, 0.001); end
  def test_output_aj447; assert_in_epsilon(-55.05442923550398, worksheet.output_aj447, 0.001); end
  def test_output_ak446; assert_in_delta(-0.05010418958427995, worksheet.output_ak446, 0.001); end
  def test_output_ak447; assert_in_epsilon(-50.10418958427995, worksheet.output_ak447, 0.001); end
  def test_output_am447; assert_equal("", worksheet.output_am447); end
  def test_output_an447; assert_in_epsilon(-1.3020831767373515, worksheet.output_an447, 0.001); end
  def test_output_am448; assert_equal("", worksheet.output_am448); end
  def test_output_an448; assert_equal("", worksheet.output_an448); end
  def test_output_b449; assert_equal("Bio-energy - Production", worksheet.output_b449); end
  def test_output_am449; assert_equal("", worksheet.output_am449); end
  def test_output_an449; assert_equal("", worksheet.output_an449); end
  def test_output_c450; assert_equal("Domestic", worksheet.output_c450); end
  def test_output_am450; assert_equal("", worksheet.output_am450); end
  def test_output_an450; assert_equal("", worksheet.output_an450); end
  def test_output_c451; assert_equal("V.a", worksheet.output_c451); end
  def test_output_d451; assert_equal("V.03", worksheet.output_d451); end
  def test_output_e451; assert_equal("Solid hydrocarbons / Types of fuel from Biomass", worksheet.output_e451); end
  def test_output_f451; assert_equal("TWh/yr", worksheet.output_f451); end
  def test_output_ad451; assert_in_epsilon(15.505393182977814, worksheet.output_ad451, 0.001); end
  def test_output_ae451; assert_in_epsilon(17.425502258883757, worksheet.output_ae451, 0.001); end
  def test_output_af451; assert_in_epsilon(19.60344129363912, worksheet.output_af451, 0.001); end
  def test_output_ag451; assert_in_epsilon(20.781195591348837, worksheet.output_ag451, 0.001); end
  def test_output_ah451; assert_in_epsilon(21.926848610839784, worksheet.output_ah451, 0.001); end
  def test_output_ai451; assert_in_epsilon(23.04040035211196, worksheet.output_ai451, 0.001); end
  def test_output_aj451; assert_in_epsilon(24.105800176055983, worksheet.output_aj451, 0.001); end
  def test_output_am451; assert_in_delta(0.015586410166216647, worksheet.output_am451, 0.001); end
  def test_output_an451; assert_in_delta(0.8564157022727346, worksheet.output_an451, 0.001); end
  def test_output_c452; assert_equal("V.a", worksheet.output_c452); end
  def test_output_d452; assert_equal("V.04", worksheet.output_d452); end
  def test_output_e452; assert_equal("Liquid hydrocarbons / Types of fuel from Biomass", worksheet.output_e452); end
  def test_output_f452; assert_equal("TWh/yr", worksheet.output_f452); end
  def test_output_ad452; assert_in_delta(0.1271, worksheet.output_ad452, 0.001); end
  def test_output_ae452; assert_in_delta(0.186, worksheet.output_ae452, 0.001); end
  def test_output_af452; assert_in_delta(0.21639999999999998, worksheet.output_af452, 0.001); end
  def test_output_ag452; assert_in_delta(0.24320000000000003, worksheet.output_ag452, 0.001); end
  def test_output_ah452; assert_in_delta(0.27, worksheet.output_ah452, 0.001); end
  def test_output_ai452; assert_in_delta(0.27, worksheet.output_ai452, 0.001); end
  def test_output_aj452; assert_in_delta(0.27, worksheet.output_aj452, 0.001); end
  def test_output_am452; assert_in_delta(0.03499793842321841, worksheet.output_am452, 0.001); end
  def test_output_an452; assert_in_epsilon(2.958944281524927, worksheet.output_an452, 0.001); end
  def test_output_c453; assert_equal("V.a", worksheet.output_c453); end
  def test_output_d453; assert_equal("V.05", worksheet.output_d453); end
  def test_output_e453; assert_equal("Gaseous hydrocarbons / Types of fuel from Biomass", worksheet.output_e453); end
  def test_output_f453; assert_equal("TWh/yr", worksheet.output_f453); end
  def test_output_ad453; assert_in_epsilon(7.540442741403772, worksheet.output_ad453, 0.001); end
  def test_output_ae453; assert_in_epsilon(11.002022822502083, worksheet.output_ae453, 0.001); end
  def test_output_af453; assert_in_epsilon(13.032638189971578, worksheet.output_af453, 0.001); end
  def test_output_ag453; assert_in_epsilon(13.590826929479734, worksheet.output_ag453, 0.001); end
  def test_output_ah453; assert_in_epsilon(14.148709656417696, worksheet.output_ah453, 0.001); end
  def test_output_ai453; assert_in_epsilon(14.703144611271277, worksheet.output_ai453, 0.001); end
  def test_output_aj453; assert_in_epsilon(15.253350583827991, worksheet.output_aj453, 0.001); end
  def test_output_am453; assert_in_delta(0.03444151691926978, worksheet.output_am453, 0.001); end
  def test_output_an453; assert_in_epsilon(2.8746965734643646, worksheet.output_an453, 0.001); end
  def test_output_c454; assert_equal("Imports", worksheet.output_c454); end
  def test_output_am454; assert_equal("", worksheet.output_am454); end
  def test_output_an454; assert_equal("", worksheet.output_an454); end
  def test_output_c455; assert_equal("V.b", worksheet.output_c455); end
  def test_output_d455; assert_equal("V.03", worksheet.output_d455); end
  def test_output_e455; assert_equal("Solid hydrocarbons / Bioenergy imports", worksheet.output_e455); end
  def test_output_f455; assert_equal("TWh/yr", worksheet.output_f455); end
  def test_output_ad455; assert_in_epsilon(17, worksheet.output_ad455, 0.001); end
  def test_output_ae455; assert_in_epsilon(20, worksheet.output_ae455, 0.001); end
  def test_output_af455; assert_in_epsilon(26, worksheet.output_af455, 0.001); end
  def test_output_ag455; assert_in_epsilon(29.365466930236334, worksheet.output_ag455, 0.001); end
  def test_output_ah455; assert_in_epsilon(32.00991877345851, worksheet.output_ah455, 0.001); end
  def test_output_ai455; assert_in_epsilon(34.4813512365299, worksheet.output_ai455, 0.001); end
  def test_output_aj455; assert_in_epsilon(36.8947405814112, worksheet.output_aj455, 0.001); end
  def test_output_am455; assert_in_delta(0.02613093440505576, worksheet.output_am455, 0.001); end
  def test_output_an455; assert_in_epsilon(1.8061521391016262, worksheet.output_an455, 0.001); end
  def test_output_c456; assert_equal("V.b", worksheet.output_c456); end
  def test_output_d456; assert_equal("V.04", worksheet.output_d456); end
  def test_output_e456; assert_equal("Liquid hydrocarbons / Bioenergy imports", worksheet.output_e456); end
  def test_output_f456; assert_equal("TWh/yr", worksheet.output_f456); end
  def test_output_ad456; assert_in_epsilon(4.346242662072274, worksheet.output_ad456, 0.001); end
  def test_output_ae456; assert_in_epsilon(7.361760727655923, worksheet.output_ae456, 0.001); end
  def test_output_af456; assert_in_epsilon(8.58872084893191, worksheet.output_af456, 0.001); end
  def test_output_ag456; assert_in_epsilon(9.815680970207897, worksheet.output_ag456, 0.001); end
  def test_output_ah456; assert_in_epsilon(11.042641091483883, worksheet.output_ah456, 0.001); end
  def test_output_ai456; assert_in_epsilon(12.26960121275987, worksheet.output_ai456, 0.001); end
  def test_output_aj456; assert_in_epsilon(13.496561334035857, worksheet.output_aj456, 0.001); end
  def test_output_am456; assert_in_delta(0.030973359216438068, worksheet.output_am456, 0.001); end
  def test_output_an456; assert_in_epsilon(2.387643672958592, worksheet.output_an456, 0.001); end
  def test_output_c457; assert_equal("V.b", worksheet.output_c457); end
  def test_output_d457; assert_equal("V.05", worksheet.output_d457); end
  def test_output_e457; assert_equal("Gaseous hydrocarbons / Bioenergy imports", worksheet.output_e457); end
  def test_output_f457; assert_equal("TWh/yr", worksheet.output_f457); end
  def test_output_ad457; assert_in_delta(0, (worksheet.output_ad457||0), 0.001); end
  def test_output_ae457; assert_in_delta(0, (worksheet.output_ae457||0), 0.001); end
  def test_output_af457; assert_in_delta(0, (worksheet.output_af457||0), 0.001); end
  def test_output_ag457; assert_in_delta(0, (worksheet.output_ag457||0), 0.001); end
  def test_output_ah457; assert_in_delta(0, (worksheet.output_ah457||0), 0.001); end
  def test_output_ai457; assert_in_delta(0, (worksheet.output_ai457||0), 0.001); end
  def test_output_aj457; assert_in_delta(0, (worksheet.output_aj457||0), 0.001); end
  def test_output_am457; assert_equal("", worksheet.output_am457); end
  def test_output_an457; assert_equal("", worksheet.output_an457); end
  def test_output_c458; assert_equal("Total", worksheet.output_c458); end
  def test_output_am458; assert_equal("", worksheet.output_am458); end
  def test_output_an458; assert_equal("", worksheet.output_an458); end
  def test_output_d459; assert_equal("V.03", worksheet.output_d459); end
  def test_output_e459; assert_equal("Solid hydrocarbons", worksheet.output_e459); end
  def test_output_f459; assert_equal("TWh/yr", worksheet.output_f459); end
  def test_output_ad459; assert_in_epsilon(32.50539318297781, worksheet.output_ad459, 0.001); end
  def test_output_ae459; assert_in_epsilon(37.42550225888375, worksheet.output_ae459, 0.001); end
  def test_output_af459; assert_in_epsilon(45.60344129363912, worksheet.output_af459, 0.001); end
  def test_output_ag459; assert_in_epsilon(50.14666252158517, worksheet.output_ag459, 0.001); end
  def test_output_ah459; assert_in_epsilon(53.93676738429829, worksheet.output_ah459, 0.001); end
  def test_output_ai459; assert_in_epsilon(57.52175158864186, worksheet.output_ai459, 0.001); end
  def test_output_aj459; assert_in_epsilon(61.00054075746718, worksheet.output_aj459, 0.001); end
  def test_output_am459; assert_in_delta(0.021469041837536507, worksheet.output_am459, 0.001); end
  def test_output_an459; assert_in_epsilon(1.3388822160763687, worksheet.output_an459, 0.001); end
  def test_output_d460; assert_equal("V.04", worksheet.output_d460); end
  def test_output_e460; assert_equal("Liquid hydrocarbons", worksheet.output_e460); end
  def test_output_f460; assert_equal("TWh/yr", worksheet.output_f460); end
  def test_output_ad460; assert_in_epsilon(4.473342662072273, worksheet.output_ad460, 0.001); end
  def test_output_ae460; assert_in_epsilon(7.547760727655923, worksheet.output_ae460, 0.001); end
  def test_output_af460; assert_in_epsilon(8.80512084893191, worksheet.output_af460, 0.001); end
  def test_output_ag460; assert_in_epsilon(10.058880970207897, worksheet.output_ag460, 0.001); end
  def test_output_ah460; assert_in_epsilon(11.312641091483883, worksheet.output_ah460, 0.001); end
  def test_output_ai460; assert_in_epsilon(12.53960121275987, worksheet.output_ai460, 0.001); end
  def test_output_aj460; assert_in_epsilon(13.766561334035856, worksheet.output_aj460, 0.001); end
  def test_output_am460; assert_in_delta(0.0310404266815123, worksheet.output_am460, 0.001); end
  def test_output_an460; assert_in_epsilon(2.3964698611066413, worksheet.output_an460, 0.001); end
  def test_output_d461; assert_equal("V.05", worksheet.output_d461); end
  def test_output_e461; assert_equal("Gaseous hydrocarbons", worksheet.output_e461); end
  def test_output_f461; assert_equal("TWh/yr", worksheet.output_f461); end
  def test_output_ad461; assert_in_epsilon(7.540442741403772, worksheet.output_ad461, 0.001); end
  def test_output_ae461; assert_in_epsilon(11.002022822502083, worksheet.output_ae461, 0.001); end
  def test_output_af461; assert_in_epsilon(13.032638189971578, worksheet.output_af461, 0.001); end
  def test_output_ag461; assert_in_epsilon(13.590826929479734, worksheet.output_ag461, 0.001); end
  def test_output_ah461; assert_in_epsilon(14.148709656417696, worksheet.output_ah461, 0.001); end
  def test_output_ai461; assert_in_epsilon(14.703144611271277, worksheet.output_ai461, 0.001); end
  def test_output_aj461; assert_in_epsilon(15.253350583827991, worksheet.output_aj461, 0.001); end
  def test_output_am461; assert_in_delta(0.03444151691926978, worksheet.output_am461, 0.001); end
  def test_output_an461; assert_in_epsilon(2.8746965734643646, worksheet.output_an461, 0.001); end
  def test_output_c462; assert_equal("Emissions by type of bioenergy", worksheet.output_c462); end
  def test_output_am462; assert_equal("", worksheet.output_am462); end
  def test_output_an462; assert_equal("", worksheet.output_an462); end
  def test_output_d463; assert_equal("V.03", worksheet.output_d463); end
  def test_output_e463; assert_equal("Solid hydrocarbons", worksheet.output_e463); end
  def test_output_f463; assert_equal("MtCO2e", worksheet.output_f463); end
  def test_output_ad463; assert_in_epsilon(9.947148992996748, worksheet.output_ad463, 0.001); end
  def test_output_ae463; assert_in_epsilon(11.452777851701372, worksheet.output_ae463, 0.001); end
  def test_output_af463; assert_in_epsilon(13.95535265756328, worksheet.output_af463, 0.001); end
  def test_output_ag463; assert_in_epsilon(15.345648052796058, worksheet.output_ag463, 0.001); end
  def test_output_ah463; assert_in_epsilon(16.505478286390392, worksheet.output_ah463, 0.001); end
  def test_output_ai463; assert_in_epsilon(17.602538451680743, worksheet.output_ai463, 0.001); end
  def test_output_aj463; assert_in_epsilon(18.66710130691948, worksheet.output_aj463, 0.001); end
  def test_output_am463; assert_in_delta(0.021469041837536507, worksheet.output_am463, 0.001); end
  def test_output_an463; assert_in_epsilon(1.3388822160763687, worksheet.output_an463, 0.001); end
  def test_output_d464; assert_equal("V.04", worksheet.output_d464); end
  def test_output_e464; assert_equal("Liquid hydrocarbons", worksheet.output_e464); end
  def test_output_f464; assert_equal("MtCO2e", worksheet.output_f464); end
  def test_output_am464; assert_in_delta(0.0310404266815123, worksheet.output_am464, 0.001); end
  def test_output_an464; assert_in_epsilon(2.3964698611066413, worksheet.output_an464, 0.001); end
  def test_output_d465; assert_equal("V.05", worksheet.output_d465); end
  def test_output_e465; assert_equal("Gaseous hydrocarbons", worksheet.output_e465); end
  def test_output_f465; assert_equal("MtCO2e", worksheet.output_f465); end
  def test_output_ad465; assert_in_epsilon(1.515581234988412, worksheet.output_ad465, 0.001); end
  def test_output_ae465; assert_in_epsilon(2.2113369079962255, worksheet.output_ae465, 0.001); end
  def test_output_af465; assert_in_epsilon(2.6194777363215036, worksheet.output_af465, 0.001); end
  def test_output_ag465; assert_in_epsilon(2.731670137774963, worksheet.output_ag465, 0.001); end
  def test_output_ah465; assert_in_epsilon(2.8438010326398886, worksheet.output_ah465, 0.001); end
  def test_output_ai465; assert_in_epsilon(2.9552389471516967, worksheet.output_ai465, 0.001); end
  def test_output_aj465; assert_in_epsilon(3.0658268630053302, worksheet.output_aj465, 0.001); end
  def test_output_am465; assert_in_delta(0.03444151691926978, worksheet.output_am465, 0.001); end
  def test_output_an465; assert_in_epsilon(2.874696573464364, worksheet.output_an465, 0.001); end
  def test_output_am466; assert_equal("", worksheet.output_am466); end
  def test_output_an466; assert_equal("", worksheet.output_an466); end
  def test_output_b467; assert_equal("Hydro-carbon use by sector and Bio-energy share", worksheet.output_b467); end
  def test_output_am467; assert_equal("", worksheet.output_am467); end
  def test_output_an467; assert_equal("", worksheet.output_an467); end
  def test_output_c468; assert_equal("Solid Hydrocarbon consumption", worksheet.output_c468); end
  def test_output_ad468; assert_in_epsilon(70.56115249106617, worksheet.output_ad468, 0.001); end
  def test_output_ae468; assert_in_epsilon(65.30160964357776, worksheet.output_ae468, 0.001); end
  def test_output_af468; assert_in_epsilon(48.78648902012052, worksheet.output_af468, 0.001); end
  def test_output_ag468; assert_in_epsilon(50.14666252158517, worksheet.output_ag468, 0.001); end
  def test_output_ah468; assert_in_epsilon(53.93676738429829, worksheet.output_ah468, 0.001); end
  def test_output_ai468; assert_in_epsilon(57.52175158864186, worksheet.output_ai468, 0.001); end
  def test_output_aj468; assert_in_epsilon(61.00054075746718, worksheet.output_aj468, 0.001); end
  def test_output_am468; assert_in_delta(-0.0037308971676063285, worksheet.output_am468, 0.001); end
  def test_output_an468; assert_in_delta(-0.1388744556712065, worksheet.output_an468, 0.001); end
  def test_output_c469; assert_equal("V", worksheet.output_c469); end
  def test_output_e469; assert_equal("Share of solid biomass to total solid hydrocarbon consumption", worksheet.output_e469); end
  def test_output_ac468; assert_in_epsilon(74.85241887425856, worksheet.output_ac468, 0.001); end
  def test_output_ac469; assert_in_delta(0.3681782427562296, worksheet.output_ac469, 0.001); end
  def test_output_ad469; assert_in_delta(0.4606698166826762, worksheet.output_ad469, 0.001); end
  def test_output_ae469; assert_in_delta(0.5731176071027286, worksheet.output_ae469, 0.001); end
  def test_output_af469; assert_in_delta(0.9347555483000909, worksheet.output_af469, 0.001); end
  def test_output_ag469; assert_in_delta(1, worksheet.output_ag469, 0.001); end
  def test_output_ah469; assert_in_delta(1, worksheet.output_ah469, 0.001); end
  def test_output_ai469; assert_in_delta(1, worksheet.output_ai469, 0.001); end
  def test_output_aj469; assert_in_delta(1, worksheet.output_aj469, 0.001); end
  def test_output_ak468; assert_in_epsilon(64.45732994742276, worksheet.output_ak468, 0.001); end
  def test_output_ak469; assert_in_delta(1, worksheet.output_ak469, 0.001); end
  def test_output_am469; assert_in_delta(0.025294309472711163, worksheet.output_am469, 0.001); end
  def test_output_an469; assert_in_epsilon(1.7160757586159128, worksheet.output_an469, 0.001); end
  def test_output_c470; assert_equal("I.b", worksheet.output_c470); end
  def test_output_e470; assert_equal("Carbon Capture Storage (CCS)", worksheet.output_e470); end
  def test_output_ac470; assert_in_delta(0, (worksheet.output_ac470||0), 0.001); end
  def test_output_ad470; assert_in_delta(0, (worksheet.output_ad470||0), 0.001); end
  def test_output_ae470; assert_in_delta(0, (worksheet.output_ae470||0), 0.001); end
  def test_output_af470; assert_in_delta(0, (worksheet.output_af470||0), 0.001); end
  def test_output_ag470; assert_in_delta(0, (worksheet.output_ag470||0), 0.001); end
  def test_output_ah470; assert_in_delta(0, (worksheet.output_ah470||0), 0.001); end
  def test_output_ai470; assert_in_delta(0, (worksheet.output_ai470||0), 0.001); end
  def test_output_aj470; assert_in_delta(0, (worksheet.output_aj470||0), 0.001); end
  def test_output_am470; assert_equal("", worksheet.output_am470); end
  def test_output_an470; assert_equal("", worksheet.output_an470); end
  def test_output_c471; assert_equal("I.a", worksheet.output_c471); end
  def test_output_e471; assert_equal("Biomass and gas power stations", worksheet.output_e471); end
  def test_output_ad471; assert_in_epsilon(30.125534809052343, worksheet.output_ad471, 0.001); end
  def test_output_ae471; assert_in_epsilon(34.2108590061542, worksheet.output_ae471, 0.001); end
  def test_output_af471; assert_in_epsilon(25.081892711501517, worksheet.output_af471, 0.001); end
  def test_output_ag471; assert_in_epsilon(31.668717354809303, worksheet.output_ag471, 0.001); end
  def test_output_ah471; assert_in_epsilon(35.95610916650387, worksheet.output_ah471, 0.001); end
  def test_output_ai471; assert_in_epsilon(40.22424021126717, worksheet.output_ai471, 0.001); end
  def test_output_aj471; assert_in_epsilon(44.46348010563359, worksheet.output_aj471, 0.001); end
  def test_output_am471; assert_in_delta(0.016238203462068057, worksheet.output_am471, 0.001); end
  def test_output_an471; assert_in_delta(0.9046741729419487, worksheet.output_an471, 0.001); end
  def test_output_c472; assert_equal("XI", worksheet.output_c472); end
  def test_output_e472; assert_equal("Industry", worksheet.output_e472); end
  def test_output_ac472; assert_in_epsilon(46.222428083198764, worksheet.output_ac472, 0.001); end
  def test_output_ad472; assert_in_epsilon(37.46329312194105, worksheet.output_ad472, 0.001); end
  def test_output_ae472; assert_in_epsilon(28.35649942691964, worksheet.output_ae472, 0.001); end
  def test_output_af472; assert_in_epsilon(21.328416073148183, worksheet.output_af472, 0.001); end
  def test_output_ag472; assert_in_epsilon(16.425446156081076, worksheet.output_ag472, 0.001); end
  def test_output_ah472; assert_in_epsilon(16.19005900434946, worksheet.output_ah472, 0.001); end
  def test_output_ai472; assert_in_epsilon(15.761198161798488, worksheet.output_ai472, 0.001); end
  def test_output_aj472; assert_in_epsilon(15.250090793834756, worksheet.output_aj472, 0.001); end
  def test_output_ak472; assert_in_epsilon(14.68617467530458, worksheet.output_ak472, 0.001); end
  def test_output_am472; assert_in_delta(-0.02825705035315562, worksheet.output_am472, 0.001); end
  def test_output_an472; assert_in_delta(-0.6822716745024737, worksheet.output_an472, 0.001); end
  def test_output_c473; assert_equal("IX", worksheet.output_c473); end
  def test_output_e473; assert_equal("Heating", worksheet.output_e473); end
  def test_output_ac473; assert_in_epsilon(3.059885052305508, worksheet.output_ac473, 0.001); end
  def test_output_ad473; assert_in_epsilon(2.9723245600727752, worksheet.output_ad473, 0.001); end
  def test_output_ae473; assert_in_epsilon(2.734251210503913, worksheet.output_ae473, 0.001); end
  def test_output_af473; assert_in_epsilon(2.376180235470819, worksheet.output_af473, 0.001); end
  def test_output_ag473; assert_in_epsilon(2.052499010694791, worksheet.output_ag473, 0.001); end
  def test_output_ah473; assert_in_epsilon(1.7905992134449642, worksheet.output_ah473, 0.001); end
  def test_output_ai473; assert_in_epsilon(1.5363132155761996, worksheet.output_ai473, 0.001); end
  def test_output_aj473; assert_in_epsilon(1.286969857998829, worksheet.output_aj473, 0.001); end
  def test_output_ak473; assert_in_epsilon(1.0684352721181862, worksheet.output_ak473, 0.001); end
  def test_output_am473; assert_in_delta(-0.025961602249159, worksheet.output_am473, 0.001); end
  def test_output_an473; assert_in_delta(-0.6508250297464081, worksheet.output_an473, 0.001); end
  def test_output_c474; assert_equal("Liquid Hydrocarbon consumption", worksheet.output_c474); end
  def test_output_ad474; assert_in_epsilon(161.40418951655863, worksheet.output_ad474, 0.001); end
  def test_output_ae474; assert_in_epsilon(133.216036600948, worksheet.output_ae474, 0.001); end
  def test_output_af474; assert_in_epsilon(105.47134480289493, worksheet.output_af474, 0.001); end
  def test_output_ag474; assert_in_epsilon(82.30185036567792, worksheet.output_ag474, 0.001); end
  def test_output_ah474; assert_in_epsilon(63.85981082373432, worksheet.output_ah474, 0.001); end
  def test_output_ai474; assert_in_epsilon(50.35144358121418, worksheet.output_ai474, 0.001); end
  def test_output_aj474; assert_in_epsilon(39.11309700656619, worksheet.output_aj474, 0.001); end
  def test_output_am474; assert_in_delta(-0.043487094840079066, worksheet.output_am474, 0.001); end
  def test_output_an474; assert_in_delta(-0.8310985592694234, worksheet.output_an474, 0.001); end
  def test_output_c475; assert_equal("V", worksheet.output_c475); end
  def test_output_e475; assert_equal("Share of Bioliquids to total liquid hydrocarbon consumption", worksheet.output_e475); end
  def test_output_ac474; assert_in_epsilon(176.408279477393, worksheet.output_ac474, 0.001); end
  def test_output_ac475; assert_in_delta(0.025024010636858978, worksheet.output_ac475, 0.001); end
  def test_output_ad475; assert_in_delta(0.02771515829589633, worksheet.output_ad475, 0.001); end
  def test_output_ae475; assert_in_delta(0.05665804898749113, worksheet.output_ae475, 0.001); end
  def test_output_af475; assert_in_delta(0.08348353636134002, worksheet.output_af475, 0.001); end
  def test_output_ag475; assert_in_delta(0.12221937812473192, worksheet.output_ag475, 0.001); end
  def test_output_ah475; assert_in_delta(0.17714805204652115, worksheet.output_ah475, 0.001); end
  def test_output_ai475; assert_in_delta(0.24904154321879898, worksheet.output_ai475, 0.001); end
  def test_output_aj475; assert_in_delta(0.35196807176186445, worksheet.output_aj475, 0.001); end
  def test_output_ak474; assert_in_epsilon(29.795612560533872, worksheet.output_ak474, 0.001); end
  def test_output_ak475; assert_in_delta(0.5032123915845144, worksheet.output_ak475, 0.001); end
  def test_output_am475; assert_in_delta(0.07791585572923454, worksheet.output_am475, 0.001); end
  def test_output_an475; assert_in_epsilon(19.109182292438387, worksheet.output_an475, 0.001); end
  def test_output_c476; assert_equal("XII", worksheet.output_c476); end
  def test_output_e476; assert_equal("Transport", worksheet.output_e476); end
  def test_output_ac476; assert_in_epsilon(114.28616266127325, worksheet.output_ac476, 0.001); end
  def test_output_ad476; assert_in_epsilon(106.97550727269866, worksheet.output_ad476, 0.001); end
  def test_output_ae476; assert_in_epsilon(89.36954161796672, worksheet.output_ae476, 0.001); end
  def test_output_af476; assert_in_epsilon(72.58310351498324, worksheet.output_af476, 0.001); end
  def test_output_ag476; assert_in_epsilon(56.72292839027392, worksheet.output_ag476, 0.001); end
  def test_output_ah476; assert_in_epsilon(43.59633127393328, worksheet.output_ah476, 0.001); end
  def test_output_ai476; assert_in_epsilon(34.391193566513635, worksheet.output_ai476, 0.001); end
  def test_output_aj476; assert_in_epsilon(26.541602234059948, worksheet.output_aj476, 0.001); end
  def test_output_ak476; assert_in_epsilon(19.994249806285943, worksheet.output_ak476, 0.001); end
  def test_output_am476; assert_in_delta(-0.04264549213565849, worksheet.output_am476, 0.001); end
  def test_output_an476; assert_in_delta(-0.8250510005699828, worksheet.output_an476, 0.001); end
  def test_output_c477; assert_equal("XI", worksheet.output_c477); end
  def test_output_e477; assert_equal("Industry", worksheet.output_e477); end
  def test_output_ac477; assert_in_epsilon(9.966345214825088, worksheet.output_ac477, 0.001); end
  def test_output_ad477; assert_in_epsilon(7.073462111984176, worksheet.output_ad477, 0.001); end
  def test_output_ae477; assert_in_epsilon(4.336607617295266, worksheet.output_ae477, 0.001); end
  def test_output_af477; assert_in_epsilon(2.7650977412034337, worksheet.output_af477, 0.001); end
  def test_output_ag477; assert_in_epsilon(1.786000264295472, worksheet.output_ag477, 0.001); end
  def test_output_ah477; assert_in_epsilon(1.4466625612484598, worksheet.output_ah477, 0.001); end
  def test_output_ai477; assert_in_epsilon(1.1797994975378514, worksheet.output_ai477, 0.001); end
  def test_output_aj477; assert_in_delta(0.9663341466885703, worksheet.output_aj477, 0.001); end
  def test_output_ak477; assert_in_delta(0.8013996361768664, worksheet.output_ak477, 0.001); end
  def test_output_am477; assert_in_delta(-0.06107083272583813, worksheet.output_am477, 0.001); end
  def test_output_an477; assert_in_delta(-0.9195894162902593, worksheet.output_an477, 0.001); end
  def test_output_c478; assert_equal("XV.a", worksheet.output_c478); end
  def test_output_e478; assert_equal("Petroleum refineries [UNUSED]", worksheet.output_e478); end
  def test_output_ac478; assert_in_delta(0, (worksheet.output_ac478||0), 0.001); end
  def test_output_ad478; assert_in_delta(0, (worksheet.output_ad478||0), 0.001); end
  def test_output_ae478; assert_in_delta(0, (worksheet.output_ae478||0), 0.001); end
  def test_output_af478; assert_in_delta(0, (worksheet.output_af478||0), 0.001); end
  def test_output_ag478; assert_in_delta(0, (worksheet.output_ag478||0), 0.001); end
  def test_output_ah478; assert_in_delta(0, (worksheet.output_ah478||0), 0.001); end
  def test_output_ai478; assert_in_delta(0, (worksheet.output_ai478||0), 0.001); end
  def test_output_aj478; assert_in_delta(0, (worksheet.output_aj478||0), 0.001); end
  def test_output_ak478; assert_in_delta(0, (worksheet.output_ak478||0), 0.001); end
  def test_output_am478; assert_equal("", worksheet.output_am478); end
  def test_output_an478; assert_equal("", worksheet.output_an478); end
  def test_output_c479; assert_equal("Gaseous Hydrocarbon consumption", worksheet.output_c479); end
  def test_output_ad479; assert_in_epsilon(107.88687903641069, worksheet.output_ad479, 0.001); end
  def test_output_ae479; assert_in_epsilon(91.73585860656809, worksheet.output_ae479, 0.001); end
  def test_output_af479; assert_in_epsilon(86.43125199706151, worksheet.output_af479, 0.001); end
  def test_output_ag479; assert_in_epsilon(83.09795415213193, worksheet.output_ag479, 0.001); end
  def test_output_ah479; assert_in_epsilon(81.71631589045802, worksheet.output_ah479, 0.001); end
  def test_output_ai479; assert_in_epsilon(81.988447218654, worksheet.output_ai479, 0.001); end
  def test_output_aj479; assert_in_epsilon(83.65493930420254, worksheet.output_aj479, 0.001); end
  def test_output_am479; assert_in_delta(-0.018120496853839874, worksheet.output_am479, 0.001); end
  def test_output_an479; assert_in_delta(-0.5187976197552829, worksheet.output_an479, 0.001); end
  def test_output_c480; assert_equal("V", worksheet.output_c480); end
  def test_output_e480; assert_equal("Share of Biogas to total gaseous hydrocarbon consumption", worksheet.output_e480); end
  def test_output_ac479; assert_in_epsilon(179.78471149850694, worksheet.output_ac479, 0.001); end
  def test_output_ac480; assert_in_delta(0.022683384753030052, worksheet.output_ac480, 0.001); end
  def test_output_ad480; assert_in_delta(0.06989212042049109, worksheet.output_ad480, 0.001); end
  def test_output_ae480; assert_in_delta(0.11993154028989883, worksheet.output_ae480, 0.001); end
  def test_output_af480; assert_in_delta(0.15078617848107376, worksheet.output_af480, 0.001); end
  def test_output_ag480; assert_in_delta(0.16355188365526147, worksheet.output_ag480, 0.001); end
  def test_output_ah480; assert_in_delta(0.1731442430099793, worksheet.output_ah480, 0.001); end
  def test_output_ai480; assert_in_delta(0.17933190723882889, worksheet.output_ai480, 0.001); end
  def test_output_aj480; assert_in_delta(0.18233652084021912, worksheet.output_aj480, 0.001); end
  def test_output_ak479; assert_in_epsilon(86.51283110469129, worksheet.output_ak479, 0.001); end
  def test_output_ak480; assert_in_delta(0.18264920703933754, worksheet.output_ak480, 0.001); end
  def test_output_am480; assert_in_delta(0.053532040952773974, worksheet.output_am480, 0.001); end
  def test_output_an480; assert_in_epsilon(7.05211431309603, worksheet.output_an480, 0.001); end
  def test_output_c481; assert_equal("IX.a", worksheet.output_c481); end
  def test_output_e481; assert_equal("Domestic space heating and hot water", worksheet.output_e481); end
  def test_output_ac481; assert_in_epsilon(31.498232239201204, worksheet.output_ac481, 0.001); end
  def test_output_ad481; assert_in_epsilon(28.050180145849446, worksheet.output_ad481, 0.001); end
  def test_output_ae481; assert_in_epsilon(22.77221139140847, worksheet.output_ae481, 0.001); end
  def test_output_af481; assert_in_epsilon(17.15777228050627, worksheet.output_af481, 0.001); end
  def test_output_ag481; assert_in_epsilon(12.623290182033204, worksheet.output_ag481, 0.001); end
  def test_output_ah481; assert_in_epsilon(9.205833861834334, worksheet.output_ah481, 0.001); end
  def test_output_ai481; assert_in_epsilon(6.3537657536352405, worksheet.output_ai481, 0.001); end
  def test_output_aj481; assert_in_epsilon(4.024630163796058, worksheet.output_aj481, 0.001); end
  def test_output_ak481; assert_in_epsilon(2.208004506280414, worksheet.output_ak481, 0.001); end
  def test_output_am481; assert_in_delta(-0.06428660974607059, worksheet.output_am481, 0.001); end
  def test_output_an481; assert_in_delta(-0.9299006849174083, worksheet.output_an481, 0.001); end
  def test_output_c482; assert_equal("IX.c", worksheet.output_c482); end
  def test_output_e482; assert_equal("Commercial heating and cooling", worksheet.output_e482); end
  def test_output_ac482; assert_in_epsilon(16.923565202435206, worksheet.output_ac482, 0.001); end
  def test_output_ad482; assert_in_epsilon(15.649255472991005, worksheet.output_ad482, 0.001); end
  def test_output_ae482; assert_in_epsilon(12.124346985759361, worksheet.output_ae482, 0.001); end
  def test_output_af482; assert_in_epsilon(9.007202743459889, worksheet.output_af482, 0.001); end
  def test_output_ag482; assert_in_epsilon(6.520646613752154, worksheet.output_ag482, 0.001); end
  def test_output_ah482; assert_in_epsilon(4.499549480598471, worksheet.output_ah482, 0.001); end
  def test_output_ai482; assert_in_epsilon(2.9245403763329234, worksheet.output_ai482, 0.001); end
  def test_output_aj482; assert_in_epsilon(1.7311446742400496, worksheet.output_aj482, 0.001); end
  def test_output_ak482; assert_in_delta(0.4587409259568149, worksheet.output_ak482, 0.001); end
  def test_output_am482; assert_in_delta(-0.08625105045460713, worksheet.output_am482, 0.001); end
  def test_output_an482; assert_in_delta(-0.97289336375229, worksheet.output_an482, 0.001); end
  def test_output_c483; assert_equal("XI", worksheet.output_c483); end
  def test_output_e483; assert_equal("Industry", worksheet.output_e483); end
  def test_output_ac483; assert_in_epsilon(70.9872520436923, worksheet.output_ac483, 0.001); end
  def test_output_ad483; assert_in_epsilon(63.919048695224085, worksheet.output_ad483, 0.001); end
  def test_output_ae483; assert_in_epsilon(54.477584675800685, worksheet.output_ae483, 0.001); end
  def test_output_af483; assert_in_epsilon(46.786924944519534, worksheet.output_af483, 0.001); end
  def test_output_ag483; assert_in_epsilon(39.6612279577962, worksheet.output_ag483, 0.001); end
  def test_output_ah483; assert_in_epsilon(33.22363813980179, worksheet.output_ah483, 0.001); end
  def test_output_ai483; assert_in_epsilon(27.736449733088822, worksheet.output_ai483, 0.001); end
  def test_output_aj483; assert_in_epsilon(23.060051455748344, worksheet.output_aj483, 0.001); end
  def test_output_ak483; assert_in_epsilon(19.465766078813907, worksheet.output_ak483, 0.001); end
  def test_output_am483; assert_in_delta(-0.03182853524507312, worksheet.output_am483, 0.001); end
  def test_output_an483; assert_in_delta(-0.7257850456468884, worksheet.output_an483, 0.001); end
  def test_output_c484; assert_equal("I.a", worksheet.output_c484); end
  def test_output_e484; assert_equal("Biomass and gas power stations", worksheet.output_e484); end
  def test_output_ac484; assert_in_epsilon(60.09005628517823, worksheet.output_ac484, 0.001); end
  def test_output_ad484; assert_in_delta(0, (worksheet.output_ad484||0), 0.001); end
  def test_output_ae484; assert_in_delta(0, (worksheet.output_ae484||0), 0.001); end
  def test_output_af484; assert_in_delta(0, (worksheet.output_af484||0), 0.001); end
  def test_output_ag484; assert_in_delta(0, (worksheet.output_ag484||0), 0.001); end
  def test_output_ah484; assert_in_delta(0, (worksheet.output_ah484||0), 0.001); end
  def test_output_ai484; assert_in_delta(0, (worksheet.output_ai484||0), 0.001); end
  def test_output_aj484; assert_in_delta(0, (worksheet.output_aj484||0), 0.001); end
  def test_output_am484; assert_in_delta(-1, worksheet.output_am484, 0.001); end
  def test_output_an484; assert_in_delta(-1, worksheet.output_an484, 0.001); end
  def test_output_c485; assert_equal("I.b", worksheet.output_c485); end
  def test_output_e485; assert_equal("Carbon Capture Storage (CCS)", worksheet.output_e485); end
  def test_output_ac485; assert_in_delta(0, (worksheet.output_ac485||0), 0.001); end
  def test_output_ad485; assert_in_delta(0, (worksheet.output_ad485||0), 0.001); end
  def test_output_ae485; assert_in_delta(0, (worksheet.output_ae485||0), 0.001); end
  def test_output_af485; assert_in_epsilon(9.339726027397258, worksheet.output_af485, 0.001); end
  def test_output_ag485; assert_in_epsilon(18.67945205479452, worksheet.output_ag485, 0.001); end
  def test_output_ah485; assert_in_epsilon(28.019178082191782, worksheet.output_ah485, 0.001); end
  def test_output_ai485; assert_in_epsilon(37.358904109589034, worksheet.output_ai485, 0.001); end
  def test_output_aj485; assert_in_epsilon(46.6986301369863, worksheet.output_aj485, 0.001); end
  def test_output_am485; assert_equal("", worksheet.output_am485); end
  def test_output_an485; assert_equal("", worksheet.output_an485); end
  def test_output_am486; assert_equal("", worksheet.output_am486); end
  def test_output_an486; assert_equal("", worksheet.output_an486); end
  def test_output_b487; assert_equal("Costs", worksheet.output_b487); end
  def test_output_am487; assert_equal("", worksheet.output_am487); end
  def test_output_an487; assert_equal("", worksheet.output_an487); end
  def test_output_c488; assert_equal("Building", worksheet.output_c488); end
  def test_output_am488; assert_equal("", worksheet.output_am488); end
  def test_output_an488; assert_equal("", worksheet.output_an488); end
  def test_output_ap488; assert_equal("Modeled", worksheet.output_ap488); end
  def test_output_aq488; assert_equal("REF", worksheet.output_aq488); end
  def test_output_e489; assert_equal("Average INVESTMENTS for Building", worksheet.output_e489); end
  def test_output_f489; assert_equal("MEUR", worksheet.output_f489); end
  def test_output_am489; assert_in_delta(0.008548099533821407, worksheet.output_am489, 0.001); end
  def test_output_an489; assert_in_delta(0.40560927481004994, worksheet.output_an489, 0.001); end
  def test_output_ao489; assert_equal("Transport", worksheet.output_ao489); end
  def test_output_aq489; assert_in_epsilon(13032.641608248498, worksheet.output_aq489, 0.001); end
  def test_output_ar489; assert_in_epsilon(-3608.810014227014, worksheet.output_ar489, 0.001); end
  def test_costs_f64; assert_in_epsilon(6127.396210004439, worksheet.costs_f64, 0.001); end
  def test_costs_f133; assert_in_epsilon(7275.324948121434, worksheet.costs_f133, 0.001); end
  def test_output_ac494; assert_in_epsilon(6701.360579062937, worksheet.output_ac494, 0.001); end
  def test_costs_g64; assert_in_epsilon(7291.949923506018, worksheet.costs_g64, 0.001); end
  def test_costs_g133; assert_in_epsilon(9057.81659020619, worksheet.costs_g133, 0.001); end
  def test_output_ad494; assert_in_epsilon(8174.883256856105, worksheet.output_ad494, 0.001); end
  def test_costs_h64; assert_in_epsilon(10244.669366143862, worksheet.costs_h64, 0.001); end
  def test_costs_h133; assert_in_epsilon(12041.928132542525, worksheet.costs_h133, 0.001); end
  def test_output_ae494; assert_in_epsilon(11143.298749343194, worksheet.output_ae494, 0.001); end
  def test_costs_i64; assert_in_epsilon(10210.683244344556, worksheet.costs_i64, 0.001); end
  def test_costs_i133; assert_in_epsilon(12000.355597801372, worksheet.costs_i133, 0.001); end
  def test_output_af494; assert_in_epsilon(11105.519421072964, worksheet.output_af494, 0.001); end
  def test_costs_j64; assert_in_epsilon(10187.535888114167, worksheet.costs_j64, 0.001); end
  def test_costs_j133; assert_in_epsilon(12264.12133835753, worksheet.costs_j133, 0.001); end
  def test_output_ag494; assert_in_epsilon(11225.828613235848, worksheet.output_ag494, 0.001); end
  def test_costs_k64; assert_in_epsilon(9453.49855006499, worksheet.costs_k64, 0.001); end
  def test_costs_k133; assert_in_epsilon(11541.057494888046, worksheet.costs_k133, 0.001); end
  def test_output_ah494; assert_in_epsilon(10497.278022476517, worksheet.output_ah494, 0.001); end
  def test_costs_l64; assert_in_epsilon(8633.584103471132, worksheet.costs_l64, 0.001); end
  def test_costs_l133; assert_in_epsilon(10760.560850680597, worksheet.costs_l133, 0.001); end
  def test_output_ai494; assert_in_epsilon(9697.072477075864, worksheet.output_ai494, 0.001); end
  def test_costs_m64; assert_in_epsilon(7926.308340743826, worksheet.costs_m64, 0.001); end
  def test_costs_m133; assert_in_epsilon(10140.063849355278, worksheet.costs_m133, 0.001); end
  def test_output_aj494; assert_in_epsilon(9033.186095049552, worksheet.output_aj494, 0.001); end
  def test_output_ap489; assert_in_epsilon(9423.831594021483, worksheet.output_ap489, 0.001); end
  def test_output_as489; assert_in_delta(-0.3829450874861195, worksheet.output_as489, 0.001); end
  def test_output_e490; assert_equal("Average O&M COSTS for Building", worksheet.output_e490); end
  def test_output_f490; assert_equal("MEUR", worksheet.output_f490); end
  def test_output_am490; assert_in_delta(0.01725191433871509, worksheet.output_am490, 0.001); end
  def test_output_an490; assert_in_delta(0.9821687845187839, worksheet.output_an490, 0.001); end
  def test_output_ao490; assert_equal("Buildings", worksheet.output_ao490); end
  def test_output_aq490; assert_in_epsilon(43292.84967069035, worksheet.output_aq490, 0.001); end
  def test_output_ar490; assert_in_epsilon(-5291.677916063127, worksheet.output_ar490, 0.001); end
  def test_costs_f63; assert_in_epsilon(25019.577491355114, worksheet.costs_f63, 0.001); end
  def test_costs_f132; assert_in_epsilon(34939.42618852014, worksheet.costs_f132, 0.001); end
  def test_output_ac489; assert_in_epsilon(29979.501839937628, worksheet.output_ac489, 0.001); end
  def test_costs_g63; assert_in_epsilon(25441.47927753161, worksheet.costs_g63, 0.001); end
  def test_costs_g132; assert_in_epsilon(36293.7265018853, worksheet.costs_g132, 0.001); end
  def test_output_ad489; assert_in_epsilon(30867.602889708454, worksheet.output_ad489, 0.001); end
  def test_costs_h63; assert_in_epsilon(39523.25554385224, worksheet.costs_h63, 0.001); end
  def test_costs_h132; assert_in_epsilon(55728.873385939114, worksheet.costs_h132, 0.001); end
  def test_output_ae489; assert_in_epsilon(47626.06446489568, worksheet.output_ae489, 0.001); end
  def test_costs_i63; assert_in_epsilon(30709.122553594312, worksheet.costs_i63, 0.001); end
  def test_costs_i132; assert_in_epsilon(44299.950304458, worksheet.costs_i132, 0.001); end
  def test_output_af489; assert_in_epsilon(37504.53642902616, worksheet.output_af489, 0.001); end
  def test_costs_j63; assert_in_epsilon(31950.433197207756, worksheet.costs_j63, 0.001); end
  def test_costs_j132; assert_in_epsilon(46151.10073945835, worksheet.costs_j132, 0.001); end
  def test_output_ag489; assert_in_epsilon(39050.76696833305, worksheet.output_ag489, 0.001); end
  def test_costs_k63; assert_in_epsilon(30272.20494681715, worksheet.costs_k63, 0.001); end
  def test_costs_k132; assert_in_epsilon(44082.70840132645, worksheet.costs_k132, 0.001); end
  def test_output_ah489; assert_in_epsilon(37177.4566740718, worksheet.output_ah489, 0.001); end
  def test_costs_l63; assert_in_epsilon(31572.165729538192, worksheet.costs_l63, 0.001); end
  def test_costs_l132; assert_in_epsilon(46037.2839373135, worksheet.costs_l132, 0.001); end
  def test_output_ai489; assert_in_epsilon(38804.72483342585, worksheet.output_ai489, 0.001); end
  def test_costs_m63; assert_in_epsilon(31577.115977568206, worksheet.costs_m63, 0.001); end
  def test_costs_m132; assert_in_epsilon(46143.73572612219, worksheet.costs_m132, 0.001); end
  def test_output_aj489; assert_in_epsilon(38860.4258518452, worksheet.output_aj489, 0.001); end
  def test_output_ap490; assert_in_epsilon(38001.17175462723, worksheet.output_ap490, 0.001); end
  def test_output_as490; assert_in_delta(-0.1392503881256973, worksheet.output_as490, 0.001); end
  def test_output_e491; assert_equal("Average FUEL COSTS for Building", worksheet.output_e491); end
  def test_output_f491; assert_equal("MEUR", worksheet.output_f491); end
  def test_output_am491; assert_in_delta(-0.01126952870616904, worksheet.output_am491, 0.001); end
  def test_output_an491; assert_in_delta(-0.36449825339820896, worksheet.output_an491, 0.001); end
  def test_output_ao491; assert_equal("Industry", worksheet.output_ao491); end
  def test_output_aq491; assert_in_epsilon(3762.7629364158265, worksheet.output_aq491, 0.001); end
  def test_output_ar491; assert_in_epsilon(-2632.8830232345026, worksheet.output_ar491, 0.001); end
  def test_costs_f65; assert_in_epsilon(5.5668597011630485, worksheet.costs_f65, 0.001); end
  def test_costs_f134; assert_in_epsilon(5.5668597011630485, worksheet.costs_f134, 0.001); end
  def test_output_ac499; assert_in_epsilon(5.5668597011630485, worksheet.output_ac499, 0.001); end
  def test_costs_g65; assert_in_epsilon(244.9489893123636, worksheet.costs_g65, 0.001); end
  def test_costs_g134; assert_in_epsilon(331.4015737755508, worksheet.costs_g134, 0.001); end
  def test_output_ad499; assert_in_epsilon(288.1752815439572, worksheet.output_ad499, 0.001); end
  def test_costs_h65; assert_in_epsilon(614.2618955610491, worksheet.costs_h65, 0.001); end
  def test_costs_h134; assert_in_epsilon(831.0602116414193, worksheet.costs_h134, 0.001); end
  def test_output_ae499; assert_in_epsilon(722.6610536012342, worksheet.output_ae499, 0.001); end
  def test_costs_i65; assert_in_epsilon(831.6183648291637, worksheet.costs_i65, 0.001); end
  def test_costs_i134; assert_in_epsilon(1125.1307288865157, worksheet.costs_i134, 0.001); end
  def test_output_af499; assert_in_epsilon(978.3745468578397, worksheet.output_af499, 0.001); end
  def test_costs_j65; assert_in_epsilon(1084.1492154053697, worksheet.costs_j65, 0.001); end
  def test_costs_j134; assert_in_epsilon(1466.7901149602058, worksheet.costs_j134, 0.001); end
  def test_output_ag499; assert_in_epsilon(1275.4696651827876, worksheet.output_ag499, 0.001); end
  def test_costs_k65; assert_in_epsilon(1249.2425454064135, worksheet.costs_k65, 0.001); end
  def test_costs_k134; assert_in_epsilon(1690.1516790792646, worksheet.costs_k134, 0.001); end
  def test_output_ah499; assert_in_epsilon(1469.697112242839, worksheet.output_ah499, 0.001); end
  def test_costs_l65; assert_in_epsilon(1350.0762753701638, worksheet.costs_l65, 0.001); end
  def test_costs_l134; assert_in_epsilon(1826.5737843243387, worksheet.costs_l134, 0.001); end
  def test_output_ai499; assert_in_epsilon(1588.3250298472512, worksheet.output_ai499, 0.001); end
  def test_costs_m65; assert_in_epsilon(1452.4186714437035, worksheet.costs_m65, 0.001); end
  def test_costs_m134; assert_in_epsilon(1965.0370260708926, worksheet.costs_m134, 0.001); end
  def test_output_aj499; assert_in_epsilon(1708.727848757298, worksheet.output_aj499, 0.001); end
  def test_output_ap491; assert_in_epsilon(1129.8799131813237, worksheet.output_ap491, 0.001); end
  def test_output_as491; assert_in_epsilon(-2.330232613677748, worksheet.output_as491, 0.001); end
  def test_output_e492; assert_equal("Average TOTAL COSTS for Building", worksheet.output_e492); end
  def test_output_f492; assert_equal("MEUR", worksheet.output_f492); end
  def test_output_am492; assert_in_delta(0.007268489600029682, worksheet.output_am492, 0.001); end
  def test_output_an492; assert_in_delta(0.3360106644366878, worksheet.output_an492, 0.001); end
  def test_output_ao492; assert_equal("Energy", worksheet.output_ao492); end
  def test_output_aq492; assert_in_epsilon(2014.1669556241297, worksheet.output_aq492, 0.001); end
  def test_output_ar492; assert_in_epsilon(-2014.1669556241297, worksheet.output_ar492, 0.001); end
  def test_costs_f69; assert_in_delta(0, (worksheet.costs_f69||0), 0.001); end
  def test_costs_f138; assert_in_delta(0, (worksheet.costs_f138||0), 0.001); end
  def test_output_ac504; assert_in_delta(0, (worksheet.output_ac504||0), 0.001); end
  def test_costs_g69; assert_in_delta(0, (worksheet.costs_g69||0), 0.001); end
  def test_costs_g138; assert_in_delta(0, (worksheet.costs_g138||0), 0.001); end
  def test_output_ad504; assert_in_delta(0, (worksheet.output_ad504||0), 0.001); end
  def test_costs_h69; assert_in_delta(0, (worksheet.costs_h69||0), 0.001); end
  def test_costs_h138; assert_in_delta(0, (worksheet.costs_h138||0), 0.001); end
  def test_output_ae504; assert_in_delta(0, (worksheet.output_ae504||0), 0.001); end
  def test_costs_i69; assert_in_delta(0, (worksheet.costs_i69||0), 0.001); end
  def test_costs_i138; assert_in_delta(0, (worksheet.costs_i138||0), 0.001); end
  def test_output_af504; assert_in_delta(0, (worksheet.output_af504||0), 0.001); end
  def test_costs_j69; assert_in_delta(0, (worksheet.costs_j69||0), 0.001); end
  def test_costs_j138; assert_in_delta(0, (worksheet.costs_j138||0), 0.001); end
  def test_output_ag504; assert_in_delta(0, (worksheet.output_ag504||0), 0.001); end
  def test_costs_k69; assert_in_delta(0, (worksheet.costs_k69||0), 0.001); end
  def test_costs_k138; assert_in_delta(0, (worksheet.costs_k138||0), 0.001); end
  def test_output_ah504; assert_in_delta(0, (worksheet.output_ah504||0), 0.001); end
  def test_costs_l69; assert_in_delta(0, (worksheet.costs_l69||0), 0.001); end
  def test_costs_l138; assert_in_delta(0, (worksheet.costs_l138||0), 0.001); end
  def test_output_ai504; assert_in_delta(0, (worksheet.output_ai504||0), 0.001); end
  def test_costs_m69; assert_in_delta(0, (worksheet.costs_m69||0), 0.001); end
  def test_costs_m138; assert_in_delta(0, (worksheet.costs_m138||0), 0.001); end
  def test_output_aj504; assert_in_delta(0, (worksheet.output_aj504||0), 0.001); end
  def test_output_ap492; assert_in_delta(0, (worksheet.output_ap492||0), 0.001); end
  def test_output_as492; assert_equal(:div0, worksheet.output_as492); end
  def test_output_c493; assert_equal("Transport", worksheet.output_c493); end
  def test_output_am493; assert_equal("", worksheet.output_am493); end
  def test_output_an493; assert_equal("", worksheet.output_an493); end
  def test_output_e494; assert_equal("Average INVESTMENTS for Transport", worksheet.output_e494); end
  def test_output_f494; assert_equal("MEUR", worksheet.output_f494); end
  def test_output_am494; assert_in_delta(0.0019209898851331175, worksheet.output_am494, 0.001); end
  def test_output_an494; assert_in_delta(0.07978925274189774, worksheet.output_an494, 0.001); end
  def test_output_e495; assert_equal("Average O&M COSTS for Transport", worksheet.output_e495); end
  def test_output_f495; assert_equal("MEUR", worksheet.output_f495); end
  def test_output_am495; assert_in_delta(0.001652382026601007, worksheet.output_am495, 0.001); end
  def test_output_an495; assert_in_delta(0.06827023100397667, worksheet.output_an495, 0.001); end
  def test_output_e496; assert_equal("Average FUEL COSTS for Transport", worksheet.output_e496); end
  def test_output_f496; assert_equal("MEUR", worksheet.output_f496); end
  def test_output_am496; assert_in_delta(-0.005203743015818052, worksheet.output_am496, 0.001); end
  def test_output_an496; assert_in_delta(-0.1883557784590888, worksheet.output_an496, 0.001); end
  def test_output_ap496; assert_equal("Modeled", worksheet.output_ap496); end
  def test_output_aq496; assert_equal("REF", worksheet.output_aq496); end
  def test_output_e497; assert_equal("Average TOTAL COSTS for Transport", worksheet.output_e497); end
  def test_output_f497; assert_equal("MEUR", worksheet.output_f497); end
  def test_output_am497; assert_in_delta(0.00021529390939178938, worksheet.output_am497, 0.001); end
  def test_output_an497; assert_in_delta(0.00864800931129639, worksheet.output_an497, 0.001); end
  def test_output_ao497; assert_equal("Transport", worksheet.output_ao497); end
  def test_output_aq497; assert_in_epsilon(27260.131927672737, worksheet.output_aq497, 0.001); end
  def test_output_ar497; assert_in_epsilon(-4613.459135947785, worksheet.output_ar497, 0.001); end
  def test_costs_p64; assert_in_epsilon(7511.912661772789, worksheet.costs_p64, 0.001); end
  def test_costs_p133; assert_in_epsilon(7534.454508421662, worksheet.costs_p133, 0.001); end
  def test_output_ac495; assert_in_epsilon(7523.183585097226, worksheet.output_ac495, 0.001); end
  def test_costs_z64; assert_in_epsilon(4692.344207263488, worksheet.costs_z64, 0.001); end
  def test_costs_z133; assert_in_epsilon(4701.30303463843, worksheet.costs_z133, 0.001); end
  def test_output_ac496; assert_in_epsilon(4696.82362095096, worksheet.output_ac496, 0.001); end
  def test_output_ac497; assert_in_epsilon(18921.36778511112, worksheet.output_ac497, 0.001); end
  def test_costs_q64; assert_in_epsilon(7789.315621031978, worksheet.costs_q64, 0.001); end
  def test_costs_q133; assert_in_epsilon(8772.037360008571, worksheet.costs_q133, 0.001); end
  def test_output_ad495; assert_in_epsilon(8280.676490520274, worksheet.output_ad495, 0.001); end
  def test_costs_aa64; assert_in_epsilon(3770.71569989548, worksheet.costs_aa64, 0.001); end
  def test_costs_aa133; assert_in_epsilon(5093.665961196795, worksheet.costs_aa133, 0.001); end
  def test_output_ad496; assert_in_epsilon(4432.1908305461375, worksheet.output_ad496, 0.001); end
  def test_output_ad497; assert_in_epsilon(20887.750577922514, worksheet.output_ad497, 0.001); end
  def test_costs_r64; assert_in_epsilon(7829.594367291097, worksheet.costs_r64, 0.001); end
  def test_costs_r133; assert_in_epsilon(10115.9205968725, worksheet.costs_r133, 0.001); end
  def test_output_ae495; assert_in_epsilon(8972.757482081799, worksheet.output_ae495, 0.001); end
  def test_costs_ab64; assert_in_epsilon(4148.27163898102, worksheet.costs_ab64, 0.001); end
  def test_costs_ab133; assert_in_epsilon(5599.47793178075, worksheet.costs_ab133, 0.001); end
  def test_output_ae496; assert_in_epsilon(4873.874785380885, worksheet.output_ae496, 0.001); end
  def test_output_ae497; assert_in_epsilon(24989.931016805876, worksheet.output_ae497, 0.001); end
  def test_costs_s64; assert_in_epsilon(7418.808864539177, worksheet.costs_s64, 0.001); end
  def test_costs_s133; assert_in_epsilon(11145.279317836059, worksheet.costs_s133, 0.001); end
  def test_output_af495; assert_in_epsilon(9282.044091187618, worksheet.output_af495, 0.001); end
  def test_costs_ac64; assert_in_epsilon(4274.7645648278285, worksheet.costs_ac64, 0.001); end
  def test_costs_ac133; assert_in_epsilon(5777.448944973335, worksheet.costs_ac133, 0.001); end
  def test_output_af496; assert_in_epsilon(5026.106754900582, worksheet.output_af496, 0.001); end
  def test_output_af497; assert_in_epsilon(25413.670267161164, worksheet.output_af497, 0.001); end
  def test_costs_t64; assert_in_epsilon(6768.436541042586, worksheet.costs_t64, 0.001); end
  def test_costs_t133; assert_in_epsilon(12040.541153218037, worksheet.costs_t133, 0.001); end
  def test_output_ag495; assert_in_epsilon(9404.488847130311, worksheet.output_ag495, 0.001); end
  def test_costs_ad64; assert_in_epsilon(4221.358075550152, worksheet.costs_ad64, 0.001); end
  def test_costs_ad133; assert_in_epsilon(5734.671020803077, worksheet.costs_ad133, 0.001); end
  def test_output_ag496; assert_in_epsilon(4978.014548176614, worksheet.output_ag496, 0.001); end
  def test_output_ag497; assert_in_epsilon(25608.332008542777, worksheet.output_ag497, 0.001); end
  def test_costs_u64; assert_in_epsilon(5860.009834521241, worksheet.costs_u64, 0.001); end
  def test_costs_u133; assert_in_epsilon(12662.054591415801, worksheet.costs_u133, 0.001); end
  def test_output_ah495; assert_in_epsilon(9261.032212968521, worksheet.output_ah495, 0.001); end
  def test_costs_ae64; assert_in_epsilon(3852.4239936968797, worksheet.costs_ae64, 0.001); end
  def test_costs_ae133; assert_in_epsilon(5238.59165482313, worksheet.costs_ae133, 0.001); end
  def test_output_ah496; assert_in_epsilon(4545.507824260005, worksheet.output_ah496, 0.001); end
  def test_output_ah497; assert_in_epsilon(24303.818059705045, worksheet.output_ah497, 0.001); end
  def test_costs_v64; assert_in_epsilon(4820.297915864755, worksheet.costs_v64, 0.001); end
  def test_costs_v133; assert_in_epsilon(13142.748853103509, worksheet.costs_v133, 0.001); end
  def test_output_ai495; assert_in_epsilon(8981.523384484131, worksheet.output_ai495, 0.001); end
  def test_costs_af64; assert_in_epsilon(3624.021005599449, worksheet.costs_af64, 0.001); end
  def test_costs_af133; assert_in_epsilon(4930.303324210716, worksheet.costs_af133, 0.001); end
  def test_output_ai496; assert_in_epsilon(4277.162164905082, worksheet.output_ai496, 0.001); end
  def test_output_ai497; assert_in_epsilon(22955.75802646508, worksheet.output_ai497, 0.001); end
  def test_costs_w64; assert_in_epsilon(3676.703626461527, worksheet.costs_w64, 0.001); end
  def test_costs_w133; assert_in_epsilon(13424.601006829671, worksheet.costs_w133, 0.001); end
  def test_output_aj495; assert_in_epsilon(8550.652316645599, worksheet.output_aj495, 0.001); end
  def test_costs_ag64; assert_in_epsilon(3443.61912980666, worksheet.costs_ag64, 0.001); end
  def test_costs_ag133; assert_in_epsilon(4697.558914626577, worksheet.costs_ag133, 0.001); end
  def test_output_aj496; assert_in_epsilon(4070.589022216618, worksheet.output_aj496, 0.001); end
  def test_output_aj497; assert_in_epsilon(21654.42743391177, worksheet.output_aj497, 0.001); end
  def test_output_ak497; assert_in_epsilon(19084.999949899226, worksheet.output_ak497, 0.001); end
  def test_output_ap497; assert_in_epsilon(22646.672791724952, worksheet.output_ap497, 0.001); end
  def test_output_as497; assert_in_delta(-0.20371465505668163, worksheet.output_as497, 0.001); end
  def test_output_c498; assert_equal("Industry", worksheet.output_c498); end
  def test_output_am498; assert_equal("", worksheet.output_am498); end
  def test_output_an498; assert_equal("", worksheet.output_an498); end
  def test_output_ao498; assert_equal("Buildings", worksheet.output_ao498); end
  def test_output_aq498; assert_in_epsilon(49856.63810312902, worksheet.output_aq498, 0.001); end
  def test_output_ar498; assert_in_epsilon(-7014.68181360115, worksheet.output_ar498, 0.001); end
  def test_costs_p63; assert_in_epsilon(144.40804752293786, worksheet.costs_p63, 0.001); end
  def test_costs_p132; assert_in_epsilon(676.8060640794976, worksheet.costs_p132, 0.001); end
  def test_output_ac490; assert_in_epsilon(821.2141116024354, worksheet.output_ac490, 0.001); end
  def test_costs_z63; assert_in_epsilon(3290.5689375044926, worksheet.costs_z63, 0.001); end
  def test_costs_z132; assert_in_epsilon(4181.615263582494, worksheet.costs_z132, 0.001); end
  def test_output_ac491; assert_in_epsilon(3736.092100543493, worksheet.output_ac491, 0.001); end
  def test_output_ac492; assert_in_epsilon(34536.80805208356, worksheet.output_ac492, 0.001); end
  def test_costs_q63; assert_in_epsilon(170.16551545009017, worksheet.costs_q63, 0.001); end
  def test_costs_q132; assert_in_epsilon(745.7247273749397, worksheet.costs_q132, 0.001); end
  def test_output_ad490; assert_in_epsilon(915.8902428250299, worksheet.output_ad490, 0.001); end
  def test_costs_aa63; assert_in_epsilon(3707.8463191763694, worksheet.costs_aa63, 0.001); end
  def test_costs_aa132; assert_in_epsilon(4903.349220350047, worksheet.costs_aa132, 0.001); end
  def test_output_ad491; assert_in_epsilon(4305.597769763208, worksheet.output_ad491, 0.001); end
  def test_output_ad492; assert_in_epsilon(36089.090902296695, worksheet.output_ad492, 0.001); end
  def test_costs_r63; assert_in_epsilon(217.0203610978994, worksheet.costs_r63, 0.001); end
  def test_costs_r132; assert_in_epsilon(810.1729752333969, worksheet.costs_r132, 0.001); end
  def test_output_ae490; assert_in_epsilon(1027.1933363312962, worksheet.output_ae490, 0.001); end
  def test_costs_ab63; assert_in_epsilon(3907.379328839637, worksheet.costs_ab63, 0.001); end
  def test_costs_ab132; assert_in_epsilon(5200.731624554676, worksheet.costs_ab132, 0.001); end
  def test_output_ae491; assert_in_epsilon(4554.055476697156, worksheet.output_ae491, 0.001); end
  def test_output_ae492; assert_in_epsilon(53207.31327792413, worksheet.output_ae492, 0.001); end
  def test_costs_s63; assert_in_epsilon(261.54159616456934, worksheet.costs_s63, 0.001); end
  def test_costs_s132; assert_in_epsilon(872.5680453550552, worksheet.costs_s132, 0.001); end
  def test_output_af490; assert_in_epsilon(1134.1096415196246, worksheet.output_af490, 0.001); end
  def test_costs_ac63; assert_in_epsilon(3594.0748665088026, worksheet.costs_ac63, 0.001); end
  def test_costs_ac132; assert_in_epsilon(4832.634310297388, worksheet.costs_ac132, 0.001); end
  def test_output_af491; assert_in_epsilon(4213.3545884030955, worksheet.output_af491, 0.001); end
  def test_output_af492; assert_in_epsilon(42852.00065894888, worksheet.output_af492, 0.001); end
  def test_costs_t63; assert_in_epsilon(305.9918115400558, worksheet.costs_t63, 0.001); end
  def test_costs_t132; assert_in_epsilon(932.9726767485433, worksheet.costs_t132, 0.001); end
  def test_output_ag490; assert_in_epsilon(1238.9644882885991, worksheet.output_ag490, 0.001); end
  def test_costs_ad63; assert_in_epsilon(3261.956005702437, worksheet.costs_ad63, 0.001); end
  def test_costs_ad132; assert_in_epsilon(4507.558526836743, worksheet.costs_ad132, 0.001); end
  def test_output_ag491; assert_in_epsilon(3884.75726626959, worksheet.output_ag491, 0.001); end
  def test_output_ag492; assert_in_epsilon(44174.48872289124, worksheet.output_ag492, 0.001); end
  def test_costs_u63; assert_in_epsilon(346.4100377902552, worksheet.costs_u63, 0.001); end
  def test_costs_u132; assert_in_epsilon(984.8143054173188, worksheet.costs_u132, 0.001); end
  def test_output_ah490; assert_in_epsilon(1331.224343207574, worksheet.output_ah490, 0.001); end
  def test_costs_ae63; assert_in_epsilon(2956.3374655130447, worksheet.costs_ae63, 0.001); end
  def test_costs_ae132; assert_in_epsilon(4097.544185311064, worksheet.costs_ae132, 0.001); end
  def test_output_ah491; assert_in_epsilon(3526.9408254120544, worksheet.output_ah491, 0.001); end
  def test_output_ah492; assert_in_epsilon(42035.621842691435, worksheet.output_ah492, 0.001); end
  def test_costs_v63; assert_in_epsilon(389.8665848718736, worksheet.costs_v63, 0.001); end
  def test_costs_v132; assert_in_epsilon(1041.3167437020438, worksheet.costs_v132, 0.001); end
  def test_output_ai490; assert_in_epsilon(1431.1833285739174, worksheet.output_ai490, 0.001); end
  def test_costs_af63; assert_in_epsilon(2584.968807144124, worksheet.costs_af63, 0.001); end
  def test_costs_af132; assert_in_epsilon(3586.52044718651, worksheet.costs_af132, 0.001); end
  def test_output_ai491; assert_in_epsilon(3085.744627165317, worksheet.output_ai491, 0.001); end
  def test_output_ai492; assert_in_epsilon(43321.652789165084, worksheet.output_ai492, 0.001); end
  def test_costs_w63; assert_in_epsilon(434.8268868790314, worksheet.costs_w63, 0.001); end
  def test_costs_w132; assert_in_epsilon(1099.6863095487834, worksheet.costs_w132, 0.001); end
  def test_output_aj490; assert_in_epsilon(1534.5131964278148, worksheet.output_aj490, 0.001); end
  def test_costs_ag63; assert_in_epsilon(2352.0956282332672, worksheet.costs_ag63, 0.001); end
  def test_costs_ag132; assert_in_epsilon(3296.1992483473114, worksheet.costs_ag132, 0.001); end
  def test_output_aj491; assert_in_epsilon(2824.1474382902893, worksheet.output_aj491, 0.001); end
  def test_output_aj492; assert_in_epsilon(43219.0864865633, worksheet.output_aj492, 0.001); end
  def test_output_ak492; assert_in_epsilon(46141.54387318651, worksheet.output_ak492, 0.001); end
  def test_output_ap498; assert_in_epsilon(42841.95628952787, worksheet.output_ap498, 0.001); end
  def test_output_as498; assert_in_delta(-0.163733928632848, worksheet.output_as498, 0.001); end
  def test_output_e499; assert_equal("Average INVESTMENTS for Industry", worksheet.output_e499); end
  def test_output_f499; assert_equal("MEUR", worksheet.output_f499); end
  def test_output_am499; assert_in_delta(0.1603233313548611, worksheet.output_am499, 0.001); end
  def test_output_an499; assert_in_epsilon(381.9666877453606, worksheet.output_an499, 0.001); end
  def test_output_ao499; assert_equal("Industry", worksheet.output_ao499); end
  def test_output_aq499; assert_in_epsilon(7609.626037291043, worksheet.output_aq499, 0.001); end
  def test_output_ar499; assert_in_epsilon(-1947.8338826806785, worksheet.output_ar499, 0.001); end
  def test_costs_p65; assert_in_delta(0, (worksheet.costs_p65||0), 0.001); end
  def test_costs_p134; assert_in_delta(0, (worksheet.costs_p134||0), 0.001); end
  def test_output_ac500; assert_in_delta(0, (worksheet.output_ac500||0), 0.001); end
  def test_costs_z65; assert_in_epsilon(5255.553137615401, worksheet.costs_z65, 0.001); end
  def test_costs_z134; assert_in_epsilon(5255.553137615401, worksheet.costs_z134, 0.001); end
  def test_output_ac501; assert_in_epsilon(5255.553137615401, worksheet.output_ac501, 0.001); end
  def test_output_ac502; assert_in_epsilon(5261.119997316564, worksheet.output_ac502, 0.001); end
  def test_costs_q65; assert_in_delta(0, (worksheet.costs_q65||0), 0.001); end
  def test_costs_q134; assert_in_delta(0, (worksheet.costs_q134||0), 0.001); end
  def test_output_ad500; assert_in_delta(0, (worksheet.output_ad500||0), 0.001); end
  def test_costs_aa65; assert_in_epsilon(4905.6181329073215, worksheet.costs_aa65, 0.001); end
  def test_costs_aa134; assert_in_epsilon(6637.01276805108, worksheet.costs_aa134, 0.001); end
  def test_output_ad501; assert_in_epsilon(5771.3154504792, worksheet.output_ad501, 0.001); end
  def test_output_ad502; assert_in_epsilon(6059.490732023158, worksheet.output_ad502, 0.001); end
  def test_costs_r65; assert_in_delta(0, (worksheet.costs_r65||0), 0.001); end
  def test_costs_r134; assert_in_delta(0, (worksheet.costs_r134||0), 0.001); end
  def test_output_ae500; assert_in_delta(0, (worksheet.output_ae500||0), 0.001); end
  def test_costs_ab65; assert_in_epsilon(4556.368320957329, worksheet.costs_ab65, 0.001); end
  def test_costs_ab134; assert_in_epsilon(6164.498316589327, worksheet.costs_ab134, 0.001); end
  def test_output_ae501; assert_in_epsilon(5360.433318773328, worksheet.output_ae501, 0.001); end
  def test_output_ae502; assert_in_epsilon(6083.094372374562, worksheet.output_ae502, 0.001); end
  def test_costs_s65; assert_in_delta(0, (worksheet.costs_s65||0), 0.001); end
  def test_costs_s134; assert_in_delta(0, (worksheet.costs_s134||0), 0.001); end
  def test_output_af500; assert_in_delta(0, (worksheet.output_af500||0), 0.001); end
  def test_costs_ac65; assert_in_epsilon(4157.936043450709, worksheet.costs_ac65, 0.001); end
  def test_costs_ac134; assert_in_epsilon(5625.442882315664, worksheet.costs_ac134, 0.001); end
  def test_output_af501; assert_in_epsilon(4891.689462883187, worksheet.output_af501, 0.001); end
  def test_output_af502; assert_in_epsilon(5870.064009741027, worksheet.output_af502, 0.001); end
  def test_costs_t65; assert_in_delta(0, (worksheet.costs_t65||0), 0.001); end
  def test_costs_t134; assert_in_delta(0, (worksheet.costs_t134||0), 0.001); end
  def test_output_ag500; assert_in_delta(0, (worksheet.output_ag500||0), 0.001); end
  def test_costs_ad65; assert_in_epsilon(3939.5830756901705, worksheet.costs_ad65, 0.001); end
  def test_costs_ad134; assert_in_epsilon(5330.024161227877, worksheet.costs_ad134, 0.001); end
  def test_output_ag501; assert_in_epsilon(4634.803618459024, worksheet.output_ag501, 0.001); end
  def test_output_ag502; assert_in_epsilon(5910.273283641811, worksheet.output_ag502, 0.001); end
  def test_costs_u65; assert_in_delta(0, (worksheet.costs_u65||0), 0.001); end
  def test_costs_u134; assert_in_delta(0, (worksheet.costs_u134||0), 0.001); end
  def test_output_ah500; assert_in_delta(0, (worksheet.output_ah500||0), 0.001); end
  def test_costs_ae65; assert_in_epsilon(3620.0920359424404, worksheet.costs_ae65, 0.001); end
  def test_costs_ae134; assert_in_epsilon(4897.771578039772, worksheet.costs_ae134, 0.001); end
  def test_output_ah501; assert_in_epsilon(4258.931806991106, worksheet.output_ah501, 0.001); end
  def test_output_ah502; assert_in_epsilon(5728.6289192339445, worksheet.output_ah502, 0.001); end
  def test_costs_v65; assert_in_delta(0, (worksheet.costs_v65||0), 0.001); end
  def test_costs_v134; assert_in_delta(0, (worksheet.costs_v134||0), 0.001); end
  def test_output_ai500; assert_in_delta(0, (worksheet.output_ai500||0), 0.001); end
  def test_costs_af65; assert_in_epsilon(3271.209662543734, worksheet.costs_af65, 0.001); end
  def test_costs_af134; assert_in_epsilon(4425.754249323875, worksheet.costs_af134, 0.001); end
  def test_output_ai501; assert_in_epsilon(3848.481955933805, worksheet.output_ai501, 0.001); end
  def test_output_ai502; assert_in_epsilon(5436.806985781056, worksheet.output_ai502, 0.001); end
  def test_costs_w65; assert_in_delta(0, (worksheet.costs_w65||0), 0.001); end
  def test_costs_w134; assert_in_delta(0, (worksheet.costs_w134||0), 0.001); end
  def test_output_aj500; assert_in_delta(0, (worksheet.output_aj500||0), 0.001); end
  def test_costs_ag65; assert_in_epsilon(3018.099542889316, worksheet.costs_ag65, 0.001); end
  def test_costs_ag134; assert_in_epsilon(4083.3111462620163, worksheet.costs_ag134, 0.001); end
  def test_output_aj501; assert_in_epsilon(3550.7053445756665, worksheet.output_aj501, 0.001); end
  def test_output_aj502; assert_in_epsilon(5259.433193332965, worksheet.output_aj502, 0.001); end
  def test_output_ak502; assert_in_epsilon(5347.21789804819, worksheet.output_ak502, 0.001); end
  def test_output_ap499; assert_in_epsilon(5661.792154610364, worksheet.output_ap499, 0.001); end
  def test_output_as499; assert_in_delta(-0.3440313295666583, worksheet.output_as499, 0.001); end
  def test_output_e500; assert_equal("Average O&M COSTS for Industry", worksheet.output_e500); end
  def test_output_f500; assert_equal("MEUR", worksheet.output_f500); end
  def test_output_am500; assert_equal("", worksheet.output_am500); end
  def test_output_an500; assert_equal("", worksheet.output_an500); end
  def test_output_ao500; assert_equal("Energy", worksheet.output_ao500); end
  def test_output_aq500; assert_in_epsilon(19502.676280373937, worksheet.output_aq500, 0.001); end
  def test_output_ar500; assert_in_epsilon(-18652.832530373937, worksheet.output_ar500, 0.001); end
  def test_costs_p69; assert_in_delta(0, (worksheet.costs_p69||0), 0.001); end
  def test_costs_p138; assert_in_delta(0, (worksheet.costs_p138||0), 0.001); end
  def test_output_ac505; assert_in_delta(0, (worksheet.output_ac505||0), 0.001); end
  def test_costs_z69; assert_in_delta(0, (worksheet.costs_z69||0), 0.001); end
  def test_costs_z138; assert_in_delta(0, (worksheet.costs_z138||0), 0.001); end
  def test_output_ac506; assert_in_delta(0, (worksheet.output_ac506||0), 0.001); end
  def test_output_ac507; assert_in_delta(0, (worksheet.output_ac507||0), 0.001); end
  def test_costs_q69; assert_in_delta(0, (worksheet.costs_q69||0), 0.001); end
  def test_costs_q138; assert_in_delta(0, (worksheet.costs_q138||0), 0.001); end
  def test_output_ad505; assert_in_delta(0, (worksheet.output_ad505||0), 0.001); end
  def test_costs_aa69; assert_in_epsilon(178.5, worksheet.costs_aa69, 0.001); end
  def test_costs_aa138; assert_in_epsilon(211.3125, worksheet.costs_aa138, 0.001); end
  def test_output_ad506; assert_in_epsilon(194.90625, worksheet.output_ad506, 0.001); end
  def test_output_ad507; assert_in_epsilon(194.90625, worksheet.output_ad507, 0.001); end
  def test_costs_r69; assert_in_delta(0, (worksheet.costs_r69||0), 0.001); end
  def test_costs_r138; assert_in_delta(0, (worksheet.costs_r138||0), 0.001); end
  def test_output_ae505; assert_in_delta(0, (worksheet.output_ae505||0), 0.001); end
  def test_costs_ab69; assert_in_epsilon(336, worksheet.costs_ab69, 0.001); end
  def test_costs_ab138; assert_in_epsilon(467.25, worksheet.costs_ab138, 0.001); end
  def test_output_ae506; assert_in_epsilon(401.625, worksheet.output_ae506, 0.001); end
  def test_output_ae507; assert_in_epsilon(401.625, worksheet.output_ae507, 0.001); end
  def test_costs_s69; assert_in_delta(0, (worksheet.costs_s69||0), 0.001); end
  def test_costs_s138; assert_in_delta(0, (worksheet.costs_s138||0), 0.001); end
  def test_output_af505; assert_in_delta(0, (worksheet.output_af505||0), 0.001); end
  def test_costs_ac69; assert_in_epsilon(539.4375000000001, worksheet.costs_ac69, 0.001); end
  def test_costs_ac138; assert_in_epsilon(720.5625000000001, worksheet.costs_ac138, 0.001); end
  def test_output_af506; assert_in_epsilon(630.0000000000001, worksheet.output_af506, 0.001); end
  def test_output_af507; assert_in_epsilon(630.0000000000001, worksheet.output_af507, 0.001); end
  def test_costs_t69; assert_in_delta(0, (worksheet.costs_t69||0), 0.001); end
  def test_costs_t138; assert_in_delta(0, (worksheet.costs_t138||0), 0.001); end
  def test_output_ag505; assert_in_delta(0, (worksheet.output_ag505||0), 0.001); end
  def test_costs_ad69; assert_in_epsilon(766.5, worksheet.costs_ad69, 0.001); end
  def test_costs_ad138; assert_in_epsilon(987, worksheet.costs_ad138, 0.001); end
  def test_output_ag506; assert_in_epsilon(876.75, worksheet.output_ag506, 0.001); end
  def test_output_ag507; assert_in_epsilon(876.75, worksheet.output_ag507, 0.001); end
  def test_costs_u69; assert_in_delta(0, (worksheet.costs_u69||0), 0.001); end
  def test_costs_u138; assert_in_delta(0, (worksheet.costs_u138||0), 0.001); end
  def test_output_ah505; assert_in_delta(0, (worksheet.output_ah505||0), 0.001); end
  def test_costs_ae69; assert_in_epsilon(951.5625, worksheet.costs_ae69, 0.001); end
  def test_costs_ae138; assert_in_epsilon(1214.0625, worksheet.costs_ae138, 0.001); end
  def test_output_ah506; assert_in_epsilon(1082.8125, worksheet.output_ah506, 0.001); end
  def test_output_ah507; assert_in_epsilon(1082.8125, worksheet.output_ah507, 0.001); end
  def test_costs_v69; assert_in_delta(0, (worksheet.costs_v69||0), 0.001); end
  def test_costs_v138; assert_in_delta(0, (worksheet.costs_v138||0), 0.001); end
  def test_output_ai505; assert_in_delta(0, (worksheet.output_ai505||0), 0.001); end
  def test_costs_af69; assert_in_epsilon(1134, worksheet.costs_af69, 0.001); end
  def test_costs_af138; assert_in_epsilon(1433.25, worksheet.costs_af138, 0.001); end
  def test_output_ai506; assert_in_epsilon(1283.625, worksheet.output_ai506, 0.001); end
  def test_output_ai507; assert_in_epsilon(1283.625, worksheet.output_ai507, 0.001); end
  def test_costs_w69; assert_in_delta(0, (worksheet.costs_w69||0), 0.001); end
  def test_costs_w138; assert_in_delta(0, (worksheet.costs_w138||0), 0.001); end
  def test_output_aj505; assert_in_delta(0, (worksheet.output_aj505||0), 0.001); end
  def test_costs_ag69; assert_in_epsilon(1313.8125, worksheet.costs_ag69, 0.001); end
  def test_costs_ag138; assert_in_epsilon(1662.9375, worksheet.costs_ag138, 0.001); end
  def test_output_aj506; assert_in_epsilon(1488.375, worksheet.output_aj506, 0.001); end
  def test_output_aj507; assert_in_epsilon(1488.375, worksheet.output_aj507, 0.001); end
  def test_output_ak507; assert_in_epsilon(1690.5, worksheet.output_ak507, 0.001); end
  def test_output_ap500; assert_in_epsilon(849.84375, worksheet.output_ap500, 0.001); end
  def test_output_as500; assert_in_epsilon(-21.94854351799838, worksheet.output_as500, 0.001); end
  def test_output_e501; assert_equal("Average FUEL COSTS for Industry", worksheet.output_e501); end
  def test_output_f501; assert_equal("MEUR", worksheet.output_f501); end
  def test_output_am501; assert_in_delta(-0.012209003192633405, worksheet.output_am501, 0.001); end
  def test_output_an501; assert_in_delta(-0.388209767276842, worksheet.output_an501, 0.001); end
  def test_output_e502; assert_equal("Average TOTAL COSTS for Industry", worksheet.output_e502); end
  def test_output_f502; assert_equal("MEUR", worksheet.output_f502); end
  def test_output_am502; assert_in_delta(0.00040589423439052474, worksheet.output_am502, 0.001); end
  def test_output_an502; assert_in_delta(0.016364937651211164, worksheet.output_an502, 0.001); end
  def test_output_c503; assert_equal("Energy ", worksheet.output_c503); end
  def test_output_am503; assert_equal("", worksheet.output_am503); end
  def test_output_an503; assert_equal("", worksheet.output_an503); end
  def test_output_e504; assert_equal("Average INVESTMENTS for Energy ", worksheet.output_e504); end
  def test_output_f504; assert_equal("MEUR", worksheet.output_f504); end
  def test_output_am504; assert_equal("", worksheet.output_am504); end
  def test_output_an504; assert_equal("", worksheet.output_an504); end
  def test_output_e505; assert_equal("Average O&M COSTS for Energy ", worksheet.output_e505); end
  def test_output_f505; assert_equal("MEUR", worksheet.output_f505); end
  def test_output_am505; assert_equal("", worksheet.output_am505); end
  def test_output_an505; assert_equal("", worksheet.output_an505); end
  def test_output_e506; assert_equal("Average FUEL COSTS for Energy ", worksheet.output_e506); end
  def test_output_f506; assert_equal("MEUR", worksheet.output_f506); end
  def test_output_am506; assert_equal("", worksheet.output_am506); end
  def test_output_an506; assert_equal("", worksheet.output_an506); end
  def test_output_e507; assert_equal("Average TOTAL COSTS for Energy ", worksheet.output_e507); end
  def test_output_f507; assert_equal("MEUR", worksheet.output_f507); end
  def test_output_am507; assert_equal("", worksheet.output_am507); end
  def test_output_an507; assert_equal("", worksheet.output_an507); end
  def test_output_c508; assert_equal("TOTAL", worksheet.output_c508); end
  def test_output_am508; assert_equal("", worksheet.output_am508); end
  def test_output_an508; assert_equal("", worksheet.output_an508); end
  def test_output_b509; assert_equal("INV", worksheet.output_b509); end
  def test_output_e509; assert_equal("Total average INVESTMENTS", worksheet.output_e509); end
  def test_output_f509; assert_equal("MEUR", worksheet.output_f509); end
  def test_output_am509; assert_in_delta(0.008519068585021383, worksheet.output_am509, 0.001); end
  def test_output_an509; assert_in_delta(0.4039917704180007, worksheet.output_an509, 0.001); end
  def test_output_ao509; assert_equal("Capital", worksheet.output_ao509); end
  def test_output_ap509; assert_in_epsilon(48554.883261830044, worksheet.output_ap509, 0.001); end
  def test_output_b510; assert_equal("O&M", worksheet.output_b510); end
  def test_output_e510; assert_equal("Total average O&M COSTS", worksheet.output_e510); end
  def test_output_f510; assert_equal("MEUR", worksheet.output_f510); end
  def test_output_am510; assert_in_delta(0.003678676641875045, worksheet.output_am510, 0.001); end
  def test_output_an510; assert_in_delta(0.15821158039774397, worksheet.output_an510, 0.001); end
  def test_output_ao510; assert_equal("O&M", worksheet.output_ao510); end
  def test_output_ap510; assert_in_epsilon(9928.358793628176, worksheet.output_ap510, 0.001); end
  def test_output_b511; assert_equal("FUEL", worksheet.output_b511); end
  def test_output_e511; assert_equal("Total average FUEL COSTS", worksheet.output_e511); end
  def test_output_f511; assert_equal("MEUR", worksheet.output_f511); end
  def test_output_am511; assert_in_delta(-0.00524390559983523, worksheet.output_am511, 0.001); end
  def test_output_an511; assert_in_delta(-0.18966547696305214, worksheet.output_an511, 0.001); end
  def test_output_ao511; assert_equal("Fuel", worksheet.output_ao511); end
  def test_output_ap511; assert_in_epsilon(13517.022930404968, worksheet.output_ap511, 0.001); end
  def test_output_b512; assert_equal("TOTAL COSTS", worksheet.output_b512); end
  def test_output_e512; assert_equal("Total average COSTS", worksheet.output_e512); end
  def test_output_f512; assert_equal("MEUR", worksheet.output_f512); end
  def test_output_am512; assert_in_delta(0.005202519078830514, worksheet.output_am512, 0.001); end
  def test_output_an512; assert_in_delta(0.2306731661904886, worksheet.output_an512, 0.001); end
  def test_output_ac512; assert_in_epsilon(58719.29583451124, worksheet.output_ac512, 0.001); end
  def test_output_ad512; assert_in_epsilon(63231.23846224237, worksheet.output_ad512, 0.001); end
  def test_output_ae512; assert_in_epsilon(84681.96366710456, worksheet.output_ae512, 0.001); end
  def test_output_af512; assert_in_epsilon(74765.73493585105, worksheet.output_af512, 0.001); end
  def test_output_ag512; assert_in_epsilon(76569.84401507583, worksheet.output_ag512, 0.001); end
  def test_output_ah512; assert_in_epsilon(73150.88132163043, worksheet.output_ah512, 0.001); end
  def test_output_ai512; assert_in_epsilon(72997.84280141123, worksheet.output_ai512, 0.001); end
  def test_output_aj512; assert_in_epsilon(71621.32211380803, worksheet.output_aj512, 0.001); end
  def test_output_ak512; assert_in_epsilon(72264.26172113392, worksheet.output_ak512, 0.001); end
  def test_output_ap512; assert_in_epsilon(72000.26498586319, worksheet.output_ap512, 0.001); end
  def test_output_b513; assert_equal("REF", worksheet.output_b513); end
  def test_output_e513; assert_equal("Total average INVESTMENTS", worksheet.output_e513); end
  def test_output_f513; assert_equal("MEUR", worksheet.output_f513); end
  def test_output_ac513; assert_in_epsilon(26712.608496250334, worksheet.output_ac513, 0.001); end
  def test_output_ad513; assert_in_epsilon(29213.654785075996, worksheet.output_ad513, 0.001); end
  def test_output_ae513; assert_in_epsilon(30019.527055723473, worksheet.output_ae513, 0.001); end
  def test_output_af513; assert_in_epsilon(27383.68688846735, worksheet.output_af513, 0.001); end
  def test_output_ag513; assert_in_epsilon(28803.850911083133, worksheet.output_ag513, 0.001); end
  def test_output_ah513; assert_in_epsilon(28724.84579625379, worksheet.output_ah513, 0.001); end
  def test_output_ai513; assert_in_epsilon(30013.84585483641, worksheet.output_ai513, 0.001); end
  def test_output_aj513; assert_in_epsilon(30391.09215443937, worksheet.output_aj513, 0.001); end
  def test_output_ak513; assert_in_epsilon(31992.375544770453, worksheet.output_ak513, 0.001); end
  def test_output_am513; assert_in_delta(0.004519229252334833, worksheet.output_am513, 0.001); end
  def test_output_an513; assert_in_delta(0.19765074793280646, worksheet.output_an513, 0.001); end
  def test_output_b514; assert_equal("REF", worksheet.output_b514); end
  def test_output_e514; assert_equal("Total average O&M COSTS", worksheet.output_e514); end
  def test_output_f514; assert_equal("MEUR", worksheet.output_f514); end
  def test_output_ac514; assert_in_epsilon(8319.723982726187, worksheet.output_ac514, 0.001); end
  def test_output_ad514; assert_in_epsilon(9706.666442106727, worksheet.output_ad514, 0.001); end
  def test_output_ae514; assert_in_epsilon(10060.396101637005, worksheet.output_ae514, 0.001); end
  def test_output_af514; assert_in_epsilon(10319.852315572212, worksheet.output_af514, 0.001); end
  def test_output_ag514; assert_in_epsilon(10538.30740427043, worksheet.output_ag514, 0.001); end
  def test_output_ah514; assert_in_epsilon(10655.506560587142, worksheet.output_ah514, 0.001); end
  def test_output_ai514; assert_in_epsilon(10727.086381070789, worksheet.output_ai514, 0.001); end
  def test_output_aj514; assert_in_epsilon(10724.411303005989, worksheet.output_aj514, 0.001); end
  def test_output_ak514; assert_in_epsilon(10672.027362461438, worksheet.output_ak514, 0.001); end
  def test_output_ao514; assert_equal("Fuel", worksheet.output_ao514); end
  def test_output_ap514; assert_in_epsilon(13.517022930404968, worksheet.output_ap514, 0.001); end
  def test_output_b515; assert_equal("REF", worksheet.output_b515); end
  def test_output_e515; assert_equal("Total average FUEL COSTS", worksheet.output_e515); end
  def test_output_f515; assert_equal("MEUR", worksheet.output_f515); end
  def test_output_ac515; assert_in_epsilon(13583.399367224058, worksheet.output_ac515, 0.001); end
  def test_output_ad515; assert_in_epsilon(15054.409851515189, worksheet.output_ad515, 0.001); end
  def test_output_ae515; assert_in_epsilon(17510.250623183172, worksheet.output_ae515, 0.001); end
  def test_output_af515; assert_in_epsilon(21315.327407772475, worksheet.output_af515, 0.001); end
  def test_output_ag515; assert_in_epsilon(23669.30302242987, worksheet.output_ag515, 0.001); end
  def test_output_ah515; assert_in_epsilon(24434.110575386567, worksheet.output_ah515, 0.001); end
  def test_output_ai515; assert_in_epsilon(25369.880894167327, worksheet.output_ai515, 0.001); end
  def test_output_aj515; assert_in_epsilon(26261.57487389438, worksheet.output_aj515, 0.001); end
  def test_output_ak515; assert_in_epsilon(27265.3860526039, worksheet.output_ak515, 0.001); end
  def test_output_ao515; assert_equal("O&M", worksheet.output_ao515); end
  def test_output_ap515; assert_in_epsilon(9.928358793628176, worksheet.output_ap515, 0.001); end
  def test_output_b516; assert_equal("REF", worksheet.output_b516); end
  def test_output_e516; assert_equal("Total average COSTS", worksheet.output_e516); end
  def test_output_f516; assert_equal("MEUR", worksheet.output_f516); end
  def test_output_ac516; assert_in_epsilon(48615.73184620058, worksheet.output_ac516, 0.001); end
  def test_output_ad516; assert_in_epsilon(53974.73107869791, worksheet.output_ad516, 0.001); end
  def test_output_ae516; assert_in_epsilon(57590.17378054365, worksheet.output_ae516, 0.001); end
  def test_output_af516; assert_in_epsilon(59018.86661181204, worksheet.output_af516, 0.001); end
  def test_output_ag516; assert_in_epsilon(63011.46133778344, worksheet.output_ag516, 0.001); end
  def test_output_ah516; assert_in_epsilon(63814.4629322275, worksheet.output_ah516, 0.001); end
  def test_output_ai516; assert_in_epsilon(66110.81313007453, worksheet.output_ai516, 0.001); end
  def test_output_aj516; assert_in_epsilon(67377.07833133974, worksheet.output_aj516, 0.001); end
  def test_output_ak516; assert_in_epsilon(69929.78895983579, worksheet.output_ak516, 0.001); end
  def test_output_ao516; assert_equal("Capital", worksheet.output_ao516); end
  def test_output_ap516; assert_in_epsilon(48.55488326183004, worksheet.output_ap516, 0.001); end
  def test_output_am517; assert_equal("", worksheet.output_am517); end
  def test_output_an517; assert_equal("", worksheet.output_an517); end
  def test_output_ao517; assert_equal("Total", worksheet.output_ao517); end
  def test_output_ac511; assert_in_epsilon(13688.468859109855, worksheet.output_ac511, 0.001); end
  def test_output_ad511; assert_in_epsilon(14704.010300788545, worksheet.output_ad511, 0.001); end
  def test_output_ae511; assert_in_epsilon(15189.98858085137, worksheet.output_ae511, 0.001); end
  def test_output_af511; assert_in_epsilon(14761.150806186864, worksheet.output_af511, 0.001); end
  def test_output_ag511; assert_in_epsilon(14374.325432905229, worksheet.output_ag511, 0.001); end
  def test_output_ah511; assert_in_epsilon(13414.192956663166, worksheet.output_ah511, 0.001); end
  def test_output_ai511; assert_in_epsilon(12495.013748004203, worksheet.output_ai511, 0.001); end
  def test_output_aj511; assert_in_epsilon(11933.816805082573, worksheet.output_aj511, 0.001); end
  def test_output_ac510; assert_in_epsilon(8344.397696699662, worksheet.output_ac510, 0.001); end
  def test_output_ad510; assert_in_epsilon(9196.566733345304, worksheet.output_ad510, 0.001); end
  def test_output_ae510; assert_in_epsilon(9999.950818413095, worksheet.output_ae510, 0.001); end
  def test_output_af510; assert_in_epsilon(10416.153732707242, worksheet.output_af510, 0.001); end
  def test_output_ag510; assert_in_epsilon(10643.45333541891, worksheet.output_ag510, 0.001); end
  def test_output_ah510; assert_in_epsilon(10592.256556176095, worksheet.output_ah510, 0.001); end
  def test_output_ai510; assert_in_epsilon(10412.706713058049, worksheet.output_ai510, 0.001); end
  def test_output_aj510; assert_in_epsilon(10085.165513073414, worksheet.output_aj510, 0.001); end
  def test_output_ac509; assert_in_epsilon(36686.429278701726, worksheet.output_ac509, 0.001); end
  def test_output_ad509; assert_in_epsilon(39330.66142810851, worksheet.output_ad509, 0.001); end
  def test_output_ae509; assert_in_epsilon(59492.02426784011, worksheet.output_ae509, 0.001); end
  def test_output_af509; assert_in_epsilon(49588.43039695696, worksheet.output_af509, 0.001); end
  def test_output_ag509; assert_in_epsilon(51552.06524675169, worksheet.output_ag509, 0.001); end
  def test_output_ah509; assert_in_epsilon(49144.43180879115, worksheet.output_ah509, 0.001); end
  def test_output_ai509; assert_in_epsilon(50090.122340348964, worksheet.output_ai509, 0.001); end
  def test_output_aj509; assert_in_epsilon(49602.33979565205, worksheet.output_aj509, 0.001); end
  def test_output_ap517; assert_in_epsilon(72.00026498586318, worksheet.output_ap517, 0.001); end
  def test_output_e518; assert_equal("Average costs per person (€)", worksheet.output_e518); end
  def test_output_f518; assert_equal("KEUR", worksheet.output_f518); end
  def test_output_ac518; assert_in_epsilon(5416.956683154625, worksheet.output_ac518, 0.001); end
  def test_output_ad518; assert_in_epsilon(5471.662881946751, worksheet.output_ad518, 0.001); end
  def test_output_ae518; assert_in_epsilon(6900.223034901343, worksheet.output_ae518, 0.001); end
  def test_output_af518; assert_in_epsilon(5877.701073745911, worksheet.output_af518, 0.001); end
  def test_output_ag518; assert_in_epsilon(5814.79069060185, worksheet.output_ag518, 0.001); end
  def test_output_ah518; assert_in_epsilon(5437.428634066466, worksheet.output_ah518, 0.001); end
  def test_output_ai518; assert_in_epsilon(5313.452406575597, worksheet.output_ai518, 0.001); end
  def test_output_aj518; assert_in_epsilon(5134.154453692737, worksheet.output_aj518, 0.001); end
  def test_output_ak518; assert_in_epsilon(5102.816975930937, worksheet.output_ak518, 0.001); end
  def test_output_am518; assert_in_delta(-0.0014924208486283286, worksheet.output_am518, 0.001); end
  def test_output_an518; assert_in_delta(-0.057991917897476264, worksheet.output_an518, 0.001); end
  def test_output_am519; assert_equal("", worksheet.output_am519); end
  def test_output_an519; assert_equal("", worksheet.output_an519); end
  def test_output_e520; assert_equal("Cost of Electricity production", worksheet.output_e520); end
  def test_output_f520; assert_equal("EUR/MWh", worksheet.output_f520); end
  def test_costs_p180; assert_in_epsilon(86.66232520779187, worksheet.costs_p180, 0.001); end
  def test_costs_p181; assert_in_delta(0, (worksheet.costs_p181||0), 0.001); end
  def test_costs_p182; assert_in_epsilon(27.675089425073754, worksheet.costs_p182, 0.001); end
  def test_costs_p187; assert_in_delta(0, (worksheet.costs_p187||0), 0.001); end
  def test_costs_p192; assert_in_epsilon(72, worksheet.costs_p192, 0.001); end
  def test_costs_f193; assert_in_epsilon(92.25983949924583, worksheet.costs_f193, 0.001); end
  def test_costs_p193; assert_in_epsilon(59.23370111893029, worksheet.costs_p193, 0.001); end
  def test_costs_z180; assert_in_epsilon(92.25893833449824, worksheet.costs_z180, 0.001); end
  def test_costs_z181; assert_in_delta(0, (worksheet.costs_z181||0), 0.001); end
  def test_costs_z182; assert_in_epsilon(34.417701889904954, worksheet.costs_z182, 0.001); end
  def test_costs_z187; assert_in_delta(0, (worksheet.costs_z187||0), 0.001); end
  def test_costs_z192; assert_in_epsilon(72, worksheet.costs_z192, 0.001); end
  def test_costs_z193; assert_in_epsilon(65.80468903401166, worksheet.costs_z193, 0.001); end
  def test_costs_aj193; assert_in_epsilon(62.51919507647098, worksheet.costs_aj193, 0.001); end
  def test_output_ac520; assert_in_epsilon(62.51919507647098, worksheet.output_ac520, 0.001); end
  def test_output_ad520; assert_in_epsilon(78.28229310211432, worksheet.output_ad520, 0.001); end
  def test_output_ae520; assert_in_epsilon(83.2496067788519, worksheet.output_ae520, 0.001); end
  def test_output_af520; assert_in_epsilon(77.95442980834774, worksheet.output_af520, 0.001); end
  def test_output_ag520; assert_in_epsilon(76.80389877402831, worksheet.output_ag520, 0.001); end
  def test_output_ah520; assert_in_epsilon(80.14719341505231, worksheet.output_ah520, 0.001); end
  def test_output_ai520; assert_in_epsilon(79.63994048274837, worksheet.output_ai520, 0.001); end
  def test_output_aj520; assert_in_epsilon(85.17346031276921, worksheet.output_aj520, 0.001); end
  def test_costs_x180; assert_in_epsilon(163.11882420127873, worksheet.costs_x180, 0.001); end
  def test_costs_x181; assert_in_epsilon(124.23813709744648, worksheet.costs_x181, 0.001); end
  def test_costs_x182; assert_in_epsilon(59.929821279943354, worksheet.costs_x182, 0.001); end
  def test_costs_x187; assert_in_epsilon(54.789784533054366, worksheet.costs_x187, 0.001); end
  def test_costs_x192; assert_in_epsilon(71, worksheet.costs_x192, 0.001); end
  def test_costs_n193; assert_in_epsilon(305.0780232889058, worksheet.costs_n193, 0.001); end
  def test_costs_x193; assert_in_epsilon(68.59526521316232, worksheet.costs_x193, 0.001); end
  def test_costs_ah180; assert_in_epsilon(232.16648818247126, worksheet.costs_ah180, 0.001); end
  def test_costs_ah181; assert_in_epsilon(164.93863807768128, worksheet.costs_ah181, 0.001); end
  def test_costs_ah182; assert_in_epsilon(74.1477793248731, worksheet.costs_ah182, 0.001); end
  def test_costs_ah187; assert_in_epsilon(66.96529220706644, worksheet.costs_ah187, 0.001); end
  def test_costs_ah192; assert_in_epsilon(90, worksheet.costs_ah192, 0.001); end
  def test_costs_ah193; assert_in_epsilon(97.22235428508733, worksheet.costs_ah193, 0.001); end
  def test_costs_ar193; assert_in_epsilon(82.90880974912483, worksheet.costs_ar193, 0.001); end
  def test_output_ak520; assert_in_epsilon(82.90880974912483, worksheet.output_ak520, 0.001); end
  def test_output_am520; assert_in_delta(0.007081649505878085, worksheet.output_am520, 0.001); end
  def test_output_an520; assert_in_delta(0.3261336721900223, worksheet.output_an520, 0.001); end
  def test_output_am521; assert_equal("", worksheet.output_am521); end
  def test_output_an521; assert_equal("", worksheet.output_an521); end
  def test_output_b522; assert_equal("Other info", worksheet.output_b522); end
  def test_output_am522; assert_equal("", worksheet.output_am522); end
  def test_output_an522; assert_equal("", worksheet.output_an522); end
  def test_output_e523; assert_equal("Population", worksheet.output_e523); end
  def test_output_f523; assert_equal("people", worksheet.output_f523); end
  def test_output_ac523; assert_in_epsilon(10839905, worksheet.output_ac523, 0.001); end
  def test_output_ad523; assert_in_epsilon(11556128.333649362, worksheet.output_ad523, 0.001); end
  def test_output_ae523; assert_in_epsilon(12272351.667298723, worksheet.output_ae523, 0.001); end
  def test_output_af523; assert_in_epsilon(12720234.322532872, worksheet.output_af523, 0.001); end
  def test_output_ag523; assert_in_epsilon(13168116.97776702, worksheet.output_ag523, 0.001); end
  def test_output_ah523; assert_in_epsilon(13453212.215665147, worksheet.output_ah523, 0.001); end
  def test_output_ai523; assert_in_epsilon(13738307.453563273, worksheet.output_ai523, 0.001); end
  def test_output_aj523; assert_in_epsilon(13949974.189478159, worksheet.output_aj523, 0.001); end
  def test_output_ak523; assert_in_epsilon(14161640.925393045, worksheet.output_ak523, 0.001); end
  def test_output_am523; assert_in_delta(0.006704946529448419, worksheet.output_am523, 0.001); end
  def test_output_an523; assert_in_delta(0.3064358890039207, worksheet.output_an523, 0.001); end
  def test_output_e524; assert_equal("Households", worksheet.output_e524); end
  def test_output_f524; assert_equal("hh", worksheet.output_f524); end
  def test_output_ac524; assert_in_epsilon(4606544, worksheet.output_ac524, 0.001); end
  def test_output_ad524; assert_in_epsilon(4947368.153846154, worksheet.output_ad524, 0.001); end
  def test_output_ae524; assert_in_epsilon(5616469.58982921, worksheet.output_ae524, 0.001); end
  def test_output_af524; assert_in_epsilon(5967314.722490287, worksheet.output_af524, 0.001); end
  def test_output_ag524; assert_in_epsilon(6336194.331089624, worksheet.output_ag524, 0.001); end
  def test_output_ah524; assert_in_epsilon(6635581.95543786, worksheet.output_ah524, 0.001); end
  def test_output_ai524; assert_in_epsilon(6950358.98783223, worksheet.output_ai524, 0.001); end
  def test_output_aj524; assert_in_epsilon(7234285.116753877, worksheet.output_aj524, 0.001); end
  def test_output_ak524; assert_in_epsilon(7532805.887195682, worksheet.output_ak524, 0.001); end
  def test_output_am524; assert_in_delta(0.012370633521203711, worksheet.output_am524, 0.001); end
  def test_output_an524; assert_in_delta(0.6352401903022487, worksheet.output_an524, 0.001); end
  def test_output_e525; assert_equal("Gross Domestic Product", worksheet.output_e525); end
  def test_output_f525; assert_equal("MEUR", worksheet.output_f525); end
  def test_output_ac525; assert_in_epsilon(80777.83559999999, worksheet.output_ac525, 0.001); end
  def test_output_ad525; assert_in_epsilon(89358.06912997126, worksheet.output_ad525, 0.001); end
  def test_output_ae525; assert_in_epsilon(97695.07392935293, worksheet.output_ae525, 0.001); end
  def test_output_af525; assert_in_epsilon(106809.91166202926, worksheet.output_af525, 0.001); end
  def test_output_ag525; assert_in_epsilon(116775.15324365605, worksheet.output_ag525, 0.001); end
  def test_output_ah525; assert_in_epsilon(126420.93139305901, worksheet.output_ah525, 0.001); end
  def test_output_ai525; assert_in_epsilon(136863.4632483926, worksheet.output_ai525, 0.001); end
  def test_output_aj525; assert_in_epsilon(148168.56169256594, worksheet.output_aj525, 0.001); end
  def test_output_ak525; assert_in_epsilon(160407.47583743144, worksheet.output_ak525, 0.001); end
  def test_output_am525; assert_in_delta(0.017298279062856192, worksheet.output_am525, 0.001); end
  def test_output_an525; assert_in_delta(0.9857857622200445, worksheet.output_an525, 0.001); end
  def test_output_b527; assert_equal("REF", worksheet.output_b527); end
  def test_output_c527; assert_equal("CRTL+SHIFT+R to reset Reference scenario Values", worksheet.output_c527); end
  def test_output_b530; assert_equal("Summary indicators", worksheet.output_b530); end
  def test_output_am530; assert_equal("", worksheet.output_am530); end
  def test_output_an530; assert_equal("", worksheet.output_an530); end
  def test_output_c531; assert_equal("Indicators", worksheet.output_c531); end
  def test_output_f531; assert_equal("Units", worksheet.output_f531); end
  def test_output_ak531; assert_equal("Current", worksheet.output_ak531); end
  def test_output_al531; assert_equal("REF", worksheet.output_al531); end
  def test_output_am531; assert_equal("CORE", worksheet.output_am531); end
  def test_output_an531; assert_equal("BEHA", worksheet.output_an531); end
  def test_output_ao531; assert_equal("TECH", worksheet.output_ao531); end
  def test_output_ap531; assert_in_delta(0.95, worksheet.output_ap531, 0.001); end
  def test_output_c532; assert_equal("GHG (wrt 2010 (1990))", worksheet.output_c532); end
  def test_output_f532; assert_equal("%", worksheet.output_f532); end
  def test_output_i532; assert_equal("(-80%)", worksheet.output_i532); end
  def test_output_j532; assert_equal("(-95%)", worksheet.output_j532); end
  def test_output_ac407; assert_in_epsilon(127.04540166305617, worksheet.output_ac407, 0.001); end
  def test_output_ac532; assert_equal("0% (-11%)", worksheet.output_ac532); end
  def test_output_ad407; assert_in_epsilon(100.43992168360032, worksheet.output_ad407, 0.001); end
  def test_output_ad532; assert_equal("-21% (-30%)", worksheet.output_ad532); end
  def test_output_ae407; assert_in_epsilon(81.87605013840269, worksheet.output_ae407, 0.001); end
  def test_output_ae532; assert_equal("-36% (-43%)", worksheet.output_ae532); end
  def test_output_af407; assert_in_epsilon(58.95803568461466, worksheet.output_af407, 0.001); end
  def test_output_af532; assert_equal("-54% (-59%)", worksheet.output_af532); end
  def test_output_ag407; assert_in_epsilon(45.72113082541606, worksheet.output_ag407, 0.001); end
  def test_output_ag532; assert_equal("-64% (-68%)", worksheet.output_ag532); end
  def test_output_ah407; assert_in_epsilon(36.30635828430351, worksheet.output_ah407, 0.001); end
  def test_output_ah532; assert_equal("-71% (-75%)", worksheet.output_ah532); end
  def test_output_ai407; assert_in_epsilon(30.60815536845063, worksheet.output_ai407, 0.001); end
  def test_output_ai532; assert_equal("-76% (-79%)", worksheet.output_ai532); end
  def test_output_aj407; assert_in_epsilon(26.1567426364705, worksheet.output_aj407, 0.001); end
  def test_output_aj532; assert_equal("-79% (-82%)", worksheet.output_aj532); end
  def test_output_ak407; assert_in_epsilon(22.582340779539866, worksheet.output_ak407, 0.001); end
  def test_output_ak532; assert_equal("-82% (-84%)", worksheet.output_ak532); end
  def test_output_al532; assert_equal("1% (-6%)", worksheet.output_al532); end
  def test_output_am532; assert_equal("-79% (-80%)", worksheet.output_am532); end
  def test_output_an532; assert_equal("-80% (-82%)", worksheet.output_an532); end
  def test_output_ao532; assert_equal("-78% (-80%)", worksheet.output_ao532); end
  def test_output_ap532; assert_equal("-93% (-94%)", worksheet.output_ap532); end
  def test_output_d533; assert_equal("Buildings", worksheet.output_d533); end
  def test_output_f533; assert_equal("%", worksheet.output_f533); end
  def test_output_ac533; assert_equal("0% (-14%)", worksheet.output_ac533); end
  def test_output_ad533; assert_equal("-10% (-23%)", worksheet.output_ad533); end
  def test_output_ae533; assert_equal("-29% (-39%)", worksheet.output_ae533); end
  def test_output_af533; assert_equal("-49% (-56%)", worksheet.output_af533); end
  def test_output_ag533; assert_equal("-58% (-63%)", worksheet.output_ag533); end
  def test_output_ah533; assert_equal("-65% (-70%)", worksheet.output_ah533); end
  def test_output_ai533; assert_equal("-71% (-75%)", worksheet.output_ai533); end
  def test_output_aj533; assert_equal("-75% (-78%)", worksheet.output_aj533); end
  def test_output_ak533; assert_equal("-78% (-81%)", worksheet.output_ak533); end
  def test_output_al533; assert_equal("-27% (-12%)", worksheet.output_al533); end
  def test_output_am533; assert_equal("-91% (-90%)", worksheet.output_am533); end
  def test_output_an533; assert_equal("-100% (-100%)", worksheet.output_an533); end
  def test_output_ao533; assert_equal("-100% (-100%)", worksheet.output_ao533); end
  def test_output_ap533; assert_equal("-100% (-100%)", worksheet.output_ap533); end
  def test_output_d534; assert_equal("Transport", worksheet.output_d534); end
  def test_output_f534; assert_equal("%", worksheet.output_f534); end
  def test_output_i534; assert_equal("-79% ()", worksheet.output_i534); end
  def test_output_ac534; assert_equal("0% (10%)", worksheet.output_ac534); end
  def test_output_ad534; assert_equal("-7% (2%)", worksheet.output_ad534); end
  def test_output_ae534; assert_equal("-27% (-20%)", worksheet.output_ae534); end
  def test_output_af534; assert_equal("-44% (-39%)", worksheet.output_af534); end
  def test_output_ag534; assert_equal("-61% (-57%)", worksheet.output_ag534); end
  def test_output_ah534; assert_equal("-75% (-72%)", worksheet.output_ah534); end
  def test_output_ai534; assert_equal("-85% (-83%)", worksheet.output_ai534); end
  def test_output_aj534; assert_equal("-93% (-92%)", worksheet.output_aj534); end
  def test_output_ak534; assert_equal("-100% (-100%)", worksheet.output_ak534); end
  def test_output_al534; assert_equal("10% (24%)", worksheet.output_al534); end
  def test_output_am534; assert_equal("-84% (-81%)", worksheet.output_am534); end
  def test_output_an534; assert_equal("-95% (-95%)", worksheet.output_an534); end
  def test_output_ao534; assert_equal("-76% (-73%)", worksheet.output_ao534); end
  def test_output_ap534; assert_equal("-96% (-96%)", worksheet.output_ap534); end
  def test_output_e535; assert_equal("Passenger", worksheet.output_e535); end
  def test_output_i535; assert_equal("-77% ()", worksheet.output_i535); end
  def test_output_ac535; assert_equal("0% (N/A)", worksheet.output_ac535); end
  def test_output_ad535; assert_equal("-7% (N/A)", worksheet.output_ad535); end
  def test_output_ae535; assert_equal("-26% (N/A)", worksheet.output_ae535); end
  def test_output_af535; assert_equal("-45% (N/A)", worksheet.output_af535); end
  def test_output_ag535; assert_equal("-63% (N/A)", worksheet.output_ag535); end
  def test_output_ah535; assert_equal("-77% (N/A)", worksheet.output_ah535); end
  def test_output_ai535; assert_equal("-85% (N/A)", worksheet.output_ai535); end
  def test_output_aj535; assert_equal("-92% (N/A)", worksheet.output_aj535); end
  def test_output_ak535; assert_equal("-97% (N/A)", worksheet.output_ak535); end
  def test_output_al535; assert_equal("11% (N/A)", worksheet.output_al535); end
  def test_output_am535; assert_equal("-85% (N/A)", worksheet.output_am535); end
  def test_output_an535; assert_equal("-98% (N/A)", worksheet.output_an535); end
  def test_output_ao535; assert_equal("-77% (N/A)", worksheet.output_ao535); end
  def test_output_ap535; assert_equal("-97% (N/A)", worksheet.output_ap535); end
  def test_output_e536; assert_equal("Freight", worksheet.output_e536); end
  def test_output_i536; assert_equal("-61% ()", worksheet.output_i536); end
  def test_output_ac536; assert_equal("0% (N/A)", worksheet.output_ac536); end
  def test_output_ad536; assert_equal("-6% (N/A)", worksheet.output_ad536); end
  def test_output_ae536; assert_equal("-15% (N/A)", worksheet.output_ae536); end
  def test_output_af536; assert_equal("-24% (N/A)", worksheet.output_af536); end
  def test_output_ag536; assert_equal("-32% (N/A)", worksheet.output_ag536); end
  def test_output_ah536; assert_equal("-40% (N/A)", worksheet.output_ah536); end
  def test_output_ai536; assert_equal("-47% (N/A)", worksheet.output_ai536); end
  def test_output_aj536; assert_equal("-54% (N/A)", worksheet.output_aj536); end
  def test_output_ak536; assert_equal("-60% (N/A)", worksheet.output_ak536); end
  def test_output_al536; assert_equal("95% (N/A)", worksheet.output_al536); end
  def test_output_am536; assert_equal("-24% (N/A)", worksheet.output_am536); end
  def test_output_an536; assert_equal("-27% (N/A)", worksheet.output_an536); end
  def test_output_ao536; assert_equal("-22% (N/A)", worksheet.output_ao536); end
  def test_output_ap536; assert_equal("-53% (N/A)", worksheet.output_ap536); end
  def test_output_d537; assert_equal("Industry", worksheet.output_d537); end
  def test_output_f537; assert_equal("%", worksheet.output_f537); end
  def test_output_i537; assert_equal("-84% ()", worksheet.output_i537); end
  def test_output_ac537; assert_equal("0% (-9%)", worksheet.output_ac537); end
  def test_output_ad537; assert_equal("-21% (-28%)", worksheet.output_ad537); end
  def test_output_ae537; assert_equal("-41% (-46%)", worksheet.output_ae537); end
  def test_output_af537; assert_equal("-55% (-59%)", worksheet.output_af537); end
  def test_output_ag537; assert_equal("-72% (-74%)", worksheet.output_ag537); end
  def test_output_ah537; assert_equal("-84% (-86%)", worksheet.output_ah537); end
  def test_output_ai537; assert_equal("-93% (-93%)", worksheet.output_ai537); end
  def test_output_aj537; assert_equal("-100% (-100%)", worksheet.output_aj537); end
  def test_output_ak537; assert_equal("-109% (-108%)", worksheet.output_ak537); end
  def test_output_al537; assert_equal("-6% (-22%)", worksheet.output_al537); end
  def test_output_am537; assert_equal("-76% (-80%)", worksheet.output_am537); end
  def test_output_an537; assert_equal("-62% (-68%)", worksheet.output_an537); end
  def test_output_ao537; assert_equal("-78% (-81%)", worksheet.output_ao537); end
  def test_output_ap537; assert_equal("-98% (-99%)", worksheet.output_ap537); end
  def test_output_d538; assert_equal("Power", worksheet.output_d538); end
  def test_output_f538; assert_equal("%", worksheet.output_f538); end
  def test_output_i538; assert_equal("-62% ()", worksheet.output_i538); end
  def test_output_ac538; assert_equal("0% (-22%)", worksheet.output_ac538); end
  def test_output_ad538; assert_equal("-59% (-68%)", worksheet.output_ad538); end
  def test_output_ae538; assert_equal("-58% (-68%)", worksheet.output_ae538); end
  def test_output_af538; assert_equal("-99% (-99%)", worksheet.output_af538); end
  def test_output_ag538; assert_equal("-98% (-98%)", worksheet.output_ag538); end
  def test_output_ah538; assert_equal("-97% (-97%)", worksheet.output_ah538); end
  def test_output_ai538; assert_equal("-96% (-97%)", worksheet.output_ai538); end
  def test_output_aj538; assert_equal("-95% (-96%)", worksheet.output_aj538); end
  def test_output_ak538; assert_equal("-94% (-95%)", worksheet.output_ak538); end
  def test_output_al538; assert_equal("49% (16%)", worksheet.output_al538); end
  def test_output_am538; assert_equal("-98% (-98%)", worksheet.output_am538); end
  def test_output_an538; assert_equal("-95% (-96%)", worksheet.output_an538); end
  def test_output_ao538; assert_equal("-82% (-86%)", worksheet.output_ao538); end
  def test_output_ap538; assert_equal("-88% (-91%)", worksheet.output_ap538); end
  def test_output_d539; assert_equal("Agriculture (non-CO2) and waste", worksheet.output_d539); end
  def test_output_f539; assert_equal("%", worksheet.output_f539); end
  def test_output_i539; assert_equal("-18% ()", worksheet.output_i539); end
  def test_output_ac539; assert_equal("0% (-24%)", worksheet.output_ac539); end
  def test_output_ad539; assert_equal("-8% (-30%)", worksheet.output_ad539); end
  def test_output_ae539; assert_equal("-14% (-35%)", worksheet.output_ae539); end
  def test_output_af539; assert_equal("-21% (-40%)", worksheet.output_af539); end
  def test_output_ag539; assert_equal("-26% (-44%)", worksheet.output_ag539); end
  def test_output_ah539; assert_equal("-29% (-46%)", worksheet.output_ah539); end
  def test_output_ai539; assert_equal("-32% (-48%)", worksheet.output_ai539); end
  def test_output_aj539; assert_equal("-35% (-50%)", worksheet.output_aj539); end
  def test_output_ak539; assert_equal("-37% (-52%)", worksheet.output_ak539); end
  def test_output_al539; assert_equal("5% (-20%)", worksheet.output_al539); end
  def test_output_am539; assert_equal("-29% (-46%)", worksheet.output_am539); end
  def test_output_an539; assert_equal("-37% (-52%)", worksheet.output_an539); end
  def test_output_ao539; assert_equal("-18% (-37%)", worksheet.output_ao539); end
  def test_output_ap539; assert_equal("-37% (-52%)", worksheet.output_ap539); end
  def test_output_c540; assert_equal("Energy demand (%wrt 2010(1990)", worksheet.output_c540); end
  def test_output_f540; assert_equal("%", worksheet.output_f540); end
  def test_output_ac540; assert_equal("0% (28%)", worksheet.output_ac540); end
  def test_output_ad540; assert_equal("-7% (19%)", worksheet.output_ad540); end
  def test_output_ae540; assert_equal("-19% (4%)", worksheet.output_ae540); end
  def test_output_af540; assert_equal("-29% (-9%)", worksheet.output_af540); end
  def test_output_ag540; assert_equal("-38% (-21%)", worksheet.output_ag540); end
  def test_output_ah540; assert_equal("-46% (-31%)", worksheet.output_ah540); end
  def test_output_ai540; assert_equal("-52% (-38%)", worksheet.output_ai540); end
  def test_output_aj540; assert_equal("-57% (-45%)", worksheet.output_aj540); end
  def test_output_ak540; assert_equal("-62% (-51%)", worksheet.output_ak540); end
  def test_output_al540; assert_equal("13% (58%)", worksheet.output_al540); end
  def test_output_am540; assert_equal("-42% (-19%)", worksheet.output_am540); end
  def test_output_an540; assert_equal("-57% (-39%)", worksheet.output_an540); end
  def test_output_ao540; assert_equal("-33% (-6%)", worksheet.output_ao540); end
  def test_output_ap540; assert_equal("-62% (-46%)", worksheet.output_ap540); end
  def test_output_c541; assert_equal("RES share of supply (in 2050)", worksheet.output_c541); end
  def test_output_k541; assert_equal("~100%", worksheet.output_k541); end
  def test_output_ac58; assert_in_delta(0.07657513288860449, worksheet.output_ac58, 0.001); end
  def test_output_ac541; assert_in_delta(0.07657513288860449, worksheet.output_ac541, 0.001); end
  def test_output_ad541; assert_in_delta(0.13817867359824654, worksheet.output_ad541, 0.001); end
  def test_output_ae541; assert_in_delta(0.22072646151985625, worksheet.output_ae541, 0.001); end
  def test_output_af541; assert_in_delta(0.30724893811326986, worksheet.output_af541, 0.001); end
  def test_output_ag541; assert_in_delta(0.3961068168672693, worksheet.output_ag541, 0.001); end
  def test_output_ah541; assert_in_delta(0.5251098684556382, worksheet.output_ah541, 0.001); end
  def test_output_ai541; assert_in_delta(0.6041774417667087, worksheet.output_ai541, 0.001); end
  def test_output_aj541; assert_in_delta(0.8355134392984893, worksheet.output_aj541, 0.001); end
  def test_output_ak541; assert_in_delta(0.9517931253340663, worksheet.output_ak541, 0.001); end
  def test_output_al541; assert_in_delta(0.17235160940022934, worksheet.output_al541, 0.001); end
  def test_output_am541; assert_in_delta(0.6685397688050082, worksheet.output_am541, 0.001); end
  def test_output_an541; assert_in_delta(0.6923244164676855, worksheet.output_an541, 0.001); end
  def test_output_ao541; assert_in_delta(0.6458277834571076, worksheet.output_ao541, 0.001); end
  def test_output_ap541; assert_in_delta(0.7919080656180693, worksheet.output_ap541, 0.001); end
  def test_output_c542; assert_equal("Biomass use ", worksheet.output_c542); end
  def test_output_f542; assert_equal("(TWh)", worksheet.output_f542); end
  def test_output_ac542; assert_in_epsilon(39.17302801717402, worksheet.output_ac542, 0.001); end
  def test_output_ad542; assert_in_epsilon(49.14885646545613, worksheet.output_ad542, 0.001); end
  def test_output_ae542; assert_in_epsilon(62.09028658916286, worksheet.output_ae542, 0.001); end
  def test_output_af542; assert_in_epsilon(71.23949000900316, worksheet.output_af542, 0.001); end
  def test_output_ag542; assert_in_epsilon(77.71318708681505, worksheet.output_ag542, 0.001); end
  def test_output_ah542; assert_in_epsilon(83.43099500278001, worksheet.output_ah542, 0.001); end
  def test_output_ai542; assert_in_epsilon(88.9372132761041, worksheet.output_ai542, 0.001); end
  def test_output_aj542; assert_in_epsilon(94.32864206746488, worksheet.output_aj542, 0.001); end
  def test_output_ak542; assert_in_epsilon(99.69565140273461, worksheet.output_ak542, 0.001); end
  def test_output_al542; assert_in_epsilon(51.777474205044065, worksheet.output_al542, 0.001); end
  def test_output_am542; assert_in_epsilon(77.28221795315878, worksheet.output_am542, 0.001); end
  def test_output_an542; assert_in_epsilon(76.29334882963192, worksheet.output_an542, 0.001); end
  def test_output_ao542; assert_in_epsilon(77.87596365472629, worksheet.output_ao542, 0.001); end
  def test_output_ap542; assert_in_epsilon(80.80588475264626, worksheet.output_ap542, 0.001); end
  def test_output_c543; assert_equal("CCS", worksheet.output_c543); end
  def test_output_f543; assert_equal("(Mt)", worksheet.output_f543); end
  def test_output_ac543; assert_in_delta(0, (worksheet.output_ac543||0), 0.001); end
  def test_output_ad543; assert_in_delta(0.028667007971375336, worksheet.output_ad543, 0.001); end
  def test_output_ae543; assert_in_delta(0.05333976301920418, worksheet.output_ae543, 0.001); end
  def test_output_af543; assert_in_epsilon(-1.718904755267308, worksheet.output_af543, 0.001); end
  def test_output_ag543; assert_in_epsilon(-6.679727984546258, worksheet.output_ag543, 0.001); end
  def test_output_ah543; assert_in_epsilon(-10.471297206319612, worksheet.output_ah543, 0.001); end
  def test_output_ai543; assert_in_epsilon(-12.96785865867733, worksheet.output_ai543, 0.001); end
  def test_output_aj543; assert_in_epsilon(-15.076611754781968, worksheet.output_aj543, 0.001); end
  def test_output_ak543; assert_in_epsilon(-18.81992687336423, worksheet.output_ak543, 0.001); end
  def test_output_al543; assert_in_delta(0, (worksheet.output_al543||0), 0.001); end
  def test_output_am543; assert_in_epsilon(-6.743016137957559, worksheet.output_am543, 0.001); end
  def test_output_an543; assert_in_delta(0.3462729519303583, worksheet.output_an543, 0.001); end
  def test_output_ao543; assert_in_epsilon(-14.78535952560561, worksheet.output_ao543, 0.001); end
  def test_output_ap543; assert_in_epsilon(-10.297735071705665, worksheet.output_ap543, 0.001); end
  def test_output_c544; assert_equal("Electricity", worksheet.output_c544); end
  def test_output_d545; assert_equal("Electricity prodution", worksheet.output_d545); end
  def test_output_f545; assert_equal("(TWh)", worksheet.output_f545); end
  def test_output_ac545; assert_in_epsilon(101.22277868222034, worksheet.output_ac545, 0.001); end
  def test_output_ad545; assert_in_epsilon(85.18743235631662, worksheet.output_ad545, 0.001); end
  def test_output_ae545; assert_in_epsilon(103.18202875159457, worksheet.output_ae545, 0.001); end
  def test_output_af545; assert_in_epsilon(131.77806402723053, worksheet.output_af545, 0.001); end
  def test_output_ag545; assert_in_epsilon(174.0215361846447, worksheet.output_ag545, 0.001); end
  def test_output_ah545; assert_in_epsilon(205.52622728877463, worksheet.output_ah545, 0.001); end
  def test_output_ai545; assert_in_epsilon(247.46666336464807, worksheet.output_ai545, 0.001); end
  def test_output_aj545; assert_in_epsilon(260.94151092127987, worksheet.output_aj545, 0.001); end
  def test_output_ak545; assert_in_epsilon(315.7157579290303, worksheet.output_ak545, 0.001); end
  def test_output_al545; assert_in_epsilon(142.85510362824758, worksheet.output_al545, 0.001); end
  def test_output_am545; assert_in_epsilon(123.30891474699033, worksheet.output_am545, 0.001); end
  def test_output_an545; assert_in_epsilon(97.59946767377578, worksheet.output_an545, 0.001); end
  def test_output_ao545; assert_in_epsilon(151.95354622112384, worksheet.output_ao545, 0.001); end
  def test_output_ap545; assert_in_epsilon(101.45972091215951, worksheet.output_ap545, 0.001); end
  def test_output_d546; assert_equal("Electricity prodution (%wrt 2010(1990))", worksheet.output_d546); end
  def test_output_f546; assert_equal("%", worksheet.output_f546); end
  def test_output_ac546; assert_equal("0% (43%)", worksheet.output_ac546); end
  def test_output_ad546; assert_equal("-16% (20%)", worksheet.output_ad546); end
  def test_output_ae546; assert_equal("2% (45%)", worksheet.output_ae546); end
  def test_output_af546; assert_equal("30% (86%)", worksheet.output_af546); end
  def test_output_ag546; assert_equal("72% (145%)", worksheet.output_ag546); end
  def test_output_ah546; assert_equal("103% (190%)", worksheet.output_ah546); end
  def test_output_ai546; assert_equal("144% (249%)", worksheet.output_ai546); end
  def test_output_aj546; assert_equal("158% (268%)", worksheet.output_aj546); end
  def test_output_ak546; assert_equal("212% (345%)", worksheet.output_ak546); end
  def test_output_al546; assert_equal("38% (101%)", worksheet.output_al546); end
  def test_output_am546; assert_equal("19% (74%)", worksheet.output_am546); end
  def test_output_an546; assert_equal("-5% (38%)", worksheet.output_an546); end
  def test_output_ao546; assert_equal("47% (114%)", worksheet.output_ao546); end
  def test_output_ap546; assert_equal("-2% (43%)", worksheet.output_ap546); end
  def test_output_c547; assert_equal("Costs (in 2050), wrt BAU (index=100)", worksheet.output_c547); end
  def test_output_ac547; assert_in_epsilon(120.7824990072638, worksheet.output_ac547, 0.001); end
  def test_output_ad547; assert_in_epsilon(117.14970542428087, worksheet.output_ad547, 0.001); end
  def test_output_ae547; assert_in_epsilon(147.04238259429187, worksheet.output_ae547, 0.001); end
  def test_output_af547; assert_in_epsilon(126.68107543916717, worksheet.output_af547, 0.001); end
  def test_output_ag547; assert_in_epsilon(121.51732778360815, worksheet.output_ag547, 0.001); end
  def test_output_ah547; assert_in_epsilon(114.63056799415273, worksheet.output_ah547, 0.001); end
  def test_output_ai547; assert_in_epsilon(110.41740275949459, worksheet.output_ai547, 0.001); end
  def test_output_aj547; assert_in_epsilon(106.29923987145362, worksheet.output_aj547, 0.001); end
  def test_output_ak547; assert_in_epsilon(103.33830946156428, worksheet.output_ak547, 0.001); end
  def test_output_al547; assert_in_epsilon(100, worksheet.output_al547, 0.001); end
  def test_output_am547; assert_in_epsilon(93.61303954806654, worksheet.output_am547, 0.001); end
  def test_output_an547; assert_in_epsilon(77.97444106551848, worksheet.output_an547, 0.001); end
  def test_output_ao547; assert_in_epsilon(99.77102824128117, worksheet.output_ao547, 0.001); end
  def test_output_ap547; assert_in_epsilon(85.73659897799698, worksheet.output_ap547, 0.001); end
  def test_output_d548; assert_equal("Investments", worksheet.output_d548); end
  def test_output_f548; assert_equal("MEUR", worksheet.output_f548); end
  def test_output_ac548; assert_in_epsilon(137.33750219059073, worksheet.output_ac548, 0.001); end
  def test_output_ad548; assert_in_epsilon(134.63108850112403, worksheet.output_ad548, 0.001); end
  def test_output_ae548; assert_in_epsilon(198.17775329174435, worksheet.output_ae548, 0.001); end
  def test_output_af548; assert_in_epsilon(181.08748686372522, worksheet.output_af548, 0.001); end
  def test_output_ag548; assert_in_epsilon(178.9762952387575, worksheet.output_ag548, 0.001); end
  def test_output_ah548; assert_in_epsilon(171.08684292815394, worksheet.output_ah548, 0.001); end
  def test_output_ai548; assert_in_epsilon(166.89004995431958, worksheet.output_ai548, 0.001); end
  def test_output_aj548; assert_in_epsilon(163.2134164300061, worksheet.output_aj548, 0.001); end
  def test_output_ak548; assert_in_epsilon(160.99912531108913, worksheet.output_ak548, 0.001); end
  def test_output_al548; assert_in_epsilon(100, worksheet.output_al548, 0.001); end
  def test_output_am548; assert_in_epsilon(123.78085911162577, worksheet.output_am548, 0.001); end
  def test_output_an548; assert_in_epsilon(105.05502398285161, worksheet.output_an548, 0.001); end
  def test_output_ao548; assert_in_epsilon(123.67167624601862, worksheet.output_ao548, 0.001); end
  def test_output_ap548; assert_in_epsilon(118.92428106083858, worksheet.output_ap548, 0.001); end
  def test_output_d549; assert_equal("O&M", worksheet.output_d549); end
  def test_output_f549; assert_equal("MEUR", worksheet.output_f549); end
  def test_output_ac549; assert_in_epsilon(100.29656890089986, worksheet.output_ac549, 0.001); end
  def test_output_ad549; assert_in_epsilon(94.74485177992052, worksheet.output_ad549, 0.001); end
  def test_output_ae549; assert_in_epsilon(99.39917591103521, worksheet.output_ae549, 0.001); end
  def test_output_af549; assert_in_epsilon(100.93316662089936, worksheet.output_af549, 0.001); end
  def test_output_ag549; assert_in_epsilon(100.9977497060474, worksheet.output_ag549, 0.001); end
  def test_output_ah549; assert_in_epsilon(99.40641015937246, worksheet.output_ah549, 0.001); end
  def test_output_ai549; assert_in_epsilon(97.06929116775362, worksheet.output_ai549, 0.001); end
  def test_output_aj549; assert_in_epsilon(94.03933911268959, worksheet.output_aj549, 0.001); end
  def test_output_ak549; assert_in_epsilon(90.5599068997583, worksheet.output_ak549, 0.001); end
  def test_output_al549; assert_in_epsilon(100, worksheet.output_al549, 0.001); end
  def test_output_am549; assert_in_epsilon(80.31620381561902, worksheet.output_am549, 0.001); end
  def test_output_an549; assert_in_epsilon(61.62462913431725, worksheet.output_an549, 0.001); end
  def test_output_ao549; assert_in_epsilon(101.19231544363095, worksheet.output_ao549, 0.001); end
  def test_output_ap549; assert_in_epsilon(66.14051314039011, worksheet.output_ap549, 0.001); end
  def test_output_d550; assert_equal("Fuel", worksheet.output_d550); end
  def test_output_f550; assert_equal("MEUR", worksheet.output_f550); end
  def test_output_ac550; assert_in_epsilon(100.77351397132092, worksheet.output_ac550, 0.001); end
  def test_output_ad550; assert_in_epsilon(97.67244578709688, worksheet.output_ad550, 0.001); end
  def test_output_ae550; assert_in_epsilon(86.74912145883378, worksheet.output_ae550, 0.001); end
  def test_output_af550; assert_in_epsilon(69.25134446118957, worksheet.output_af550, 0.001); end
  def test_output_ag550; assert_in_epsilon(60.72982131870807, worksheet.output_ag550, 0.001); end
  def test_output_ah550; assert_in_epsilon(54.899452612675844, worksheet.output_ah550, 0.001); end
  def test_output_ai550; assert_in_epsilon(49.25136937035, worksheet.output_ai550, 0.001); end
  def test_output_aj550; assert_in_epsilon(45.44212166401917, worksheet.output_aj550, 0.001); end
  def test_output_ak550; assert_in_epsilon(40.68249340996794, worksheet.output_ak550, 0.001); end
  def test_output_al550; assert_in_epsilon(100, worksheet.output_al550, 0.001); end
  def test_output_am550; assert_in_epsilon(43.896351772431046, worksheet.output_am550, 0.001); end
  def test_output_an550; assert_in_epsilon(36.059323580799415, worksheet.output_an550, 0.001); end
  def test_output_ao550; assert_in_epsilon(53.031592123861515, worksheet.output_ao550, 0.001); end
  def test_output_ap550; assert_in_epsilon(34.09789144744621, worksheet.output_ap550, 0.001); end
  def test_output_c553; assert_equal("THINKCELL CHARTS", worksheet.output_c553); end
  def test_output_f555; assert_equal("Emissions", worksheet.output_f555); end
  def test_output_ab555; assert_in_epsilon(1990, worksheet.output_ab555, 0.001); end
  def test_output_ac555; assert_in_epsilon(2010, worksheet.output_ac555, 0.001); end
  def test_output_ad555; assert_in_epsilon(2050, worksheet.output_ad555, 0.001); end
  def test_output_af555; assert_equal("CAGR 2010-50", worksheet.output_af555); end
  def test_output_ah555; assert_equal("Delta 2010-50", worksheet.output_ah555); end
  def test_output_g557; assert_equal("Agriculture, Waste & others", worksheet.output_g557); end
  def test_output_ab557; assert_in_epsilon(17.988853785900357, worksheet.output_ab557, 0.001); end
  def test_output_ac557; assert_in_epsilon(13.692529969967014, worksheet.output_ac557, 0.001); end
  def test_output_af557; assert_in_delta(-0.011579714006163644, worksheet.output_af557, 0.001); end
  def test_output_ag557; assert_equal("Agriculture, Waste & others", worksheet.output_ag557); end
  def test_output_ah557; assert_in_delta(-0.37242446467988577, worksheet.output_ah557, 0.001); end
  def test_output_ak557; assert_in_epsilon(8.593096825788756, worksheet.output_ak557, 0.001); end
  def test_output_al557; assert_in_delta(0, (worksheet.output_al557||0), 0.001); end
  def test_output_g558; assert_equal("Building", worksheet.output_g558); end
  def test_output_ab558; assert_in_epsilon(24.90969851232879, worksheet.output_ab558, 0.001); end
  def test_output_ac558; assert_in_epsilon(21.476676050065233, worksheet.output_ac558, 0.001); end
  def test_output_af558; assert_in_delta(-0.03664137482469898, worksheet.output_af558, 0.001); end
  def test_output_ag558; assert_equal("Building", worksheet.output_ag558); end
  def test_output_ah558; assert_in_delta(-0.775343182169196, worksheet.output_ah558, 0.001); end
  def test_output_ak558; assert_in_epsilon(4.824881698990698, worksheet.output_ak558, 0.001); end
  def test_output_al558; assert_in_delta(0, (worksheet.output_al558||0), 0.001); end
  def test_output_g559; assert_equal("Transport", worksheet.output_g559); end
  def test_output_ab559; assert_in_epsilon(20.4724552687413, worksheet.output_ab559, 0.001); end
  def test_output_ac559; assert_in_epsilon(22.534263831271545, worksheet.output_ac559, 0.001); end
  def test_output_af559; assert_in_delta(-1, worksheet.output_af559, 0.001); end
  def test_output_ag559; assert_equal("Transport", worksheet.output_ag559); end
  def test_output_ah559; assert_in_delta(-1, worksheet.output_ah559, 0.001); end
  def test_output_ak559; assert_in_delta(0, (worksheet.output_ak559||0), 0.001); end
  def test_output_al559; assert_in_delta(0, (worksheet.output_al559||0), 0.001); end
  def test_output_g560; assert_equal("Industry", worksheet.output_g560); end
  def test_output_ab560; assert_in_epsilon(54.09955930941479, worksheet.output_ab560, 0.001); end
  def test_output_ac560; assert_in_epsilon(49.32130350959836, worksheet.output_ac560, 0.001); end
  def test_output_af560; assert_equal(:num, worksheet.output_af560); end
  def test_output_ag560; assert_equal("Industry", worksheet.output_ag560); end
  def test_output_ah560; assert_in_epsilon(-1.0900734265591647, worksheet.output_ah560, 0.001); end
  def test_output_g561; assert_equal("Energy", worksheet.output_g561); end
  def test_output_ab561; assert_in_epsilon(25.6221067252624, worksheet.output_ab561, 0.001); end
  def test_output_ac561; assert_in_epsilon(19.96312356237269, worksheet.output_ac561, 0.001); end
  def test_output_af561; assert_in_delta(-0.009536973208071786, worksheet.output_af561, 0.001); end
  def test_output_ag561; assert_equal("Energy", worksheet.output_ag561); end
  def test_output_ah561; assert_in_delta(-0.3183981944648522, worksheet.output_ah561, 0.001); end
  def test_output_ak561; assert_in_epsilon(13.606901064234478, worksheet.output_ak561, 0.001); end
  def test_output_al561; assert_in_delta(0, (worksheet.output_al561||0), 0.001); end
  def test_output_g562; assert_equal("TOTAL", worksheet.output_g562); end
  def test_output_ab562; assert_in_epsilon(143.09267360164765, worksheet.output_ab562, 0.001); end
  def test_output_ac562; assert_in_epsilon(127.04540166305617, worksheet.output_ac562, 0.001); end
  def test_output_ak560; assert_in_epsilon(-4.442538809474076, worksheet.output_ak560, 0.001); end
  def test_output_ak562; assert_in_epsilon(22.582340779539855, worksheet.output_ak562, 0.001); end
  def test_output_al562; assert_in_delta(0, (worksheet.output_al562||0), 0.001); end
  def test_output_ad557; assert_in_epsilon(8.593096825788756, worksheet.output_ad557, 0.001); end
  def test_output_ad558; assert_in_epsilon(4.824881698990698, worksheet.output_ad558, 0.001); end
  def test_output_ad559; assert_in_delta(0, (worksheet.output_ad559||0), 0.001); end
  def test_output_al560; assert_in_delta(0, (worksheet.output_al560||0), 0.001); end
  def test_output_ad560; assert_in_epsilon(-4.442538809474076, worksheet.output_ad560, 0.001); end
  def test_output_ad561; assert_in_epsilon(13.606901064234478, worksheet.output_ad561, 0.001); end
  def test_output_ad562; assert_in_epsilon(22.582340779539855, worksheet.output_ad562, 0.001); end
  def test_output_af562; assert_in_delta(-0.04226523960928619, worksheet.output_af562, 0.001); end
  def test_output_ag562; assert_equal("TOTAL", worksheet.output_ag562); end
  def test_output_ah562; assert_in_delta(-0.8222498375861593, worksheet.output_ah562, 0.001); end
  def test_output_af564; assert_equal("CAGR 2010-50", worksheet.output_af564); end
  def test_output_ah564; assert_equal("Delta 2010-50", worksheet.output_ah564); end
  def test_output_g565; assert_equal("Steel Industry", worksheet.output_g565); end
  def test_output_ac325; assert_in_epsilon(9.230780077441663, worksheet.output_ac325, 0.001); end
  def test_output_ac565; assert_in_epsilon(9.230780077441663, worksheet.output_ac565, 0.001); end
  def test_output_ad565; assert_in_delta(0.33581125328528505, worksheet.output_ad565, 0.001); end
  def test_output_af565; assert_in_delta(-0.07950502709101481, worksheet.output_af565, 0.001); end
  def test_output_ag565; assert_equal("Steel Industry", worksheet.output_ag565); end
  def test_output_ah565; assert_in_delta(-0.9636204903087284, worksheet.output_ah565, 0.001); end
  def test_output_g566; assert_equal("Cement Industry", worksheet.output_g566); end
  def test_output_ac326; assert_in_epsilon(4.258013889251608, worksheet.output_ac326, 0.001); end
  def test_output_ac566; assert_in_epsilon(4.258013889251608, worksheet.output_ac566, 0.001); end
  def test_output_ad566; assert_in_delta(0.05572633344425354, worksheet.output_ad566, 0.001); end
  def test_output_af566; assert_in_delta(-0.10273374484986364, worksheet.output_af566, 0.001); end
  def test_output_ag566; assert_equal("Cement Industry", worksheet.output_ag566); end
  def test_output_ah566; assert_in_delta(-0.9869125994199027, worksheet.output_ah566, 0.001); end
  def test_output_g567; assert_equal("Lime Industry", worksheet.output_g567); end
  def test_output_ac327; assert_in_epsilon(2.6389462282715046, worksheet.output_ac327, 0.001); end
  def test_output_ac567; assert_in_epsilon(2.6389462282715046, worksheet.output_ac567, 0.001); end
  def test_output_ad567; assert_in_delta(0.32500915922330975, worksheet.output_ad567, 0.001); end
  def test_output_af567; assert_in_delta(-0.051010020947042545, worksheet.output_af567, 0.001); end
  def test_output_ag567; assert_equal("Lime Industry", worksheet.output_ag567); end
  def test_output_ah567; assert_in_delta(-0.8768413104664929, worksheet.output_ah567, 0.001); end
  def test_output_g568; assert_equal("Glass Industry", worksheet.output_g568); end
  def test_output_ac328; assert_in_epsilon(1.0013697565518134, worksheet.output_ac328, 0.001); end
  def test_output_ac568; assert_in_epsilon(1.0013697565518134, worksheet.output_ac568, 0.001); end
  def test_output_ad568; assert_in_delta(0.08455010795725998, worksheet.output_ad568, 0.001); end
  def test_output_af568; assert_in_delta(-0.05992394146106894, worksheet.output_af568, 0.001); end
  def test_output_ag568; assert_equal("Glass Industry", worksheet.output_ag568); end
  def test_output_ah568; assert_in_delta(-0.9155655466883624, worksheet.output_ah568, 0.001); end
  def test_output_g569; assert_equal("Chemicals Industry", worksheet.output_g569); end
  def test_output_ac329; assert_in_epsilon(13.462287548758185, worksheet.output_ac329, 0.001); end
  def test_output_ac569; assert_in_epsilon(13.462287548758185, worksheet.output_ac569, 0.001); end
  def test_output_ad569; assert_in_epsilon(1.5231413508809901, worksheet.output_ad569, 0.001); end
  def test_output_af569; assert_in_delta(-0.05302059582151575, worksheet.output_af569, 0.001); end
  def test_output_ag569; assert_equal("Chemicals Industry", worksheet.output_ag569); end
  def test_output_ah569; assert_in_delta(-0.8868586527093242, worksheet.output_ah569, 0.001); end
  def test_output_g570; assert_equal("Pulp & Paper Industry", worksheet.output_g570); end
  def test_output_ac330; assert_in_epsilon(3.272476507946944, worksheet.output_ac330, 0.001); end
  def test_output_ac570; assert_in_epsilon(3.272476507946944, worksheet.output_ac570, 0.001); end
  def test_output_ad570; assert_in_epsilon(1.1236967707584522, worksheet.output_ad570, 0.001); end
  def test_output_af570; assert_in_delta(-0.026369175570392644, worksheet.output_af570, 0.001); end
  def test_output_ag570; assert_equal("Pulp & Paper Industry", worksheet.output_ag570); end
  def test_output_ah570; assert_in_delta(-0.656621898421686, worksheet.output_ah570, 0.001); end
  def test_output_g571; assert_equal("Oil & Gas Industry", worksheet.output_g571); end
  def test_output_ac331; assert_in_epsilon(11.795222415908047, worksheet.output_ac331, 0.001); end
  def test_output_ac571; assert_in_epsilon(11.795222415908047, worksheet.output_ac571, 0.001); end
  def test_output_ad571; assert_in_delta(0.11987009452009956, worksheet.output_ad571, 0.001); end
  def test_output_af571; assert_in_delta(-0.10838961589566898, worksheet.output_af571, 0.001); end
  def test_output_ag571; assert_equal("Oil & Gas Industry", worksheet.output_ag571); end
  def test_output_ah571; assert_in_delta(-0.9898374027811097, worksheet.output_ah571, 0.001); end
  def test_output_g572; assert_equal("Food, drinks and tobacco Industry", worksheet.output_g572); end
  def test_output_ac332; assert_in_epsilon(2.4081985609298515, worksheet.output_ac332, 0.001); end
  def test_output_ac572; assert_in_epsilon(2.4081985609298515, worksheet.output_ac572, 0.001); end
  def test_output_ad572; assert_in_delta(0.7369456218959048, worksheet.output_ad572, 0.001); end
  def test_output_af572; assert_in_delta(-0.0291691268623262, worksheet.output_af572, 0.001); end
  def test_output_ag572; assert_equal("Food, drinks and tobacco Industry", worksheet.output_ag572); end
  def test_output_ah572; assert_in_delta(-0.6939846930182717, worksheet.output_ah572, 0.001); end
  def test_output_g573; assert_equal("Machines Industry", worksheet.output_g573); end
  def test_output_ac333; assert_in_delta(0, (worksheet.output_ac333||0), 0.001); end
  def test_output_ac573; assert_in_delta(0, (worksheet.output_ac573||0), 0.001); end
  def test_output_ad573; assert_in_delta(0, (worksheet.output_ad573||0), 0.001); end
  def test_output_af573; assert_equal(:div0, worksheet.output_af573); end
  def test_output_ag573; assert_equal("Machines Industry", worksheet.output_ag573); end
  def test_output_ah573; assert_equal(:div0, worksheet.output_ah573); end
  def test_output_g574; assert_equal("Non-Ferrous metals Industry", worksheet.output_g574); end
  def test_output_ac334; assert_in_delta(0.42303102761818345, worksheet.output_ac334, 0.001); end
  def test_output_ac574; assert_in_delta(0.42303102761818345, worksheet.output_ac574, 0.001); end
  def test_output_ad574; assert_in_delta(0.04368010841639991, worksheet.output_ad574, 0.001); end
  def test_output_af574; assert_in_delta(-0.05518280803239728, worksheet.output_af574, 0.001); end
  def test_output_ag574; assert_equal("Non-Ferrous metals Industry", worksheet.output_ag574); end
  def test_output_ah574; assert_in_delta(-0.8967449062487577, worksheet.output_ah574, 0.001); end
  def test_output_g575; assert_equal("Construction industry", worksheet.output_g575); end
  def test_output_ac335; assert_in_delta(0.532709730360392, worksheet.output_ac335, 0.001); end
  def test_output_ac575; assert_in_delta(0.532709730360392, worksheet.output_ac575, 0.001); end
  def test_output_ad575; assert_in_delta(0.033934742790589334, worksheet.output_ad575, 0.001); end
  def test_output_af575; assert_in_delta(-0.06652251316282731, worksheet.output_af575, 0.001); end
  def test_output_ag575; assert_equal("Construction industry", worksheet.output_ag575); end
  def test_output_ah575; assert_in_delta(-0.9362978732007925, worksheet.output_ah575, 0.001); end
  def test_output_g576; assert_equal("Other Industry", worksheet.output_g576); end
  def test_output_ac336; assert_in_epsilon(3.0029886403577475, worksheet.output_ac336, 0.001); end
  def test_output_ac576; assert_in_epsilon(3.0029886403577475, worksheet.output_ac576, 0.001); end
  def test_output_ad576; assert_in_delta(0, (worksheet.output_ad576||0), 0.001); end
  def test_output_af576; assert_in_delta(-1, worksheet.output_af576, 0.001); end
  def test_output_ag576; assert_equal("Other Industry", worksheet.output_ag576); end
  def test_output_g577; assert_equal("Biomass allocated to industry", worksheet.output_g577); end
  def test_output_af577; assert_in_delta(0.03000584415629115, worksheet.output_af577, 0.001); end
  def test_output_ag577; assert_equal("Biomass allocated to industry", worksheet.output_ag577); end
  def test_output_ah577; assert_in_epsilon(2.2627782179445184, worksheet.output_ah577, 0.001); end
  def test_output_g578; assert_equal("TOTAL Industry", worksheet.output_g578); end
  def test_output_ab578; assert_in_epsilon(54.09955930941479, worksheet.output_ab578, 0.001); end
  def test_output_ac577; assert_in_epsilon(-2.704720873797583, worksheet.output_ac577, 0.001); end
  def test_output_ac578; assert_in_epsilon(49.32130350959836, worksheet.output_ac578, 0.001); end
  def test_output_ad577; assert_in_epsilon(-8.82490435264662, worksheet.output_ad577, 0.001); end
  def test_output_ad578; assert_in_epsilon(-4.442538809474076, worksheet.output_ad578, 0.001); end
  def test_output_af578; assert_equal(:num, worksheet.output_af578); end
  def test_output_ag578; assert_equal("TOTAL Industry", worksheet.output_ag578); end
  def test_output_ah578; assert_in_epsilon(-1.0900734265591647, worksheet.output_ah578, 0.001); end
  def test_control_ab17; assert_in_epsilon(40, worksheet.control_ab17, 0.001); end
  def test_control_ab15; assert_in_epsilon(40, worksheet.control_ab15, 0.001); end
  def test_control_ab16; assert_in_epsilon(40, worksheet.control_ab16, 0.001); end
  def test_control_ab13; assert_in_epsilon(40, worksheet.control_ab13, 0.001); end
  def test_control_ab5; assert_in_epsilon(40, worksheet.control_ab5, 0.001); end
  def test_control_ab6; assert_in_epsilon(40, worksheet.control_ab6, 0.001); end
  def test_control_ab11; assert_in_epsilon(10, worksheet.control_ab11, 0.001); end
  def test_control_ab9; assert_in_epsilon(40, worksheet.control_ab9, 0.001); end
  def test_control_ab7; assert_in_epsilon(40, worksheet.control_ab7, 0.001); end
  def test_control_ab32; assert_in_epsilon(40, worksheet.control_ab32, 0.001); end
  def test_control_h4; assert_in_epsilon(30, worksheet.control_h4, 0.001); end
  def test_control_ab4; assert_in_epsilon(40, worksheet.control_ab4, 0.001); end
  def test_control_ab29; assert_in_epsilon(40, worksheet.control_ab29, 0.001); end
  def test_costs_as1; assert_equal("Discounted ", worksheet.costs_as1); end
  def test_costs_b2; assert_equal("Code", worksheet.costs_b2); end
  def test_costs_c2; assert_equal("Description", worksheet.costs_c2); end
  def test_costs_d2; assert_equal("Group", worksheet.costs_d2); end
  def test_costs_e2; assert_equal("Units", worksheet.costs_e2); end
  def test_costs_f2; assert_in_epsilon(2010, worksheet.costs_f2, 0.001); end
  def test_costs_g2; assert_in_epsilon(2015, worksheet.costs_g2, 0.001); end
  def test_costs_h2; assert_in_epsilon(2020, worksheet.costs_h2, 0.001); end
  def test_costs_i2; assert_in_epsilon(2025, worksheet.costs_i2, 0.001); end
  def test_costs_j2; assert_in_epsilon(2030, worksheet.costs_j2, 0.001); end
  def test_costs_k2; assert_in_epsilon(2035, worksheet.costs_k2, 0.001); end
  def test_costs_l2; assert_in_epsilon(2040, worksheet.costs_l2, 0.001); end
  def test_costs_m2; assert_in_epsilon(2045, worksheet.costs_m2, 0.001); end
  def test_costs_n2; assert_in_epsilon(2050, worksheet.costs_n2, 0.001); end
  def test_costs_p2; assert_in_epsilon(2010, worksheet.costs_p2, 0.001); end
  def test_costs_q2; assert_in_epsilon(2015, worksheet.costs_q2, 0.001); end
  def test_costs_r2; assert_in_epsilon(2020, worksheet.costs_r2, 0.001); end
  def test_costs_s2; assert_in_epsilon(2025, worksheet.costs_s2, 0.001); end
  def test_costs_t2; assert_in_epsilon(2030, worksheet.costs_t2, 0.001); end
  def test_costs_u2; assert_in_epsilon(2035, worksheet.costs_u2, 0.001); end
  def test_costs_v2; assert_in_epsilon(2040, worksheet.costs_v2, 0.001); end
  def test_costs_w2; assert_in_epsilon(2045, worksheet.costs_w2, 0.001); end
  def test_costs_x2; assert_in_epsilon(2050, worksheet.costs_x2, 0.001); end
  def test_costs_z2; assert_in_epsilon(2010, worksheet.costs_z2, 0.001); end
  def test_costs_aa2; assert_in_epsilon(2015, worksheet.costs_aa2, 0.001); end
  def test_costs_ab2; assert_in_epsilon(2020, worksheet.costs_ab2, 0.001); end
  def test_costs_ac2; assert_in_epsilon(2025, worksheet.costs_ac2, 0.001); end
  def test_costs_ad2; assert_in_epsilon(2030, worksheet.costs_ad2, 0.001); end
  def test_costs_ae2; assert_in_epsilon(2035, worksheet.costs_ae2, 0.001); end
  def test_costs_af2; assert_in_epsilon(2040, worksheet.costs_af2, 0.001); end
  def test_costs_ag2; assert_in_epsilon(2045, worksheet.costs_ag2, 0.001); end
  def test_costs_ah2; assert_in_epsilon(2050, worksheet.costs_ah2, 0.001); end
  def test_costs_aj2; assert_in_epsilon(2010, worksheet.costs_aj2, 0.001); end
  def test_costs_ak2; assert_in_epsilon(2015, worksheet.costs_ak2, 0.001); end
  def test_costs_al2; assert_in_epsilon(2020, worksheet.costs_al2, 0.001); end
  def test_costs_am2; assert_in_epsilon(2025, worksheet.costs_am2, 0.001); end
  def test_costs_an2; assert_in_epsilon(2030, worksheet.costs_an2, 0.001); end
  def test_costs_ao2; assert_in_epsilon(2035, worksheet.costs_ao2, 0.001); end
  def test_costs_ap2; assert_in_epsilon(2040, worksheet.costs_ap2, 0.001); end
  def test_costs_aq2; assert_in_epsilon(2045, worksheet.costs_aq2, 0.001); end
  def test_costs_ar2; assert_in_epsilon(2050, worksheet.costs_ar2, 0.001); end
  def test_costs_at2; assert_in_epsilon(2010, worksheet.costs_at2, 0.001); end
  def test_costs_au2; assert_in_epsilon(2015, worksheet.costs_au2, 0.001); end
  def test_costs_av2; assert_in_epsilon(2020, worksheet.costs_av2, 0.001); end
  def test_costs_aw2; assert_in_epsilon(2025, worksheet.costs_aw2, 0.001); end
  def test_costs_ax2; assert_in_epsilon(2030, worksheet.costs_ax2, 0.001); end
  def test_costs_ay2; assert_in_epsilon(2035, worksheet.costs_ay2, 0.001); end
  def test_costs_az2; assert_in_epsilon(2040, worksheet.costs_az2, 0.001); end
  def test_costs_ba2; assert_in_epsilon(2045, worksheet.costs_ba2, 0.001); end
  def test_costs_bb2; assert_in_epsilon(2050, worksheet.costs_bb2, 0.001); end
  def test_costs_bd2; assert_in_epsilon(2010, worksheet.costs_bd2, 0.001); end
  def test_costs_be2; assert_in_epsilon(2015, worksheet.costs_be2, 0.001); end
  def test_costs_bf2; assert_in_epsilon(2020, worksheet.costs_bf2, 0.001); end
  def test_costs_bg2; assert_in_epsilon(2025, worksheet.costs_bg2, 0.001); end
  def test_costs_bh2; assert_in_epsilon(2030, worksheet.costs_bh2, 0.001); end
  def test_costs_bi2; assert_in_epsilon(2035, worksheet.costs_bi2, 0.001); end
  def test_costs_bj2; assert_in_epsilon(2040, worksheet.costs_bj2, 0.001); end
  def test_costs_bk2; assert_in_epsilon(2045, worksheet.costs_bk2, 0.001); end
  def test_costs_bl2; assert_in_epsilon(2050, worksheet.costs_bl2, 0.001); end
  def test_costs_bn2; assert_in_epsilon(2010, worksheet.costs_bn2, 0.001); end
  def test_costs_bo2; assert_in_epsilon(2015, worksheet.costs_bo2, 0.001); end
  def test_costs_bp2; assert_in_epsilon(2020, worksheet.costs_bp2, 0.001); end
  def test_costs_bq2; assert_in_epsilon(2025, worksheet.costs_bq2, 0.001); end
  def test_costs_br2; assert_in_epsilon(2030, worksheet.costs_br2, 0.001); end
  def test_costs_bs2; assert_in_epsilon(2035, worksheet.costs_bs2, 0.001); end
  def test_costs_bt2; assert_in_epsilon(2040, worksheet.costs_bt2, 0.001); end
  def test_costs_bu2; assert_in_epsilon(2045, worksheet.costs_bu2, 0.001); end
  def test_costs_bv2; assert_in_epsilon(2050, worksheet.costs_bv2, 0.001); end
  def test_costs_bx2; assert_in_epsilon(2010, worksheet.costs_bx2, 0.001); end
  def test_costs_by2; assert_in_epsilon(2015, worksheet.costs_by2, 0.001); end
  def test_costs_bz2; assert_in_epsilon(2020, worksheet.costs_bz2, 0.001); end
  def test_costs_ca2; assert_in_epsilon(2025, worksheet.costs_ca2, 0.001); end
  def test_costs_cb2; assert_in_epsilon(2030, worksheet.costs_cb2, 0.001); end
  def test_costs_cc2; assert_in_epsilon(2035, worksheet.costs_cc2, 0.001); end
  def test_costs_cd2; assert_in_epsilon(2040, worksheet.costs_cd2, 0.001); end
  def test_costs_ce2; assert_in_epsilon(2045, worksheet.costs_ce2, 0.001); end
  def test_costs_cf2; assert_in_epsilon(2050, worksheet.costs_cf2, 0.001); end
  def test_costs_c3; assert_equal("LOW", worksheet.costs_c3); end
  def test_costs_f3; assert_equal("C1.Low", worksheet.costs_f3); end
  def test_costs_g3; assert_equal("Low estimate of capital costs in that year", worksheet.costs_g3); end
  def test_costs_p3; assert_equal("C2.Low", worksheet.costs_p3); end
  def test_costs_q3; assert_equal("Low estimate of O&M costs in that year", worksheet.costs_q3); end
  def test_costs_z3; assert_equal("C3.Low", worksheet.costs_z3); end
  def test_costs_aa3; assert_equal("Low estimate of fuel costs in that year", worksheet.costs_aa3); end
  def test_costs_aj3; assert_equal("Low estimate of total Cash Flows", worksheet.costs_aj3); end
  def test_costs_b4; assert_equal("I.a", worksheet.costs_b4); end
  def test_costs_c4; assert_equal("Biomass and gas power stations", worksheet.costs_c4); end
  def test_costs_d4; assert_equal("Electricity", worksheet.costs_d4); end
  def test_costs_e4; assert_equal("MEUR", worksheet.costs_e4); end
  def test_costs_f4; assert_in_delta(0, (worksheet.costs_f4||0), 0.001); end
  def test_costs_b5; assert_equal("I.b", worksheet.costs_b5); end
  def test_costs_c5; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c5); end
  def test_costs_d5; assert_equal("Electricity", worksheet.costs_d5); end
  def test_costs_e5; assert_equal("MEUR", worksheet.costs_e5); end
  def test_costs_f5; assert_in_delta(0, (worksheet.costs_f5||0), 0.001); end
  def test_costs_p5; assert_in_delta(0, (worksheet.costs_p5||0), 0.001); end
  def test_costs_b6; assert_equal("II.a", worksheet.costs_b6); end
  def test_costs_c6; assert_equal("Nuclear power", worksheet.costs_c6); end
  def test_costs_d6; assert_equal("Electricity", worksheet.costs_d6); end
  def test_costs_e6; assert_equal("MEUR", worksheet.costs_e6); end
  def test_costs_f6; assert_in_delta(0, (worksheet.costs_f6||0), 0.001); end
  def test_costs_b7; assert_equal("III.a.1", worksheet.costs_b7); end
  def test_costs_c7; assert_equal("Onshore wind", worksheet.costs_c7); end
  def test_costs_d7; assert_equal("Electricity", worksheet.costs_d7); end
  def test_costs_e7; assert_equal("MEUR", worksheet.costs_e7); end
  def test_costs_p7; assert_in_epsilon(19.174999999999994, worksheet.costs_p7, 0.001); end
  def test_costs_z7; assert_in_delta(0, (worksheet.costs_z7||0), 0.001); end
  def test_costs_b8; assert_equal("III.a.2", worksheet.costs_b8); end
  def test_costs_c8; assert_equal("Offshore wind", worksheet.costs_c8); end
  def test_costs_d8; assert_equal("Electricity", worksheet.costs_d8); end
  def test_costs_e8; assert_equal("MEUR", worksheet.costs_e8); end
  def test_costs_p8; assert_in_epsilon(18.9, worksheet.costs_p8, 0.001); end
  def test_costs_z8; assert_in_delta(0, (worksheet.costs_z8||0), 0.001); end
  def test_costs_b9; assert_equal("III.b", worksheet.costs_b9); end
  def test_costs_c9; assert_equal("Hydroelectric power stations", worksheet.costs_c9); end
  def test_costs_d9; assert_equal("Electricity", worksheet.costs_d9); end
  def test_costs_e9; assert_equal("MEUR", worksheet.costs_e9); end
  def test_costs_f9; assert_in_delta(0, (worksheet.costs_f9||0), 0.001); end
  def test_costs_b10; assert_equal("III.c", worksheet.costs_b10); end
  def test_costs_c10; assert_equal("Tidal and Wave [UNUSED]", worksheet.costs_c10); end
  def test_costs_d10; assert_equal("Electricity", worksheet.costs_d10); end
  def test_costs_e10; assert_equal("MEUR", worksheet.costs_e10); end
  def test_costs_z10; assert_in_delta(0, (worksheet.costs_z10||0), 0.001); end
  def test_costs_aa10; assert_in_delta(0, (worksheet.costs_aa10||0), 0.001); end
  def test_costs_ab10; assert_in_delta(0, (worksheet.costs_ab10||0), 0.001); end
  def test_costs_ac10; assert_in_delta(0, (worksheet.costs_ac10||0), 0.001); end
  def test_costs_ad10; assert_in_delta(0, (worksheet.costs_ad10||0), 0.001); end
  def test_costs_ae10; assert_in_delta(0, (worksheet.costs_ae10||0), 0.001); end
  def test_costs_af10; assert_in_delta(0, (worksheet.costs_af10||0), 0.001); end
  def test_costs_ag10; assert_in_delta(0, (worksheet.costs_ag10||0), 0.001); end
  def test_costs_ah10; assert_in_delta(0, (worksheet.costs_ah10||0), 0.001); end
  def test_costs_b11; assert_equal("III.d", worksheet.costs_b11); end
  def test_costs_c11; assert_equal("Geothermal electricity", worksheet.costs_c11); end
  def test_costs_d11; assert_equal("Electricity", worksheet.costs_d11); end
  def test_costs_e11; assert_equal("MEUR", worksheet.costs_e11); end
  def test_costs_f11; assert_in_delta(0, (worksheet.costs_f11||0), 0.001); end
  def test_costs_z11; assert_in_delta(0, (worksheet.costs_z11||0), 0.001); end
  def test_costs_aa11; assert_in_delta(0, (worksheet.costs_aa11||0), 0.001); end
  def test_costs_ab11; assert_in_delta(0, (worksheet.costs_ab11||0), 0.001); end
  def test_costs_ac11; assert_in_delta(0, (worksheet.costs_ac11||0), 0.001); end
  def test_costs_ad11; assert_in_delta(0, (worksheet.costs_ad11||0), 0.001); end
  def test_costs_ae11; assert_in_delta(0, (worksheet.costs_ae11||0), 0.001); end
  def test_costs_af11; assert_in_delta(0, (worksheet.costs_af11||0), 0.001); end
  def test_costs_ag11; assert_in_delta(0, (worksheet.costs_ag11||0), 0.001); end
  def test_costs_ah11; assert_in_delta(0, (worksheet.costs_ah11||0), 0.001); end
  def test_costs_b12; assert_equal("III.e", worksheet.costs_b12); end
  def test_costs_c12; assert_equal("Tidal [UNUSED]", worksheet.costs_c12); end
  def test_costs_d12; assert_equal("Electricity", worksheet.costs_d12); end
  def test_costs_e12; assert_equal("MEUR", worksheet.costs_e12); end
  def test_costs_f12; assert_in_delta(0, (worksheet.costs_f12||0), 0.001); end
  def test_costs_g12; assert_in_delta(0, (worksheet.costs_g12||0), 0.001); end
  def test_costs_h12; assert_in_delta(0, (worksheet.costs_h12||0), 0.001); end
  def test_costs_i12; assert_in_delta(0, (worksheet.costs_i12||0), 0.001); end
  def test_costs_j12; assert_in_delta(0, (worksheet.costs_j12||0), 0.001); end
  def test_costs_k12; assert_in_delta(0, (worksheet.costs_k12||0), 0.001); end
  def test_costs_l12; assert_in_delta(0, (worksheet.costs_l12||0), 0.001); end
  def test_costs_m12; assert_in_delta(0, (worksheet.costs_m12||0), 0.001); end
  def test_costs_n12; assert_in_delta(0, (worksheet.costs_n12||0), 0.001); end
  def test_costs_p12; assert_in_delta(0, (worksheet.costs_p12||0), 0.001); end
  def test_costs_q12; assert_in_delta(0, (worksheet.costs_q12||0), 0.001); end
  def test_costs_r12; assert_in_delta(0, (worksheet.costs_r12||0), 0.001); end
  def test_costs_s12; assert_in_delta(0, (worksheet.costs_s12||0), 0.001); end
  def test_costs_t12; assert_in_delta(0, (worksheet.costs_t12||0), 0.001); end
  def test_costs_u12; assert_in_delta(0, (worksheet.costs_u12||0), 0.001); end
  def test_costs_v12; assert_in_delta(0, (worksheet.costs_v12||0), 0.001); end
  def test_costs_w12; assert_in_delta(0, (worksheet.costs_w12||0), 0.001); end
  def test_costs_x12; assert_in_delta(0, (worksheet.costs_x12||0), 0.001); end
  def test_costs_z12; assert_in_delta(0, (worksheet.costs_z12||0), 0.001); end
  def test_costs_aa12; assert_in_delta(0, (worksheet.costs_aa12||0), 0.001); end
  def test_costs_ab12; assert_in_delta(0, (worksheet.costs_ab12||0), 0.001); end
  def test_costs_ac12; assert_in_delta(0, (worksheet.costs_ac12||0), 0.001); end
  def test_costs_ad12; assert_in_delta(0, (worksheet.costs_ad12||0), 0.001); end
  def test_costs_ae12; assert_in_delta(0, (worksheet.costs_ae12||0), 0.001); end
  def test_costs_af12; assert_in_delta(0, (worksheet.costs_af12||0), 0.001); end
  def test_costs_ag12; assert_in_delta(0, (worksheet.costs_ag12||0), 0.001); end
  def test_costs_ah12; assert_in_delta(0, (worksheet.costs_ah12||0), 0.001); end
  def test_costs_aj12; assert_in_delta(0, (worksheet.costs_aj12||0), 0.001); end
  def test_costs_ak12; assert_in_delta(0, (worksheet.costs_ak12||0), 0.001); end
  def test_costs_al12; assert_in_delta(0, (worksheet.costs_al12||0), 0.001); end
  def test_costs_am12; assert_in_delta(0, (worksheet.costs_am12||0), 0.001); end
  def test_costs_an12; assert_in_delta(0, (worksheet.costs_an12||0), 0.001); end
  def test_costs_ao12; assert_in_delta(0, (worksheet.costs_ao12||0), 0.001); end
  def test_costs_ap12; assert_in_delta(0, (worksheet.costs_ap12||0), 0.001); end
  def test_costs_aq12; assert_in_delta(0, (worksheet.costs_aq12||0), 0.001); end
  def test_costs_ar12; assert_in_delta(0, (worksheet.costs_ar12||0), 0.001); end
  def test_costs_b13; assert_equal("IV.a", worksheet.costs_b13); end
  def test_costs_c13; assert_equal("Solar PV", worksheet.costs_c13); end
  def test_costs_d13; assert_equal("Electricity", worksheet.costs_d13); end
  def test_costs_e13; assert_equal("MEUR", worksheet.costs_e13); end
  def test_costs_p13; assert_in_epsilon(25.6255, worksheet.costs_p13, 0.001); end
  def test_costs_z13; assert_in_delta(0, (worksheet.costs_z13||0), 0.001); end
  def test_costs_b14; assert_equal("IV.b", worksheet.costs_b14); end
  def test_costs_c14; assert_equal("Solar thermal", worksheet.costs_c14); end
  def test_costs_d14; assert_equal("Buildings", worksheet.costs_d14); end
  def test_costs_e14; assert_equal("MEUR", worksheet.costs_e14); end
  def test_costs_f14; assert_in_delta(0, (worksheet.costs_f14||0), 0.001); end
  def test_costs_p14; assert_in_delta(0, (worksheet.costs_p14||0), 0.001); end
  def test_costs_z14; assert_in_delta(0, (worksheet.costs_z14||0), 0.001); end
  def test_costs_aj14; assert_in_delta(0, (worksheet.costs_aj14||0), 0.001); end
  def test_costs_g14; assert_in_epsilon(48.71714971254538, worksheet.costs_g14, 0.001); end
  def test_costs_q14; assert_in_epsilon(4.871714971254538, worksheet.costs_q14, 0.001); end
  def test_costs_q180; assert_in_epsilon(149.57166395369788, worksheet.costs_q180, 0.001); end
  def test_costs_q181; assert_in_delta(0, (worksheet.costs_q181||0), 0.001); end
  def test_costs_q182; assert_in_epsilon(27.675089425073754, worksheet.costs_q182, 0.001); end
  def test_costs_q187; assert_in_epsilon(50.7579565896993, worksheet.costs_q187, 0.001); end
  def test_costs_q192; assert_in_epsilon(68, worksheet.costs_q192, 0.001); end
  def test_costs_g193; assert_in_epsilon(76.05878041820027, worksheet.costs_g193, 0.001); end
  def test_costs_q193; assert_in_epsilon(68.83996194574678, worksheet.costs_q193, 0.001); end
  def test_costs_aa14; assert_in_epsilon(6.047626157491479, worksheet.costs_aa14, 0.001); end
  def test_costs_ak14; assert_in_epsilon(59.6364908412914, worksheet.costs_ak14, 0.001); end
  def test_costs_h14; assert_in_epsilon(60.62857199188417, worksheet.costs_h14, 0.001); end
  def test_costs_r14; assert_in_epsilon(10.589774430019368, worksheet.costs_r14, 0.001); end
  def test_costs_r180; assert_in_epsilon(154.02405683983304, worksheet.costs_r180, 0.001); end
  def test_costs_r181; assert_in_delta(0, (worksheet.costs_r181||0), 0.001); end
  def test_costs_r182; assert_in_epsilon(27.675089425073754, worksheet.costs_r182, 0.001); end
  def test_costs_r187; assert_in_epsilon(62.12973174811074, worksheet.costs_r187, 0.001); end
  def test_costs_r192; assert_in_epsilon(64, worksheet.costs_r192, 0.001); end
  def test_costs_h193; assert_in_epsilon(93.48750833800997, worksheet.costs_h193, 0.001); end
  def test_costs_r193; assert_in_epsilon(72.24653650201029, worksheet.costs_r193, 0.001); end
  def test_costs_ab14; assert_in_epsilon(14.847232262579833, worksheet.costs_ab14, 0.001); end
  def test_costs_al14; assert_in_epsilon(86.06557868448337, worksheet.costs_al14, 0.001); end
  def test_costs_i14; assert_in_epsilon(62.66862121691313, worksheet.costs_i14, 0.001); end
  def test_costs_s14; assert_in_epsilon(16.050054476341934, worksheet.costs_s14, 0.001); end
  def test_costs_s180; assert_in_epsilon(158.25172087520932, worksheet.costs_s180, 0.001); end
  def test_costs_s181; assert_in_epsilon(103.86285936686433, worksheet.costs_s181, 0.001); end
  def test_costs_s182; assert_in_epsilon(32.604249819306794, worksheet.costs_s182, 0.001); end
  def test_costs_s187; assert_in_epsilon(59.70901930964397, worksheet.costs_s187, 0.001); end
  def test_costs_s192; assert_in_epsilon(68.5, worksheet.costs_s192, 0.001); end
  def test_costs_i193; assert_in_epsilon(121.85831631842495, worksheet.costs_i193, 0.001); end
  def test_costs_s193; assert_in_epsilon(66.74036506989118, worksheet.costs_s193, 0.001); end
  def test_costs_ac14; assert_in_epsilon(22.50157754261494, worksheet.costs_ac14, 0.001); end
  def test_costs_am14; assert_in_epsilon(101.22025323587, worksheet.costs_am14, 0.001); end
  def test_costs_j14; assert_in_epsilon(37.46278062047643, worksheet.costs_j14, 0.001); end
  def test_costs_t14; assert_in_epsilon(18.47307467122157, worksheet.costs_t14, 0.001); end
  def test_costs_t180; assert_in_epsilon(162.27302803356324, worksheet.costs_t180, 0.001); end
  def test_costs_t181; assert_in_epsilon(109.82972715212972, worksheet.costs_t181, 0.001); end
  def test_costs_t182; assert_in_epsilon(36.273480404802406, worksheet.costs_t182, 0.001); end
  def test_costs_t187; assert_in_epsilon(58.747369132779696, worksheet.costs_t187, 0.001); end
  def test_costs_t192; assert_in_epsilon(73, worksheet.costs_t192, 0.001); end
  def test_costs_j193; assert_in_epsilon(163.9117396742835, worksheet.costs_j193, 0.001); end
  def test_costs_t193; assert_in_epsilon(63.770204825946685, worksheet.costs_t193, 0.001); end
  def test_costs_ad14; assert_in_epsilon(26.969512585899313, worksheet.costs_ad14, 0.001); end
  def test_costs_an14; assert_in_epsilon(82.90536787759731, worksheet.costs_an14, 0.001); end
  def test_costs_k14; assert_in_epsilon(28.196516877537086, worksheet.costs_k14, 0.001); end
  def test_costs_u14; assert_in_epsilon(16.14032735839034, worksheet.costs_u14, 0.001); end
  def test_costs_u180; assert_in_epsilon(162.38678413226043, worksheet.costs_u180, 0.001); end
  def test_costs_u181; assert_in_epsilon(112.74504559385862, worksheet.costs_u181, 0.001); end
  def test_costs_u182; assert_in_epsilon(41.848630716118386, worksheet.costs_u182, 0.001); end
  def test_costs_u187; assert_in_epsilon(58.24517753545401, worksheet.costs_u187, 0.001); end
  def test_costs_u192; assert_in_epsilon(72.5, worksheet.costs_u192, 0.001); end
  def test_costs_k193; assert_in_epsilon(195.23011840881387, worksheet.costs_k193, 0.001); end
  def test_costs_u193; assert_in_epsilon(66.58476312102403, worksheet.costs_u193, 0.001); end
  def test_costs_ae14; assert_in_epsilon(27.032867312891018, worksheet.costs_ae14, 0.001); end
  def test_costs_ao14; assert_in_epsilon(71.36971154881844, worksheet.costs_ao14, 0.001); end
  def test_costs_l14; assert_in_epsilon(66.68339842539035, worksheet.costs_l14, 0.001); end
  def test_costs_v14; assert_in_epsilon(13.85177507526762, worksheet.costs_v14, 0.001); end
  def test_costs_v180; assert_in_epsilon(162.56784085071945, worksheet.costs_v180, 0.001); end
  def test_costs_v181; assert_in_epsilon(115.72725791870515, worksheet.costs_v181, 0.001); end
  def test_costs_v182; assert_in_epsilon(44.03792982341747, worksheet.costs_v182, 0.001); end
  def test_costs_v187; assert_in_epsilon(57.289987066845285, worksheet.costs_v187, 0.001); end
  def test_costs_v192; assert_in_epsilon(72, worksheet.costs_v192, 0.001); end
  def test_costs_l193; assert_in_epsilon(237.03087575413852, worksheet.costs_l193, 0.001); end
  def test_costs_v193; assert_in_epsilon(66.29048854024684, worksheet.costs_v193, 0.001); end
  def test_costs_af14; assert_in_epsilon(25.627368119869764, worksheet.costs_af14, 0.001); end
  def test_costs_ap14; assert_in_epsilon(106.16254162052775, worksheet.costs_ap14, 0.001); end
  def test_costs_m14; assert_in_epsilon(99.77059122933815, worksheet.costs_m14, 0.001); end
  def test_costs_w14; assert_in_epsilon(11.554506209587895, worksheet.costs_w14, 0.001); end
  def test_costs_w180; assert_in_epsilon(162.81289978892443, worksheet.costs_w180, 0.001); end
  def test_costs_w181; assert_in_epsilon(118.77613990136288, worksheet.costs_w181, 0.001); end
  def test_costs_w182; assert_in_epsilon(60.275902093836805, worksheet.costs_w182, 0.001); end
  def test_costs_w187; assert_in_epsilon(56.02551109947952, worksheet.costs_w187, 0.001); end
  def test_costs_w192; assert_in_epsilon(71.5, worksheet.costs_w192, 0.001); end
  def test_costs_m193; assert_in_epsilon(250.39335922735881, worksheet.costs_m193, 0.001); end
  def test_costs_w193; assert_in_epsilon(70.5766410556303, worksheet.costs_w193, 0.001); end
  def test_costs_ag14; assert_in_epsilon(25.559047601506006, worksheet.costs_ag14, 0.001); end
  def test_costs_aq14; assert_in_epsilon(136.88414504043206, worksheet.costs_aq14, 0.001); end
  def test_costs_n14; assert_in_epsilon(110.7935080346766, worksheet.costs_n14, 0.001); end
  def test_costs_x14; assert_in_epsilon(9.378923326578112, worksheet.costs_x14, 0.001); end
  def test_costs_ah14; assert_in_epsilon(22.99251369652126, worksheet.costs_ah14, 0.001); end
  def test_costs_ar14; assert_in_epsilon(143.16494505777598, worksheet.costs_ar14, 0.001); end
  def test_costs_b15; assert_equal("IV.c", worksheet.costs_b15); end
  def test_costs_c15; assert_equal("Small-scale wind  [UNUSED]", worksheet.costs_c15); end
  def test_costs_d15; assert_equal("Electricity", worksheet.costs_d15); end
  def test_costs_e15; assert_equal("MEUR", worksheet.costs_e15); end
  def test_costs_z15; assert_in_delta(0, (worksheet.costs_z15||0), 0.001); end
  def test_costs_aa15; assert_in_delta(0, (worksheet.costs_aa15||0), 0.001); end
  def test_costs_ab15; assert_in_delta(0, (worksheet.costs_ab15||0), 0.001); end
  def test_costs_ac15; assert_in_delta(0, (worksheet.costs_ac15||0), 0.001); end
  def test_costs_ad15; assert_in_delta(0, (worksheet.costs_ad15||0), 0.001); end
  def test_costs_ae15; assert_in_delta(0, (worksheet.costs_ae15||0), 0.001); end
  def test_costs_af15; assert_in_delta(0, (worksheet.costs_af15||0), 0.001); end
  def test_costs_ag15; assert_in_delta(0, (worksheet.costs_ag15||0), 0.001); end
  def test_costs_ah15; assert_in_delta(0, (worksheet.costs_ah15||0), 0.001); end
  def test_control_ab10; assert_in_epsilon(10, worksheet.control_ab10, 0.001); end
  def test_costs_f15; assert_in_delta(0, (worksheet.costs_f15||0), 0.001); end
  def test_costs_p15; assert_in_delta(0, (worksheet.costs_p15||0), 0.001); end
  def test_costs_aj15; assert_in_delta(0, (worksheet.costs_aj15||0), 0.001); end
  def test_costs_g15; assert_in_delta(0, (worksheet.costs_g15||0), 0.001); end
  def test_costs_q15; assert_in_delta(0, (worksheet.costs_q15||0), 0.001); end
  def test_costs_ak15; assert_in_delta(0, (worksheet.costs_ak15||0), 0.001); end
  def test_costs_h15; assert_in_delta(0, (worksheet.costs_h15||0), 0.001); end
  def test_costs_r15; assert_in_delta(0, (worksheet.costs_r15||0), 0.001); end
  def test_costs_al15; assert_in_delta(0, (worksheet.costs_al15||0), 0.001); end
  def test_costs_i15; assert_in_delta(0, (worksheet.costs_i15||0), 0.001); end
  def test_costs_s15; assert_in_delta(0, (worksheet.costs_s15||0), 0.001); end
  def test_costs_am15; assert_in_delta(0, (worksheet.costs_am15||0), 0.001); end
  def test_costs_j15; assert_in_delta(0, (worksheet.costs_j15||0), 0.001); end
  def test_costs_t15; assert_in_delta(0, (worksheet.costs_t15||0), 0.001); end
  def test_costs_an15; assert_in_delta(0, (worksheet.costs_an15||0), 0.001); end
  def test_costs_k15; assert_in_delta(0, (worksheet.costs_k15||0), 0.001); end
  def test_costs_u15; assert_in_delta(0, (worksheet.costs_u15||0), 0.001); end
  def test_costs_ao15; assert_in_delta(0, (worksheet.costs_ao15||0), 0.001); end
  def test_costs_l15; assert_in_delta(0, (worksheet.costs_l15||0), 0.001); end
  def test_costs_v15; assert_in_delta(0, (worksheet.costs_v15||0), 0.001); end
  def test_costs_ap15; assert_in_delta(0, (worksheet.costs_ap15||0), 0.001); end
  def test_costs_m15; assert_in_delta(0, (worksheet.costs_m15||0), 0.001); end
  def test_costs_w15; assert_in_delta(0, (worksheet.costs_w15||0), 0.001); end
  def test_costs_aq15; assert_in_delta(0, (worksheet.costs_aq15||0), 0.001); end
  def test_costs_n15; assert_in_delta(0, (worksheet.costs_n15||0), 0.001); end
  def test_costs_x15; assert_in_delta(0, (worksheet.costs_x15||0), 0.001); end
  def test_costs_ar15; assert_in_delta(0, (worksheet.costs_ar15||0), 0.001); end
  def test_costs_b16; assert_equal("V.a", worksheet.costs_b16); end
  def test_costs_c16; assert_equal("Types of fuel from Biomass", worksheet.costs_c16); end
  def test_costs_d16; assert_equal("Bioenergy", worksheet.costs_d16); end
  def test_costs_e16; assert_equal("MEUR", worksheet.costs_e16); end
  def test_costs_z16; assert_in_delta(0, (worksheet.costs_z16||0), 0.001); end
  def test_costs_aa16; assert_in_delta(0, (worksheet.costs_aa16||0), 0.001); end
  def test_costs_ab16; assert_in_delta(0, (worksheet.costs_ab16||0), 0.001); end
  def test_costs_ac16; assert_in_delta(0, (worksheet.costs_ac16||0), 0.001); end
  def test_costs_ad16; assert_in_delta(0, (worksheet.costs_ad16||0), 0.001); end
  def test_costs_ae16; assert_in_delta(0, (worksheet.costs_ae16||0), 0.001); end
  def test_costs_af16; assert_in_delta(0, (worksheet.costs_af16||0), 0.001); end
  def test_costs_ag16; assert_in_delta(0, (worksheet.costs_ag16||0), 0.001); end
  def test_costs_ah16; assert_in_delta(0, (worksheet.costs_ah16||0), 0.001); end
  def test_costs_f16; assert_in_epsilon(11.358052239704154, worksheet.costs_f16, 0.001); end
  def test_costs_p16; assert_in_epsilon(13.438303834062845, worksheet.costs_p16, 0.001); end
  def test_costs_aj16; assert_in_epsilon(24.796356073767, worksheet.costs_aj16, 0.001); end
  def test_costs_g16; assert_in_epsilon(12.938476124192388, worksheet.costs_g16, 0.001); end
  def test_costs_q16; assert_in_epsilon(17.645173666092415, worksheet.costs_q16, 0.001); end
  def test_costs_ak16; assert_in_epsilon(30.583649790284802, worksheet.costs_ak16, 0.001); end
  def test_costs_h16; assert_in_epsilon(10.845859532290598, worksheet.costs_h16, 0.001); end
  def test_costs_r16; assert_in_epsilon(21.831715601093205, worksheet.costs_r16, 0.001); end
  def test_costs_al16; assert_in_epsilon(32.677575133383804, worksheet.costs_al16, 0.001); end
  def test_costs_i16; assert_in_epsilon(7.80506142165021, worksheet.costs_i16, 0.001); end
  def test_costs_s16; assert_in_epsilon(25.138049482196845, worksheet.costs_s16, 0.001); end
  def test_costs_am16; assert_in_epsilon(32.94311090384706, worksheet.costs_am16, 0.001); end
  def test_costs_j16; assert_in_epsilon(8.089415626966707, worksheet.costs_j16, 0.001); end
  def test_costs_t16; assert_in_epsilon(26.573893920843936, worksheet.costs_t16, 0.001); end
  def test_costs_an16; assert_in_epsilon(34.66330954781064, worksheet.costs_an16, 0.001); end
  def test_costs_k16; assert_in_epsilon(8.053290534814423, worksheet.costs_k16, 0.001); end
  def test_costs_u16; assert_in_epsilon(27.98532935342072, worksheet.costs_u16, 0.001); end
  def test_costs_ao16; assert_in_epsilon(36.03861988823515, worksheet.costs_ao16, 0.001); end
  def test_costs_l16; assert_in_epsilon(8.292381585124888, worksheet.costs_l16, 0.001); end
  def test_costs_v16; assert_in_epsilon(29.241645247302404, worksheet.costs_v16, 0.001); end
  def test_costs_ap16; assert_in_epsilon(37.534026832427294, worksheet.costs_ap16, 0.001); end
  def test_costs_m16; assert_in_epsilon(8.535452006862148, worksheet.costs_m16, 0.001); end
  def test_costs_w16; assert_in_epsilon(30.458508141287936, worksheet.costs_w16, 0.001); end
  def test_costs_aq16; assert_in_epsilon(38.99396014815008, worksheet.costs_aq16, 0.001); end
  def test_costs_n16; assert_in_epsilon(7.40364707334709, worksheet.costs_n16, 0.001); end
  def test_costs_x16; assert_in_epsilon(31.673822005302483, worksheet.costs_x16, 0.001); end
  def test_costs_ar16; assert_in_epsilon(39.07746907864957, worksheet.costs_ar16, 0.001); end
  def test_costs_b17; assert_equal("V.b", worksheet.costs_b17); end
  def test_costs_c17; assert_equal("Bioenergy imports", worksheet.costs_c17); end
  def test_costs_d17; assert_equal("Bioenergy", worksheet.costs_d17); end
  def test_costs_e17; assert_equal("MEUR", worksheet.costs_e17); end
  def test_costs_f17; assert_in_delta(0, (worksheet.costs_f17||0), 0.001); end
  def test_costs_g17; assert_in_delta(0, (worksheet.costs_g17||0), 0.001); end
  def test_costs_h17; assert_in_delta(0, (worksheet.costs_h17||0), 0.001); end
  def test_costs_i17; assert_in_delta(0, (worksheet.costs_i17||0), 0.001); end
  def test_costs_j17; assert_in_delta(0, (worksheet.costs_j17||0), 0.001); end
  def test_costs_k17; assert_in_delta(0, (worksheet.costs_k17||0), 0.001); end
  def test_costs_l17; assert_in_delta(0, (worksheet.costs_l17||0), 0.001); end
  def test_costs_m17; assert_in_delta(0, (worksheet.costs_m17||0), 0.001); end
  def test_costs_n17; assert_in_delta(0, (worksheet.costs_n17||0), 0.001); end
  def test_costs_p17; assert_in_delta(0, (worksheet.costs_p17||0), 0.001); end
  def test_costs_q17; assert_in_delta(0, (worksheet.costs_q17||0), 0.001); end
  def test_costs_r17; assert_in_delta(0, (worksheet.costs_r17||0), 0.001); end
  def test_costs_s17; assert_in_delta(0, (worksheet.costs_s17||0), 0.001); end
  def test_costs_t17; assert_in_delta(0, (worksheet.costs_t17||0), 0.001); end
  def test_costs_u17; assert_in_delta(0, (worksheet.costs_u17||0), 0.001); end
  def test_costs_v17; assert_in_delta(0, (worksheet.costs_v17||0), 0.001); end
  def test_costs_w17; assert_in_delta(0, (worksheet.costs_w17||0), 0.001); end
  def test_costs_x17; assert_in_delta(0, (worksheet.costs_x17||0), 0.001); end
  def test_costs_z17; assert_in_epsilon(480.3872798621682, worksheet.costs_z17, 0.001); end
  def test_costs_aj17; assert_in_epsilon(480.3872798621682, worksheet.costs_aj17, 0.001); end
  def test_costs_aa17; assert_in_epsilon(621.2460584881229, worksheet.costs_aa17, 0.001); end
  def test_costs_ak17; assert_in_epsilon(621.2460584881229, worksheet.costs_ak17, 0.001); end
  def test_costs_ab17; assert_in_epsilon(848.0792849340024, worksheet.costs_ab17, 0.001); end
  def test_costs_al17; assert_in_epsilon(848.0792849340024, worksheet.costs_al17, 0.001); end
  def test_costs_ac17; assert_in_epsilon(1137.7252386995085, worksheet.costs_ac17, 0.001); end
  def test_costs_am17; assert_in_epsilon(1137.7252386995085, worksheet.costs_am17, 0.001); end
  def test_costs_ad17; assert_in_epsilon(1361.4904488613884, worksheet.costs_ad17, 0.001); end
  def test_costs_an17; assert_in_epsilon(1361.4904488613884, worksheet.costs_an17, 0.001); end
  def test_costs_ae17; assert_in_epsilon(1508.6669654925056, worksheet.costs_ae17, 0.001); end
  def test_costs_ao17; assert_in_epsilon(1508.6669654925056, worksheet.costs_ao17, 0.001); end
  def test_costs_af17; assert_in_epsilon(1651.761622731282, worksheet.costs_af17, 0.001); end
  def test_costs_ap17; assert_in_epsilon(1651.761622731282, worksheet.costs_ap17, 0.001); end
  def test_costs_ag17; assert_in_epsilon(1794.8745070111222, worksheet.costs_ag17, 0.001); end
  def test_costs_aq17; assert_in_epsilon(1794.8745070111222, worksheet.costs_aq17, 0.001); end
  def test_costs_ah17; assert_in_epsilon(1939.3019140787628, worksheet.costs_ah17, 0.001); end
  def test_costs_ar17; assert_in_epsilon(1939.3019140787628, worksheet.costs_ar17, 0.001); end
  def test_costs_b18; assert_equal("VI.a", worksheet.costs_b18); end
  def test_costs_c18; assert_equal("Agriculture and land use", worksheet.costs_c18); end
  def test_costs_d18; assert_equal("Bioenergy", worksheet.costs_d18); end
  def test_costs_e18; assert_equal("MEUR", worksheet.costs_e18); end
  def test_costs_f18; assert_in_delta(0, (worksheet.costs_f18||0), 0.001); end
  def test_costs_g18; assert_in_delta(0, (worksheet.costs_g18||0), 0.001); end
  def test_costs_h18; assert_in_delta(0, (worksheet.costs_h18||0), 0.001); end
  def test_costs_i18; assert_in_delta(0, (worksheet.costs_i18||0), 0.001); end
  def test_costs_j18; assert_in_delta(0, (worksheet.costs_j18||0), 0.001); end
  def test_costs_k18; assert_in_delta(0, (worksheet.costs_k18||0), 0.001); end
  def test_costs_l18; assert_in_delta(0, (worksheet.costs_l18||0), 0.001); end
  def test_costs_m18; assert_in_delta(0, (worksheet.costs_m18||0), 0.001); end
  def test_costs_n18; assert_in_delta(0, (worksheet.costs_n18||0), 0.001); end
  def test_costs_p18; assert_in_delta(0, (worksheet.costs_p18||0), 0.001); end
  def test_costs_z18; assert_in_epsilon(22.355845426666665, worksheet.costs_z18, 0.001); end
  def test_costs_aj18; assert_in_epsilon(22.355845426666665, worksheet.costs_aj18, 0.001); end
  def test_costs_q18; assert_in_delta(0, (worksheet.costs_q18||0), 0.001); end
  def test_costs_aa18; assert_in_epsilon(147.36321622045958, worksheet.costs_aa18, 0.001); end
  def test_costs_ak18; assert_in_epsilon(147.36321622045958, worksheet.costs_ak18, 0.001); end
  def test_costs_r18; assert_in_delta(0, (worksheet.costs_r18||0), 0.001); end
  def test_costs_ab18; assert_in_epsilon(268.4718652270543, worksheet.costs_ab18, 0.001); end
  def test_costs_al18; assert_in_epsilon(268.4718652270543, worksheet.costs_al18, 0.001); end
  def test_costs_s18; assert_in_delta(0, (worksheet.costs_s18||0), 0.001); end
  def test_costs_ac18; assert_in_epsilon(281.16114315988773, worksheet.costs_ac18, 0.001); end
  def test_costs_am18; assert_in_epsilon(281.16114315988773, worksheet.costs_am18, 0.001); end
  def test_costs_t18; assert_in_delta(0, (worksheet.costs_t18||0), 0.001); end
  def test_costs_ad18; assert_in_epsilon(292.0238003994641, worksheet.costs_ad18, 0.001); end
  def test_costs_an18; assert_in_epsilon(292.0238003994641, worksheet.costs_an18, 0.001); end
  def test_costs_u18; assert_in_delta(0, (worksheet.costs_u18||0), 0.001); end
  def test_costs_ae18; assert_in_epsilon(301.2253162662309, worksheet.costs_ae18, 0.001); end
  def test_costs_ao18; assert_in_epsilon(301.2253162662309, worksheet.costs_ao18, 0.001); end
  def test_costs_v18; assert_in_delta(0, (worksheet.costs_v18||0), 0.001); end
  def test_costs_af18; assert_in_epsilon(308.91799319956294, worksheet.costs_af18, 0.001); end
  def test_costs_ap18; assert_in_epsilon(308.91799319956294, worksheet.costs_ap18, 0.001); end
  def test_costs_w18; assert_in_delta(0, (worksheet.costs_w18||0), 0.001); end
  def test_costs_ag18; assert_in_epsilon(315.2419361157054, worksheet.costs_ag18, 0.001); end
  def test_costs_aq18; assert_in_epsilon(315.2419361157054, worksheet.costs_aq18, 0.001); end
  def test_costs_x18; assert_in_delta(0, (worksheet.costs_x18||0), 0.001); end
  def test_costs_ah18; assert_in_epsilon(265.32596203949174, worksheet.costs_ah18, 0.001); end
  def test_costs_ar18; assert_in_epsilon(265.32596203949174, worksheet.costs_ar18, 0.001); end
  def test_costs_b19; assert_equal("VI.b", worksheet.costs_b19); end
  def test_costs_c19; assert_equal("Volume of Waste & Recycling", worksheet.costs_c19); end
  def test_costs_d19; assert_equal("Bioenergy", worksheet.costs_d19); end
  def test_costs_e19; assert_equal("MEUR", worksheet.costs_e19); end
  def test_costs_z19; assert_in_delta(0, (worksheet.costs_z19||0), 0.001); end
  def test_costs_aa19; assert_in_delta(0, (worksheet.costs_aa19||0), 0.001); end
  def test_costs_ab19; assert_in_delta(0, (worksheet.costs_ab19||0), 0.001); end
  def test_costs_ac19; assert_in_delta(0, (worksheet.costs_ac19||0), 0.001); end
  def test_costs_ad19; assert_in_delta(0, (worksheet.costs_ad19||0), 0.001); end
  def test_costs_ae19; assert_in_delta(0, (worksheet.costs_ae19||0), 0.001); end
  def test_costs_af19; assert_in_delta(0, (worksheet.costs_af19||0), 0.001); end
  def test_costs_ag19; assert_in_delta(0, (worksheet.costs_ag19||0), 0.001); end
  def test_costs_ah19; assert_in_delta(0, (worksheet.costs_ah19||0), 0.001); end
  def test_control_ab27; assert_in_epsilon(3, worksheet.control_ab27, 0.001); end
  def test_costs_f19; assert_in_delta(0.4633257172420699, worksheet.costs_f19, 0.001); end
  def test_costs_p19; assert_in_epsilon(1.035089368306752, worksheet.costs_p19, 0.001); end
  def test_costs_aj19; assert_in_epsilon(1.4984150855488219, worksheet.costs_aj19, 0.001); end
  def test_costs_g19; assert_in_delta(0, (worksheet.costs_g19||0), 0.001); end
  def test_costs_q19; assert_in_delta(0.6392561618520184, worksheet.costs_q19, 0.001); end
  def test_costs_ak19; assert_in_delta(0.6392561618520184, worksheet.costs_ak19, 0.001); end
  def test_costs_h19; assert_in_delta(0.06620042389902178, worksheet.costs_h19, 0.001); end
  def test_costs_r19; assert_in_delta(0.3943279774454938, worksheet.costs_r19, 0.001); end
  def test_costs_al19; assert_in_delta(0.46052840134451556, worksheet.costs_al19, 0.001); end
  def test_costs_i19; assert_in_delta(0.3025661732903045, worksheet.costs_i19, 0.001); end
  def test_costs_s19; assert_in_delta(0.27461342343885997, worksheet.costs_s19, 0.001); end
  def test_costs_am19; assert_in_delta(0.5771795967291644, worksheet.costs_am19, 0.001); end
  def test_costs_j19; assert_in_delta(0, (worksheet.costs_j19||0), 0.001); end
  def test_costs_t19; assert_in_delta(0.1686719671058577, worksheet.costs_t19, 0.001); end
  def test_costs_an19; assert_in_delta(0.1686719671058577, worksheet.costs_an19, 0.001); end
  def test_costs_k19; assert_in_delta(0, (worksheet.costs_k19||0), 0.001); end
  def test_costs_u19; assert_in_delta(0.08823989659547062, worksheet.costs_u19, 0.001); end
  def test_costs_ao19; assert_in_delta(0.08823989659547062, worksheet.costs_ao19, 0.001); end
  def test_costs_l19; assert_in_delta(0.04474025599033816, worksheet.costs_l19, 0.001); end
  def test_costs_v19; assert_in_delta(0.033317211907698624, worksheet.costs_v19, 0.001); end
  def test_costs_ap19; assert_in_delta(0.07805746789803678, worksheet.costs_ap19, 0.001); end
  def test_costs_m19; assert_in_delta(0, (worksheet.costs_m19||0), 0.001); end
  def test_costs_w19; assert_in_delta(0.00880170994634877, worksheet.costs_w19, 0.001); end
  def test_costs_aq19; assert_in_delta(0.00880170994634877, worksheet.costs_aq19, 0.001); end
  def test_costs_n19; assert_in_delta(0, (worksheet.costs_n19||0), 0.001); end
  def test_costs_x19; assert_in_delta(0, (worksheet.costs_x19||0), 0.001); end
  def test_costs_ar19; assert_in_delta(0, (worksheet.costs_ar19||0), 0.001); end
  def test_costs_b20; assert_equal("VI.c", worksheet.costs_b20); end
  def test_costs_c20; assert_equal("Marine algae  [UNUSED]", worksheet.costs_c20); end
  def test_costs_d20; assert_equal("Bioenergy", worksheet.costs_d20); end
  def test_costs_e20; assert_equal("MEUR", worksheet.costs_e20); end
  def test_costs_f20; assert_in_delta(0, (worksheet.costs_f20||0), 0.001); end
  def test_costs_g20; assert_in_delta(0, (worksheet.costs_g20||0), 0.001); end
  def test_costs_h20; assert_in_delta(0, (worksheet.costs_h20||0), 0.001); end
  def test_costs_i20; assert_in_delta(0, (worksheet.costs_i20||0), 0.001); end
  def test_costs_j20; assert_in_delta(0, (worksheet.costs_j20||0), 0.001); end
  def test_costs_k20; assert_in_delta(0, (worksheet.costs_k20||0), 0.001); end
  def test_costs_l20; assert_in_delta(0, (worksheet.costs_l20||0), 0.001); end
  def test_costs_m20; assert_in_delta(0, (worksheet.costs_m20||0), 0.001); end
  def test_costs_n20; assert_in_delta(0, (worksheet.costs_n20||0), 0.001); end
  def test_costs_p20; assert_in_delta(0, (worksheet.costs_p20||0), 0.001); end
  def test_costs_q20; assert_in_delta(0, (worksheet.costs_q20||0), 0.001); end
  def test_costs_r20; assert_in_delta(0, (worksheet.costs_r20||0), 0.001); end
  def test_costs_s20; assert_in_delta(0, (worksheet.costs_s20||0), 0.001); end
  def test_costs_t20; assert_in_delta(0, (worksheet.costs_t20||0), 0.001); end
  def test_costs_u20; assert_in_delta(0, (worksheet.costs_u20||0), 0.001); end
  def test_costs_v20; assert_in_delta(0, (worksheet.costs_v20||0), 0.001); end
  def test_costs_w20; assert_in_delta(0, (worksheet.costs_w20||0), 0.001); end
  def test_costs_x20; assert_in_delta(0, (worksheet.costs_x20||0), 0.001); end
  def test_costs_z20; assert_in_delta(0, (worksheet.costs_z20||0), 0.001); end
  def test_costs_aj20; assert_in_delta(0, (worksheet.costs_aj20||0), 0.001); end
  def test_costs_aa20; assert_in_delta(0, (worksheet.costs_aa20||0), 0.001); end
  def test_costs_ak20; assert_in_delta(0, (worksheet.costs_ak20||0), 0.001); end
  def test_costs_ab20; assert_in_delta(0, (worksheet.costs_ab20||0), 0.001); end
  def test_costs_al20; assert_in_delta(0, (worksheet.costs_al20||0), 0.001); end
  def test_costs_ac20; assert_in_delta(0, (worksheet.costs_ac20||0), 0.001); end
  def test_costs_am20; assert_in_delta(0, (worksheet.costs_am20||0), 0.001); end
  def test_costs_ad20; assert_in_delta(0, (worksheet.costs_ad20||0), 0.001); end
  def test_costs_an20; assert_in_delta(0, (worksheet.costs_an20||0), 0.001); end
  def test_costs_ae20; assert_in_delta(0, (worksheet.costs_ae20||0), 0.001); end
  def test_costs_ao20; assert_in_delta(0, (worksheet.costs_ao20||0), 0.001); end
  def test_costs_af20; assert_in_delta(0, (worksheet.costs_af20||0), 0.001); end
  def test_costs_ap20; assert_in_delta(0, (worksheet.costs_ap20||0), 0.001); end
  def test_costs_ag20; assert_in_delta(0, (worksheet.costs_ag20||0), 0.001); end
  def test_costs_aq20; assert_in_delta(0, (worksheet.costs_aq20||0), 0.001); end
  def test_costs_ah20; assert_in_delta(0, (worksheet.costs_ah20||0), 0.001); end
  def test_costs_ar20; assert_in_delta(0, (worksheet.costs_ar20||0), 0.001); end
  def test_costs_b21; assert_equal("VII.a.Imports", worksheet.costs_b21); end
  def test_costs_c21; assert_equal("Electricity imports", worksheet.costs_c21); end
  def test_costs_d21; assert_equal("Electricity (ex/im)ports", worksheet.costs_d21); end
  def test_costs_e21; assert_equal("MEUR", worksheet.costs_e21); end
  def test_costs_f21; assert_in_delta(0, (worksheet.costs_f21||0), 0.001); end
  def test_costs_g21; assert_in_delta(0, (worksheet.costs_g21||0), 0.001); end
  def test_costs_h21; assert_in_delta(0, (worksheet.costs_h21||0), 0.001); end
  def test_costs_i21; assert_in_delta(0, (worksheet.costs_i21||0), 0.001); end
  def test_costs_j21; assert_in_delta(0, (worksheet.costs_j21||0), 0.001); end
  def test_costs_k21; assert_in_delta(0, (worksheet.costs_k21||0), 0.001); end
  def test_costs_l21; assert_in_delta(0, (worksheet.costs_l21||0), 0.001); end
  def test_costs_m21; assert_in_delta(0, (worksheet.costs_m21||0), 0.001); end
  def test_costs_n21; assert_in_delta(0, (worksheet.costs_n21||0), 0.001); end
  def test_costs_p21; assert_in_delta(0, (worksheet.costs_p21||0), 0.001); end
  def test_costs_q21; assert_in_delta(0, (worksheet.costs_q21||0), 0.001); end
  def test_costs_r21; assert_in_delta(0, (worksheet.costs_r21||0), 0.001); end
  def test_costs_s21; assert_in_delta(0, (worksheet.costs_s21||0), 0.001); end
  def test_costs_t21; assert_in_delta(0, (worksheet.costs_t21||0), 0.001); end
  def test_costs_u21; assert_in_delta(0, (worksheet.costs_u21||0), 0.001); end
  def test_costs_v21; assert_in_delta(0, (worksheet.costs_v21||0), 0.001); end
  def test_costs_w21; assert_in_delta(0, (worksheet.costs_w21||0), 0.001); end
  def test_costs_x21; assert_in_delta(0, (worksheet.costs_x21||0), 0.001); end
  def test_costs_b22; assert_equal("VII.a.Exports", worksheet.costs_b22); end
  def test_costs_c22; assert_equal("Electricity exports", worksheet.costs_c22); end
  def test_costs_d22; assert_equal("Electricity (ex/im)ports", worksheet.costs_d22); end
  def test_costs_e22; assert_equal("MEUR", worksheet.costs_e22); end
  def test_costs_f22; assert_in_delta(0, (worksheet.costs_f22||0), 0.001); end
  def test_costs_b23; assert_equal("VII.b", worksheet.costs_b23); end
  def test_costs_c23; assert_equal("Electricity grid distribution", worksheet.costs_c23); end
  def test_costs_d23; assert_equal("Electricity", worksheet.costs_d23); end
  def test_costs_e23; assert_equal("MEUR", worksheet.costs_e23); end
  def test_costs_z23; assert_in_delta(0, (worksheet.costs_z23||0), 0.001); end
  def test_costs_aa23; assert_in_delta(0, (worksheet.costs_aa23||0), 0.001); end
  def test_costs_ab23; assert_in_delta(0, (worksheet.costs_ab23||0), 0.001); end
  def test_costs_ac23; assert_in_delta(0, (worksheet.costs_ac23||0), 0.001); end
  def test_costs_ad23; assert_in_delta(0, (worksheet.costs_ad23||0), 0.001); end
  def test_costs_ae23; assert_in_delta(0, (worksheet.costs_ae23||0), 0.001); end
  def test_costs_af23; assert_in_delta(0, (worksheet.costs_af23||0), 0.001); end
  def test_costs_ag23; assert_in_delta(0, (worksheet.costs_ag23||0), 0.001); end
  def test_costs_ah23; assert_in_delta(0, (worksheet.costs_ah23||0), 0.001); end
  def test_costs_b24; assert_equal("VII.c", worksheet.costs_b24); end
  def test_costs_c24; assert_equal("EU transmission integration", worksheet.costs_c24); end
  def test_costs_d24; assert_equal("Electricity", worksheet.costs_d24); end
  def test_costs_e24; assert_equal("MEUR", worksheet.costs_e24); end
  def test_costs_f24; assert_in_delta(0, (worksheet.costs_f24||0), 0.001); end
  def test_costs_b25; assert_equal("VIII.a", worksheet.costs_b25); end
  def test_costs_c25; assert_equal("H2 Production for Transport", worksheet.costs_c25); end
  def test_costs_d25; assert_equal("Transport", worksheet.costs_d25); end
  def test_costs_e25; assert_equal("MEUR", worksheet.costs_e25); end
  def test_costs_f25; assert_in_delta(0, (worksheet.costs_f25||0), 0.001); end
  def test_costs_p25; assert_in_delta(0, (worksheet.costs_p25||0), 0.001); end
  def test_costs_z25; assert_in_delta(0, (worksheet.costs_z25||0), 0.001); end
  def test_costs_aj25; assert_in_delta(0, (worksheet.costs_aj25||0), 0.001); end
  def test_costs_g25; assert_in_delta(0, (worksheet.costs_g25||0), 0.001); end
  def test_costs_q25; assert_in_delta(0, (worksheet.costs_q25||0), 0.001); end
  def test_costs_aa25; assert_in_delta(0, (worksheet.costs_aa25||0), 0.001); end
  def test_costs_ak25; assert_in_delta(0, (worksheet.costs_ak25||0), 0.001); end
  def test_costs_h25; assert_in_epsilon(47.879241522216574, worksheet.costs_h25, 0.001); end
  def test_costs_r25; assert_in_epsilon(6.414586169547104, worksheet.costs_r25, 0.001); end
  def test_costs_ab25; assert_in_epsilon(14.250818694618646, worksheet.costs_ab25, 0.001); end
  def test_costs_al25; assert_in_epsilon(68.54464638638233, worksheet.costs_al25, 0.001); end
  def test_costs_i25; assert_in_epsilon(56.561946324082484, worksheet.costs_i25, 0.001); end
  def test_costs_s25; assert_in_epsilon(12.33244443649521, worksheet.costs_s25, 0.001); end
  def test_costs_ac25; assert_in_epsilon(29.72542586035292, worksheet.costs_ac25, 0.001); end
  def test_costs_am25; assert_in_epsilon(98.6198166209306, worksheet.costs_am25, 0.001); end
  def test_costs_j25; assert_in_epsilon(63.89906674464286, worksheet.costs_j25, 0.001); end
  def test_costs_t25; assert_in_epsilon(17.524777218446815, worksheet.costs_t25, 0.001); end
  def test_costs_ad25; assert_in_epsilon(46.35660890488981, worksheet.costs_ad25, 0.001); end
  def test_costs_an25; assert_in_epsilon(127.78045286797948, worksheet.costs_an25, 0.001); end
  def test_costs_k25; assert_in_epsilon(66.6840544171547, worksheet.costs_k25, 0.001); end
  def test_costs_u25; assert_in_epsilon(21.43926395917766, worksheet.costs_u25, 0.001); end
  def test_costs_ae25; assert_in_epsilon(64.08510660409925, worksheet.costs_ae25, 0.001); end
  def test_costs_ao25; assert_in_epsilon(152.2084249804316, worksheet.costs_ao25, 0.001); end
  def test_costs_l25; assert_in_epsilon(70.81697784208127, worksheet.costs_l25, 0.001); end
  def test_costs_v25; assert_in_epsilon(24.24370779815489, worksheet.costs_v25, 0.001); end
  def test_costs_af25; assert_in_epsilon(80.32035308134272, worksheet.costs_af25, 0.001); end
  def test_costs_ap25; assert_in_epsilon(175.38103872157888, worksheet.costs_ap25, 0.001); end
  def test_costs_m25; assert_in_epsilon(78.00622350552821, worksheet.costs_m25, 0.001); end
  def test_costs_w25; assert_in_epsilon(25.701869788867924, worksheet.costs_w25, 0.001); end
  def test_costs_ag25; assert_in_epsilon(100.96575543662217, worksheet.costs_ag25, 0.001); end
  def test_costs_aq25; assert_in_epsilon(204.67384873101832, worksheet.costs_aq25, 0.001); end
  def test_costs_n25; assert_in_epsilon(91.48580246673166, worksheet.costs_n25, 0.001); end
  def test_costs_x25; assert_in_epsilon(25.826777818817476, worksheet.costs_x25, 0.001); end
  def test_costs_ah25; assert_in_epsilon(113.26968204145125, worksheet.costs_ah25, 0.001); end
  def test_costs_ar25; assert_in_epsilon(230.58226232700036, worksheet.costs_ar25, 0.001); end
  def test_costs_b26; assert_equal("IX.a", worksheet.costs_b26); end
  def test_costs_c26; assert_equal("Domestic space heating and hot water", worksheet.costs_c26); end
  def test_costs_d26; assert_equal("Buildings", worksheet.costs_d26); end
  def test_costs_e26; assert_equal("MEUR", worksheet.costs_e26); end
  def test_costs_p26; assert_in_epsilon(73.96375664907417, worksheet.costs_p26, 0.001); end
  def test_costs_f26; assert_in_epsilon(16111.024227058771, worksheet.costs_f26, 0.001); end
  def test_costs_z26; assert_in_epsilon(2475.4681588926887, worksheet.costs_z26, 0.001); end
  def test_costs_aj26; assert_in_epsilon(18660.456142600535, worksheet.costs_aj26, 0.001); end
  def test_costs_g26; assert_in_epsilon(16188.995447020005, worksheet.costs_g26, 0.001); end
  def test_costs_q26; assert_in_epsilon(94.13788529968268, worksheet.costs_q26, 0.001); end
  def test_costs_aa26; assert_in_epsilon(2121.3575202246425, worksheet.costs_aa26, 0.001); end
  def test_costs_ak26; assert_in_epsilon(18404.490852544328, worksheet.costs_ak26, 0.001); end
  def test_costs_h26; assert_in_epsilon(29518.623135768383, worksheet.costs_h26, 0.001); end
  def test_costs_r26; assert_in_epsilon(123.55956278385622, worksheet.costs_r26, 0.001); end
  def test_costs_ab26; assert_in_epsilon(2164.4658859301385, worksheet.costs_ab26, 0.001); end
  def test_costs_al26; assert_in_epsilon(31806.648584482376, worksheet.costs_al26, 0.001); end
  def test_costs_i26; assert_in_epsilon(20537.994255165286, worksheet.costs_i26, 0.001); end
  def test_costs_s26; assert_in_epsilon(149.0106680578116, worksheet.costs_s26, 0.001); end
  def test_costs_ac26; assert_in_epsilon(1942.88942195634, worksheet.costs_ac26, 0.001); end
  def test_costs_am26; assert_in_epsilon(22629.894345179437, worksheet.costs_am26, 0.001); end
  def test_costs_j26; assert_in_epsilon(21588.832989691542, worksheet.costs_j26, 0.001); end
  def test_costs_t26; assert_in_epsilon(177.05087451860157, worksheet.costs_t26, 0.001); end
  def test_costs_ad26; assert_in_epsilon(1689.5791914524914, worksheet.costs_ad26, 0.001); end
  def test_costs_an26; assert_in_epsilon(23455.463055662636, worksheet.costs_an26, 0.001); end
  def test_costs_k26; assert_in_epsilon(19696.666744629496, worksheet.costs_k26, 0.001); end
  def test_costs_u26; assert_in_epsilon(205.13512860397336, worksheet.costs_u26, 0.001); end
  def test_costs_ae26; assert_in_epsilon(1423.661258459601, worksheet.costs_ae26, 0.001); end
  def test_costs_ao26; assert_in_epsilon(21325.463131693068, worksheet.costs_ao26, 0.001); end
  def test_costs_l26; assert_in_epsilon(20720.78840576193, worksheet.costs_l26, 0.001); end
  def test_costs_v26; assert_in_epsilon(235.52021082351854, worksheet.costs_v26, 0.001); end
  def test_costs_af26; assert_in_epsilon(1140.5950811281257, worksheet.costs_af26, 0.001); end
  def test_costs_ap26; assert_in_epsilon(22096.903697713573, worksheet.costs_ap26, 0.001); end
  def test_costs_m26; assert_in_epsilon(20366.17512073968, worksheet.costs_m26, 0.001); end
  def test_costs_w26; assert_in_epsilon(266.63900546068476, worksheet.costs_w26, 0.001); end
  def test_costs_ag26; assert_in_epsilon(909.819995594687, worksheet.costs_ag26, 0.001); end
  def test_costs_aq26; assert_in_epsilon(21542.634121795054, worksheet.costs_aq26, 0.001); end
  def test_costs_n26; assert_in_epsilon(21583.402148735386, worksheet.costs_n26, 0.001); end
  def test_costs_x26; assert_in_epsilon(300.026544785966, worksheet.costs_x26, 0.001); end
  def test_costs_ah26; assert_in_epsilon(650.5399236249787, worksheet.costs_ah26, 0.001); end
  def test_costs_ar26; assert_in_epsilon(22533.968617146333, worksheet.costs_ar26, 0.001); end
  def test_costs_b27; assert_equal("IX.b", worksheet.costs_b27); end
  def test_costs_c27; assert_equal("Domestic hot water [UNUSED - See IX.a]", worksheet.costs_c27); end
  def test_costs_d27; assert_equal("Buildings", worksheet.costs_d27); end
  def test_costs_e27; assert_equal("MEUR", worksheet.costs_e27); end
  def test_costs_f27; assert_in_delta(0, (worksheet.costs_f27||0), 0.001); end
  def test_costs_g27; assert_in_delta(0, (worksheet.costs_g27||0), 0.001); end
  def test_costs_h27; assert_in_delta(0, (worksheet.costs_h27||0), 0.001); end
  def test_costs_i27; assert_in_delta(0, (worksheet.costs_i27||0), 0.001); end
  def test_costs_j27; assert_in_delta(0, (worksheet.costs_j27||0), 0.001); end
  def test_costs_k27; assert_in_delta(0, (worksheet.costs_k27||0), 0.001); end
  def test_costs_l27; assert_in_delta(0, (worksheet.costs_l27||0), 0.001); end
  def test_costs_m27; assert_in_delta(0, (worksheet.costs_m27||0), 0.001); end
  def test_costs_n27; assert_in_delta(0, (worksheet.costs_n27||0), 0.001); end
  def test_costs_p27; assert_in_delta(0, (worksheet.costs_p27||0), 0.001); end
  def test_costs_q27; assert_in_delta(0, (worksheet.costs_q27||0), 0.001); end
  def test_costs_r27; assert_in_delta(0, (worksheet.costs_r27||0), 0.001); end
  def test_costs_s27; assert_in_delta(0, (worksheet.costs_s27||0), 0.001); end
  def test_costs_t27; assert_in_delta(0, (worksheet.costs_t27||0), 0.001); end
  def test_costs_u27; assert_in_delta(0, (worksheet.costs_u27||0), 0.001); end
  def test_costs_v27; assert_in_delta(0, (worksheet.costs_v27||0), 0.001); end
  def test_costs_w27; assert_in_delta(0, (worksheet.costs_w27||0), 0.001); end
  def test_costs_x27; assert_in_delta(0, (worksheet.costs_x27||0), 0.001); end
  def test_costs_z27; assert_in_delta(0, (worksheet.costs_z27||0), 0.001); end
  def test_costs_aa27; assert_in_delta(0, (worksheet.costs_aa27||0), 0.001); end
  def test_costs_ab27; assert_in_delta(0, (worksheet.costs_ab27||0), 0.001); end
  def test_costs_ac27; assert_in_delta(0, (worksheet.costs_ac27||0), 0.001); end
  def test_costs_ad27; assert_in_delta(0, (worksheet.costs_ad27||0), 0.001); end
  def test_costs_ae27; assert_in_delta(0, (worksheet.costs_ae27||0), 0.001); end
  def test_costs_af27; assert_in_delta(0, (worksheet.costs_af27||0), 0.001); end
  def test_costs_ag27; assert_in_delta(0, (worksheet.costs_ag27||0), 0.001); end
  def test_costs_ah27; assert_in_delta(0, (worksheet.costs_ah27||0), 0.001); end
  def test_costs_aj27; assert_in_delta(0, (worksheet.costs_aj27||0), 0.001); end
  def test_costs_ak27; assert_in_delta(0, (worksheet.costs_ak27||0), 0.001); end
  def test_costs_al27; assert_in_delta(0, (worksheet.costs_al27||0), 0.001); end
  def test_costs_am27; assert_in_delta(0, (worksheet.costs_am27||0), 0.001); end
  def test_costs_an27; assert_in_delta(0, (worksheet.costs_an27||0), 0.001); end
  def test_costs_ao27; assert_in_delta(0, (worksheet.costs_ao27||0), 0.001); end
  def test_costs_ap27; assert_in_delta(0, (worksheet.costs_ap27||0), 0.001); end
  def test_costs_aq27; assert_in_delta(0, (worksheet.costs_aq27||0), 0.001); end
  def test_costs_ar27; assert_in_delta(0, (worksheet.costs_ar27||0), 0.001); end
  def test_costs_b28; assert_equal("IX.c", worksheet.costs_b28); end
  def test_costs_c28; assert_equal("Commercial heating and cooling", worksheet.costs_c28); end
  def test_costs_d28; assert_equal("Buildings", worksheet.costs_d28); end
  def test_costs_e28; assert_equal("MEUR", worksheet.costs_e28); end
  def test_costs_p28; assert_in_epsilon(62.219719549372456, worksheet.costs_p28, 0.001); end
  def test_costs_q28; assert_in_epsilon(63.60138090823205, worksheet.costs_q28, 0.001); end
  def test_costs_f28; assert_in_epsilon(7685.444293787895, worksheet.costs_f28, 0.001); end
  def test_costs_z28; assert_in_epsilon(812.9468575590747, worksheet.costs_z28, 0.001); end
  def test_costs_aj28; assert_in_epsilon(8560.610870896342, worksheet.costs_aj28, 0.001); end
  def test_costs_g28; assert_in_epsilon(8719.386914217077, worksheet.costs_g28, 0.001); end
  def test_costs_aa28; assert_in_epsilon(647.6513652381007, worksheet.costs_aa28, 0.001); end
  def test_costs_ak28; assert_in_epsilon(9430.63966036341, worksheet.costs_ak28, 0.001); end
  def test_costs_h28; assert_in_epsilon(9355.562474472765, worksheet.costs_h28, 0.001); end
  def test_costs_r28; assert_in_epsilon(77.60450205780917, worksheet.costs_r28, 0.001); end
  def test_costs_ab28; assert_in_epsilon(653.4978800550703, worksheet.costs_ab28, 0.001); end
  def test_costs_al28; assert_in_epsilon(10086.664856585645, worksheet.costs_al28, 0.001); end
  def test_costs_i28; assert_in_epsilon(9552.761353534595, worksheet.costs_i28, 0.001); end
  def test_costs_s28; assert_in_epsilon(92.12502782998023, worksheet.costs_s28, 0.001); end
  def test_costs_ac28; assert_in_epsilon(609.081911299136, worksheet.costs_ac28, 0.001); end
  def test_costs_am28; assert_in_epsilon(10253.96829266371, worksheet.costs_am28, 0.001); end
  def test_costs_j28; assert_in_epsilon(9740.464680188332, worksheet.costs_j28, 0.001); end
  def test_costs_t28; assert_in_epsilon(106.88045310689816, worksheet.costs_t28, 0.001); end
  def test_costs_ad28; assert_in_epsilon(547.2447941225759, worksheet.costs_ad28, 0.001); end
  def test_costs_an28; assert_in_epsilon(10394.589927417806, worksheet.costs_an28, 0.001); end
  def test_costs_k28; assert_in_epsilon(9955.114195267563, worksheet.costs_k28, 0.001); end
  def test_costs_u28; assert_in_epsilon(122.30050138573056, worksheet.costs_u28, 0.001); end
  def test_costs_ae28; assert_in_epsilon(455.60169631745754, worksheet.costs_ae28, 0.001); end
  def test_costs_ao28; assert_in_epsilon(10533.01639297075, worksheet.costs_ao28, 0.001); end
  def test_costs_l28; assert_in_epsilon(10168.944563559498, worksheet.costs_l28, 0.001); end
  def test_costs_v28; assert_in_epsilon(138.22529053645647, worksheet.costs_v28, 0.001); end
  def test_costs_af28; assert_in_epsilon(366.64236171760626, worksheet.costs_af28, 0.001); end
  def test_costs_ap28; assert_in_epsilon(10673.812215813561, worksheet.costs_ap28, 0.001); end
  def test_costs_m28; assert_in_epsilon(10460.746283098653, worksheet.costs_m28, 0.001); end
  def test_costs_w28; assert_in_epsilon(154.8183957060214, worksheet.costs_w28, 0.001); end
  def test_costs_ag28; assert_in_epsilon(298.8742629725519, worksheet.costs_ag28, 0.001); end
  def test_costs_aq28; assert_in_epsilon(10914.438941777225, worksheet.costs_aq28, 0.001); end
  def test_costs_n28; assert_in_epsilon(12000.032184686635, worksheet.costs_n28, 0.001); end
  def test_costs_x28; assert_in_epsilon(185.82228256147033, worksheet.costs_x28, 0.001); end
  def test_costs_ah28; assert_in_epsilon(212.70849682072242, worksheet.costs_ah28, 0.001); end
  def test_costs_ar28; assert_in_epsilon(12398.562964068828, worksheet.costs_ar28, 0.001); end
  def test_costs_b29; assert_equal("IX.d", worksheet.costs_b29); end
  def test_costs_c29; assert_equal("Commercial hot water [UNUSED - See IX.c]", worksheet.costs_c29); end
  def test_costs_d29; assert_equal("Buildings", worksheet.costs_d29); end
  def test_costs_e29; assert_equal("MEUR", worksheet.costs_e29); end
  def test_costs_f29; assert_in_delta(0, (worksheet.costs_f29||0), 0.001); end
  def test_costs_g29; assert_in_delta(0, (worksheet.costs_g29||0), 0.001); end
  def test_costs_h29; assert_in_delta(0, (worksheet.costs_h29||0), 0.001); end
  def test_costs_i29; assert_in_delta(0, (worksheet.costs_i29||0), 0.001); end
  def test_costs_j29; assert_in_delta(0, (worksheet.costs_j29||0), 0.001); end
  def test_costs_k29; assert_in_delta(0, (worksheet.costs_k29||0), 0.001); end
  def test_costs_l29; assert_in_delta(0, (worksheet.costs_l29||0), 0.001); end
  def test_costs_m29; assert_in_delta(0, (worksheet.costs_m29||0), 0.001); end
  def test_costs_n29; assert_in_delta(0, (worksheet.costs_n29||0), 0.001); end
  def test_costs_p29; assert_in_delta(0, (worksheet.costs_p29||0), 0.001); end
  def test_costs_q29; assert_in_delta(0, (worksheet.costs_q29||0), 0.001); end
  def test_costs_r29; assert_in_delta(0, (worksheet.costs_r29||0), 0.001); end
  def test_costs_s29; assert_in_delta(0, (worksheet.costs_s29||0), 0.001); end
  def test_costs_t29; assert_in_delta(0, (worksheet.costs_t29||0), 0.001); end
  def test_costs_u29; assert_in_delta(0, (worksheet.costs_u29||0), 0.001); end
  def test_costs_v29; assert_in_delta(0, (worksheet.costs_v29||0), 0.001); end
  def test_costs_w29; assert_in_delta(0, (worksheet.costs_w29||0), 0.001); end
  def test_costs_x29; assert_in_delta(0, (worksheet.costs_x29||0), 0.001); end
  def test_costs_z29; assert_in_delta(0, (worksheet.costs_z29||0), 0.001); end
  def test_costs_aa29; assert_in_delta(0, (worksheet.costs_aa29||0), 0.001); end
  def test_costs_ab29; assert_in_delta(0, (worksheet.costs_ab29||0), 0.001); end
  def test_costs_ac29; assert_in_delta(0, (worksheet.costs_ac29||0), 0.001); end
  def test_costs_ad29; assert_in_delta(0, (worksheet.costs_ad29||0), 0.001); end
  def test_costs_ae29; assert_in_delta(0, (worksheet.costs_ae29||0), 0.001); end
  def test_costs_af29; assert_in_delta(0, (worksheet.costs_af29||0), 0.001); end
  def test_costs_ag29; assert_in_delta(0, (worksheet.costs_ag29||0), 0.001); end
  def test_costs_ah29; assert_in_delta(0, (worksheet.costs_ah29||0), 0.001); end
  def test_costs_aj29; assert_in_delta(0, (worksheet.costs_aj29||0), 0.001); end
  def test_costs_ak29; assert_in_delta(0, (worksheet.costs_ak29||0), 0.001); end
  def test_costs_al29; assert_in_delta(0, (worksheet.costs_al29||0), 0.001); end
  def test_costs_am29; assert_in_delta(0, (worksheet.costs_am29||0), 0.001); end
  def test_costs_an29; assert_in_delta(0, (worksheet.costs_an29||0), 0.001); end
  def test_costs_ao29; assert_in_delta(0, (worksheet.costs_ao29||0), 0.001); end
  def test_costs_ap29; assert_in_delta(0, (worksheet.costs_ap29||0), 0.001); end
  def test_costs_aq29; assert_in_delta(0, (worksheet.costs_aq29||0), 0.001); end
  def test_costs_ar29; assert_in_delta(0, (worksheet.costs_ar29||0), 0.001); end
  def test_costs_b30; assert_equal("X.a", worksheet.costs_b30); end
  def test_costs_c30; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costs_c30); end
  def test_costs_d30; assert_equal("Buildings", worksheet.costs_d30); end
  def test_costs_e30; assert_equal("MEUR", worksheet.costs_e30); end
  def test_costs_p30; assert_in_delta(0, (worksheet.costs_p30||0), 0.001); end
  def test_costs_q30; assert_in_delta(0, (worksheet.costs_q30||0), 0.001); end
  def test_costs_r30; assert_in_delta(0, (worksheet.costs_r30||0), 0.001); end
  def test_costs_s30; assert_in_delta(0, (worksheet.costs_s30||0), 0.001); end
  def test_costs_t30; assert_in_delta(0, (worksheet.costs_t30||0), 0.001); end
  def test_costs_u30; assert_in_delta(0, (worksheet.costs_u30||0), 0.001); end
  def test_costs_v30; assert_in_delta(0, (worksheet.costs_v30||0), 0.001); end
  def test_costs_w30; assert_in_delta(0, (worksheet.costs_w30||0), 0.001); end
  def test_costs_x30; assert_in_delta(0, (worksheet.costs_x30||0), 0.001); end
  def test_costs_z30; assert_in_delta(0, (worksheet.costs_z30||0), 0.001); end
  def test_costs_f30; assert_in_epsilon(1223.1089705084482, worksheet.costs_f30, 0.001); end
  def test_costs_aj30; assert_in_epsilon(1223.1089705084482, worksheet.costs_aj30, 0.001); end
  def test_costs_g30; assert_in_epsilon(450.5660120813539, worksheet.costs_g30, 0.001); end
  def test_costs_aa30; assert_in_epsilon(930.5040120125883, worksheet.costs_aa30, 0.001); end
  def test_costs_ak30; assert_in_epsilon(1381.0700240939423, worksheet.costs_ak30, 0.001); end
  def test_costs_h30; assert_in_epsilon(556.1611326648568, worksheet.costs_h30, 0.001); end
  def test_costs_ab30; assert_in_epsilon(1072.210944860612, worksheet.costs_ab30, 0.001); end
  def test_costs_al30; assert_in_epsilon(1628.3720775254687, worksheet.costs_al30, 0.001); end
  def test_costs_i30; assert_in_epsilon(530.8822740703957, worksheet.costs_i30, 0.001); end
  def test_costs_ac30; assert_in_epsilon(1017.2396784940106, worksheet.costs_ac30, 0.001); end
  def test_costs_am30; assert_in_epsilon(1548.1219525644065, worksheet.costs_am30, 0.001); end
  def test_costs_j30; assert_in_epsilon(561.6563691871364, worksheet.costs_j30, 0.001); end
  def test_costs_ad30; assert_in_epsilon(995.8068603406061, worksheet.costs_ad30, 0.001); end
  def test_costs_an30; assert_in_epsilon(1557.4632295277424, worksheet.costs_an30, 0.001); end
  def test_costs_k30; assert_in_epsilon(572.6251846981215, worksheet.costs_k30, 0.001); end
  def test_costs_ae30; assert_in_epsilon(1047.704120170323, worksheet.costs_ae30, 0.001); end
  def test_costs_ao30; assert_in_epsilon(1620.3293048684445, worksheet.costs_ao30, 0.001); end
  def test_costs_l30; assert_in_epsilon(598.4283386641459, worksheet.costs_l30, 0.001); end
  def test_costs_af30; assert_in_epsilon(1049.7865632552803, worksheet.costs_af30, 0.001); end
  def test_costs_ap30; assert_in_epsilon(1648.2149019194262, worksheet.costs_ap30, 0.001); end
  def test_costs_m30; assert_in_epsilon(634.7574887735716, worksheet.costs_m30, 0.001); end
  def test_costs_ag30; assert_in_epsilon(1115.5469612336515, worksheet.costs_ag30, 0.001); end
  def test_costs_aq30; assert_in_epsilon(1750.304450007223, worksheet.costs_aq30, 0.001); end
  def test_costs_n30; assert_in_epsilon(686.2288107318566, worksheet.costs_n30, 0.001); end
  def test_costs_ah30; assert_in_epsilon(1080.709041076195, worksheet.costs_ah30, 0.001); end
  def test_costs_ar30; assert_in_epsilon(1766.9378518080516, worksheet.costs_ar30, 0.001); end
  def test_costs_b31; assert_equal("X.b", worksheet.costs_b31); end
  def test_costs_c31; assert_equal("Commercial lighting, appliances, and catering", worksheet.costs_c31); end
  def test_costs_d31; assert_equal("Buildings", worksheet.costs_d31); end
  def test_costs_e31; assert_equal("MEUR", worksheet.costs_e31); end
  def test_costs_f31; assert_in_delta(0, (worksheet.costs_f31||0), 0.001); end
  def test_costs_p31; assert_in_delta(0, (worksheet.costs_p31||0), 0.001); end
  def test_costs_q31; assert_in_delta(0, (worksheet.costs_q31||0), 0.001); end
  def test_costs_r31; assert_in_delta(0, (worksheet.costs_r31||0), 0.001); end
  def test_costs_s31; assert_in_delta(0, (worksheet.costs_s31||0), 0.001); end
  def test_costs_t31; assert_in_delta(0, (worksheet.costs_t31||0), 0.001); end
  def test_costs_u31; assert_in_delta(0, (worksheet.costs_u31||0), 0.001); end
  def test_costs_v31; assert_in_delta(0, (worksheet.costs_v31||0), 0.001); end
  def test_costs_w31; assert_in_delta(0, (worksheet.costs_w31||0), 0.001); end
  def test_costs_x31; assert_in_delta(0, (worksheet.costs_x31||0), 0.001); end
  def test_costs_z31; assert_in_epsilon(2.153921052729563, worksheet.costs_z31, 0.001); end
  def test_costs_aj31; assert_in_epsilon(2.153921052729563, worksheet.costs_aj31, 0.001); end
  def test_costs_g31; assert_in_epsilon(6.398516752321568, worksheet.costs_g31, 0.001); end
  def test_costs_aa31; assert_in_epsilon(2.2857955435471524, worksheet.costs_aa31, 0.001); end
  def test_costs_ak31; assert_in_epsilon(8.68431229586872, worksheet.costs_ak31, 0.001); end
  def test_costs_h31; assert_in_epsilon(7.098448051277506, worksheet.costs_h31, 0.001); end
  def test_costs_ab31; assert_in_epsilon(2.357385731236373, worksheet.costs_ab31, 0.001); end
  def test_costs_al31; assert_in_epsilon(9.45583378251388, worksheet.costs_al31, 0.001); end
  def test_costs_i31; assert_in_epsilon(7.260976853073049, worksheet.costs_i31, 0.001); end
  def test_costs_ac31; assert_in_epsilon(2.362277216700886, worksheet.costs_ac31, 0.001); end
  def test_costs_am31; assert_in_epsilon(9.623254069773935, worksheet.costs_am31, 0.001); end
  def test_costs_j31; assert_in_epsilon(7.496891518814877, worksheet.costs_j31, 0.001); end
  def test_costs_ad31; assert_in_epsilon(2.355647200864492, worksheet.costs_ad31, 0.001); end
  def test_costs_an31; assert_in_epsilon(9.85253871967937, worksheet.costs_an31, 0.001); end
  def test_costs_k31; assert_in_epsilon(7.644274533315814, worksheet.costs_k31, 0.001); end
  def test_costs_ae31; assert_in_epsilon(2.3375232527724834, worksheet.costs_ae31, 0.001); end
  def test_costs_ao31; assert_in_epsilon(9.981797786088297, worksheet.costs_ao31, 0.001); end
  def test_costs_l31; assert_in_epsilon(7.874088320024411, worksheet.costs_l31, 0.001); end
  def test_costs_af31; assert_in_epsilon(2.3174329232425728, worksheet.costs_af31, 0.001); end
  def test_costs_ap31; assert_in_epsilon(10.191521243266983, worksheet.costs_ap31, 0.001); end
  def test_costs_m31; assert_in_epsilon(8.102132271525004, worksheet.costs_m31, 0.001); end
  def test_costs_ag31; assert_in_epsilon(2.295360830870714, worksheet.costs_ag31, 0.001); end
  def test_costs_aq31; assert_in_epsilon(10.397493102395718, worksheet.costs_aq31, 0.001); end
  def test_costs_n31; assert_in_epsilon(8.347149016150736, worksheet.costs_n31, 0.001); end
  def test_costs_ah31; assert_in_epsilon(2.272013394407555, worksheet.costs_ah31, 0.001); end
  def test_costs_ar31; assert_in_epsilon(10.61916241055829, worksheet.costs_ar31, 0.001); end
  def test_costs_b32; assert_equal("XI.a", worksheet.costs_b32); end
  def test_costs_c32; assert_equal("Steel Industry", worksheet.costs_c32); end
  def test_costs_d32; assert_equal("Industry", worksheet.costs_d32); end
  def test_costs_e32; assert_equal("MEUR", worksheet.costs_e32); end
  def test_costs_p32; assert_in_delta(0, (worksheet.costs_p32||0), 0.001); end
  def test_costs_q32; assert_in_delta(0, (worksheet.costs_q32||0), 0.001); end
  def test_costs_r32; assert_in_delta(0, (worksheet.costs_r32||0), 0.001); end
  def test_costs_s32; assert_in_delta(0, (worksheet.costs_s32||0), 0.001); end
  def test_costs_t32; assert_in_delta(0, (worksheet.costs_t32||0), 0.001); end
  def test_costs_u32; assert_in_delta(0, (worksheet.costs_u32||0), 0.001); end
  def test_costs_v32; assert_in_delta(0, (worksheet.costs_v32||0), 0.001); end
  def test_costs_w32; assert_in_delta(0, (worksheet.costs_w32||0), 0.001); end
  def test_costs_x32; assert_in_delta(0, (worksheet.costs_x32||0), 0.001); end
  def test_costs_f32; assert_in_delta(-3.623767952376511e-13, worksheet.costs_f32, 0.001); end
  def test_costs_z32; assert_in_epsilon(674.3926080965056, worksheet.costs_z32, 0.001); end
  def test_costs_aj32; assert_in_epsilon(674.3926080965052, worksheet.costs_aj32, 0.001); end
  def test_costs_g32; assert_in_epsilon(77.59352191432095, worksheet.costs_g32, 0.001); end
  def test_costs_aa32; assert_in_epsilon(515.8731125650513, worksheet.costs_aa32, 0.001); end
  def test_costs_ak32; assert_in_epsilon(593.4666344793723, worksheet.costs_ak32, 0.001); end
  def test_costs_h32; assert_in_epsilon(203.98154154746126, worksheet.costs_h32, 0.001); end
  def test_costs_ab32; assert_in_epsilon(462.1368911053514, worksheet.costs_ab32, 0.001); end
  def test_costs_al32; assert_in_epsilon(666.1184326528127, worksheet.costs_al32, 0.001); end
  def test_costs_i32; assert_in_epsilon(320.6595365504122, worksheet.costs_i32, 0.001); end
  def test_costs_ac32; assert_in_epsilon(385.4841775770975, worksheet.costs_ac32, 0.001); end
  def test_costs_am32; assert_in_epsilon(706.1437141275097, worksheet.costs_am32, 0.001); end
  def test_costs_j32; assert_in_epsilon(357.5273769038647, worksheet.costs_j32, 0.001); end
  def test_costs_ad32; assert_in_epsilon(388.33391073675136, worksheet.costs_ad32, 0.001); end
  def test_costs_an32; assert_in_epsilon(745.8612876406161, worksheet.costs_an32, 0.001); end
  def test_costs_k32; assert_in_epsilon(347.5981243761677, worksheet.costs_k32, 0.001); end
  def test_costs_ae32; assert_in_epsilon(371.01729286810195, worksheet.costs_ae32, 0.001); end
  def test_costs_ao32; assert_in_epsilon(718.6154172442696, worksheet.costs_ao32, 0.001); end
  def test_costs_l32; assert_in_epsilon(335.4949401707407, worksheet.costs_l32, 0.001); end
  def test_costs_af32; assert_in_epsilon(349.7693082420174, worksheet.costs_af32, 0.001); end
  def test_costs_ap32; assert_in_epsilon(685.2642484127581, worksheet.costs_ap32, 0.001); end
  def test_costs_m32; assert_in_epsilon(327.6305566383478, worksheet.costs_m32, 0.001); end
  def test_costs_ag32; assert_in_epsilon(334.18591278815455, worksheet.costs_ag32, 0.001); end
  def test_costs_aq32; assert_in_epsilon(661.8164694265024, worksheet.costs_aq32, 0.001); end
  def test_costs_n32; assert_in_epsilon(614.3635152220597, worksheet.costs_n32, 0.001); end
  def test_costs_ah32; assert_in_epsilon(336.79422061004584, worksheet.costs_ah32, 0.001); end
  def test_costs_ar32; assert_in_epsilon(951.1577358321056, worksheet.costs_ar32, 0.001); end
  def test_costs_b33; assert_equal("XI.b", worksheet.costs_b33); end
  def test_costs_c33; assert_equal("Cement Industry", worksheet.costs_c33); end
  def test_costs_d33; assert_equal("Industry", worksheet.costs_d33); end
  def test_costs_e33; assert_equal("MEUR", worksheet.costs_e33); end
  def test_costs_p33; assert_in_delta(0, (worksheet.costs_p33||0), 0.001); end
  def test_costs_q33; assert_in_delta(0, (worksheet.costs_q33||0), 0.001); end
  def test_costs_r33; assert_in_delta(0, (worksheet.costs_r33||0), 0.001); end
  def test_costs_s33; assert_in_delta(0, (worksheet.costs_s33||0), 0.001); end
  def test_costs_t33; assert_in_delta(0, (worksheet.costs_t33||0), 0.001); end
  def test_costs_u33; assert_in_delta(0, (worksheet.costs_u33||0), 0.001); end
  def test_costs_v33; assert_in_delta(0, (worksheet.costs_v33||0), 0.001); end
  def test_costs_w33; assert_in_delta(0, (worksheet.costs_w33||0), 0.001); end
  def test_costs_x33; assert_in_delta(0, (worksheet.costs_x33||0), 0.001); end
  def test_costs_f33; assert_in_delta(0.07999993371521077, worksheet.costs_f33, 0.001); end
  def test_costs_z33; assert_in_epsilon(124.87011075684646, worksheet.costs_z33, 0.001); end
  def test_costs_aj33; assert_in_epsilon(124.95011069056167, worksheet.costs_aj33, 0.001); end
  def test_costs_g33; assert_in_epsilon(49.19528076136533, worksheet.costs_g33, 0.001); end
  def test_costs_aa33; assert_in_epsilon(89.41290619071252, worksheet.costs_aa33, 0.001); end
  def test_costs_ak33; assert_in_epsilon(138.60818695207786, worksheet.costs_ak33, 0.001); end
  def test_costs_h33; assert_in_epsilon(69.21344428150903, worksheet.costs_h33, 0.001); end
  def test_costs_ab33; assert_in_epsilon(84.11431968447731, worksheet.costs_ab33, 0.001); end
  def test_costs_al33; assert_in_epsilon(153.32776396598632, worksheet.costs_al33, 0.001); end
  def test_costs_i33; assert_in_epsilon(62.843343420030465, worksheet.costs_i33, 0.001); end
  def test_costs_ac33; assert_in_epsilon(58.114231793185866, worksheet.costs_ac33, 0.001); end
  def test_costs_am33; assert_in_epsilon(120.95757521321633, worksheet.costs_am33, 0.001); end
  def test_costs_j33; assert_in_epsilon(85.49079753281005, worksheet.costs_j33, 0.001); end
  def test_costs_ad33; assert_in_epsilon(54.585723770416884, worksheet.costs_ad33, 0.001); end
  def test_costs_an33; assert_in_epsilon(140.07652130322694, worksheet.costs_an33, 0.001); end
  def test_costs_k33; assert_in_epsilon(100.81735783032738, worksheet.costs_k33, 0.001); end
  def test_costs_ae33; assert_in_epsilon(48.88045518258944, worksheet.costs_ae33, 0.001); end
  def test_costs_ao33; assert_in_epsilon(149.6978130129168, worksheet.costs_ao33, 0.001); end
  def test_costs_l33; assert_in_epsilon(111.2169160490779, worksheet.costs_l33, 0.001); end
  def test_costs_af33; assert_in_epsilon(41.03579564386419, worksheet.costs_af33, 0.001); end
  def test_costs_ap33; assert_in_epsilon(152.25271169294209, worksheet.costs_ap33, 0.001); end
  def test_costs_m33; assert_in_epsilon(120.35275008902401, worksheet.costs_m33, 0.001); end
  def test_costs_ag33; assert_in_epsilon(31.364518065574362, worksheet.costs_ag33, 0.001); end
  def test_costs_aq33; assert_in_epsilon(151.71726815459837, worksheet.costs_aq33, 0.001); end
  def test_costs_n33; assert_in_epsilon(123.25452287345603, worksheet.costs_n33, 0.001); end
  def test_costs_ah33; assert_in_epsilon(20.54040002793176, worksheet.costs_ah33, 0.001); end
  def test_costs_ar33; assert_in_epsilon(143.7949229013878, worksheet.costs_ar33, 0.001); end
  def test_costs_b34; assert_equal("XI.c", worksheet.costs_b34); end
  def test_costs_c34; assert_equal("Lime Industry", worksheet.costs_c34); end
  def test_costs_d34; assert_equal("Industry", worksheet.costs_d34); end
  def test_costs_e34; assert_equal("MEUR", worksheet.costs_e34); end
  def test_costs_p34; assert_in_delta(0, (worksheet.costs_p34||0), 0.001); end
  def test_costs_q34; assert_in_delta(0, (worksheet.costs_q34||0), 0.001); end
  def test_costs_r34; assert_in_delta(0, (worksheet.costs_r34||0), 0.001); end
  def test_costs_s34; assert_in_delta(0, (worksheet.costs_s34||0), 0.001); end
  def test_costs_t34; assert_in_delta(0, (worksheet.costs_t34||0), 0.001); end
  def test_costs_u34; assert_in_delta(0, (worksheet.costs_u34||0), 0.001); end
  def test_costs_v34; assert_in_delta(0, (worksheet.costs_v34||0), 0.001); end
  def test_costs_w34; assert_in_delta(0, (worksheet.costs_w34||0), 0.001); end
  def test_costs_x34; assert_in_delta(0, (worksheet.costs_x34||0), 0.001); end
  def test_costs_f34; assert_in_delta(0, (worksheet.costs_f34||0), 0.001); end
  def test_costs_z34; assert_in_epsilon(81.11525953945034, worksheet.costs_z34, 0.001); end
  def test_costs_aj34; assert_in_epsilon(81.11525953945034, worksheet.costs_aj34, 0.001); end
  def test_costs_g34; assert_in_delta(-0.6935795406652223, worksheet.costs_g34, 0.001); end
  def test_costs_aa34; assert_in_epsilon(86.19888574611278, worksheet.costs_aa34, 0.001); end
  def test_costs_ak34; assert_in_epsilon(85.50530620544755, worksheet.costs_ak34, 0.001); end
  def test_costs_h34; assert_in_epsilon(-1.230636363077945, worksheet.costs_h34, 0.001); end
  def test_costs_ab34; assert_in_epsilon(99.81614576243265, worksheet.costs_ab34, 0.001); end
  def test_costs_al34; assert_in_epsilon(98.5855093993547, worksheet.costs_al34, 0.001); end
  def test_costs_i34; assert_in_epsilon(2.0834427186164013, worksheet.costs_i34, 0.001); end
  def test_costs_ac34; assert_in_epsilon(106.42598164386897, worksheet.costs_ac34, 0.001); end
  def test_costs_am34; assert_in_epsilon(108.50942436248536, worksheet.costs_am34, 0.001); end
  def test_costs_j34; assert_in_epsilon(21.170970201226318, worksheet.costs_j34, 0.001); end
  def test_costs_ad34; assert_in_epsilon(117.90540114193222, worksheet.costs_ad34, 0.001); end
  def test_costs_an34; assert_in_epsilon(139.07637134315854, worksheet.costs_an34, 0.001); end
  def test_costs_k34; assert_in_epsilon(40.84812751120522, worksheet.costs_k34, 0.001); end
  def test_costs_ae34; assert_in_epsilon(122.1230527798328, worksheet.costs_ae34, 0.001); end
  def test_costs_ao34; assert_in_epsilon(162.97118029103802, worksheet.costs_ao34, 0.001); end
  def test_costs_l34; assert_in_epsilon(60.05984981727617, worksheet.costs_l34, 0.001); end
  def test_costs_af34; assert_in_epsilon(124.58187806854038, worksheet.costs_af34, 0.001); end
  def test_costs_ap34; assert_in_epsilon(184.64172788581655, worksheet.costs_ap34, 0.001); end
  def test_costs_m34; assert_in_epsilon(79.6082266874405, worksheet.costs_m34, 0.001); end
  def test_costs_ag34; assert_in_epsilon(126.60235550998473, worksheet.costs_ag34, 0.001); end
  def test_costs_aq34; assert_in_epsilon(206.21058219742525, worksheet.costs_aq34, 0.001); end
  def test_costs_n34; assert_in_epsilon(97.97904209942794, worksheet.costs_n34, 0.001); end
  def test_costs_ah34; assert_in_epsilon(126.99639170474735, worksheet.costs_ah34, 0.001); end
  def test_costs_ar34; assert_in_epsilon(224.97543380417528, worksheet.costs_ar34, 0.001); end
  def test_costs_b35; assert_equal("XI.d", worksheet.costs_b35); end
  def test_costs_c35; assert_equal("Glass Industry", worksheet.costs_c35); end
  def test_costs_d35; assert_equal("Industry", worksheet.costs_d35); end
  def test_costs_e35; assert_equal("MEUR", worksheet.costs_e35); end
  def test_costs_p35; assert_in_delta(0, (worksheet.costs_p35||0), 0.001); end
  def test_costs_q35; assert_in_delta(0, (worksheet.costs_q35||0), 0.001); end
  def test_costs_r35; assert_in_delta(0, (worksheet.costs_r35||0), 0.001); end
  def test_costs_s35; assert_in_delta(0, (worksheet.costs_s35||0), 0.001); end
  def test_costs_t35; assert_in_delta(0, (worksheet.costs_t35||0), 0.001); end
  def test_costs_u35; assert_in_delta(0, (worksheet.costs_u35||0), 0.001); end
  def test_costs_v35; assert_in_delta(0, (worksheet.costs_v35||0), 0.001); end
  def test_costs_w35; assert_in_delta(0, (worksheet.costs_w35||0), 0.001); end
  def test_costs_x35; assert_in_delta(0, (worksheet.costs_x35||0), 0.001); end
  def test_costs_f35; assert_in_delta(0.2143662940878508, worksheet.costs_f35, 0.001); end
  def test_costs_z35; assert_in_epsilon(153.27967225269808, worksheet.costs_z35, 0.001); end
  def test_costs_aj35; assert_in_epsilon(153.49403854678593, worksheet.costs_aj35, 0.001); end
  def test_costs_g35; assert_in_epsilon(12.32503624296978, worksheet.costs_g35, 0.001); end
  def test_costs_aa35; assert_in_epsilon(129.14850212000087, worksheet.costs_aa35, 0.001); end
  def test_costs_ak35; assert_in_epsilon(141.47353836297066, worksheet.costs_ak35, 0.001); end
  def test_costs_h35; assert_in_epsilon(27.469431488175577, worksheet.costs_h35, 0.001); end
  def test_costs_ab35; assert_in_epsilon(124.63840376800455, worksheet.costs_ab35, 0.001); end
  def test_costs_al35; assert_in_epsilon(152.10783525618012, worksheet.costs_al35, 0.001); end
  def test_costs_i35; assert_in_epsilon(40.33083416846192, worksheet.costs_i35, 0.001); end
  def test_costs_ac35; assert_in_epsilon(128.8119779237922, worksheet.costs_ac35, 0.001); end
  def test_costs_am35; assert_in_epsilon(169.14281209225413, worksheet.costs_am35, 0.001); end
  def test_costs_j35; assert_in_epsilon(53.75062506921073, worksheet.costs_j35, 0.001); end
  def test_costs_ad35; assert_in_epsilon(133.15671087241907, worksheet.costs_ad35, 0.001); end
  def test_costs_an35; assert_in_epsilon(186.9073359416298, worksheet.costs_an35, 0.001); end
  def test_costs_k35; assert_in_epsilon(64.8413993291622, worksheet.costs_k35, 0.001); end
  def test_costs_ae35; assert_in_epsilon(130.96514308532858, worksheet.costs_ae35, 0.001); end
  def test_costs_ao35; assert_in_epsilon(195.80654241449076, worksheet.costs_ao35, 0.001); end
  def test_costs_l35; assert_in_epsilon(75.25217907291227, worksheet.costs_l35, 0.001); end
  def test_costs_af35; assert_in_epsilon(127.22993727596214, worksheet.costs_af35, 0.001); end
  def test_costs_ap35; assert_in_epsilon(202.4821163488744, worksheet.costs_ap35, 0.001); end
  def test_costs_m35; assert_in_epsilon(86.37857680624286, worksheet.costs_m35, 0.001); end
  def test_costs_ag35; assert_in_epsilon(125.59119119807393, worksheet.costs_ag35, 0.001); end
  def test_costs_aq35; assert_in_epsilon(211.9697680043168, worksheet.costs_aq35, 0.001); end
  def test_costs_n35; assert_in_epsilon(96.20670869336176, worksheet.costs_n35, 0.001); end
  def test_costs_ah35; assert_in_epsilon(121.24378834989393, worksheet.costs_ah35, 0.001); end
  def test_costs_ar35; assert_in_epsilon(217.4504970432557, worksheet.costs_ar35, 0.001); end
  def test_costs_b36; assert_equal("XI.e", worksheet.costs_b36); end
  def test_costs_c36; assert_equal("Chemicals Industry", worksheet.costs_c36); end
  def test_costs_d36; assert_equal("Industry", worksheet.costs_d36); end
  def test_costs_e36; assert_equal("MEUR", worksheet.costs_e36); end
  def test_costs_p36; assert_in_delta(0, (worksheet.costs_p36||0), 0.001); end
  def test_costs_q36; assert_in_delta(0, (worksheet.costs_q36||0), 0.001); end
  def test_costs_r36; assert_in_delta(0, (worksheet.costs_r36||0), 0.001); end
  def test_costs_s36; assert_in_delta(0, (worksheet.costs_s36||0), 0.001); end
  def test_costs_t36; assert_in_delta(0, (worksheet.costs_t36||0), 0.001); end
  def test_costs_u36; assert_in_delta(0, (worksheet.costs_u36||0), 0.001); end
  def test_costs_v36; assert_in_delta(0, (worksheet.costs_v36||0), 0.001); end
  def test_costs_w36; assert_in_delta(0, (worksheet.costs_w36||0), 0.001); end
  def test_costs_x36; assert_in_delta(0, (worksheet.costs_x36||0), 0.001); end
  def test_costs_f36; assert_in_epsilon(5.272493473360349, worksheet.costs_f36, 0.001); end
  def test_costs_z36; assert_in_epsilon(2125.677365410336, worksheet.costs_z36, 0.001); end
  def test_costs_aj36; assert_in_epsilon(2130.9498588836964, worksheet.costs_aj36, 0.001); end
  def test_costs_g36; assert_in_epsilon(50.69230019471993, worksheet.costs_g36, 0.001); end
  def test_costs_aa36; assert_in_epsilon(1925.07061746155, worksheet.costs_aa36, 0.001); end
  def test_costs_ak36; assert_in_epsilon(1975.76291765627, worksheet.costs_ak36, 0.001); end
  def test_costs_h36; assert_in_epsilon(100.7751476890662, worksheet.costs_h36, 0.001); end
  def test_costs_ab36; assert_in_epsilon(1858.6151930979916, worksheet.costs_ab36, 0.001); end
  def test_costs_al36; assert_in_epsilon(1959.3903407870578, worksheet.costs_al36, 0.001); end
  def test_costs_i36; assert_in_epsilon(143.15821169579263, worksheet.costs_i36, 0.001); end
  def test_costs_ac36; assert_in_epsilon(1699.5269459451197, worksheet.costs_ac36, 0.001); end
  def test_costs_am36; assert_in_epsilon(1842.6851576409124, worksheet.costs_am36, 0.001); end
  def test_costs_j36; assert_in_epsilon(210.48697350549674, worksheet.costs_j36, 0.001); end
  def test_costs_ad36; assert_in_epsilon(1577.8712027998765, worksheet.costs_ad36, 0.001); end
  def test_costs_an36; assert_in_epsilon(1788.3581763053733, worksheet.costs_an36, 0.001); end
  def test_costs_k36; assert_in_epsilon(233.94394373856767, worksheet.costs_k36, 0.001); end
  def test_costs_ae36; assert_in_epsilon(1414.846416640423, worksheet.costs_ae36, 0.001); end
  def test_costs_ao36; assert_in_epsilon(1648.7903603789907, worksheet.costs_ao36, 0.001); end
  def test_costs_l36; assert_in_epsilon(244.00608994673877, worksheet.costs_l36, 0.001); end
  def test_costs_af36; assert_in_epsilon(1248.2833123734276, worksheet.costs_af36, 0.001); end
  def test_costs_ap36; assert_in_epsilon(1492.2894023201663, worksheet.costs_ap36, 0.001); end
  def test_costs_m36; assert_in_epsilon(247.71449394964026, worksheet.costs_m36, 0.001); end
  def test_costs_ag36; assert_in_epsilon(1134.2127494053325, worksheet.costs_ag36, 0.001); end
  def test_costs_aq36; assert_in_epsilon(1381.9272433549727, worksheet.costs_aq36, 0.001); end
  def test_costs_n36; assert_in_epsilon(239.4986581756284, worksheet.costs_n36, 0.001); end
  def test_costs_ah36; assert_in_epsilon(997.1243278094438, worksheet.costs_ah36, 0.001); end
  def test_costs_ar36; assert_in_epsilon(1236.6229859850723, worksheet.costs_ar36, 0.001); end
  def test_costs_b37; assert_equal("XI.f", worksheet.costs_b37); end
  def test_costs_c37; assert_equal("Pulp & Paper Industry", worksheet.costs_c37); end
  def test_costs_d37; assert_equal("Industry", worksheet.costs_d37); end
  def test_costs_e37; assert_equal("MEUR", worksheet.costs_e37); end
  def test_costs_p37; assert_in_delta(0, (worksheet.costs_p37||0), 0.001); end
  def test_costs_q37; assert_in_delta(0, (worksheet.costs_q37||0), 0.001); end
  def test_costs_r37; assert_in_delta(0, (worksheet.costs_r37||0), 0.001); end
  def test_costs_s37; assert_in_delta(0, (worksheet.costs_s37||0), 0.001); end
  def test_costs_t37; assert_in_delta(0, (worksheet.costs_t37||0), 0.001); end
  def test_costs_u37; assert_in_delta(0, (worksheet.costs_u37||0), 0.001); end
  def test_costs_v37; assert_in_delta(0, (worksheet.costs_v37||0), 0.001); end
  def test_costs_w37; assert_in_delta(0, (worksheet.costs_w37||0), 0.001); end
  def test_costs_x37; assert_in_delta(0, (worksheet.costs_x37||0), 0.001); end
  def test_costs_f37; assert_in_delta(0, (worksheet.costs_f37||0), 0.001); end
  def test_costs_z37; assert_in_epsilon(524.7237281815229, worksheet.costs_z37, 0.001); end
  def test_costs_aj37; assert_in_epsilon(524.7237281815229, worksheet.costs_aj37, 0.001); end
  def test_costs_g37; assert_in_epsilon(18.072153783586177, worksheet.costs_g37, 0.001); end
  def test_costs_aa37; assert_in_epsilon(558.6307841663169, worksheet.costs_aa37, 0.001); end
  def test_costs_ak37; assert_in_epsilon(576.702937949903, worksheet.costs_ak37, 0.001); end
  def test_costs_h37; assert_in_epsilon(37.91111295790471, worksheet.costs_h37, 0.001); end
  def test_costs_ab37; assert_in_epsilon(564.8187486136273, worksheet.costs_ab37, 0.001); end
  def test_costs_al37; assert_in_epsilon(602.7298615715321, worksheet.costs_al37, 0.001); end
  def test_costs_i37; assert_in_epsilon(56.74113357355092, worksheet.costs_i37, 0.001); end
  def test_costs_ac37; assert_in_epsilon(541.8556732898826, worksheet.costs_ac37, 0.001); end
  def test_costs_am37; assert_in_epsilon(598.5968068634335, worksheet.costs_am37, 0.001); end
  def test_costs_j37; assert_in_epsilon(76.86014497270303, worksheet.costs_j37, 0.001); end
  def test_costs_ad37; assert_in_epsilon(530.6950896689351, worksheet.costs_ad37, 0.001); end
  def test_costs_an37; assert_in_epsilon(607.5552346416381, worksheet.costs_an37, 0.001); end
  def test_costs_k37; assert_in_epsilon(125.30836577472007, worksheet.costs_k37, 0.001); end
  def test_costs_ae37; assert_in_epsilon(518.4327519631923, worksheet.costs_ae37, 0.001); end
  def test_costs_ao37; assert_in_epsilon(643.7411177379124, worksheet.costs_ao37, 0.001); end
  def test_costs_l37; assert_in_epsilon(139.7474786771239, worksheet.costs_l37, 0.001); end
  def test_costs_af37; assert_in_epsilon(486.27521042812697, worksheet.costs_af37, 0.001); end
  def test_costs_ap37; assert_in_epsilon(626.0226891052508, worksheet.costs_ap37, 0.001); end
  def test_costs_m37; assert_in_epsilon(156.40638550509533, worksheet.costs_m37, 0.001); end
  def test_costs_ag37; assert_in_epsilon(466.5372694781842, worksheet.costs_ag37, 0.001); end
  def test_costs_aq37; assert_in_epsilon(622.9436549832795, worksheet.costs_aq37, 0.001); end
  def test_costs_n37; assert_in_epsilon(168.58544395136946, worksheet.costs_n37, 0.001); end
  def test_costs_ah37; assert_in_epsilon(433.1610321826648, worksheet.costs_ah37, 0.001); end
  def test_costs_ar37; assert_in_epsilon(601.7464761340343, worksheet.costs_ar37, 0.001); end
  def test_costs_b38; assert_equal("XI.g", worksheet.costs_b38); end
  def test_costs_c38; assert_equal("Oil & Gas Industry", worksheet.costs_c38); end
  def test_costs_d38; assert_equal("Industry", worksheet.costs_d38); end
  def test_costs_e38; assert_equal("MEUR", worksheet.costs_e38); end
  def test_costs_p38; assert_in_delta(0, (worksheet.costs_p38||0), 0.001); end
  def test_costs_q38; assert_in_delta(0, (worksheet.costs_q38||0), 0.001); end
  def test_costs_r38; assert_in_delta(0, (worksheet.costs_r38||0), 0.001); end
  def test_costs_s38; assert_in_delta(0, (worksheet.costs_s38||0), 0.001); end
  def test_costs_t38; assert_in_delta(0, (worksheet.costs_t38||0), 0.001); end
  def test_costs_u38; assert_in_delta(0, (worksheet.costs_u38||0), 0.001); end
  def test_costs_v38; assert_in_delta(0, (worksheet.costs_v38||0), 0.001); end
  def test_costs_w38; assert_in_delta(0, (worksheet.costs_w38||0), 0.001); end
  def test_costs_x38; assert_in_delta(0, (worksheet.costs_x38||0), 0.001); end
  def test_costs_f38; assert_in_delta(0, (worksheet.costs_f38||0), 0.001); end
  def test_costs_z38; assert_in_epsilon(781.9147767460593, worksheet.costs_z38, 0.001); end
  def test_costs_aj38; assert_in_epsilon(781.9147767460593, worksheet.costs_aj38, 0.001); end
  def test_costs_g38; assert_in_epsilon(-1.415084734885916, worksheet.costs_g38, 0.001); end
  def test_costs_aa38; assert_in_epsilon(784.2881990260523, worksheet.costs_aa38, 0.001); end
  def test_costs_ak38; assert_in_epsilon(782.8731142911664, worksheet.costs_ak38, 0.001); end
  def test_costs_h38; assert_in_epsilon(93.14292562983358, worksheet.costs_h38, 0.001); end
  def test_costs_ab38; assert_in_epsilon(534.7060278964719, worksheet.costs_ab38, 0.001); end
  def test_costs_al38; assert_in_epsilon(627.8489535263055, worksheet.costs_al38, 0.001); end
  def test_costs_i38; assert_in_epsilon(79.5904473716917, worksheet.costs_i38, 0.001); end
  def test_costs_ac38; assert_in_epsilon(439.63850098629234, worksheet.costs_ac38, 0.001); end
  def test_costs_am38; assert_in_epsilon(519.228948357984, worksheet.costs_am38, 0.001); end
  def test_costs_j38; assert_in_epsilon(84.31075941045931, worksheet.costs_j38, 0.001); end
  def test_costs_ad38; assert_in_epsilon(356.5553642105795, worksheet.costs_ad38, 0.001); end
  def test_costs_an38; assert_in_epsilon(440.8661236210388, worksheet.costs_an38, 0.001); end
  def test_costs_k38; assert_in_epsilon(77.31208518674316, worksheet.costs_k38, 0.001); end
  def test_costs_ae38; assert_in_epsilon(265.56959063749815, worksheet.costs_ae38, 0.001); end
  def test_costs_ao38; assert_in_epsilon(342.8816758242413, worksheet.costs_ao38, 0.001); end
  def test_costs_l38; assert_in_epsilon(68.63238451315317, worksheet.costs_l38, 0.001); end
  def test_costs_af38; assert_in_epsilon(197.7416673453606, worksheet.costs_af38, 0.001); end
  def test_costs_ap38; assert_in_epsilon(266.3740518585138, worksheet.costs_ap38, 0.001); end
  def test_costs_m38; assert_in_epsilon(57.90150102711188, worksheet.costs_m38, 0.001); end
  def test_costs_ag38; assert_in_epsilon(142.71892363491133, worksheet.costs_ag38, 0.001); end
  def test_costs_aq38; assert_in_epsilon(200.6204246620232, worksheet.costs_aq38, 0.001); end
  def test_costs_n38; assert_in_epsilon(45.34112748516871, worksheet.costs_n38, 0.001); end
  def test_costs_ah38; assert_in_epsilon(96.83883756957418, worksheet.costs_ah38, 0.001); end
  def test_costs_ar38; assert_in_epsilon(142.1799650547429, worksheet.costs_ar38, 0.001); end
  def test_costs_b39; assert_equal("XI.h", worksheet.costs_b39); end
  def test_costs_c39; assert_equal("Food, drinks and tobacco Industry", worksheet.costs_c39); end
  def test_costs_d39; assert_equal("Industry", worksheet.costs_d39); end
  def test_costs_e39; assert_equal("MEUR", worksheet.costs_e39); end
  def test_costs_p39; assert_in_delta(0, (worksheet.costs_p39||0), 0.001); end
  def test_costs_q39; assert_in_delta(0, (worksheet.costs_q39||0), 0.001); end
  def test_costs_r39; assert_in_delta(0, (worksheet.costs_r39||0), 0.001); end
  def test_costs_s39; assert_in_delta(0, (worksheet.costs_s39||0), 0.001); end
  def test_costs_t39; assert_in_delta(0, (worksheet.costs_t39||0), 0.001); end
  def test_costs_u39; assert_in_delta(0, (worksheet.costs_u39||0), 0.001); end
  def test_costs_v39; assert_in_delta(0, (worksheet.costs_v39||0), 0.001); end
  def test_costs_w39; assert_in_delta(0, (worksheet.costs_w39||0), 0.001); end
  def test_costs_x39; assert_in_delta(0, (worksheet.costs_x39||0), 0.001); end
  def test_costs_f39; assert_in_delta(0, (worksheet.costs_f39||0), 0.001); end
  def test_costs_z39; assert_in_epsilon(614.2587734585472, worksheet.costs_z39, 0.001); end
  def test_costs_aj39; assert_in_epsilon(614.2587734585472, worksheet.costs_aj39, 0.001); end
  def test_costs_g39; assert_in_epsilon(30.209679096703546, worksheet.costs_g39, 0.001); end
  def test_costs_aa39; assert_in_epsilon(580.0126843054595, worksheet.costs_aa39, 0.001); end
  def test_costs_ak39; assert_in_epsilon(610.2223634021631, worksheet.costs_ak39, 0.001); end
  def test_costs_h39; assert_in_epsilon(64.09378809945629, worksheet.costs_h39, 0.001); end
  def test_costs_ab39; assert_in_epsilon(584.1684276738491, worksheet.costs_ab39, 0.001); end
  def test_costs_al39; assert_in_epsilon(648.2622157733055, worksheet.costs_al39, 0.001); end
  def test_costs_i39; assert_in_epsilon(95.7826416538445, worksheet.costs_i39, 0.001); end
  def test_costs_ac39; assert_in_epsilon(546.3275063861636, worksheet.costs_ac39, 0.001); end
  def test_costs_am39; assert_in_epsilon(642.1101480400081, worksheet.costs_am39, 0.001); end
  def test_costs_j39; assert_in_epsilon(143.87056861730727, worksheet.costs_j39, 0.001); end
  def test_costs_ad39; assert_in_epsilon(522.1863558513204, worksheet.costs_ad39, 0.001); end
  def test_costs_an39; assert_in_epsilon(666.0569244686277, worksheet.costs_an39, 0.001); end
  def test_costs_k39; assert_in_epsilon(190.46643835300196, worksheet.costs_k39, 0.001); end
  def test_costs_ae39; assert_in_epsilon(493.6422334358601, worksheet.costs_ae39, 0.001); end
  def test_costs_ao39; assert_in_epsilon(684.108671788862, worksheet.costs_ao39, 0.001); end
  def test_costs_l39; assert_in_epsilon(232.7546235539925, worksheet.costs_l39, 0.001); end
  def test_costs_af39; assert_in_epsilon(453.82859638454073, worksheet.costs_af39, 0.001); end
  def test_costs_ap39; assert_in_epsilon(686.5832199385333, worksheet.costs_ap39, 0.001); end
  def test_costs_m39; assert_in_epsilon(279.8793003510379, worksheet.costs_m39, 0.001); end
  def test_costs_ag39; assert_in_epsilon(426.85484072675285, worksheet.costs_ag39, 0.001); end
  def test_costs_aq39; assert_in_epsilon(706.7341410777908, worksheet.costs_aq39, 0.001); end
  def test_costs_n39; assert_in_epsilon(317.64776807741134, worksheet.costs_n39, 0.001); end
  def test_costs_ah39; assert_in_epsilon(382.4514657033396, worksheet.costs_ah39, 0.001); end
  def test_costs_ar39; assert_in_epsilon(700.0992337807509, worksheet.costs_ar39, 0.001); end
  def test_costs_b40; assert_equal("XI.i", worksheet.costs_b40); end
  def test_costs_c40; assert_equal("Machines Industry", worksheet.costs_c40); end
  def test_costs_d40; assert_equal("Industry", worksheet.costs_d40); end
  def test_costs_e40; assert_equal("MEUR", worksheet.costs_e40); end
  def test_costs_p40; assert_in_delta(0, (worksheet.costs_p40||0), 0.001); end
  def test_costs_q40; assert_in_delta(0, (worksheet.costs_q40||0), 0.001); end
  def test_costs_r40; assert_in_delta(0, (worksheet.costs_r40||0), 0.001); end
  def test_costs_s40; assert_in_delta(0, (worksheet.costs_s40||0), 0.001); end
  def test_costs_t40; assert_in_delta(0, (worksheet.costs_t40||0), 0.001); end
  def test_costs_u40; assert_in_delta(0, (worksheet.costs_u40||0), 0.001); end
  def test_costs_v40; assert_in_delta(0, (worksheet.costs_v40||0), 0.001); end
  def test_costs_w40; assert_in_delta(0, (worksheet.costs_w40||0), 0.001); end
  def test_costs_x40; assert_in_delta(0, (worksheet.costs_x40||0), 0.001); end
  def test_costs_f40; assert_in_delta(0, (worksheet.costs_f40||0), 0.001); end
  def test_costs_z40; assert_in_delta(0, (worksheet.costs_z40||0), 0.001); end
  def test_costs_aj40; assert_in_delta(0, (worksheet.costs_aj40||0), 0.001); end
  def test_costs_g40; assert_in_delta(0, (worksheet.costs_g40||0), 0.001); end
  def test_costs_aa40; assert_in_delta(0, (worksheet.costs_aa40||0), 0.001); end
  def test_costs_ak40; assert_in_delta(0, (worksheet.costs_ak40||0), 0.001); end
  def test_costs_h40; assert_in_delta(0, (worksheet.costs_h40||0), 0.001); end
  def test_costs_ab40; assert_in_delta(0, (worksheet.costs_ab40||0), 0.001); end
  def test_costs_al40; assert_in_delta(0, (worksheet.costs_al40||0), 0.001); end
  def test_costs_i40; assert_in_delta(0, (worksheet.costs_i40||0), 0.001); end
  def test_costs_ac40; assert_in_delta(0, (worksheet.costs_ac40||0), 0.001); end
  def test_costs_am40; assert_in_delta(0, (worksheet.costs_am40||0), 0.001); end
  def test_costs_j40; assert_in_delta(0, (worksheet.costs_j40||0), 0.001); end
  def test_costs_ad40; assert_in_delta(0, (worksheet.costs_ad40||0), 0.001); end
  def test_costs_an40; assert_in_delta(0, (worksheet.costs_an40||0), 0.001); end
  def test_costs_k40; assert_in_delta(0, (worksheet.costs_k40||0), 0.001); end
  def test_costs_ae40; assert_in_delta(0, (worksheet.costs_ae40||0), 0.001); end
  def test_costs_ao40; assert_in_delta(0, (worksheet.costs_ao40||0), 0.001); end
  def test_costs_l40; assert_in_delta(0, (worksheet.costs_l40||0), 0.001); end
  def test_costs_af40; assert_in_delta(0, (worksheet.costs_af40||0), 0.001); end
  def test_costs_ap40; assert_in_delta(0, (worksheet.costs_ap40||0), 0.001); end
  def test_costs_m40; assert_in_delta(0, (worksheet.costs_m40||0), 0.001); end
  def test_costs_ag40; assert_in_delta(0, (worksheet.costs_ag40||0), 0.001); end
  def test_costs_aq40; assert_in_delta(0, (worksheet.costs_aq40||0), 0.001); end
  def test_costs_n40; assert_in_delta(0, (worksheet.costs_n40||0), 0.001); end
  def test_costs_ah40; assert_in_delta(0, (worksheet.costs_ah40||0), 0.001); end
  def test_costs_ar40; assert_in_delta(0, (worksheet.costs_ar40||0), 0.001); end
  def test_costs_b41; assert_equal("XI.j", worksheet.costs_b41); end
  def test_costs_c41; assert_equal("Non-Ferrous metals Industry", worksheet.costs_c41); end
  def test_costs_d41; assert_equal("Industry", worksheet.costs_d41); end
  def test_costs_e41; assert_equal("MEUR", worksheet.costs_e41); end
  def test_costs_p41; assert_in_delta(0, (worksheet.costs_p41||0), 0.001); end
  def test_costs_q41; assert_in_delta(0, (worksheet.costs_q41||0), 0.001); end
  def test_costs_r41; assert_in_delta(0, (worksheet.costs_r41||0), 0.001); end
  def test_costs_s41; assert_in_delta(0, (worksheet.costs_s41||0), 0.001); end
  def test_costs_t41; assert_in_delta(0, (worksheet.costs_t41||0), 0.001); end
  def test_costs_u41; assert_in_delta(0, (worksheet.costs_u41||0), 0.001); end
  def test_costs_v41; assert_in_delta(0, (worksheet.costs_v41||0), 0.001); end
  def test_costs_w41; assert_in_delta(0, (worksheet.costs_w41||0), 0.001); end
  def test_costs_x41; assert_in_delta(0, (worksheet.costs_x41||0), 0.001); end
  def test_costs_f41; assert_in_delta(0, (worksheet.costs_f41||0), 0.001); end
  def test_costs_z41; assert_in_epsilon(112.37980694519494, worksheet.costs_z41, 0.001); end
  def test_costs_aj41; assert_in_epsilon(112.37980694519494, worksheet.costs_aj41, 0.001); end
  def test_costs_g41; assert_in_epsilon(6.160218729696912, worksheet.costs_g41, 0.001); end
  def test_costs_aa41; assert_in_epsilon(163.46296648009186, worksheet.costs_aa41, 0.001); end
  def test_costs_ak41; assert_in_epsilon(169.62318520978877, worksheet.costs_ak41, 0.001); end
  def test_costs_h41; assert_in_epsilon(12.42396840094248, worksheet.costs_h41, 0.001); end
  def test_costs_ab41; assert_in_epsilon(161.46917474117143, worksheet.costs_ab41, 0.001); end
  def test_costs_al41; assert_in_epsilon(173.8931431421139, worksheet.costs_al41, 0.001); end
  def test_costs_i41; assert_in_epsilon(19.5096654304632, worksheet.costs_i41, 0.001); end
  def test_costs_ac41; assert_in_epsilon(163.96566616365666, worksheet.costs_ac41, 0.001); end
  def test_costs_am41; assert_in_epsilon(183.47533159411987, worksheet.costs_am41, 0.001); end
  def test_costs_j41; assert_in_epsilon(29.46960058205079, worksheet.costs_j41, 0.001); end
  def test_costs_ad41; assert_in_epsilon(164.27185739724746, worksheet.costs_ad41, 0.001); end
  def test_costs_an41; assert_in_epsilon(193.74145797929825, worksheet.costs_an41, 0.001); end
  def test_costs_k41; assert_in_epsilon(38.23592785085739, worksheet.costs_k41, 0.001); end
  def test_costs_ae41; assert_in_epsilon(160.94534216491908, worksheet.costs_ae41, 0.001); end
  def test_costs_ao41; assert_in_epsilon(199.18127001577648, worksheet.costs_ao41, 0.001); end
  def test_costs_l41; assert_in_epsilon(45.18113411783779, worksheet.costs_l41, 0.001); end
  def test_costs_af41; assert_in_epsilon(150.58493500992992, worksheet.costs_af41, 0.001); end
  def test_costs_ap41; assert_in_epsilon(195.7660691277677, worksheet.costs_ap41, 0.001); end
  def test_costs_m41; assert_in_epsilon(51.284267016480726, worksheet.costs_m41, 0.001); end
  def test_costs_ag41; assert_in_epsilon(140.08834545658326, worksheet.costs_ag41, 0.001); end
  def test_costs_aq41; assert_in_epsilon(191.37261247306398, worksheet.costs_aq41, 0.001); end
  def test_costs_n41; assert_in_epsilon(57.13205170218963, worksheet.costs_n41, 0.001); end
  def test_costs_ah41; assert_in_epsilon(131.59030126469008, worksheet.costs_ah41, 0.001); end
  def test_costs_ar41; assert_in_epsilon(188.72235296687973, worksheet.costs_ar41, 0.001); end
  def test_costs_b42; assert_equal("XI.k", worksheet.costs_b42); end
  def test_costs_c42; assert_equal("Construction industry", worksheet.costs_c42); end
  def test_costs_d42; assert_equal("Industry", worksheet.costs_d42); end
  def test_costs_e42; assert_equal("MEUR", worksheet.costs_e42); end
  def test_costs_p42; assert_in_delta(0, (worksheet.costs_p42||0), 0.001); end
  def test_costs_q42; assert_in_delta(0, (worksheet.costs_q42||0), 0.001); end
  def test_costs_r42; assert_in_delta(0, (worksheet.costs_r42||0), 0.001); end
  def test_costs_s42; assert_in_delta(0, (worksheet.costs_s42||0), 0.001); end
  def test_costs_t42; assert_in_delta(0, (worksheet.costs_t42||0), 0.001); end
  def test_costs_u42; assert_in_delta(0, (worksheet.costs_u42||0), 0.001); end
  def test_costs_v42; assert_in_delta(0, (worksheet.costs_v42||0), 0.001); end
  def test_costs_w42; assert_in_delta(0, (worksheet.costs_w42||0), 0.001); end
  def test_costs_x42; assert_in_delta(0, (worksheet.costs_x42||0), 0.001); end
  def test_costs_f42; assert_in_delta(0, (worksheet.costs_f42||0), 0.001); end
  def test_costs_z42; assert_in_epsilon(62.94103622824142, worksheet.costs_z42, 0.001); end
  def test_costs_aj42; assert_in_epsilon(62.94103622824142, worksheet.costs_aj42, 0.001); end
  def test_costs_g42; assert_in_epsilon(2.809462864552144, worksheet.costs_g42, 0.001); end
  def test_costs_aa42; assert_in_epsilon(73.51947484597245, worksheet.costs_aa42, 0.001); end
  def test_costs_ak42; assert_in_epsilon(76.3289377105246, worksheet.costs_ak42, 0.001); end
  def test_costs_h42; assert_in_epsilon(6.48117182977787, worksheet.costs_h42, 0.001); end
  def test_costs_ab42; assert_in_epsilon(81.88498861395226, worksheet.costs_ab42, 0.001); end
  def test_costs_al42; assert_in_epsilon(88.36616044373012, worksheet.costs_al42, 0.001); end
  def test_costs_i42; assert_in_epsilon(10.919108246299865, worksheet.costs_i42, 0.001); end
  def test_costs_ac42; assert_in_epsilon(87.78538174164908, worksheet.costs_ac42, 0.001); end
  def test_costs_am42; assert_in_epsilon(98.70448998794895, worksheet.costs_am42, 0.001); end
  def test_costs_j42; assert_in_epsilon(21.2113986102406, worksheet.costs_j42, 0.001); end
  def test_costs_ad42; assert_in_epsilon(94.02145924069151, worksheet.costs_ad42, 0.001); end
  def test_costs_an42; assert_in_epsilon(115.2328578509321, worksheet.costs_an42, 0.001); end
  def test_costs_k42; assert_in_epsilon(29.870775455660524, worksheet.costs_k42, 0.001); end
  def test_costs_ae42; assert_in_epsilon(93.66975718469499, worksheet.costs_ae42, 0.001); end
  def test_costs_ao42; assert_in_epsilon(123.54053264035551, worksheet.costs_ao42, 0.001); end
  def test_costs_l42; assert_in_epsilon(37.73067945131049, worksheet.costs_l42, 0.001); end
  def test_costs_af42; assert_in_epsilon(91.87902177196418, worksheet.costs_af42, 0.001); end
  def test_costs_ap42; assert_in_epsilon(129.60970122327467, worksheet.costs_ap42, 0.001); end
  def test_costs_m42; assert_in_epsilon(45.262613373281944, worksheet.costs_m42, 0.001); end
  def test_costs_ag42; assert_in_epsilon(89.94343662576485, worksheet.costs_ag42, 0.001); end
  def test_costs_aq42; assert_in_epsilon(135.2060499990468, worksheet.costs_aq42, 0.001); end
  def test_costs_n42; assert_in_epsilon(52.124709482836835, worksheet.costs_n42, 0.001); end
  def test_costs_ah42; assert_in_epsilon(86.26090035572126, worksheet.costs_ah42, 0.001); end
  def test_costs_ar42; assert_in_epsilon(138.38560983855808, worksheet.costs_ar42, 0.001); end
  def test_costs_b43; assert_equal("XI.l", worksheet.costs_b43); end
  def test_costs_c43; assert_equal("Other Industry", worksheet.costs_c43); end
  def test_costs_d43; assert_equal("Industry", worksheet.costs_d43); end
  def test_costs_e43; assert_equal("MEUR", worksheet.costs_e43); end
  def test_costs_p43; assert_in_delta(0, (worksheet.costs_p43||0), 0.001); end
  def test_costs_q43; assert_in_delta(0, (worksheet.costs_q43||0), 0.001); end
  def test_costs_r43; assert_in_delta(0, (worksheet.costs_r43||0), 0.001); end
  def test_costs_s43; assert_in_delta(0, (worksheet.costs_s43||0), 0.001); end
  def test_costs_t43; assert_in_delta(0, (worksheet.costs_t43||0), 0.001); end
  def test_costs_u43; assert_in_delta(0, (worksheet.costs_u43||0), 0.001); end
  def test_costs_v43; assert_in_delta(0, (worksheet.costs_v43||0), 0.001); end
  def test_costs_w43; assert_in_delta(0, (worksheet.costs_w43||0), 0.001); end
  def test_costs_x43; assert_in_delta(0, (worksheet.costs_x43||0), 0.001); end
  def test_costs_f43; assert_in_delta(0, (worksheet.costs_f43||0), 0.001); end
  def test_costs_z43; assert_in_delta(0, (worksheet.costs_z43||0), 0.001); end
  def test_costs_aj43; assert_in_delta(0, (worksheet.costs_aj43||0), 0.001); end
  def test_costs_g43; assert_in_delta(0, (worksheet.costs_g43||0), 0.001); end
  def test_costs_aa43; assert_in_delta(0, (worksheet.costs_aa43||0), 0.001); end
  def test_costs_ak43; assert_in_delta(0, (worksheet.costs_ak43||0), 0.001); end
  def test_costs_h43; assert_in_delta(0, (worksheet.costs_h43||0), 0.001); end
  def test_costs_ab43; assert_in_delta(0, (worksheet.costs_ab43||0), 0.001); end
  def test_costs_al43; assert_in_delta(0, (worksheet.costs_al43||0), 0.001); end
  def test_costs_i43; assert_in_delta(0, (worksheet.costs_i43||0), 0.001); end
  def test_costs_ac43; assert_in_delta(0, (worksheet.costs_ac43||0), 0.001); end
  def test_costs_am43; assert_in_delta(0, (worksheet.costs_am43||0), 0.001); end
  def test_costs_j43; assert_in_delta(0, (worksheet.costs_j43||0), 0.001); end
  def test_costs_ad43; assert_in_delta(0, (worksheet.costs_ad43||0), 0.001); end
  def test_costs_an43; assert_in_delta(0, (worksheet.costs_an43||0), 0.001); end
  def test_costs_k43; assert_in_delta(0, (worksheet.costs_k43||0), 0.001); end
  def test_costs_ae43; assert_in_delta(0, (worksheet.costs_ae43||0), 0.001); end
  def test_costs_ao43; assert_in_delta(0, (worksheet.costs_ao43||0), 0.001); end
  def test_costs_l43; assert_in_delta(0, (worksheet.costs_l43||0), 0.001); end
  def test_costs_af43; assert_in_delta(0, (worksheet.costs_af43||0), 0.001); end
  def test_costs_ap43; assert_in_delta(0, (worksheet.costs_ap43||0), 0.001); end
  def test_costs_m43; assert_in_delta(0, (worksheet.costs_m43||0), 0.001); end
  def test_costs_ag43; assert_in_delta(0, (worksheet.costs_ag43||0), 0.001); end
  def test_costs_aq43; assert_in_delta(0, (worksheet.costs_aq43||0), 0.001); end
  def test_costs_n43; assert_in_delta(0, (worksheet.costs_n43||0), 0.001); end
  def test_costs_ah43; assert_in_delta(0, (worksheet.costs_ah43||0), 0.001); end
  def test_costs_ar43; assert_in_delta(0, (worksheet.costs_ar43||0), 0.001); end
  def test_costs_b44; assert_equal("XII.a", worksheet.costs_b44); end
  def test_costs_c44; assert_equal("Domestic passenger transport", worksheet.costs_c44); end
  def test_costs_d44; assert_equal("Transport", worksheet.costs_d44); end
  def test_costs_e44; assert_equal("MEUR", worksheet.costs_e44); end
  def test_costs_f44; assert_in_epsilon(6075.543205190061, worksheet.costs_f44, 0.001); end
  def test_costs_p44; assert_in_epsilon(7486.845974896208, worksheet.costs_p44, 0.001); end
  def test_costs_z44; assert_in_epsilon(2591.2621353802365, worksheet.costs_z44, 0.001); end
  def test_costs_aj44; assert_in_epsilon(16153.651315466506, worksheet.costs_aj44, 0.001); end
  def test_costs_g44; assert_in_epsilon(6075.543205190061, worksheet.costs_g44, 0.001); end
  def test_costs_q44; assert_in_epsilon(6728.629963911515, worksheet.costs_q44, 0.001); end
  def test_costs_aa180; assert_in_epsilon(219.34608211813438, worksheet.costs_aa180, 0.001); end
  def test_costs_aa181; assert_in_delta(0, (worksheet.costs_aa181||0), 0.001); end
  def test_costs_aa182; assert_in_epsilon(34.417701889904954, worksheet.costs_aa182, 0.001); end
  def test_costs_aa187; assert_in_epsilon(62.03750249852136, worksheet.costs_aa187, 0.001); end
  def test_costs_aa192; assert_in_epsilon(80.5, worksheet.costs_aa192, 0.001); end
  def test_costs_aa193; assert_in_epsilon(87.72462425848188, worksheet.costs_aa193, 0.001); end
  def test_costs_aa44; assert_in_epsilon(2075.8469285339256, worksheet.costs_aa44, 0.001); end
  def test_costs_ak44; assert_in_epsilon(14880.0200976355, worksheet.costs_ak44, 0.001); end
  def test_costs_h44; assert_in_epsilon(8991.752299997373, worksheet.costs_h44, 0.001); end
  def test_costs_r44; assert_in_epsilon(6776.937479066358, worksheet.costs_r44, 0.001); end
  def test_costs_ab180; assert_in_epsilon(224.45960650272357, worksheet.costs_ab180, 0.001); end
  def test_costs_ab181; assert_in_delta(0, (worksheet.costs_ab181||0), 0.001); end
  def test_costs_ab182; assert_in_epsilon(34.417701889904954, worksheet.costs_ab182, 0.001); end
  def test_costs_ab187; assert_in_epsilon(75.93633880324643, worksheet.costs_ab187, 0.001); end
  def test_costs_ab192; assert_in_epsilon(89, worksheet.costs_ab192, 0.001); end
  def test_costs_ab193; assert_in_epsilon(94.2526770556935, worksheet.costs_ab193, 0.001); end
  def test_costs_ab44; assert_in_epsilon(2195.427756866953, worksheet.costs_ab44, 0.001); end
  def test_costs_al44; assert_in_epsilon(17964.117535930684, worksheet.costs_al44, 0.001); end
  def test_costs_i44; assert_in_epsilon(8970.901222872544, worksheet.costs_i44, 0.001); end
  def test_costs_s44; assert_in_epsilon(6388.528798178614, worksheet.costs_s44, 0.001); end
  def test_costs_ac180; assert_in_epsilon(229.31369979212843, worksheet.costs_ac180, 0.001); end
  def test_costs_ac181; assert_in_epsilon(134.11664754612804, worksheet.costs_ac181, 0.001); end
  def test_costs_ac182; assert_in_epsilon(40.44223126063423, worksheet.costs_ac182, 0.001); end
  def test_costs_ac187; assert_in_epsilon(72.97769026734262, worksheet.costs_ac187, 0.001); end
  def test_costs_ac192; assert_in_epsilon(91.5, worksheet.costs_ac192, 0.001); end
  def test_costs_ac193; assert_in_epsilon(89.1684945468043, worksheet.costs_ac193, 0.001); end
  def test_costs_ac44; assert_in_epsilon(2084.417004932175, worksheet.costs_ac44, 0.001); end
  def test_costs_am44; assert_in_epsilon(17443.847025983334, worksheet.costs_am44, 0.001); end
  def test_costs_j44; assert_in_epsilon(8960.349073748663, worksheet.costs_j44, 0.001); end
  def test_costs_t44; assert_in_epsilon(5760.037058066795, worksheet.costs_t44, 0.001); end
  def test_costs_ad180; assert_in_epsilon(233.93103166499134, worksheet.costs_ad180, 0.001); end
  def test_costs_ad181; assert_in_epsilon(144.78278392953465, worksheet.costs_ad181, 0.001); end
  def test_costs_ad182; assert_in_epsilon(44.92684642068442, worksheet.costs_ad182, 0.001); end
  def test_costs_ad187; assert_in_epsilon(71.80234005117518, worksheet.costs_ad187, 0.001); end
  def test_costs_ad192; assert_in_epsilon(94, worksheet.costs_ad192, 0.001); end
  def test_costs_ad193; assert_in_epsilon(89.83759272210993, worksheet.costs_ad193, 0.001); end
  def test_costs_ad44; assert_in_epsilon(1809.391076460165, worksheet.costs_ad44, 0.001); end
  def test_costs_an44; assert_in_epsilon(16529.777208275624, worksheet.costs_an44, 0.001); end
  def test_costs_k44; assert_in_epsilon(8241.482955605974, worksheet.costs_k44, 0.001); end
  def test_costs_u44; assert_in_epsilon(4873.471606306717, worksheet.costs_u44, 0.001); end
  def test_costs_ae180; assert_in_epsilon(233.30202474968505, worksheet.costs_ae180, 0.001); end
  def test_costs_ae181; assert_in_epsilon(149.14086519541073, worksheet.costs_ae181, 0.001); end
  def test_costs_ae182; assert_in_epsilon(51.778117806542255, worksheet.costs_ae182, 0.001); end
  def test_costs_ae187; assert_in_epsilon(71.18855032111045, worksheet.costs_ae187, 0.001); end
  def test_costs_ae192; assert_in_epsilon(92.5, worksheet.costs_ae192, 0.001); end
  def test_costs_ae193; assert_in_epsilon(93.7096237090806, worksheet.costs_ae193, 0.001); end
  def test_costs_ae44; assert_in_epsilon(1422.5873445982959, worksheet.costs_ae44, 0.001); end
  def test_costs_ao44; assert_in_epsilon(14537.541906510987, worksheet.costs_ao44, 0.001); end
  def test_costs_l44; assert_in_epsilon(7433.324963844984, worksheet.costs_l44, 0.001); end
  def test_costs_v44; assert_in_epsilon(3855.3583944496386, worksheet.costs_v44, 0.001); end
  def test_costs_af180; assert_in_epsilon(232.80244210315146, worksheet.costs_af180, 0.001); end
  def test_costs_af181; assert_in_epsilon(153.58944995021068, worksheet.costs_af181, 0.001); end
  def test_costs_af182; assert_in_epsilon(54.50100792472923, worksheet.costs_af182, 0.001); end
  def test_costs_af187; assert_in_epsilon(70.021095303922, worksheet.costs_af187, 0.001); end
  def test_costs_af192; assert_in_epsilon(91, worksheet.costs_af192, 0.001); end
  def test_costs_af193; assert_in_epsilon(92.9893924252499, worksheet.costs_af193, 0.001); end
  def test_costs_af44; assert_in_epsilon(1195.6458783883277, worksheet.costs_af44, 0.001); end
  def test_costs_ap44; assert_in_epsilon(12484.329236682952, worksheet.costs_ap44, 0.001); end
  def test_costs_m44; assert_in_epsilon(6732.591783806974, worksheet.costs_m44, 0.001); end
  def test_costs_w44; assert_in_epsilon(2733.261081212122, worksheet.costs_w44, 0.001); end
  def test_costs_ag180; assert_in_epsilon(232.4259406484369, worksheet.costs_ag180, 0.001); end
  def test_costs_ag181; assert_in_epsilon(158.1282348302846, worksheet.costs_ag181, 0.001); end
  def test_costs_ag182; assert_in_epsilon(74.49386013876655, worksheet.costs_ag182, 0.001); end
  def test_costs_ag187; assert_in_epsilon(68.47562467714164, worksheet.costs_ag187, 0.001); end
  def test_costs_ag192; assert_in_epsilon(90.5, worksheet.costs_ag192, 0.001); end
  def test_costs_ag193; assert_in_epsilon(99.77027956990811, worksheet.costs_ag193, 0.001); end
  def test_costs_ag44; assert_in_epsilon(1013.2214900041047, worksheet.costs_ag44, 0.001); end
  def test_costs_aq44; assert_in_epsilon(10479.074355023202, worksheet.costs_aq44, 0.001); end
  def test_costs_n44; assert_in_epsilon(4994.14223709372, worksheet.costs_n44, 0.001); end
  def test_costs_x44; assert_in_epsilon(1573.0750649942747, worksheet.costs_x44, 0.001); end
  def test_costs_ah44; assert_in_epsilon(824.1471546875632, worksheet.costs_ah44, 0.001); end
  def test_costs_ar44; assert_in_epsilon(7391.364456775558, worksheet.costs_ar44, 0.001); end
  def test_costs_b45; assert_equal("XII.b", worksheet.costs_b45); end
  def test_costs_c45; assert_equal("Domestic freight", worksheet.costs_c45); end
  def test_costs_d45; assert_equal("Transport", worksheet.costs_d45); end
  def test_costs_e45; assert_equal("MEUR", worksheet.costs_e45); end
  def test_costs_f45; assert_in_delta(0, (worksheet.costs_f45||0), 0.001); end
  def test_costs_p45; assert_in_delta(0, (worksheet.costs_p45||0), 0.001); end
  def test_costs_z45; assert_in_epsilon(1425.5601695442965, worksheet.costs_z45, 0.001); end
  def test_costs_aj45; assert_in_epsilon(1425.5601695442965, worksheet.costs_aj45, 0.001); end
  def test_costs_g45; assert_in_epsilon(948.934803110466, worksheet.costs_g45, 0.001); end
  def test_costs_q45; assert_in_epsilon(931.384862099297, worksheet.costs_q45, 0.001); end
  def test_costs_aa45; assert_in_epsilon(1156.6719687747063, worksheet.costs_aa45, 0.001); end
  def test_costs_ak45; assert_in_epsilon(3036.9916339844694, worksheet.costs_ak45, 0.001); end
  def test_costs_h45; assert_in_epsilon(939.4898603322255, worksheet.costs_h45, 0.001); end
  def test_costs_r45; assert_in_epsilon(917.8715799446678, worksheet.costs_r45, 0.001); end
  def test_costs_ab45; assert_in_epsilon(1331.6086389335924, worksheet.costs_ab45, 0.001); end
  def test_costs_al45; assert_in_epsilon(3188.970079210486, worksheet.costs_al45, 0.001); end
  def test_costs_i45; assert_in_epsilon(921.4923343591296, worksheet.costs_i45, 0.001); end
  def test_costs_s45; assert_in_epsilon(891.4236654290994, worksheet.costs_s45, 0.001); end
  def test_costs_ac45; assert_in_epsilon(1486.7976571344095, worksheet.costs_ac45, 0.001); end
  def test_costs_am45; assert_in_epsilon(3299.7136569226386, worksheet.costs_am45, 0.001); end
  def test_costs_j45; assert_in_epsilon(905.325271873643, worksheet.costs_j45, 0.001); end
  def test_costs_t45; assert_in_epsilon(866.1709469566579, worksheet.costs_t45, 0.001); end
  def test_costs_ad45; assert_in_epsilon(1627.4707904739982, worksheet.costs_ad45, 0.001); end
  def test_costs_an45; assert_in_epsilon(3398.967009304299, worksheet.costs_an45, 0.001); end
  def test_costs_k45; assert_in_epsilon(891.0801615174437, worksheet.costs_k45, 0.001); end
  def test_costs_u45; assert_in_epsilon(842.1892174388353, worksheet.costs_u45, 0.001); end
  def test_costs_ae45; assert_in_epsilon(1630.2870465631945, worksheet.costs_ae45, 0.001); end
  def test_costs_ao45; assert_in_epsilon(3363.5564255194736, worksheet.costs_ao45, 0.001); end
  def test_costs_l45; assert_in_epsilon(878.84849193221, worksheet.costs_l45, 0.001); end
  def test_costs_v45; assert_in_epsilon(819.5542697871243, worksheet.costs_v45, 0.001); end
  def test_costs_af45; assert_in_epsilon(1617.1037275617775, worksheet.costs_af45, 0.001); end
  def test_costs_ap45; assert_in_epsilon(3315.5064892811115, worksheet.costs_ap45, 0.001); end
  def test_costs_m45; assert_in_epsilon(868.72175175962, worksheet.costs_m45, 0.001); end
  def test_costs_w45; assert_in_epsilon(798.3418969130173, worksheet.costs_w45, 0.001); end
  def test_costs_ag45; assert_in_epsilon(1604.6372160486246, worksheet.costs_ag45, 0.001); end
  def test_costs_aq45; assert_in_epsilon(3271.700864721262, worksheet.costs_aq45, 0.001); end
  def test_costs_n45; assert_in_epsilon(860.7914296413514, worksheet.costs_n45, 0.001); end
  def test_costs_x45; assert_in_epsilon(778.6278917280066, worksheet.costs_x45, 0.001); end
  def test_costs_ah45; assert_in_epsilon(1567.4947805131233, worksheet.costs_ah45, 0.001); end
  def test_costs_ar45; assert_in_epsilon(3206.914101882481, worksheet.costs_ar45, 0.001); end
  def test_costs_b46; assert_equal("XII.c", worksheet.costs_b46); end
  def test_costs_c46; assert_equal("International aviation", worksheet.costs_c46); end
  def test_costs_d46; assert_equal("Transport", worksheet.costs_d46); end
  def test_costs_e46; assert_equal("MEUR", worksheet.costs_e46); end
  def test_costs_f46; assert_in_epsilon(51.85300481437862, worksheet.costs_f46, 0.001); end
  def test_costs_p46; assert_in_epsilon(25.06668687658108, worksheet.costs_p46, 0.001); end
  def test_costs_z46; assert_in_epsilon(675.5219023389548, worksheet.costs_z46, 0.001); end
  def test_costs_aj46; assert_in_epsilon(752.4415940299144, worksheet.costs_aj46, 0.001); end
  def test_costs_g46; assert_in_epsilon(267.47191520549194, worksheet.costs_g46, 0.001); end
  def test_costs_q46; assert_in_epsilon(129.30079502116618, worksheet.costs_q46, 0.001); end
  def test_costs_aa46; assert_in_epsilon(538.1968025868482, worksheet.costs_aa46, 0.001); end
  def test_costs_ak46; assert_in_epsilon(934.9695128135063, worksheet.costs_ak46, 0.001); end
  def test_costs_h46; assert_in_epsilon(265.5479642920472, worksheet.costs_h46, 0.001); end
  def test_costs_r46; assert_in_epsilon(128.3707221105244, worksheet.costs_r46, 0.001); end
  def test_costs_ab46; assert_in_epsilon(606.9844244858557, worksheet.costs_ab46, 0.001); end
  def test_costs_al46; assert_in_epsilon(1000.9031108884274, worksheet.costs_al46, 0.001); end
  def test_costs_i46; assert_in_epsilon(261.7277407888016, worksheet.costs_i46, 0.001); end
  def test_costs_s46; assert_in_epsilon(126.52395649496918, worksheet.costs_s46, 0.001); end
  def test_costs_ac46; assert_in_epsilon(673.8244769008907, worksheet.costs_ac46, 0.001); end
  def test_costs_am46; assert_in_epsilon(1062.0761741846613, worksheet.costs_am46, 0.001); end
  def test_costs_j46; assert_in_epsilon(257.9624757472173, worksheet.costs_j46, 0.001); end
  def test_costs_t46; assert_in_epsilon(124.7037588006871, worksheet.costs_t46, 0.001); end
  def test_costs_ad46; assert_in_epsilon(738.1395997110983, worksheet.costs_ad46, 0.001); end
  def test_costs_an46; assert_in_epsilon(1120.8058342590027, worksheet.costs_an46, 0.001); end
  def test_costs_k46; assert_in_epsilon(254.2513785244155, worksheet.costs_k46, 0.001); end
  def test_costs_u46; assert_in_epsilon(122.90974681651124, worksheet.costs_u46, 0.001); end
  def test_costs_ae46; assert_in_epsilon(735.4644959312901, worksheet.costs_ae46, 0.001); end
  def test_costs_ao46; assert_in_epsilon(1112.625621272217, worksheet.costs_ao46, 0.001); end
  def test_costs_l46; assert_in_epsilon(250.593669851856, worksheet.costs_l46, 0.001); end
  def test_costs_v46; assert_in_epsilon(121.14154382983729, worksheet.costs_v46, 0.001); end
  def test_costs_af46; assert_in_epsilon(730.9510465680008, worksheet.costs_af46, 0.001); end
  def test_costs_ap46; assert_in_epsilon(1102.686260249694, worksheet.costs_ap46, 0.001); end
  def test_costs_m46; assert_in_epsilon(246.9885816717046, worksheet.costs_m46, 0.001); end
  def test_costs_w46; assert_in_epsilon(119.39877854752021, worksheet.costs_w46, 0.001); end
  def test_costs_ag46; assert_in_epsilon(724.7946683173087, worksheet.costs_ag46, 0.001); end
  def test_costs_aq46; assert_in_epsilon(1091.1820285365334, worksheet.costs_aq46, 0.001); end
  def test_costs_n46; assert_in_epsilon(243.435356975552, worksheet.costs_n46, 0.001); end
  def test_costs_x46; assert_in_epsilon(117.68108501790832, worksheet.costs_x46, 0.001); end
  def test_costs_ah46; assert_in_epsilon(717.1763593735626, worksheet.costs_ah46, 0.001); end
  def test_costs_ar46; assert_in_epsilon(1078.292801367023, worksheet.costs_ar46, 0.001); end
  def test_costs_b47; assert_equal("XII.d", worksheet.costs_b47); end
  def test_costs_c47; assert_equal("Domestic aviation [UNUSED - see XII.a]", worksheet.costs_c47); end
  def test_costs_d47; assert_equal("Transport", worksheet.costs_d47); end
  def test_costs_e47; assert_equal("MEUR", worksheet.costs_e47); end
  def test_costs_f47; assert_in_delta(0, (worksheet.costs_f47||0), 0.001); end
  def test_costs_g47; assert_in_delta(0, (worksheet.costs_g47||0), 0.001); end
  def test_costs_h47; assert_in_delta(0, (worksheet.costs_h47||0), 0.001); end
  def test_costs_i47; assert_in_delta(0, (worksheet.costs_i47||0), 0.001); end
  def test_costs_j47; assert_in_delta(0, (worksheet.costs_j47||0), 0.001); end
  def test_costs_k47; assert_in_delta(0, (worksheet.costs_k47||0), 0.001); end
  def test_costs_l47; assert_in_delta(0, (worksheet.costs_l47||0), 0.001); end
  def test_costs_m47; assert_in_delta(0, (worksheet.costs_m47||0), 0.001); end
  def test_costs_n47; assert_in_delta(0, (worksheet.costs_n47||0), 0.001); end
  def test_costs_p47; assert_in_delta(0, (worksheet.costs_p47||0), 0.001); end
  def test_costs_q47; assert_in_delta(0, (worksheet.costs_q47||0), 0.001); end
  def test_costs_r47; assert_in_delta(0, (worksheet.costs_r47||0), 0.001); end
  def test_costs_s47; assert_in_delta(0, (worksheet.costs_s47||0), 0.001); end
  def test_costs_t47; assert_in_delta(0, (worksheet.costs_t47||0), 0.001); end
  def test_costs_u47; assert_in_delta(0, (worksheet.costs_u47||0), 0.001); end
  def test_costs_v47; assert_in_delta(0, (worksheet.costs_v47||0), 0.001); end
  def test_costs_w47; assert_in_delta(0, (worksheet.costs_w47||0), 0.001); end
  def test_costs_x47; assert_in_delta(0, (worksheet.costs_x47||0), 0.001); end
  def test_costs_z47; assert_in_delta(0, (worksheet.costs_z47||0), 0.001); end
  def test_costs_aa47; assert_in_delta(0, (worksheet.costs_aa47||0), 0.001); end
  def test_costs_ab47; assert_in_delta(0, (worksheet.costs_ab47||0), 0.001); end
  def test_costs_ac47; assert_in_delta(0, (worksheet.costs_ac47||0), 0.001); end
  def test_costs_ad47; assert_in_delta(0, (worksheet.costs_ad47||0), 0.001); end
  def test_costs_ae47; assert_in_delta(0, (worksheet.costs_ae47||0), 0.001); end
  def test_costs_af47; assert_in_delta(0, (worksheet.costs_af47||0), 0.001); end
  def test_costs_ag47; assert_in_delta(0, (worksheet.costs_ag47||0), 0.001); end
  def test_costs_ah47; assert_in_delta(0, (worksheet.costs_ah47||0), 0.001); end
  def test_costs_aj47; assert_in_delta(0, (worksheet.costs_aj47||0), 0.001); end
  def test_costs_ak47; assert_in_delta(0, (worksheet.costs_ak47||0), 0.001); end
  def test_costs_al47; assert_in_delta(0, (worksheet.costs_al47||0), 0.001); end
  def test_costs_am47; assert_in_delta(0, (worksheet.costs_am47||0), 0.001); end
  def test_costs_an47; assert_in_delta(0, (worksheet.costs_an47||0), 0.001); end
  def test_costs_ao47; assert_in_delta(0, (worksheet.costs_ao47||0), 0.001); end
  def test_costs_ap47; assert_in_delta(0, (worksheet.costs_ap47||0), 0.001); end
  def test_costs_aq47; assert_in_delta(0, (worksheet.costs_aq47||0), 0.001); end
  def test_costs_ar47; assert_in_delta(0, (worksheet.costs_ar47||0), 0.001); end
  def test_costs_b48; assert_equal("XII.e", worksheet.costs_b48); end
  def test_costs_c48; assert_equal("International shipping [UNUSED]", worksheet.costs_c48); end
  def test_costs_d48; assert_equal("Transport", worksheet.costs_d48); end
  def test_costs_e48; assert_equal("MEUR", worksheet.costs_e48); end
  def test_costs_f48; assert_in_delta(0, (worksheet.costs_f48||0), 0.001); end
  def test_costs_g48; assert_in_delta(0, (worksheet.costs_g48||0), 0.001); end
  def test_costs_h48; assert_in_delta(0, (worksheet.costs_h48||0), 0.001); end
  def test_costs_i48; assert_in_delta(0, (worksheet.costs_i48||0), 0.001); end
  def test_costs_j48; assert_in_delta(0, (worksheet.costs_j48||0), 0.001); end
  def test_costs_k48; assert_in_delta(0, (worksheet.costs_k48||0), 0.001); end
  def test_costs_l48; assert_in_delta(0, (worksheet.costs_l48||0), 0.001); end
  def test_costs_m48; assert_in_delta(0, (worksheet.costs_m48||0), 0.001); end
  def test_costs_n48; assert_in_delta(0, (worksheet.costs_n48||0), 0.001); end
  def test_costs_p48; assert_in_delta(0, (worksheet.costs_p48||0), 0.001); end
  def test_costs_q48; assert_in_delta(0, (worksheet.costs_q48||0), 0.001); end
  def test_costs_r48; assert_in_delta(0, (worksheet.costs_r48||0), 0.001); end
  def test_costs_s48; assert_in_delta(0, (worksheet.costs_s48||0), 0.001); end
  def test_costs_t48; assert_in_delta(0, (worksheet.costs_t48||0), 0.001); end
  def test_costs_u48; assert_in_delta(0, (worksheet.costs_u48||0), 0.001); end
  def test_costs_v48; assert_in_delta(0, (worksheet.costs_v48||0), 0.001); end
  def test_costs_w48; assert_in_delta(0, (worksheet.costs_w48||0), 0.001); end
  def test_costs_x48; assert_in_delta(0, (worksheet.costs_x48||0), 0.001); end
  def test_costs_z48; assert_in_delta(0, (worksheet.costs_z48||0), 0.001); end
  def test_costs_aa48; assert_in_delta(0, (worksheet.costs_aa48||0), 0.001); end
  def test_costs_ab48; assert_in_delta(0, (worksheet.costs_ab48||0), 0.001); end
  def test_costs_ac48; assert_in_delta(0, (worksheet.costs_ac48||0), 0.001); end
  def test_costs_ad48; assert_in_delta(0, (worksheet.costs_ad48||0), 0.001); end
  def test_costs_ae48; assert_in_delta(0, (worksheet.costs_ae48||0), 0.001); end
  def test_costs_af48; assert_in_delta(0, (worksheet.costs_af48||0), 0.001); end
  def test_costs_ag48; assert_in_delta(0, (worksheet.costs_ag48||0), 0.001); end
  def test_costs_ah48; assert_in_delta(0, (worksheet.costs_ah48||0), 0.001); end
  def test_costs_aj48; assert_in_delta(0, (worksheet.costs_aj48||0), 0.001); end
  def test_costs_ak48; assert_in_delta(0, (worksheet.costs_ak48||0), 0.001); end
  def test_costs_al48; assert_in_delta(0, (worksheet.costs_al48||0), 0.001); end
  def test_costs_am48; assert_in_delta(0, (worksheet.costs_am48||0), 0.001); end
  def test_costs_an48; assert_in_delta(0, (worksheet.costs_an48||0), 0.001); end
  def test_costs_ao48; assert_in_delta(0, (worksheet.costs_ao48||0), 0.001); end
  def test_costs_ap48; assert_in_delta(0, (worksheet.costs_ap48||0), 0.001); end
  def test_costs_aq48; assert_in_delta(0, (worksheet.costs_aq48||0), 0.001); end
  def test_costs_ar48; assert_in_delta(0, (worksheet.costs_ar48||0), 0.001); end
  def test_costs_b49; assert_equal("XII.f", worksheet.costs_b49); end
  def test_costs_c49; assert_equal("National navigation [UNUSED - see XII.a]", worksheet.costs_c49); end
  def test_costs_d49; assert_equal("Transport", worksheet.costs_d49); end
  def test_costs_e49; assert_equal("MEUR", worksheet.costs_e49); end
  def test_costs_f49; assert_in_delta(0, (worksheet.costs_f49||0), 0.001); end
  def test_costs_g49; assert_in_delta(0, (worksheet.costs_g49||0), 0.001); end
  def test_costs_h49; assert_in_delta(0, (worksheet.costs_h49||0), 0.001); end
  def test_costs_i49; assert_in_delta(0, (worksheet.costs_i49||0), 0.001); end
  def test_costs_j49; assert_in_delta(0, (worksheet.costs_j49||0), 0.001); end
  def test_costs_k49; assert_in_delta(0, (worksheet.costs_k49||0), 0.001); end
  def test_costs_l49; assert_in_delta(0, (worksheet.costs_l49||0), 0.001); end
  def test_costs_m49; assert_in_delta(0, (worksheet.costs_m49||0), 0.001); end
  def test_costs_n49; assert_in_delta(0, (worksheet.costs_n49||0), 0.001); end
  def test_costs_p49; assert_in_delta(0, (worksheet.costs_p49||0), 0.001); end
  def test_costs_q49; assert_in_delta(0, (worksheet.costs_q49||0), 0.001); end
  def test_costs_r49; assert_in_delta(0, (worksheet.costs_r49||0), 0.001); end
  def test_costs_s49; assert_in_delta(0, (worksheet.costs_s49||0), 0.001); end
  def test_costs_t49; assert_in_delta(0, (worksheet.costs_t49||0), 0.001); end
  def test_costs_u49; assert_in_delta(0, (worksheet.costs_u49||0), 0.001); end
  def test_costs_v49; assert_in_delta(0, (worksheet.costs_v49||0), 0.001); end
  def test_costs_w49; assert_in_delta(0, (worksheet.costs_w49||0), 0.001); end
  def test_costs_x49; assert_in_delta(0, (worksheet.costs_x49||0), 0.001); end
  def test_costs_z49; assert_in_delta(0, (worksheet.costs_z49||0), 0.001); end
  def test_costs_aa49; assert_in_delta(0, (worksheet.costs_aa49||0), 0.001); end
  def test_costs_ab49; assert_in_delta(0, (worksheet.costs_ab49||0), 0.001); end
  def test_costs_ac49; assert_in_delta(0, (worksheet.costs_ac49||0), 0.001); end
  def test_costs_ad49; assert_in_delta(0, (worksheet.costs_ad49||0), 0.001); end
  def test_costs_ae49; assert_in_delta(0, (worksheet.costs_ae49||0), 0.001); end
  def test_costs_af49; assert_in_delta(0, (worksheet.costs_af49||0), 0.001); end
  def test_costs_ag49; assert_in_delta(0, (worksheet.costs_ag49||0), 0.001); end
  def test_costs_ah49; assert_in_delta(0, (worksheet.costs_ah49||0), 0.001); end
  def test_costs_aj49; assert_in_delta(0, (worksheet.costs_aj49||0), 0.001); end
  def test_costs_ak49; assert_in_delta(0, (worksheet.costs_ak49||0), 0.001); end
  def test_costs_al49; assert_in_delta(0, (worksheet.costs_al49||0), 0.001); end
  def test_costs_am49; assert_in_delta(0, (worksheet.costs_am49||0), 0.001); end
  def test_costs_an49; assert_in_delta(0, (worksheet.costs_an49||0), 0.001); end
  def test_costs_ao49; assert_in_delta(0, (worksheet.costs_ao49||0), 0.001); end
  def test_costs_ap49; assert_in_delta(0, (worksheet.costs_ap49||0), 0.001); end
  def test_costs_aq49; assert_in_delta(0, (worksheet.costs_aq49||0), 0.001); end
  def test_costs_ar49; assert_in_delta(0, (worksheet.costs_ar49||0), 0.001); end
  def test_costs_b50; assert_equal("XIII.a", worksheet.costs_b50); end
  def test_costs_c50; assert_equal("Food consumption [UNUSED]", worksheet.costs_c50); end
  def test_costs_e50; assert_equal("MEUR", worksheet.costs_e50); end
  def test_costs_f50; assert_in_delta(0, (worksheet.costs_f50||0), 0.001); end
  def test_costs_g50; assert_in_delta(0, (worksheet.costs_g50||0), 0.001); end
  def test_costs_h50; assert_in_delta(0, (worksheet.costs_h50||0), 0.001); end
  def test_costs_i50; assert_in_delta(0, (worksheet.costs_i50||0), 0.001); end
  def test_costs_j50; assert_in_delta(0, (worksheet.costs_j50||0), 0.001); end
  def test_costs_k50; assert_in_delta(0, (worksheet.costs_k50||0), 0.001); end
  def test_costs_l50; assert_in_delta(0, (worksheet.costs_l50||0), 0.001); end
  def test_costs_m50; assert_in_delta(0, (worksheet.costs_m50||0), 0.001); end
  def test_costs_n50; assert_in_delta(0, (worksheet.costs_n50||0), 0.001); end
  def test_costs_p50; assert_in_delta(0, (worksheet.costs_p50||0), 0.001); end
  def test_costs_q50; assert_in_delta(0, (worksheet.costs_q50||0), 0.001); end
  def test_costs_r50; assert_in_delta(0, (worksheet.costs_r50||0), 0.001); end
  def test_costs_s50; assert_in_delta(0, (worksheet.costs_s50||0), 0.001); end
  def test_costs_t50; assert_in_delta(0, (worksheet.costs_t50||0), 0.001); end
  def test_costs_u50; assert_in_delta(0, (worksheet.costs_u50||0), 0.001); end
  def test_costs_v50; assert_in_delta(0, (worksheet.costs_v50||0), 0.001); end
  def test_costs_w50; assert_in_delta(0, (worksheet.costs_w50||0), 0.001); end
  def test_costs_x50; assert_in_delta(0, (worksheet.costs_x50||0), 0.001); end
  def test_costs_z50; assert_in_delta(0, (worksheet.costs_z50||0), 0.001); end
  def test_costs_aa50; assert_in_delta(0, (worksheet.costs_aa50||0), 0.001); end
  def test_costs_ab50; assert_in_delta(0, (worksheet.costs_ab50||0), 0.001); end
  def test_costs_ac50; assert_in_delta(0, (worksheet.costs_ac50||0), 0.001); end
  def test_costs_ad50; assert_in_delta(0, (worksheet.costs_ad50||0), 0.001); end
  def test_costs_ae50; assert_in_delta(0, (worksheet.costs_ae50||0), 0.001); end
  def test_costs_af50; assert_in_delta(0, (worksheet.costs_af50||0), 0.001); end
  def test_costs_ag50; assert_in_delta(0, (worksheet.costs_ag50||0), 0.001); end
  def test_costs_ah50; assert_in_delta(0, (worksheet.costs_ah50||0), 0.001); end
  def test_costs_aj50; assert_in_delta(0, (worksheet.costs_aj50||0), 0.001); end
  def test_costs_ak50; assert_in_delta(0, (worksheet.costs_ak50||0), 0.001); end
  def test_costs_al50; assert_in_delta(0, (worksheet.costs_al50||0), 0.001); end
  def test_costs_am50; assert_in_delta(0, (worksheet.costs_am50||0), 0.001); end
  def test_costs_an50; assert_in_delta(0, (worksheet.costs_an50||0), 0.001); end
  def test_costs_ao50; assert_in_delta(0, (worksheet.costs_ao50||0), 0.001); end
  def test_costs_ap50; assert_in_delta(0, (worksheet.costs_ap50||0), 0.001); end
  def test_costs_aq50; assert_in_delta(0, (worksheet.costs_aq50||0), 0.001); end
  def test_costs_ar50; assert_in_delta(0, (worksheet.costs_ar50||0), 0.001); end
  def test_costs_b51; assert_equal("XIV.a", worksheet.costs_b51); end
  def test_costs_c51; assert_equal("Geosequestration [UNUSED]", worksheet.costs_c51); end
  def test_costs_e51; assert_equal("MEUR", worksheet.costs_e51); end
  def test_costs_p51; assert_in_delta(0, (worksheet.costs_p51||0), 0.001); end
  def test_costs_q51; assert_in_delta(0, (worksheet.costs_q51||0), 0.001); end
  def test_costs_r51; assert_in_delta(0, (worksheet.costs_r51||0), 0.001); end
  def test_costs_s51; assert_in_delta(0, (worksheet.costs_s51||0), 0.001); end
  def test_costs_t51; assert_in_delta(0, (worksheet.costs_t51||0), 0.001); end
  def test_costs_u51; assert_in_delta(0, (worksheet.costs_u51||0), 0.001); end
  def test_costs_v51; assert_in_delta(0, (worksheet.costs_v51||0), 0.001); end
  def test_costs_w51; assert_in_delta(0, (worksheet.costs_w51||0), 0.001); end
  def test_costs_x51; assert_in_delta(0, (worksheet.costs_x51||0), 0.001); end
  def test_costs_z51; assert_in_delta(0, (worksheet.costs_z51||0), 0.001); end
  def test_costs_aa51; assert_in_delta(0, (worksheet.costs_aa51||0), 0.001); end
  def test_costs_ab51; assert_in_delta(0, (worksheet.costs_ab51||0), 0.001); end
  def test_costs_ac51; assert_in_delta(0, (worksheet.costs_ac51||0), 0.001); end
  def test_costs_ad51; assert_in_delta(0, (worksheet.costs_ad51||0), 0.001); end
  def test_costs_ae51; assert_in_delta(0, (worksheet.costs_ae51||0), 0.001); end
  def test_costs_af51; assert_in_delta(0, (worksheet.costs_af51||0), 0.001); end
  def test_costs_ag51; assert_in_delta(0, (worksheet.costs_ag51||0), 0.001); end
  def test_costs_ah51; assert_in_delta(0, (worksheet.costs_ah51||0), 0.001); end
  def test_costs_f51; assert_in_delta(0, (worksheet.costs_f51||0), 0.001); end
  def test_costs_aj51; assert_in_delta(0, (worksheet.costs_aj51||0), 0.001); end
  def test_costs_g51; assert_in_delta(0, (worksheet.costs_g51||0), 0.001); end
  def test_costs_ak51; assert_in_delta(0, (worksheet.costs_ak51||0), 0.001); end
  def test_costs_h51; assert_in_delta(0, (worksheet.costs_h51||0), 0.001); end
  def test_costs_al51; assert_in_delta(0, (worksheet.costs_al51||0), 0.001); end
  def test_costs_i51; assert_in_delta(0, (worksheet.costs_i51||0), 0.001); end
  def test_costs_am51; assert_in_delta(0, (worksheet.costs_am51||0), 0.001); end
  def test_costs_j51; assert_in_delta(0, (worksheet.costs_j51||0), 0.001); end
  def test_costs_an51; assert_in_delta(0, (worksheet.costs_an51||0), 0.001); end
  def test_costs_k51; assert_in_delta(0, (worksheet.costs_k51||0), 0.001); end
  def test_costs_ao51; assert_in_delta(0, (worksheet.costs_ao51||0), 0.001); end
  def test_costs_l51; assert_in_delta(0, (worksheet.costs_l51||0), 0.001); end
  def test_costs_ap51; assert_in_delta(0, (worksheet.costs_ap51||0), 0.001); end
  def test_costs_m51; assert_in_delta(0, (worksheet.costs_m51||0), 0.001); end
  def test_costs_aq51; assert_in_delta(0, (worksheet.costs_aq51||0), 0.001); end
  def test_costs_n51; assert_in_delta(0, (worksheet.costs_n51||0), 0.001); end
  def test_costs_ar51; assert_in_delta(0, (worksheet.costs_ar51||0), 0.001); end
  def test_costs_b52; assert_equal("XV.a", worksheet.costs_b52); end
  def test_costs_c52; assert_equal("Petroleum refineries [UNUSED]", worksheet.costs_c52); end
  def test_costs_e52; assert_equal("MEUR", worksheet.costs_e52); end
  def test_costs_f52; assert_in_delta(0, (worksheet.costs_f52||0), 0.001); end
  def test_costs_g52; assert_in_delta(0, (worksheet.costs_g52||0), 0.001); end
  def test_costs_h52; assert_in_delta(0, (worksheet.costs_h52||0), 0.001); end
  def test_costs_i52; assert_in_delta(0, (worksheet.costs_i52||0), 0.001); end
  def test_costs_j52; assert_in_delta(0, (worksheet.costs_j52||0), 0.001); end
  def test_costs_k52; assert_in_delta(0, (worksheet.costs_k52||0), 0.001); end
  def test_costs_l52; assert_in_delta(0, (worksheet.costs_l52||0), 0.001); end
  def test_costs_m52; assert_in_delta(0, (worksheet.costs_m52||0), 0.001); end
  def test_costs_n52; assert_in_delta(0, (worksheet.costs_n52||0), 0.001); end
  def test_costs_p52; assert_in_delta(0, (worksheet.costs_p52||0), 0.001); end
  def test_costs_q52; assert_in_delta(0, (worksheet.costs_q52||0), 0.001); end
  def test_costs_r52; assert_in_delta(0, (worksheet.costs_r52||0), 0.001); end
  def test_costs_s52; assert_in_delta(0, (worksheet.costs_s52||0), 0.001); end
  def test_costs_t52; assert_in_delta(0, (worksheet.costs_t52||0), 0.001); end
  def test_costs_u52; assert_in_delta(0, (worksheet.costs_u52||0), 0.001); end
  def test_costs_v52; assert_in_delta(0, (worksheet.costs_v52||0), 0.001); end
  def test_costs_w52; assert_in_delta(0, (worksheet.costs_w52||0), 0.001); end
  def test_costs_x52; assert_in_delta(0, (worksheet.costs_x52||0), 0.001); end
  def test_costs_z52; assert_in_delta(0, (worksheet.costs_z52||0), 0.001); end
  def test_costs_aa52; assert_in_delta(0, (worksheet.costs_aa52||0), 0.001); end
  def test_costs_ab52; assert_in_delta(0, (worksheet.costs_ab52||0), 0.001); end
  def test_costs_ac52; assert_in_delta(0, (worksheet.costs_ac52||0), 0.001); end
  def test_costs_ad52; assert_in_delta(0, (worksheet.costs_ad52||0), 0.001); end
  def test_costs_ae52; assert_in_delta(0, (worksheet.costs_ae52||0), 0.001); end
  def test_costs_af52; assert_in_delta(0, (worksheet.costs_af52||0), 0.001); end
  def test_costs_ag52; assert_in_delta(0, (worksheet.costs_ag52||0), 0.001); end
  def test_costs_ah52; assert_in_delta(0, (worksheet.costs_ah52||0), 0.001); end
  def test_costs_aj52; assert_in_delta(0, (worksheet.costs_aj52||0), 0.001); end
  def test_costs_ak52; assert_in_delta(0, (worksheet.costs_ak52||0), 0.001); end
  def test_costs_al52; assert_in_delta(0, (worksheet.costs_al52||0), 0.001); end
  def test_costs_am52; assert_in_delta(0, (worksheet.costs_am52||0), 0.001); end
  def test_costs_an52; assert_in_delta(0, (worksheet.costs_an52||0), 0.001); end
  def test_costs_ao52; assert_in_delta(0, (worksheet.costs_ao52||0), 0.001); end
  def test_costs_ap52; assert_in_delta(0, (worksheet.costs_ap52||0), 0.001); end
  def test_costs_aq52; assert_in_delta(0, (worksheet.costs_aq52||0), 0.001); end
  def test_costs_ar52; assert_in_delta(0, (worksheet.costs_ar52||0), 0.001); end
  def test_costs_b53; assert_equal("XV.b", worksheet.costs_b53); end
  def test_costs_c53; assert_equal("Indigenous fossil-fuel production [UNUSED]", worksheet.costs_c53); end
  def test_costs_e53; assert_equal("MEUR", worksheet.costs_e53); end
  def test_costs_f53; assert_in_delta(0, (worksheet.costs_f53||0), 0.001); end
  def test_costs_g53; assert_in_delta(0, (worksheet.costs_g53||0), 0.001); end
  def test_costs_h53; assert_in_delta(0, (worksheet.costs_h53||0), 0.001); end
  def test_costs_i53; assert_in_delta(0, (worksheet.costs_i53||0), 0.001); end
  def test_costs_j53; assert_in_delta(0, (worksheet.costs_j53||0), 0.001); end
  def test_costs_k53; assert_in_delta(0, (worksheet.costs_k53||0), 0.001); end
  def test_costs_l53; assert_in_delta(0, (worksheet.costs_l53||0), 0.001); end
  def test_costs_m53; assert_in_delta(0, (worksheet.costs_m53||0), 0.001); end
  def test_costs_n53; assert_in_delta(0, (worksheet.costs_n53||0), 0.001); end
  def test_costs_p53; assert_in_delta(0, (worksheet.costs_p53||0), 0.001); end
  def test_costs_q53; assert_in_delta(0, (worksheet.costs_q53||0), 0.001); end
  def test_costs_r53; assert_in_delta(0, (worksheet.costs_r53||0), 0.001); end
  def test_costs_s53; assert_in_delta(0, (worksheet.costs_s53||0), 0.001); end
  def test_costs_t53; assert_in_delta(0, (worksheet.costs_t53||0), 0.001); end
  def test_costs_u53; assert_in_delta(0, (worksheet.costs_u53||0), 0.001); end
  def test_costs_v53; assert_in_delta(0, (worksheet.costs_v53||0), 0.001); end
  def test_costs_w53; assert_in_delta(0, (worksheet.costs_w53||0), 0.001); end
  def test_costs_x53; assert_in_delta(0, (worksheet.costs_x53||0), 0.001); end
  def test_costs_z53; assert_in_delta(0, (worksheet.costs_z53||0), 0.001); end
  def test_costs_aa53; assert_in_delta(0, (worksheet.costs_aa53||0), 0.001); end
  def test_costs_ab53; assert_in_delta(0, (worksheet.costs_ab53||0), 0.001); end
  def test_costs_ac53; assert_in_delta(0, (worksheet.costs_ac53||0), 0.001); end
  def test_costs_ad53; assert_in_delta(0, (worksheet.costs_ad53||0), 0.001); end
  def test_costs_ae53; assert_in_delta(0, (worksheet.costs_ae53||0), 0.001); end
  def test_costs_af53; assert_in_delta(0, (worksheet.costs_af53||0), 0.001); end
  def test_costs_ag53; assert_in_delta(0, (worksheet.costs_ag53||0), 0.001); end
  def test_costs_ah53; assert_in_delta(0, (worksheet.costs_ah53||0), 0.001); end
  def test_costs_aj53; assert_in_delta(0, (worksheet.costs_aj53||0), 0.001); end
  def test_costs_ak53; assert_in_delta(0, (worksheet.costs_ak53||0), 0.001); end
  def test_costs_al53; assert_in_delta(0, (worksheet.costs_al53||0), 0.001); end
  def test_costs_am53; assert_in_delta(0, (worksheet.costs_am53||0), 0.001); end
  def test_costs_an53; assert_in_delta(0, (worksheet.costs_an53||0), 0.001); end
  def test_costs_ao53; assert_in_delta(0, (worksheet.costs_ao53||0), 0.001); end
  def test_costs_ap53; assert_in_delta(0, (worksheet.costs_ap53||0), 0.001); end
  def test_costs_aq53; assert_in_delta(0, (worksheet.costs_aq53||0), 0.001); end
  def test_costs_ar53; assert_in_delta(0, (worksheet.costs_ar53||0), 0.001); end
  def test_costs_b54; assert_equal("XVI.a", worksheet.costs_b54); end
  def test_costs_c54; assert_equal("Fossil fuel transfers", worksheet.costs_c54); end
  def test_costs_d54; assert_equal("Fossil fuels", worksheet.costs_d54); end
  def test_costs_e54; assert_equal("MEUR", worksheet.costs_e54); end
  def test_costs_n54; assert_in_delta(0, (worksheet.costs_n54||0), 0.001); end
  def test_costs_x54; assert_in_delta(0, (worksheet.costs_x54||0), 0.001); end
  def test_costs_z54; assert_in_delta(0, (worksheet.costs_z54||0), 0.001); end
  def test_costs_aa54; assert_in_delta(0, (worksheet.costs_aa54||0), 0.001); end
  def test_costs_ab54; assert_in_delta(0, (worksheet.costs_ab54||0), 0.001); end
  def test_costs_ac54; assert_in_delta(0, (worksheet.costs_ac54||0), 0.001); end
  def test_costs_ad54; assert_in_delta(0, (worksheet.costs_ad54||0), 0.001); end
  def test_costs_ae54; assert_in_delta(0, (worksheet.costs_ae54||0), 0.001); end
  def test_costs_af54; assert_in_delta(0, (worksheet.costs_af54||0), 0.001); end
  def test_costs_ag54; assert_in_delta(0, (worksheet.costs_ag54||0), 0.001); end
  def test_costs_ah54; assert_in_delta(0, (worksheet.costs_ah54||0), 0.001); end
  def test_costs_f54; assert_in_epsilon(130.67392176650156, worksheet.costs_f54, 0.001); end
  def test_costs_p54; assert_in_delta(0.23394413186588495, worksheet.costs_p54, 0.001); end
  def test_costs_aj54; assert_in_epsilon(130.90786589836745, worksheet.costs_aj54, 0.001); end
  def test_costs_g54; assert_in_epsilon(74.6281780652173, worksheet.costs_g54, 0.001); end
  def test_costs_q54; assert_in_delta(0.1882200088220376, worksheet.costs_q54, 0.001); end
  def test_costs_ak54; assert_in_epsilon(74.81639807403934, worksheet.costs_ak54, 0.001); end
  def test_costs_h54; assert_in_epsilon(60.04218281422999, worksheet.costs_h54, 0.001); end
  def test_costs_r54; assert_in_delta(0.17111893178525783, worksheet.costs_r54, 0.001); end
  def test_costs_al54; assert_in_epsilon(60.21330174601525, worksheet.costs_al54, 0.001); end
  def test_costs_i54; assert_in_epsilon(54.58693923949725, worksheet.costs_i54, 0.001); end
  def test_costs_s54; assert_in_delta(0.16204645762197434, worksheet.costs_s54, 0.001); end
  def test_costs_am54; assert_in_epsilon(54.748985697119224, worksheet.costs_am54, 0.001); end
  def test_costs_j54; assert_in_epsilon(51.69281998140981, worksheet.costs_j54, 0.001); end
  def test_costs_t54; assert_in_delta(0.15752472699885062, worksheet.costs_t54, 0.001); end
  def test_costs_an54; assert_in_epsilon(51.85034470840866, worksheet.costs_an54, 0.001); end
  def test_costs_k54; assert_in_epsilon(50.25038791263334, worksheet.costs_k54, 0.001); end
  def test_costs_u54; assert_in_delta(0.15686657431003123, worksheet.costs_u54, 0.001); end
  def test_costs_ao54; assert_in_epsilon(50.40725448694337, worksheet.costs_ao54, 0.001); end
  def test_costs_l54; assert_in_epsilon(55.02156470008103, worksheet.costs_l54, 0.001); end
  def test_costs_v54; assert_in_delta(0.15946904426571623, worksheet.costs_v54, 0.001); end
  def test_costs_ap54; assert_in_epsilon(55.18103374434675, worksheet.costs_ap54, 0.001); end
  def test_costs_m54; assert_in_epsilon(61.177231252832705, worksheet.costs_m54, 0.001); end
  def test_costs_w54; assert_in_delta(0.16485389595436264, worksheet.costs_w54, 0.001); end
  def test_costs_aq54; assert_in_epsilon(61.34208514878707, worksheet.costs_aq54, 0.001); end
  def test_costs_ar54; assert_in_delta(0, (worksheet.costs_ar54||0), 0.001); end
  def test_costs_b55; assert_equal("XVI.b", worksheet.costs_b55); end
  def test_costs_c55; assert_equal("Balancing imports", worksheet.costs_c55); end
  def test_costs_d55; assert_equal("Fossil fuels", worksheet.costs_d55); end
  def test_costs_e55; assert_equal("MEUR", worksheet.costs_e55); end
  def test_costs_b56; assert_equal("XVI.b.Coal", worksheet.costs_b56); end
  def test_costs_c56; assert_equal("Balancing imports - Coal", worksheet.costs_c56); end
  def test_costs_d56; assert_equal("Fossil fuels", worksheet.costs_d56); end
  def test_costs_e56; assert_equal("MEUR", worksheet.costs_e56); end
  def test_costs_f56; assert_in_delta(0, (worksheet.costs_f56||0), 0.001); end
  def test_costs_g56; assert_in_delta(0, (worksheet.costs_g56||0), 0.001); end
  def test_costs_h56; assert_in_delta(0, (worksheet.costs_h56||0), 0.001); end
  def test_costs_i56; assert_in_delta(0, (worksheet.costs_i56||0), 0.001); end
  def test_costs_j56; assert_in_delta(0, (worksheet.costs_j56||0), 0.001); end
  def test_costs_k56; assert_in_delta(0, (worksheet.costs_k56||0), 0.001); end
  def test_costs_l56; assert_in_delta(0, (worksheet.costs_l56||0), 0.001); end
  def test_costs_m56; assert_in_delta(0, (worksheet.costs_m56||0), 0.001); end
  def test_costs_n56; assert_in_delta(0, (worksheet.costs_n56||0), 0.001); end
  def test_costs_p56; assert_in_delta(0, (worksheet.costs_p56||0), 0.001); end
  def test_costs_q56; assert_in_delta(0, (worksheet.costs_q56||0), 0.001); end
  def test_costs_r56; assert_in_delta(0, (worksheet.costs_r56||0), 0.001); end
  def test_costs_s56; assert_in_delta(0, (worksheet.costs_s56||0), 0.001); end
  def test_costs_t56; assert_in_delta(0, (worksheet.costs_t56||0), 0.001); end
  def test_costs_u56; assert_in_delta(0, (worksheet.costs_u56||0), 0.001); end
  def test_costs_v56; assert_in_delta(0, (worksheet.costs_v56||0), 0.001); end
  def test_costs_w56; assert_in_delta(0, (worksheet.costs_w56||0), 0.001); end
  def test_costs_x56; assert_in_delta(0, (worksheet.costs_x56||0), 0.001); end
  def test_costs_z56; assert_in_epsilon(496.45594417128507, worksheet.costs_z56, 0.001); end
  def test_costs_aj56; assert_in_epsilon(496.45594417128507, worksheet.costs_aj56, 0.001); end
  def test_costs_aa56; assert_in_epsilon(339.32064795866154, worksheet.costs_aa56, 0.001); end
  def test_costs_ak56; assert_in_epsilon(339.32064795866154, worksheet.costs_ak56, 0.001); end
  def test_costs_ab56; assert_in_epsilon(276.2590326865597, worksheet.costs_ab56, 0.001); end
  def test_costs_al56; assert_in_epsilon(276.2590326865597, worksheet.costs_al56, 0.001); end
  def test_costs_ac56; assert_in_epsilon(34.09617849335899, worksheet.costs_ac56, 0.001); end
  def test_costs_am56; assert_in_epsilon(34.09617849335899, worksheet.costs_am56, 0.001); end
  def test_costs_ad56; assert_in_delta(-0.8216965707163552, worksheet.costs_ad56, 0.001); end
  def test_costs_an56; assert_in_delta(-0.8216965707163552, worksheet.costs_an56, 0.001); end
  def test_costs_ae56; assert_in_delta(-0.6564161466319738, worksheet.costs_ae56, 0.001); end
  def test_costs_ao56; assert_in_delta(-0.6564161466319738, worksheet.costs_ao56, 0.001); end
  def test_costs_af56; assert_in_delta(-0.4654637271738138, worksheet.costs_af56, 0.001); end
  def test_costs_ap56; assert_in_delta(-0.4654637271738138, worksheet.costs_ap56, 0.001); end
  def test_costs_ag56; assert_in_delta(-0.24226310631916737, worksheet.costs_ag56, 0.001); end
  def test_costs_aq56; assert_in_delta(-0.24226310631916737, worksheet.costs_aq56, 0.001); end
  def test_costs_ah56; assert_in_delta(0, (worksheet.costs_ah56||0), 0.001); end
  def test_costs_ar56; assert_in_delta(0, (worksheet.costs_ar56||0), 0.001); end
  def test_costs_b57; assert_equal("XVI.b.Oil", worksheet.costs_b57); end
  def test_costs_c57; assert_equal("Balancing imports - Oil", worksheet.costs_c57); end
  def test_costs_d57; assert_equal("Fossil fuels", worksheet.costs_d57); end
  def test_costs_e57; assert_equal("MEUR", worksheet.costs_e57); end
  def test_costs_f57; assert_in_delta(0, (worksheet.costs_f57||0), 0.001); end
  def test_costs_g57; assert_in_delta(0, (worksheet.costs_g57||0), 0.001); end
  def test_costs_h57; assert_in_delta(0, (worksheet.costs_h57||0), 0.001); end
  def test_costs_i57; assert_in_delta(0, (worksheet.costs_i57||0), 0.001); end
  def test_costs_j57; assert_in_delta(0, (worksheet.costs_j57||0), 0.001); end
  def test_costs_k57; assert_in_delta(0, (worksheet.costs_k57||0), 0.001); end
  def test_costs_l57; assert_in_delta(0, (worksheet.costs_l57||0), 0.001); end
  def test_costs_m57; assert_in_delta(0, (worksheet.costs_m57||0), 0.001); end
  def test_costs_n57; assert_in_delta(0, (worksheet.costs_n57||0), 0.001); end
  def test_costs_p57; assert_in_delta(0, (worksheet.costs_p57||0), 0.001); end
  def test_costs_q57; assert_in_delta(0, (worksheet.costs_q57||0), 0.001); end
  def test_costs_r57; assert_in_delta(0, (worksheet.costs_r57||0), 0.001); end
  def test_costs_s57; assert_in_delta(0, (worksheet.costs_s57||0), 0.001); end
  def test_costs_t57; assert_in_delta(0, (worksheet.costs_t57||0), 0.001); end
  def test_costs_u57; assert_in_delta(0, (worksheet.costs_u57||0), 0.001); end
  def test_costs_v57; assert_in_delta(0, (worksheet.costs_v57||0), 0.001); end
  def test_costs_w57; assert_in_delta(0, (worksheet.costs_w57||0), 0.001); end
  def test_costs_x57; assert_in_delta(0, (worksheet.costs_x57||0), 0.001); end
  def test_costs_z57; assert_in_epsilon(6921.990100450474, worksheet.costs_z57, 0.001); end
  def test_costs_aj57; assert_in_epsilon(6921.990100450474, worksheet.costs_aj57, 0.001); end
  def test_costs_aa57; assert_in_epsilon(5368.405753493294, worksheet.costs_aa57, 0.001); end
  def test_costs_ak57; assert_in_epsilon(5368.405753493294, worksheet.costs_ak57, 0.001); end
  def test_costs_ab57; assert_in_epsilon(5172.688814039051, worksheet.costs_ab57, 0.001); end
  def test_costs_al57; assert_in_epsilon(5172.688814039051, worksheet.costs_al57, 0.001); end
  def test_costs_ac57; assert_in_epsilon(4712.5061785262915, worksheet.costs_ac57, 0.001); end
  def test_costs_am57; assert_in_epsilon(4712.5061785262915, worksheet.costs_am57, 0.001); end
  def test_costs_ad57; assert_in_epsilon(4116.060371490905, worksheet.costs_ad57, 0.001); end
  def test_costs_an57; assert_in_epsilon(4116.060371490905, worksheet.costs_an57, 0.001); end
  def test_costs_ae57; assert_in_epsilon(3182.5550989744584, worksheet.costs_ae57, 0.001); end
  def test_costs_ao57; assert_in_epsilon(3182.5550989744584, worksheet.costs_ao57, 0.001); end
  def test_costs_af57; assert_in_epsilon(2428.277231416692, worksheet.costs_af57, 0.001); end
  def test_costs_ap57; assert_in_epsilon(2428.277231416692, worksheet.costs_ap57, 0.001); end
  def test_costs_ag57; assert_in_epsilon(1721.9993483441717, worksheet.costs_ag57, 0.001); end
  def test_costs_aq57; assert_in_epsilon(1721.9993483441717, worksheet.costs_aq57, 0.001); end
  def test_costs_ah57; assert_in_epsilon(1061.6116335937368, worksheet.costs_ah57, 0.001); end
  def test_costs_ar57; assert_in_epsilon(1061.6116335937368, worksheet.costs_ar57, 0.001); end
  def test_costs_b58; assert_equal("XVI.b.Gas", worksheet.costs_b58); end
  def test_costs_c58; assert_equal("Balancing imports - Gas", worksheet.costs_c58); end
  def test_costs_d58; assert_equal("Fossil fuels", worksheet.costs_d58); end
  def test_costs_e58; assert_equal("MEUR", worksheet.costs_e58); end
  def test_costs_f58; assert_in_delta(0, (worksheet.costs_f58||0), 0.001); end
  def test_costs_g58; assert_in_delta(0, (worksheet.costs_g58||0), 0.001); end
  def test_costs_h58; assert_in_delta(0, (worksheet.costs_h58||0), 0.001); end
  def test_costs_i58; assert_in_delta(0, (worksheet.costs_i58||0), 0.001); end
  def test_costs_j58; assert_in_delta(0, (worksheet.costs_j58||0), 0.001); end
  def test_costs_k58; assert_in_delta(0, (worksheet.costs_k58||0), 0.001); end
  def test_costs_l58; assert_in_delta(0, (worksheet.costs_l58||0), 0.001); end
  def test_costs_m58; assert_in_delta(0, (worksheet.costs_m58||0), 0.001); end
  def test_costs_n58; assert_in_delta(0, (worksheet.costs_n58||0), 0.001); end
  def test_costs_p58; assert_in_delta(0, (worksheet.costs_p58||0), 0.001); end
  def test_costs_q58; assert_in_delta(0, (worksheet.costs_q58||0), 0.001); end
  def test_costs_r58; assert_in_delta(0, (worksheet.costs_r58||0), 0.001); end
  def test_costs_s58; assert_in_delta(0, (worksheet.costs_s58||0), 0.001); end
  def test_costs_t58; assert_in_delta(0, (worksheet.costs_t58||0), 0.001); end
  def test_costs_u58; assert_in_delta(0, (worksheet.costs_u58||0), 0.001); end
  def test_costs_v58; assert_in_delta(0, (worksheet.costs_v58||0), 0.001); end
  def test_costs_w58; assert_in_delta(0, (worksheet.costs_w58||0), 0.001); end
  def test_costs_x58; assert_in_delta(0, (worksheet.costs_x58||0), 0.001); end
  def test_costs_z58; assert_in_epsilon(4742.597906950148, worksheet.costs_z58, 0.001); end
  def test_costs_aj58; assert_in_epsilon(4742.597906950148, worksheet.costs_aj58, 0.001); end
  def test_costs_aa58; assert_in_epsilon(2302.232311244395, worksheet.costs_aa58, 0.001); end
  def test_costs_ak58; assert_in_epsilon(2302.232311244395, worksheet.costs_ak58, 0.001); end
  def test_costs_ab58; assert_in_epsilon(2167.8343657369032, worksheet.costs_ab58, 0.001); end
  def test_costs_al58; assert_in_epsilon(2167.8343657369032, worksheet.costs_al58, 0.001); end
  def test_costs_ac58; assert_in_epsilon(2277.729014222493, worksheet.costs_ac58, 0.001); end
  def test_costs_am58; assert_in_epsilon(2277.729014222493, worksheet.costs_am58, 0.001); end
  def test_costs_ad58; assert_in_epsilon(2466.455341076603, worksheet.costs_ad58, 0.001); end
  def test_costs_an58; assert_in_epsilon(2466.455341076603, worksheet.costs_an58, 0.001); end
  def test_costs_ae58; assert_in_epsilon(2511.3123879075065, worksheet.costs_ae58, 0.001); end
  def test_costs_ao58; assert_in_epsilon(2511.3123879075065, worksheet.costs_ao58, 0.001); end
  def test_costs_af58; assert_in_epsilon(2616.084022380499, worksheet.costs_af58, 0.001); end
  def test_costs_ap58; assert_in_epsilon(2616.084022380499, worksheet.costs_ap58, 0.001); end
  def test_costs_ag58; assert_in_epsilon(2778.7545820537352, worksheet.costs_ag58, 0.001); end
  def test_costs_aq58; assert_in_epsilon(2778.7545820537352, worksheet.costs_aq58, 0.001); end
  def test_costs_ah58; assert_in_epsilon(2998.0451631353335, worksheet.costs_ah58, 0.001); end
  def test_costs_ar58; assert_in_epsilon(2998.0451631353335, worksheet.costs_ar58, 0.001); end
  def test_costs_b59; assert_equal("XVII.a", worksheet.costs_b59); end
  def test_costs_c59; assert_equal("District heating effective demand", worksheet.costs_c59); end
  def test_costs_d59; assert_equal("Buildings", worksheet.costs_d59); end
  def test_costs_e59; assert_equal("MEUR", worksheet.costs_e59); end
  def test_costs_f59; assert_in_delta(0, (worksheet.costs_f59||0), 0.001); end
  def test_costs_z59; assert_in_delta(0, (worksheet.costs_z59||0), 0.001); end
  def test_costs_aa59; assert_in_delta(0, (worksheet.costs_aa59||0), 0.001); end
  def test_costs_ab59; assert_in_delta(0, (worksheet.costs_ab59||0), 0.001); end
  def test_costs_ac59; assert_in_delta(0, (worksheet.costs_ac59||0), 0.001); end
  def test_costs_ad59; assert_in_delta(0, (worksheet.costs_ad59||0), 0.001); end
  def test_costs_ae59; assert_in_delta(0, (worksheet.costs_ae59||0), 0.001); end
  def test_costs_af59; assert_in_delta(0, (worksheet.costs_af59||0), 0.001); end
  def test_costs_ag59; assert_in_delta(0, (worksheet.costs_ag59||0), 0.001); end
  def test_costs_ah59; assert_in_delta(0, (worksheet.costs_ah59||0), 0.001); end
  def test_costs_p59; assert_in_epsilon(8.224571324491238, worksheet.costs_p59, 0.001); end
  def test_costs_aj59; assert_in_epsilon(8.224571324491238, worksheet.costs_aj59, 0.001); end
  def test_costs_g59; assert_in_epsilon(27.41523774830413, worksheet.costs_g59, 0.001); end
  def test_costs_q59; assert_in_epsilon(7.554534270920892, worksheet.costs_q59, 0.001); end
  def test_costs_ak59; assert_in_epsilon(34.96977201922502, worksheet.costs_ak59, 0.001); end
  def test_costs_h59; assert_in_epsilon(25.18178090306964, worksheet.costs_h59, 0.001); end
  def test_costs_r59; assert_in_epsilon(5.266521826214667, worksheet.costs_r59, 0.001); end
  def test_costs_al59; assert_in_epsilon(30.448302729284308, worksheet.costs_al59, 0.001); end
  def test_costs_i59; assert_in_epsilon(17.555072754048894, worksheet.costs_i59, 0.001); end
  def test_costs_s59; assert_in_epsilon(4.355845800435594, worksheet.costs_s59, 0.001); end
  def test_costs_am59; assert_in_epsilon(21.91091855448449, worksheet.costs_am59, 0.001); end
  def test_costs_j59; assert_in_epsilon(14.519486001451977, worksheet.costs_j59, 0.001); end
  def test_costs_t59; assert_in_epsilon(3.5874092433345175, worksheet.costs_t59, 0.001); end
  def test_costs_an59; assert_in_epsilon(18.106895244786493, worksheet.costs_an59, 0.001); end
  def test_costs_k59; assert_in_epsilon(11.958030811115059, worksheet.costs_k59, 0.001); end
  def test_costs_u59; assert_in_epsilon(2.8340804421609205, worksheet.costs_u59, 0.001); end
  def test_costs_ao59; assert_in_epsilon(14.79211125327598, worksheet.costs_ao59, 0.001); end
  def test_costs_l59; assert_in_epsilon(9.44693480720307, worksheet.costs_l59, 0.001); end
  def test_costs_v59; assert_in_epsilon(2.269308436630995, worksheet.costs_v59, 0.001); end
  def test_costs_ap59; assert_in_epsilon(11.716243243834064, worksheet.costs_ap59, 0.001); end
  def test_costs_m59; assert_in_epsilon(7.564361455436648, worksheet.costs_m59, 0.001); end
  def test_costs_w59; assert_in_epsilon(1.8149795027373368, worksheet.costs_w59, 0.001); end
  def test_costs_aq59; assert_in_epsilon(9.379340958173985, worksheet.costs_aq59, 0.001); end
  def test_costs_n59; assert_in_epsilon(6.049931675791123, worksheet.costs_n59, 0.001); end
  def test_costs_x59; assert_in_epsilon(1.4527630078579343, worksheet.costs_x59, 0.001); end
  def test_costs_ar59; assert_in_epsilon(7.502694683649057, worksheet.costs_ar59, 0.001); end
  def test_costs_b60; assert_equal("XVIII.a", worksheet.costs_b60); end
  def test_costs_c60; assert_equal("Carbone Capture [UNUSED]", worksheet.costs_c60); end
  def test_costs_d60; assert_equal("Industry", worksheet.costs_d60); end
  def test_costs_e60; assert_equal("MEUR", worksheet.costs_e60); end
  def test_costs_f60; assert_in_delta(0, (worksheet.costs_f60||0), 0.001); end
  def test_costs_g60; assert_in_delta(0, (worksheet.costs_g60||0), 0.001); end
  def test_costs_h60; assert_in_delta(0, (worksheet.costs_h60||0), 0.001); end
  def test_costs_i60; assert_in_delta(0, (worksheet.costs_i60||0), 0.001); end
  def test_costs_j60; assert_in_delta(0, (worksheet.costs_j60||0), 0.001); end
  def test_costs_k60; assert_in_delta(0, (worksheet.costs_k60||0), 0.001); end
  def test_costs_l60; assert_in_delta(0, (worksheet.costs_l60||0), 0.001); end
  def test_costs_m60; assert_in_delta(0, (worksheet.costs_m60||0), 0.001); end
  def test_costs_n60; assert_in_delta(0, (worksheet.costs_n60||0), 0.001); end
  def test_costs_p60; assert_in_delta(0, (worksheet.costs_p60||0), 0.001); end
  def test_costs_q60; assert_in_delta(0, (worksheet.costs_q60||0), 0.001); end
  def test_costs_r60; assert_in_delta(0, (worksheet.costs_r60||0), 0.001); end
  def test_costs_s60; assert_in_delta(0, (worksheet.costs_s60||0), 0.001); end
  def test_costs_t60; assert_in_delta(0, (worksheet.costs_t60||0), 0.001); end
  def test_costs_u60; assert_in_delta(0, (worksheet.costs_u60||0), 0.001); end
  def test_costs_v60; assert_in_delta(0, (worksheet.costs_v60||0), 0.001); end
  def test_costs_w60; assert_in_delta(0, (worksheet.costs_w60||0), 0.001); end
  def test_costs_x60; assert_in_delta(0, (worksheet.costs_x60||0), 0.001); end
  def test_costs_z60; assert_in_delta(0, (worksheet.costs_z60||0), 0.001); end
  def test_costs_aa60; assert_in_delta(0, (worksheet.costs_aa60||0), 0.001); end
  def test_costs_ab60; assert_in_delta(0, (worksheet.costs_ab60||0), 0.001); end
  def test_costs_ac60; assert_in_delta(0, (worksheet.costs_ac60||0), 0.001); end
  def test_costs_ad60; assert_in_delta(0, (worksheet.costs_ad60||0), 0.001); end
  def test_costs_ae60; assert_in_delta(0, (worksheet.costs_ae60||0), 0.001); end
  def test_costs_af60; assert_in_delta(0, (worksheet.costs_af60||0), 0.001); end
  def test_costs_ag60; assert_in_delta(0, (worksheet.costs_ag60||0), 0.001); end
  def test_costs_ah60; assert_in_delta(0, (worksheet.costs_ah60||0), 0.001); end
  def test_costs_aj60; assert_in_delta(0, (worksheet.costs_aj60||0), 0.001); end
  def test_costs_ak60; assert_in_delta(0, (worksheet.costs_ak60||0), 0.001); end
  def test_costs_al60; assert_in_delta(0, (worksheet.costs_al60||0), 0.001); end
  def test_costs_am60; assert_in_delta(0, (worksheet.costs_am60||0), 0.001); end
  def test_costs_an60; assert_in_delta(0, (worksheet.costs_an60||0), 0.001); end
  def test_costs_ao60; assert_in_delta(0, (worksheet.costs_ao60||0), 0.001); end
  def test_costs_ap60; assert_in_delta(0, (worksheet.costs_ap60||0), 0.001); end
  def test_costs_aq60; assert_in_delta(0, (worksheet.costs_aq60||0), 0.001); end
  def test_costs_ar60; assert_in_delta(0, (worksheet.costs_ar60||0), 0.001); end
  def test_costs_c61; assert_equal("Total", worksheet.costs_c61); end
  def test_costs_f61; assert_in_epsilon(34147.30291101248, worksheet.costs_f61, 0.001); end
  def test_costs_g61; assert_in_epsilon(35850.52567456203, worksheet.costs_g61, 0.001); end
  def test_costs_h61; assert_in_epsilon(53558.087788075, worksheet.costs_h61, 0.001); end
  def test_costs_i61; assert_in_epsilon(45922.81180278139, worksheet.costs_i61, 0.001); end
  def test_costs_j61; assert_in_epsilon(47769.62859927727, worksheet.costs_j61, 0.001); end
  def test_costs_k61; assert_in_epsilon(46357.610540614296, worksheet.costs_k61, 0.001); end
  def test_costs_l61; assert_in_epsilon(47640.09200583794, worksheet.costs_l61, 0.001); end
  def test_costs_m61; assert_in_epsilon(47847.65360046769, worksheet.costs_m61, 0.001); end
  def test_costs_n61; assert_in_epsilon(50106.0812889562, worksheet.costs_n61, 0.001); end
  def test_costs_p61; assert_in_epsilon(8399.370757605335, worksheet.costs_p61, 0.001); end
  def test_costs_q61; assert_in_epsilon(8901.814207747333, worksheet.costs_q61, 0.001); end
  def test_costs_r61; assert_in_epsilon(9228.166003276283, worksheet.costs_r61, 0.001); end
  def test_costs_s61; assert_in_epsilon(9176.388815499111, worksheet.costs_s61, 0.001); end
  def test_costs_t61; assert_in_epsilon(8890.325616286784, worksheet.costs_t61, 0.001); end
  def test_costs_u61; assert_in_epsilon(8302.440129933026, worksheet.costs_u61, 0.001); end
  def test_costs_v61; assert_in_epsilon(7709.492253282151, worksheet.costs_v61, 0.001); end
  def test_costs_w61; assert_in_epsilon(6654.696978565111, worksheet.costs_w61, 0.001); end
  def test_costs_x61; assert_in_epsilon(6052.1087799392735, worksheet.costs_x61, 0.001); end
  def test_costs_z61; assert_in_epsilon(28133.675252376583, worksheet.costs_z61, 0.001); end
  def test_costs_aa61; assert_in_epsilon(22185.096118123645, worksheet.costs_aa61, 0.001); end
  def test_costs_ab61; assert_in_epsilon(22972.183266225285, worksheet.costs_ab61, 0.001); end
  def test_costs_ac61; assert_in_epsilon(23206.54114608534, worksheet.costs_ac61, 0.001); end
  def test_costs_ad61; assert_in_epsilon(23834.265235192575, worksheet.costs_ad61, 0.001); end
  def test_costs_ae61; assert_in_epsilon(23374.336800195084, worksheet.costs_ae61, 0.001); end
  def test_costs_af61; assert_in_epsilon(23485.241873234518, worksheet.costs_af61, 0.001); end
  def test_costs_ag61; assert_in_epsilon(23653.020985104922, worksheet.costs_ag61, 0.001); end
  def test_costs_ah61; assert_in_epsilon(24539.071853541536, worksheet.costs_ah61, 0.001); end
  def test_costs_aj61; assert_in_epsilon(70680.3489209944, worksheet.costs_aj61, 0.001); end
  def test_costs_ak61; assert_in_epsilon(66937.436000433, worksheet.costs_ak61, 0.001); end
  def test_costs_al61; assert_in_epsilon(85758.43705757656, worksheet.costs_al61, 0.001); end
  def test_costs_am61; assert_in_epsilon(78305.74176436584, worksheet.costs_am61, 0.001); end
  def test_costs_an61; assert_in_epsilon(80494.21945075666, worksheet.costs_an61, 0.001); end
  def test_costs_ao61; assert_in_epsilon(78034.38747074237, worksheet.costs_ao61, 0.001); end
  def test_costs_ap61; assert_in_epsilon(78834.82613235459, worksheet.costs_ap61, 0.001); end
  def test_costs_aq61; assert_in_epsilon(78155.37156413772, worksheet.costs_aq61, 0.001); end
  def test_costs_ar61; assert_in_epsilon(80697.26192243698, worksheet.costs_ar61, 0.001); end
  def test_costs_at62; assert_equal("C1.Low", worksheet.costs_at62); end
  def test_costs_au62; assert_equal("Low estimate of capital costs in that year", worksheet.costs_au62); end
  def test_costs_bd62; assert_equal("C2.Low", worksheet.costs_bd62); end
  def test_costs_be62; assert_equal("Low estimate of O&M costs in that year", worksheet.costs_be62); end
  def test_costs_bn62; assert_equal("C3.Low", worksheet.costs_bn62); end
  def test_costs_bo62; assert_equal("Low estimate of fuel costs in that year", worksheet.costs_bo62); end
  def test_costs_bx62; assert_equal("Low estimate of total Cash Flows", worksheet.costs_bx62); end
  def test_costs_c63; assert_equal("Low estimate of costs", worksheet.costs_c63); end
  def test_costs_d63; assert_equal("Buildings", worksheet.costs_d63); end
  def test_costs_e63; assert_equal("MEUR", worksheet.costs_e63); end
  def test_costs_at63; assert_in_epsilon(25019.577491355114, worksheet.costs_at63, 0.001); end
  def test_costs_au63; assert_in_epsilon(15797.156973587, worksheet.costs_au63, 0.001); end
  def test_costs_av63; assert_in_epsilon(15237.925951340758, worksheet.costs_av63, 0.001); end
  def test_costs_aw63; assert_in_epsilon(7351.519782433738, worksheet.costs_aw63, 0.001); end
  def test_costs_ax63; assert_in_epsilon(4749.2283073759945, worksheet.costs_ax63, 0.001); end
  def test_costs_ay63; assert_in_epsilon(2794.003372587145, worksheet.costs_ay63, 0.001); end
  def test_costs_az63; assert_in_epsilon(1809.355142544548, worksheet.costs_az63, 0.001); end
  def test_costs_ba63; assert_in_epsilon(1123.643339127127, worksheet.costs_ba63, 0.001); end
  def test_costs_bb63; assert_in_epsilon(759.9518220327326, worksheet.costs_bb63, 0.001); end
  def test_costs_bd63; assert_in_epsilon(144.40804752293786, worksheet.costs_bd63, 0.001); end
  def test_costs_be63; assert_in_epsilon(105.65939699231306, worksheet.costs_be63, 0.001); end
  def test_costs_bf63; assert_in_epsilon(83.67074389086886, worksheet.costs_bf63, 0.001); end
  def test_costs_bg63; assert_in_epsilon(62.61097870111838, worksheet.costs_bg63, 0.001); end
  def test_costs_bh63; assert_in_epsilon(45.48373301299386, worksheet.costs_bh63, 0.001); end
  def test_costs_bi63; assert_in_epsilon(31.972260216406085, worksheet.costs_bi63, 0.001); end
  def test_costs_bj63; assert_in_epsilon(22.342689959474093, worksheet.costs_bj63, 0.001); end
  def test_costs_bk63; assert_in_epsilon(15.472924616107877, worksheet.costs_bk63, 0.001); end
  def test_costs_bl63; assert_in_epsilon(10.974120264388793, worksheet.costs_bl63, 0.001); end
  def test_costs_bn63; assert_in_epsilon(3290.5689375044926, worksheet.costs_bn63, 0.001); end
  def test_costs_bo63; assert_in_epsilon(2302.280842203009, worksheet.costs_bo63, 0.001); end
  def test_costs_bp63; assert_in_epsilon(1506.4638794897885, worksheet.costs_bp63, 0.001); end
  def test_costs_bq63; assert_in_epsilon(860.3929478797446, worksheet.costs_bq63, 0.001); end
  def test_costs_br63; assert_in_epsilon(484.8689751427538, worksheet.costs_br63, 0.001); end
  def test_costs_bs63; assert_in_epsilon(272.85811732777813, worksheet.costs_bs63, 0.001); end
  def test_costs_bt63; assert_in_epsilon(148.14082266607562, worksheet.costs_bt63, 0.001); end
  def test_costs_bu63; assert_in_epsilon(83.6972124855172, worksheet.costs_bu63, 0.001); end
  def test_costs_bv63; assert_in_epsilon(43.50981835409326, worksheet.costs_bv63, 0.001); end
  def test_costs_aj63; assert_in_epsilon(28454.554476382546, worksheet.costs_aj63, 0.001); end
  def test_costs_bx63; assert_in_epsilon(28454.554476382546, worksheet.costs_bx63, 0.001); end
  def test_costs_by63; assert_in_epsilon(18205.09721278232, worksheet.costs_by63, 0.001); end
  def test_costs_bz63; assert_in_epsilon(16828.060574721414, worksheet.costs_bz63, 0.001); end
  def test_costs_ca63; assert_in_epsilon(8274.5237090146, worksheet.costs_ca63, 0.001); end
  def test_costs_cb63; assert_in_epsilon(5279.581015531742, worksheet.costs_cb63, 0.001); end
  def test_costs_cc63; assert_in_epsilon(3098.8337501313285, worksheet.costs_cc63, 0.001); end
  def test_costs_cd63; assert_in_epsilon(1979.8386551700976, worksheet.costs_cd63, 0.001); end
  def test_costs_ce63; assert_in_epsilon(1222.8134762287523, worksheet.costs_ce63, 0.001); end
  def test_costs_cf63; assert_in_epsilon(814.4357606512144, worksheet.costs_cf63, 0.001); end
  def test_costs_d64; assert_equal("Transport", worksheet.costs_d64); end
  def test_costs_e64; assert_equal("MEUR", worksheet.costs_e64); end
  def test_costs_at64; assert_in_epsilon(6127.396210004439, worksheet.costs_at64, 0.001); end
  def test_costs_au64; assert_in_epsilon(4527.72719418446, worksheet.costs_au64, 0.001); end
  def test_costs_av64; assert_in_epsilon(3949.7635265410577, worksheet.costs_av64, 0.001); end
  def test_costs_aw64; assert_in_epsilon(2444.3563873230214, worksheet.costs_aw64, 0.001); end
  def test_costs_ax64; assert_in_epsilon(1514.3122950354543, worksheet.costs_ax64, 0.001); end
  def test_costs_ay64; assert_in_epsilon(872.5200849436759, worksheet.costs_ay64, 0.001); end
  def test_costs_az64; assert_in_epsilon(494.7782147738918, worksheet.costs_az64, 0.001); end
  def test_costs_ba64; assert_in_epsilon(282.0505703330061, worksheet.costs_ba64, 0.001); end
  def test_costs_bb64; assert_in_epsilon(136.7643976568129, worksheet.costs_bb64, 0.001); end
  def test_costs_bd64; assert_in_epsilon(7511.912661772789, worksheet.costs_bd64, 0.001); end
  def test_costs_be64; assert_in_epsilon(4836.552161136518, worksheet.costs_be64, 0.001); end
  def test_costs_bf64; assert_in_epsilon(3018.647567264341, worksheet.costs_bf64, 0.001); end
  def test_costs_bg64; assert_in_epsilon(1776.0038579601496, worksheet.costs_bg64, 0.001); end
  def test_costs_bh64; assert_in_epsilon(1006.0849635117544, worksheet.costs_bh64, 0.001); end
  def test_costs_bi64; assert_in_epsilon(540.8554570045499, worksheet.costs_bi64, 0.001); end
  def test_costs_bj64; assert_in_epsilon(276.24430003884413, worksheet.costs_bj64, 0.001); end
  def test_costs_bk64; assert_in_epsilon(130.83219958253468, worksheet.costs_bk64, 0.001); end
  def test_costs_bl64; assert_in_epsilon(55.13150378269827, worksheet.costs_bl64, 0.001); end
  def test_costs_bn64; assert_in_epsilon(4692.344207263488, worksheet.costs_bn64, 0.001); end
  def test_costs_bo64; assert_in_epsilon(2341.317781259029, worksheet.costs_bo64, 0.001); end
  def test_costs_bp64; assert_in_epsilon(1599.3382931399765, worksheet.costs_bp64, 0.001); end
  def test_costs_bq64; assert_in_epsilon(1023.3446497448138, worksheet.costs_bq64, 0.001); end
  def test_costs_br64; assert_in_epsilon(627.4779795387908, worksheet.costs_br64, 0.001); end
  def test_costs_bs64; assert_in_epsilon(355.56331789952503, worksheet.costs_bs64, 0.001); end
  def test_costs_bt64; assert_in_epsilon(207.68740096394833, worksheet.costs_bt64, 0.001); end
  def test_costs_bu64; assert_in_epsilon(122.53809690684726, worksheet.costs_bu64, 0.001); end
  def test_costs_bv64; assert_in_epsilon(71.19180234332673, worksheet.costs_bv64, 0.001); end
  def test_costs_aj64; assert_in_epsilon(18331.65307904072, worksheet.costs_aj64, 0.001); end
  def test_costs_bx64; assert_in_epsilon(18331.65307904072, worksheet.costs_bx64, 0.001); end
  def test_costs_by64; assert_in_epsilon(11705.597136580007, worksheet.costs_by64, 0.001); end
  def test_costs_bz64; assert_in_epsilon(8567.749386945374, worksheet.costs_bz64, 0.001); end
  def test_costs_ca64; assert_in_epsilon(5243.704895027986, worksheet.costs_ca64, 0.001); end
  def test_costs_cb64; assert_in_epsilon(3147.8752380859996, worksheet.costs_cb64, 0.001); end
  def test_costs_cc64; assert_in_epsilon(1768.938859847751, worksheet.costs_cc64, 0.001); end
  def test_costs_cd64; assert_in_epsilon(978.7099157766842, worksheet.costs_cd64, 0.001); end
  def test_costs_ce64; assert_in_epsilon(535.4208668223881, worksheet.costs_ce64, 0.001); end
  def test_costs_cf64; assert_in_epsilon(263.0877037828379, worksheet.costs_cf64, 0.001); end
  def test_costs_d65; assert_equal("Industry", worksheet.costs_d65); end
  def test_costs_e65; assert_equal("MEUR", worksheet.costs_e65); end
  def test_costs_at65; assert_in_epsilon(5.5668597011630485, worksheet.costs_at65, 0.001); end
  def test_costs_au65; assert_in_epsilon(152.0940505258356, worksheet.costs_au65, 0.001); end
  def test_costs_av65; assert_in_epsilon(236.82455178582617, worksheet.costs_av65, 0.001); end
  def test_costs_aw65; assert_in_epsilon(199.0828246494861, worksheet.costs_aw65, 0.001); end
  def test_costs_ax65; assert_in_epsilon(161.15187269738274, worksheet.costs_ax65, 0.001); end
  def test_costs_ay65; assert_in_epsilon(115.30008769354119, worksheet.costs_ay65, 0.001); end
  def test_costs_az65; assert_in_epsilon(77.37091818769335, worksheet.costs_az65, 0.001); end
  def test_costs_ba65; assert_in_epsilon(51.68301522377571, worksheet.costs_ba65, 0.001); end
  def test_costs_bb65; assert_in_epsilon(40.038960539976415, worksheet.costs_bb65, 0.001); end
  def test_costs_bd65; assert_in_delta(0, (worksheet.costs_bd65||0), 0.001); end
  def test_costs_be65; assert_in_delta(0, (worksheet.costs_be65||0), 0.001); end
  def test_costs_bf65; assert_in_delta(0, (worksheet.costs_bf65||0), 0.001); end
  def test_costs_bg65; assert_in_delta(0, (worksheet.costs_bg65||0), 0.001); end
  def test_costs_bh65; assert_in_delta(0, (worksheet.costs_bh65||0), 0.001); end
  def test_costs_bi65; assert_in_delta(0, (worksheet.costs_bi65||0), 0.001); end
  def test_costs_bj65; assert_in_delta(0, (worksheet.costs_bj65||0), 0.001); end
  def test_costs_bk65; assert_in_delta(0, (worksheet.costs_bk65||0), 0.001); end
  def test_costs_bl65; assert_in_delta(0, (worksheet.costs_bl65||0), 0.001); end
  def test_costs_bn65; assert_in_epsilon(5255.553137615401, worksheet.costs_bn65, 0.001); end
  def test_costs_bo65; assert_in_epsilon(3046.0029015077953, worksheet.costs_bo65, 0.001); end
  def test_costs_bp65; assert_in_epsilon(1756.6772303143998, worksheet.costs_bp65, 0.001); end
  def test_costs_bq65; assert_in_epsilon(995.376830587576, worksheet.costs_bq65, 0.001); end
  def test_costs_br65; assert_in_epsilon(585.5939212731007, worksheet.costs_br65, 0.001); end
  def test_costs_bs65; assert_in_epsilon(334.12000795014757, worksheet.costs_bs65, 0.001); end
  def test_costs_bt65; assert_in_epsilon(187.46829330518324, worksheet.costs_bt65, 0.001); end
  def test_costs_bu65; assert_in_epsilon(107.39636420879286, worksheet.costs_bu65, 0.001); end
  def test_costs_bv65; assert_in_epsilon(60.38547544073516, worksheet.costs_bv65, 0.001); end
  def test_costs_aj65; assert_in_epsilon(5261.119997316566, worksheet.costs_aj65, 0.001); end
  def test_costs_bx65; assert_in_epsilon(5261.119997316566, worksheet.costs_bx65, 0.001); end
  def test_costs_by65; assert_in_epsilon(3198.0969520336307, worksheet.costs_by65, 0.001); end
  def test_costs_bz65; assert_in_epsilon(1993.5017821002266, worksheet.costs_bz65, 0.001); end
  def test_costs_ca65; assert_in_epsilon(1194.459655237062, worksheet.costs_ca65, 0.001); end
  def test_costs_cb65; assert_in_epsilon(746.7457939704834, worksheet.costs_cb65, 0.001); end
  def test_costs_cc65; assert_in_epsilon(449.42009564368874, worksheet.costs_cc65, 0.001); end
  def test_costs_cd65; assert_in_epsilon(264.83921149287664, worksheet.costs_cd65, 0.001); end
  def test_costs_ce65; assert_in_epsilon(159.07937943256857, worksheet.costs_ce65, 0.001); end
  def test_costs_cf65; assert_in_epsilon(100.42443598071158, worksheet.costs_cf65, 0.001); end
  def test_costs_d66; assert_equal("Electricity", worksheet.costs_d66); end
  def test_costs_e66; assert_equal("MEUR", worksheet.costs_e66); end
  def test_costs_f66; assert_in_epsilon(2852.267050228311, worksheet.costs_f66, 0.001); end
  def test_costs_at66; assert_in_epsilon(2852.267050228311, worksheet.costs_at66, 0.001); end
  def test_costs_au66; assert_in_epsilon(1729.00561314281, worksheet.costs_au66, 0.001); end
  def test_costs_av66; assert_in_epsilon(1197.0913795457257, worksheet.costs_av66, 0.001); end
  def test_costs_aw66; assert_in_epsilon(983.5884550171878, worksheet.costs_aw66, 0.001); end
  def test_costs_ax66; assert_in_epsilon(667.0721808614038, worksheet.costs_ax66, 0.001); end
  def test_costs_ay66; assert_in_epsilon(491.41719652551836, worksheet.costs_ay66, 0.001); end
  def test_costs_az66; assert_in_epsilon(345.0494818182378, worksheet.costs_az66, 0.001); end
  def test_costs_ba66; assert_in_epsilon(242.75823354166377, worksheet.costs_ba66, 0.001); end
  def test_costs_bb66; assert_in_epsilon(170.17150278710312, worksheet.costs_bb66, 0.001); end
  def test_costs_p66; assert_in_epsilon(728.3427109753727, worksheet.costs_p66, 0.001); end
  def test_costs_bd66; assert_in_epsilon(728.3427109753727, worksheet.costs_bd66, 0.001); end
  def test_costs_be66; assert_in_epsilon(573.6446351953704, worksheet.costs_be66, 0.001); end
  def test_costs_bf66; assert_in_epsilon(446.90408944158224, worksheet.costs_bf66, 0.001); end
  def test_costs_bg66; assert_in_epsilon(352.01730560284227, worksheet.costs_bg66, 0.001); end
  def test_costs_bh66; assert_in_epsilon(265.9230303329138, worksheet.costs_bh66, 0.001); end
  def test_costs_bi66; assert_in_epsilon(190.8487256231461, worksheet.costs_bi66, 0.001); end
  def test_costs_bj66; assert_in_epsilon(141.54601303713687, worksheet.costs_bj66, 0.001); end
  def test_costs_bk66; assert_in_epsilon(89.40627871744248, worksheet.costs_bk66, 0.001); end
  def test_costs_bl66; assert_in_epsilon(66.91545379333644, worksheet.costs_bl66, 0.001); end
  def test_costs_z66; assert_in_epsilon(2231.4218931324526, worksheet.costs_z66, 0.001); end
  def test_costs_bn66; assert_in_epsilon(2231.4218931324526, worksheet.costs_bn66, 0.001); end
  def test_costs_bo66; assert_in_epsilon(523.9632034197499, worksheet.costs_bo66, 0.001); end
  def test_costs_bp66; assert_in_epsilon(497.67108133548385, worksheet.costs_bp66, 0.001); end
  def test_costs_bq66; assert_in_epsilon(525.9707657023911, worksheet.costs_bq66, 0.001); end
  def test_costs_br66; assert_in_epsilon(506.82420493127916, worksheet.costs_br66, 0.001); end
  def test_costs_bs66; assert_in_epsilon(414.4844794139576, worksheet.costs_bs66, 0.001); end
  def test_costs_bt66; assert_in_epsilon(336.1987362974999, worksheet.costs_bt66, 0.001); end
  def test_costs_bu66; assert_in_epsilon(246.05574638035523, worksheet.costs_bu66, 0.001); end
  def test_costs_bv66; assert_in_epsilon(195.74947574076202, worksheet.costs_bv66, 0.001); end
  def test_costs_aj66; assert_in_epsilon(5812.031654336137, worksheet.costs_aj66, 0.001); end
  def test_costs_bx66; assert_in_epsilon(5812.031654336137, worksheet.costs_bx66, 0.001); end
  def test_costs_by66; assert_in_epsilon(2826.6134517579294, worksheet.costs_by66, 0.001); end
  def test_costs_bz66; assert_in_epsilon(2141.666550322792, worksheet.costs_bz66, 0.001); end
  def test_costs_ca66; assert_in_epsilon(1861.576526322421, worksheet.costs_ca66, 0.001); end
  def test_costs_cb66; assert_in_epsilon(1439.8194161255965, worksheet.costs_cb66, 0.001); end
  def test_costs_cc66; assert_in_epsilon(1096.750401562622, worksheet.costs_cc66, 0.001); end
  def test_costs_cd66; assert_in_epsilon(822.7942311528747, worksheet.costs_cd66, 0.001); end
  def test_costs_ce66; assert_in_epsilon(578.2202586394615, worksheet.costs_ce66, 0.001); end
  def test_costs_cf66; assert_in_epsilon(432.83643232120164, worksheet.costs_cf66, 0.001); end
  def test_costs_d67; assert_equal("Fossil fuels", worksheet.costs_d67); end
  def test_costs_e67; assert_equal("MEUR", worksheet.costs_e67); end
  def test_costs_f67; assert_in_epsilon(130.67392176650156, worksheet.costs_f67, 0.001); end
  def test_costs_at67; assert_in_epsilon(130.67392176650156, worksheet.costs_at67, 0.001); end
  def test_costs_au67; assert_in_epsilon(46.33822706174893, worksheet.costs_au67, 0.001); end
  def test_costs_av67; assert_in_epsilon(23.148860666727515, worksheet.costs_av67, 0.001); end
  def test_costs_aw67; assert_in_epsilon(13.067679253333248, worksheet.costs_aw67, 0.001); end
  def test_costs_ax67; assert_in_epsilon(7.683808304835691, worksheet.costs_ax67, 0.001); end
  def test_costs_ay67; assert_in_epsilon(4.637909711181169, worksheet.costs_ay67, 0.001); end
  def test_costs_az67; assert_in_epsilon(3.1532062733282555, worksheet.costs_az67, 0.001); end
  def test_costs_ba67; assert_in_epsilon(2.176936882149655, worksheet.costs_ba67, 0.001); end
  def test_costs_bb67; assert_in_delta(0, (worksheet.costs_bb67||0), 0.001); end
  def test_costs_p67; assert_in_delta(0.23394413186588495, worksheet.costs_p67, 0.001); end
  def test_costs_bd67; assert_in_delta(0.23394413186588495, worksheet.costs_bd67, 0.001); end
  def test_costs_be67; assert_in_delta(0.1168698169039854, worksheet.costs_be67, 0.001); end
  def test_costs_bf67; assert_in_delta(0.06597375584415592, worksheet.costs_bf67, 0.001); end
  def test_costs_bg67; assert_in_delta(0.038792633583137726, worksheet.costs_bg67, 0.001); end
  def test_costs_bh67; assert_in_delta(0.023415046924621902, worksheet.costs_bh67, 0.001); end
  def test_costs_bi67; assert_in_delta(0.014478157056560925, worksheet.costs_bi67, 0.001); end
  def test_costs_bj67; assert_in_delta(0.009138940223188112, worksheet.costs_bj67, 0.001); end
  def test_costs_bk67; assert_in_delta(0.005866177970460157, worksheet.costs_bk67, 0.001); end
  def test_costs_bl67; assert_in_delta(0, (worksheet.costs_bl67||0), 0.001); end
  def test_costs_z67; assert_in_epsilon(12161.043951571908, worksheet.costs_z67, 0.001); end
  def test_costs_bn67; assert_in_epsilon(12161.043951571908, worksheet.costs_bn67, 0.001); end
  def test_costs_bo67; assert_in_epsilon(4973.554161536624, worksheet.costs_bo67, 0.001); end
  def test_costs_bp67; assert_in_epsilon(2936.599269061142, worksheet.costs_bp67, 0.001); end
  def test_costs_bq67; assert_in_epsilon(1681.5690824097624, worksheet.costs_bq67, 0.001); end
  def test_costs_br67; assert_in_epsilon(978.3268770825581, worksheet.costs_br67, 0.001); end
  def test_costs_bs67; assert_in_epsilon(525.4605986062292, worksheet.costs_bs67, 0.001); end
  def test_costs_bt67; assert_in_epsilon(289.0583707307643, worksheet.costs_bt67, 0.001); end
  def test_costs_bu67; assert_in_epsilon(160.14666954412468, worksheet.costs_bu67, 0.001); end
  def test_costs_bv67; assert_in_epsilon(89.69782524623776, worksheet.costs_bv67, 0.001); end
  def test_costs_aj67; assert_in_epsilon(12291.951817470275, worksheet.costs_aj67, 0.001); end
  def test_costs_bx67; assert_in_epsilon(12291.951817470275, worksheet.costs_bx67, 0.001); end
  def test_costs_by67; assert_in_epsilon(5020.009258415276, worksheet.costs_by67, 0.001); end
  def test_costs_bz67; assert_in_epsilon(2959.8141034837136, worksheet.costs_bz67, 0.001); end
  def test_costs_ca67; assert_in_epsilon(1694.675554296679, worksheet.costs_ca67, 0.001); end
  def test_costs_cb67; assert_in_epsilon(986.0341004343184, worksheet.costs_cb67, 0.001); end
  def test_costs_cc67; assert_in_epsilon(530.1129864744669, worksheet.costs_cc67, 0.001); end
  def test_costs_cd67; assert_in_epsilon(292.2207159443157, worksheet.costs_cd67, 0.001); end
  def test_costs_ce67; assert_in_epsilon(162.32947260424476, worksheet.costs_ce67, 0.001); end
  def test_costs_cf67; assert_in_epsilon(89.69782524623776, worksheet.costs_cf67, 0.001); end
  def test_costs_d68; assert_equal("Bioenergy", worksheet.costs_d68); end
  def test_costs_e68; assert_equal("MEUR", worksheet.costs_e68); end
  def test_costs_f68; assert_in_epsilon(11.821377956946224, worksheet.costs_f68, 0.001); end
  def test_costs_at68; assert_in_epsilon(11.821377956946224, worksheet.costs_at68, 0.001); end
  def test_costs_au68; assert_in_epsilon(8.033775713402823, worksheet.costs_au68, 0.001); end
  def test_costs_av68; assert_in_epsilon(4.207071489961615, worksheet.costs_av68, 0.001); end
  def test_costs_aw68; assert_in_epsilon(1.9409015854747913, worksheet.costs_aw68, 0.001); end
  def test_costs_ax68; assert_in_epsilon(1.2024400873875325, worksheet.costs_ax68, 0.001); end
  def test_costs_ay68; assert_in_delta(0.7432864885205991, worksheet.costs_ay68, 0.001); end
  def test_costs_az68; assert_in_delta(0.4777883914098835, worksheet.costs_az68, 0.001); end
  def test_costs_ba68; assert_in_delta(0.3037264011305862, worksheet.costs_ba68, 0.001); end
  def test_costs_bb68; assert_in_delta(0.1635830501497012, worksheet.costs_bb68, 0.001); end
  def test_costs_p68; assert_in_epsilon(14.473393202369596, worksheet.costs_p68, 0.001); end
  def test_costs_bd68; assert_in_epsilon(14.473393202369596, worksheet.costs_bd68, 0.001); end
  def test_costs_be68; assert_in_epsilon(11.353192360149533, worksheet.costs_be68, 0.001); end
  def test_costs_bf68; assert_in_epsilon(8.569101952273924, worksheet.costs_bf68, 0.001); end
  def test_costs_bg68; assert_in_epsilon(6.08358945290785, worksheet.costs_bg68, 0.001); end
  def test_costs_bh68; assert_in_epsilon(3.975112016259557, worksheet.costs_bh68, 0.001); end
  def test_costs_bi68; assert_in_epsilon(2.5910780963231757, worksheet.costs_bi68, 0.001); end
  def test_costs_bj68; assert_in_epsilon(1.6777057464833334, worksheet.costs_bj68, 0.001); end
  def test_costs_bk68; assert_in_epsilon(1.0841518839079913, worksheet.costs_bk68, 0.001); end
  def test_costs_bl68; assert_in_delta(0.6998308215120942, worksheet.costs_bl68, 0.001); end
  def test_costs_z68; assert_in_epsilon(502.7431252888349, worksheet.costs_z68, 0.001); end
  def test_costs_bn68; assert_in_epsilon(502.7431252888349, worksheet.costs_bn68, 0.001); end
  def test_costs_bo68; assert_in_epsilon(477.2458877675905, worksheet.costs_bo68, 0.001); end
  def test_costs_bp68; assert_in_epsilon(430.47880324942054, worksheet.costs_bp68, 0.001); end
  def test_costs_bq68; assert_in_epsilon(339.6701187753182, worksheet.costs_bq68, 0.001); end
  def test_costs_br68; assert_in_epsilon(245.784356999751, worksheet.costs_br68, 0.001); end
  def test_costs_bs68; assert_in_epsilon(167.04581473788664, worksheet.costs_bs68, 0.001); end
  def test_costs_bt68; assert_in_epsilon(112.36371227608636, worksheet.costs_bt68, 0.001); end
  def test_costs_bu68; assert_in_epsilon(75.08660030214325, worksheet.costs_bu68, 0.001); end
  def test_costs_bv68; assert_in_epsilon(48.71109452512589, worksheet.costs_bv68, 0.001); end
  def test_costs_aj68; assert_in_epsilon(529.0378964481507, worksheet.costs_aj68, 0.001); end
  def test_costs_bx68; assert_in_epsilon(529.0378964481507, worksheet.costs_bx68, 0.001); end
  def test_costs_by68; assert_in_epsilon(496.6328558411428, worksheet.costs_by68, 0.001); end
  def test_costs_bz68; assert_in_epsilon(443.25497669165617, worksheet.costs_bz68, 0.001); end
  def test_costs_ca68; assert_in_epsilon(347.6946098137008, worksheet.costs_ca68, 0.001); end
  def test_costs_cb68; assert_in_epsilon(250.96190910339809, worksheet.costs_cb68, 0.001); end
  def test_costs_cc68; assert_in_epsilon(170.3801793227304, worksheet.costs_cc68, 0.001); end
  def test_costs_cd68; assert_in_epsilon(114.51920641397957, worksheet.costs_cd68, 0.001); end
  def test_costs_ce68; assert_in_epsilon(76.47447858718184, worksheet.costs_ce68, 0.001); end
  def test_costs_cf68; assert_in_epsilon(49.57450839678768, worksheet.costs_cf68, 0.001); end
  def test_costs_d69; assert_equal("Electricity (ex/im)ports", worksheet.costs_d69); end
  def test_costs_e69; assert_equal("MEUR", worksheet.costs_e69); end
  def test_costs_at69; assert_in_delta(0, (worksheet.costs_at69||0), 0.001); end
  def test_costs_au69; assert_in_delta(0, (worksheet.costs_au69||0), 0.001); end
  def test_costs_av69; assert_in_delta(0, (worksheet.costs_av69||0), 0.001); end
  def test_costs_aw69; assert_in_delta(0, (worksheet.costs_aw69||0), 0.001); end
  def test_costs_ax69; assert_in_delta(0, (worksheet.costs_ax69||0), 0.001); end
  def test_costs_ay69; assert_in_delta(0, (worksheet.costs_ay69||0), 0.001); end
  def test_costs_az69; assert_in_delta(0, (worksheet.costs_az69||0), 0.001); end
  def test_costs_ba69; assert_in_delta(0, (worksheet.costs_ba69||0), 0.001); end
  def test_costs_bb69; assert_in_delta(0, (worksheet.costs_bb69||0), 0.001); end
  def test_costs_bd69; assert_in_delta(0, (worksheet.costs_bd69||0), 0.001); end
  def test_costs_be69; assert_in_delta(0, (worksheet.costs_be69||0), 0.001); end
  def test_costs_bf69; assert_in_delta(0, (worksheet.costs_bf69||0), 0.001); end
  def test_costs_bg69; assert_in_delta(0, (worksheet.costs_bg69||0), 0.001); end
  def test_costs_bh69; assert_in_delta(0, (worksheet.costs_bh69||0), 0.001); end
  def test_costs_bi69; assert_in_delta(0, (worksheet.costs_bi69||0), 0.001); end
  def test_costs_bj69; assert_in_delta(0, (worksheet.costs_bj69||0), 0.001); end
  def test_costs_bk69; assert_in_delta(0, (worksheet.costs_bk69||0), 0.001); end
  def test_costs_bl69; assert_in_delta(0, (worksheet.costs_bl69||0), 0.001); end
  def test_costs_bn69; assert_in_delta(0, (worksheet.costs_bn69||0), 0.001); end
  def test_costs_bo69; assert_in_epsilon(110.83445616605916, worksheet.costs_bo69, 0.001); end
  def test_costs_bp69; assert_in_epsilon(129.54254524832257, worksheet.costs_bp69, 0.001); end
  def test_costs_bq69; assert_in_epsilon(129.1370486315781, worksheet.costs_bq69, 0.001); end
  def test_costs_br69; assert_in_epsilon(113.93534088050596, worksheet.costs_br69, 0.001); end
  def test_costs_bs69; assert_in_epsilon(87.8254107653625, worksheet.costs_bs69, 0.001); end
  def test_costs_bt69; assert_in_epsilon(64.98789944352447, worksheet.costs_bt69, 0.001); end
  def test_costs_bu69; assert_in_epsilon(46.750838978951215, worksheet.costs_bu69, 0.001); end
  def test_costs_bv69; assert_in_epsilon(32.94353787490029, worksheet.costs_bv69, 0.001); end
  def test_costs_aj69; assert_in_delta(0, (worksheet.costs_aj69||0), 0.001); end
  def test_costs_bx69; assert_in_delta(0, (worksheet.costs_bx69||0), 0.001); end
  def test_costs_by69; assert_in_epsilon(110.83445616605916, worksheet.costs_by69, 0.001); end
  def test_costs_bz69; assert_in_epsilon(129.54254524832257, worksheet.costs_bz69, 0.001); end
  def test_costs_ca69; assert_in_epsilon(129.1370486315781, worksheet.costs_ca69, 0.001); end
  def test_costs_cb69; assert_in_epsilon(113.93534088050596, worksheet.costs_cb69, 0.001); end
  def test_costs_cc69; assert_in_epsilon(87.8254107653625, worksheet.costs_cc69, 0.001); end
  def test_costs_cd69; assert_in_epsilon(64.98789944352447, worksheet.costs_cd69, 0.001); end
  def test_costs_ce69; assert_in_epsilon(46.750838978951215, worksheet.costs_ce69, 0.001); end
  def test_costs_cf69; assert_in_epsilon(32.94353787490029, worksheet.costs_cf69, 0.001); end
  def test_costs_d70; assert_equal("Total", worksheet.costs_d70); end
  def test_costs_e70; assert_equal("MEUR", worksheet.costs_e70); end
  def test_costs_f70; assert_in_epsilon(34147.30291101248, worksheet.costs_f70, 0.001); end
  def test_costs_at70; assert_in_epsilon(34147.30291101248, worksheet.costs_at70, 0.001); end
  def test_costs_au70; assert_in_epsilon(22260.355834215257, worksheet.costs_au70, 0.001); end
  def test_costs_av70; assert_in_epsilon(20648.961341370057, worksheet.costs_av70, 0.001); end
  def test_costs_aw70; assert_in_epsilon(10993.55603026224, worksheet.costs_aw70, 0.001); end
  def test_costs_ax70; assert_in_epsilon(7100.650904362458, worksheet.costs_ax70, 0.001); end
  def test_costs_ay70; assert_in_epsilon(4278.621937949582, worksheet.costs_ay70, 0.001); end
  def test_costs_az70; assert_in_epsilon(2730.1847519891085, worksheet.costs_az70, 0.001); end
  def test_costs_ba70; assert_in_epsilon(1702.615821508853, worksheet.costs_ba70, 0.001); end
  def test_costs_bb70; assert_in_epsilon(1107.0902660667746, worksheet.costs_bb70, 0.001); end
  def test_costs_p70; assert_in_epsilon(8399.370757605335, worksheet.costs_p70, 0.001); end
  def test_costs_bd70; assert_in_epsilon(8399.370757605335, worksheet.costs_bd70, 0.001); end
  def test_costs_be70; assert_in_epsilon(5527.326255501256, worksheet.costs_be70, 0.001); end
  def test_costs_bf70; assert_in_epsilon(3557.85747630491, worksheet.costs_bf70, 0.001); end
  def test_costs_bg70; assert_in_epsilon(2196.7545243506015, worksheet.costs_bg70, 0.001); end
  def test_costs_bh70; assert_in_epsilon(1321.4902539208465, worksheet.costs_bh70, 0.001); end
  def test_costs_bi70; assert_in_epsilon(766.2819990974817, worksheet.costs_bi70, 0.001); end
  def test_costs_bj70; assert_in_epsilon(441.8198477221616, worksheet.costs_bj70, 0.001); end
  def test_costs_bk70; assert_in_epsilon(236.8014209779635, worksheet.costs_bk70, 0.001); end
  def test_costs_bl70; assert_in_epsilon(133.7209086619356, worksheet.costs_bl70, 0.001); end
  def test_costs_z70; assert_in_epsilon(28133.675252376575, worksheet.costs_z70, 0.001); end
  def test_costs_bn70; assert_in_epsilon(28133.675252376575, worksheet.costs_bn70, 0.001); end
  def test_costs_bo70; assert_in_epsilon(13775.199233859856, worksheet.costs_bo70, 0.001); end
  def test_costs_bp70; assert_in_epsilon(8856.771101838534, worksheet.costs_bp70, 0.001); end
  def test_costs_bq70; assert_in_epsilon(5555.461443731184, worksheet.costs_bq70, 0.001); end
  def test_costs_br70; assert_in_epsilon(3542.81165584874, worksheet.costs_br70, 0.001); end
  def test_costs_bs70; assert_in_epsilon(2157.3577467008868, worksheet.costs_bs70, 0.001); end
  def test_costs_bt70; assert_in_epsilon(1345.905235683082, worksheet.costs_bt70, 0.001); end
  def test_costs_bu70; assert_in_epsilon(841.6715288067317, worksheet.costs_bu70, 0.001); end
  def test_costs_bv70; assert_in_epsilon(542.1890295251811, worksheet.costs_bv70, 0.001); end
  def test_costs_aj70; assert_in_epsilon(70680.3489209944, worksheet.costs_aj70, 0.001); end
  def test_costs_bx70; assert_in_epsilon(70680.3489209944, worksheet.costs_bx70, 0.001); end
  def test_costs_by70; assert_in_epsilon(41562.88132357636, worksheet.costs_by70, 0.001); end
  def test_costs_bz70; assert_in_epsilon(33063.5899195135, worksheet.costs_bz70, 0.001); end
  def test_costs_ca70; assert_in_epsilon(18745.771998344026, worksheet.costs_ca70, 0.001); end
  def test_costs_cb70; assert_in_epsilon(11964.952814132044, worksheet.costs_cb70, 0.001); end
  def test_costs_cc70; assert_in_epsilon(7202.26168374795, worksheet.costs_cc70, 0.001); end
  def test_costs_cd70; assert_in_epsilon(4517.909835394354, worksheet.costs_cd70, 0.001); end
  def test_costs_ce70; assert_in_epsilon(2781.0887712935482, worksheet.costs_ce70, 0.001); end
  def test_costs_cf70; assert_in_epsilon(1783.000204253891, worksheet.costs_cf70, 0.001); end
  def test_costs_f72; assert_equal("C1.High", worksheet.costs_f72); end
  def test_costs_g72; assert_equal("High estimate of capital costs in that year", worksheet.costs_g72); end
  def test_costs_p72; assert_equal("C2.High", worksheet.costs_p72); end
  def test_costs_q72; assert_equal("High estimate of O&M costs in that year", worksheet.costs_q72); end
  def test_costs_z72; assert_equal("C3.High", worksheet.costs_z72); end
  def test_costs_aa72; assert_equal("High estimate of fuel costs in that year", worksheet.costs_aa72); end
  def test_costs_aj72; assert_equal("High estimate of total cash flows", worksheet.costs_aj72); end
  def test_costs_b73; assert_equal("I.a", worksheet.costs_b73); end
  def test_costs_c73; assert_equal("Biomass and gas power stations", worksheet.costs_c73); end
  def test_costs_d73; assert_equal("Electricity", worksheet.costs_d73); end
  def test_costs_e73; assert_equal("MEUR", worksheet.costs_e73); end
  def test_costs_f73; assert_in_delta(0, (worksheet.costs_f73||0), 0.001); end
  def test_costs_b74; assert_equal("I.b", worksheet.costs_b74); end
  def test_costs_c74; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c74); end
  def test_costs_d74; assert_equal("Electricity", worksheet.costs_d74); end
  def test_costs_e74; assert_equal("MEUR", worksheet.costs_e74); end
  def test_costs_f74; assert_in_delta(0, (worksheet.costs_f74||0), 0.001); end
  def test_costs_p74; assert_in_delta(0, (worksheet.costs_p74||0), 0.001); end
  def test_costs_b75; assert_equal("II.a", worksheet.costs_b75); end
  def test_costs_c75; assert_equal("Nuclear power", worksheet.costs_c75); end
  def test_costs_d75; assert_equal("Electricity", worksheet.costs_d75); end
  def test_costs_e75; assert_equal("MEUR", worksheet.costs_e75); end
  def test_costs_f75; assert_in_delta(0, (worksheet.costs_f75||0), 0.001); end
  def test_costs_b76; assert_equal("III.a.1", worksheet.costs_b76); end
  def test_costs_c76; assert_equal("Onshore wind", worksheet.costs_c76); end
  def test_costs_d76; assert_equal("Electricity", worksheet.costs_d76); end
  def test_costs_e76; assert_equal("MEUR", worksheet.costs_e76); end
  def test_costs_p76; assert_in_epsilon(22.862499999999997, worksheet.costs_p76, 0.001); end
  def test_costs_z76; assert_in_delta(0, (worksheet.costs_z76||0), 0.001); end
  def test_costs_b77; assert_equal("III.a.2", worksheet.costs_b77); end
  def test_costs_c77; assert_equal("Offshore wind", worksheet.costs_c77); end
  def test_costs_d77; assert_equal("Electricity", worksheet.costs_d77); end
  def test_costs_e77; assert_equal("MEUR", worksheet.costs_e77); end
  def test_costs_p77; assert_in_epsilon(19.95, worksheet.costs_p77, 0.001); end
  def test_costs_z77; assert_in_delta(0, (worksheet.costs_z77||0), 0.001); end
  def test_costs_b78; assert_equal("III.b", worksheet.costs_b78); end
  def test_costs_c78; assert_equal("Hydroelectric power stations", worksheet.costs_c78); end
  def test_costs_d78; assert_equal("Electricity", worksheet.costs_d78); end
  def test_costs_e78; assert_equal("MEUR", worksheet.costs_e78); end
  def test_costs_f78; assert_in_delta(0, (worksheet.costs_f78||0), 0.001); end
  def test_costs_b79; assert_equal("III.c", worksheet.costs_b79); end
  def test_costs_c79; assert_equal("Tidal and Wave [UNUSED]", worksheet.costs_c79); end
  def test_costs_d79; assert_equal("Electricity", worksheet.costs_d79); end
  def test_costs_e79; assert_equal("MEUR", worksheet.costs_e79); end
  def test_costs_z79; assert_in_delta(0, (worksheet.costs_z79||0), 0.001); end
  def test_costs_aa79; assert_in_delta(0, (worksheet.costs_aa79||0), 0.001); end
  def test_costs_ab79; assert_in_delta(0, (worksheet.costs_ab79||0), 0.001); end
  def test_costs_ac79; assert_in_delta(0, (worksheet.costs_ac79||0), 0.001); end
  def test_costs_ad79; assert_in_delta(0, (worksheet.costs_ad79||0), 0.001); end
  def test_costs_ae79; assert_in_delta(0, (worksheet.costs_ae79||0), 0.001); end
  def test_costs_af79; assert_in_delta(0, (worksheet.costs_af79||0), 0.001); end
  def test_costs_ag79; assert_in_delta(0, (worksheet.costs_ag79||0), 0.001); end
  def test_costs_ah79; assert_in_delta(0, (worksheet.costs_ah79||0), 0.001); end
  def test_costs_b80; assert_equal("III.d", worksheet.costs_b80); end
  def test_costs_c80; assert_equal("Geothermal electricity", worksheet.costs_c80); end
  def test_costs_d80; assert_equal("Electricity", worksheet.costs_d80); end
  def test_costs_e80; assert_equal("MEUR", worksheet.costs_e80); end
  def test_costs_f80; assert_in_delta(0, (worksheet.costs_f80||0), 0.001); end
  def test_costs_z80; assert_in_delta(0, (worksheet.costs_z80||0), 0.001); end
  def test_costs_aa80; assert_in_delta(0, (worksheet.costs_aa80||0), 0.001); end
  def test_costs_ab80; assert_in_delta(0, (worksheet.costs_ab80||0), 0.001); end
  def test_costs_ac80; assert_in_delta(0, (worksheet.costs_ac80||0), 0.001); end
  def test_costs_ad80; assert_in_delta(0, (worksheet.costs_ad80||0), 0.001); end
  def test_costs_ae80; assert_in_delta(0, (worksheet.costs_ae80||0), 0.001); end
  def test_costs_af80; assert_in_delta(0, (worksheet.costs_af80||0), 0.001); end
  def test_costs_ag80; assert_in_delta(0, (worksheet.costs_ag80||0), 0.001); end
  def test_costs_ah80; assert_in_delta(0, (worksheet.costs_ah80||0), 0.001); end
  def test_costs_b81; assert_equal("III.e", worksheet.costs_b81); end
  def test_costs_c81; assert_equal("Tidal [UNUSED]", worksheet.costs_c81); end
  def test_costs_d81; assert_equal("Electricity", worksheet.costs_d81); end
  def test_costs_e81; assert_equal("MEUR", worksheet.costs_e81); end
  def test_costs_f81; assert_in_delta(0, (worksheet.costs_f81||0), 0.001); end
  def test_costs_g81; assert_in_delta(0, (worksheet.costs_g81||0), 0.001); end
  def test_costs_h81; assert_in_delta(0, (worksheet.costs_h81||0), 0.001); end
  def test_costs_i81; assert_in_delta(0, (worksheet.costs_i81||0), 0.001); end
  def test_costs_j81; assert_in_delta(0, (worksheet.costs_j81||0), 0.001); end
  def test_costs_k81; assert_in_delta(0, (worksheet.costs_k81||0), 0.001); end
  def test_costs_l81; assert_in_delta(0, (worksheet.costs_l81||0), 0.001); end
  def test_costs_m81; assert_in_delta(0, (worksheet.costs_m81||0), 0.001); end
  def test_costs_n81; assert_in_delta(0, (worksheet.costs_n81||0), 0.001); end
  def test_costs_p81; assert_in_delta(0, (worksheet.costs_p81||0), 0.001); end
  def test_costs_q81; assert_in_delta(0, (worksheet.costs_q81||0), 0.001); end
  def test_costs_r81; assert_in_delta(0, (worksheet.costs_r81||0), 0.001); end
  def test_costs_s81; assert_in_delta(0, (worksheet.costs_s81||0), 0.001); end
  def test_costs_t81; assert_in_delta(0, (worksheet.costs_t81||0), 0.001); end
  def test_costs_u81; assert_in_delta(0, (worksheet.costs_u81||0), 0.001); end
  def test_costs_v81; assert_in_delta(0, (worksheet.costs_v81||0), 0.001); end
  def test_costs_w81; assert_in_delta(0, (worksheet.costs_w81||0), 0.001); end
  def test_costs_x81; assert_in_delta(0, (worksheet.costs_x81||0), 0.001); end
  def test_costs_z81; assert_in_delta(0, (worksheet.costs_z81||0), 0.001); end
  def test_costs_aa81; assert_in_delta(0, (worksheet.costs_aa81||0), 0.001); end
  def test_costs_ab81; assert_in_delta(0, (worksheet.costs_ab81||0), 0.001); end
  def test_costs_ac81; assert_in_delta(0, (worksheet.costs_ac81||0), 0.001); end
  def test_costs_ad81; assert_in_delta(0, (worksheet.costs_ad81||0), 0.001); end
  def test_costs_ae81; assert_in_delta(0, (worksheet.costs_ae81||0), 0.001); end
  def test_costs_af81; assert_in_delta(0, (worksheet.costs_af81||0), 0.001); end
  def test_costs_ag81; assert_in_delta(0, (worksheet.costs_ag81||0), 0.001); end
  def test_costs_ah81; assert_in_delta(0, (worksheet.costs_ah81||0), 0.001); end
  def test_costs_aj81; assert_in_delta(0, (worksheet.costs_aj81||0), 0.001); end
  def test_costs_ak81; assert_in_delta(0, (worksheet.costs_ak81||0), 0.001); end
  def test_costs_al81; assert_in_delta(0, (worksheet.costs_al81||0), 0.001); end
  def test_costs_am81; assert_in_delta(0, (worksheet.costs_am81||0), 0.001); end
  def test_costs_an81; assert_in_delta(0, (worksheet.costs_an81||0), 0.001); end
  def test_costs_ao81; assert_in_delta(0, (worksheet.costs_ao81||0), 0.001); end
  def test_costs_ap81; assert_in_delta(0, (worksheet.costs_ap81||0), 0.001); end
  def test_costs_aq81; assert_in_delta(0, (worksheet.costs_aq81||0), 0.001); end
  def test_costs_ar81; assert_in_delta(0, (worksheet.costs_ar81||0), 0.001); end
  def test_costs_b82; assert_equal("IV.a", worksheet.costs_b82); end
  def test_costs_c82; assert_equal("Solar PV", worksheet.costs_c82); end
  def test_costs_d82; assert_equal("Electricity", worksheet.costs_d82); end
  def test_costs_e82; assert_equal("MEUR", worksheet.costs_e82); end
  def test_costs_p82; assert_in_epsilon(26.592499999999998, worksheet.costs_p82, 0.001); end
  def test_costs_z82; assert_in_delta(0, (worksheet.costs_z82||0), 0.001); end
  def test_costs_b83; assert_equal("IV.b", worksheet.costs_b83); end
  def test_costs_c83; assert_equal("Solar thermal", worksheet.costs_c83); end
  def test_costs_d83; assert_equal("Buildings", worksheet.costs_d83); end
  def test_costs_e83; assert_equal("MEUR", worksheet.costs_e83); end
  def test_costs_f83; assert_in_delta(0, (worksheet.costs_f83||0), 0.001); end
  def test_costs_p83; assert_in_delta(0, (worksheet.costs_p83||0), 0.001); end
  def test_costs_z83; assert_in_delta(0, (worksheet.costs_z83||0), 0.001); end
  def test_costs_aj83; assert_in_delta(0, (worksheet.costs_aj83||0), 0.001); end
  def test_costs_g83; assert_in_epsilon(89.97888134502631, worksheet.costs_g83, 0.001); end
  def test_costs_q83; assert_in_epsilon(8.997888134502631, worksheet.costs_q83, 0.001); end
  def test_costs_aa83; assert_in_epsilon(7.706653480427798, worksheet.costs_aa83, 0.001); end
  def test_costs_ak83; assert_in_epsilon(106.68342295995674, worksheet.costs_ak83, 0.001); end
  def test_costs_h83; assert_in_epsilon(116.620509817025, worksheet.costs_h83, 0.001); end
  def test_costs_r83; assert_in_epsilon(20.369684660253434, worksheet.costs_r83, 0.001); end
  def test_costs_ab83; assert_in_epsilon(19.369667466022705, worksheet.costs_ab83, 0.001); end
  def test_costs_al83; assert_in_epsilon(156.35986194330115, worksheet.costs_al83, 0.001); end
  def test_costs_i83; assert_in_epsilon(126.13354337439172, worksheet.costs_i83, 0.001); end
  def test_costs_s83; assert_in_epsilon(32.30404950901749, worksheet.costs_s83, 0.001); end
  def test_costs_ac83; assert_in_epsilon(30.063242721282666, worksheet.costs_ac83, 0.001); end
  def test_costs_am83; assert_in_epsilon(188.50083560469187, worksheet.costs_am83, 0.001); end
  def test_costs_j83; assert_in_epsilon(79.34301891923572, worksheet.costs_j83, 0.001); end
  def test_costs_t83; assert_in_epsilon(39.12441865925081, worksheet.costs_t83, 0.001); end
  def test_costs_ad83; assert_in_epsilon(37.993857699199765, worksheet.costs_ad83, 0.001); end
  def test_costs_an83; assert_in_epsilon(156.4612952776863, worksheet.costs_an83, 0.001); end
  def test_costs_k83; assert_in_epsilon(63.2701293900143, worksheet.costs_k83, 0.001); end
  def test_costs_u83; assert_in_epsilon(36.21726062115458, worksheet.costs_u83, 0.001); end
  def test_costs_ae83; assert_in_epsilon(38.04533807628214, worksheet.costs_ae83, 0.001); end
  def test_costs_ao83; assert_in_epsilon(137.53272808745103, worksheet.costs_ao83, 0.001); end
  def test_costs_l83; assert_in_epsilon(159.8722216539195, worksheet.costs_l83, 0.001); end
  def test_costs_v83; assert_in_epsilon(33.20937605798783, worksheet.costs_v83, 0.001); end
  def test_costs_af83; assert_in_epsilon(35.94894898802981, worksheet.costs_af83, 0.001); end
  def test_costs_ap83; assert_in_epsilon(229.03054669993713, worksheet.costs_ap83, 0.001); end
  def test_costs_m83; assert_in_epsilon(258.29109073419255, worksheet.costs_m83, 0.001); end
  def test_costs_w83; assert_in_epsilon(29.91288289461264, worksheet.costs_w83, 0.001); end
  def test_costs_ag83; assert_in_epsilon(36.13140674593514, worksheet.costs_ag83, 0.001); end
  def test_costs_aq83; assert_in_epsilon(324.33538037474034, worksheet.costs_aq83, 0.001); end
  def test_costs_n83; assert_in_epsilon(313.97817773525645, worksheet.costs_n83, 0.001); end
  def test_costs_x83; assert_in_epsilon(26.578969358710225, worksheet.costs_x83, 0.001); end
  def test_costs_ah83; assert_in_epsilon(32.58805553942196, worksheet.costs_ah83, 0.001); end
  def test_costs_ar83; assert_in_epsilon(373.14520263338864, worksheet.costs_ar83, 0.001); end
  def test_costs_b84; assert_equal("IV.c", worksheet.costs_b84); end
  def test_costs_c84; assert_equal("Small-scale wind  [UNUSED]", worksheet.costs_c84); end
  def test_costs_d84; assert_equal("Electricity", worksheet.costs_d84); end
  def test_costs_e84; assert_equal("MEUR", worksheet.costs_e84); end
  def test_costs_z84; assert_in_delta(0, (worksheet.costs_z84||0), 0.001); end
  def test_costs_aa84; assert_in_delta(0, (worksheet.costs_aa84||0), 0.001); end
  def test_costs_ab84; assert_in_delta(0, (worksheet.costs_ab84||0), 0.001); end
  def test_costs_ac84; assert_in_delta(0, (worksheet.costs_ac84||0), 0.001); end
  def test_costs_ad84; assert_in_delta(0, (worksheet.costs_ad84||0), 0.001); end
  def test_costs_ae84; assert_in_delta(0, (worksheet.costs_ae84||0), 0.001); end
  def test_costs_af84; assert_in_delta(0, (worksheet.costs_af84||0), 0.001); end
  def test_costs_ag84; assert_in_delta(0, (worksheet.costs_ag84||0), 0.001); end
  def test_costs_ah84; assert_in_delta(0, (worksheet.costs_ah84||0), 0.001); end
  def test_costs_f84; assert_in_delta(0, (worksheet.costs_f84||0), 0.001); end
  def test_costs_p84; assert_in_delta(0, (worksheet.costs_p84||0), 0.001); end
  def test_costs_aj84; assert_in_delta(0, (worksheet.costs_aj84||0), 0.001); end
  def test_costs_g84; assert_in_delta(0, (worksheet.costs_g84||0), 0.001); end
  def test_costs_q84; assert_in_delta(0, (worksheet.costs_q84||0), 0.001); end
  def test_costs_ak84; assert_in_delta(0, (worksheet.costs_ak84||0), 0.001); end
  def test_costs_h84; assert_in_delta(0, (worksheet.costs_h84||0), 0.001); end
  def test_costs_r84; assert_in_delta(0, (worksheet.costs_r84||0), 0.001); end
  def test_costs_al84; assert_in_delta(0, (worksheet.costs_al84||0), 0.001); end
  def test_costs_i84; assert_in_delta(0, (worksheet.costs_i84||0), 0.001); end
  def test_costs_s84; assert_in_delta(0, (worksheet.costs_s84||0), 0.001); end
  def test_costs_am84; assert_in_delta(0, (worksheet.costs_am84||0), 0.001); end
  def test_costs_j84; assert_in_delta(0, (worksheet.costs_j84||0), 0.001); end
  def test_costs_t84; assert_in_delta(0, (worksheet.costs_t84||0), 0.001); end
  def test_costs_an84; assert_in_delta(0, (worksheet.costs_an84||0), 0.001); end
  def test_costs_k84; assert_in_delta(0, (worksheet.costs_k84||0), 0.001); end
  def test_costs_u84; assert_in_delta(0, (worksheet.costs_u84||0), 0.001); end
  def test_costs_ao84; assert_in_delta(0, (worksheet.costs_ao84||0), 0.001); end
  def test_costs_l84; assert_in_delta(0, (worksheet.costs_l84||0), 0.001); end
  def test_costs_v84; assert_in_delta(0, (worksheet.costs_v84||0), 0.001); end
  def test_costs_ap84; assert_in_delta(0, (worksheet.costs_ap84||0), 0.001); end
  def test_costs_m84; assert_in_delta(0, (worksheet.costs_m84||0), 0.001); end
  def test_costs_w84; assert_in_delta(0, (worksheet.costs_w84||0), 0.001); end
  def test_costs_aq84; assert_in_delta(0, (worksheet.costs_aq84||0), 0.001); end
  def test_costs_n84; assert_in_delta(0, (worksheet.costs_n84||0), 0.001); end
  def test_costs_x84; assert_in_delta(0, (worksheet.costs_x84||0), 0.001); end
  def test_costs_ar84; assert_in_delta(0, (worksheet.costs_ar84||0), 0.001); end
  def test_costs_b85; assert_equal("V.a", worksheet.costs_b85); end
  def test_costs_c85; assert_equal("Types of fuel from Biomass", worksheet.costs_c85); end
  def test_costs_d85; assert_equal("Bioenergy", worksheet.costs_d85); end
  def test_costs_e85; assert_equal("MEUR", worksheet.costs_e85); end
  def test_costs_z85; assert_in_delta(0, (worksheet.costs_z85||0), 0.001); end
  def test_costs_aa85; assert_in_delta(0, (worksheet.costs_aa85||0), 0.001); end
  def test_costs_ab85; assert_in_delta(0, (worksheet.costs_ab85||0), 0.001); end
  def test_costs_ac85; assert_in_delta(0, (worksheet.costs_ac85||0), 0.001); end
  def test_costs_ad85; assert_in_delta(0, (worksheet.costs_ad85||0), 0.001); end
  def test_costs_ae85; assert_in_delta(0, (worksheet.costs_ae85||0), 0.001); end
  def test_costs_af85; assert_in_delta(0, (worksheet.costs_af85||0), 0.001); end
  def test_costs_ag85; assert_in_delta(0, (worksheet.costs_ag85||0), 0.001); end
  def test_costs_ah85; assert_in_delta(0, (worksheet.costs_ah85||0), 0.001); end
  def test_costs_f85; assert_in_epsilon(721.2617804636368, worksheet.costs_f85, 0.001); end
  def test_costs_p85; assert_in_epsilon(463.11355294507564, worksheet.costs_p85, 0.001); end
  def test_costs_aj85; assert_in_epsilon(1184.3753334087123, worksheet.costs_aj85, 0.001); end
  def test_costs_g85; assert_in_epsilon(821.6183959810995, worksheet.costs_g85, 0.001); end
  def test_costs_q85; assert_in_epsilon(690.6065981759251, worksheet.costs_q85, 0.001); end
  def test_costs_ak85; assert_in_epsilon(1512.2249941570246, worksheet.costs_ak85, 0.001); end
  def test_costs_h85; assert_in_epsilon(675.8634390773318, worksheet.costs_h85, 0.001); end
  def test_costs_r85; assert_in_epsilon(917.6037963465543, worksheet.costs_r85, 0.001); end
  def test_costs_al85; assert_in_epsilon(1593.467235423886, worksheet.costs_al85, 0.001); end
  def test_costs_i85; assert_in_epsilon(479.15451035147566, worksheet.costs_i85, 0.001); end
  def test_costs_s85; assert_in_epsilon(1071.9748343494527, worksheet.costs_s85, 0.001); end
  def test_costs_am85; assert_in_epsilon(1551.1293447009284, worksheet.costs_am85, 0.001); end
  def test_costs_j85; assert_in_epsilon(495.68384229034797, worksheet.costs_j85, 0.001); end
  def test_costs_t85; assert_in_epsilon(1126.90276922843, worksheet.costs_t85, 0.001); end
  def test_costs_an85; assert_in_epsilon(1622.586611518778, worksheet.costs_an85, 0.001); end
  def test_costs_k85; assert_in_epsilon(508.0925358208096, worksheet.costs_k85, 0.001); end
  def test_costs_u85; assert_in_epsilon(1181.2575433596344, worksheet.costs_u85, 0.001); end
  def test_costs_ao85; assert_in_epsilon(1689.350079180444, worksheet.costs_ao85, 0.001); end
  def test_costs_l85; assert_in_epsilon(523.4209433602721, worksheet.costs_l85, 0.001); end
  def test_costs_v85; assert_in_epsilon(1231.4502722211714, worksheet.costs_v85, 0.001); end
  def test_costs_ap85; assert_in_epsilon(1754.8712155814435, worksheet.costs_ap85, 0.001); end
  def test_costs_m85; assert_in_epsilon(539.0044735409122, worksheet.costs_m85, 0.001); end
  def test_costs_w85; assert_in_epsilon(1280.5731359669965, worksheet.costs_w85, 0.001); end
  def test_costs_aq85; assert_in_epsilon(1819.5776095079086, worksheet.costs_aq85, 0.001); end
  def test_costs_n85; assert_in_epsilon(466.3230301355797, worksheet.costs_n85, 0.001); end
  def test_costs_x85; assert_in_epsilon(1329.581375030128, worksheet.costs_x85, 0.001); end
  def test_costs_ar85; assert_in_epsilon(1795.9044051657077, worksheet.costs_ar85, 0.001); end
  def test_costs_b86; assert_equal("V.b", worksheet.costs_b86); end
  def test_costs_c86; assert_equal("Bioenergy imports", worksheet.costs_c86); end
  def test_costs_d86; assert_equal("Bioenergy", worksheet.costs_d86); end
  def test_costs_e86; assert_equal("MEUR", worksheet.costs_e86); end
  def test_costs_f86; assert_in_delta(0, (worksheet.costs_f86||0), 0.001); end
  def test_costs_g86; assert_in_delta(0, (worksheet.costs_g86||0), 0.001); end
  def test_costs_h86; assert_in_delta(0, (worksheet.costs_h86||0), 0.001); end
  def test_costs_i86; assert_in_delta(0, (worksheet.costs_i86||0), 0.001); end
  def test_costs_j86; assert_in_delta(0, (worksheet.costs_j86||0), 0.001); end
  def test_costs_k86; assert_in_delta(0, (worksheet.costs_k86||0), 0.001); end
  def test_costs_l86; assert_in_delta(0, (worksheet.costs_l86||0), 0.001); end
  def test_costs_m86; assert_in_delta(0, (worksheet.costs_m86||0), 0.001); end
  def test_costs_n86; assert_in_delta(0, (worksheet.costs_n86||0), 0.001); end
  def test_costs_p86; assert_in_delta(0, (worksheet.costs_p86||0), 0.001); end
  def test_costs_q86; assert_in_delta(0, (worksheet.costs_q86||0), 0.001); end
  def test_costs_r86; assert_in_delta(0, (worksheet.costs_r86||0), 0.001); end
  def test_costs_s86; assert_in_delta(0, (worksheet.costs_s86||0), 0.001); end
  def test_costs_t86; assert_in_delta(0, (worksheet.costs_t86||0), 0.001); end
  def test_costs_u86; assert_in_delta(0, (worksheet.costs_u86||0), 0.001); end
  def test_costs_v86; assert_in_delta(0, (worksheet.costs_v86||0), 0.001); end
  def test_costs_w86; assert_in_delta(0, (worksheet.costs_w86||0), 0.001); end
  def test_costs_x86; assert_in_delta(0, (worksheet.costs_x86||0), 0.001); end
  def test_costs_z86; assert_in_epsilon(567.3121331036136, worksheet.costs_z86, 0.001); end
  def test_costs_aj86; assert_in_epsilon(567.3121331036136, worksheet.costs_aj86, 0.001); end
  def test_costs_aa86; assert_in_epsilon(881.4151865387289, worksheet.costs_aa86, 0.001); end
  def test_costs_ak86; assert_in_epsilon(881.4151865387289, worksheet.costs_ak86, 0.001); end
  def test_costs_ab86; assert_in_epsilon(1216.6885452886472, worksheet.costs_ab86, 0.001); end
  def test_costs_al86; assert_in_epsilon(1216.6885452886472, worksheet.costs_al86, 0.001); end
  def test_costs_ac86; assert_in_epsilon(1620.1103427010466, worksheet.costs_ac86, 0.001); end
  def test_costs_am86; assert_in_epsilon(1620.1103427010466, worksheet.costs_am86, 0.001); end
  def test_costs_ad86; assert_in_epsilon(1934.3993693555997, worksheet.costs_ad86, 0.001); end
  def test_costs_an86; assert_in_epsilon(1934.3993693555997, worksheet.costs_an86, 0.001); end
  def test_costs_ae86; assert_in_epsilon(2145.0683988802966, worksheet.costs_ae86, 0.001); end
  def test_costs_ao86; assert_in_epsilon(2145.0683988802966, worksheet.costs_ao86, 0.001); end
  def test_costs_af86; assert_in_epsilon(2350.2149127565335, worksheet.costs_af86, 0.001); end
  def test_costs_ap86; assert_in_epsilon(2350.2149127565335, worksheet.costs_ap86, 0.001); end
  def test_costs_ag86; assert_in_epsilon(2555.38608674715, worksheet.costs_ag86, 0.001); end
  def test_costs_aq86; assert_in_epsilon(2555.38608674715, worksheet.costs_aq86, 0.001); end
  def test_costs_ah86; assert_in_epsilon(2762.3357327447907, worksheet.costs_ah86, 0.001); end
  def test_costs_ar86; assert_in_epsilon(2762.3357327447907, worksheet.costs_ar86, 0.001); end
  def test_costs_b87; assert_equal("VI.a", worksheet.costs_b87); end
  def test_costs_c87; assert_equal("Agriculture and land use", worksheet.costs_c87); end
  def test_costs_d87; assert_equal("Bioenergy", worksheet.costs_d87); end
  def test_costs_e87; assert_equal("MEUR", worksheet.costs_e87); end
  def test_costs_f87; assert_in_delta(0, (worksheet.costs_f87||0), 0.001); end
  def test_costs_g87; assert_in_delta(0, (worksheet.costs_g87||0), 0.001); end
  def test_costs_h87; assert_in_delta(0, (worksheet.costs_h87||0), 0.001); end
  def test_costs_i87; assert_in_delta(0, (worksheet.costs_i87||0), 0.001); end
  def test_costs_j87; assert_in_delta(0, (worksheet.costs_j87||0), 0.001); end
  def test_costs_k87; assert_in_delta(0, (worksheet.costs_k87||0), 0.001); end
  def test_costs_l87; assert_in_delta(0, (worksheet.costs_l87||0), 0.001); end
  def test_costs_m87; assert_in_delta(0, (worksheet.costs_m87||0), 0.001); end
  def test_costs_n87; assert_in_delta(0, (worksheet.costs_n87||0), 0.001); end
  def test_costs_p87; assert_in_delta(0, (worksheet.costs_p87||0), 0.001); end
  def test_costs_z87; assert_in_epsilon(39.04474669333333, worksheet.costs_z87, 0.001); end
  def test_costs_aj87; assert_in_epsilon(39.04474669333333, worksheet.costs_aj87, 0.001); end
  def test_costs_q87; assert_in_epsilon(6.060674429470886, worksheet.costs_q87, 0.001); end
  def test_costs_aa87; assert_in_epsilon(317.4594865067391, worksheet.costs_aa87, 0.001); end
  def test_costs_ak87; assert_in_epsilon(323.52016093621, worksheet.costs_ak87, 0.001); end
  def test_costs_r87; assert_in_epsilon(11.967399192811396, worksheet.costs_r87, 0.001); end
  def test_costs_ab87; assert_in_epsilon(587.9458795856531, worksheet.costs_ab87, 0.001); end
  def test_costs_al87; assert_in_epsilon(599.9132787784645, worksheet.costs_al87, 0.001); end
  def test_costs_s87; assert_in_epsilon(17.724084828358066, worksheet.costs_s87, 0.001); end
  def test_costs_ac87; assert_in_epsilon(605.6113853821188, worksheet.costs_ac87, 0.001); end
  def test_costs_am87; assert_in_epsilon(623.3354702104768, worksheet.costs_am87, 0.001); end
  def test_costs_t87; assert_in_epsilon(23.33454254126622, worksheet.costs_t87, 0.001); end
  def test_costs_ad87; assert_in_epsilon(620.4539319253694, worksheet.costs_ad87, 0.001); end
  def test_costs_an87; assert_in_epsilon(643.7884744666356, worksheet.costs_an87, 0.001); end
  def test_costs_u87; assert_in_epsilon(23.33454254126622, worksheet.costs_u87, 0.001); end
  def test_costs_ae87; assert_in_epsilon(632.7292599833687, worksheet.costs_ae87, 0.001); end
  def test_costs_ao87; assert_in_epsilon(656.063802524635, worksheet.costs_ao87, 0.001); end
  def test_costs_v87; assert_in_epsilon(23.33454254126622, worksheet.costs_v87, 0.001); end
  def test_costs_af87; assert_in_epsilon(642.6727460533324, worksheet.costs_af87, 0.001); end
  def test_costs_ap87; assert_in_epsilon(666.0072885945987, worksheet.costs_ap87, 0.001); end
  def test_costs_w87; assert_in_epsilon(23.33454254126622, worksheet.costs_w87, 0.001); end
  def test_costs_ag87; assert_in_epsilon(650.5009159149123, worksheet.costs_ag87, 0.001); end
  def test_costs_aq87; assert_in_epsilon(673.8354584561786, worksheet.costs_aq87, 0.001); end
  def test_costs_x87; assert_in_epsilon(23.33454254126622, worksheet.costs_x87, 0.001); end
  def test_costs_ah87; assert_in_epsilon(564.0128504246691, worksheet.costs_ah87, 0.001); end
  def test_costs_ar87; assert_in_epsilon(587.3473929659353, worksheet.costs_ar87, 0.001); end
  def test_costs_b88; assert_equal("VI.b", worksheet.costs_b88); end
  def test_costs_c88; assert_equal("Volume of Waste & Recycling", worksheet.costs_c88); end
  def test_costs_d88; assert_equal("Bioenergy", worksheet.costs_d88); end
  def test_costs_e88; assert_equal("MEUR", worksheet.costs_e88); end
  def test_costs_z88; assert_in_delta(0, (worksheet.costs_z88||0), 0.001); end
  def test_costs_aa88; assert_in_delta(0, (worksheet.costs_aa88||0), 0.001); end
  def test_costs_ab88; assert_in_delta(0, (worksheet.costs_ab88||0), 0.001); end
  def test_costs_ac88; assert_in_delta(0, (worksheet.costs_ac88||0), 0.001); end
  def test_costs_ad88; assert_in_delta(0, (worksheet.costs_ad88||0), 0.001); end
  def test_costs_ae88; assert_in_delta(0, (worksheet.costs_ae88||0), 0.001); end
  def test_costs_af88; assert_in_delta(0, (worksheet.costs_af88||0), 0.001); end
  def test_costs_ag88; assert_in_delta(0, (worksheet.costs_ag88||0), 0.001); end
  def test_costs_ah88; assert_in_delta(0, (worksheet.costs_ah88||0), 0.001); end
  def test_costs_f88; assert_in_epsilon(1.4334116506630497, worksheet.costs_f88, 0.001); end
  def test_costs_p88; assert_in_epsilon(3.105268104920256, worksheet.costs_p88, 0.001); end
  def test_costs_aj88; assert_in_epsilon(4.538679755583306, worksheet.costs_aj88, 0.001); end
  def test_costs_g88; assert_in_epsilon(4.714745212546937, worksheet.costs_g88, 0.001); end
  def test_costs_q88; assert_in_epsilon(1.9177684855560553, worksheet.costs_q88, 0.001); end
  def test_costs_ak88; assert_in_epsilon(6.632513698102993, worksheet.costs_ak88, 0.001); end
  def test_costs_h88; assert_in_epsilon(3.9758187190117877, worksheet.costs_h88, 0.001); end
  def test_costs_r88; assert_in_epsilon(1.1829839323364815, worksheet.costs_r88, 0.001); end
  def test_costs_al88; assert_in_epsilon(5.158802651348269, worksheet.costs_al88, 0.001); end
  def test_costs_i88; assert_in_epsilon(4.123022200801271, worksheet.costs_i88, 0.001); end
  def test_costs_s88; assert_in_delta(0.82384027031658, worksheet.costs_s88, 0.001); end
  def test_costs_am88; assert_in_epsilon(4.946862471117852, worksheet.costs_am88, 0.001); end
  def test_costs_j88; assert_in_epsilon(2.0863550722425805, worksheet.costs_j88, 0.001); end
  def test_costs_t88; assert_in_delta(0.5060159013175731, worksheet.costs_t88, 0.001); end
  def test_costs_an88; assert_in_epsilon(2.5923709735601537, worksheet.costs_an88, 0.001); end
  def test_costs_k88; assert_in_epsilon(1.211045879839007, worksheet.costs_k88, 0.001); end
  def test_costs_u88; assert_in_delta(0.26471968978641186, worksheet.costs_u88, 0.001); end
  def test_costs_ao88; assert_in_epsilon(1.4757655696254188, worksheet.costs_ao88, 0.001); end
  def test_costs_l88; assert_in_delta(0.2955893282325185, worksheet.costs_l88, 0.001); end
  def test_costs_v88; assert_in_delta(0.09995163572309589, worksheet.costs_v88, 0.001); end
  def test_costs_ap88; assert_in_delta(0.3955409639556144, worksheet.costs_ap88, 0.001); end
  def test_costs_m88; assert_in_delta(-0.9875000000000004, worksheet.costs_m88, 0.001); end
  def test_costs_w88; assert_in_delta(0.02640512983904631, worksheet.costs_w88, 0.001); end
  def test_costs_aq88; assert_in_delta(-0.9610948701609541, worksheet.costs_aq88, 0.001); end
  def test_costs_n88; assert_in_epsilon(-2.0749999999999993, worksheet.costs_n88, 0.001); end
  def test_costs_x88; assert_in_delta(0, (worksheet.costs_x88||0), 0.001); end
  def test_costs_ar88; assert_in_epsilon(-2.0749999999999993, worksheet.costs_ar88, 0.001); end
  def test_costs_b89; assert_equal("VI.c", worksheet.costs_b89); end
  def test_costs_c89; assert_equal("Marine algae  [UNUSED]", worksheet.costs_c89); end
  def test_costs_d89; assert_equal("Bioenergy", worksheet.costs_d89); end
  def test_costs_e89; assert_equal("MEUR", worksheet.costs_e89); end
  def test_costs_f89; assert_in_delta(0, (worksheet.costs_f89||0), 0.001); end
  def test_costs_g89; assert_in_delta(0, (worksheet.costs_g89||0), 0.001); end
  def test_costs_h89; assert_in_delta(0, (worksheet.costs_h89||0), 0.001); end
  def test_costs_i89; assert_in_delta(0, (worksheet.costs_i89||0), 0.001); end
  def test_costs_j89; assert_in_delta(0, (worksheet.costs_j89||0), 0.001); end
  def test_costs_k89; assert_in_delta(0, (worksheet.costs_k89||0), 0.001); end
  def test_costs_l89; assert_in_delta(0, (worksheet.costs_l89||0), 0.001); end
  def test_costs_m89; assert_in_delta(0, (worksheet.costs_m89||0), 0.001); end
  def test_costs_n89; assert_in_delta(0, (worksheet.costs_n89||0), 0.001); end
  def test_costs_p89; assert_in_delta(0, (worksheet.costs_p89||0), 0.001); end
  def test_costs_q89; assert_in_delta(0, (worksheet.costs_q89||0), 0.001); end
  def test_costs_r89; assert_in_delta(0, (worksheet.costs_r89||0), 0.001); end
  def test_costs_s89; assert_in_delta(0, (worksheet.costs_s89||0), 0.001); end
  def test_costs_t89; assert_in_delta(0, (worksheet.costs_t89||0), 0.001); end
  def test_costs_u89; assert_in_delta(0, (worksheet.costs_u89||0), 0.001); end
  def test_costs_v89; assert_in_delta(0, (worksheet.costs_v89||0), 0.001); end
  def test_costs_w89; assert_in_delta(0, (worksheet.costs_w89||0), 0.001); end
  def test_costs_x89; assert_in_delta(0, (worksheet.costs_x89||0), 0.001); end
  def test_costs_z89; assert_in_delta(0, (worksheet.costs_z89||0), 0.001); end
  def test_costs_aj89; assert_in_delta(0, (worksheet.costs_aj89||0), 0.001); end
  def test_costs_aa89; assert_in_delta(0, (worksheet.costs_aa89||0), 0.001); end
  def test_costs_ak89; assert_in_delta(0, (worksheet.costs_ak89||0), 0.001); end
  def test_costs_ab89; assert_in_delta(0, (worksheet.costs_ab89||0), 0.001); end
  def test_costs_al89; assert_in_delta(0, (worksheet.costs_al89||0), 0.001); end
  def test_costs_ac89; assert_in_delta(0, (worksheet.costs_ac89||0), 0.001); end
  def test_costs_am89; assert_in_delta(0, (worksheet.costs_am89||0), 0.001); end
  def test_costs_ad89; assert_in_delta(0, (worksheet.costs_ad89||0), 0.001); end
  def test_costs_an89; assert_in_delta(0, (worksheet.costs_an89||0), 0.001); end
  def test_costs_ae89; assert_in_delta(0, (worksheet.costs_ae89||0), 0.001); end
  def test_costs_ao89; assert_in_delta(0, (worksheet.costs_ao89||0), 0.001); end
  def test_costs_af89; assert_in_delta(0, (worksheet.costs_af89||0), 0.001); end
  def test_costs_ap89; assert_in_delta(0, (worksheet.costs_ap89||0), 0.001); end
  def test_costs_ag89; assert_in_delta(0, (worksheet.costs_ag89||0), 0.001); end
  def test_costs_aq89; assert_in_delta(0, (worksheet.costs_aq89||0), 0.001); end
  def test_costs_ah89; assert_in_delta(0, (worksheet.costs_ah89||0), 0.001); end
  def test_costs_ar89; assert_in_delta(0, (worksheet.costs_ar89||0), 0.001); end
  def test_costs_b90; assert_equal("VII.a.Imports", worksheet.costs_b90); end
  def test_costs_c90; assert_equal("Electricity imports", worksheet.costs_c90); end
  def test_costs_d90; assert_equal("Electricity (ex/im)ports", worksheet.costs_d90); end
  def test_costs_e90; assert_equal("MEUR", worksheet.costs_e90); end
  def test_costs_f90; assert_in_delta(0, (worksheet.costs_f90||0), 0.001); end
  def test_costs_g90; assert_in_delta(0, (worksheet.costs_g90||0), 0.001); end
  def test_costs_h90; assert_in_delta(0, (worksheet.costs_h90||0), 0.001); end
  def test_costs_i90; assert_in_delta(0, (worksheet.costs_i90||0), 0.001); end
  def test_costs_j90; assert_in_delta(0, (worksheet.costs_j90||0), 0.001); end
  def test_costs_k90; assert_in_delta(0, (worksheet.costs_k90||0), 0.001); end
  def test_costs_l90; assert_in_delta(0, (worksheet.costs_l90||0), 0.001); end
  def test_costs_m90; assert_in_delta(0, (worksheet.costs_m90||0), 0.001); end
  def test_costs_n90; assert_in_delta(0, (worksheet.costs_n90||0), 0.001); end
  def test_costs_p90; assert_in_delta(0, (worksheet.costs_p90||0), 0.001); end
  def test_costs_q90; assert_in_delta(0, (worksheet.costs_q90||0), 0.001); end
  def test_costs_r90; assert_in_delta(0, (worksheet.costs_r90||0), 0.001); end
  def test_costs_s90; assert_in_delta(0, (worksheet.costs_s90||0), 0.001); end
  def test_costs_t90; assert_in_delta(0, (worksheet.costs_t90||0), 0.001); end
  def test_costs_u90; assert_in_delta(0, (worksheet.costs_u90||0), 0.001); end
  def test_costs_v90; assert_in_delta(0, (worksheet.costs_v90||0), 0.001); end
  def test_costs_w90; assert_in_delta(0, (worksheet.costs_w90||0), 0.001); end
  def test_costs_x90; assert_in_delta(0, (worksheet.costs_x90||0), 0.001); end
  def test_costs_b91; assert_equal("VII.a.Exports", worksheet.costs_b91); end
  def test_costs_c91; assert_equal("Electricity exports", worksheet.costs_c91); end
  def test_costs_d91; assert_equal("Electricity (ex/im)ports", worksheet.costs_d91); end
  def test_costs_e91; assert_equal("MEUR", worksheet.costs_e91); end
  def test_costs_f91; assert_in_delta(0, (worksheet.costs_f91||0), 0.001); end
  def test_costs_z91; assert_in_delta(0, (worksheet.costs_z91||0), 0.001); end
  def test_costs_aa91; assert_in_delta(0, (worksheet.costs_aa91||0), 0.001); end
  def test_costs_ab91; assert_in_delta(0, (worksheet.costs_ab91||0), 0.001); end
  def test_costs_ac91; assert_in_delta(0, (worksheet.costs_ac91||0), 0.001); end
  def test_costs_ad91; assert_in_delta(0, (worksheet.costs_ad91||0), 0.001); end
  def test_costs_ae91; assert_in_delta(0, (worksheet.costs_ae91||0), 0.001); end
  def test_costs_af91; assert_in_delta(0, (worksheet.costs_af91||0), 0.001); end
  def test_costs_ag91; assert_in_delta(0, (worksheet.costs_ag91||0), 0.001); end
  def test_costs_ah91; assert_in_delta(0, (worksheet.costs_ah91||0), 0.001); end
  def test_costs_b92; assert_equal("VII.b", worksheet.costs_b92); end
  def test_costs_c92; assert_equal("Electricity grid distribution", worksheet.costs_c92); end
  def test_costs_d92; assert_equal("Electricity", worksheet.costs_d92); end
  def test_costs_e92; assert_equal("MEUR", worksheet.costs_e92); end
  def test_costs_z92; assert_in_delta(0, (worksheet.costs_z92||0), 0.001); end
  def test_costs_aa92; assert_in_delta(0, (worksheet.costs_aa92||0), 0.001); end
  def test_costs_ab92; assert_in_delta(0, (worksheet.costs_ab92||0), 0.001); end
  def test_costs_ac92; assert_in_delta(0, (worksheet.costs_ac92||0), 0.001); end
  def test_costs_ad92; assert_in_delta(0, (worksheet.costs_ad92||0), 0.001); end
  def test_costs_ae92; assert_in_delta(0, (worksheet.costs_ae92||0), 0.001); end
  def test_costs_af92; assert_in_delta(0, (worksheet.costs_af92||0), 0.001); end
  def test_costs_ag92; assert_in_delta(0, (worksheet.costs_ag92||0), 0.001); end
  def test_costs_ah92; assert_in_delta(0, (worksheet.costs_ah92||0), 0.001); end
  def test_costs_b93; assert_equal("VII.c", worksheet.costs_b93); end
  def test_costs_c93; assert_equal("EU transmission integration", worksheet.costs_c93); end
  def test_costs_d93; assert_equal("Electricity", worksheet.costs_d93); end
  def test_costs_e93; assert_equal("MEUR", worksheet.costs_e93); end
  def test_costs_f93; assert_in_delta(0, (worksheet.costs_f93||0), 0.001); end
  def test_costs_b94; assert_equal("VIII.a", worksheet.costs_b94); end
  def test_costs_c94; assert_equal("H2 Production for Transport", worksheet.costs_c94); end
  def test_costs_d94; assert_equal("Transport", worksheet.costs_d94); end
  def test_costs_e94; assert_equal("MEUR", worksheet.costs_e94); end
  def test_costs_f94; assert_in_delta(0, (worksheet.costs_f94||0), 0.001); end
  def test_costs_p94; assert_in_delta(0, (worksheet.costs_p94||0), 0.001); end
  def test_costs_z94; assert_in_delta(0, (worksheet.costs_z94||0), 0.001); end
  def test_costs_aj94; assert_in_delta(0, (worksheet.costs_aj94||0), 0.001); end
  def test_costs_g94; assert_in_delta(0, (worksheet.costs_g94||0), 0.001); end
  def test_costs_q94; assert_in_delta(0, (worksheet.costs_q94||0), 0.001); end
  def test_costs_aa94; assert_in_delta(0, (worksheet.costs_aa94||0), 0.001); end
  def test_costs_ak94; assert_in_delta(0, (worksheet.costs_ak94||0), 0.001); end
  def test_costs_h94; assert_in_epsilon(68.85294547242789, worksheet.costs_h94, 0.001); end
  def test_costs_r94; assert_in_epsilon(50.157364425253974, worksheet.costs_r94, 0.001); end
  def test_costs_ab94; assert_in_epsilon(18.898341296954904, worksheet.costs_ab94, 0.001); end
  def test_costs_al94; assert_in_epsilon(137.90865119463678, worksheet.costs_al94, 0.001); end
  def test_costs_i94; assert_in_epsilon(84.69259670093798, worksheet.costs_i94, 0.001); end
  def test_costs_s94; assert_in_epsilon(96.38702003911663, worksheet.costs_s94, 0.001); end
  def test_costs_ac94; assert_in_epsilon(39.931442730851415, worksheet.costs_ac94, 0.001); end
  def test_costs_am94; assert_in_epsilon(221.01105947090605, worksheet.costs_am94, 0.001); end
  def test_costs_j94; assert_in_epsilon(99.72468342362065, worksheet.costs_j94, 0.001); end
  def test_costs_t94; assert_in_epsilon(137.58942318495792, worksheet.costs_t94, 0.001); end
  def test_costs_ad94; assert_in_epsilon(64.27528721633603, worksheet.costs_ad94, 0.001); end
  def test_costs_an94; assert_in_epsilon(301.5893938249146, worksheet.costs_an94, 0.001); end
  def test_costs_k94; assert_in_epsilon(109.293886462622, worksheet.costs_k94, 0.001); end
  def test_costs_u94; assert_in_epsilon(170.41452534196796, worksheet.costs_u94, 0.001); end
  def test_costs_ae94; assert_in_epsilon(89.10282865540967, worksheet.costs_ae94, 0.001); end
  def test_costs_ao94; assert_in_epsilon(368.8112404599996, worksheet.costs_ao94, 0.001); end
  def test_costs_l94; assert_in_epsilon(122.44899729684796, worksheet.costs_l94, 0.001); end
  def test_costs_v94; assert_in_epsilon(195.87595845971154, worksheet.costs_v94, 0.001); end
  def test_costs_af94; assert_in_epsilon(111.76127590093112, worksheet.costs_af94, 0.001); end
  def test_costs_ap94; assert_in_epsilon(430.08623165749066, worksheet.costs_ap94, 0.001); end
  def test_costs_m94; assert_in_epsilon(141.51608427096306, worksheet.costs_m94, 0.001); end
  def test_costs_w94; assert_in_epsilon(212.28551560324536, worksheet.costs_w94, 0.001); end
  def test_costs_ag94; assert_in_epsilon(142.00555172221289, worksheet.costs_ag94, 0.001); end
  def test_costs_aq94; assert_in_epsilon(495.8071515964213, worksheet.costs_aq94, 0.001); end
  def test_costs_n94; assert_in_epsilon(171.7941856862942, worksheet.costs_n94, 0.001); end
  def test_costs_x94; assert_in_epsilon(220.02216677988338, worksheet.costs_x94, 0.001); end
  def test_costs_ah94; assert_in_epsilon(160.54089335425553, worksheet.costs_ah94, 0.001); end
  def test_costs_ar94; assert_in_epsilon(552.3572458204331, worksheet.costs_ar94, 0.001); end
  def test_costs_b95; assert_equal("IX.a", worksheet.costs_b95); end
  def test_costs_c95; assert_equal("Domestic space heating and hot water", worksheet.costs_c95); end
  def test_costs_d95; assert_equal("Buildings", worksheet.costs_d95); end
  def test_costs_e95; assert_equal("MEUR", worksheet.costs_e95); end
  def test_costs_p95; assert_in_epsilon(76.13647727492359, worksheet.costs_p95, 0.001); end
  def test_costs_f95; assert_in_epsilon(23021.52662785949, worksheet.costs_f95, 0.001); end
  def test_costs_z95; assert_in_epsilon(2507.118566750717, worksheet.costs_z95, 0.001); end
  def test_costs_aj95; assert_in_epsilon(25604.781671885128, worksheet.costs_aj95, 0.001); end
  def test_costs_g95; assert_in_epsilon(23246.84503514904, worksheet.costs_g95, 0.001); end
  def test_costs_q95; assert_in_epsilon(124.42403096096498, worksheet.costs_q95, 0.001); end
  def test_costs_aa95; assert_in_epsilon(2832.621387877663, worksheet.costs_aa95, 0.001); end
  def test_costs_ak95; assert_in_epsilon(26203.890453987668, worksheet.costs_ak95, 0.001); end
  def test_costs_h95; assert_in_epsilon(41569.75614042049, worksheet.costs_h95, 0.001); end
  def test_costs_r95; assert_in_epsilon(189.67482619059462, worksheet.costs_r95, 0.001); end
  def test_costs_ab95; assert_in_epsilon(2899.5951495625814, worksheet.costs_ab95, 0.001); end
  def test_costs_al95; assert_in_epsilon(44659.02611617367, worksheet.costs_al95, 0.001); end
  def test_costs_i95; assert_in_epsilon(29895.96678269696, worksheet.costs_i95, 0.001); end
  def test_costs_s95; assert_in_epsilon(252.97134571388912, worksheet.costs_s95, 0.001); end
  def test_costs_ac95; assert_in_epsilon(2618.8485103628163, worksheet.costs_ac95, 0.001); end
  def test_costs_am95; assert_in_epsilon(32767.786638773665, worksheet.costs_am95, 0.001); end
  def test_costs_j95; assert_in_epsilon(31473.754939891413, worksheet.costs_j95, 0.001); end
  def test_costs_t95; assert_in_epsilon(323.2376082800836, worksheet.costs_t95, 0.001); end
  def test_costs_ad95; assert_in_epsilon(2316.919860620182, worksheet.costs_ad95, 0.001); end
  def test_costs_an95; assert_in_epsilon(34113.91240879168, worksheet.costs_an95, 0.001); end
  def test_costs_k95; assert_in_epsilon(29098.75692342417, worksheet.costs_k95, 0.001); end
  def test_costs_u95; assert_in_epsilon(395.72033624498624, worksheet.costs_u95, 0.001); end
  def test_costs_ae95; assert_in_epsilon(1958.1103666251674, worksheet.costs_ae95, 0.001); end
  def test_costs_ao95; assert_in_epsilon(31452.587626294327, worksheet.costs_ao95, 0.001); end
  def test_costs_l95; assert_in_epsilon(30609.731855564016, worksheet.costs_l95, 0.001); end
  def test_costs_v95; assert_in_epsilon(474.415937859127, worksheet.costs_v95, 0.001); end
  def test_costs_af95; assert_in_epsilon(1571.7320608776276, worksheet.costs_af95, 0.001); end
  def test_costs_ap95; assert_in_epsilon(32655.879854300772, worksheet.costs_ap95, 0.001); end
  def test_costs_m95; assert_in_epsilon(30169.129300520453, worksheet.costs_m95, 0.001); end
  def test_costs_w95; assert_in_epsilon(556.1675315104552, worksheet.costs_w95, 0.001); end
  def test_costs_ag95; assert_in_epsilon(1266.0407606017036, worksheet.costs_ag95, 0.001); end
  def test_costs_aq95; assert_in_epsilon(31991.33759263261, worksheet.costs_aq95, 0.001); end
  def test_costs_n95; assert_in_epsilon(31842.45829037226, worksheet.costs_n95, 0.001); end
  def test_costs_x95; assert_in_epsilon(644.062802416157, worksheet.costs_x95, 0.001); end
  def test_costs_ah95; assert_in_epsilon(913.2092038477055, worksheet.costs_ah95, 0.001); end
  def test_costs_ar95; assert_in_epsilon(33399.73029663612, worksheet.costs_ar95, 0.001); end
  def test_costs_b96; assert_equal("IX.b", worksheet.costs_b96); end
  def test_costs_c96; assert_equal("Domestic hot water [UNUSED - See IX.a]", worksheet.costs_c96); end
  def test_costs_d96; assert_equal("Buildings", worksheet.costs_d96); end
  def test_costs_e96; assert_equal("MEUR", worksheet.costs_e96); end
  def test_costs_f96; assert_in_delta(0, (worksheet.costs_f96||0), 0.001); end
  def test_costs_g96; assert_in_delta(0, (worksheet.costs_g96||0), 0.001); end
  def test_costs_h96; assert_in_delta(0, (worksheet.costs_h96||0), 0.001); end
  def test_costs_i96; assert_in_delta(0, (worksheet.costs_i96||0), 0.001); end
  def test_costs_j96; assert_in_delta(0, (worksheet.costs_j96||0), 0.001); end
  def test_costs_k96; assert_in_delta(0, (worksheet.costs_k96||0), 0.001); end
  def test_costs_l96; assert_in_delta(0, (worksheet.costs_l96||0), 0.001); end
  def test_costs_m96; assert_in_delta(0, (worksheet.costs_m96||0), 0.001); end
  def test_costs_n96; assert_in_delta(0, (worksheet.costs_n96||0), 0.001); end
  def test_costs_p96; assert_in_delta(0, (worksheet.costs_p96||0), 0.001); end
  def test_costs_q96; assert_in_delta(0, (worksheet.costs_q96||0), 0.001); end
  def test_costs_r96; assert_in_delta(0, (worksheet.costs_r96||0), 0.001); end
  def test_costs_s96; assert_in_delta(0, (worksheet.costs_s96||0), 0.001); end
  def test_costs_t96; assert_in_delta(0, (worksheet.costs_t96||0), 0.001); end
  def test_costs_u96; assert_in_delta(0, (worksheet.costs_u96||0), 0.001); end
  def test_costs_v96; assert_in_delta(0, (worksheet.costs_v96||0), 0.001); end
  def test_costs_w96; assert_in_delta(0, (worksheet.costs_w96||0), 0.001); end
  def test_costs_x96; assert_in_delta(0, (worksheet.costs_x96||0), 0.001); end
  def test_costs_z96; assert_in_delta(0, (worksheet.costs_z96||0), 0.001); end
  def test_costs_aa96; assert_in_delta(0, (worksheet.costs_aa96||0), 0.001); end
  def test_costs_ab96; assert_in_delta(0, (worksheet.costs_ab96||0), 0.001); end
  def test_costs_ac96; assert_in_delta(0, (worksheet.costs_ac96||0), 0.001); end
  def test_costs_ad96; assert_in_delta(0, (worksheet.costs_ad96||0), 0.001); end
  def test_costs_ae96; assert_in_delta(0, (worksheet.costs_ae96||0), 0.001); end
  def test_costs_af96; assert_in_delta(0, (worksheet.costs_af96||0), 0.001); end
  def test_costs_ag96; assert_in_delta(0, (worksheet.costs_ag96||0), 0.001); end
  def test_costs_ah96; assert_in_delta(0, (worksheet.costs_ah96||0), 0.001); end
  def test_costs_aj96; assert_in_delta(0, (worksheet.costs_aj96||0), 0.001); end
  def test_costs_ak96; assert_in_delta(0, (worksheet.costs_ak96||0), 0.001); end
  def test_costs_al96; assert_in_delta(0, (worksheet.costs_al96||0), 0.001); end
  def test_costs_am96; assert_in_delta(0, (worksheet.costs_am96||0), 0.001); end
  def test_costs_an96; assert_in_delta(0, (worksheet.costs_an96||0), 0.001); end
  def test_costs_ao96; assert_in_delta(0, (worksheet.costs_ao96||0), 0.001); end
  def test_costs_ap96; assert_in_delta(0, (worksheet.costs_ap96||0), 0.001); end
  def test_costs_aq96; assert_in_delta(0, (worksheet.costs_aq96||0), 0.001); end
  def test_costs_ar96; assert_in_delta(0, (worksheet.costs_ar96||0), 0.001); end
  def test_costs_b97; assert_equal("IX.c", worksheet.costs_b97); end
  def test_costs_c97; assert_equal("Commercial heating and cooling", worksheet.costs_c97); end
  def test_costs_d97; assert_equal("Buildings", worksheet.costs_d97); end
  def test_costs_e97; assert_equal("MEUR", worksheet.costs_e97); end
  def test_costs_p97; assert_in_epsilon(584.2204441555915, worksheet.costs_p97, 0.001); end
  def test_costs_q97; assert_in_epsilon(597.1937397376303, worksheet.costs_q97, 0.001); end
  def test_costs_f97; assert_in_epsilon(11242.050542538616, worksheet.costs_f97, 0.001); end
  def test_costs_z97; assert_in_epsilon(814.954282845076, worksheet.costs_z97, 0.001); end
  def test_costs_aj97; assert_in_epsilon(12641.225269539284, worksheet.costs_aj97, 0.001); end
  def test_costs_g97; assert_in_epsilon(12213.426058267949, worksheet.costs_g97, 0.001); end
  def test_costs_aa97; assert_in_epsilon(874.4848840569082, worksheet.costs_aa97, 0.001); end
  def test_costs_ak97; assert_in_epsilon(13685.104682062487, worksheet.costs_ak97, 0.001); end
  def test_costs_h97; assert_in_epsilon(13143.694578795621, worksheet.costs_h97, 0.001); end
  def test_costs_r97; assert_in_epsilon(589.5954207301195, worksheet.costs_r97, 0.001); end
  def test_costs_ab97; assert_in_epsilon(880.2662971209425, worksheet.costs_ab97, 0.001); end
  def test_costs_al97; assert_in_epsilon(14613.556296646684, worksheet.costs_al97, 0.001); end
  def test_costs_i97; assert_in_epsilon(13431.894468066806, worksheet.costs_i97, 0.001); end
  def test_costs_s97; assert_in_epsilon(578.5809585312775, worksheet.costs_s97, 0.001); end
  def test_costs_ac97; assert_in_epsilon(822.1555504427583, worksheet.costs_ac97, 0.001); end
  def test_costs_am97; assert_in_epsilon(14832.630977040842, worksheet.costs_am97, 0.001); end
  def test_costs_j97; assert_in_epsilon(13711.48547182646, worksheet.costs_j97, 0.001); end
  def test_costs_t97; assert_in_epsilon(563.4358313225399, worksheet.costs_t97, 0.001); end
  def test_costs_ad97; assert_in_epsilon(747.8148188238356, worksheet.costs_ad97, 0.001); end
  def test_costs_an97; assert_in_epsilon(15022.736121972835, worksheet.costs_an97, 0.001); end
  def test_costs_k97; assert_in_epsilon(14022.538960776219, worksheet.costs_k97, 0.001); end
  def test_costs_u97; assert_in_epsilon(547.208547666856, worksheet.costs_u97, 0.001); end
  def test_costs_ae97; assert_in_epsilon(624.8521783736298, worksheet.costs_ae97, 0.001); end
  def test_costs_ao97; assert_in_epsilon(15194.599686816706, worksheet.costs_ao97, 0.001); end
  def test_costs_l97; assert_in_epsilon(14335.395305844886, worksheet.costs_l97, 0.001); end
  def test_costs_v97; assert_in_epsilon(529.1528129116671, worksheet.costs_v97, 0.001); end
  def test_costs_af97; assert_in_epsilon(504.1360717521833, worksheet.costs_af97, 0.001); end
  def test_costs_ap97; assert_in_epsilon(15368.684190508737, worksheet.costs_ap97, 0.001); end
  def test_costs_m97; assert_in_epsilon(14732.846114253269, worksheet.costs_m97, 0.001); end
  def test_costs_w97; assert_in_epsilon(509.97593613824097, worksheet.costs_w97, 0.001); end
  def test_costs_ag97; assert_in_epsilon(414.8831670408111, worksheet.costs_ag97, 0.001); end
  def test_costs_aq97; assert_in_epsilon(15657.70521743232, worksheet.costs_aq97, 0.001); end
  def test_costs_n97; assert_in_epsilon(16669.50410233289, worksheet.costs_n97, 0.001); end
  def test_costs_x97; assert_in_epsilon(457.5571659522171, worksheet.costs_x97, 0.001); end
  def test_costs_ah97; assert_in_epsilon(299.56992714586335, worksheet.costs_ah97, 0.001); end
  def test_costs_ar97; assert_in_epsilon(17426.631195430968, worksheet.costs_ar97, 0.001); end
  def test_costs_b98; assert_equal("IX.d", worksheet.costs_b98); end
  def test_costs_c98; assert_equal("Commercial hot water [UNUSED - See IX.c]", worksheet.costs_c98); end
  def test_costs_d98; assert_equal("Buildings", worksheet.costs_d98); end
  def test_costs_e98; assert_equal("MEUR", worksheet.costs_e98); end
  def test_costs_f98; assert_in_delta(0, (worksheet.costs_f98||0), 0.001); end
  def test_costs_g98; assert_in_delta(0, (worksheet.costs_g98||0), 0.001); end
  def test_costs_h98; assert_in_delta(0, (worksheet.costs_h98||0), 0.001); end
  def test_costs_i98; assert_in_delta(0, (worksheet.costs_i98||0), 0.001); end
  def test_costs_j98; assert_in_delta(0, (worksheet.costs_j98||0), 0.001); end
  def test_costs_k98; assert_in_delta(0, (worksheet.costs_k98||0), 0.001); end
  def test_costs_l98; assert_in_delta(0, (worksheet.costs_l98||0), 0.001); end
  def test_costs_m98; assert_in_delta(0, (worksheet.costs_m98||0), 0.001); end
  def test_costs_n98; assert_in_delta(0, (worksheet.costs_n98||0), 0.001); end
  def test_costs_p98; assert_in_delta(0, (worksheet.costs_p98||0), 0.001); end
  def test_costs_q98; assert_in_delta(0, (worksheet.costs_q98||0), 0.001); end
  def test_costs_r98; assert_in_delta(0, (worksheet.costs_r98||0), 0.001); end
  def test_costs_s98; assert_in_delta(0, (worksheet.costs_s98||0), 0.001); end
  def test_costs_t98; assert_in_delta(0, (worksheet.costs_t98||0), 0.001); end
  def test_costs_u98; assert_in_delta(0, (worksheet.costs_u98||0), 0.001); end
  def test_costs_v98; assert_in_delta(0, (worksheet.costs_v98||0), 0.001); end
  def test_costs_w98; assert_in_delta(0, (worksheet.costs_w98||0), 0.001); end
  def test_costs_x98; assert_in_delta(0, (worksheet.costs_x98||0), 0.001); end
  def test_costs_z98; assert_in_delta(0, (worksheet.costs_z98||0), 0.001); end
  def test_costs_aa98; assert_in_delta(0, (worksheet.costs_aa98||0), 0.001); end
  def test_costs_ab98; assert_in_delta(0, (worksheet.costs_ab98||0), 0.001); end
  def test_costs_ac98; assert_in_delta(0, (worksheet.costs_ac98||0), 0.001); end
  def test_costs_ad98; assert_in_delta(0, (worksheet.costs_ad98||0), 0.001); end
  def test_costs_ae98; assert_in_delta(0, (worksheet.costs_ae98||0), 0.001); end
  def test_costs_af98; assert_in_delta(0, (worksheet.costs_af98||0), 0.001); end
  def test_costs_ag98; assert_in_delta(0, (worksheet.costs_ag98||0), 0.001); end
  def test_costs_ah98; assert_in_delta(0, (worksheet.costs_ah98||0), 0.001); end
  def test_costs_aj98; assert_in_delta(0, (worksheet.costs_aj98||0), 0.001); end
  def test_costs_ak98; assert_in_delta(0, (worksheet.costs_ak98||0), 0.001); end
  def test_costs_al98; assert_in_delta(0, (worksheet.costs_al98||0), 0.001); end
  def test_costs_am98; assert_in_delta(0, (worksheet.costs_am98||0), 0.001); end
  def test_costs_an98; assert_in_delta(0, (worksheet.costs_an98||0), 0.001); end
  def test_costs_ao98; assert_in_delta(0, (worksheet.costs_ao98||0), 0.001); end
  def test_costs_ap98; assert_in_delta(0, (worksheet.costs_ap98||0), 0.001); end
  def test_costs_aq98; assert_in_delta(0, (worksheet.costs_aq98||0), 0.001); end
  def test_costs_ar98; assert_in_delta(0, (worksheet.costs_ar98||0), 0.001); end
  def test_costs_b99; assert_equal("X.a", worksheet.costs_b99); end
  def test_costs_c99; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costs_c99); end
  def test_costs_d99; assert_equal("Buildings", worksheet.costs_d99); end
  def test_costs_e99; assert_equal("MEUR", worksheet.costs_e99); end
  def test_costs_p99; assert_in_delta(0, (worksheet.costs_p99||0), 0.001); end
  def test_costs_q99; assert_in_delta(0, (worksheet.costs_q99||0), 0.001); end
  def test_costs_r99; assert_in_delta(0, (worksheet.costs_r99||0), 0.001); end
  def test_costs_s99; assert_in_delta(0, (worksheet.costs_s99||0), 0.001); end
  def test_costs_t99; assert_in_delta(0, (worksheet.costs_t99||0), 0.001); end
  def test_costs_u99; assert_in_delta(0, (worksheet.costs_u99||0), 0.001); end
  def test_costs_v99; assert_in_delta(0, (worksheet.costs_v99||0), 0.001); end
  def test_costs_w99; assert_in_delta(0, (worksheet.costs_w99||0), 0.001); end
  def test_costs_x99; assert_in_delta(0, (worksheet.costs_x99||0), 0.001); end
  def test_costs_f99; assert_in_epsilon(675.8490181220309, worksheet.costs_f99, 0.001); end
  def test_costs_z99; assert_in_epsilon(857.3884929339707, worksheet.costs_z99, 0.001); end
  def test_costs_aj99; assert_in_epsilon(1533.2375110560015, worksheet.costs_aj99, 0.001); end
  def test_costs_g99; assert_in_epsilon(675.8490181220309, worksheet.costs_g99, 0.001); end
  def test_costs_aa99; assert_in_epsilon(1186.2504993915004, worksheet.costs_aa99, 0.001); end
  def test_costs_ak99; assert_in_epsilon(1862.0995175135313, worksheet.costs_ak99, 0.001); end
  def test_costs_h99; assert_in_epsilon(834.2416989972851, worksheet.costs_h99, 0.001); end
  def test_costs_ab99; assert_in_epsilon(1399.1431246738932, worksheet.costs_ab99, 0.001); end
  def test_costs_al99; assert_in_epsilon(2233.3848236711783, worksheet.costs_al99, 0.001); end
  def test_costs_i99; assert_in_epsilon(796.3234111055937, worksheet.costs_i99, 0.001); end
  def test_costs_ac99; assert_in_epsilon(1359.2047295538296, worksheet.costs_ac99, 0.001); end
  def test_costs_am99; assert_in_epsilon(2155.528140659423, worksheet.costs_am99, 0.001); end
  def test_costs_j99; assert_in_epsilon(842.4845537807047, worksheet.costs_j99, 0.001); end
  def test_costs_ad99; assert_in_epsilon(1402.474342492662, worksheet.costs_ad99, 0.001); end
  def test_costs_an99; assert_in_epsilon(2244.9588962733665, worksheet.costs_an99, 0.001); end
  def test_costs_k99; assert_in_epsilon(858.9377770471822, worksheet.costs_k99, 0.001); end
  def test_costs_ae99; assert_in_epsilon(1474.1987789832126, worksheet.costs_ae99, 0.001); end
  def test_costs_ao99; assert_in_epsilon(2333.136556030395, worksheet.costs_ao99, 0.001); end
  def test_costs_l99; assert_in_epsilon(897.6425079962188, worksheet.costs_l99, 0.001); end
  def test_costs_af99; assert_in_epsilon(1472.385932645427, worksheet.costs_af99, 0.001); end
  def test_costs_ap99; assert_in_epsilon(2370.028440641646, worksheet.costs_ap99, 0.001); end
  def test_costs_m99; assert_in_epsilon(952.1362331603574, worksheet.costs_m99, 0.001); end
  def test_costs_ag99; assert_in_epsilon(1576.848553127991, worksheet.costs_ag99, 0.001); end
  def test_costs_aq99; assert_in_epsilon(2528.9847862883485, worksheet.costs_aq99, 0.001); end
  def test_costs_n99; assert_in_epsilon(1029.343216097785, worksheet.costs_n99, 0.001); end
  def test_costs_ah99; assert_in_epsilon(1531.724922180865, worksheet.costs_ah99, 0.001); end
  def test_costs_ar99; assert_in_epsilon(2561.0681382786497, worksheet.costs_ar99, 0.001); end
  def test_costs_b100; assert_equal("X.b", worksheet.costs_b100); end
  def test_costs_c100; assert_equal("Commercial lighting, appliances, and catering", worksheet.costs_c100); end
  def test_costs_d100; assert_equal("Buildings", worksheet.costs_d100); end
  def test_costs_e100; assert_equal("MEUR", worksheet.costs_e100); end
  def test_costs_f100; assert_in_delta(0, (worksheet.costs_f100||0), 0.001); end
  def test_costs_p100; assert_in_delta(0, (worksheet.costs_p100||0), 0.001); end
  def test_costs_q100; assert_in_delta(0, (worksheet.costs_q100||0), 0.001); end
  def test_costs_r100; assert_in_delta(0, (worksheet.costs_r100||0), 0.001); end
  def test_costs_s100; assert_in_delta(0, (worksheet.costs_s100||0), 0.001); end
  def test_costs_t100; assert_in_delta(0, (worksheet.costs_t100||0), 0.001); end
  def test_costs_u100; assert_in_delta(0, (worksheet.costs_u100||0), 0.001); end
  def test_costs_v100; assert_in_delta(0, (worksheet.costs_v100||0), 0.001); end
  def test_costs_w100; assert_in_delta(0, (worksheet.costs_w100||0), 0.001); end
  def test_costs_x100; assert_in_delta(0, (worksheet.costs_x100||0), 0.001); end
  def test_costs_z100; assert_in_epsilon(2.153921052729563, worksheet.costs_z100, 0.001); end
  def test_costs_aj100; assert_in_epsilon(2.153921052729563, worksheet.costs_aj100, 0.001); end
  def test_costs_g100; assert_in_epsilon(12.797033504643135, worksheet.costs_g100, 0.001); end
  def test_costs_aa100; assert_in_epsilon(2.2857955435471524, worksheet.costs_aa100, 0.001); end
  def test_costs_ak100; assert_in_epsilon(15.082829048190288, worksheet.costs_ak100, 0.001); end
  def test_costs_h100; assert_in_epsilon(14.196896102555012, worksheet.costs_h100, 0.001); end
  def test_costs_ab100; assert_in_epsilon(2.357385731236373, worksheet.costs_ab100, 0.001); end
  def test_costs_al100; assert_in_epsilon(16.554281833791386, worksheet.costs_al100, 0.001); end
  def test_costs_i100; assert_in_epsilon(14.521953706146098, worksheet.costs_i100, 0.001); end
  def test_costs_ac100; assert_in_epsilon(2.362277216700886, worksheet.costs_ac100, 0.001); end
  def test_costs_am100; assert_in_epsilon(16.884230922846985, worksheet.costs_am100, 0.001); end
  def test_costs_j100; assert_in_epsilon(14.993783037629754, worksheet.costs_j100, 0.001); end
  def test_costs_ad100; assert_in_epsilon(2.355647200864492, worksheet.costs_ad100, 0.001); end
  def test_costs_an100; assert_in_epsilon(17.349430238494246, worksheet.costs_an100, 0.001); end
  def test_costs_k100; assert_in_epsilon(15.288549066631628, worksheet.costs_k100, 0.001); end
  def test_costs_ae100; assert_in_epsilon(2.3375232527724834, worksheet.costs_ae100, 0.001); end
  def test_costs_ao100; assert_in_epsilon(17.626072319404113, worksheet.costs_ao100, 0.001); end
  def test_costs_l100; assert_in_epsilon(15.748176640048822, worksheet.costs_l100, 0.001); end
  def test_costs_af100; assert_in_epsilon(2.3174329232425728, worksheet.costs_af100, 0.001); end
  def test_costs_ap100; assert_in_epsilon(18.065609563291396, worksheet.costs_ap100, 0.001); end
  def test_costs_m100; assert_in_epsilon(16.20426454305001, worksheet.costs_m100, 0.001); end
  def test_costs_ag100; assert_in_epsilon(2.295360830870714, worksheet.costs_ag100, 0.001); end
  def test_costs_aq100; assert_in_epsilon(18.499625373920722, worksheet.costs_aq100, 0.001); end
  def test_costs_n100; assert_in_epsilon(16.69429803230147, worksheet.costs_n100, 0.001); end
  def test_costs_ah100; assert_in_epsilon(2.272013394407555, worksheet.costs_ah100, 0.001); end
  def test_costs_ar100; assert_in_epsilon(18.966311426709026, worksheet.costs_ar100, 0.001); end
  def test_costs_b101; assert_equal("XI.a", worksheet.costs_b101); end
  def test_costs_c101; assert_equal("Steel Industry", worksheet.costs_c101); end
  def test_costs_d101; assert_equal("Industry", worksheet.costs_d101); end
  def test_costs_e101; assert_equal("MEUR", worksheet.costs_e101); end
  def test_costs_p101; assert_in_delta(0, (worksheet.costs_p101||0), 0.001); end
  def test_costs_q101; assert_in_delta(0, (worksheet.costs_q101||0), 0.001); end
  def test_costs_r101; assert_in_delta(0, (worksheet.costs_r101||0), 0.001); end
  def test_costs_s101; assert_in_delta(0, (worksheet.costs_s101||0), 0.001); end
  def test_costs_t101; assert_in_delta(0, (worksheet.costs_t101||0), 0.001); end
  def test_costs_u101; assert_in_delta(0, (worksheet.costs_u101||0), 0.001); end
  def test_costs_v101; assert_in_delta(0, (worksheet.costs_v101||0), 0.001); end
  def test_costs_w101; assert_in_delta(0, (worksheet.costs_w101||0), 0.001); end
  def test_costs_x101; assert_in_delta(0, (worksheet.costs_x101||0), 0.001); end
  def test_costs_f101; assert_in_delta(-3.623767952376511e-13, worksheet.costs_f101, 0.001); end
  def test_costs_z101; assert_in_epsilon(674.3926080965056, worksheet.costs_z101, 0.001); end
  def test_costs_aj101; assert_in_epsilon(674.3926080965052, worksheet.costs_aj101, 0.001); end
  def test_costs_g101; assert_in_epsilon(104.97947082525774, worksheet.costs_g101, 0.001); end
  def test_costs_aa101; assert_in_epsilon(697.9459758233047, worksheet.costs_aa101, 0.001); end
  def test_costs_ak101; assert_in_epsilon(802.9254466485625, worksheet.costs_ak101, 0.001); end
  def test_costs_h101; assert_in_epsilon(275.9750267995064, worksheet.costs_h101, 0.001); end
  def test_costs_ab101; assert_in_epsilon(625.2440291425343, worksheet.costs_ab101, 0.001); end
  def test_costs_al101; assert_in_epsilon(901.2190559420407, worksheet.costs_al101, 0.001); end
  def test_costs_i101; assert_in_epsilon(433.8334906270283, worksheet.costs_i101, 0.001); end
  def test_costs_ac101; assert_in_epsilon(521.5374167219554, worksheet.costs_ac101, 0.001); end
  def test_costs_am101; assert_in_epsilon(955.3709073489838, worksheet.costs_am101, 0.001); end
  def test_costs_j101; assert_in_epsilon(483.7135099287581, worksheet.costs_j101, 0.001); end
  def test_costs_ad101; assert_in_epsilon(525.3929380556048, worksheet.costs_ad101, 0.001); end
  def test_costs_an101; assert_in_epsilon(1009.1064479843628, worksheet.costs_an101, 0.001); end
  def test_costs_k101; assert_in_epsilon(470.2798153324621, worksheet.costs_k101, 0.001); end
  def test_costs_ae101; assert_in_epsilon(501.9645727039026, worksheet.costs_ae101, 0.001); end
  def test_costs_ao101; assert_in_epsilon(972.2443880363646, worksheet.costs_ao101, 0.001); end
  def test_costs_l101; assert_in_epsilon(453.90491905453143, worksheet.costs_l101, 0.001); end
  def test_costs_af101; assert_in_epsilon(473.2172993862588, worksheet.costs_af101, 0.001); end
  def test_costs_ap101; assert_in_epsilon(927.1222184407902, worksheet.costs_ap101, 0.001); end
  def test_costs_m101; assert_in_epsilon(443.264870746, worksheet.costs_m101, 0.001); end
  def test_costs_ag101; assert_in_epsilon(452.1338820075032, worksheet.costs_ag101, 0.001); end
  def test_costs_aq101; assert_in_epsilon(895.3987527535032, worksheet.costs_aq101, 0.001); end
  def test_costs_n101; assert_in_epsilon(831.1976970651396, worksheet.costs_n101, 0.001); end
  def test_costs_ah101; assert_in_epsilon(455.6627690606502, worksheet.costs_ah101, 0.001); end
  def test_costs_ar101; assert_in_epsilon(1286.8604661257898, worksheet.costs_ar101, 0.001); end
  def test_costs_b102; assert_equal("XI.b", worksheet.costs_b102); end
  def test_costs_c102; assert_equal("Cement Industry", worksheet.costs_c102); end
  def test_costs_d102; assert_equal("Industry", worksheet.costs_d102); end
  def test_costs_e102; assert_equal("MEUR", worksheet.costs_e102); end
  def test_costs_p102; assert_in_delta(0, (worksheet.costs_p102||0), 0.001); end
  def test_costs_q102; assert_in_delta(0, (worksheet.costs_q102||0), 0.001); end
  def test_costs_r102; assert_in_delta(0, (worksheet.costs_r102||0), 0.001); end
  def test_costs_s102; assert_in_delta(0, (worksheet.costs_s102||0), 0.001); end
  def test_costs_t102; assert_in_delta(0, (worksheet.costs_t102||0), 0.001); end
  def test_costs_u102; assert_in_delta(0, (worksheet.costs_u102||0), 0.001); end
  def test_costs_v102; assert_in_delta(0, (worksheet.costs_v102||0), 0.001); end
  def test_costs_w102; assert_in_delta(0, (worksheet.costs_w102||0), 0.001); end
  def test_costs_x102; assert_in_delta(0, (worksheet.costs_x102||0), 0.001); end
  def test_costs_f102; assert_in_delta(0.07999993371521077, worksheet.costs_f102, 0.001); end
  def test_costs_z102; assert_in_epsilon(124.87011075684646, worksheet.costs_z102, 0.001); end
  def test_costs_aj102; assert_in_epsilon(124.95011069056167, worksheet.costs_aj102, 0.001); end
  def test_costs_g102; assert_in_epsilon(66.5583210300825, worksheet.costs_g102, 0.001); end
  def test_costs_aa102; assert_in_epsilon(120.97040249331693, worksheet.costs_aa102, 0.001); end
  def test_costs_ak102; assert_in_epsilon(187.52872352339944, worksheet.costs_ak102, 0.001); end
  def test_costs_h102; assert_in_epsilon(93.64171873380633, worksheet.costs_h102, 0.001); end
  def test_costs_ab102; assert_in_epsilon(113.80172663193989, worksheet.costs_ab102, 0.001); end
  def test_costs_al102; assert_in_epsilon(207.44344536574621, worksheet.costs_al102, 0.001); end
  def test_costs_i102; assert_in_epsilon(85.02334698004121, worksheet.costs_i102, 0.001); end
  def test_costs_ac102; assert_in_epsilon(78.62513713195735, worksheet.costs_ac102, 0.001); end
  def test_costs_am102; assert_in_epsilon(163.64848411199856, worksheet.costs_am102, 0.001); end
  def test_costs_j102; assert_in_epsilon(115.66402019144888, worksheet.costs_j102, 0.001); end
  def test_costs_ad102; assert_in_epsilon(73.85127333644637, worksheet.costs_ad102, 0.001); end
  def test_costs_an102; assert_in_epsilon(189.51529352789527, worksheet.costs_an102, 0.001); end
  def test_costs_k102; assert_in_epsilon(136.3999547116194, worksheet.costs_k102, 0.001); end
  def test_costs_ae102; assert_in_epsilon(66.13238054115043, worksheet.costs_ae102, 0.001); end
  def test_costs_ao102; assert_in_epsilon(202.53233525276983, worksheet.costs_ao102, 0.001); end
  def test_costs_l102; assert_in_epsilon(150.4699452428701, worksheet.costs_l102, 0.001); end
  def test_costs_af102; assert_in_epsilon(55.519017635816255, worksheet.costs_af102, 0.001); end
  def test_costs_ap102; assert_in_epsilon(205.98896287868635, worksheet.costs_ap102, 0.001); end
  def test_costs_m102; assert_in_epsilon(162.83019129691485, worksheet.costs_m102, 0.001); end
  def test_costs_ag102; assert_in_epsilon(42.4343479710712, worksheet.costs_ag102, 0.001); end
  def test_costs_aq102; assert_in_epsilon(205.26453926798604, worksheet.costs_aq102, 0.001); end
  def test_costs_n102; assert_in_epsilon(166.75611918173462, worksheet.costs_n102, 0.001); end
  def test_costs_ah102; assert_in_epsilon(27.7899529789665, worksheet.costs_ah102, 0.001); end
  def test_costs_ar102; assert_in_epsilon(194.54607216070113, worksheet.costs_ar102, 0.001); end
  def test_costs_b103; assert_equal("XI.c", worksheet.costs_b103); end
  def test_costs_c103; assert_equal("Lime Industry", worksheet.costs_c103); end
  def test_costs_d103; assert_equal("Industry", worksheet.costs_d103); end
  def test_costs_e103; assert_equal("MEUR", worksheet.costs_e103); end
  def test_costs_p103; assert_in_delta(0, (worksheet.costs_p103||0), 0.001); end
  def test_costs_q103; assert_in_delta(0, (worksheet.costs_q103||0), 0.001); end
  def test_costs_r103; assert_in_delta(0, (worksheet.costs_r103||0), 0.001); end
  def test_costs_s103; assert_in_delta(0, (worksheet.costs_s103||0), 0.001); end
  def test_costs_t103; assert_in_delta(0, (worksheet.costs_t103||0), 0.001); end
  def test_costs_u103; assert_in_delta(0, (worksheet.costs_u103||0), 0.001); end
  def test_costs_v103; assert_in_delta(0, (worksheet.costs_v103||0), 0.001); end
  def test_costs_w103; assert_in_delta(0, (worksheet.costs_w103||0), 0.001); end
  def test_costs_x103; assert_in_delta(0, (worksheet.costs_x103||0), 0.001); end
  def test_costs_f103; assert_in_delta(0, (worksheet.costs_f103||0), 0.001); end
  def test_costs_z103; assert_in_epsilon(81.11525953945034, worksheet.costs_z103, 0.001); end
  def test_costs_aj103; assert_in_epsilon(81.11525953945034, worksheet.costs_aj103, 0.001); end
  def test_costs_g103; assert_in_delta(-0.938372319723536, worksheet.costs_g103, 0.001); end
  def test_costs_aa103; assert_in_epsilon(116.62202189179963, worksheet.costs_aa103, 0.001); end
  def test_costs_ak103; assert_in_epsilon(115.68364957207609, worksheet.costs_ak103, 0.001); end
  def test_costs_h103; assert_in_epsilon(-1.6649786088701608, worksheet.costs_h103, 0.001); end
  def test_costs_ab103; assert_in_epsilon(135.04537367858535, worksheet.costs_ab103, 0.001); end
  def test_costs_al103; assert_in_epsilon(133.38039506971518, worksheet.costs_al103, 0.001); end
  def test_costs_i103; assert_in_epsilon(2.818775442833955, worksheet.costs_i103, 0.001); end
  def test_costs_ac103; assert_in_epsilon(143.9880928122933, worksheet.costs_ac103, 0.001); end
  def test_costs_am103; assert_in_epsilon(146.80686825512726, worksheet.costs_am103, 0.001); end
  def test_costs_j103; assert_in_epsilon(28.643077331070902, worksheet.costs_j103, 0.001); end
  def test_costs_ad103; assert_in_epsilon(159.5190721332024, worksheet.costs_ad103, 0.001); end
  def test_costs_an103; assert_in_epsilon(188.1621494642733, worksheet.costs_an103, 0.001); end
  def test_costs_k103; assert_in_epsilon(55.26511369163059, worksheet.costs_k103, 0.001); end
  def test_costs_ae103; assert_in_epsilon(165.22530670212674, worksheet.costs_ae103, 0.001); end
  def test_costs_ao103; assert_in_epsilon(220.49042039375735, worksheet.costs_ao103, 0.001); end
  def test_costs_l103; assert_in_epsilon(81.25744387043245, worksheet.costs_l103, 0.001); end
  def test_costs_af103; assert_in_epsilon(168.5519526809664, worksheet.costs_af103, 0.001); end
  def test_costs_ap103; assert_in_epsilon(249.80939655139883, worksheet.costs_ap103, 0.001); end
  def test_costs_m103; assert_in_epsilon(107.70524787124303, worksheet.costs_m103, 0.001); end
  def test_costs_ag103; assert_in_epsilon(171.28553980762638, worksheet.costs_ag103, 0.001); end
  def test_costs_aq103; assert_in_epsilon(278.9907876788694, worksheet.costs_aq103, 0.001); end
  def test_costs_n103; assert_in_epsilon(132.55988048746133, worksheet.costs_n103, 0.001); end
  def test_costs_ah103; assert_in_epsilon(171.81864760054052, worksheet.costs_ah103, 0.001); end
  def test_costs_ar103; assert_in_epsilon(304.3785280880019, worksheet.costs_ar103, 0.001); end
  def test_costs_b104; assert_equal("XI.d", worksheet.costs_b104); end
  def test_costs_c104; assert_equal("Glass Industry", worksheet.costs_c104); end
  def test_costs_d104; assert_equal("Industry", worksheet.costs_d104); end
  def test_costs_e104; assert_equal("MEUR", worksheet.costs_e104); end
  def test_costs_p104; assert_in_delta(0, (worksheet.costs_p104||0), 0.001); end
  def test_costs_q104; assert_in_delta(0, (worksheet.costs_q104||0), 0.001); end
  def test_costs_r104; assert_in_delta(0, (worksheet.costs_r104||0), 0.001); end
  def test_costs_s104; assert_in_delta(0, (worksheet.costs_s104||0), 0.001); end
  def test_costs_t104; assert_in_delta(0, (worksheet.costs_t104||0), 0.001); end
  def test_costs_u104; assert_in_delta(0, (worksheet.costs_u104||0), 0.001); end
  def test_costs_v104; assert_in_delta(0, (worksheet.costs_v104||0), 0.001); end
  def test_costs_w104; assert_in_delta(0, (worksheet.costs_w104||0), 0.001); end
  def test_costs_x104; assert_in_delta(0, (worksheet.costs_x104||0), 0.001); end
  def test_costs_f104; assert_in_delta(0.2143662940878508, worksheet.costs_f104, 0.001); end
  def test_costs_z104; assert_in_epsilon(153.27967225269808, worksheet.costs_z104, 0.001); end
  def test_costs_aj104; assert_in_epsilon(153.49403854678593, worksheet.costs_aj104, 0.001); end
  def test_costs_g104; assert_in_epsilon(16.67504903460617, worksheet.costs_g104, 0.001); end
  def test_costs_aa104; assert_in_epsilon(174.73032639764824, worksheet.costs_aa104, 0.001); end
  def test_costs_ak104; assert_in_epsilon(191.4053754322544, worksheet.costs_ak104, 0.001); end
  def test_costs_h104; assert_in_epsilon(37.16452495459048, worksheet.costs_h104, 0.001); end
  def test_costs_ab104; assert_in_epsilon(168.62842862730028, worksheet.costs_ab104, 0.001); end
  def test_costs_al104; assert_in_epsilon(205.79295358189077, worksheet.costs_al104, 0.001); end
  def test_costs_i104; assert_in_epsilon(54.56524622791907, worksheet.costs_i104, 0.001); end
  def test_costs_ac104; assert_in_epsilon(174.27502895571885, worksheet.costs_ac104, 0.001); end
  def test_costs_am104; assert_in_epsilon(228.8402751836379, worksheet.costs_am104, 0.001); end
  def test_costs_j104; assert_in_epsilon(72.72143391716745, worksheet.costs_j104, 0.001); end
  def test_costs_ad104; assert_in_epsilon(180.1531970626846, worksheet.costs_ad104, 0.001); end
  def test_costs_an104; assert_in_epsilon(252.87463097985204, worksheet.costs_an104, 0.001); end
  def test_costs_k104; assert_in_epsilon(87.72659909239592, worksheet.costs_k104, 0.001); end
  def test_costs_ae104; assert_in_epsilon(177.18813476250338, worksheet.costs_ae104, 0.001); end
  def test_costs_ao104; assert_in_epsilon(264.9147338548993, worksheet.costs_ao104, 0.001); end
  def test_costs_l104; assert_in_epsilon(101.8117716868813, worksheet.costs_l104, 0.001); end
  def test_costs_af104; assert_in_epsilon(172.13462102041936, worksheet.costs_af104, 0.001); end
  def test_costs_ap104; assert_in_epsilon(273.9463927073007, worksheet.costs_ap104, 0.001); end
  def test_costs_m104; assert_in_epsilon(116.86513332609329, worksheet.costs_m104, 0.001); end
  def test_costs_ag104; assert_in_epsilon(169.91749397386474, worksheet.costs_ag104, 0.001); end
  def test_costs_aq104; assert_in_epsilon(286.782627299958, worksheet.costs_aq104, 0.001); end
  def test_costs_n104; assert_in_epsilon(130.16201764396, worksheet.costs_n104, 0.001); end
  def test_costs_ah104; assert_in_epsilon(164.0357136498565, worksheet.costs_ah104, 0.001); end
  def test_costs_ar104; assert_in_epsilon(294.1977312938165, worksheet.costs_ar104, 0.001); end
  def test_costs_b105; assert_equal("XI.e", worksheet.costs_b105); end
  def test_costs_c105; assert_equal("Chemicals Industry", worksheet.costs_c105); end
  def test_costs_d105; assert_equal("Industry", worksheet.costs_d105); end
  def test_costs_e105; assert_equal("MEUR", worksheet.costs_e105); end
  def test_costs_p105; assert_in_delta(0, (worksheet.costs_p105||0), 0.001); end
  def test_costs_q105; assert_in_delta(0, (worksheet.costs_q105||0), 0.001); end
  def test_costs_r105; assert_in_delta(0, (worksheet.costs_r105||0), 0.001); end
  def test_costs_s105; assert_in_delta(0, (worksheet.costs_s105||0), 0.001); end
  def test_costs_t105; assert_in_delta(0, (worksheet.costs_t105||0), 0.001); end
  def test_costs_u105; assert_in_delta(0, (worksheet.costs_u105||0), 0.001); end
  def test_costs_v105; assert_in_delta(0, (worksheet.costs_v105||0), 0.001); end
  def test_costs_w105; assert_in_delta(0, (worksheet.costs_w105||0), 0.001); end
  def test_costs_x105; assert_in_delta(0, (worksheet.costs_x105||0), 0.001); end
  def test_costs_f105; assert_in_epsilon(5.272493473360349, worksheet.costs_f105, 0.001); end
  def test_costs_z105; assert_in_epsilon(2125.677365410336, worksheet.costs_z105, 0.001); end
  def test_costs_aj105; assert_in_epsilon(2130.9498588836964, worksheet.costs_aj105, 0.001); end
  def test_costs_g105; assert_in_epsilon(68.5837002634446, worksheet.costs_g105, 0.001); end
  def test_costs_aa105; assert_in_epsilon(2604.507305977391, worksheet.costs_aa105, 0.001); end
  def test_costs_ak105; assert_in_epsilon(2673.0910062408357, worksheet.costs_ak105, 0.001); end
  def test_costs_h105; assert_in_epsilon(136.3428468734425, worksheet.costs_h105, 0.001); end
  def test_costs_ab105; assert_in_epsilon(2514.597025956106, worksheet.costs_ab105, 0.001); end
  def test_costs_al105; assert_in_epsilon(2650.939872829548, worksheet.costs_al105, 0.001); end
  def test_costs_i105; assert_in_epsilon(193.6846393531312, worksheet.costs_i105, 0.001); end
  def test_costs_ac105; assert_in_epsilon(2299.359985690456, worksheet.costs_ac105, 0.001); end
  def test_costs_am105; assert_in_epsilon(2493.0446250435875, worksheet.costs_am105, 0.001); end
  def test_costs_j105; assert_in_epsilon(284.7764935662603, worksheet.costs_j105, 0.001); end
  def test_costs_ad105; assert_in_epsilon(2134.766921435127, worksheet.costs_ad105, 0.001); end
  def test_costs_an105; assert_in_epsilon(2419.5434150013875, worksheet.costs_an105, 0.001); end
  def test_costs_k105; assert_in_epsilon(316.5123944698268, worksheet.costs_k105, 0.001); end
  def test_costs_ae105; assert_in_epsilon(1914.20397545469, worksheet.costs_ae105, 0.001); end
  def test_costs_ao105; assert_in_epsilon(2230.7163699245166, worksheet.costs_ao105, 0.001); end
  def test_costs_l105; assert_in_epsilon(330.1258863985289, worksheet.costs_l105, 0.001); end
  def test_costs_af105; assert_in_epsilon(1688.853893211108, worksheet.costs_af105, 0.001); end
  def test_costs_ap105; assert_in_epsilon(2018.9797796096368, worksheet.costs_ap105, 0.001); end
  def test_costs_m105; assert_in_epsilon(335.1431388730427, worksheet.costs_m105, 0.001); end
  def test_costs_ag105; assert_in_epsilon(1534.523131548391, worksheet.costs_ag105, 0.001); end
  def test_costs_aq105; assert_in_epsilon(1869.6662704214336, worksheet.costs_aq105, 0.001); end
  def test_costs_n105; assert_in_epsilon(324.02759635526195, worksheet.costs_n105, 0.001); end
  def test_costs_ah105; assert_in_epsilon(1349.0505611539534, worksheet.costs_ah105, 0.001); end
  def test_costs_ar105; assert_in_epsilon(1673.0781575092153, worksheet.costs_ar105, 0.001); end
  def test_costs_b106; assert_equal("XI.f", worksheet.costs_b106); end
  def test_costs_c106; assert_equal("Pulp & Paper Industry", worksheet.costs_c106); end
  def test_costs_d106; assert_equal("Industry", worksheet.costs_d106); end
  def test_costs_e106; assert_equal("MEUR", worksheet.costs_e106); end
  def test_costs_p106; assert_in_delta(0, (worksheet.costs_p106||0), 0.001); end
  def test_costs_q106; assert_in_delta(0, (worksheet.costs_q106||0), 0.001); end
  def test_costs_r106; assert_in_delta(0, (worksheet.costs_r106||0), 0.001); end
  def test_costs_s106; assert_in_delta(0, (worksheet.costs_s106||0), 0.001); end
  def test_costs_t106; assert_in_delta(0, (worksheet.costs_t106||0), 0.001); end
  def test_costs_u106; assert_in_delta(0, (worksheet.costs_u106||0), 0.001); end
  def test_costs_v106; assert_in_delta(0, (worksheet.costs_v106||0), 0.001); end
  def test_costs_w106; assert_in_delta(0, (worksheet.costs_w106||0), 0.001); end
  def test_costs_x106; assert_in_delta(0, (worksheet.costs_x106||0), 0.001); end
  def test_costs_f106; assert_in_delta(0, (worksheet.costs_f106||0), 0.001); end
  def test_costs_z106; assert_in_epsilon(524.7237281815229, worksheet.costs_z106, 0.001); end
  def test_costs_aj106; assert_in_epsilon(524.7237281815229, worksheet.costs_aj106, 0.001); end
  def test_costs_g106; assert_in_epsilon(24.450561001322477, worksheet.costs_g106, 0.001); end
  def test_costs_aa106; assert_in_epsilon(755.7945903426639, worksheet.costs_aa106, 0.001); end
  def test_costs_ak106; assert_in_epsilon(780.2451513439864, worksheet.costs_ak106, 0.001); end
  def test_costs_h106; assert_in_epsilon(51.29150576657696, worksheet.costs_h106, 0.001); end
  def test_costs_ab106; assert_in_epsilon(764.1665422419663, worksheet.costs_ab106, 0.001); end
  def test_costs_al106; assert_in_epsilon(815.4580480085433, worksheet.costs_al106, 0.001); end
  def test_costs_i106; assert_in_epsilon(76.76741601127476, worksheet.costs_i106, 0.001); end
  def test_costs_ac106; assert_in_epsilon(733.0988520980765, worksheet.costs_ac106, 0.001); end
  def test_costs_am106; assert_in_epsilon(809.8662681093513, worksheet.costs_am106, 0.001); end
  def test_costs_j106; assert_in_epsilon(103.98725496306879, worksheet.costs_j106, 0.001); end
  def test_costs_ad106; assert_in_epsilon(717.9992389638534, worksheet.costs_ad106, 0.001); end
  def test_costs_an106; assert_in_epsilon(821.9864939269222, worksheet.costs_an106, 0.001); end
  def test_costs_k106; assert_in_epsilon(169.53484781285655, worksheet.costs_k106, 0.001); end
  def test_costs_ae106; assert_in_epsilon(701.4090173619661, worksheet.costs_ae106, 0.001); end
  def test_costs_ao106; assert_in_epsilon(870.9438651748227, worksheet.costs_ao106, 0.001); end
  def test_costs_l106; assert_in_epsilon(189.07011821022644, worksheet.costs_l106, 0.001); end
  def test_costs_af106; assert_in_epsilon(657.9017552851129, worksheet.costs_af106, 0.001); end
  def test_costs_ap106; assert_in_epsilon(846.9718734953394, worksheet.costs_ap106, 0.001); end
  def test_costs_m106; assert_in_epsilon(211.608639212776, worksheet.costs_m106, 0.001); end
  def test_costs_ag106; assert_in_epsilon(631.1974822351904, worksheet.costs_ag106, 0.001); end
  def test_costs_aq106; assert_in_epsilon(842.8061214479663, worksheet.costs_aq106, 0.001); end
  def test_costs_n106; assert_in_epsilon(228.0861888753822, worksheet.costs_n106, 0.001); end
  def test_costs_ah106; assert_in_epsilon(586.0413964824288, worksheet.costs_ah106, 0.001); end
  def test_costs_ar106; assert_in_epsilon(814.127585357811, worksheet.costs_ar106, 0.001); end
  def test_costs_b107; assert_equal("XI.g", worksheet.costs_b107); end
  def test_costs_c107; assert_equal("Oil & Gas Industry", worksheet.costs_c107); end
  def test_costs_d107; assert_equal("Industry", worksheet.costs_d107); end
  def test_costs_e107; assert_equal("MEUR", worksheet.costs_e107); end
  def test_costs_p107; assert_in_delta(0, (worksheet.costs_p107||0), 0.001); end
  def test_costs_q107; assert_in_delta(0, (worksheet.costs_q107||0), 0.001); end
  def test_costs_r107; assert_in_delta(0, (worksheet.costs_r107||0), 0.001); end
  def test_costs_s107; assert_in_delta(0, (worksheet.costs_s107||0), 0.001); end
  def test_costs_t107; assert_in_delta(0, (worksheet.costs_t107||0), 0.001); end
  def test_costs_u107; assert_in_delta(0, (worksheet.costs_u107||0), 0.001); end
  def test_costs_v107; assert_in_delta(0, (worksheet.costs_v107||0), 0.001); end
  def test_costs_w107; assert_in_delta(0, (worksheet.costs_w107||0), 0.001); end
  def test_costs_x107; assert_in_delta(0, (worksheet.costs_x107||0), 0.001); end
  def test_costs_f107; assert_in_delta(0, (worksheet.costs_f107||0), 0.001); end
  def test_costs_z107; assert_in_epsilon(781.9147767460593, worksheet.costs_z107, 0.001); end
  def test_costs_aj107; assert_in_epsilon(781.9147767460593, worksheet.costs_aj107, 0.001); end
  def test_costs_g107; assert_in_epsilon(-1.9145264060221214, worksheet.costs_g107, 0.001); end
  def test_costs_aa107; assert_in_epsilon(1061.095798682306, worksheet.costs_aa107, 0.001); end
  def test_costs_ak107; assert_in_epsilon(1059.1812722762838, worksheet.costs_ak107, 0.001); end
  def test_costs_h107; assert_in_epsilon(126.01689938153955, worksheet.costs_h107, 0.001); end
  def test_costs_ab107; assert_in_epsilon(723.4258024481678, worksheet.costs_ab107, 0.001); end
  def test_costs_al107; assert_in_epsilon(849.4427018297074, worksheet.costs_al107, 0.001); end
  def test_costs_i107; assert_in_epsilon(107.681193502877, worksheet.costs_i107, 0.001); end
  def test_costs_ac107; assert_in_epsilon(594.8050307461602, worksheet.costs_ac107, 0.001); end
  def test_costs_am107; assert_in_epsilon(702.4862242490373, worksheet.costs_am107, 0.001); end
  def test_costs_j107; assert_in_epsilon(114.06749802591554, worksheet.costs_j107, 0.001); end
  def test_costs_ad107; assert_in_epsilon(482.3984339319605, worksheet.costs_ad107, 0.001); end
  def test_costs_an107; assert_in_epsilon(596.465931957876, worksheet.costs_an107, 0.001); end
  def test_costs_k107; assert_in_epsilon(104.59870348794662, worksheet.costs_k107, 0.001); end
  def test_costs_ae107; assert_in_epsilon(359.30003439190926, worksheet.costs_ae107, 0.001); end
  def test_costs_ao107; assert_in_epsilon(463.8987378798559, worksheet.costs_ao107, 0.001); end
  def test_costs_l107; assert_in_epsilon(92.85557904720723, worksheet.costs_l107, 0.001); end
  def test_costs_af107; assert_in_epsilon(267.5328440554879, worksheet.costs_af107, 0.001); end
  def test_costs_ap107; assert_in_epsilon(360.3884231026951, worksheet.costs_ap107, 0.001); end
  def test_costs_m107; assert_in_epsilon(78.3373249190337, worksheet.costs_m107, 0.001); end
  def test_costs_ag107; assert_in_epsilon(193.09030844723296, worksheet.costs_ag107, 0.001); end
  def test_costs_aq107; assert_in_epsilon(271.42763336626666, worksheet.costs_aq107, 0.001); end
  def test_costs_n107; assert_in_epsilon(61.34387836228708, worksheet.costs_n107, 0.001); end
  def test_costs_ah107; assert_in_epsilon(131.0172508294239, worksheet.costs_ah107, 0.001); end
  def test_costs_ar107; assert_in_epsilon(192.36112919171097, worksheet.costs_ar107, 0.001); end
  def test_costs_b108; assert_equal("XI.h", worksheet.costs_b108); end
  def test_costs_c108; assert_equal("Food, drinks and tobacco Industry", worksheet.costs_c108); end
  def test_costs_d108; assert_equal("Industry", worksheet.costs_d108); end
  def test_costs_e108; assert_equal("MEUR", worksheet.costs_e108); end
  def test_costs_p108; assert_in_delta(0, (worksheet.costs_p108||0), 0.001); end
  def test_costs_q108; assert_in_delta(0, (worksheet.costs_q108||0), 0.001); end
  def test_costs_r108; assert_in_delta(0, (worksheet.costs_r108||0), 0.001); end
  def test_costs_s108; assert_in_delta(0, (worksheet.costs_s108||0), 0.001); end
  def test_costs_t108; assert_in_delta(0, (worksheet.costs_t108||0), 0.001); end
  def test_costs_u108; assert_in_delta(0, (worksheet.costs_u108||0), 0.001); end
  def test_costs_v108; assert_in_delta(0, (worksheet.costs_v108||0), 0.001); end
  def test_costs_w108; assert_in_delta(0, (worksheet.costs_w108||0), 0.001); end
  def test_costs_x108; assert_in_delta(0, (worksheet.costs_x108||0), 0.001); end
  def test_costs_f108; assert_in_delta(0, (worksheet.costs_f108||0), 0.001); end
  def test_costs_z108; assert_in_epsilon(614.2587734585472, worksheet.costs_z108, 0.001); end
  def test_costs_aj108; assert_in_epsilon(614.2587734585472, worksheet.costs_aj108, 0.001); end
  def test_costs_g108; assert_in_epsilon(40.87191877789303, worksheet.costs_g108, 0.001); end
  def test_costs_aa108; assert_in_epsilon(784.7230434720922, worksheet.costs_aa108, 0.001); end
  def test_costs_ak108; assert_in_epsilon(825.5949622499852, worksheet.costs_ak108, 0.001); end
  def test_costs_h108; assert_in_epsilon(86.71512507573497, worksheet.costs_h108, 0.001); end
  def test_costs_ab108; assert_in_epsilon(790.3455197940311, worksheet.costs_ab108, 0.001); end
  def test_costs_al108; assert_in_epsilon(877.0606448697661, worksheet.costs_al108, 0.001); end
  def test_costs_i108; assert_in_epsilon(129.58827988461314, worksheet.costs_i108, 0.001); end
  def test_costs_ac108; assert_in_epsilon(739.1489792283389, worksheet.costs_ac108, 0.001); end
  def test_costs_am108; assert_in_epsilon(868.7372591129521, worksheet.costs_am108, 0.001); end
  def test_costs_j108; assert_in_epsilon(194.64841636459218, worksheet.costs_j108, 0.001); end
  def test_costs_ad108; assert_in_epsilon(706.4874226223747, worksheet.costs_ad108, 0.001); end
  def test_costs_an108; assert_in_epsilon(901.1358389869669, worksheet.costs_an108, 0.001); end
  def test_costs_k108; assert_in_epsilon(257.6898871834732, worksheet.costs_k108, 0.001); end
  def test_costs_ae108; assert_in_epsilon(667.8689040602812, worksheet.costs_ae108, 0.001); end
  def test_costs_ao108; assert_in_epsilon(925.5587912437545, worksheet.costs_ao108, 0.001); end
  def test_costs_l108; assert_in_epsilon(314.90331422010746, worksheet.costs_l108, 0.001); end
  def test_costs_af108; assert_in_epsilon(614.0033951084963, worksheet.costs_af108, 0.001); end
  def test_costs_ap108; assert_in_epsilon(928.9067093286037, worksheet.costs_ap108, 0.001); end
  def test_costs_m108; assert_in_epsilon(378.6602298866983, worksheet.costs_m108, 0.001); end
  def test_costs_ag108; assert_in_epsilon(577.5094903950186, worksheet.costs_ag108, 0.001); end
  def test_costs_aq108; assert_in_epsilon(956.1697202817169, worksheet.costs_aq108, 0.001); end
  def test_costs_n108; assert_in_epsilon(429.75874504590945, worksheet.costs_n108, 0.001); end
  def test_costs_ah108; assert_in_epsilon(517.434335951577, worksheet.costs_ah108, 0.001); end
  def test_costs_ar108; assert_in_epsilon(947.1930809974865, worksheet.costs_ar108, 0.001); end
  def test_costs_b109; assert_equal("XI.i", worksheet.costs_b109); end
  def test_costs_c109; assert_equal("Machines Industry", worksheet.costs_c109); end
  def test_costs_d109; assert_equal("Industry", worksheet.costs_d109); end
  def test_costs_e109; assert_equal("MEUR", worksheet.costs_e109); end
  def test_costs_p109; assert_in_delta(0, (worksheet.costs_p109||0), 0.001); end
  def test_costs_q109; assert_in_delta(0, (worksheet.costs_q109||0), 0.001); end
  def test_costs_r109; assert_in_delta(0, (worksheet.costs_r109||0), 0.001); end
  def test_costs_s109; assert_in_delta(0, (worksheet.costs_s109||0), 0.001); end
  def test_costs_t109; assert_in_delta(0, (worksheet.costs_t109||0), 0.001); end
  def test_costs_u109; assert_in_delta(0, (worksheet.costs_u109||0), 0.001); end
  def test_costs_v109; assert_in_delta(0, (worksheet.costs_v109||0), 0.001); end
  def test_costs_w109; assert_in_delta(0, (worksheet.costs_w109||0), 0.001); end
  def test_costs_x109; assert_in_delta(0, (worksheet.costs_x109||0), 0.001); end
  def test_costs_f109; assert_in_delta(0, (worksheet.costs_f109||0), 0.001); end
  def test_costs_z109; assert_in_delta(0, (worksheet.costs_z109||0), 0.001); end
  def test_costs_aj109; assert_in_delta(0, (worksheet.costs_aj109||0), 0.001); end
  def test_costs_g109; assert_in_delta(0, (worksheet.costs_g109||0), 0.001); end
  def test_costs_aa109; assert_in_delta(0, (worksheet.costs_aa109||0), 0.001); end
  def test_costs_ak109; assert_in_delta(0, (worksheet.costs_ak109||0), 0.001); end
  def test_costs_h109; assert_in_delta(0, (worksheet.costs_h109||0), 0.001); end
  def test_costs_ab109; assert_in_delta(0, (worksheet.costs_ab109||0), 0.001); end
  def test_costs_al109; assert_in_delta(0, (worksheet.costs_al109||0), 0.001); end
  def test_costs_i109; assert_in_delta(0, (worksheet.costs_i109||0), 0.001); end
  def test_costs_ac109; assert_in_delta(0, (worksheet.costs_ac109||0), 0.001); end
  def test_costs_am109; assert_in_delta(0, (worksheet.costs_am109||0), 0.001); end
  def test_costs_j109; assert_in_delta(0, (worksheet.costs_j109||0), 0.001); end
  def test_costs_ad109; assert_in_delta(0, (worksheet.costs_ad109||0), 0.001); end
  def test_costs_an109; assert_in_delta(0, (worksheet.costs_an109||0), 0.001); end
  def test_costs_k109; assert_in_delta(0, (worksheet.costs_k109||0), 0.001); end
  def test_costs_ae109; assert_in_delta(0, (worksheet.costs_ae109||0), 0.001); end
  def test_costs_ao109; assert_in_delta(0, (worksheet.costs_ao109||0), 0.001); end
  def test_costs_l109; assert_in_delta(0, (worksheet.costs_l109||0), 0.001); end
  def test_costs_af109; assert_in_delta(0, (worksheet.costs_af109||0), 0.001); end
  def test_costs_ap109; assert_in_delta(0, (worksheet.costs_ap109||0), 0.001); end
  def test_costs_m109; assert_in_delta(0, (worksheet.costs_m109||0), 0.001); end
  def test_costs_ag109; assert_in_delta(0, (worksheet.costs_ag109||0), 0.001); end
  def test_costs_aq109; assert_in_delta(0, (worksheet.costs_aq109||0), 0.001); end
  def test_costs_n109; assert_in_delta(0, (worksheet.costs_n109||0), 0.001); end
  def test_costs_ah109; assert_in_delta(0, (worksheet.costs_ah109||0), 0.001); end
  def test_costs_ar109; assert_in_delta(0, (worksheet.costs_ar109||0), 0.001); end
  def test_costs_b110; assert_equal("XI.j", worksheet.costs_b110); end
  def test_costs_c110; assert_equal("Non-Ferrous metals Industry", worksheet.costs_c110); end
  def test_costs_d110; assert_equal("Industry", worksheet.costs_d110); end
  def test_costs_e110; assert_equal("MEUR", worksheet.costs_e110); end
  def test_costs_p110; assert_in_delta(0, (worksheet.costs_p110||0), 0.001); end
  def test_costs_q110; assert_in_delta(0, (worksheet.costs_q110||0), 0.001); end
  def test_costs_r110; assert_in_delta(0, (worksheet.costs_r110||0), 0.001); end
  def test_costs_s110; assert_in_delta(0, (worksheet.costs_s110||0), 0.001); end
  def test_costs_t110; assert_in_delta(0, (worksheet.costs_t110||0), 0.001); end
  def test_costs_u110; assert_in_delta(0, (worksheet.costs_u110||0), 0.001); end
  def test_costs_v110; assert_in_delta(0, (worksheet.costs_v110||0), 0.001); end
  def test_costs_w110; assert_in_delta(0, (worksheet.costs_w110||0), 0.001); end
  def test_costs_x110; assert_in_delta(0, (worksheet.costs_x110||0), 0.001); end
  def test_costs_f110; assert_in_delta(0, (worksheet.costs_f110||0), 0.001); end
  def test_costs_z110; assert_in_epsilon(112.37980694519494, worksheet.costs_z110, 0.001); end
  def test_costs_aj110; assert_in_epsilon(112.37980694519494, worksheet.costs_aj110, 0.001); end
  def test_costs_g110; assert_in_epsilon(8.334413575472292, worksheet.costs_g110, 0.001); end
  def test_costs_aa110; assert_in_epsilon(221.1557781789478, worksheet.costs_aa110, 0.001); end
  def test_costs_ak110; assert_in_epsilon(229.4901917544201, worksheet.costs_ak110, 0.001); end
  def test_costs_h110; assert_in_epsilon(16.80889842480453, worksheet.costs_h110, 0.001); end
  def test_costs_ab110; assert_in_epsilon(218.45829523805546, worksheet.costs_ab110, 0.001); end
  def test_costs_al110; assert_in_epsilon(235.26719366286, worksheet.costs_al110, 0.001); end
  def test_costs_i110; assert_in_epsilon(26.395429700038445, worksheet.costs_i110, 0.001); end
  def test_costs_ac110; assert_in_epsilon(221.83590128024136, worksheet.costs_ac110, 0.001); end
  def test_costs_am110; assert_in_epsilon(248.2313309802798, worksheet.costs_am110, 0.001); end
  def test_costs_j110; assert_in_epsilon(39.87063608159813, worksheet.costs_j110, 0.001); end
  def test_costs_ad110; assert_in_epsilon(222.2501600080407, worksheet.costs_ad110, 0.001); end
  def test_costs_an110; assert_in_epsilon(262.1207960896388, worksheet.costs_an110, 0.001); end
  def test_costs_k110; assert_in_epsilon(51.73096120998352, worksheet.costs_k110, 0.001); end
  def test_costs_ae110; assert_in_epsilon(217.749580576067, worksheet.costs_ae110, 0.001); end
  def test_costs_ao110; assert_in_epsilon(269.4805417860505, worksheet.costs_ao110, 0.001); end
  def test_costs_l110; assert_in_epsilon(61.12741674766289, worksheet.costs_l110, 0.001); end
  def test_costs_af110; assert_in_epsilon(203.73255913108164, worksheet.costs_af110, 0.001); end
  def test_costs_ap110; assert_in_epsilon(264.85997587874454, worksheet.costs_ap110, 0.001); end
  def test_costs_m110; assert_in_epsilon(69.38459655170921, worksheet.costs_m110, 0.001); end
  def test_costs_ag110; assert_in_epsilon(189.53129091184792, worksheet.costs_ag110, 0.001); end
  def test_costs_aq110; assert_in_epsilon(258.9158874635571, worksheet.costs_aq110, 0.001); end
  def test_costs_n110; assert_in_epsilon(77.2963052441389, worksheet.costs_n110, 0.001); end
  def test_costs_ah110; assert_in_epsilon(178.03393700516892, worksheet.costs_ah110, 0.001); end
  def test_costs_ar110; assert_in_epsilon(255.33024224930784, worksheet.costs_ar110, 0.001); end
  def test_costs_b111; assert_equal("XI.k", worksheet.costs_b111); end
  def test_costs_c111; assert_equal("Construction industry", worksheet.costs_c111); end
  def test_costs_d111; assert_equal("Industry", worksheet.costs_d111); end
  def test_costs_e111; assert_equal("MEUR", worksheet.costs_e111); end
  def test_costs_p111; assert_in_delta(0, (worksheet.costs_p111||0), 0.001); end
  def test_costs_q111; assert_in_delta(0, (worksheet.costs_q111||0), 0.001); end
  def test_costs_r111; assert_in_delta(0, (worksheet.costs_r111||0), 0.001); end
  def test_costs_s111; assert_in_delta(0, (worksheet.costs_s111||0), 0.001); end
  def test_costs_t111; assert_in_delta(0, (worksheet.costs_t111||0), 0.001); end
  def test_costs_u111; assert_in_delta(0, (worksheet.costs_u111||0), 0.001); end
  def test_costs_v111; assert_in_delta(0, (worksheet.costs_v111||0), 0.001); end
  def test_costs_w111; assert_in_delta(0, (worksheet.costs_w111||0), 0.001); end
  def test_costs_x111; assert_in_delta(0, (worksheet.costs_x111||0), 0.001); end
  def test_costs_f111; assert_in_delta(0, (worksheet.costs_f111||0), 0.001); end
  def test_costs_z111; assert_in_epsilon(62.94103622824142, worksheet.costs_z111, 0.001); end
  def test_costs_aj111; assert_in_epsilon(62.94103622824142, worksheet.costs_aj111, 0.001); end
  def test_costs_g111; assert_in_epsilon(3.8010379932176064, worksheet.costs_g111, 0.001); end
  def test_costs_aa111; assert_in_epsilon(99.46752479160978, worksheet.costs_aa111, 0.001); end
  def test_costs_ak111; assert_in_epsilon(103.26856278482738, worksheet.costs_ak111, 0.001); end
  def test_costs_h111; assert_in_epsilon(8.768644240287706, worksheet.costs_h111, 0.001); end
  def test_costs_ab111; assert_in_epsilon(110.7855728306413, worksheet.costs_ab111, 0.001); end
  def test_costs_al111; assert_in_epsilon(119.55421707092901, worksheet.costs_al111, 0.001); end
  def test_costs_i111; assert_in_epsilon(14.772911156758642, worksheet.costs_i111, 0.001); end
  def test_costs_ac111; assert_in_epsilon(118.7684576504664, worksheet.costs_ac111, 0.001); end
  def test_costs_am111; assert_in_epsilon(133.54136880722504, worksheet.costs_am111, 0.001); end
  def test_costs_j111; assert_in_epsilon(28.697774590325515, worksheet.costs_j111, 0.001); end
  def test_costs_ad111; assert_in_epsilon(127.20550367858262, worksheet.costs_ad111, 0.001); end
  def test_costs_an111; assert_in_epsilon(155.90327826890814, worksheet.costs_an111, 0.001); end
  def test_costs_k111; assert_in_epsilon(40.41340208707012, worksheet.costs_k111, 0.001); end
  def test_costs_ae111; assert_in_epsilon(126.72967148517556, worksheet.costs_ae111, 0.001); end
  def test_costs_ao111; assert_in_epsilon(167.14307357224567, worksheet.costs_ao111, 0.001); end
  def test_costs_l111; assert_in_epsilon(51.04738984589066, worksheet.costs_l111, 0.001); end
  def test_costs_af111; assert_in_epsilon(124.306911809128, worksheet.costs_af111, 0.001); end
  def test_costs_ap111; assert_in_epsilon(175.35430165501867, worksheet.costs_ap111, 0.001); end
  def test_costs_m111; assert_in_epsilon(61.23765338738145, worksheet.costs_m111, 0.001); end
  def test_costs_ag111; assert_in_epsilon(121.6881789642701, worksheet.costs_ag111, 0.001); end
  def test_costs_aq111; assert_in_epsilon(182.92583235165154, worksheet.costs_aq111, 0.001); end
  def test_costs_n111; assert_in_epsilon(70.52166577089689, worksheet.costs_n111, 0.001); end
  def test_costs_ah111; assert_in_epsilon(116.70592401068171, worksheet.costs_ah111, 0.001); end
  def test_costs_ar111; assert_in_epsilon(187.22758978157862, worksheet.costs_ar111, 0.001); end
  def test_costs_b112; assert_equal("XI.l", worksheet.costs_b112); end
  def test_costs_c112; assert_equal("Other Industry", worksheet.costs_c112); end
  def test_costs_d112; assert_equal("Industry", worksheet.costs_d112); end
  def test_costs_e112; assert_equal("MEUR", worksheet.costs_e112); end
  def test_costs_p112; assert_in_delta(0, (worksheet.costs_p112||0), 0.001); end
  def test_costs_q112; assert_in_delta(0, (worksheet.costs_q112||0), 0.001); end
  def test_costs_r112; assert_in_delta(0, (worksheet.costs_r112||0), 0.001); end
  def test_costs_s112; assert_in_delta(0, (worksheet.costs_s112||0), 0.001); end
  def test_costs_t112; assert_in_delta(0, (worksheet.costs_t112||0), 0.001); end
  def test_costs_u112; assert_in_delta(0, (worksheet.costs_u112||0), 0.001); end
  def test_costs_v112; assert_in_delta(0, (worksheet.costs_v112||0), 0.001); end
  def test_costs_w112; assert_in_delta(0, (worksheet.costs_w112||0), 0.001); end
  def test_costs_x112; assert_in_delta(0, (worksheet.costs_x112||0), 0.001); end
  def test_costs_f112; assert_in_delta(0, (worksheet.costs_f112||0), 0.001); end
  def test_costs_z112; assert_in_delta(0, (worksheet.costs_z112||0), 0.001); end
  def test_costs_aj112; assert_in_delta(0, (worksheet.costs_aj112||0), 0.001); end
  def test_costs_g112; assert_in_delta(0, (worksheet.costs_g112||0), 0.001); end
  def test_costs_aa112; assert_in_delta(0, (worksheet.costs_aa112||0), 0.001); end
  def test_costs_ak112; assert_in_delta(0, (worksheet.costs_ak112||0), 0.001); end
  def test_costs_h112; assert_in_delta(0, (worksheet.costs_h112||0), 0.001); end
  def test_costs_ab112; assert_in_delta(0, (worksheet.costs_ab112||0), 0.001); end
  def test_costs_al112; assert_in_delta(0, (worksheet.costs_al112||0), 0.001); end
  def test_costs_i112; assert_in_delta(0, (worksheet.costs_i112||0), 0.001); end
  def test_costs_ac112; assert_in_delta(0, (worksheet.costs_ac112||0), 0.001); end
  def test_costs_am112; assert_in_delta(0, (worksheet.costs_am112||0), 0.001); end
  def test_costs_j112; assert_in_delta(0, (worksheet.costs_j112||0), 0.001); end
  def test_costs_ad112; assert_in_delta(0, (worksheet.costs_ad112||0), 0.001); end
  def test_costs_an112; assert_in_delta(0, (worksheet.costs_an112||0), 0.001); end
  def test_costs_k112; assert_in_delta(0, (worksheet.costs_k112||0), 0.001); end
  def test_costs_ae112; assert_in_delta(0, (worksheet.costs_ae112||0), 0.001); end
  def test_costs_ao112; assert_in_delta(0, (worksheet.costs_ao112||0), 0.001); end
  def test_costs_l112; assert_in_delta(0, (worksheet.costs_l112||0), 0.001); end
  def test_costs_af112; assert_in_delta(0, (worksheet.costs_af112||0), 0.001); end
  def test_costs_ap112; assert_in_delta(0, (worksheet.costs_ap112||0), 0.001); end
  def test_costs_m112; assert_in_delta(0, (worksheet.costs_m112||0), 0.001); end
  def test_costs_ag112; assert_in_delta(0, (worksheet.costs_ag112||0), 0.001); end
  def test_costs_aq112; assert_in_delta(0, (worksheet.costs_aq112||0), 0.001); end
  def test_costs_n112; assert_in_delta(0, (worksheet.costs_n112||0), 0.001); end
  def test_costs_ah112; assert_in_delta(0, (worksheet.costs_ah112||0), 0.001); end
  def test_costs_ar112; assert_in_delta(0, (worksheet.costs_ar112||0), 0.001); end
  def test_costs_b113; assert_equal("XII.a", worksheet.costs_b113); end
  def test_costs_c113; assert_equal("Domestic passenger transport", worksheet.costs_c113); end
  def test_costs_d113; assert_equal("Transport", worksheet.costs_d113); end
  def test_costs_e113; assert_equal("MEUR", worksheet.costs_e113); end
  def test_costs_f113; assert_in_epsilon(7214.863478633673, worksheet.costs_f113, 0.001); end
  def test_costs_p113; assert_in_epsilon(7486.845974896208, worksheet.costs_p113, 0.001); end
  def test_costs_z113; assert_in_epsilon(2598.249666380655, worksheet.costs_z113, 0.001); end
  def test_costs_aj113; assert_in_epsilon(17299.959119910538, worksheet.costs_aj113, 0.001); end
  def test_costs_g113; assert_in_epsilon(7214.863478633673, worksheet.costs_g113, 0.001); end
  def test_costs_q113; assert_in_epsilon(7498.483549675882, worksheet.costs_q113, 0.001); end
  def test_costs_aa113; assert_in_epsilon(2802.324357223691, worksheet.costs_aa113, 0.001); end
  def test_costs_ak113; assert_in_epsilon(17515.671385533245, worksheet.costs_ak113, 0.001); end
  def test_costs_h113; assert_in_epsilon(10129.786334680288, worksheet.costs_h113, 0.001); end
  def test_costs_r113; assert_in_epsilon(8799.536502776813, worksheet.costs_r113, 0.001); end
  def test_costs_ab113; assert_in_epsilon(2960.513080532824, worksheet.costs_ab113, 0.001); end
  def test_costs_al113; assert_in_epsilon(21889.835917989923, worksheet.costs_al113, 0.001); end
  def test_costs_i113; assert_in_epsilon(10068.869149988506, worksheet.costs_i113, 0.001); end
  def test_costs_s113; assert_in_epsilon(9795.949728193467, worksheet.costs_s113, 0.001); end
  def test_costs_ac113; assert_in_epsilon(2815.6807629047275, worksheet.costs_ac113, 0.001); end
  def test_costs_am113; assert_in_epsilon(22680.499641086702, worksheet.costs_am113, 0.001); end
  def test_costs_j113; assert_in_epsilon(10308.323927269212, worksheet.costs_j113, 0.001); end
  def test_costs_t113; assert_in_epsilon(10660.494587823636, worksheet.costs_t113, 0.001); end
  def test_costs_ad113; assert_in_epsilon(2464.2340387836643, worksheet.costs_ad113, 0.001); end
  def test_costs_an113; assert_in_epsilon(23433.05255387651, worksheet.costs_an113, 0.001); end
  def test_costs_k113; assert_in_epsilon(9560.42443238679, worksheet.costs_k113, 0.001); end
  def test_costs_u113; assert_in_epsilon(11256.752153010382, worksheet.costs_u113, 0.001); end
  def test_costs_ae113; assert_in_epsilon(1941.828347669935, worksheet.costs_ae113, 0.001); end
  def test_costs_ao113; assert_in_epsilon(22759.00493306711, worksheet.costs_ao113, 0.001); end
  def test_costs_l113; assert_in_epsilon(8745.304949896816, worksheet.costs_l113, 0.001); end
  def test_costs_v113; assert_in_epsilon(11716.520536459906, worksheet.costs_v113, 0.001); end
  def test_costs_af113; assert_in_epsilon(1634.4841770392363, worksheet.costs_af113, 0.001); end
  def test_costs_ap113; assert_in_epsilon(22096.309663395958, worksheet.costs_ap113, 0.001); end
  def test_costs_m113; assert_in_epsilon(8077.85813474966, worksheet.costs_m113, 0.001); end
  def test_costs_w113; assert_in_epsilon(11983.347527344224, worksheet.costs_w113, 0.001); end
  def test_costs_ag113; assert_in_epsilon(1393.4673054089037, worksheet.costs_ag113, 0.001); end
  def test_costs_aq113; assert_in_epsilon(21454.672967502785, worksheet.costs_aq113, 0.001); end
  def test_costs_n113; assert_in_epsilon(6155.264162386436, worksheet.costs_n113, 0.001); end
  def test_costs_x113; assert_in_epsilon(12127.500919720598, worksheet.costs_x113, 0.001); end
  def test_costs_ah113; assert_in_epsilon(1138.9081412220014, worksheet.costs_ah113, 0.001); end
  def test_costs_ar113; assert_in_epsilon(19421.673223329035, worksheet.costs_ar113, 0.001); end
  def test_costs_b114; assert_equal("XII.b", worksheet.costs_b114); end
  def test_costs_c114; assert_equal("Domestic freight", worksheet.costs_c114); end
  def test_costs_d114; assert_equal("Transport", worksheet.costs_d114); end
  def test_costs_e114; assert_equal("MEUR", worksheet.costs_e114); end
  def test_costs_f114; assert_in_delta(0, (worksheet.costs_f114||0), 0.001); end
  def test_costs_p114; assert_in_delta(0, (worksheet.costs_p114||0), 0.001); end
  def test_costs_z114; assert_in_epsilon(1427.531465918821, worksheet.costs_z114, 0.001); end
  def test_costs_aj114; assert_in_epsilon(1427.531465918821, worksheet.costs_aj114, 0.001); end
  def test_costs_g114; assert_in_epsilon(1531.07639202809, worksheet.costs_g114, 0.001); end
  def test_costs_q114; assert_in_epsilon(1027.976033543042, worksheet.costs_q114, 0.001); end
  def test_costs_aa114; assert_in_epsilon(1563.1929887085446, worksheet.costs_aa114, 0.001); end
  def test_costs_ak114; assert_in_epsilon(4122.245414279676, worksheet.costs_ak114, 0.001); end
  def test_costs_h114; assert_in_epsilon(1533.6554917378046, worksheet.costs_h114, 0.001); end
  def test_costs_r114; assert_in_epsilon(1022.4154171752265, worksheet.costs_r114, 0.001); end
  def test_costs_ab114; assert_in_epsilon(1798.8522885877535, worksheet.costs_ab114, 0.001); end
  def test_costs_al114; assert_in_epsilon(4354.923197500784, worksheet.costs_al114, 0.001); end
  def test_costs_i114; assert_in_epsilon(1541.614934857213, worksheet.costs_i114, 0.001); end
  def test_costs_s114; assert_in_epsilon(1012.6387730059499, worksheet.costs_s114, 0.001); end
  def test_costs_ac114; assert_in_epsilon(2010.1918588247866, worksheet.costs_ac114, 0.001); end
  def test_costs_am114; assert_in_epsilon(4564.445566687949, worksheet.costs_am114, 0.001); end
  def test_costs_j114; assert_in_epsilon(1555.28417332324, worksheet.costs_j114, 0.001); end
  def test_costs_t114; assert_in_epsilon(1005.6104017190085, worksheet.costs_t114, 0.001); end
  def test_costs_ad114; assert_in_epsilon(2207.5022363704147, worksheet.costs_ad114, 0.001); end
  def test_costs_an114; assert_in_epsilon(4768.396811412664, worksheet.costs_an114, 0.001); end
  def test_costs_k114; assert_in_epsilon(1574.877823029208, worksheet.costs_k114, 0.001); end
  def test_costs_u114; assert_in_epsilon(1001.448494813655, worksheet.costs_u114, 0.001); end
  def test_costs_ae114; assert_in_epsilon(2212.620278120157, worksheet.costs_ae114, 0.001); end
  def test_costs_ao114; assert_in_epsilon(4788.94659596302, worksheet.costs_ao114, 0.001); end
  def test_costs_l114; assert_in_epsilon(1600.6104998684386, worksheet.costs_l114, 0.001); end
  def test_costs_v114; assert_in_epsilon(1000.2712437891425, worksheet.costs_v114, 0.001); end
  def test_costs_af114; assert_in_epsilon(2195.1241023844295, worksheet.costs_af114, 0.001); end
  def test_costs_ap114; assert_in_epsilon(4796.0058460420105, worksheet.costs_ap114, 0.001); end
  def test_costs_m114; assert_in_epsilon(1632.6968197342537, worksheet.costs_m114, 0.001); end
  def test_costs_w114; assert_in_epsilon(1002.1968401447239, worksheet.costs_w114, 0.001); end
  def test_costs_ag114; assert_in_epsilon(2181.481506242631, worksheet.costs_ag114, 0.001); end
  def test_costs_aq114; assert_in_epsilon(4816.375166121608, worksheet.costs_aq114, 0.001); end
  def test_costs_n114; assert_in_epsilon(1671.351398519975, worksheet.costs_n114, 0.001); end
  def test_costs_x114; assert_in_epsilon(1007.3434753796516, worksheet.costs_x114, 0.001); end
  def test_costs_ah114; assert_in_epsilon(2132.4650645036927, worksheet.costs_ah114, 0.001); end
  def test_costs_ar114; assert_in_epsilon(4811.15993840332, worksheet.costs_ar114, 0.001); end
  def test_costs_b115; assert_equal("XII.c", worksheet.costs_b115); end
  def test_costs_c115; assert_equal("International aviation", worksheet.costs_c115); end
  def test_costs_d115; assert_equal("Transport", worksheet.costs_d115); end
  def test_costs_e115; assert_equal("MEUR", worksheet.costs_e115); end
  def test_costs_f115; assert_in_epsilon(60.46146948776062, worksheet.costs_f115, 0.001); end
  def test_costs_p115; assert_in_epsilon(47.60853352545351, worksheet.costs_p115, 0.001); end
  def test_costs_z115; assert_in_epsilon(675.5219023389548, worksheet.costs_z115, 0.001); end
  def test_costs_aj115; assert_in_epsilon(783.5919053521689, worksheet.costs_aj115, 0.001); end
  def test_costs_g115; assert_in_epsilon(311.8767195444263, worksheet.costs_g115, 0.001); end
  def test_costs_q115; assert_in_epsilon(245.5777767896462, worksheet.costs_q115, 0.001); end
  def test_costs_aa115; assert_in_epsilon(728.1486152645592, worksheet.costs_aa115, 0.001); end
  def test_costs_ak115; assert_in_epsilon(1285.6031115986316, worksheet.costs_ak115, 0.001); end
  def test_costs_h115; assert_in_epsilon(309.6333606520033, worksheet.costs_h115, 0.001); end
  def test_costs_r115; assert_in_epsilon(243.81131249520553, worksheet.costs_r115, 0.001); end
  def test_costs_ab115; assert_in_epsilon(821.2142213632164, worksheet.costs_ab115, 0.001); end
  def test_costs_al115; assert_in_epsilon(1374.6588945104254, worksheet.costs_al115, 0.001); end
  def test_costs_i115; assert_in_epsilon(305.1789162547162, worksheet.costs_i115, 0.001); end
  def test_costs_s115; assert_in_epsilon(240.3037965975239, worksheet.costs_s115, 0.001); end
  def test_costs_ac115; assert_in_epsilon(911.6448805129697, worksheet.costs_ac115, 0.001); end
  def test_costs_am115; assert_in_epsilon(1457.12759336521, worksheet.costs_am115, 0.001); end
  def test_costs_j115; assert_in_epsilon(300.7885543414573, worksheet.costs_j115, 0.001); end
  def test_costs_t115; assert_in_epsilon(236.8467404904345, worksheet.costs_t115, 0.001); end
  def test_costs_ad115; assert_in_epsilon(998.6594584326624, worksheet.costs_ad115, 0.001); end
  def test_costs_an115; assert_in_epsilon(1536.2947532645542, worksheet.costs_an115, 0.001); end
  def test_costs_k115; assert_in_epsilon(296.4613530094271, worksheet.costs_k115, 0.001); end
  def test_costs_u115; assert_in_epsilon(233.4394182497958, worksheet.costs_u115, 0.001); end
  def test_costs_ae115; assert_in_epsilon(995.0402003776278, worksheet.costs_ae115, 0.001); end
  def test_costs_ao115; assert_in_epsilon(1524.9409716368507, worksheet.costs_ao115, 0.001); end
  def test_costs_l115; assert_in_epsilon(292.19640361849525, worksheet.costs_l115, 0.001); end
  def test_costs_v115; assert_in_epsilon(230.08111439474897, worksheet.costs_v115, 0.001); end
  def test_costs_af115; assert_in_epsilon(988.9337688861189, worksheet.costs_af115, 0.001); end
  def test_costs_ap115; assert_in_epsilon(1511.2112868993631, worksheet.costs_ap115, 0.001); end
  def test_costs_m115; assert_in_epsilon(287.99281060040124, worksheet.costs_m115, 0.001); end
  def test_costs_w115; assert_in_epsilon(226.77112373747923, worksheet.costs_w115, 0.001); end
  def test_costs_ag115; assert_in_epsilon(980.6045512528293, worksheet.costs_ag115, 0.001); end
  def test_costs_aq115; assert_in_epsilon(1495.36848559071, worksheet.costs_aq115, 0.001); end
  def test_costs_n115; assert_in_epsilon(283.8496912706992, worksheet.costs_n115, 0.001); end
  def test_costs_x115; assert_in_epsilon(223.50875123513697, worksheet.costs_x115, 0.001); end
  def test_costs_ah115; assert_in_epsilon(970.2974273877611, worksheet.costs_ah115, 0.001); end
  def test_costs_ar115; assert_in_epsilon(1477.6558698935974, worksheet.costs_ar115, 0.001); end
  def test_costs_b116; assert_equal("XII.d", worksheet.costs_b116); end
  def test_costs_c116; assert_equal("Domestic aviation [UNUSED - see XII.a]", worksheet.costs_c116); end
  def test_costs_d116; assert_equal("Transport", worksheet.costs_d116); end
  def test_costs_e116; assert_equal("MEUR", worksheet.costs_e116); end
  def test_costs_f116; assert_in_delta(0, (worksheet.costs_f116||0), 0.001); end
  def test_costs_g116; assert_in_delta(0, (worksheet.costs_g116||0), 0.001); end
  def test_costs_h116; assert_in_delta(0, (worksheet.costs_h116||0), 0.001); end
  def test_costs_i116; assert_in_delta(0, (worksheet.costs_i116||0), 0.001); end
  def test_costs_j116; assert_in_delta(0, (worksheet.costs_j116||0), 0.001); end
  def test_costs_k116; assert_in_delta(0, (worksheet.costs_k116||0), 0.001); end
  def test_costs_l116; assert_in_delta(0, (worksheet.costs_l116||0), 0.001); end
  def test_costs_m116; assert_in_delta(0, (worksheet.costs_m116||0), 0.001); end
  def test_costs_n116; assert_in_delta(0, (worksheet.costs_n116||0), 0.001); end
  def test_costs_p116; assert_in_delta(0, (worksheet.costs_p116||0), 0.001); end
  def test_costs_q116; assert_in_delta(0, (worksheet.costs_q116||0), 0.001); end
  def test_costs_r116; assert_in_delta(0, (worksheet.costs_r116||0), 0.001); end
  def test_costs_s116; assert_in_delta(0, (worksheet.costs_s116||0), 0.001); end
  def test_costs_t116; assert_in_delta(0, (worksheet.costs_t116||0), 0.001); end
  def test_costs_u116; assert_in_delta(0, (worksheet.costs_u116||0), 0.001); end
  def test_costs_v116; assert_in_delta(0, (worksheet.costs_v116||0), 0.001); end
  def test_costs_w116; assert_in_delta(0, (worksheet.costs_w116||0), 0.001); end
  def test_costs_x116; assert_in_delta(0, (worksheet.costs_x116||0), 0.001); end
  def test_costs_z116; assert_in_delta(0, (worksheet.costs_z116||0), 0.001); end
  def test_costs_aa116; assert_in_delta(0, (worksheet.costs_aa116||0), 0.001); end
  def test_costs_ab116; assert_in_delta(0, (worksheet.costs_ab116||0), 0.001); end
  def test_costs_ac116; assert_in_delta(0, (worksheet.costs_ac116||0), 0.001); end
  def test_costs_ad116; assert_in_delta(0, (worksheet.costs_ad116||0), 0.001); end
  def test_costs_ae116; assert_in_delta(0, (worksheet.costs_ae116||0), 0.001); end
  def test_costs_af116; assert_in_delta(0, (worksheet.costs_af116||0), 0.001); end
  def test_costs_ag116; assert_in_delta(0, (worksheet.costs_ag116||0), 0.001); end
  def test_costs_ah116; assert_in_delta(0, (worksheet.costs_ah116||0), 0.001); end
  def test_costs_aj116; assert_in_delta(0, (worksheet.costs_aj116||0), 0.001); end
  def test_costs_ak116; assert_in_delta(0, (worksheet.costs_ak116||0), 0.001); end
  def test_costs_al116; assert_in_delta(0, (worksheet.costs_al116||0), 0.001); end
  def test_costs_am116; assert_in_delta(0, (worksheet.costs_am116||0), 0.001); end
  def test_costs_an116; assert_in_delta(0, (worksheet.costs_an116||0), 0.001); end
  def test_costs_ao116; assert_in_delta(0, (worksheet.costs_ao116||0), 0.001); end
  def test_costs_ap116; assert_in_delta(0, (worksheet.costs_ap116||0), 0.001); end
  def test_costs_aq116; assert_in_delta(0, (worksheet.costs_aq116||0), 0.001); end
  def test_costs_ar116; assert_in_delta(0, (worksheet.costs_ar116||0), 0.001); end
  def test_costs_b117; assert_equal("XII.e", worksheet.costs_b117); end
  def test_costs_c117; assert_equal("International shipping [UNUSED]", worksheet.costs_c117); end
  def test_costs_d117; assert_equal("Transport", worksheet.costs_d117); end
  def test_costs_e117; assert_equal("MEUR", worksheet.costs_e117); end
  def test_costs_f117; assert_in_delta(0, (worksheet.costs_f117||0), 0.001); end
  def test_costs_g117; assert_in_delta(0, (worksheet.costs_g117||0), 0.001); end
  def test_costs_h117; assert_in_delta(0, (worksheet.costs_h117||0), 0.001); end
  def test_costs_i117; assert_in_delta(0, (worksheet.costs_i117||0), 0.001); end
  def test_costs_j117; assert_in_delta(0, (worksheet.costs_j117||0), 0.001); end
  def test_costs_k117; assert_in_delta(0, (worksheet.costs_k117||0), 0.001); end
  def test_costs_l117; assert_in_delta(0, (worksheet.costs_l117||0), 0.001); end
  def test_costs_m117; assert_in_delta(0, (worksheet.costs_m117||0), 0.001); end
  def test_costs_n117; assert_in_delta(0, (worksheet.costs_n117||0), 0.001); end
  def test_costs_p117; assert_in_delta(0, (worksheet.costs_p117||0), 0.001); end
  def test_costs_q117; assert_in_delta(0, (worksheet.costs_q117||0), 0.001); end
  def test_costs_r117; assert_in_delta(0, (worksheet.costs_r117||0), 0.001); end
  def test_costs_s117; assert_in_delta(0, (worksheet.costs_s117||0), 0.001); end
  def test_costs_t117; assert_in_delta(0, (worksheet.costs_t117||0), 0.001); end
  def test_costs_u117; assert_in_delta(0, (worksheet.costs_u117||0), 0.001); end
  def test_costs_v117; assert_in_delta(0, (worksheet.costs_v117||0), 0.001); end
  def test_costs_w117; assert_in_delta(0, (worksheet.costs_w117||0), 0.001); end
  def test_costs_x117; assert_in_delta(0, (worksheet.costs_x117||0), 0.001); end
  def test_costs_z117; assert_in_delta(0, (worksheet.costs_z117||0), 0.001); end
  def test_costs_aa117; assert_in_delta(0, (worksheet.costs_aa117||0), 0.001); end
  def test_costs_ab117; assert_in_delta(0, (worksheet.costs_ab117||0), 0.001); end
  def test_costs_ac117; assert_in_delta(0, (worksheet.costs_ac117||0), 0.001); end
  def test_costs_ad117; assert_in_delta(0, (worksheet.costs_ad117||0), 0.001); end
  def test_costs_ae117; assert_in_delta(0, (worksheet.costs_ae117||0), 0.001); end
  def test_costs_af117; assert_in_delta(0, (worksheet.costs_af117||0), 0.001); end
  def test_costs_ag117; assert_in_delta(0, (worksheet.costs_ag117||0), 0.001); end
  def test_costs_ah117; assert_in_delta(0, (worksheet.costs_ah117||0), 0.001); end
  def test_costs_aj117; assert_in_delta(0, (worksheet.costs_aj117||0), 0.001); end
  def test_costs_ak117; assert_in_delta(0, (worksheet.costs_ak117||0), 0.001); end
  def test_costs_al117; assert_in_delta(0, (worksheet.costs_al117||0), 0.001); end
  def test_costs_am117; assert_in_delta(0, (worksheet.costs_am117||0), 0.001); end
  def test_costs_an117; assert_in_delta(0, (worksheet.costs_an117||0), 0.001); end
  def test_costs_ao117; assert_in_delta(0, (worksheet.costs_ao117||0), 0.001); end
  def test_costs_ap117; assert_in_delta(0, (worksheet.costs_ap117||0), 0.001); end
  def test_costs_aq117; assert_in_delta(0, (worksheet.costs_aq117||0), 0.001); end
  def test_costs_ar117; assert_in_delta(0, (worksheet.costs_ar117||0), 0.001); end
  def test_costs_b118; assert_equal("XII.f", worksheet.costs_b118); end
  def test_costs_c118; assert_equal("National navigation [UNUSED - see XII.a]", worksheet.costs_c118); end
  def test_costs_d118; assert_equal("Transport", worksheet.costs_d118); end
  def test_costs_e118; assert_equal("MEUR", worksheet.costs_e118); end
  def test_costs_f118; assert_in_delta(0, (worksheet.costs_f118||0), 0.001); end
  def test_costs_g118; assert_in_delta(0, (worksheet.costs_g118||0), 0.001); end
  def test_costs_h118; assert_in_delta(0, (worksheet.costs_h118||0), 0.001); end
  def test_costs_i118; assert_in_delta(0, (worksheet.costs_i118||0), 0.001); end
  def test_costs_j118; assert_in_delta(0, (worksheet.costs_j118||0), 0.001); end
  def test_costs_k118; assert_in_delta(0, (worksheet.costs_k118||0), 0.001); end
  def test_costs_l118; assert_in_delta(0, (worksheet.costs_l118||0), 0.001); end
  def test_costs_m118; assert_in_delta(0, (worksheet.costs_m118||0), 0.001); end
  def test_costs_n118; assert_in_delta(0, (worksheet.costs_n118||0), 0.001); end
  def test_costs_p118; assert_in_delta(0, (worksheet.costs_p118||0), 0.001); end
  def test_costs_q118; assert_in_delta(0, (worksheet.costs_q118||0), 0.001); end
  def test_costs_r118; assert_in_delta(0, (worksheet.costs_r118||0), 0.001); end
  def test_costs_s118; assert_in_delta(0, (worksheet.costs_s118||0), 0.001); end
  def test_costs_t118; assert_in_delta(0, (worksheet.costs_t118||0), 0.001); end
  def test_costs_u118; assert_in_delta(0, (worksheet.costs_u118||0), 0.001); end
  def test_costs_v118; assert_in_delta(0, (worksheet.costs_v118||0), 0.001); end
  def test_costs_w118; assert_in_delta(0, (worksheet.costs_w118||0), 0.001); end
  def test_costs_x118; assert_in_delta(0, (worksheet.costs_x118||0), 0.001); end
  def test_costs_z118; assert_in_delta(0, (worksheet.costs_z118||0), 0.001); end
  def test_costs_aa118; assert_in_delta(0, (worksheet.costs_aa118||0), 0.001); end
  def test_costs_ab118; assert_in_delta(0, (worksheet.costs_ab118||0), 0.001); end
  def test_costs_ac118; assert_in_delta(0, (worksheet.costs_ac118||0), 0.001); end
  def test_costs_ad118; assert_in_delta(0, (worksheet.costs_ad118||0), 0.001); end
  def test_costs_ae118; assert_in_delta(0, (worksheet.costs_ae118||0), 0.001); end
  def test_costs_af118; assert_in_delta(0, (worksheet.costs_af118||0), 0.001); end
  def test_costs_ag118; assert_in_delta(0, (worksheet.costs_ag118||0), 0.001); end
  def test_costs_ah118; assert_in_delta(0, (worksheet.costs_ah118||0), 0.001); end
  def test_costs_aj118; assert_in_delta(0, (worksheet.costs_aj118||0), 0.001); end
  def test_costs_ak118; assert_in_delta(0, (worksheet.costs_ak118||0), 0.001); end
  def test_costs_al118; assert_in_delta(0, (worksheet.costs_al118||0), 0.001); end
  def test_costs_am118; assert_in_delta(0, (worksheet.costs_am118||0), 0.001); end
  def test_costs_an118; assert_in_delta(0, (worksheet.costs_an118||0), 0.001); end
  def test_costs_ao118; assert_in_delta(0, (worksheet.costs_ao118||0), 0.001); end
  def test_costs_ap118; assert_in_delta(0, (worksheet.costs_ap118||0), 0.001); end
  def test_costs_aq118; assert_in_delta(0, (worksheet.costs_aq118||0), 0.001); end
  def test_costs_ar118; assert_in_delta(0, (worksheet.costs_ar118||0), 0.001); end
  def test_costs_b119; assert_equal("XIII.a", worksheet.costs_b119); end
  def test_costs_c119; assert_equal("Food consumption [UNUSED]", worksheet.costs_c119); end
  def test_costs_e119; assert_equal("MEUR", worksheet.costs_e119); end
  def test_costs_f119; assert_in_delta(0, (worksheet.costs_f119||0), 0.001); end
  def test_costs_g119; assert_in_delta(0, (worksheet.costs_g119||0), 0.001); end
  def test_costs_h119; assert_in_delta(0, (worksheet.costs_h119||0), 0.001); end
  def test_costs_i119; assert_in_delta(0, (worksheet.costs_i119||0), 0.001); end
  def test_costs_j119; assert_in_delta(0, (worksheet.costs_j119||0), 0.001); end
  def test_costs_k119; assert_in_delta(0, (worksheet.costs_k119||0), 0.001); end
  def test_costs_l119; assert_in_delta(0, (worksheet.costs_l119||0), 0.001); end
  def test_costs_m119; assert_in_delta(0, (worksheet.costs_m119||0), 0.001); end
  def test_costs_n119; assert_in_delta(0, (worksheet.costs_n119||0), 0.001); end
  def test_costs_p119; assert_in_delta(0, (worksheet.costs_p119||0), 0.001); end
  def test_costs_q119; assert_in_delta(0, (worksheet.costs_q119||0), 0.001); end
  def test_costs_r119; assert_in_delta(0, (worksheet.costs_r119||0), 0.001); end
  def test_costs_s119; assert_in_delta(0, (worksheet.costs_s119||0), 0.001); end
  def test_costs_t119; assert_in_delta(0, (worksheet.costs_t119||0), 0.001); end
  def test_costs_u119; assert_in_delta(0, (worksheet.costs_u119||0), 0.001); end
  def test_costs_v119; assert_in_delta(0, (worksheet.costs_v119||0), 0.001); end
  def test_costs_w119; assert_in_delta(0, (worksheet.costs_w119||0), 0.001); end
  def test_costs_x119; assert_in_delta(0, (worksheet.costs_x119||0), 0.001); end
  def test_costs_z119; assert_in_delta(0, (worksheet.costs_z119||0), 0.001); end
  def test_costs_aa119; assert_in_delta(0, (worksheet.costs_aa119||0), 0.001); end
  def test_costs_ab119; assert_in_delta(0, (worksheet.costs_ab119||0), 0.001); end
  def test_costs_ac119; assert_in_delta(0, (worksheet.costs_ac119||0), 0.001); end
  def test_costs_ad119; assert_in_delta(0, (worksheet.costs_ad119||0), 0.001); end
  def test_costs_ae119; assert_in_delta(0, (worksheet.costs_ae119||0), 0.001); end
  def test_costs_af119; assert_in_delta(0, (worksheet.costs_af119||0), 0.001); end
  def test_costs_ag119; assert_in_delta(0, (worksheet.costs_ag119||0), 0.001); end
  def test_costs_ah119; assert_in_delta(0, (worksheet.costs_ah119||0), 0.001); end
  def test_costs_aj119; assert_in_delta(0, (worksheet.costs_aj119||0), 0.001); end
  def test_costs_ak119; assert_in_delta(0, (worksheet.costs_ak119||0), 0.001); end
  def test_costs_al119; assert_in_delta(0, (worksheet.costs_al119||0), 0.001); end
  def test_costs_am119; assert_in_delta(0, (worksheet.costs_am119||0), 0.001); end
  def test_costs_an119; assert_in_delta(0, (worksheet.costs_an119||0), 0.001); end
  def test_costs_ao119; assert_in_delta(0, (worksheet.costs_ao119||0), 0.001); end
  def test_costs_ap119; assert_in_delta(0, (worksheet.costs_ap119||0), 0.001); end
  def test_costs_aq119; assert_in_delta(0, (worksheet.costs_aq119||0), 0.001); end
  def test_costs_ar119; assert_in_delta(0, (worksheet.costs_ar119||0), 0.001); end
  def test_costs_b120; assert_equal("XIV.a", worksheet.costs_b120); end
  def test_costs_c120; assert_equal("Geosequestration [UNUSED]", worksheet.costs_c120); end
  def test_costs_e120; assert_equal("MEUR", worksheet.costs_e120); end
  def test_costs_p120; assert_in_delta(0, (worksheet.costs_p120||0), 0.001); end
  def test_costs_q120; assert_in_delta(0, (worksheet.costs_q120||0), 0.001); end
  def test_costs_r120; assert_in_delta(0, (worksheet.costs_r120||0), 0.001); end
  def test_costs_s120; assert_in_delta(0, (worksheet.costs_s120||0), 0.001); end
  def test_costs_t120; assert_in_delta(0, (worksheet.costs_t120||0), 0.001); end
  def test_costs_u120; assert_in_delta(0, (worksheet.costs_u120||0), 0.001); end
  def test_costs_v120; assert_in_delta(0, (worksheet.costs_v120||0), 0.001); end
  def test_costs_w120; assert_in_delta(0, (worksheet.costs_w120||0), 0.001); end
  def test_costs_x120; assert_in_delta(0, (worksheet.costs_x120||0), 0.001); end
  def test_costs_z120; assert_in_delta(0, (worksheet.costs_z120||0), 0.001); end
  def test_costs_aa120; assert_in_delta(0, (worksheet.costs_aa120||0), 0.001); end
  def test_costs_ab120; assert_in_delta(0, (worksheet.costs_ab120||0), 0.001); end
  def test_costs_ac120; assert_in_delta(0, (worksheet.costs_ac120||0), 0.001); end
  def test_costs_ad120; assert_in_delta(0, (worksheet.costs_ad120||0), 0.001); end
  def test_costs_ae120; assert_in_delta(0, (worksheet.costs_ae120||0), 0.001); end
  def test_costs_af120; assert_in_delta(0, (worksheet.costs_af120||0), 0.001); end
  def test_costs_ag120; assert_in_delta(0, (worksheet.costs_ag120||0), 0.001); end
  def test_costs_ah120; assert_in_delta(0, (worksheet.costs_ah120||0), 0.001); end
  def test_costs_f120; assert_in_delta(0, (worksheet.costs_f120||0), 0.001); end
  def test_costs_aj120; assert_in_delta(0, (worksheet.costs_aj120||0), 0.001); end
  def test_costs_g120; assert_in_delta(0, (worksheet.costs_g120||0), 0.001); end
  def test_costs_ak120; assert_in_delta(0, (worksheet.costs_ak120||0), 0.001); end
  def test_costs_h120; assert_in_delta(0, (worksheet.costs_h120||0), 0.001); end
  def test_costs_al120; assert_in_delta(0, (worksheet.costs_al120||0), 0.001); end
  def test_costs_i120; assert_in_delta(0, (worksheet.costs_i120||0), 0.001); end
  def test_costs_am120; assert_in_delta(0, (worksheet.costs_am120||0), 0.001); end
  def test_costs_j120; assert_in_delta(0, (worksheet.costs_j120||0), 0.001); end
  def test_costs_an120; assert_in_delta(0, (worksheet.costs_an120||0), 0.001); end
  def test_costs_k120; assert_in_delta(0, (worksheet.costs_k120||0), 0.001); end
  def test_costs_ao120; assert_in_delta(0, (worksheet.costs_ao120||0), 0.001); end
  def test_costs_l120; assert_in_delta(0, (worksheet.costs_l120||0), 0.001); end
  def test_costs_ap120; assert_in_delta(0, (worksheet.costs_ap120||0), 0.001); end
  def test_costs_m120; assert_in_delta(0, (worksheet.costs_m120||0), 0.001); end
  def test_costs_aq120; assert_in_delta(0, (worksheet.costs_aq120||0), 0.001); end
  def test_costs_n120; assert_in_delta(0, (worksheet.costs_n120||0), 0.001); end
  def test_costs_ar120; assert_in_delta(0, (worksheet.costs_ar120||0), 0.001); end
  def test_costs_b121; assert_equal("XV.a", worksheet.costs_b121); end
  def test_costs_c121; assert_equal("Petroleum refineries [UNUSED]", worksheet.costs_c121); end
  def test_costs_e121; assert_equal("MEUR", worksheet.costs_e121); end
  def test_costs_f121; assert_in_delta(0, (worksheet.costs_f121||0), 0.001); end
  def test_costs_g121; assert_in_delta(0, (worksheet.costs_g121||0), 0.001); end
  def test_costs_h121; assert_in_delta(0, (worksheet.costs_h121||0), 0.001); end
  def test_costs_i121; assert_in_delta(0, (worksheet.costs_i121||0), 0.001); end
  def test_costs_j121; assert_in_delta(0, (worksheet.costs_j121||0), 0.001); end
  def test_costs_k121; assert_in_delta(0, (worksheet.costs_k121||0), 0.001); end
  def test_costs_l121; assert_in_delta(0, (worksheet.costs_l121||0), 0.001); end
  def test_costs_m121; assert_in_delta(0, (worksheet.costs_m121||0), 0.001); end
  def test_costs_n121; assert_in_delta(0, (worksheet.costs_n121||0), 0.001); end
  def test_costs_p121; assert_in_delta(0, (worksheet.costs_p121||0), 0.001); end
  def test_costs_q121; assert_in_delta(0, (worksheet.costs_q121||0), 0.001); end
  def test_costs_r121; assert_in_delta(0, (worksheet.costs_r121||0), 0.001); end
  def test_costs_s121; assert_in_delta(0, (worksheet.costs_s121||0), 0.001); end
  def test_costs_t121; assert_in_delta(0, (worksheet.costs_t121||0), 0.001); end
  def test_costs_u121; assert_in_delta(0, (worksheet.costs_u121||0), 0.001); end
  def test_costs_v121; assert_in_delta(0, (worksheet.costs_v121||0), 0.001); end
  def test_costs_w121; assert_in_delta(0, (worksheet.costs_w121||0), 0.001); end
  def test_costs_x121; assert_in_delta(0, (worksheet.costs_x121||0), 0.001); end
  def test_costs_z121; assert_in_delta(0, (worksheet.costs_z121||0), 0.001); end
  def test_costs_aa121; assert_in_delta(0, (worksheet.costs_aa121||0), 0.001); end
  def test_costs_ab121; assert_in_delta(0, (worksheet.costs_ab121||0), 0.001); end
  def test_costs_ac121; assert_in_delta(0, (worksheet.costs_ac121||0), 0.001); end
  def test_costs_ad121; assert_in_delta(0, (worksheet.costs_ad121||0), 0.001); end
  def test_costs_ae121; assert_in_delta(0, (worksheet.costs_ae121||0), 0.001); end
  def test_costs_af121; assert_in_delta(0, (worksheet.costs_af121||0), 0.001); end
  def test_costs_ag121; assert_in_delta(0, (worksheet.costs_ag121||0), 0.001); end
  def test_costs_ah121; assert_in_delta(0, (worksheet.costs_ah121||0), 0.001); end
  def test_costs_aj121; assert_in_delta(0, (worksheet.costs_aj121||0), 0.001); end
  def test_costs_ak121; assert_in_delta(0, (worksheet.costs_ak121||0), 0.001); end
  def test_costs_al121; assert_in_delta(0, (worksheet.costs_al121||0), 0.001); end
  def test_costs_am121; assert_in_delta(0, (worksheet.costs_am121||0), 0.001); end
  def test_costs_an121; assert_in_delta(0, (worksheet.costs_an121||0), 0.001); end
  def test_costs_ao121; assert_in_delta(0, (worksheet.costs_ao121||0), 0.001); end
  def test_costs_ap121; assert_in_delta(0, (worksheet.costs_ap121||0), 0.001); end
  def test_costs_aq121; assert_in_delta(0, (worksheet.costs_aq121||0), 0.001); end
  def test_costs_ar121; assert_in_delta(0, (worksheet.costs_ar121||0), 0.001); end
  def test_costs_b122; assert_equal("XV.b", worksheet.costs_b122); end
  def test_costs_c122; assert_equal("Indigenous fossil-fuel production [UNUSED]", worksheet.costs_c122); end
  def test_costs_e122; assert_equal("MEUR", worksheet.costs_e122); end
  def test_costs_f122; assert_in_delta(0, (worksheet.costs_f122||0), 0.001); end
  def test_costs_g122; assert_in_delta(0, (worksheet.costs_g122||0), 0.001); end
  def test_costs_h122; assert_in_delta(0, (worksheet.costs_h122||0), 0.001); end
  def test_costs_i122; assert_in_delta(0, (worksheet.costs_i122||0), 0.001); end
  def test_costs_j122; assert_in_delta(0, (worksheet.costs_j122||0), 0.001); end
  def test_costs_k122; assert_in_delta(0, (worksheet.costs_k122||0), 0.001); end
  def test_costs_l122; assert_in_delta(0, (worksheet.costs_l122||0), 0.001); end
  def test_costs_m122; assert_in_delta(0, (worksheet.costs_m122||0), 0.001); end
  def test_costs_n122; assert_in_delta(0, (worksheet.costs_n122||0), 0.001); end
  def test_costs_p122; assert_in_delta(0, (worksheet.costs_p122||0), 0.001); end
  def test_costs_q122; assert_in_delta(0, (worksheet.costs_q122||0), 0.001); end
  def test_costs_r122; assert_in_delta(0, (worksheet.costs_r122||0), 0.001); end
  def test_costs_s122; assert_in_delta(0, (worksheet.costs_s122||0), 0.001); end
  def test_costs_t122; assert_in_delta(0, (worksheet.costs_t122||0), 0.001); end
  def test_costs_u122; assert_in_delta(0, (worksheet.costs_u122||0), 0.001); end
  def test_costs_v122; assert_in_delta(0, (worksheet.costs_v122||0), 0.001); end
  def test_costs_w122; assert_in_delta(0, (worksheet.costs_w122||0), 0.001); end
  def test_costs_x122; assert_in_delta(0, (worksheet.costs_x122||0), 0.001); end
  def test_costs_z122; assert_in_delta(0, (worksheet.costs_z122||0), 0.001); end
  def test_costs_aa122; assert_in_delta(0, (worksheet.costs_aa122||0), 0.001); end
  def test_costs_ab122; assert_in_delta(0, (worksheet.costs_ab122||0), 0.001); end
  def test_costs_ac122; assert_in_delta(0, (worksheet.costs_ac122||0), 0.001); end
  def test_costs_ad122; assert_in_delta(0, (worksheet.costs_ad122||0), 0.001); end
  def test_costs_ae122; assert_in_delta(0, (worksheet.costs_ae122||0), 0.001); end
  def test_costs_af122; assert_in_delta(0, (worksheet.costs_af122||0), 0.001); end
  def test_costs_ag122; assert_in_delta(0, (worksheet.costs_ag122||0), 0.001); end
  def test_costs_ah122; assert_in_delta(0, (worksheet.costs_ah122||0), 0.001); end
  def test_costs_aj122; assert_in_delta(0, (worksheet.costs_aj122||0), 0.001); end
  def test_costs_ak122; assert_in_delta(0, (worksheet.costs_ak122||0), 0.001); end
  def test_costs_al122; assert_in_delta(0, (worksheet.costs_al122||0), 0.001); end
  def test_costs_am122; assert_in_delta(0, (worksheet.costs_am122||0), 0.001); end
  def test_costs_an122; assert_in_delta(0, (worksheet.costs_an122||0), 0.001); end
  def test_costs_ao122; assert_in_delta(0, (worksheet.costs_ao122||0), 0.001); end
  def test_costs_ap122; assert_in_delta(0, (worksheet.costs_ap122||0), 0.001); end
  def test_costs_aq122; assert_in_delta(0, (worksheet.costs_aq122||0), 0.001); end
  def test_costs_ar122; assert_in_delta(0, (worksheet.costs_ar122||0), 0.001); end
  def test_costs_b123; assert_equal("XVI.a", worksheet.costs_b123); end
  def test_costs_c123; assert_equal("Fossil fuel transfers", worksheet.costs_c123); end
  def test_costs_d123; assert_equal("Fossil fuels", worksheet.costs_d123); end
  def test_costs_e123; assert_equal("MEUR", worksheet.costs_e123); end
  def test_costs_n123; assert_in_delta(0, (worksheet.costs_n123||0), 0.001); end
  def test_costs_x123; assert_in_delta(0, (worksheet.costs_x123||0), 0.001); end
  def test_costs_z123; assert_in_delta(0, (worksheet.costs_z123||0), 0.001); end
  def test_costs_aa123; assert_in_delta(0, (worksheet.costs_aa123||0), 0.001); end
  def test_costs_ab123; assert_in_delta(0, (worksheet.costs_ab123||0), 0.001); end
  def test_costs_ac123; assert_in_delta(0, (worksheet.costs_ac123||0), 0.001); end
  def test_costs_ad123; assert_in_delta(0, (worksheet.costs_ad123||0), 0.001); end
  def test_costs_ae123; assert_in_delta(0, (worksheet.costs_ae123||0), 0.001); end
  def test_costs_af123; assert_in_delta(0, (worksheet.costs_af123||0), 0.001); end
  def test_costs_ag123; assert_in_delta(0, (worksheet.costs_ag123||0), 0.001); end
  def test_costs_ah123; assert_in_delta(0, (worksheet.costs_ah123||0), 0.001); end
  def test_costs_f123; assert_in_epsilon(392.02176529950464, worksheet.costs_f123, 0.001); end
  def test_costs_p123; assert_in_delta(0.23394413186588495, worksheet.costs_p123, 0.001); end
  def test_costs_aj123; assert_in_epsilon(392.2557094313705, worksheet.costs_aj123, 0.001); end
  def test_costs_g123; assert_in_epsilon(223.8845341956519, worksheet.costs_g123, 0.001); end
  def test_costs_q123; assert_in_delta(0.1882200088220376, worksheet.costs_q123, 0.001); end
  def test_costs_ak123; assert_in_epsilon(224.07275420447394, worksheet.costs_ak123, 0.001); end
  def test_costs_h123; assert_in_epsilon(180.12654844268997, worksheet.costs_h123, 0.001); end
  def test_costs_r123; assert_in_delta(0.17111893178525783, worksheet.costs_r123, 0.001); end
  def test_costs_al123; assert_in_epsilon(180.29766737447522, worksheet.costs_al123, 0.001); end
  def test_costs_i123; assert_in_epsilon(163.76081771849175, worksheet.costs_i123, 0.001); end
  def test_costs_s123; assert_in_delta(0.16204645762197434, worksheet.costs_s123, 0.001); end
  def test_costs_am123; assert_in_epsilon(163.92286417611373, worksheet.costs_am123, 0.001); end
  def test_costs_j123; assert_in_epsilon(155.07845994422942, worksheet.costs_j123, 0.001); end
  def test_costs_t123; assert_in_delta(0.15752472699885062, worksheet.costs_t123, 0.001); end
  def test_costs_an123; assert_in_epsilon(155.23598467122827, worksheet.costs_an123, 0.001); end
  def test_costs_k123; assert_in_epsilon(150.75116373790001, worksheet.costs_k123, 0.001); end
  def test_costs_u123; assert_in_delta(0.15686657431003123, worksheet.costs_u123, 0.001); end
  def test_costs_ao123; assert_in_epsilon(150.90803031221006, worksheet.costs_ao123, 0.001); end
  def test_costs_l123; assert_in_epsilon(165.0646941002431, worksheet.costs_l123, 0.001); end
  def test_costs_v123; assert_in_delta(0.15946904426571623, worksheet.costs_v123, 0.001); end
  def test_costs_ap123; assert_in_epsilon(165.2241631445088, worksheet.costs_ap123, 0.001); end
  def test_costs_m123; assert_in_epsilon(183.5316937584981, worksheet.costs_m123, 0.001); end
  def test_costs_w123; assert_in_delta(0.16485389595436264, worksheet.costs_w123, 0.001); end
  def test_costs_aq123; assert_in_epsilon(183.69654765445247, worksheet.costs_aq123, 0.001); end
  def test_costs_ar123; assert_in_delta(0, (worksheet.costs_ar123||0), 0.001); end
  def test_costs_b124; assert_equal("XVI.b", worksheet.costs_b124); end
  def test_costs_c124; assert_equal("Balancing imports", worksheet.costs_c124); end
  def test_costs_d124; assert_equal("Fossil fuels", worksheet.costs_d124); end
  def test_costs_e124; assert_equal("MEUR", worksheet.costs_e124); end
  def test_costs_aj124; assert_in_delta(0, (worksheet.costs_aj124||0), 0.001); end
  def test_costs_ak124; assert_in_delta(0, (worksheet.costs_ak124||0), 0.001); end
  def test_costs_al124; assert_in_delta(0, (worksheet.costs_al124||0), 0.001); end
  def test_costs_am124; assert_in_delta(0, (worksheet.costs_am124||0), 0.001); end
  def test_costs_an124; assert_in_delta(0, (worksheet.costs_an124||0), 0.001); end
  def test_costs_ao124; assert_in_delta(0, (worksheet.costs_ao124||0), 0.001); end
  def test_costs_ap124; assert_in_delta(0, (worksheet.costs_ap124||0), 0.001); end
  def test_costs_aq124; assert_in_delta(0, (worksheet.costs_aq124||0), 0.001); end
  def test_costs_ar124; assert_in_delta(0, (worksheet.costs_ar124||0), 0.001); end
  def test_costs_b125; assert_equal("XVI.b.Coal", worksheet.costs_b125); end
  def test_costs_c125; assert_equal("Balancing imports - Coal", worksheet.costs_c125); end
  def test_costs_d125; assert_equal("Fossil fuels", worksheet.costs_d125); end
  def test_costs_e125; assert_equal("MEUR", worksheet.costs_e125); end
  def test_costs_f125; assert_in_delta(0, (worksheet.costs_f125||0), 0.001); end
  def test_costs_g125; assert_in_delta(0, (worksheet.costs_g125||0), 0.001); end
  def test_costs_h125; assert_in_delta(0, (worksheet.costs_h125||0), 0.001); end
  def test_costs_i125; assert_in_delta(0, (worksheet.costs_i125||0), 0.001); end
  def test_costs_j125; assert_in_delta(0, (worksheet.costs_j125||0), 0.001); end
  def test_costs_k125; assert_in_delta(0, (worksheet.costs_k125||0), 0.001); end
  def test_costs_l125; assert_in_delta(0, (worksheet.costs_l125||0), 0.001); end
  def test_costs_m125; assert_in_delta(0, (worksheet.costs_m125||0), 0.001); end
  def test_costs_n125; assert_in_delta(0, (worksheet.costs_n125||0), 0.001); end
  def test_costs_p125; assert_in_delta(0, (worksheet.costs_p125||0), 0.001); end
  def test_costs_q125; assert_in_delta(0, (worksheet.costs_q125||0), 0.001); end
  def test_costs_r125; assert_in_delta(0, (worksheet.costs_r125||0), 0.001); end
  def test_costs_s125; assert_in_delta(0, (worksheet.costs_s125||0), 0.001); end
  def test_costs_t125; assert_in_delta(0, (worksheet.costs_t125||0), 0.001); end
  def test_costs_u125; assert_in_delta(0, (worksheet.costs_u125||0), 0.001); end
  def test_costs_v125; assert_in_delta(0, (worksheet.costs_v125||0), 0.001); end
  def test_costs_w125; assert_in_delta(0, (worksheet.costs_w125||0), 0.001); end
  def test_costs_x125; assert_in_delta(0, (worksheet.costs_x125||0), 0.001); end
  def test_costs_z125; assert_in_epsilon(496.45594417128507, worksheet.costs_z125, 0.001); end
  def test_costs_aj125; assert_in_epsilon(496.45594417128507, worksheet.costs_aj125, 0.001); end
  def test_costs_aa125; assert_in_epsilon(459.08087664995384, worksheet.costs_aa125, 0.001); end
  def test_costs_ak125; assert_in_epsilon(459.08087664995384, worksheet.costs_ak125, 0.001); end
  def test_costs_ab125; assert_in_epsilon(373.76222069358073, worksheet.costs_ab125, 0.001); end
  def test_costs_al125; assert_in_epsilon(373.76222069358073, worksheet.costs_al125, 0.001); end
  def test_costs_ac125; assert_in_epsilon(46.130123843956284, worksheet.costs_ac125, 0.001); end
  def test_costs_am125; assert_in_epsilon(46.130123843956284, worksheet.costs_am125, 0.001); end
  def test_costs_ad125; assert_in_epsilon(-1.1117071250868336, worksheet.costs_ad125, 0.001); end
  def test_costs_an125; assert_in_epsilon(-1.1117071250868336, worksheet.costs_an125, 0.001); end
  def test_costs_ae125; assert_in_delta(-0.8880924336785527, worksheet.costs_ae125, 0.001); end
  def test_costs_ao125; assert_in_delta(-0.8880924336785527, worksheet.costs_ao125, 0.001); end
  def test_costs_af125; assert_in_delta(-0.6297450426469244, worksheet.costs_af125, 0.001); end
  def test_costs_ap125; assert_in_delta(-0.6297450426469244, worksheet.costs_ap125, 0.001); end
  def test_costs_ag125; assert_in_delta(-0.3277677320788735, worksheet.costs_ag125, 0.001); end
  def test_costs_aq125; assert_in_delta(-0.3277677320788735, worksheet.costs_aq125, 0.001); end
  def test_costs_ah125; assert_in_delta(0, (worksheet.costs_ah125||0), 0.001); end
  def test_costs_ar125; assert_in_delta(0, (worksheet.costs_ar125||0), 0.001); end
  def test_costs_b126; assert_equal("XVI.b.Oil", worksheet.costs_b126); end
  def test_costs_c126; assert_equal("Balancing imports - Oil", worksheet.costs_c126); end
  def test_costs_d126; assert_equal("Fossil fuels", worksheet.costs_d126); end
  def test_costs_e126; assert_equal("MEUR", worksheet.costs_e126); end
  def test_costs_f126; assert_in_delta(0, (worksheet.costs_f126||0), 0.001); end
  def test_costs_g126; assert_in_delta(0, (worksheet.costs_g126||0), 0.001); end
  def test_costs_h126; assert_in_delta(0, (worksheet.costs_h126||0), 0.001); end
  def test_costs_i126; assert_in_delta(0, (worksheet.costs_i126||0), 0.001); end
  def test_costs_j126; assert_in_delta(0, (worksheet.costs_j126||0), 0.001); end
  def test_costs_k126; assert_in_delta(0, (worksheet.costs_k126||0), 0.001); end
  def test_costs_l126; assert_in_delta(0, (worksheet.costs_l126||0), 0.001); end
  def test_costs_m126; assert_in_delta(0, (worksheet.costs_m126||0), 0.001); end
  def test_costs_n126; assert_in_delta(0, (worksheet.costs_n126||0), 0.001); end
  def test_costs_p126; assert_in_delta(0, (worksheet.costs_p126||0), 0.001); end
  def test_costs_q126; assert_in_delta(0, (worksheet.costs_q126||0), 0.001); end
  def test_costs_r126; assert_in_delta(0, (worksheet.costs_r126||0), 0.001); end
  def test_costs_s126; assert_in_delta(0, (worksheet.costs_s126||0), 0.001); end
  def test_costs_t126; assert_in_delta(0, (worksheet.costs_t126||0), 0.001); end
  def test_costs_u126; assert_in_delta(0, (worksheet.costs_u126||0), 0.001); end
  def test_costs_v126; assert_in_delta(0, (worksheet.costs_v126||0), 0.001); end
  def test_costs_w126; assert_in_delta(0, (worksheet.costs_w126||0), 0.001); end
  def test_costs_x126; assert_in_delta(0, (worksheet.costs_x126||0), 0.001); end
  def test_costs_z126; assert_in_epsilon(6921.990100450474, worksheet.costs_z126, 0.001); end
  def test_costs_aj126; assert_in_epsilon(6921.990100450474, worksheet.costs_aj126, 0.001); end
  def test_costs_aa126; assert_in_epsilon(7263.13719590269, worksheet.costs_aa126, 0.001); end
  def test_costs_ak126; assert_in_epsilon(7263.13719590269, worksheet.costs_ak126, 0.001); end
  def test_costs_ab126; assert_in_epsilon(6998.343689582244, worksheet.costs_ab126, 0.001); end
  def test_costs_al126; assert_in_epsilon(6998.343689582244, worksheet.costs_al126, 0.001); end
  def test_costs_ac126; assert_in_epsilon(6375.743653300277, worksheet.costs_ac126, 0.001); end
  def test_costs_am126; assert_in_epsilon(6375.743653300277, worksheet.costs_am126, 0.001); end
  def test_costs_ad126; assert_in_epsilon(5568.787561428871, worksheet.costs_ad126, 0.001); end
  def test_costs_an126; assert_in_epsilon(5568.787561428871, worksheet.costs_an126, 0.001); end
  def test_costs_ae126; assert_in_epsilon(4305.8098397889735, worksheet.costs_ae126, 0.001); end
  def test_costs_ao126; assert_in_epsilon(4305.8098397889735, worksheet.costs_ao126, 0.001); end
  def test_costs_af126; assert_in_epsilon(3285.3162542696423, worksheet.costs_af126, 0.001); end
  def test_costs_ap126; assert_in_epsilon(3285.3162542696423, worksheet.costs_ap126, 0.001); end
  def test_costs_ag126; assert_in_epsilon(2329.7638242303497, worksheet.costs_ag126, 0.001); end
  def test_costs_aq126; assert_in_epsilon(2329.7638242303497, worksheet.costs_aq126, 0.001); end
  def test_costs_ah126; assert_in_epsilon(1436.298092509173, worksheet.costs_ah126, 0.001); end
  def test_costs_ar126; assert_in_epsilon(1436.298092509173, worksheet.costs_ar126, 0.001); end
  def test_costs_b127; assert_equal("XVI.b.Gas", worksheet.costs_b127); end
  def test_costs_c127; assert_equal("Balancing imports - Gas", worksheet.costs_c127); end
  def test_costs_d127; assert_equal("Fossil fuels", worksheet.costs_d127); end
  def test_costs_e127; assert_equal("MEUR", worksheet.costs_e127); end
  def test_costs_f127; assert_in_delta(0, (worksheet.costs_f127||0), 0.001); end
  def test_costs_g127; assert_in_delta(0, (worksheet.costs_g127||0), 0.001); end
  def test_costs_h127; assert_in_delta(0, (worksheet.costs_h127||0), 0.001); end
  def test_costs_i127; assert_in_delta(0, (worksheet.costs_i127||0), 0.001); end
  def test_costs_j127; assert_in_delta(0, (worksheet.costs_j127||0), 0.001); end
  def test_costs_k127; assert_in_delta(0, (worksheet.costs_k127||0), 0.001); end
  def test_costs_l127; assert_in_delta(0, (worksheet.costs_l127||0), 0.001); end
  def test_costs_m127; assert_in_delta(0, (worksheet.costs_m127||0), 0.001); end
  def test_costs_n127; assert_in_delta(0, (worksheet.costs_n127||0), 0.001); end
  def test_costs_p127; assert_in_delta(0, (worksheet.costs_p127||0), 0.001); end
  def test_costs_q127; assert_in_delta(0, (worksheet.costs_q127||0), 0.001); end
  def test_costs_r127; assert_in_delta(0, (worksheet.costs_r127||0), 0.001); end
  def test_costs_s127; assert_in_delta(0, (worksheet.costs_s127||0), 0.001); end
  def test_costs_t127; assert_in_delta(0, (worksheet.costs_t127||0), 0.001); end
  def test_costs_u127; assert_in_delta(0, (worksheet.costs_u127||0), 0.001); end
  def test_costs_v127; assert_in_delta(0, (worksheet.costs_v127||0), 0.001); end
  def test_costs_w127; assert_in_delta(0, (worksheet.costs_w127||0), 0.001); end
  def test_costs_x127; assert_in_delta(0, (worksheet.costs_x127||0), 0.001); end
  def test_costs_z127; assert_in_epsilon(4742.597906950148, worksheet.costs_z127, 0.001); end
  def test_costs_aj127; assert_in_epsilon(4742.597906950148, worksheet.costs_aj127, 0.001); end
  def test_costs_aa127; assert_in_epsilon(3114.784891683593, worksheet.costs_aa127, 0.001); end
  def test_costs_ak127; assert_in_epsilon(3114.784891683593, worksheet.costs_ak127, 0.001); end
  def test_costs_ab127; assert_in_epsilon(2932.952377173457, worksheet.costs_ab127, 0.001); end
  def test_costs_al127; assert_in_epsilon(2932.952377173457, worksheet.costs_al127, 0.001); end
  def test_costs_ac127; assert_in_epsilon(3081.6333721833726, worksheet.costs_ac127, 0.001); end
  def test_costs_am127; assert_in_epsilon(3081.6333721833726, worksheet.costs_am127, 0.001); end
  def test_costs_ad127; assert_in_epsilon(3336.968990868345, worksheet.costs_ad127, 0.001); end
  def test_costs_an127; assert_in_epsilon(3336.968990868345, worksheet.costs_an127, 0.001); end
  def test_costs_ae127; assert_in_epsilon(3397.657936580744, worksheet.costs_ae127, 0.001); end
  def test_costs_ao127; assert_in_epsilon(3397.657936580744, worksheet.costs_ao127, 0.001); end
  def test_costs_af127; assert_in_epsilon(3539.4077949853804, worksheet.costs_af127, 0.001); end
  def test_costs_ap127; assert_in_epsilon(3539.4077949853804, worksheet.costs_ap127, 0.001); end
  def test_costs_ag127; assert_in_epsilon(3759.491493366818, worksheet.costs_ag127, 0.001); end
  def test_costs_aq127; assert_in_epsilon(3759.491493366818, worksheet.costs_aq127, 0.001); end
  def test_costs_ah127; assert_in_epsilon(4056.1787501242743, worksheet.costs_ah127, 0.001); end
  def test_costs_ar127; assert_in_epsilon(4056.1787501242743, worksheet.costs_ar127, 0.001); end
  def test_costs_b128; assert_equal("XVII.a", worksheet.costs_b128); end
  def test_costs_c128; assert_equal("District heating effective demand", worksheet.costs_c128); end
  def test_costs_d128; assert_equal("Buildings", worksheet.costs_d128); end
  def test_costs_e128; assert_equal("MEUR", worksheet.costs_e128); end
  def test_costs_f128; assert_in_delta(0, (worksheet.costs_f128||0), 0.001); end
  def test_costs_z128; assert_in_delta(0, (worksheet.costs_z128||0), 0.001); end
  def test_costs_aa128; assert_in_delta(0, (worksheet.costs_aa128||0), 0.001); end
  def test_costs_ab128; assert_in_delta(0, (worksheet.costs_ab128||0), 0.001); end
  def test_costs_ac128; assert_in_delta(0, (worksheet.costs_ac128||0), 0.001); end
  def test_costs_ad128; assert_in_delta(0, (worksheet.costs_ad128||0), 0.001); end
  def test_costs_ae128; assert_in_delta(0, (worksheet.costs_ae128||0), 0.001); end
  def test_costs_af128; assert_in_delta(0, (worksheet.costs_af128||0), 0.001); end
  def test_costs_ag128; assert_in_delta(0, (worksheet.costs_ag128||0), 0.001); end
  def test_costs_ah128; assert_in_delta(0, (worksheet.costs_ah128||0), 0.001); end
  def test_costs_p128; assert_in_epsilon(16.449142648982477, worksheet.costs_p128, 0.001); end
  def test_costs_aj128; assert_in_epsilon(16.449142648982477, worksheet.costs_aj128, 0.001); end
  def test_costs_g128; assert_in_epsilon(54.83047549660826, worksheet.costs_g128, 0.001); end
  def test_costs_q128; assert_in_epsilon(15.109068541841784, worksheet.costs_q128, 0.001); end
  def test_costs_ak128; assert_in_epsilon(69.93954403845004, worksheet.costs_ak128, 0.001); end
  def test_costs_h128; assert_in_epsilon(50.36356180613928, worksheet.costs_h128, 0.001); end
  def test_costs_r128; assert_in_epsilon(10.533043652429335, worksheet.costs_r128, 0.001); end
  def test_costs_al128; assert_in_epsilon(60.896605458568615, worksheet.costs_al128, 0.001); end
  def test_costs_i128; assert_in_epsilon(35.11014550809779, worksheet.costs_i128, 0.001); end
  def test_costs_s128; assert_in_epsilon(8.711691600871188, worksheet.costs_s128, 0.001); end
  def test_costs_am128; assert_in_epsilon(43.82183710896898, worksheet.costs_am128, 0.001); end
  def test_costs_j128; assert_in_epsilon(29.038972002903954, worksheet.costs_j128, 0.001); end
  def test_costs_t128; assert_in_epsilon(7.174818486669035, worksheet.costs_t128, 0.001); end
  def test_costs_an128; assert_in_epsilon(36.213790489572986, worksheet.costs_an128, 0.001); end
  def test_costs_k128; assert_in_epsilon(23.916061622230117, worksheet.costs_k128, 0.001); end
  def test_costs_u128; assert_in_epsilon(5.668160884321841, worksheet.costs_u128, 0.001); end
  def test_costs_ao128; assert_in_epsilon(29.58422250655196, worksheet.costs_ao128, 0.001); end
  def test_costs_l128; assert_in_epsilon(18.89386961440614, worksheet.costs_l128, 0.001); end
  def test_costs_v128; assert_in_epsilon(4.53861687326199, worksheet.costs_v128, 0.001); end
  def test_costs_ap128; assert_in_epsilon(23.43248648766813, worksheet.costs_ap128, 0.001); end
  def test_costs_m128; assert_in_epsilon(15.128722910873297, worksheet.costs_m128, 0.001); end
  def test_costs_w128; assert_in_epsilon(3.6299590054746735, worksheet.costs_w128, 0.001); end
  def test_costs_aq128; assert_in_epsilon(18.75868191634797, worksheet.costs_aq128, 0.001); end
  def test_costs_n128; assert_in_epsilon(12.099863351582245, worksheet.costs_n128, 0.001); end
  def test_costs_x128; assert_in_epsilon(2.9055260157158687, worksheet.costs_x128, 0.001); end
  def test_costs_ar128; assert_in_epsilon(15.005389367298115, worksheet.costs_ar128, 0.001); end
  def test_costs_b129; assert_equal("XVIII.a", worksheet.costs_b129); end
  def test_costs_c129; assert_equal("Carbone Capture [UNUSED]", worksheet.costs_c129); end
  def test_costs_d129; assert_equal("Industry", worksheet.costs_d129); end
  def test_costs_e129; assert_equal("MEUR", worksheet.costs_e129); end
  def test_costs_f129; assert_in_delta(0, (worksheet.costs_f129||0), 0.001); end
  def test_costs_g129; assert_in_delta(0, (worksheet.costs_g129||0), 0.001); end
  def test_costs_h129; assert_in_delta(0, (worksheet.costs_h129||0), 0.001); end
  def test_costs_i129; assert_in_delta(0, (worksheet.costs_i129||0), 0.001); end
  def test_costs_j129; assert_in_delta(0, (worksheet.costs_j129||0), 0.001); end
  def test_costs_k129; assert_in_delta(0, (worksheet.costs_k129||0), 0.001); end
  def test_costs_l129; assert_in_delta(0, (worksheet.costs_l129||0), 0.001); end
  def test_costs_m129; assert_in_delta(0, (worksheet.costs_m129||0), 0.001); end
  def test_costs_n129; assert_in_delta(0, (worksheet.costs_n129||0), 0.001); end
  def test_costs_p129; assert_in_delta(0, (worksheet.costs_p129||0), 0.001); end
  def test_costs_q129; assert_in_delta(0, (worksheet.costs_q129||0), 0.001); end
  def test_costs_r129; assert_in_delta(0, (worksheet.costs_r129||0), 0.001); end
  def test_costs_s129; assert_in_delta(0, (worksheet.costs_s129||0), 0.001); end
  def test_costs_t129; assert_in_delta(0, (worksheet.costs_t129||0), 0.001); end
  def test_costs_u129; assert_in_delta(0, (worksheet.costs_u129||0), 0.001); end
  def test_costs_v129; assert_in_delta(0, (worksheet.costs_v129||0), 0.001); end
  def test_costs_w129; assert_in_delta(0, (worksheet.costs_w129||0), 0.001); end
  def test_costs_x129; assert_in_delta(0, (worksheet.costs_x129||0), 0.001); end
  def test_costs_z129; assert_in_delta(0, (worksheet.costs_z129||0), 0.001); end
  def test_costs_aa129; assert_in_delta(0, (worksheet.costs_aa129||0), 0.001); end
  def test_costs_ab129; assert_in_delta(0, (worksheet.costs_ab129||0), 0.001); end
  def test_costs_ac129; assert_in_delta(0, (worksheet.costs_ac129||0), 0.001); end
  def test_costs_ad129; assert_in_delta(0, (worksheet.costs_ad129||0), 0.001); end
  def test_costs_ae129; assert_in_delta(0, (worksheet.costs_ae129||0), 0.001); end
  def test_costs_af129; assert_in_delta(0, (worksheet.costs_af129||0), 0.001); end
  def test_costs_ag129; assert_in_delta(0, (worksheet.costs_ag129||0), 0.001); end
  def test_costs_ah129; assert_in_delta(0, (worksheet.costs_ah129||0), 0.001); end
  def test_costs_aj129; assert_in_delta(0, (worksheet.costs_aj129||0), 0.001); end
  def test_costs_ak129; assert_in_delta(0, (worksheet.costs_ak129||0), 0.001); end
  def test_costs_al129; assert_in_delta(0, (worksheet.costs_al129||0), 0.001); end
  def test_costs_am129; assert_in_delta(0, (worksheet.costs_am129||0), 0.001); end
  def test_costs_an129; assert_in_delta(0, (worksheet.costs_an129||0), 0.001); end
  def test_costs_ao129; assert_in_delta(0, (worksheet.costs_ao129||0), 0.001); end
  def test_costs_ap129; assert_in_delta(0, (worksheet.costs_ap129||0), 0.001); end
  def test_costs_aq129; assert_in_delta(0, (worksheet.costs_aq129||0), 0.001); end
  def test_costs_ar129; assert_in_delta(0, (worksheet.costs_ar129||0), 0.001); end
  def test_costs_c130; assert_equal("Total", worksheet.costs_c130); end
  def test_costs_f130; assert_in_epsilon(46379.098821336454, worksheet.costs_f130, 0.001); end
  def test_costs_g130; assert_in_epsilon(50164.88645294413, worksheet.costs_g130, 0.001); end
  def test_costs_h130; assert_in_epsilon(73680.13592617177, worksheet.costs_h130, 0.001); end
  def test_costs_i130; assert_in_epsilon(64214.019054824, worksheet.costs_i130, 0.001); end
  def test_costs_j130; assert_in_epsilon(67972.95674537313, worksheet.costs_j130, 0.001); end
  def test_costs_k130; assert_in_epsilon(66969.43009633385, worksheet.costs_k130, 0.001); end
  def test_costs_l130; assert_in_epsilon(69680.89782638375, worksheet.costs_l130, 0.001); end
  def test_costs_m130; assert_in_epsilon(70987.01954125753, worksheet.costs_m130, 0.001); end
  def test_costs_n130; assert_in_epsilon(74680.50024485486, worksheet.costs_n130, 0.001); end
  def test_costs_p130; assert_in_epsilon(9562.484572470694, worksheet.costs_p130, 0.001); end
  def test_costs_q130; assert_in_epsilon(11374.127982921194, worksheet.costs_q130, 0.001); end
  def test_costs_r130; assert_in_epsilon(13354.894491503748, worksheet.costs_r130, 0.001); end
  def test_costs_s130; assert_in_epsilon(15101.25251074871, worksheet.costs_s130, 0.001); end
  def test_costs_t130; assert_in_epsilon(16694.685194021604, worksheet.costs_t130, 0.001); end
  def test_costs_u130; assert_in_epsilon(17884.36733157044, worksheet.costs_u130, 0.001); end
  def test_costs_v130; assert_in_epsilon(19084.54996066651, worksheet.costs_v130, 0.001); end
  def test_costs_w130; assert_in_epsilon(19665.884752978556, worksheet.costs_w130, 0.001); end
  def test_costs_x130; assert_in_epsilon(20737.249120415414, worksheet.costs_x130, 0.001); end
  def test_costs_z130; assert_in_epsilon(29233.07815602964, worksheet.costs_z130, 0.001); end
  def test_costs_aa130; assert_in_epsilon(29969.915824323947, worksheet.costs_aa130, 0.001); end
  def test_costs_ab130; assert_in_epsilon(31135.391067044147, worksheet.costs_ab130, 0.001); end
  def test_costs_ac130; assert_in_epsilon(31355.675874363675, worksheet.costs_ac130, 0.001); end
  def test_costs_ad130; assert_in_epsilon(32103.58476976186, worksheet.costs_ad130, 0.001); end
  def test_costs_ae130; assert_in_epsilon(31222.197611134783, worksheet.costs_ae130, 0.001); end
  def test_costs_af130; assert_in_epsilon(31027.559389959923, worksheet.costs_af130, 0.001); end
  def test_costs_ag130; assert_in_epsilon(31024.7694486251, worksheet.costs_ag130, 0.001); end
  def test_costs_ah130; assert_in_epsilon(31704.532435090376, worksheet.costs_ah130, 0.001); end
  def test_costs_aj130; assert_in_epsilon(85174.66154983676, worksheet.costs_aj130, 0.001); end
  def test_costs_ak130; assert_in_epsilon(91508.93026018927, worksheet.costs_ak130, 0.001); end
  def test_costs_al130; assert_in_epsilon(118170.42148471966, worksheet.costs_al130, 0.001); end
  def test_costs_am130; assert_in_epsilon(110670.94743993641, worksheet.costs_am130, 0.001); end
  def test_costs_an130; assert_in_epsilon(116771.22670915659, worksheet.costs_an130, 0.001); end
  def test_costs_ao130; assert_in_epsilon(116075.99503903904, worksheet.costs_ao130, 0.001); end
  def test_costs_ap130; assert_in_epsilon(119793.00717701016, worksheet.costs_ap130, 0.001); end
  def test_costs_aq130; assert_in_epsilon(121677.67374286117, worksheet.costs_aq130, 0.001); end
  def test_costs_ar130; assert_in_epsilon(127122.28180036065, worksheet.costs_ar130, 0.001); end
  def test_costs_at131; assert_equal("C1.High", worksheet.costs_at131); end
  def test_costs_au131; assert_equal("High estimate of capital costs in that year", worksheet.costs_au131); end
  def test_costs_bd131; assert_equal("C2.High", worksheet.costs_bd131); end
  def test_costs_be131; assert_equal("High estimate of O&M costs in that year", worksheet.costs_be131); end
  def test_costs_bn131; assert_equal("C3.High", worksheet.costs_bn131); end
  def test_costs_bo131; assert_equal("High estimate of fuel costs in that year", worksheet.costs_bo131); end
  def test_costs_bx131; assert_equal("High estimate of total cash flows", worksheet.costs_bx131); end
  def test_costs_c132; assert_equal("High estimate of costs", worksheet.costs_c132); end
  def test_costs_d132; assert_equal("Buildings", worksheet.costs_d132); end
  def test_costs_e132; assert_equal("MEUR", worksheet.costs_e132); end
  def test_costs_at132; assert_in_epsilon(34939.42618852014, worksheet.costs_at132, 0.001); end
  def test_costs_au132; assert_in_epsilon(22535.548678297735, worksheet.costs_au132, 0.001); end
  def test_costs_av132; assert_in_epsilon(21485.893161416836, worksheet.costs_av132, 0.001); end
  def test_costs_aw132; assert_in_epsilon(10605.055890336294, worksheet.costs_aw132, 0.001); end
  def test_costs_ax132; assert_in_epsilon(6860.06705122082, worksheet.costs_ax132, 0.001); end
  def test_costs_ay132; assert_in_epsilon(4068.6575742488717, worksheet.costs_ay132, 0.001); end
  def test_costs_az132; assert_in_epsilon(2638.3301403625346, worksheet.costs_az132, 0.001); end
  def test_costs_ba132; assert_in_epsilon(1641.9834328104025, worksheet.costs_ba132, 0.001); end
  def test_costs_bb132; assert_in_epsilon(1102.1851181970817, worksheet.costs_bb132, 0.001); end
  def test_costs_bd132; assert_in_epsilon(676.8060640794976, worksheet.costs_bd132, 0.001); end
  def test_costs_be132; assert_in_epsilon(463.03638435957515, worksheet.costs_be132, 0.001); end
  def test_costs_bf132; assert_in_epsilon(312.35675387839416, worksheet.costs_bf132, 0.001); end
  def test_costs_bg132; assert_in_epsilon(208.88585259159177, worksheet.costs_bg132, 0.001); end
  def test_costs_bh132; assert_in_epsilon(138.68044351929993, worksheet.costs_bh132, 0.001); end
  def test_costs_bi132; assert_in_epsilon(90.89441933754345, worksheet.costs_bi132, 0.001); end
  def test_costs_bj132; assert_in_epsilon(59.67635610984724, worksheet.costs_bj132, 0.001); end
  def test_costs_bk132; assert_in_epsilon(39.131350618959914, worksheet.costs_bk132, 0.001); end
  def test_costs_bl132; assert_in_epsilon(24.991671859007184, worksheet.costs_bl132, 0.001); end
  def test_costs_bn132; assert_in_epsilon(4181.615263582494, worksheet.costs_bn132, 0.001); end
  def test_costs_bo132; assert_in_epsilon(3044.594085320827, worksheet.costs_bo132, 0.001); end
  def test_costs_bp132; assert_in_epsilon(2005.107177971001, worksheet.costs_bp132, 0.001); end
  def test_costs_bq132; assert_in_epsilon(1156.894231393825, worksheet.costs_bq132, 0.001); end
  def test_costs_br132; assert_in_epsilon(670.019852960177, worksheet.costs_br132, 0.001); end
  def test_costs_bs132; assert_in_epsilon(378.1869306579094, worksheet.costs_bs132, 0.001); end
  def test_costs_bt132; assert_in_epsilon(205.53829821331686, worksheet.costs_bt132, 0.001); end
  def test_costs_bu132; assert_in_epsilon(117.29229269931986, worksheet.costs_bu132, 0.001); end
  def test_costs_bv132; assert_in_epsilon(61.409850586728744, worksheet.costs_bv132, 0.001); end
  def test_costs_aj132; assert_in_epsilon(39797.847516182126, worksheet.costs_aj132, 0.001); end
  def test_costs_bx132; assert_in_epsilon(39797.847516182126, worksheet.costs_bx132, 0.001); end
  def test_costs_by132; assert_in_epsilon(26043.179147978128, worksheet.costs_by132, 0.001); end
  def test_costs_bz132; assert_in_epsilon(23803.357093266237, worksheet.costs_bz132, 0.001); end
  def test_costs_ca132; assert_in_epsilon(11970.83597432171, worksheet.costs_ca132, 0.001); end
  def test_costs_cb132; assert_in_epsilon(7668.767347700296, worksheet.costs_cb132, 0.001); end
  def test_costs_cc132; assert_in_epsilon(4537.738924244325, worksheet.costs_cc132, 0.001); end
  def test_costs_cd132; assert_in_epsilon(2903.5447946856984, worksheet.costs_cd132, 0.001); end
  def test_costs_ce132; assert_in_epsilon(1798.4070761286825, worksheet.costs_ce132, 0.001); end
  def test_costs_cf132; assert_in_epsilon(1188.5866406428172, worksheet.costs_cf132, 0.001); end
  def test_costs_d133; assert_equal("Transport", worksheet.costs_d133); end
  def test_costs_e133; assert_equal("MEUR", worksheet.costs_e133); end
  def test_costs_at133; assert_in_epsilon(7275.324948121434, worksheet.costs_at133, 0.001); end
  def test_costs_au133; assert_in_epsilon(5624.191461217991, worksheet.costs_au133, 0.001); end
  def test_costs_av133; assert_in_epsilon(4642.68458329446, worksheet.costs_av133, 0.001); end
  def test_costs_aw133; assert_in_epsilon(2872.7897197163825, worksheet.costs_aw133, 0.001); end
  def test_costs_ax133; assert_in_epsilon(1822.9834902617772, worksheet.costs_ax133, 0.001); end
  def test_costs_ay133; assert_in_epsilon(1065.1934215095785, worksheet.costs_ay133, 0.001); end
  def test_costs_az133; assert_in_epsilon(616.6721750616903, worksheet.costs_az133, 0.001); end
  def test_costs_ba133; assert_in_epsilon(360.82507378906257, worksheet.costs_ba133, 0.001); end
  def test_costs_bb133; assert_in_epsilon(182.99592721730608, worksheet.costs_bb133, 0.001); end
  def test_costs_bd133; assert_in_epsilon(7534.454508421662, worksheet.costs_bd133, 0.001); end
  def test_costs_be133; assert_in_epsilon(5446.745043500859, worksheet.costs_be133, 0.001); end
  def test_costs_bf133; assert_in_epsilon(3900.125302526173, worksheet.costs_bf133, 0.001); end
  def test_costs_bg133; assert_in_epsilon(2668.0912566885254, worksheet.costs_bg133, 0.001); end
  def test_costs_bh133; assert_in_epsilon(1789.7497203883333, worksheet.costs_bh133, 0.001); end
  def test_costs_bi133; assert_in_epsilon(1168.6569674871982, worksheet.costs_bi133, 0.001); end
  def test_costs_bj133; assert_in_epsilon(753.1919231719465, worksheet.costs_bj133, 0.001); end
  def test_costs_bk133; assert_in_epsilon(477.70238144861634, worksheet.costs_bk133, 0.001); end
  def test_costs_bl133; assert_in_epsilon(300.0132269666156, worksheet.costs_bl133, 0.001); end
  def test_costs_bn133; assert_in_epsilon(4701.30303463843, worksheet.costs_bn133, 0.001); end
  def test_costs_bo133; assert_in_epsilon(3162.765807847696, worksheet.costs_bo133, 0.001); end
  def test_costs_bp133; assert_in_epsilon(2158.84114090682, worksheet.costs_bp133, 0.001); end
  def test_costs_bq133; assert_in_epsilon(1383.0753430628774, worksheet.costs_bq133, 0.001); end
  def test_costs_br133; assert_in_epsilon(852.4223060570877, worksheet.costs_br133, 0.001); end
  def test_costs_bs133; assert_in_epsilon(483.5010458239385, worksheet.costs_bs133, 0.001); end
  def test_costs_bt133; assert_in_epsilon(282.5485508464554, worksheet.costs_bt133, 0.001); end
  def test_costs_bu133; assert_in_epsilon(167.15841903760537, worksheet.costs_bu133, 0.001); end
  def test_costs_bv133; assert_in_epsilon(97.26654738800242, worksheet.costs_bv133, 0.001); end
  def test_costs_aj133; assert_in_epsilon(19511.08249118153, worksheet.costs_aj133, 0.001); end
  def test_costs_bx133; assert_in_epsilon(19511.08249118153, worksheet.costs_bx133, 0.001); end
  def test_costs_by133; assert_in_epsilon(14233.702312566544, worksheet.costs_by133, 0.001); end
  def test_costs_bz133; assert_in_epsilon(10701.651026727452, worksheet.costs_bz133, 0.001); end
  def test_costs_ca133; assert_in_epsilon(6923.956319467786, worksheet.costs_ca133, 0.001); end
  def test_costs_cb133; assert_in_epsilon(4465.155516707198, worksheet.costs_cb133, 0.001); end
  def test_costs_cc133; assert_in_epsilon(2717.3514348207154, worksheet.costs_cc133, 0.001); end
  def test_costs_cd133; assert_in_epsilon(1652.4126490800923, worksheet.costs_cd133, 0.001); end
  def test_costs_ce133; assert_in_epsilon(1005.6858742752843, worksheet.costs_ce133, 0.001); end
  def test_costs_cf133; assert_in_epsilon(580.2757015719242, worksheet.costs_cf133, 0.001); end
  def test_costs_d134; assert_equal("Industry", worksheet.costs_d134); end
  def test_costs_e134; assert_equal("MEUR", worksheet.costs_e134); end
  def test_costs_at134; assert_in_epsilon(5.5668597011630485, worksheet.costs_at134, 0.001); end
  def test_costs_au134; assert_in_epsilon(205.77430365260113, worksheet.costs_au134, 0.001); end
  def test_costs_av134; assert_in_epsilon(320.4096877102354, worksheet.costs_av134, 0.001); end
  def test_costs_aw134; assert_in_epsilon(269.34735099636356, worksheet.costs_aw134, 0.001); end
  def test_costs_ax134; assert_in_epsilon(218.02900423763546, worksheet.costs_ax134, 0.001); end
  def test_costs_ay134; assert_in_epsilon(155.99423629126153, worksheet.costs_ay134, 0.001); end
  def test_costs_az134; assert_in_epsilon(104.67830107746744, worksheet.costs_az134, 0.001); end
  def test_costs_ba134; assert_in_epsilon(69.92407942040242, worksheet.costs_ba134, 0.001); end
  def test_costs_bb134; assert_in_epsilon(54.17035837761515, worksheet.costs_bb134, 0.001); end
  def test_costs_bd134; assert_in_delta(0, (worksheet.costs_bd134||0), 0.001); end
  def test_costs_be134; assert_in_delta(0, (worksheet.costs_be134||0), 0.001); end
  def test_costs_bf134; assert_in_delta(0, (worksheet.costs_bf134||0), 0.001); end
  def test_costs_bg134; assert_in_delta(0, (worksheet.costs_bg134||0), 0.001); end
  def test_costs_bh134; assert_in_delta(0, (worksheet.costs_bh134||0), 0.001); end
  def test_costs_bi134; assert_in_delta(0, (worksheet.costs_bi134||0), 0.001); end
  def test_costs_bj134; assert_in_delta(0, (worksheet.costs_bj134||0), 0.001); end
  def test_costs_bk134; assert_in_delta(0, (worksheet.costs_bk134||0), 0.001); end
  def test_costs_bl134; assert_in_delta(0, (worksheet.costs_bl134||0), 0.001); end
  def test_costs_bn134; assert_in_epsilon(5255.553137615401, worksheet.costs_bn134, 0.001); end
  def test_costs_bo134; assert_in_epsilon(4121.062749098781, worksheet.costs_bo134, 0.001); end
  def test_costs_bp134; assert_in_epsilon(2376.6809586606587, worksheet.costs_bp134, 0.001); end
  def test_costs_bq134; assert_in_epsilon(1346.6863002067203, worksheet.costs_bq134, 0.001); end
  def test_costs_br134; assert_in_epsilon(792.2741287812538, worksheet.costs_br134, 0.001); end
  def test_costs_bs134; assert_in_epsilon(452.0447166384349, worksheet.costs_bs134, 0.001); end
  def test_costs_bt134; assert_in_epsilon(253.6335732952479, worksheet.costs_bt134, 0.001); end
  def test_costs_bu134; assert_in_epsilon(145.300963341308, worksheet.costs_bu134, 0.001); end
  def test_costs_bv134; assert_in_epsilon(81.69799618452404, worksheet.costs_bv134, 0.001); end
  def test_costs_aj134; assert_in_epsilon(5261.119997316566, worksheet.costs_aj134, 0.001); end
  def test_costs_bx134; assert_in_epsilon(5261.119997316566, worksheet.costs_bx134, 0.001); end
  def test_costs_by134; assert_in_epsilon(4326.8370527513825, worksheet.costs_by134, 0.001); end
  def test_costs_bz134; assert_in_epsilon(2697.0906463708943, worksheet.costs_bz134, 0.001); end
  def test_costs_ca134; assert_in_epsilon(1616.033651203084, worksheet.costs_ca134, 0.001); end
  def test_costs_cb134; assert_in_epsilon(1010.3031330188893, worksheet.costs_cb134, 0.001); end
  def test_costs_cc134; assert_in_epsilon(608.0389529296965, worksheet.costs_cc134, 0.001); end
  def test_costs_cd134; assert_in_epsilon(358.31187437271535, worksheet.costs_cd134, 0.001); end
  def test_costs_ce134; assert_in_epsilon(215.22504276171043, worksheet.costs_ce134, 0.001); end
  def test_costs_cf134; assert_in_epsilon(135.86835456213922, worksheet.costs_cf134, 0.001); end
  def test_costs_d135; assert_equal("Electricity", worksheet.costs_d135); end
  def test_costs_e135; assert_equal("MEUR", worksheet.costs_e135); end
  def test_costs_f135; assert_in_epsilon(3044.063867579909, worksheet.costs_f135, 0.001); end
  def test_costs_at135; assert_in_epsilon(3044.063867579909, worksheet.costs_at135, 0.001); end
  def test_costs_au135; assert_in_epsilon(2130.8306758031886, worksheet.costs_au135, 0.001); end
  def test_costs_av135; assert_in_epsilon(1626.3404924354154, worksheet.costs_av135, 0.001); end
  def test_costs_aw135; assert_in_epsilon(1470.2368220240246, worksheet.costs_aw135, 0.001); end
  def test_costs_ax135; assert_in_epsilon(1105.6255594674276, worksheet.costs_ax135, 0.001); end
  def test_costs_ay135; assert_in_epsilon(830.244754458776, worksheet.costs_ay135, 0.001); end
  def test_costs_az135; assert_in_epsilon(594.157775006593, worksheet.costs_az135, 0.001); end
  def test_costs_ba135; assert_in_epsilon(427.6011485188138, worksheet.costs_ba135, 0.001); end
  def test_costs_bb135; assert_in_epsilon(300.451356616285, worksheet.costs_bb135, 0.001); end
  def test_costs_p135; assert_in_epsilon(884.7712347876729, worksheet.costs_p135, 0.001); end
  def test_costs_bd135; assert_in_epsilon(884.7712347876729, worksheet.costs_bd135, 0.001); end
  def test_costs_be135; assert_in_epsilon(718.7739501387189, worksheet.costs_be135, 0.001); end
  def test_costs_bf135; assert_in_epsilon(577.4958940744705, worksheet.costs_bf135, 0.001); end
  def test_costs_bg135; assert_in_epsilon(477.0414064076552, worksheet.costs_bg135, 0.001); end
  def test_costs_bh135; assert_in_epsilon(382.05433385617005, worksheet.costs_bh135, 0.001); end
  def test_costs_bi135; assert_in_epsilon(279.8862081183494, worksheet.costs_bi135, 0.001); end
  def test_costs_bj135; assert_in_epsilon(208.91489990568988, worksheet.costs_bj135, 0.001); end
  def test_costs_bk135; assert_in_epsilon(136.55394084909668, worksheet.costs_bk135, 0.001); end
  def test_costs_bl135; assert_in_epsilon(103.29055056913178, worksheet.costs_bl135, 0.001); end
  def test_costs_z135; assert_in_epsilon(2327.205888824453, worksheet.costs_z135, 0.001); end
  def test_costs_bn135; assert_in_epsilon(2327.205888824453, worksheet.costs_bn135, 0.001); end
  def test_costs_bo135; assert_in_epsilon(675.9956395454354, worksheet.costs_bo135, 0.001); end
  def test_costs_bp135; assert_in_epsilon(614.4559478485619, worksheet.costs_bp135, 0.001); end
  def test_costs_bq135; assert_in_epsilon(639.2625601988265, worksheet.costs_bq135, 0.001); end
  def test_costs_br135; assert_in_epsilon(607.1843842749548, worksheet.costs_br135, 0.001); end
  def test_costs_bs135; assert_in_epsilon(488.60120226811955, worksheet.costs_bs135, 0.001); end
  def test_costs_bt135; assert_in_epsilon(391.6896006462888, worksheet.costs_bt135, 0.001); end
  def test_costs_bu135; assert_in_epsilon(284.3151335971202, worksheet.costs_bu135, 0.001); end
  def test_costs_bv135; assert_in_epsilon(223.52424371517216, worksheet.costs_bv135, 0.001); end
  def test_costs_aj135; assert_in_epsilon(6256.040991192034, worksheet.costs_aj135, 0.001); end
  def test_costs_bx135; assert_in_epsilon(6256.040991192034, worksheet.costs_bx135, 0.001); end
  def test_costs_by135; assert_in_epsilon(3525.6002654873423, worksheet.costs_by135, 0.001); end
  def test_costs_bz135; assert_in_epsilon(2818.292334358448, worksheet.costs_bz135, 0.001); end
  def test_costs_ca135; assert_in_epsilon(2586.5407886305065, worksheet.costs_ca135, 0.001); end
  def test_costs_cb135; assert_in_epsilon(2094.8642775985522, worksheet.costs_cb135, 0.001); end
  def test_costs_cc135; assert_in_epsilon(1598.7321648452448, worksheet.costs_cc135, 0.001); end
  def test_costs_cd135; assert_in_epsilon(1194.7622755585717, worksheet.costs_cd135, 0.001); end
  def test_costs_ce135; assert_in_epsilon(848.4702229650305, worksheet.costs_ce135, 0.001); end
  def test_costs_cf135; assert_in_epsilon(627.266150900589, worksheet.costs_cf135, 0.001); end
  def test_costs_d136; assert_equal("Fossil fuels", worksheet.costs_d136); end
  def test_costs_e136; assert_equal("MEUR", worksheet.costs_e136); end
  def test_costs_f136; assert_in_epsilon(392.02176529950464, worksheet.costs_f136, 0.001); end
  def test_costs_at136; assert_in_epsilon(392.02176529950464, worksheet.costs_at136, 0.001); end
  def test_costs_au136; assert_in_epsilon(139.0146811852468, worksheet.costs_au136, 0.001); end
  def test_costs_av136; assert_in_epsilon(69.44658200018254, worksheet.costs_av136, 0.001); end
  def test_costs_aw136; assert_in_epsilon(39.203037759999745, worksheet.costs_aw136, 0.001); end
  def test_costs_ax136; assert_in_epsilon(23.05142491450707, worksheet.costs_ax136, 0.001); end
  def test_costs_ay136; assert_in_epsilon(13.913729133543503, worksheet.costs_ay136, 0.001); end
  def test_costs_az136; assert_in_epsilon(9.459618819984765, worksheet.costs_az136, 0.001); end
  def test_costs_ba136; assert_in_epsilon(6.530810646448964, worksheet.costs_ba136, 0.001); end
  def test_costs_bb136; assert_in_delta(0, (worksheet.costs_bb136||0), 0.001); end
  def test_costs_p136; assert_in_delta(0.23394413186588495, worksheet.costs_p136, 0.001); end
  def test_costs_bd136; assert_in_delta(0.23394413186588495, worksheet.costs_bd136, 0.001); end
  def test_costs_be136; assert_in_delta(0.1168698169039854, worksheet.costs_be136, 0.001); end
  def test_costs_bf136; assert_in_delta(0.06597375584415592, worksheet.costs_bf136, 0.001); end
  def test_costs_bg136; assert_in_delta(0.038792633583137726, worksheet.costs_bg136, 0.001); end
  def test_costs_bh136; assert_in_delta(0.023415046924621902, worksheet.costs_bh136, 0.001); end
  def test_costs_bi136; assert_in_delta(0.014478157056560925, worksheet.costs_bi136, 0.001); end
  def test_costs_bj136; assert_in_delta(0.009138940223188112, worksheet.costs_bj136, 0.001); end
  def test_costs_bk136; assert_in_delta(0.005866177970460157, worksheet.costs_bk136, 0.001); end
  def test_costs_bl136; assert_in_delta(0, (worksheet.costs_bl136||0), 0.001); end
  def test_costs_z136; assert_in_epsilon(12161.043951571908, worksheet.costs_z136, 0.001); end
  def test_costs_bn136; assert_in_epsilon(12161.043951571908, worksheet.costs_bn136, 0.001); end
  def test_costs_bo136; assert_in_epsilon(6728.926218549548, worksheet.costs_bo136, 0.001); end
  def test_costs_bp136; assert_in_epsilon(3973.04606990625, worksheet.costs_bp136, 0.001); end
  def test_costs_bq136; assert_in_epsilon(2275.0640526720317, worksheet.costs_bq136, 0.001); end
  def test_costs_br136; assert_in_epsilon(1323.6187160528727, worksheet.costs_br136, 0.001); end
  def test_costs_bs136; assert_in_epsilon(710.9172804672512, worksheet.costs_bs136, 0.001); end
  def test_costs_bt136; assert_in_epsilon(391.0789721651517, worksheet.costs_bt136, 0.001); end
  def test_costs_bu136; assert_in_epsilon(216.66902350087452, worksheet.costs_bu136, 0.001); end
  def test_costs_bv136; assert_in_epsilon(121.35588121549813, worksheet.costs_bv136, 0.001); end
  def test_costs_aj136; assert_in_epsilon(12553.299661003277, worksheet.costs_aj136, 0.001); end
  def test_costs_bx136; assert_in_epsilon(12553.299661003277, worksheet.costs_bx136, 0.001); end
  def test_costs_by136; assert_in_epsilon(6868.0577695516995, worksheet.costs_by136, 0.001); end
  def test_costs_bz136; assert_in_epsilon(4042.5586256622773, worksheet.costs_bz136, 0.001); end
  def test_costs_ca136; assert_in_epsilon(2314.305883065614, worksheet.costs_ca136, 0.001); end
  def test_costs_cb136; assert_in_epsilon(1346.6935560143042, worksheet.costs_cb136, 0.001); end
  def test_costs_cc136; assert_in_epsilon(724.8454877578513, worksheet.costs_cc136, 0.001); end
  def test_costs_cd136; assert_in_epsilon(400.5477299253596, worksheet.costs_cd136, 0.001); end
  def test_costs_ce136; assert_in_epsilon(223.20570032529395, worksheet.costs_ce136, 0.001); end
  def test_costs_cf136; assert_in_epsilon(121.35588121549813, worksheet.costs_cf136, 0.001); end
  def test_costs_d137; assert_equal("Bioenergy", worksheet.costs_d137); end
  def test_costs_e137; assert_equal("MEUR", worksheet.costs_e137); end
  def test_costs_f137; assert_in_epsilon(722.6951921142999, worksheet.costs_f137, 0.001); end
  def test_costs_at137; assert_in_epsilon(722.6951921142999, worksheet.costs_at137, 0.001); end
  def test_costs_au137; assert_in_epsilon(513.0878673175864, worksheet.costs_au137, 0.001); end
  def test_costs_av137; assert_in_epsilon(262.1074637341336, worksheet.costs_av137, 0.001); end
  def test_costs_aw137; assert_in_epsilon(115.69279893176214, worksheet.costs_aw137, 0.001); end
  def test_costs_ax137; assert_in_epsilon(73.99036805826938, worksheet.costs_ax137, 0.001); end
  def test_costs_ay137; assert_in_epsilon(47.00668244821525, worksheet.costs_ay137, 0.001); end
  def test_costs_az137; assert_in_epsilon(30.01343682828204, worksheet.costs_az137, 0.001); end
  def test_costs_ba137; assert_in_epsilon(19.14485126146527, worksheet.costs_ba137, 0.001); end
  def test_costs_bb137; assert_in_epsilon(10.257526870636699, worksheet.costs_bb137, 0.001); end
  def test_costs_p137; assert_in_epsilon(466.2188210499959, worksheet.costs_p137, 0.001); end
  def test_costs_bd137; assert_in_epsilon(466.2188210499959, worksheet.costs_bd137, 0.001); end
  def test_costs_be137; assert_in_epsilon(433.766347983528, worksheet.costs_be137, 0.001); end
  def test_costs_bf137; assert_in_epsilon(358.8460280038046, worksheet.costs_bf137, 0.001); end
  def test_costs_bg137; assert_in_epsilon(261.06247826800245, worksheet.costs_bg137, 0.001); end
  def test_costs_bh137; assert_in_epsilon(171.05066314959524, worksheet.costs_bh137, 0.001); end
  def test_costs_bi137; assert_in_epsilon(111.20346153242127, worksheet.costs_bi137, 0.001); end
  def test_costs_bj137; assert_in_epsilon(71.9156305219527, worksheet.costs_bj137, 0.001); end
  def test_costs_bk137; assert_in_epsilon(46.399324396237056, worksheet.costs_bk137, 0.001); end
  def test_costs_bl137; assert_in_epsilon(29.892579994680545, worksheet.costs_bl137, 0.001); end
  def test_costs_z137; assert_in_epsilon(606.3568797969469, worksheet.costs_z137, 0.001); end
  def test_costs_bn137; assert_in_epsilon(606.3568797969469, worksheet.costs_bn137, 0.001); end
  def test_costs_bo137; assert_in_epsilon(744.4068481695037, worksheet.costs_bo137, 0.001); end
  def test_costs_bp137; assert_in_epsilon(695.7646923838084, worksheet.costs_bp137, 0.001); end
  def test_costs_bq137; assert_in_epsilon(532.8200858113048, worksheet.costs_bq137, 0.001); end
  def test_costs_br137; assert_in_epsilon(379.7626637718633, worksheet.costs_br137, 0.001); end
  def test_costs_bs137; assert_in_epsilon(256.3796076587336, worksheet.costs_bs137, 0.001); end
  def test_costs_bt137; assert_in_epsilon(171.518061919313, worksheet.costs_bt137, 0.001); end
  def test_costs_bu137; assert_in_epsilon(114.07861247032328, worksheet.costs_bu137, 0.001); end
  def test_costs_bv137; assert_in_epsilon(73.49543295423473, worksheet.costs_bv137, 0.001); end
  def test_costs_aj137; assert_in_epsilon(1795.2708929612427, worksheet.costs_aj137, 0.001); end
  def test_costs_bx137; assert_in_epsilon(1795.2708929612427, worksheet.costs_bx137, 0.001); end
  def test_costs_by137; assert_in_epsilon(1691.2610634706186, worksheet.costs_by137, 0.001); end
  def test_costs_bz137; assert_in_epsilon(1316.7181841217464, worksheet.costs_bz137, 0.001); end
  def test_costs_ca137; assert_in_epsilon(909.5753630110695, worksheet.costs_ca137, 0.001); end
  def test_costs_cb137; assert_in_epsilon(624.8036949797278, worksheet.costs_cb137, 0.001); end
  def test_costs_cc137; assert_in_epsilon(414.5897516393702, worksheet.costs_cc137, 0.001); end
  def test_costs_cd137; assert_in_epsilon(273.44712926954776, worksheet.costs_cd137, 0.001); end
  def test_costs_ce137; assert_in_epsilon(179.6227881280256, worksheet.costs_ce137, 0.001); end
  def test_costs_cf137; assert_in_epsilon(113.64553981955198, worksheet.costs_cf137, 0.001); end
  def test_costs_d138; assert_equal("Electricity (ex/im)ports", worksheet.costs_d138); end
  def test_costs_e138; assert_equal("MEUR", worksheet.costs_e138); end
  def test_costs_at138; assert_in_delta(0, (worksheet.costs_at138||0), 0.001); end
  def test_costs_au138; assert_in_delta(0, (worksheet.costs_au138||0), 0.001); end
  def test_costs_av138; assert_in_delta(0, (worksheet.costs_av138||0), 0.001); end
  def test_costs_aw138; assert_in_delta(0, (worksheet.costs_aw138||0), 0.001); end
  def test_costs_ax138; assert_in_delta(0, (worksheet.costs_ax138||0), 0.001); end
  def test_costs_ay138; assert_in_delta(0, (worksheet.costs_ay138||0), 0.001); end
  def test_costs_az138; assert_in_delta(0, (worksheet.costs_az138||0), 0.001); end
  def test_costs_ba138; assert_in_delta(0, (worksheet.costs_ba138||0), 0.001); end
  def test_costs_bb138; assert_in_delta(0, (worksheet.costs_bb138||0), 0.001); end
  def test_costs_bd138; assert_in_delta(0, (worksheet.costs_bd138||0), 0.001); end
  def test_costs_be138; assert_in_delta(0, (worksheet.costs_be138||0), 0.001); end
  def test_costs_bf138; assert_in_delta(0, (worksheet.costs_bf138||0), 0.001); end
  def test_costs_bg138; assert_in_delta(0, (worksheet.costs_bg138||0), 0.001); end
  def test_costs_bh138; assert_in_delta(0, (worksheet.costs_bh138||0), 0.001); end
  def test_costs_bi138; assert_in_delta(0, (worksheet.costs_bi138||0), 0.001); end
  def test_costs_bj138; assert_in_delta(0, (worksheet.costs_bj138||0), 0.001); end
  def test_costs_bk138; assert_in_delta(0, (worksheet.costs_bk138||0), 0.001); end
  def test_costs_bl138; assert_in_delta(0, (worksheet.costs_bl138||0), 0.001); end
  def test_costs_bn138; assert_in_delta(0, (worksheet.costs_bn138||0), 0.001); end
  def test_costs_bo138; assert_in_epsilon(131.20843707893766, worksheet.costs_bo138, 0.001); end
  def test_costs_bp138; assert_in_epsilon(180.14510198594857, worksheet.costs_bp138, 0.001); end
  def test_costs_bq138; assert_in_epsilon(172.49693357356782, worksheet.costs_bq138, 0.001); end
  def test_costs_br138; assert_in_epsilon(146.7112608598296, worksheet.costs_br138, 0.001); end
  def test_costs_bs138; assert_in_epsilon(112.05311028684181, worksheet.costs_bs138, 0.001); end
  def test_costs_bt138; assert_in_epsilon(82.13748401889899, worksheet.costs_bt138, 0.001); end
  def test_costs_bu138; assert_in_epsilon(59.174138847483704, worksheet.costs_bu138, 0.001); end
  def test_costs_bv138; assert_in_epsilon(41.759414207620075, worksheet.costs_bv138, 0.001); end
  def test_costs_aj138; assert_in_delta(0, (worksheet.costs_aj138||0), 0.001); end
  def test_costs_bx138; assert_in_delta(0, (worksheet.costs_bx138||0), 0.001); end
  def test_costs_by138; assert_in_epsilon(131.20843707893766, worksheet.costs_by138, 0.001); end
  def test_costs_bz138; assert_in_epsilon(180.14510198594857, worksheet.costs_bz138, 0.001); end
  def test_costs_ca138; assert_in_epsilon(172.49693357356782, worksheet.costs_ca138, 0.001); end
  def test_costs_cb138; assert_in_epsilon(146.7112608598296, worksheet.costs_cb138, 0.001); end
  def test_costs_cc138; assert_in_epsilon(112.05311028684181, worksheet.costs_cc138, 0.001); end
  def test_costs_cd138; assert_in_epsilon(82.13748401889899, worksheet.costs_cd138, 0.001); end
  def test_costs_ce138; assert_in_epsilon(59.174138847483704, worksheet.costs_ce138, 0.001); end
  def test_costs_cf138; assert_in_epsilon(41.759414207620075, worksheet.costs_cf138, 0.001); end
  def test_costs_d139; assert_equal("Total", worksheet.costs_d139); end
  def test_costs_e139; assert_equal("MEUR", worksheet.costs_e139); end
  def test_costs_f139; assert_in_epsilon(46379.098821336454, worksheet.costs_f139, 0.001); end
  def test_costs_at139; assert_in_epsilon(46379.098821336454, worksheet.costs_at139, 0.001); end
  def test_costs_au139; assert_in_epsilon(31148.447667474346, worksheet.costs_au139, 0.001); end
  def test_costs_av139; assert_in_epsilon(28406.881970591257, worksheet.costs_av139, 0.001); end
  def test_costs_aw139; assert_in_epsilon(15372.325619764824, worksheet.costs_aw139, 0.001); end
  def test_costs_ax139; assert_in_epsilon(10103.746898160436, worksheet.costs_ax139, 0.001); end
  def test_costs_ay139; assert_in_epsilon(6181.010398090247, worksheet.costs_ay139, 0.001); end
  def test_costs_az139; assert_in_epsilon(3993.311447156552, worksheet.costs_az139, 0.001); end
  def test_costs_ba139; assert_in_epsilon(2526.009396446596, worksheet.costs_ba139, 0.001); end
  def test_costs_bb139; assert_in_epsilon(1650.0602872789245, worksheet.costs_bb139, 0.001); end
  def test_costs_p139; assert_in_epsilon(9562.484572470694, worksheet.costs_p139, 0.001); end
  def test_costs_bd139; assert_in_epsilon(9562.484572470694, worksheet.costs_bd139, 0.001); end
  def test_costs_be139; assert_in_epsilon(7062.438595799584, worksheet.costs_be139, 0.001); end
  def test_costs_bf139; assert_in_epsilon(5148.889952238686, worksheet.costs_bf139, 0.001); end
  def test_costs_bg139; assert_in_epsilon(3615.1197865893582, worksheet.costs_bg139, 0.001); end
  def test_costs_bh139; assert_in_epsilon(2481.558575960323, worksheet.costs_bh139, 0.001); end
  def test_costs_bi139; assert_in_epsilon(1650.6555346325688, worksheet.costs_bi139, 0.001); end
  def test_costs_bj139; assert_in_epsilon(1093.7079486496596, worksheet.costs_bj139, 0.001); end
  def test_costs_bk139; assert_in_epsilon(699.7928634908803, worksheet.costs_bk139, 0.001); end
  def test_costs_bl139; assert_in_epsilon(458.18802938943514, worksheet.costs_bl139, 0.001); end
  def test_costs_z139; assert_in_epsilon(29233.07815602963, worksheet.costs_z139, 0.001); end
  def test_costs_bn139; assert_in_epsilon(29233.07815602963, worksheet.costs_bn139, 0.001); end
  def test_costs_bo139; assert_in_epsilon(18608.95978561073, worksheet.costs_bo139, 0.001); end
  def test_costs_bp139; assert_in_epsilon(12004.04108966305, worksheet.costs_bp139, 0.001); end
  def test_costs_bq139; assert_in_epsilon(7506.299506919154, worksheet.costs_bq139, 0.001); end
  def test_costs_br139; assert_in_epsilon(4771.993312758039, worksheet.costs_br139, 0.001); end
  def test_costs_bs139; assert_in_epsilon(2881.6838938012293, worksheet.costs_bs139, 0.001); end
  def test_costs_bt139; assert_in_epsilon(1778.1445411046725, worksheet.costs_bt139, 0.001); end
  def test_costs_bu139; assert_in_epsilon(1103.9885834940349, worksheet.costs_bu139, 0.001); end
  def test_costs_bv139; assert_in_epsilon(700.5093662517803, worksheet.costs_bv139, 0.001); end
  def test_costs_aj139; assert_in_epsilon(85174.66154983676, worksheet.costs_aj139, 0.001); end
  def test_costs_bx139; assert_in_epsilon(85174.66154983676, worksheet.costs_bx139, 0.001); end
  def test_costs_by139; assert_in_epsilon(56819.846048884654, worksheet.costs_by139, 0.001); end
  def test_costs_bz139; assert_in_epsilon(45559.813012493, worksheet.costs_bz139, 0.001); end
  def test_costs_ca139; assert_in_epsilon(26493.744913273338, worksheet.costs_ca139, 0.001); end
  def test_costs_cb139; assert_in_epsilon(17357.298786878797, worksheet.costs_cb139, 0.001); end
  def test_costs_cc139; assert_in_epsilon(10713.349826524045, worksheet.costs_cc139, 0.001); end
  def test_costs_cd139; assert_in_epsilon(6865.163936910885, worksheet.costs_cd139, 0.001); end
  def test_costs_ce139; assert_in_epsilon(4329.79084343151, worksheet.costs_ce139, 0.001); end
  def test_costs_cf139; assert_in_epsilon(2808.7576829201394, worksheet.costs_cf139, 0.001); end
  def test_costs_o141; assert_equal("Average per  year", worksheet.costs_o141); end
  def test_costs_y141; assert_equal("Average per  year", worksheet.costs_y141); end
  def test_costs_ai141; assert_equal("Average per  year", worksheet.costs_ai141); end
  def test_costs_as141; assert_equal("Average per  year", worksheet.costs_as141); end
  def test_costs_at142; assert_equal("C1.Average", worksheet.costs_at142); end
  def test_costs_au142; assert_equal("Average estimate of capital costs in that year", worksheet.costs_au142); end
  def test_costs_bd142; assert_equal("C2.Average", worksheet.costs_bd142); end
  def test_costs_be142; assert_equal("Average estimate of O&M costs in that year", worksheet.costs_be142); end
  def test_costs_bn142; assert_equal("C3.Average", worksheet.costs_bn142); end
  def test_costs_bo142; assert_equal("Average estimate of fuel costs in that year", worksheet.costs_bo142); end
  def test_costs_bx142; assert_equal("Average estimate of total cash flows", worksheet.costs_bx142); end
  def test_costs_c143; assert_equal("AVERAGE", worksheet.costs_c143); end
  def test_costs_d143; assert_equal("Buildings", worksheet.costs_d143); end
  def test_costs_e143; assert_equal("MEUR", worksheet.costs_e143); end
  def test_costs_f143; assert_in_epsilon(29979.501839937628, worksheet.costs_f143, 0.001); end
  def test_costs_g143; assert_in_epsilon(30867.602889708454, worksheet.costs_g143, 0.001); end
  def test_costs_h143; assert_in_epsilon(47626.06446489568, worksheet.costs_h143, 0.001); end
  def test_costs_i143; assert_in_epsilon(37504.53642902616, worksheet.costs_i143, 0.001); end
  def test_costs_j143; assert_in_epsilon(39050.76696833305, worksheet.costs_j143, 0.001); end
  def test_costs_k143; assert_in_epsilon(37177.4566740718, worksheet.costs_k143, 0.001); end
  def test_costs_l143; assert_in_epsilon(38804.72483342585, worksheet.costs_l143, 0.001); end
  def test_costs_m143; assert_in_epsilon(38860.4258518452, worksheet.costs_m143, 0.001); end
  def test_costs_n143; assert_in_epsilon(42139.46584040129, worksheet.costs_n143, 0.001); end
  def test_costs_o143; assert_in_epsilon(38001.17175462723, worksheet.costs_o143, 0.001); end
  def test_costs_p143; assert_in_epsilon(410.6070558012177, worksheet.costs_p143, 0.001); end
  def test_costs_q143; assert_in_epsilon(457.94512141251494, worksheet.costs_q143, 0.001); end
  def test_costs_r143; assert_in_epsilon(513.5966681656481, worksheet.costs_r143, 0.001); end
  def test_costs_s143; assert_in_epsilon(567.0548207598123, worksheet.costs_s143, 0.001); end
  def test_costs_t143; assert_in_epsilon(619.4822441442996, worksheet.costs_t143, 0.001); end
  def test_costs_u143; assert_in_epsilon(665.612171603787, worksheet.costs_u143, 0.001); end
  def test_costs_v143; assert_in_epsilon(715.5916642869587, worksheet.costs_v143, 0.001); end
  def test_costs_w143; assert_in_epsilon(767.2565982139074, worksheet.costs_w143, 0.001); end
  def test_costs_x143; assert_in_epsilon(813.8924887123362, worksheet.costs_x143, 0.001); end
  def test_costs_y143; assert_in_epsilon(614.559870344498, worksheet.costs_y143, 0.001); end
  def test_costs_z143; assert_in_epsilon(3736.092100543493, worksheet.costs_z143, 0.001); end
  def test_costs_aa143; assert_in_epsilon(4305.597769763208, worksheet.costs_aa143, 0.001); end
  def test_costs_ab143; assert_in_epsilon(4554.055476697156, worksheet.costs_ab143, 0.001); end
  def test_costs_ac143; assert_in_epsilon(4213.3545884030955, worksheet.costs_ac143, 0.001); end
  def test_costs_ad143; assert_in_epsilon(3884.75726626959, worksheet.costs_ad143, 0.001); end
  def test_costs_ae143; assert_in_epsilon(3526.9408254120544, worksheet.costs_ae143, 0.001); end
  def test_costs_af143; assert_in_epsilon(3085.744627165317, worksheet.costs_af143, 0.001); end
  def test_costs_ag143; assert_in_epsilon(2824.1474382902893, worksheet.costs_ag143, 0.001); end
  def test_costs_ah143; assert_in_epsilon(2374.2930553605443, worksheet.costs_ah143, 0.001); end
  def test_costs_ai143; assert_in_epsilon(3611.664794211638, worksheet.costs_ai143, 0.001); end
  def test_costs_aj143; assert_in_epsilon(34126.200996282336, worksheet.costs_aj143, 0.001); end
  def test_costs_ak132; assert_in_epsilon(41942.80044961027, worksheet.costs_ak132, 0.001); end
  def test_costs_ak63; assert_in_epsilon(29319.491112158063, worksheet.costs_ak63, 0.001); end
  def test_costs_ak143; assert_in_epsilon(35631.145780884166, worksheet.costs_ak143, 0.001); end
  def test_costs_al132; assert_in_epsilon(61739.777985727196, worksheet.costs_al132, 0.001); end
  def test_costs_al63; assert_in_epsilon(43647.655233789774, worksheet.costs_al63, 0.001); end
  def test_costs_al143; assert_in_epsilon(52693.716609758485, worksheet.costs_al143, 0.001); end
  def test_costs_am132; assert_in_epsilon(50005.152660110434, worksheet.costs_am132, 0.001); end
  def test_costs_am63; assert_in_epsilon(34564.73901626768, worksheet.costs_am63, 0.001); end
  def test_costs_am143; assert_in_epsilon(42284.94583818906, worksheet.costs_am143, 0.001); end
  def test_costs_an132; assert_in_epsilon(51591.631943043634, worksheet.costs_an132, 0.001); end
  def test_costs_an63; assert_in_epsilon(35518.38101445025, worksheet.costs_an63, 0.001); end
  def test_costs_an143; assert_in_epsilon(43555.006478746946, worksheet.costs_an143, 0.001); end
  def test_costs_ao132; assert_in_epsilon(49165.066892054834, worksheet.costs_ao132, 0.001); end
  def test_costs_ao63; assert_in_epsilon(33574.95245012044, worksheet.costs_ao63, 0.001); end
  def test_costs_ao143; assert_in_epsilon(41370.00967108764, worksheet.costs_ao143, 0.001); end
  def test_costs_ap132; assert_in_epsilon(50665.12112820205, worksheet.costs_ap132, 0.001); end
  def test_costs_ap63; assert_in_epsilon(34547.00112155419, worksheet.costs_ap63, 0.001); end
  def test_costs_ap143; assert_in_epsilon(42606.06112487812, worksheet.costs_ap143, 0.001); end
  def test_costs_aq132; assert_in_epsilon(50539.62128401829, worksheet.costs_aq132, 0.001); end
  def test_costs_aq63; assert_in_epsilon(34364.038492680505, worksheet.costs_aq63, 0.001); end
  def test_costs_aq143; assert_in_epsilon(42451.8298883494, worksheet.costs_aq143, 0.001); end
  def test_costs_ar132; assert_in_epsilon(53794.54653377312, worksheet.costs_ar132, 0.001); end
  def test_costs_ar63; assert_in_epsilon(36860.75623517519, worksheet.costs_ar63, 0.001); end
  def test_costs_ar143; assert_in_epsilon(45327.65138447416, worksheet.costs_ar143, 0.001); end
  def test_costs_as143; assert_in_epsilon(42227.396419183366, worksheet.costs_as143, 0.001); end
  def test_costs_at143; assert_in_epsilon(29979.501839937628, worksheet.costs_at143, 0.001); end
  def test_costs_au143; assert_in_epsilon(19166.35282594237, worksheet.costs_au143, 0.001); end
  def test_costs_av143; assert_in_epsilon(18361.909556378796, worksheet.costs_av143, 0.001); end
  def test_costs_aw143; assert_in_epsilon(8978.287836385016, worksheet.costs_aw143, 0.001); end
  def test_costs_ax143; assert_in_epsilon(5804.647679298407, worksheet.costs_ax143, 0.001); end
  def test_costs_ay143; assert_in_epsilon(3431.3304734180083, worksheet.costs_ay143, 0.001); end
  def test_costs_az143; assert_in_epsilon(2223.8426414535415, worksheet.costs_az143, 0.001); end
  def test_costs_ba143; assert_in_epsilon(1382.8133859687648, worksheet.costs_ba143, 0.001); end
  def test_costs_bb143; assert_in_epsilon(931.0684701149071, worksheet.costs_bb143, 0.001); end
  def test_costs_bc143; assert_in_epsilon(90259.75470889742, worksheet.costs_bc143, 0.001); end
  def test_costs_bd143; assert_in_epsilon(410.6070558012177, worksheet.costs_bd143, 0.001); end
  def test_costs_be143; assert_in_epsilon(284.3478906759441, worksheet.costs_be143, 0.001); end
  def test_costs_bf143; assert_in_epsilon(198.01374888463153, worksheet.costs_bf143, 0.001); end
  def test_costs_bg143; assert_in_epsilon(135.74841564635508, worksheet.costs_bg143, 0.001); end
  def test_costs_bh143; assert_in_epsilon(92.0820882661469, worksheet.costs_bh143, 0.001); end
  def test_costs_bi143; assert_in_epsilon(61.43333977697477, worksheet.costs_bi143, 0.001); end
  def test_costs_bj143; assert_in_epsilon(41.00952303466067, worksheet.costs_bj143, 0.001); end
  def test_costs_bk143; assert_in_epsilon(27.302137617533894, worksheet.costs_bk143, 0.001); end
  def test_costs_bl143; assert_in_epsilon(17.98289606169799, worksheet.costs_bl143, 0.001); end
  def test_costs_bm143; assert_in_epsilon(1268.5270957651626, worksheet.costs_bm143, 0.001); end
  def test_costs_bn143; assert_in_epsilon(3736.092100543493, worksheet.costs_bn143, 0.001); end
  def test_costs_bo143; assert_in_epsilon(2673.437463761918, worksheet.costs_bo143, 0.001); end
  def test_costs_bp143; assert_in_epsilon(1755.7855287303946, worksheet.costs_bp143, 0.001); end
  def test_costs_bq143; assert_in_epsilon(1008.6435896367848, worksheet.costs_bq143, 0.001); end
  def test_costs_br143; assert_in_epsilon(577.4444140514654, worksheet.costs_br143, 0.001); end
  def test_costs_bs143; assert_in_epsilon(325.52252399284373, worksheet.costs_bs143, 0.001); end
  def test_costs_bt143; assert_in_epsilon(176.83956043969624, worksheet.costs_bt143, 0.001); end
  def test_costs_bu143; assert_in_epsilon(100.49475259241854, worksheet.costs_bu143, 0.001); end
  def test_costs_bv143; assert_in_epsilon(52.459834470411, worksheet.costs_bv143, 0.001); end
  def test_costs_bw143; assert_in_epsilon(10406.719768219426, worksheet.costs_bw143, 0.001); end
  def test_costs_bx143; assert_in_epsilon(34126.200996282336, worksheet.costs_bx143, 0.001); end
  def test_costs_by143; assert_in_epsilon(22124.13818038022, worksheet.costs_by143, 0.001); end
  def test_costs_bz143; assert_in_epsilon(20315.708833993827, worksheet.costs_bz143, 0.001); end
  def test_costs_ca143; assert_in_epsilon(10122.679841668156, worksheet.costs_ca143, 0.001); end
  def test_costs_cb143; assert_in_epsilon(6474.174181616019, worksheet.costs_cb143, 0.001); end
  def test_costs_cc143; assert_in_epsilon(3818.2863371878266, worksheet.costs_cc143, 0.001); end
  def test_costs_cd143; assert_in_epsilon(2441.691724927898, worksheet.costs_cd143, 0.001); end
  def test_costs_ce143; assert_in_epsilon(1510.6102761787174, worksheet.costs_ce143, 0.001); end
  def test_costs_cf143; assert_in_epsilon(1001.5112006470158, worksheet.costs_cf143, 0.001); end
  def test_costs_cg143; assert_in_epsilon(101935.001572882, worksheet.costs_cg143, 0.001); end
  def test_costs_d144; assert_equal("Transport", worksheet.costs_d144); end
  def test_costs_e144; assert_equal("MEUR", worksheet.costs_e144); end
  def test_costs_f144; assert_in_epsilon(6701.360579062937, worksheet.costs_f144, 0.001); end
  def test_costs_g144; assert_in_epsilon(8174.883256856105, worksheet.costs_g144, 0.001); end
  def test_costs_h144; assert_in_epsilon(11143.298749343194, worksheet.costs_h144, 0.001); end
  def test_costs_i144; assert_in_epsilon(11105.519421072964, worksheet.costs_i144, 0.001); end
  def test_costs_j144; assert_in_epsilon(11225.828613235848, worksheet.costs_j144, 0.001); end
  def test_costs_k144; assert_in_epsilon(10497.278022476517, worksheet.costs_k144, 0.001); end
  def test_costs_l144; assert_in_epsilon(9697.072477075864, worksheet.costs_l144, 0.001); end
  def test_costs_m144; assert_in_epsilon(9033.186095049552, worksheet.costs_m144, 0.001); end
  def test_costs_n144; assert_in_epsilon(7236.05713202038, worksheet.costs_n144, 0.001); end
  def test_costs_o144; assert_in_epsilon(9423.831594021483, worksheet.costs_o144, 0.001); end
  def test_costs_p144; assert_in_epsilon(7523.183585097226, worksheet.costs_p144, 0.001); end
  def test_costs_q144; assert_in_epsilon(8280.676490520274, worksheet.costs_q144, 0.001); end
  def test_costs_r144; assert_in_epsilon(8972.757482081799, worksheet.costs_r144, 0.001); end
  def test_costs_s144; assert_in_epsilon(9282.044091187618, worksheet.costs_s144, 0.001); end
  def test_costs_t144; assert_in_epsilon(9404.488847130311, worksheet.costs_t144, 0.001); end
  def test_costs_u144; assert_in_epsilon(9261.032212968521, worksheet.costs_u144, 0.001); end
  def test_costs_v144; assert_in_epsilon(8981.523384484131, worksheet.costs_v144, 0.001); end
  def test_costs_w144; assert_in_epsilon(8550.652316645599, worksheet.costs_w144, 0.001); end
  def test_costs_x144; assert_in_epsilon(8036.793066337138, worksheet.costs_x144, 0.001); end
  def test_costs_y144; assert_in_epsilon(8699.23905293918, worksheet.costs_y144, 0.001); end
  def test_costs_z144; assert_in_epsilon(4696.82362095096, worksheet.costs_z144, 0.001); end
  def test_costs_aa144; assert_in_epsilon(4432.1908305461375, worksheet.costs_aa144, 0.001); end
  def test_costs_ab144; assert_in_epsilon(4873.874785380885, worksheet.costs_ab144, 0.001); end
  def test_costs_ac144; assert_in_epsilon(5026.106754900582, worksheet.costs_ac144, 0.001); end
  def test_costs_ad144; assert_in_epsilon(4978.014548176614, worksheet.costs_ad144, 0.001); end
  def test_costs_ae144; assert_in_epsilon(4545.507824260005, worksheet.costs_ae144, 0.001); end
  def test_costs_af144; assert_in_epsilon(4277.162164905082, worksheet.costs_af144, 0.001); end
  def test_costs_ag144; assert_in_epsilon(4070.589022216618, worksheet.costs_ag144, 0.001); end
  def test_costs_ah144; assert_in_epsilon(3812.1497515417054, worksheet.costs_ah144, 0.001); end
  def test_costs_ai144; assert_in_epsilon(4523.602144764288, worksheet.costs_ai144, 0.001); end
  def test_costs_aj144; assert_in_epsilon(18921.367785111124, worksheet.costs_aj144, 0.001); end
  def test_costs_ak133; assert_in_epsilon(22923.519911411553, worksheet.costs_ak133, 0.001); end
  def test_costs_ak64; assert_in_epsilon(18851.981244433475, worksheet.costs_ak64, 0.001); end
  def test_costs_ak144; assert_in_epsilon(20887.750577922514, worksheet.costs_ak144, 0.001); end
  def test_costs_al133; assert_in_epsilon(27757.32666119577, worksheet.costs_al133, 0.001); end
  def test_costs_al64; assert_in_epsilon(22222.535372415976, worksheet.costs_al64, 0.001); end
  def test_costs_al144; assert_in_epsilon(24989.931016805873, worksheet.costs_al144, 0.001); end
  def test_costs_am133; assert_in_epsilon(28923.083860610768, worksheet.costs_am133, 0.001); end
  def test_costs_am64; assert_in_epsilon(21904.256673711567, worksheet.costs_am64, 0.001); end
  def test_costs_am144; assert_in_epsilon(25413.670267161167, worksheet.costs_am144, 0.001); end
  def test_costs_an133; assert_in_epsilon(30039.333512378646, worksheet.costs_an133, 0.001); end
  def test_costs_an64; assert_in_epsilon(21177.330504706904, worksheet.costs_an64, 0.001); end
  def test_costs_an144; assert_in_epsilon(25608.332008542777, worksheet.costs_an144, 0.001); end
  def test_costs_ao133; assert_in_epsilon(29441.70374112698, worksheet.costs_ao133, 0.001); end
  def test_costs_ao64; assert_in_epsilon(19165.932378283112, worksheet.costs_ao64, 0.001); end
  def test_costs_ao144; assert_in_epsilon(24303.818059705045, worksheet.costs_ao144, 0.001); end
  def test_costs_ap133; assert_in_epsilon(28833.613027994823, worksheet.costs_ap133, 0.001); end
  def test_costs_ap64; assert_in_epsilon(17077.903024935335, worksheet.costs_ap64, 0.001); end
  def test_costs_ap144; assert_in_epsilon(22955.75802646508, worksheet.costs_ap144, 0.001); end
  def test_costs_aq133; assert_in_epsilon(28262.223770811524, worksheet.costs_aq133, 0.001); end
  def test_costs_aq64; assert_in_epsilon(15046.631097012016, worksheet.costs_aq64, 0.001); end
  def test_costs_aq144; assert_in_epsilon(21654.42743391177, worksheet.costs_aq144, 0.001); end
  def test_costs_ar133; assert_in_epsilon(26262.846277446384, worksheet.costs_ar133, 0.001); end
  def test_costs_ar64; assert_in_epsilon(11907.153622352062, worksheet.costs_ar64, 0.001); end
  def test_costs_ar144; assert_in_epsilon(19084.999949899222, worksheet.costs_ar144, 0.001); end
  def test_costs_as144; assert_in_epsilon(22646.672791724952, worksheet.costs_as144, 0.001); end
  def test_costs_at144; assert_in_epsilon(6701.360579062937, worksheet.costs_at144, 0.001); end
  def test_costs_au144; assert_in_epsilon(5075.959327701225, worksheet.costs_au144, 0.001); end
  def test_costs_av144; assert_in_epsilon(4296.224054917759, worksheet.costs_av144, 0.001); end
  def test_costs_aw144; assert_in_epsilon(2658.5730535197017, worksheet.costs_aw144, 0.001); end
  def test_costs_ax144; assert_in_epsilon(1668.6478926486157, worksheet.costs_ax144, 0.001); end
  def test_costs_ay144; assert_in_epsilon(968.8567532266272, worksheet.costs_ay144, 0.001); end
  def test_costs_az144; assert_in_epsilon(555.725194917791, worksheet.costs_az144, 0.001); end
  def test_costs_ba144; assert_in_epsilon(321.43782206103435, worksheet.costs_ba144, 0.001); end
  def test_costs_bb144; assert_in_epsilon(159.88016243705948, worksheet.costs_bb144, 0.001); end
  def test_costs_bc144; assert_in_epsilon(22406.66484049275, worksheet.costs_bc144, 0.001); end
  def test_costs_bd144; assert_in_epsilon(7523.183585097226, worksheet.costs_bd144, 0.001); end
  def test_costs_be144; assert_in_epsilon(5141.648602318688, worksheet.costs_be144, 0.001); end
  def test_costs_bf144; assert_in_epsilon(3459.386434895257, worksheet.costs_bf144, 0.001); end
  def test_costs_bg144; assert_in_epsilon(2222.0475573243375, worksheet.costs_bg144, 0.001); end
  def test_costs_bh144; assert_in_epsilon(1397.917341950044, worksheet.costs_bh144, 0.001); end
  def test_costs_bi144; assert_in_epsilon(854.756212245874, worksheet.costs_bi144, 0.001); end
  def test_costs_bj144; assert_in_epsilon(514.7181116053953, worksheet.costs_bj144, 0.001); end
  def test_costs_bk144; assert_in_epsilon(304.2672905155755, worksheet.costs_bk144, 0.001); end
  def test_costs_bl144; assert_in_epsilon(177.57236537465693, worksheet.costs_bl144, 0.001); end
  def test_costs_bm144; assert_in_epsilon(21595.497501327052, worksheet.costs_bm144, 0.001); end
  def test_costs_bn144; assert_in_epsilon(4696.82362095096, worksheet.costs_bn144, 0.001); end
  def test_costs_bo144; assert_in_epsilon(2752.0417945533627, worksheet.costs_bo144, 0.001); end
  def test_costs_bp144; assert_in_epsilon(1879.0897170233982, worksheet.costs_bp144, 0.001); end
  def test_costs_bq144; assert_in_epsilon(1203.2099964038457, worksheet.costs_bq144, 0.001); end
  def test_costs_br144; assert_in_epsilon(739.9501427979392, worksheet.costs_br144, 0.001); end
  def test_costs_bs144; assert_in_epsilon(419.5321818617318, worksheet.costs_bs144, 0.001); end
  def test_costs_bt144; assert_in_epsilon(245.11797590520186, worksheet.costs_bt144, 0.001); end
  def test_costs_bu144; assert_in_epsilon(144.84825797222632, worksheet.costs_bu144, 0.001); end
  def test_costs_bv144; assert_in_epsilon(84.22917486566458, worksheet.costs_bv144, 0.001); end
  def test_costs_bw144; assert_in_epsilon(12164.84286233433, worksheet.costs_bw144, 0.001); end
  def test_costs_bx144; assert_in_epsilon(18921.367785111124, worksheet.costs_bx144, 0.001); end
  def test_costs_by144; assert_in_epsilon(12969.649724573275, worksheet.costs_by144, 0.001); end
  def test_costs_bz144; assert_in_epsilon(9634.700206836413, worksheet.costs_bz144, 0.001); end
  def test_costs_ca144; assert_in_epsilon(6083.830607247886, worksheet.costs_ca144, 0.001); end
  def test_costs_cb144; assert_in_epsilon(3806.515377396599, worksheet.costs_cb144, 0.001); end
  def test_costs_cc144; assert_in_epsilon(2243.145147334233, worksheet.costs_cc144, 0.001); end
  def test_costs_cd144; assert_in_epsilon(1315.5612824283883, worksheet.costs_cd144, 0.001); end
  def test_costs_ce144; assert_in_epsilon(770.5533705488363, worksheet.costs_ce144, 0.001); end
  def test_costs_cf144; assert_in_epsilon(421.68170267738105, worksheet.costs_cf144, 0.001); end
  def test_costs_cg144; assert_in_epsilon(56167.005204154135, worksheet.costs_cg144, 0.001); end
  def test_costs_d145; assert_equal("Industry", worksheet.costs_d145); end
  def test_costs_e145; assert_equal("MEUR", worksheet.costs_e145); end
  def test_costs_f145; assert_in_epsilon(5.5668597011630485, worksheet.costs_f145, 0.001); end
  def test_costs_g145; assert_in_epsilon(288.1752815439572, worksheet.costs_g145, 0.001); end
  def test_costs_h145; assert_in_epsilon(722.6610536012342, worksheet.costs_h145, 0.001); end
  def test_costs_i145; assert_in_epsilon(978.3745468578397, worksheet.costs_i145, 0.001); end
  def test_costs_j145; assert_in_epsilon(1275.4696651827876, worksheet.costs_j145, 0.001); end
  def test_costs_k145; assert_in_epsilon(1469.697112242839, worksheet.costs_k145, 0.001); end
  def test_costs_l145; assert_in_epsilon(1588.3250298472512, worksheet.costs_l145, 0.001); end
  def test_costs_m145; assert_in_epsilon(1708.727848757298, worksheet.costs_m145, 0.001); end
  def test_costs_n145; assert_in_epsilon(2131.921820897541, worksheet.costs_n145, 0.001); end
  def test_costs_o145; assert_in_epsilon(1129.8799131813237, worksheet.costs_o145, 0.001); end
  def test_costs_p145; assert_in_delta(0, (worksheet.costs_p145||0), 0.001); end
  def test_costs_q145; assert_in_delta(0, (worksheet.costs_q145||0), 0.001); end
  def test_costs_r145; assert_in_delta(0, (worksheet.costs_r145||0), 0.001); end
  def test_costs_s145; assert_in_delta(0, (worksheet.costs_s145||0), 0.001); end
  def test_costs_t145; assert_in_delta(0, (worksheet.costs_t145||0), 0.001); end
  def test_costs_u145; assert_in_delta(0, (worksheet.costs_u145||0), 0.001); end
  def test_costs_v145; assert_in_delta(0, (worksheet.costs_v145||0), 0.001); end
  def test_costs_w145; assert_in_delta(0, (worksheet.costs_w145||0), 0.001); end
  def test_costs_x145; assert_in_delta(0, (worksheet.costs_x145||0), 0.001); end
  def test_costs_y145; assert_in_delta(0, (worksheet.costs_y145||0), 0.001); end
  def test_costs_z145; assert_in_epsilon(5255.553137615401, worksheet.costs_z145, 0.001); end
  def test_costs_aa145; assert_in_epsilon(5771.3154504792, worksheet.costs_aa145, 0.001); end
  def test_costs_ab145; assert_in_epsilon(5360.433318773328, worksheet.costs_ab145, 0.001); end
  def test_costs_ac145; assert_in_epsilon(4891.689462883187, worksheet.costs_ac145, 0.001); end
  def test_costs_ad145; assert_in_epsilon(4634.803618459024, worksheet.costs_ad145, 0.001); end
  def test_costs_ae145; assert_in_epsilon(4258.931806991106, worksheet.costs_ae145, 0.001); end
  def test_costs_af145; assert_in_epsilon(3848.481955933805, worksheet.costs_af145, 0.001); end
  def test_costs_ag145; assert_in_epsilon(3550.7053445756665, worksheet.costs_ag145, 0.001); end
  def test_costs_ah145; assert_in_epsilon(3215.2960771506496, worksheet.costs_ah145, 0.001); end
  def test_costs_ai145; assert_in_epsilon(4531.9122414290405, worksheet.costs_ai145, 0.001); end
  def test_costs_aj145; assert_in_epsilon(5261.119997316566, worksheet.costs_aj145, 0.001); end
  def test_costs_ak134; assert_in_epsilon(6968.414341826631, worksheet.costs_ak134, 0.001); end
  def test_costs_ak65; assert_in_epsilon(5150.567122219684, worksheet.costs_ak65, 0.001); end
  def test_costs_ak145; assert_in_epsilon(6059.490732023158, worksheet.costs_ak145, 0.001); end
  def test_costs_al134; assert_in_epsilon(6995.5585282307475, worksheet.costs_al134, 0.001); end
  def test_costs_al65; assert_in_epsilon(5170.63021651838, worksheet.costs_al65, 0.001); end
  def test_costs_al145; assert_in_epsilon(6083.094372374564, worksheet.costs_al145, 0.001); end
  def test_costs_am134; assert_in_epsilon(6750.5736112021805, worksheet.costs_am134, 0.001); end
  def test_costs_am65; assert_in_epsilon(4989.554408279872, worksheet.costs_am65, 0.001); end
  def test_costs_am145; assert_in_epsilon(5870.064009741027, worksheet.costs_am145, 0.001); end
  def test_costs_an134; assert_in_epsilon(6796.814276188083, worksheet.costs_an134, 0.001); end
  def test_costs_an65; assert_in_epsilon(5023.73229109554, worksheet.costs_an65, 0.001); end
  def test_costs_an145; assert_in_epsilon(5910.273283641811, worksheet.costs_an145, 0.001); end
  def test_costs_ao134; assert_in_epsilon(6587.923257119038, worksheet.costs_ao134, 0.001); end
  def test_costs_ao65; assert_in_epsilon(4869.334581348854, worksheet.costs_ao65, 0.001); end
  def test_costs_ao145; assert_in_epsilon(5728.628919233946, worksheet.costs_ao145, 0.001); end
  def test_costs_ap134; assert_in_epsilon(6252.328033648214, worksheet.costs_ap134, 0.001); end
  def test_costs_ap65; assert_in_epsilon(4621.285937913898, worksheet.costs_ap65, 0.001); end
  def test_costs_ap145; assert_in_epsilon(5436.806985781056, worksheet.costs_ap145, 0.001); end
  def test_costs_aq134; assert_in_epsilon(6048.348172332909, worksheet.costs_aq134, 0.001); end
  def test_costs_aq65; assert_in_epsilon(4470.518214333019, worksheet.costs_aq65, 0.001); end
  def test_costs_aq145; assert_in_epsilon(5259.433193332964, worksheet.costs_aq145, 0.001); end
  def test_costs_ar134; assert_in_epsilon(6149.300582755421, worksheet.costs_ar134, 0.001); end
  def test_costs_ar65; assert_in_epsilon(4545.135213340962, worksheet.costs_ar65, 0.001); end
  def test_costs_ar145; assert_in_epsilon(5347.217898048191, worksheet.costs_ar145, 0.001); end
  def test_costs_as145; assert_in_epsilon(5661.792154610365, worksheet.costs_as145, 0.001); end
  def test_costs_at145; assert_in_epsilon(5.5668597011630485, worksheet.costs_at145, 0.001); end
  def test_costs_au145; assert_in_epsilon(178.93417708921837, worksheet.costs_au145, 0.001); end
  def test_costs_av145; assert_in_epsilon(278.6171197480308, worksheet.costs_av145, 0.001); end
  def test_costs_aw145; assert_in_epsilon(234.21508782292483, worksheet.costs_aw145, 0.001); end
  def test_costs_ax145; assert_in_epsilon(189.5904384675091, worksheet.costs_ax145, 0.001); end
  def test_costs_ay145; assert_in_epsilon(135.64716199240135, worksheet.costs_ay145, 0.001); end
  def test_costs_az145; assert_in_epsilon(91.0246096325804, worksheet.costs_az145, 0.001); end
  def test_costs_ba145; assert_in_epsilon(60.80354732208907, worksheet.costs_ba145, 0.001); end
  def test_costs_bb145; assert_in_epsilon(47.10465945879578, worksheet.costs_bb145, 0.001); end
  def test_costs_bc145; assert_in_epsilon(1221.5036612347128, worksheet.costs_bc145, 0.001); end
  def test_costs_bd145; assert_in_delta(0, (worksheet.costs_bd145||0), 0.001); end
  def test_costs_be145; assert_in_delta(0, (worksheet.costs_be145||0), 0.001); end
  def test_costs_bf145; assert_in_delta(0, (worksheet.costs_bf145||0), 0.001); end
  def test_costs_bg145; assert_in_delta(0, (worksheet.costs_bg145||0), 0.001); end
  def test_costs_bh145; assert_in_delta(0, (worksheet.costs_bh145||0), 0.001); end
  def test_costs_bi145; assert_in_delta(0, (worksheet.costs_bi145||0), 0.001); end
  def test_costs_bj145; assert_in_delta(0, (worksheet.costs_bj145||0), 0.001); end
  def test_costs_bk145; assert_in_delta(0, (worksheet.costs_bk145||0), 0.001); end
  def test_costs_bl145; assert_in_delta(0, (worksheet.costs_bl145||0), 0.001); end
  def test_costs_bm145; assert_in_delta(0, (worksheet.costs_bm145||0), 0.001); end
  def test_costs_bn145; assert_in_epsilon(5255.553137615401, worksheet.costs_bn145, 0.001); end
  def test_costs_bo145; assert_in_epsilon(3583.532825303288, worksheet.costs_bo145, 0.001); end
  def test_costs_bp145; assert_in_epsilon(2066.6790944875293, worksheet.costs_bp145, 0.001); end
  def test_costs_bq145; assert_in_epsilon(1171.0315653971481, worksheet.costs_bq145, 0.001); end
  def test_costs_br145; assert_in_epsilon(688.9340250271773, worksheet.costs_br145, 0.001); end
  def test_costs_bs145; assert_in_epsilon(393.0823622942912, worksheet.costs_bs145, 0.001); end
  def test_costs_bt145; assert_in_epsilon(220.55093330021558, worksheet.costs_bt145, 0.001); end
  def test_costs_bu145; assert_in_epsilon(126.34866377505043, worksheet.costs_bu145, 0.001); end
  def test_costs_bv145; assert_in_epsilon(71.04173581262961, worksheet.costs_bv145, 0.001); end
  def test_costs_bw145; assert_in_epsilon(13576.75434301273, worksheet.costs_bw145, 0.001); end
  def test_costs_bx145; assert_in_epsilon(5261.119997316566, worksheet.costs_bx145, 0.001); end
  def test_costs_by145; assert_in_epsilon(3762.4670023925064, worksheet.costs_by145, 0.001); end
  def test_costs_bz145; assert_in_epsilon(2345.2962142355605, worksheet.costs_bz145, 0.001); end
  def test_costs_ca145; assert_in_epsilon(1405.2466532200729, worksheet.costs_ca145, 0.001); end
  def test_costs_cb145; assert_in_epsilon(878.5244634946864, worksheet.costs_cb145, 0.001); end
  def test_costs_cc145; assert_in_epsilon(528.7295242866926, worksheet.costs_cc145, 0.001); end
  def test_costs_cd145; assert_in_epsilon(311.575542932796, worksheet.costs_cd145, 0.001); end
  def test_costs_ce145; assert_in_epsilon(187.1522110971395, worksheet.costs_ce145, 0.001); end
  def test_costs_cf145; assert_in_epsilon(118.1463952714254, worksheet.costs_cf145, 0.001); end
  def test_costs_cg145; assert_in_epsilon(14798.258004247447, worksheet.costs_cg145, 0.001); end
  def test_costs_d146; assert_equal("Electricity", worksheet.costs_d146); end
  def test_costs_e146; assert_equal("MEUR", worksheet.costs_e146); end
  def test_costs_f146; assert_in_epsilon(2948.16545890411, worksheet.costs_f146, 0.001); end
  def test_costs_g135; assert_in_epsilon(3431.7241116877944, worksheet.costs_g135, 0.001); end
  def test_costs_g66; assert_in_epsilon(2784.580830022628, worksheet.costs_g66, 0.001); end
  def test_costs_g146; assert_in_epsilon(3108.1524708552115, worksheet.costs_g146, 0.001); end
  def test_costs_h135; assert_in_epsilon(4218.308389809683, worksheet.costs_h135, 0.001); end
  def test_costs_h66; assert_in_epsilon(3104.9467397474355, worksheet.costs_h66, 0.001); end
  def test_costs_h146; assert_in_epsilon(3661.627564778559, worksheet.costs_h146, 0.001); end
  def test_costs_i135; assert_in_epsilon(6141.544073407348, worksheet.costs_i135, 0.001); end
  def test_costs_i66; assert_in_epsilon(4108.693073178921, worksheet.costs_i66, 0.001); end
  def test_costs_i146; assert_in_epsilon(5125.118573293134, worksheet.costs_i146, 0.001); end
  def test_costs_j135; assert_in_epsilon(7438.095895290218, worksheet.costs_j135, 0.001); end
  def test_costs_j66; assert_in_epsilon(4487.728062941618, worksheet.costs_j66, 0.001); end
  def test_costs_j146; assert_in_epsilon(5962.911979115918, worksheet.costs_j146, 0.001); end
  def test_costs_k135; assert_in_epsilon(8995.457775601537, worksheet.costs_k135, 0.001); end
  def test_costs_k66; assert_in_epsilon(5324.360819878295, worksheet.costs_k66, 0.001); end
  def test_costs_k146; assert_in_epsilon(7159.909297739916, worksheet.costs_k146, 0.001); end
  def test_costs_l135; assert_in_epsilon(10367.698027276567, worksheet.costs_l135, 0.001); end
  def test_costs_l66; assert_in_epsilon(6020.90721091725, worksheet.costs_l66, 0.001); end
  def test_costs_l146; assert_in_epsilon(8194.302619096909, worksheet.costs_l146, 0.001); end
  def test_costs_m135; assert_in_epsilon(12016.634272409734, worksheet.costs_m135, 0.001); end
  def test_costs_m66; assert_in_epsilon(6822.097927452254, worksheet.costs_m66, 0.001); end
  def test_costs_m146; assert_in_epsilon(9419.366099930994, worksheet.costs_m146, 0.001); end
  def test_costs_n135; assert_in_epsilon(13598.204734901652, worksheet.costs_n135, 0.001); end
  def test_costs_n66; assert_in_epsilon(7701.835535062087, worksheet.costs_n66, 0.001); end
  def test_costs_n146; assert_in_epsilon(10650.020134981869, worksheet.costs_n146, 0.001); end
  def test_costs_o146; assert_in_epsilon(6247.730466521846, worksheet.costs_o146, 0.001); end
  def test_costs_p146; assert_in_epsilon(806.5569728815228, worksheet.costs_p146, 0.001); end
  def test_costs_q135; assert_in_epsilon(1157.5926344379086, worksheet.costs_q135, 0.001); end
  def test_costs_q66; assert_in_epsilon(923.8604214284964, worksheet.costs_q66, 0.001); end
  def test_costs_q146; assert_in_epsilon(1040.7265279332025, worksheet.costs_q146, 0.001); end
  def test_costs_r135; assert_in_epsilon(1497.875620994367, worksheet.costs_r135, 0.001); end
  def test_costs_r66; assert_in_epsilon(1159.1541123769607, worksheet.costs_r66, 0.001); end
  def test_costs_r146; assert_in_epsilon(1328.514866685664, worksheet.costs_r146, 0.001); end
  def test_costs_s135; assert_in_epsilon(1992.7203416518473, worksheet.costs_s135, 0.001); end
  def test_costs_s66; assert_in_epsilon(1470.4636454321042, worksheet.costs_s66, 0.001); end
  def test_costs_s146; assert_in_epsilon(1731.5919935419756, worksheet.costs_s146, 0.001); end
  def test_costs_t135; assert_in_epsilon(2570.2705116570137, worksheet.costs_t135, 0.001); end
  def test_costs_t66; assert_in_epsilon(1788.9971730891905, worksheet.costs_t66, 0.001); end
  def test_costs_t146; assert_in_epsilon(2179.633842373102, worksheet.costs_t146, 0.001); end
  def test_costs_u135; assert_in_epsilon(3032.48476257232, worksheet.costs_u135, 0.001); end
  def test_costs_u66; assert_in_epsilon(2067.7898217972015, worksheet.costs_u66, 0.001); end
  def test_costs_u146; assert_in_epsilon(2550.1372921847606, worksheet.costs_u146, 0.001); end
  def test_costs_v135; assert_in_epsilon(3645.4401284185296, worksheet.costs_v135, 0.001); end
  def test_costs_v66; assert_in_epsilon(2469.8933210420464, worksheet.costs_v66, 0.001); end
  def test_costs_v146; assert_in_epsilon(3057.666724730288, worksheet.costs_v146, 0.001); end
  def test_costs_w135; assert_in_epsilon(3837.4984990660496, worksheet.costs_w135, 0.001); end
  def test_costs_w66; assert_in_epsilon(2512.534301477364, worksheet.costs_w66, 0.001); end
  def test_costs_w146; assert_in_epsilon(3175.0164002717065, worksheet.costs_w146, 0.001); end
  def test_costs_x135; assert_in_epsilon(4674.85342598595, worksheet.costs_x135, 0.001); end
  def test_costs_x66; assert_in_epsilon(3028.5436246930913, worksheet.costs_x66, 0.001); end
  def test_costs_x146; assert_in_epsilon(3851.6985253395205, worksheet.costs_x146, 0.001); end
  def test_costs_y146; assert_in_epsilon(2191.2825717713044, worksheet.costs_y146, 0.001); end
  def test_costs_z146; assert_in_epsilon(2279.313890978453, worksheet.costs_z146, 0.001); end
  def test_costs_aa135; assert_in_epsilon(1088.6977374443197, worksheet.costs_aa135, 0.001); end
  def test_costs_aa66; assert_in_epsilon(843.8479787395418, worksheet.costs_aa66, 0.001); end
  def test_costs_aa146; assert_in_epsilon(966.2728580919307, worksheet.costs_aa146, 0.001); end
  def test_costs_ab135; assert_in_epsilon(1593.7404817958075, worksheet.costs_ab135, 0.001); end
  def test_costs_ab66; assert_in_epsilon(1290.830614823726, worksheet.costs_ab66, 0.001); end
  def test_costs_ab146; assert_in_epsilon(1442.2855483097667, worksheet.costs_ab146, 0.001); end
  def test_costs_ac135; assert_in_epsilon(2670.358359366513, worksheet.costs_ac135, 0.001); end
  def test_costs_ac66; assert_in_epsilon(2197.110418196464, worksheet.costs_ac66, 0.001); end
  def test_costs_ac146; assert_in_epsilon(2433.7343887814886, worksheet.costs_ac146, 0.001); end
  def test_costs_ad135; assert_in_epsilon(4084.8329144410604, worksheet.costs_ad135, 0.001); end
  def test_costs_ad66; assert_in_epsilon(3409.659812992173, worksheet.costs_ad66, 0.001); end
  def test_costs_ad146; assert_in_epsilon(3747.2463637166165, worksheet.costs_ad146, 0.001); end
  def test_costs_ae135; assert_in_epsilon(5293.8503501611085, worksheet.costs_ae135, 0.001); end
  def test_costs_ae66; assert_in_epsilon(4490.81745254865, worksheet.costs_ae66, 0.001); end
  def test_costs_ae146; assert_in_epsilon(4892.333901354879, worksheet.costs_ae146, 0.001); end
  def test_costs_af135; assert_in_epsilon(6834.749406216577, worksheet.costs_af135, 0.001); end
  def test_costs_af66; assert_in_epsilon(5866.46699194635, worksheet.costs_af66, 0.001); end
  def test_costs_af146; assert_in_epsilon(6350.608199081464, worksheet.costs_af146, 0.001); end
  def test_costs_ag135; assert_in_epsilon(7989.948086862039, worksheet.costs_ag135, 0.001); end
  def test_costs_ag66; assert_in_epsilon(6914.766073757262, worksheet.costs_ag66, 0.001); end
  def test_costs_ag146; assert_in_epsilon(7452.357080309651, worksheet.costs_ag146, 0.001); end
  def test_costs_ah135; assert_in_epsilon(10116.54087198825, worksheet.costs_ah135, 0.001); end
  def test_costs_ah66; assert_in_epsilon(8859.475549887631, worksheet.costs_ah66, 0.001); end
  def test_costs_ah146; assert_in_epsilon(9488.00821093794, worksheet.costs_ah146, 0.001); end
  def test_costs_ai146; assert_in_epsilon(4339.128937951355, worksheet.costs_ai146, 0.001); end
  def test_costs_aj146; assert_in_epsilon(6034.0363227640855, worksheet.costs_aj146, 0.001); end
  def test_costs_ak135; assert_in_epsilon(5678.014483570022, worksheet.costs_ak135, 0.001); end
  def test_costs_ak66; assert_in_epsilon(4552.289230190665, worksheet.costs_ak66, 0.001); end
  def test_costs_ak146; assert_in_epsilon(5115.151856880344, worksheet.costs_ak146, 0.001); end
  def test_costs_al135; assert_in_epsilon(7309.924492599858, worksheet.costs_al135, 0.001); end
  def test_costs_al66; assert_in_epsilon(5554.931466948123, worksheet.costs_al66, 0.001); end
  def test_costs_al146; assert_in_epsilon(6432.427979773991, worksheet.costs_al146, 0.001); end
  def test_costs_am135; assert_in_epsilon(10804.622774425708, worksheet.costs_am135, 0.001); end
  def test_costs_am66; assert_in_epsilon(7776.267136807488, worksheet.costs_am66, 0.001); end
  def test_costs_am146; assert_in_epsilon(9290.444955616598, worksheet.costs_am146, 0.001); end
  def test_costs_an135; assert_in_epsilon(14093.19932138829, worksheet.costs_an135, 0.001); end
  def test_costs_an66; assert_in_epsilon(9686.38504902298, worksheet.costs_an66, 0.001); end
  def test_costs_an146; assert_in_epsilon(11889.792185205635, worksheet.costs_an146, 0.001); end
  def test_costs_ao135; assert_in_epsilon(17321.792888334963, worksheet.costs_ao135, 0.001); end
  def test_costs_ao66; assert_in_epsilon(11882.968094224147, worksheet.costs_ao66, 0.001); end
  def test_costs_ao146; assert_in_epsilon(14602.380491279555, worksheet.costs_ao146, 0.001); end
  def test_costs_ap135; assert_in_epsilon(20847.887561911673, worksheet.costs_ap135, 0.001); end
  def test_costs_ap66; assert_in_epsilon(14357.267523905648, worksheet.costs_ap66, 0.001); end
  def test_costs_ap146; assert_in_epsilon(17602.57754290866, worksheet.costs_ap146, 0.001); end
  def test_costs_aq135; assert_in_epsilon(23844.08085833782, worksheet.costs_aq135, 0.001); end
  def test_costs_aq66; assert_in_epsilon(16249.398302686881, worksheet.costs_aq66, 0.001); end
  def test_costs_aq146; assert_in_epsilon(20046.739580512352, worksheet.costs_aq146, 0.001); end
  def test_costs_ar135; assert_in_epsilon(28389.599032875853, worksheet.costs_ar135, 0.001); end
  def test_costs_ar66; assert_in_epsilon(19589.854709642812, worksheet.costs_ar66, 0.001); end
  def test_costs_ar146; assert_in_epsilon(23989.726871259332, worksheet.costs_ar146, 0.001); end
  def test_costs_as146; assert_in_epsilon(12778.141976244506, worksheet.costs_as146, 0.001); end
  def test_costs_at146; assert_in_epsilon(2948.16545890411, worksheet.costs_at146, 0.001); end
  def test_costs_au146; assert_in_epsilon(1929.9181444729993, worksheet.costs_au146, 0.001); end
  def test_costs_av146; assert_in_epsilon(1411.7159359905704, worksheet.costs_av146, 0.001); end
  def test_costs_aw146; assert_in_epsilon(1226.9126385206062, worksheet.costs_aw146, 0.001); end
  def test_costs_ax146; assert_in_epsilon(886.3488701644158, worksheet.costs_ax146, 0.001); end
  def test_costs_ay146; assert_in_epsilon(660.8309754921472, worksheet.costs_ay146, 0.001); end
  def test_costs_az146; assert_in_epsilon(469.60362841241545, worksheet.costs_az146, 0.001); end
  def test_costs_ba146; assert_in_epsilon(335.17969103023876, worksheet.costs_ba146, 0.001); end
  def test_costs_bb146; assert_in_epsilon(235.31142970169407, worksheet.costs_bb146, 0.001); end
  def test_costs_bc146; assert_in_epsilon(10103.986772689195, worksheet.costs_bc146, 0.001); end
  def test_costs_bd146; assert_in_epsilon(806.5569728815228, worksheet.costs_bd146, 0.001); end
  def test_costs_be146; assert_in_epsilon(646.2092926670446, worksheet.costs_be146, 0.001); end
  def test_costs_bf146; assert_in_epsilon(512.1999917580264, worksheet.costs_bf146, 0.001); end
  def test_costs_bg146; assert_in_epsilon(414.5293560052487, worksheet.costs_bg146, 0.001); end
  def test_costs_bh146; assert_in_epsilon(323.9886820945419, worksheet.costs_bh146, 0.001); end
  def test_costs_bi146; assert_in_epsilon(235.36746687074773, worksheet.costs_bi146, 0.001); end
  def test_costs_bj146; assert_in_epsilon(175.2304564714134, worksheet.costs_bj146, 0.001); end
  def test_costs_bk146; assert_in_epsilon(112.98010978326957, worksheet.costs_bk146, 0.001); end
  def test_costs_bl146; assert_in_epsilon(85.1030021812341, worksheet.costs_bl146, 0.001); end
  def test_costs_bm146; assert_in_epsilon(3312.165330713049, worksheet.costs_bm146, 0.001); end
  def test_costs_bn146; assert_in_epsilon(2279.313890978453, worksheet.costs_bn146, 0.001); end
  def test_costs_bo146; assert_in_epsilon(599.9794214825927, worksheet.costs_bo146, 0.001); end
  def test_costs_bp146; assert_in_epsilon(556.0635145920229, worksheet.costs_bp146, 0.001); end
  def test_costs_bq146; assert_in_epsilon(582.6166629506088, worksheet.costs_bq146, 0.001); end
  def test_costs_br146; assert_in_epsilon(557.0042946031169, worksheet.costs_br146, 0.001); end
  def test_costs_bs146; assert_in_epsilon(451.5428408410386, worksheet.costs_bs146, 0.001); end
  def test_costs_bt146; assert_in_epsilon(363.9441684718944, worksheet.costs_bt146, 0.001); end
  def test_costs_bu146; assert_in_epsilon(265.1854399887377, worksheet.costs_bu146, 0.001); end
  def test_costs_bv146; assert_in_epsilon(209.63685972796708, worksheet.costs_bv146, 0.001); end
  def test_costs_bw146; assert_in_epsilon(5865.287093636432, worksheet.costs_bw146, 0.001); end
  def test_costs_bx146; assert_in_epsilon(6034.0363227640855, worksheet.costs_bx146, 0.001); end
  def test_costs_by146; assert_in_epsilon(3176.1068586226356, worksheet.costs_by146, 0.001); end
  def test_costs_bz146; assert_in_epsilon(2479.97944234062, worksheet.costs_bz146, 0.001); end
  def test_costs_ca146; assert_in_epsilon(2224.058657476464, worksheet.costs_ca146, 0.001); end
  def test_costs_cb146; assert_in_epsilon(1767.3418468620744, worksheet.costs_cb146, 0.001); end
  def test_costs_cc146; assert_in_epsilon(1347.7412832039336, worksheet.costs_cc146, 0.001); end
  def test_costs_cd146; assert_in_epsilon(1008.7782533557231, worksheet.costs_cd146, 0.001); end
  def test_costs_ce146; assert_in_epsilon(713.345240802246, worksheet.costs_ce146, 0.001); end
  def test_costs_cf146; assert_in_epsilon(530.0512916108953, worksheet.costs_cf146, 0.001); end
  def test_costs_cg146; assert_in_epsilon(19281.439197038675, worksheet.costs_cg146, 0.001); end
  def test_costs_d147; assert_equal("Fossil fuels", worksheet.costs_d147); end
  def test_costs_e147; assert_equal("MEUR", worksheet.costs_e147); end
  def test_costs_f147; assert_in_epsilon(261.34784353300313, worksheet.costs_f147, 0.001); end
  def test_costs_g136; assert_in_epsilon(223.8845341956519, worksheet.costs_g136, 0.001); end
  def test_costs_g67; assert_in_epsilon(74.6281780652173, worksheet.costs_g67, 0.001); end
  def test_costs_g147; assert_in_epsilon(149.2563561304346, worksheet.costs_g147, 0.001); end
  def test_costs_h136; assert_in_epsilon(180.12654844268997, worksheet.costs_h136, 0.001); end
  def test_costs_h67; assert_in_epsilon(60.04218281422999, worksheet.costs_h67, 0.001); end
  def test_costs_h147; assert_in_epsilon(120.08436562845998, worksheet.costs_h147, 0.001); end
  def test_costs_i136; assert_in_epsilon(163.76081771849175, worksheet.costs_i136, 0.001); end
  def test_costs_i67; assert_in_epsilon(54.58693923949725, worksheet.costs_i67, 0.001); end
  def test_costs_i147; assert_in_epsilon(109.1738784789945, worksheet.costs_i147, 0.001); end
  def test_costs_j136; assert_in_epsilon(155.07845994422942, worksheet.costs_j136, 0.001); end
  def test_costs_j67; assert_in_epsilon(51.69281998140981, worksheet.costs_j67, 0.001); end
  def test_costs_j147; assert_in_epsilon(103.38563996281962, worksheet.costs_j147, 0.001); end
  def test_costs_k136; assert_in_epsilon(150.75116373790001, worksheet.costs_k136, 0.001); end
  def test_costs_k67; assert_in_epsilon(50.25038791263334, worksheet.costs_k67, 0.001); end
  def test_costs_k147; assert_in_epsilon(100.50077582526669, worksheet.costs_k147, 0.001); end
  def test_costs_l136; assert_in_epsilon(165.0646941002431, worksheet.costs_l136, 0.001); end
  def test_costs_l67; assert_in_epsilon(55.02156470008103, worksheet.costs_l67, 0.001); end
  def test_costs_l147; assert_in_epsilon(110.04312940016206, worksheet.costs_l147, 0.001); end
  def test_costs_m136; assert_in_epsilon(183.5316937584981, worksheet.costs_m136, 0.001); end
  def test_costs_m67; assert_in_epsilon(61.177231252832705, worksheet.costs_m67, 0.001); end
  def test_costs_m147; assert_in_epsilon(122.35446250566541, worksheet.costs_m147, 0.001); end
  def test_costs_n136; assert_in_delta(0, (worksheet.costs_n136||0), 0.001); end
  def test_costs_n67; assert_in_delta(0, (worksheet.costs_n67||0), 0.001); end
  def test_costs_n147; assert_in_delta(0, (worksheet.costs_n147||0), 0.001); end
  def test_costs_o147; assert_in_epsilon(119.57182794053399, worksheet.costs_o147, 0.001); end
  def test_costs_p147; assert_in_delta(0.23394413186588495, worksheet.costs_p147, 0.001); end
  def test_costs_q136; assert_in_delta(0.1882200088220376, worksheet.costs_q136, 0.001); end
  def test_costs_q67; assert_in_delta(0.1882200088220376, worksheet.costs_q67, 0.001); end
  def test_costs_q147; assert_in_delta(0.1882200088220376, worksheet.costs_q147, 0.001); end
  def test_costs_r136; assert_in_delta(0.17111893178525783, worksheet.costs_r136, 0.001); end
  def test_costs_r67; assert_in_delta(0.17111893178525783, worksheet.costs_r67, 0.001); end
  def test_costs_r147; assert_in_delta(0.17111893178525783, worksheet.costs_r147, 0.001); end
  def test_costs_s136; assert_in_delta(0.16204645762197434, worksheet.costs_s136, 0.001); end
  def test_costs_s67; assert_in_delta(0.16204645762197434, worksheet.costs_s67, 0.001); end
  def test_costs_s147; assert_in_delta(0.16204645762197434, worksheet.costs_s147, 0.001); end
  def test_costs_t136; assert_in_delta(0.15752472699885062, worksheet.costs_t136, 0.001); end
  def test_costs_t67; assert_in_delta(0.15752472699885062, worksheet.costs_t67, 0.001); end
  def test_costs_t147; assert_in_delta(0.15752472699885062, worksheet.costs_t147, 0.001); end
  def test_costs_u136; assert_in_delta(0.15686657431003123, worksheet.costs_u136, 0.001); end
  def test_costs_u67; assert_in_delta(0.15686657431003123, worksheet.costs_u67, 0.001); end
  def test_costs_u147; assert_in_delta(0.15686657431003123, worksheet.costs_u147, 0.001); end
  def test_costs_v136; assert_in_delta(0.15946904426571623, worksheet.costs_v136, 0.001); end
  def test_costs_v67; assert_in_delta(0.15946904426571623, worksheet.costs_v67, 0.001); end
  def test_costs_v147; assert_in_delta(0.15946904426571623, worksheet.costs_v147, 0.001); end
  def test_costs_w136; assert_in_delta(0.16485389595436264, worksheet.costs_w136, 0.001); end
  def test_costs_w67; assert_in_delta(0.16485389595436264, worksheet.costs_w67, 0.001); end
  def test_costs_w147; assert_in_delta(0.16485389595436264, worksheet.costs_w147, 0.001); end
  def test_costs_x136; assert_in_delta(0, (worksheet.costs_x136||0), 0.001); end
  def test_costs_x67; assert_in_delta(0, (worksheet.costs_x67||0), 0.001); end
  def test_costs_x147; assert_in_delta(0, (worksheet.costs_x147||0), 0.001); end
  def test_costs_y147; assert_in_delta(0.1548937524026795, worksheet.costs_y147, 0.001); end
  def test_costs_z147; assert_in_epsilon(12161.043951571908, worksheet.costs_z147, 0.001); end
  def test_costs_aa136; assert_in_epsilon(10837.002964236237, worksheet.costs_aa136, 0.001); end
  def test_costs_aa67; assert_in_epsilon(8009.958712696351, worksheet.costs_aa67, 0.001); end
  def test_costs_aa147; assert_in_epsilon(9423.480838466294, worksheet.costs_aa147, 0.001); end
  def test_costs_ab136; assert_in_epsilon(10305.058287449281, worksheet.costs_ab136, 0.001); end
  def test_costs_ab67; assert_in_epsilon(7616.782212462514, worksheet.costs_ab67, 0.001); end
  def test_costs_ab147; assert_in_epsilon(8960.920249955898, worksheet.costs_ab147, 0.001); end
  def test_costs_ac136; assert_in_epsilon(9503.507149327606, worksheet.costs_ac136, 0.001); end
  def test_costs_ac67; assert_in_epsilon(7024.331371242143, worksheet.costs_ac67, 0.001); end
  def test_costs_ac147; assert_in_epsilon(8263.919260284874, worksheet.costs_ac147, 0.001); end
  def test_costs_ad136; assert_in_epsilon(8904.64484517213, worksheet.costs_ad136, 0.001); end
  def test_costs_ad67; assert_in_epsilon(6581.694015996792, worksheet.costs_ad67, 0.001); end
  def test_costs_ad147; assert_in_epsilon(7743.169430584461, worksheet.costs_ad147, 0.001); end
  def test_costs_ae136; assert_in_epsilon(7702.579683936039, worksheet.costs_ae136, 0.001); end
  def test_costs_ae67; assert_in_epsilon(5693.211070735333, worksheet.costs_ae67, 0.001); end
  def test_costs_ae147; assert_in_epsilon(6697.895377335686, worksheet.costs_ae147, 0.001); end
  def test_costs_af136; assert_in_epsilon(6824.094304212376, worksheet.costs_af136, 0.001); end
  def test_costs_af67; assert_in_epsilon(5043.895790070017, worksheet.costs_af67, 0.001); end
  def test_costs_af147; assert_in_epsilon(5933.995047141197, worksheet.costs_af147, 0.001); end
  def test_costs_ag136; assert_in_epsilon(6088.927549865089, worksheet.costs_ag136, 0.001); end
  def test_costs_ag67; assert_in_epsilon(4500.511667291588, worksheet.costs_ag67, 0.001); end
  def test_costs_ag147; assert_in_epsilon(5294.719608578338, worksheet.costs_ag147, 0.001); end
  def test_costs_ah136; assert_in_epsilon(5492.476842633448, worksheet.costs_ah136, 0.001); end
  def test_costs_ah67; assert_in_epsilon(4059.6567967290703, worksheet.costs_ah67, 0.001); end
  def test_costs_ah147; assert_in_epsilon(4776.0668196812585, worksheet.costs_ah147, 0.001); end
  def test_costs_ai147; assert_in_epsilon(7695.023398177767, worksheet.costs_ai147, 0.001); end
  def test_costs_aj147; assert_in_epsilon(12422.625739236777, worksheet.costs_aj147, 0.001); end
  def test_costs_ak136; assert_in_epsilon(11061.075718440712, worksheet.costs_ak136, 0.001); end
  def test_costs_ak67; assert_in_epsilon(8084.77511077039, worksheet.costs_ak67, 0.001); end
  def test_costs_ak147; assert_in_epsilon(9572.92541460555, worksheet.costs_ak147, 0.001); end
  def test_costs_al136; assert_in_epsilon(10485.355954823757, worksheet.costs_al136, 0.001); end
  def test_costs_al67; assert_in_epsilon(7676.995514208529, worksheet.costs_al67, 0.001); end
  def test_costs_al147; assert_in_epsilon(9081.175734516142, worksheet.costs_al147, 0.001); end
  def test_costs_am136; assert_in_epsilon(9667.43001350372, worksheet.costs_am136, 0.001); end
  def test_costs_am67; assert_in_epsilon(7079.080356939263, worksheet.costs_am67, 0.001); end
  def test_costs_am147; assert_in_epsilon(8373.255185221491, worksheet.costs_am147, 0.001); end
  def test_costs_an136; assert_in_epsilon(9059.880829843358, worksheet.costs_an136, 0.001); end
  def test_costs_an67; assert_in_epsilon(6633.5443607052, worksheet.costs_an67, 0.001); end
  def test_costs_an147; assert_in_epsilon(7846.712595274279, worksheet.costs_an147, 0.001); end
  def test_costs_ao136; assert_in_epsilon(7853.487714248249, worksheet.costs_ao136, 0.001); end
  def test_costs_ao67; assert_in_epsilon(5743.618325222276, worksheet.costs_ao67, 0.001); end
  def test_costs_ao147; assert_in_epsilon(6798.553019735263, worksheet.costs_ao147, 0.001); end
  def test_costs_ap136; assert_in_epsilon(6989.318467356885, worksheet.costs_ap136, 0.001); end
  def test_costs_ap67; assert_in_epsilon(5099.076823814364, worksheet.costs_ap67, 0.001); end
  def test_costs_ap147; assert_in_epsilon(6044.197645585624, worksheet.costs_ap147, 0.001); end
  def test_costs_aq136; assert_in_epsilon(6272.6240975195415, worksheet.costs_aq136, 0.001); end
  def test_costs_aq67; assert_in_epsilon(4561.853752440375, worksheet.costs_aq67, 0.001); end
  def test_costs_aq147; assert_in_epsilon(5417.238924979958, worksheet.costs_aq147, 0.001); end
  def test_costs_ar136; assert_in_epsilon(5492.476842633448, worksheet.costs_ar136, 0.001); end
  def test_costs_ar67; assert_in_epsilon(4059.6567967290703, worksheet.costs_ar67, 0.001); end
  def test_costs_ar147; assert_in_epsilon(4776.0668196812585, worksheet.costs_ar147, 0.001); end
  def test_costs_as147; assert_in_epsilon(7814.750119870705, worksheet.costs_as147, 0.001); end
  def test_costs_at147; assert_in_epsilon(261.34784353300313, worksheet.costs_at147, 0.001); end
  def test_costs_au147; assert_in_epsilon(92.67645412349786, worksheet.costs_au147, 0.001); end
  def test_costs_av147; assert_in_epsilon(46.29772133345503, worksheet.costs_av147, 0.001); end
  def test_costs_aw147; assert_in_epsilon(26.135358506666496, worksheet.costs_aw147, 0.001); end
  def test_costs_ax147; assert_in_epsilon(15.36761660967138, worksheet.costs_ax147, 0.001); end
  def test_costs_ay147; assert_in_epsilon(9.275819422362336, worksheet.costs_ay147, 0.001); end
  def test_costs_az147; assert_in_epsilon(6.30641254665651, worksheet.costs_az147, 0.001); end
  def test_costs_ba147; assert_in_epsilon(4.35387376429931, worksheet.costs_ba147, 0.001); end
  def test_costs_bb147; assert_in_delta(0, (worksheet.costs_bb147||0), 0.001); end
  def test_costs_bc147; assert_in_epsilon(461.7610998396121, worksheet.costs_bc147, 0.001); end
  def test_costs_bd147; assert_in_delta(0.23394413186588495, worksheet.costs_bd147, 0.001); end
  def test_costs_be147; assert_in_delta(0.1168698169039854, worksheet.costs_be147, 0.001); end
  def test_costs_bf147; assert_in_delta(0.06597375584415592, worksheet.costs_bf147, 0.001); end
  def test_costs_bg147; assert_in_delta(0.038792633583137726, worksheet.costs_bg147, 0.001); end
  def test_costs_bh147; assert_in_delta(0.023415046924621902, worksheet.costs_bh147, 0.001); end
  def test_costs_bi147; assert_in_delta(0.014478157056560925, worksheet.costs_bi147, 0.001); end
  def test_costs_bj147; assert_in_delta(0.009138940223188112, worksheet.costs_bj147, 0.001); end
  def test_costs_bk147; assert_in_delta(0.005866177970460157, worksheet.costs_bk147, 0.001); end
  def test_costs_bl147; assert_in_delta(0, (worksheet.costs_bl147||0), 0.001); end
  def test_costs_bm147; assert_in_delta(0.5084786603719952, worksheet.costs_bm147, 0.001); end
  def test_costs_bn147; assert_in_epsilon(12161.043951571908, worksheet.costs_bn147, 0.001); end
  def test_costs_bo147; assert_in_epsilon(5851.240190043086, worksheet.costs_bo147, 0.001); end
  def test_costs_bp147; assert_in_epsilon(3454.822669483696, worksheet.costs_bp147, 0.001); end
  def test_costs_bq147; assert_in_epsilon(1978.316567540897, worksheet.costs_bq147, 0.001); end
  def test_costs_br147; assert_in_epsilon(1150.9727965677155, worksheet.costs_br147, 0.001); end
  def test_costs_bs147; assert_in_epsilon(618.1889395367402, worksheet.costs_bs147, 0.001); end
  def test_costs_bt147; assert_in_epsilon(340.06867144795797, worksheet.costs_bt147, 0.001); end
  def test_costs_bu147; assert_in_epsilon(188.4078465224996, worksheet.costs_bu147, 0.001); end
  def test_costs_bv147; assert_in_epsilon(105.52685323086794, worksheet.costs_bv147, 0.001); end
  def test_costs_bw147; assert_in_epsilon(25848.58848594537, worksheet.costs_bw147, 0.001); end
  def test_costs_bx147; assert_in_epsilon(12422.625739236777, worksheet.costs_bx147, 0.001); end
  def test_costs_by147; assert_in_epsilon(5944.033513983488, worksheet.costs_by147, 0.001); end
  def test_costs_bz147; assert_in_epsilon(3501.1863645729954, worksheet.costs_bz147, 0.001); end
  def test_costs_ca147; assert_in_epsilon(2004.4907186811465, worksheet.costs_ca147, 0.001); end
  def test_costs_cb147; assert_in_epsilon(1166.3638282243114, worksheet.costs_cb147, 0.001); end
  def test_costs_cc147; assert_in_epsilon(627.4792371161591, worksheet.costs_cc147, 0.001); end
  def test_costs_cd147; assert_in_epsilon(346.3842229348377, worksheet.costs_cd147, 0.001); end
  def test_costs_ce147; assert_in_epsilon(192.76758646476935, worksheet.costs_ce147, 0.001); end
  def test_costs_cf147; assert_in_epsilon(105.52685323086794, worksheet.costs_cf147, 0.001); end
  def test_costs_cg147; assert_in_epsilon(26310.858064445354, worksheet.costs_cg147, 0.001); end
  def test_costs_d148; assert_equal("Bioenergy", worksheet.costs_d148); end
  def test_costs_e148; assert_equal("MEUR", worksheet.costs_e148); end
  def test_costs_f148; assert_in_epsilon(367.25828503562303, worksheet.costs_f148, 0.001); end
  def test_costs_g137; assert_in_epsilon(826.3331411936465, worksheet.costs_g137, 0.001); end
  def test_costs_g68; assert_in_epsilon(12.938476124192388, worksheet.costs_g68, 0.001); end
  def test_costs_g148; assert_in_epsilon(419.6358086589194, worksheet.costs_g148, 0.001); end
  def test_costs_h137; assert_in_epsilon(679.8392577963436, worksheet.costs_h137, 0.001); end
  def test_costs_h68; assert_in_epsilon(10.91205995618962, worksheet.costs_h68, 0.001); end
  def test_costs_h148; assert_in_epsilon(345.37565887626664, worksheet.costs_h148, 0.001); end
  def test_costs_i137; assert_in_epsilon(483.2775325522769, worksheet.costs_i137, 0.001); end
  def test_costs_i68; assert_in_epsilon(8.107627594940515, worksheet.costs_i68, 0.001); end
  def test_costs_i148; assert_in_epsilon(245.69258007360872, worksheet.costs_i148, 0.001); end
  def test_costs_j137; assert_in_epsilon(497.7701973625905, worksheet.costs_j137, 0.001); end
  def test_costs_j68; assert_in_epsilon(8.089415626966707, worksheet.costs_j68, 0.001); end
  def test_costs_j148; assert_in_epsilon(252.9298064947786, worksheet.costs_j148, 0.001); end
  def test_costs_k137; assert_in_epsilon(509.3035817006486, worksheet.costs_k137, 0.001); end
  def test_costs_k68; assert_in_epsilon(8.053290534814423, worksheet.costs_k68, 0.001); end
  def test_costs_k148; assert_in_epsilon(258.6784361177315, worksheet.costs_k148, 0.001); end
  def test_costs_l137; assert_in_epsilon(523.7165326885046, worksheet.costs_l137, 0.001); end
  def test_costs_l68; assert_in_epsilon(8.337121841115225, worksheet.costs_l68, 0.001); end
  def test_costs_l148; assert_in_epsilon(266.0268272648099, worksheet.costs_l148, 0.001); end
  def test_costs_m137; assert_in_epsilon(538.0169735409122, worksheet.costs_m137, 0.001); end
  def test_costs_m68; assert_in_epsilon(8.535452006862148, worksheet.costs_m68, 0.001); end
  def test_costs_m148; assert_in_epsilon(273.27621277388715, worksheet.costs_m148, 0.001); end
  def test_costs_n137; assert_in_epsilon(464.2480301355797, worksheet.costs_n137, 0.001); end
  def test_costs_n68; assert_in_epsilon(7.40364707334709, worksheet.costs_n68, 0.001); end
  def test_costs_n148; assert_in_epsilon(235.8258386044634, worksheet.costs_n148, 0.001); end
  def test_costs_o148; assert_in_epsilon(296.0777171000098, worksheet.costs_o148, 0.001); end
  def test_costs_p148; assert_in_epsilon(240.34610712618274, worksheet.costs_p148, 0.001); end
  def test_costs_q137; assert_in_epsilon(698.585041090952, worksheet.costs_q137, 0.001); end
  def test_costs_q68; assert_in_epsilon(18.284429827944432, worksheet.costs_q68, 0.001); end
  def test_costs_q148; assert_in_epsilon(358.43473545944823, worksheet.costs_q148, 0.001); end
  def test_costs_r137; assert_in_epsilon(930.7541794717022, worksheet.costs_r137, 0.001); end
  def test_costs_r68; assert_in_epsilon(22.226043578538697, worksheet.costs_r68, 0.001); end
  def test_costs_r148; assert_in_epsilon(476.4901115251204, worksheet.costs_r148, 0.001); end
  def test_costs_s137; assert_in_epsilon(1090.5227594481275, worksheet.costs_s137, 0.001); end
  def test_costs_s68; assert_in_epsilon(25.412662905635706, worksheet.costs_s68, 0.001); end
  def test_costs_s148; assert_in_epsilon(557.9677111768816, worksheet.costs_s148, 0.001); end
  def test_costs_t137; assert_in_epsilon(1150.743327671014, worksheet.costs_t137, 0.001); end
  def test_costs_t68; assert_in_epsilon(26.742565887949795, worksheet.costs_t68, 0.001); end
  def test_costs_t148; assert_in_epsilon(588.7429467794818, worksheet.costs_t148, 0.001); end
  def test_costs_u137; assert_in_epsilon(1204.8568055906871, worksheet.costs_u137, 0.001); end
  def test_costs_u68; assert_in_epsilon(28.07356925001619, worksheet.costs_u68, 0.001); end
  def test_costs_u148; assert_in_epsilon(616.4651874203516, worksheet.costs_u148, 0.001); end
  def test_costs_v137; assert_in_epsilon(1254.8847663981608, worksheet.costs_v137, 0.001); end
  def test_costs_v68; assert_in_epsilon(29.2749624592101, worksheet.costs_v68, 0.001); end
  def test_costs_v148; assert_in_epsilon(642.0798644286855, worksheet.costs_v148, 0.001); end
  def test_costs_w137; assert_in_epsilon(1303.9340836381018, worksheet.costs_w137, 0.001); end
  def test_costs_w68; assert_in_epsilon(30.467309851234283, worksheet.costs_w68, 0.001); end
  def test_costs_w148; assert_in_epsilon(667.200696744668, worksheet.costs_w148, 0.001); end
  def test_costs_x137; assert_in_epsilon(1352.9159175713942, worksheet.costs_x137, 0.001); end
  def test_costs_x68; assert_in_epsilon(31.673822005302483, worksheet.costs_x68, 0.001); end
  def test_costs_x148; assert_in_epsilon(692.2948697883484, worksheet.costs_x148, 0.001); end
  def test_costs_y148; assert_in_epsilon(537.7802478276855, worksheet.costs_y148, 0.001); end
  def test_costs_z148; assert_in_epsilon(554.550002542891, worksheet.costs_z148, 0.001); end
  def test_costs_aa137; assert_in_epsilon(1198.874673045468, worksheet.costs_aa137, 0.001); end
  def test_costs_aa68; assert_in_epsilon(768.6092747085825, worksheet.costs_aa68, 0.001); end
  def test_costs_aa148; assert_in_epsilon(983.7419738770252, worksheet.costs_aa148, 0.001); end
  def test_costs_ab137; assert_in_epsilon(1804.6344248743003, worksheet.costs_ab137, 0.001); end
  def test_costs_ab68; assert_in_epsilon(1116.5511501610567, worksheet.costs_ab68, 0.001); end
  def test_costs_ab148; assert_in_epsilon(1460.5927875176785, worksheet.costs_ab148, 0.001); end
  def test_costs_ac137; assert_in_epsilon(2225.7217280831655, worksheet.costs_ac137, 0.001); end
  def test_costs_ac68; assert_in_epsilon(1418.8863818593964, worksheet.costs_ac68, 0.001); end
  def test_costs_ac148; assert_in_epsilon(1822.304054971281, worksheet.costs_ac148, 0.001); end
  def test_costs_ad137; assert_in_epsilon(2554.853301280969, worksheet.costs_ad137, 0.001); end
  def test_costs_ad68; assert_in_epsilon(1653.5142492608525, worksheet.costs_ad68, 0.001); end
  def test_costs_ad148; assert_in_epsilon(2104.1837752709107, worksheet.costs_ad148, 0.001); end
  def test_costs_ae137; assert_in_epsilon(2777.797658863665, worksheet.costs_ae137, 0.001); end
  def test_costs_ae68; assert_in_epsilon(1809.8922817587365, worksheet.costs_ae68, 0.001); end
  def test_costs_ae148; assert_in_epsilon(2293.844970311201, worksheet.costs_ae148, 0.001); end
  def test_costs_af137; assert_in_epsilon(2992.887658809866, worksheet.costs_af137, 0.001); end
  def test_costs_af68; assert_in_epsilon(1960.6796159308449, worksheet.costs_af68, 0.001); end
  def test_costs_af148; assert_in_epsilon(2476.7836373703553, worksheet.costs_af148, 0.001); end
  def test_costs_ag137; assert_in_epsilon(3205.887002662062, worksheet.costs_ag137, 0.001); end
  def test_costs_ag68; assert_in_epsilon(2110.1164431268276, worksheet.costs_ag68, 0.001); end
  def test_costs_ag148; assert_in_epsilon(2658.001722894445, worksheet.costs_ag148, 0.001); end
  def test_costs_ah137; assert_in_epsilon(3326.3485831694597, worksheet.costs_ah137, 0.001); end
  def test_costs_ah68; assert_in_epsilon(2204.627876118255, worksheet.costs_ah68, 0.001); end
  def test_costs_ah148; assert_in_epsilon(2765.4882296438573, worksheet.costs_ah148, 0.001); end
  def test_costs_ai148; assert_in_epsilon(1902.165683822183, worksheet.costs_ai148, 0.001); end
  def test_costs_aj148; assert_in_epsilon(1162.1543947046966, worksheet.costs_aj148, 0.001); end
  def test_costs_ak137; assert_in_epsilon(2723.792855330067, worksheet.costs_ak137, 0.001); end
  def test_costs_ak68; assert_in_epsilon(799.8321806607192, worksheet.costs_ak68, 0.001); end
  def test_costs_ak148; assert_in_epsilon(1761.8125179953931, worksheet.costs_ak148, 0.001); end
  def test_costs_al137; assert_in_epsilon(3415.2278621423457, worksheet.costs_al137, 0.001); end
  def test_costs_al68; assert_in_epsilon(1149.6892536957853, worksheet.costs_al68, 0.001); end
  def test_costs_al148; assert_in_epsilon(2282.4585579190652, worksheet.costs_al148, 0.001); end
  def test_costs_am137; assert_in_epsilon(3799.52202008357, worksheet.costs_am137, 0.001); end
  def test_costs_am68; assert_in_epsilon(1452.4066723599724, worksheet.costs_am68, 0.001); end
  def test_costs_am148; assert_in_epsilon(2625.9643462217714, worksheet.costs_am148, 0.001); end
  def test_costs_an137; assert_in_epsilon(4203.366826314573, worksheet.costs_an137, 0.001); end
  def test_costs_an68; assert_in_epsilon(1688.346230775769, worksheet.costs_an68, 0.001); end
  def test_costs_an148; assert_in_epsilon(2945.856528545171, worksheet.costs_an148, 0.001); end
  def test_costs_ao137; assert_in_epsilon(4491.958046155001, worksheet.costs_ao137, 0.001); end
  def test_costs_ao68; assert_in_epsilon(1846.0191415435672, worksheet.costs_ao68, 0.001); end
  def test_costs_ao148; assert_in_epsilon(3168.9885938492844, worksheet.costs_ao148, 0.001); end
  def test_costs_ap137; assert_in_epsilon(4771.488957896531, worksheet.costs_ap137, 0.001); end
  def test_costs_ap68; assert_in_epsilon(1998.2917002311704, worksheet.costs_ap68, 0.001); end
  def test_costs_ap148; assert_in_epsilon(3384.890329063851, worksheet.costs_ap148, 0.001); end
  def test_costs_aq137; assert_in_epsilon(5047.838059841076, worksheet.costs_aq137, 0.001); end
  def test_costs_aq68; assert_in_epsilon(2149.119204984924, worksheet.costs_aq68, 0.001); end
  def test_costs_aq148; assert_in_epsilon(3598.478632413, worksheet.costs_aq148, 0.001); end
  def test_costs_ar137; assert_in_epsilon(5143.512530876434, worksheet.costs_ar137, 0.001); end
  def test_costs_ar68; assert_in_epsilon(2243.705345196904, worksheet.costs_ar68, 0.001); end
  def test_costs_ar148; assert_in_epsilon(3693.608938036669, worksheet.costs_ar148, 0.001); end
  def test_costs_as148; assert_in_epsilon(2736.0236487498782, worksheet.costs_as148, 0.001); end
  def test_costs_at148; assert_in_epsilon(367.25828503562303, worksheet.costs_at148, 0.001); end
  def test_costs_au148; assert_in_epsilon(260.56082151549464, worksheet.costs_au148, 0.001); end
  def test_costs_av148; assert_in_epsilon(133.1572676120476, worksheet.costs_av148, 0.001); end
  def test_costs_aw148; assert_in_epsilon(58.816850258618466, worksheet.costs_aw148, 0.001); end
  def test_costs_ax148; assert_in_epsilon(37.596404072828456, worksheet.costs_ax148, 0.001); end
  def test_costs_ay148; assert_in_epsilon(23.874984468367924, worksheet.costs_ay148, 0.001); end
  def test_costs_az148; assert_in_epsilon(15.245612609845962, worksheet.costs_az148, 0.001); end
  def test_costs_ba148; assert_in_epsilon(9.724288831297928, worksheet.costs_ba148, 0.001); end
  def test_costs_bb148; assert_in_epsilon(5.2105549603932, worksheet.costs_bb148, 0.001); end
  def test_costs_bc148; assert_in_epsilon(911.4450693645172, worksheet.costs_bc148, 0.001); end
  def test_costs_bd148; assert_in_epsilon(240.34610712618274, worksheet.costs_bd148, 0.001); end
  def test_costs_be148; assert_in_epsilon(222.55977017183878, worksheet.costs_be148, 0.001); end
  def test_costs_bf148; assert_in_epsilon(183.70756497803924, worksheet.costs_bf148, 0.001); end
  def test_costs_bg148; assert_in_epsilon(133.57303386045515, worksheet.costs_bg148, 0.001); end
  def test_costs_bh148; assert_in_epsilon(87.51288758292739, worksheet.costs_bh148, 0.001); end
  def test_costs_bi148; assert_in_epsilon(56.89726981437222, worksheet.costs_bi148, 0.001); end
  def test_costs_bj148; assert_in_epsilon(36.796668134218024, worksheet.costs_bj148, 0.001); end
  def test_costs_bk148; assert_in_epsilon(23.741738140072524, worksheet.costs_bk148, 0.001); end
  def test_costs_bl148; assert_in_epsilon(15.29620540809632, worksheet.costs_bl148, 0.001); end
  def test_costs_bm148; assert_in_epsilon(1000.4312452162023, worksheet.costs_bm148, 0.001); end
  def test_costs_bn148; assert_in_epsilon(554.550002542891, worksheet.costs_bn148, 0.001); end
  def test_costs_bo148; assert_in_epsilon(610.8263679685472, worksheet.costs_bo148, 0.001); end
  def test_costs_bp148; assert_in_epsilon(563.1217478166145, worksheet.costs_bp148, 0.001); end
  def test_costs_bq148; assert_in_epsilon(436.2451022933115, worksheet.costs_bq148, 0.001); end
  def test_costs_br148; assert_in_epsilon(312.7735103858071, worksheet.costs_br148, 0.001); end
  def test_costs_bs148; assert_in_epsilon(211.71271119831013, worksheet.costs_bs148, 0.001); end
  def test_costs_bt148; assert_in_epsilon(141.9408870976997, worksheet.costs_bt148, 0.001); end
  def test_costs_bu148; assert_in_epsilon(94.58260638623327, worksheet.costs_bu148, 0.001); end
  def test_costs_bv148; assert_in_epsilon(61.10326373968031, worksheet.costs_bv148, 0.001); end
  def test_costs_bw148; assert_in_epsilon(2986.8561994290944, worksheet.costs_bw148, 0.001); end
  def test_costs_bx148; assert_in_epsilon(1162.1543947046966, worksheet.costs_bx148, 0.001); end
  def test_costs_by148; assert_in_epsilon(1093.9469596558806, worksheet.costs_by148, 0.001); end
  def test_costs_bz148; assert_in_epsilon(879.9865804067013, worksheet.costs_bz148, 0.001); end
  def test_costs_ca148; assert_in_epsilon(628.6349864123852, worksheet.costs_ca148, 0.001); end
  def test_costs_cb148; assert_in_epsilon(437.8828020415629, worksheet.costs_cb148, 0.001); end
  def test_costs_cc148; assert_in_epsilon(292.4849654810503, worksheet.costs_cc148, 0.001); end
  def test_costs_cd148; assert_in_epsilon(193.98316784176367, worksheet.costs_cd148, 0.001); end
  def test_costs_ce148; assert_in_epsilon(128.0486333576037, worksheet.costs_ce148, 0.001); end
  def test_costs_cf148; assert_in_epsilon(81.61002410816982, worksheet.costs_cf148, 0.001); end
  def test_costs_cg148; assert_in_epsilon(4898.732514009815, worksheet.costs_cg148, 0.001); end
  def test_costs_d149; assert_equal("Electricity (ex/im)ports", worksheet.costs_d149); end
  def test_costs_e149; assert_equal("MEUR", worksheet.costs_e149); end
  def test_costs_f149; assert_in_delta(0, (worksheet.costs_f149||0), 0.001); end
  def test_costs_g149; assert_in_delta(0, (worksheet.costs_g149||0), 0.001); end
  def test_costs_h149; assert_in_delta(0, (worksheet.costs_h149||0), 0.001); end
  def test_costs_i149; assert_in_delta(0, (worksheet.costs_i149||0), 0.001); end
  def test_costs_j149; assert_in_delta(0, (worksheet.costs_j149||0), 0.001); end
  def test_costs_k149; assert_in_delta(0, (worksheet.costs_k149||0), 0.001); end
  def test_costs_l149; assert_in_delta(0, (worksheet.costs_l149||0), 0.001); end
  def test_costs_m149; assert_in_delta(0, (worksheet.costs_m149||0), 0.001); end
  def test_costs_n149; assert_in_delta(0, (worksheet.costs_n149||0), 0.001); end
  def test_costs_o149; assert_in_delta(0, (worksheet.costs_o149||0), 0.001); end
  def test_costs_p149; assert_in_delta(0, (worksheet.costs_p149||0), 0.001); end
  def test_costs_q149; assert_in_delta(0, (worksheet.costs_q149||0), 0.001); end
  def test_costs_r149; assert_in_delta(0, (worksheet.costs_r149||0), 0.001); end
  def test_costs_s149; assert_in_delta(0, (worksheet.costs_s149||0), 0.001); end
  def test_costs_t149; assert_in_delta(0, (worksheet.costs_t149||0), 0.001); end
  def test_costs_u149; assert_in_delta(0, (worksheet.costs_u149||0), 0.001); end
  def test_costs_v149; assert_in_delta(0, (worksheet.costs_v149||0), 0.001); end
  def test_costs_w149; assert_in_delta(0, (worksheet.costs_w149||0), 0.001); end
  def test_costs_x149; assert_in_delta(0, (worksheet.costs_x149||0), 0.001); end
  def test_costs_y149; assert_in_delta(0, (worksheet.costs_y149||0), 0.001); end
  def test_costs_z149; assert_in_delta(0, (worksheet.costs_z149||0), 0.001); end
  def test_costs_aa149; assert_in_epsilon(194.90625, worksheet.costs_aa149, 0.001); end
  def test_costs_ab149; assert_in_epsilon(401.625, worksheet.costs_ab149, 0.001); end
  def test_costs_ac149; assert_in_epsilon(630.0000000000001, worksheet.costs_ac149, 0.001); end
  def test_costs_ad149; assert_in_epsilon(876.75, worksheet.costs_ad149, 0.001); end
  def test_costs_ae149; assert_in_epsilon(1082.8125, worksheet.costs_ae149, 0.001); end
  def test_costs_af149; assert_in_epsilon(1283.625, worksheet.costs_af149, 0.001); end
  def test_costs_ag149; assert_in_epsilon(1488.375, worksheet.costs_ag149, 0.001); end
  def test_costs_ah149; assert_in_epsilon(1690.5, worksheet.costs_ah149, 0.001); end
  def test_costs_ai149; assert_in_epsilon(849.84375, worksheet.costs_ai149, 0.001); end
  def test_costs_aj149; assert_in_delta(0, (worksheet.costs_aj149||0), 0.001); end
  def test_costs_ak138; assert_in_epsilon(211.3125, worksheet.costs_ak138, 0.001); end
  def test_costs_ak69; assert_in_epsilon(178.5, worksheet.costs_ak69, 0.001); end
  def test_costs_ak149; assert_in_epsilon(194.90625, worksheet.costs_ak149, 0.001); end
  def test_costs_al138; assert_in_epsilon(467.25, worksheet.costs_al138, 0.001); end
  def test_costs_al69; assert_in_epsilon(336, worksheet.costs_al69, 0.001); end
  def test_costs_al149; assert_in_epsilon(401.625, worksheet.costs_al149, 0.001); end
  def test_costs_am138; assert_in_epsilon(720.5625000000001, worksheet.costs_am138, 0.001); end
  def test_costs_am69; assert_in_epsilon(539.4375000000001, worksheet.costs_am69, 0.001); end
  def test_costs_am149; assert_in_epsilon(630.0000000000001, worksheet.costs_am149, 0.001); end
  def test_costs_an138; assert_in_epsilon(987, worksheet.costs_an138, 0.001); end
  def test_costs_an69; assert_in_epsilon(766.5, worksheet.costs_an69, 0.001); end
  def test_costs_an149; assert_in_epsilon(876.75, worksheet.costs_an149, 0.001); end
  def test_costs_ao138; assert_in_epsilon(1214.0625, worksheet.costs_ao138, 0.001); end
  def test_costs_ao69; assert_in_epsilon(951.5625, worksheet.costs_ao69, 0.001); end
  def test_costs_ao149; assert_in_epsilon(1082.8125, worksheet.costs_ao149, 0.001); end
  def test_costs_ap138; assert_in_epsilon(1433.25, worksheet.costs_ap138, 0.001); end
  def test_costs_ap69; assert_in_epsilon(1134, worksheet.costs_ap69, 0.001); end
  def test_costs_ap149; assert_in_epsilon(1283.625, worksheet.costs_ap149, 0.001); end
  def test_costs_aq138; assert_in_epsilon(1662.9375, worksheet.costs_aq138, 0.001); end
  def test_costs_aq69; assert_in_epsilon(1313.8125, worksheet.costs_aq69, 0.001); end
  def test_costs_aq149; assert_in_epsilon(1488.375, worksheet.costs_aq149, 0.001); end
  def test_costs_ar138; assert_in_epsilon(1890, worksheet.costs_ar138, 0.001); end
  def test_costs_ar69; assert_in_epsilon(1491, worksheet.costs_ar69, 0.001); end
  def test_costs_ar149; assert_in_epsilon(1690.5, worksheet.costs_ar149, 0.001); end
  def test_costs_as149; assert_in_epsilon(849.84375, worksheet.costs_as149, 0.001); end
  def test_costs_at149; assert_in_delta(0, (worksheet.costs_at149||0), 0.001); end
  def test_costs_au149; assert_in_delta(0, (worksheet.costs_au149||0), 0.001); end
  def test_costs_av149; assert_in_delta(0, (worksheet.costs_av149||0), 0.001); end
  def test_costs_aw149; assert_in_delta(0, (worksheet.costs_aw149||0), 0.001); end
  def test_costs_ax149; assert_in_delta(0, (worksheet.costs_ax149||0), 0.001); end
  def test_costs_ay149; assert_in_delta(0, (worksheet.costs_ay149||0), 0.001); end
  def test_costs_az149; assert_in_delta(0, (worksheet.costs_az149||0), 0.001); end
  def test_costs_ba149; assert_in_delta(0, (worksheet.costs_ba149||0), 0.001); end
  def test_costs_bb149; assert_in_delta(0, (worksheet.costs_bb149||0), 0.001); end
  def test_costs_bc149; assert_in_delta(0, (worksheet.costs_bc149||0), 0.001); end
  def test_costs_bd149; assert_in_delta(0, (worksheet.costs_bd149||0), 0.001); end
  def test_costs_be149; assert_in_delta(0, (worksheet.costs_be149||0), 0.001); end
  def test_costs_bf149; assert_in_delta(0, (worksheet.costs_bf149||0), 0.001); end
  def test_costs_bg149; assert_in_delta(0, (worksheet.costs_bg149||0), 0.001); end
  def test_costs_bh149; assert_in_delta(0, (worksheet.costs_bh149||0), 0.001); end
  def test_costs_bi149; assert_in_delta(0, (worksheet.costs_bi149||0), 0.001); end
  def test_costs_bj149; assert_in_delta(0, (worksheet.costs_bj149||0), 0.001); end
  def test_costs_bk149; assert_in_delta(0, (worksheet.costs_bk149||0), 0.001); end
  def test_costs_bl149; assert_in_delta(0, (worksheet.costs_bl149||0), 0.001); end
  def test_costs_bm149; assert_in_delta(0, (worksheet.costs_bm149||0), 0.001); end
  def test_costs_bn149; assert_in_delta(0, (worksheet.costs_bn149||0), 0.001); end
  def test_costs_bo149; assert_in_epsilon(121.02144662249842, worksheet.costs_bo149, 0.001); end
  def test_costs_bp149; assert_in_epsilon(154.84382361713557, worksheet.costs_bp149, 0.001); end
  def test_costs_bq149; assert_in_epsilon(150.81699110257296, worksheet.costs_bq149, 0.001); end
  def test_costs_br149; assert_in_epsilon(130.32330087016777, worksheet.costs_br149, 0.001); end
  def test_costs_bs149; assert_in_epsilon(99.93926052610216, worksheet.costs_bs149, 0.001); end
  def test_costs_bt149; assert_in_epsilon(73.56269173121173, worksheet.costs_bt149, 0.001); end
  def test_costs_bu149; assert_in_epsilon(52.962488913217456, worksheet.costs_bu149, 0.001); end
  def test_costs_bv149; assert_in_epsilon(37.351476041260185, worksheet.costs_bv149, 0.001); end
  def test_costs_bw149; assert_in_epsilon(820.8214794241665, worksheet.costs_bw149, 0.001); end
  def test_costs_bx149; assert_in_delta(0, (worksheet.costs_bx149||0), 0.001); end
  def test_costs_by149; assert_in_epsilon(121.02144662249842, worksheet.costs_by149, 0.001); end
  def test_costs_bz149; assert_in_epsilon(154.84382361713557, worksheet.costs_bz149, 0.001); end
  def test_costs_ca149; assert_in_epsilon(150.81699110257296, worksheet.costs_ca149, 0.001); end
  def test_costs_cb149; assert_in_epsilon(130.32330087016777, worksheet.costs_cb149, 0.001); end
  def test_costs_cc149; assert_in_epsilon(99.93926052610216, worksheet.costs_cc149, 0.001); end
  def test_costs_cd149; assert_in_epsilon(73.56269173121173, worksheet.costs_cd149, 0.001); end
  def test_costs_ce149; assert_in_epsilon(52.962488913217456, worksheet.costs_ce149, 0.001); end
  def test_costs_cf149; assert_in_epsilon(37.351476041260185, worksheet.costs_cf149, 0.001); end
  def test_costs_cg149; assert_in_epsilon(820.8214794241665, worksheet.costs_cg149, 0.001); end
  def test_costs_d150; assert_equal("Total", worksheet.costs_d150); end
  def test_costs_e150; assert_equal("MEUR", worksheet.costs_e150); end
  def test_costs_aj150; assert_in_epsilon(77927.50523541558, worksheet.costs_aj150, 0.001); end
  def test_costs_ak139; assert_in_epsilon(91508.93026018926, worksheet.costs_ak139, 0.001); end
  def test_costs_ak70; assert_in_epsilon(66937.436000433, worksheet.costs_ak70, 0.001); end
  def test_costs_ak150; assert_in_epsilon(79223.18313031112, worksheet.costs_ak150, 0.001); end
  def test_costs_al139; assert_in_epsilon(118170.42148471967, worksheet.costs_al139, 0.001); end
  def test_costs_al70; assert_in_epsilon(85758.43705757656, worksheet.costs_al70, 0.001); end
  def test_costs_al150; assert_in_epsilon(101964.42927114811, worksheet.costs_al150, 0.001); end
  def test_costs_am139; assert_in_epsilon(110670.94743993638, worksheet.costs_am139, 0.001); end
  def test_costs_am70; assert_in_epsilon(78305.74176436584, worksheet.costs_am70, 0.001); end
  def test_costs_am150; assert_in_epsilon(94488.3446021511, worksheet.costs_am150, 0.001); end
  def test_costs_an139; assert_in_epsilon(116771.22670915659, worksheet.costs_an139, 0.001); end
  def test_costs_an70; assert_in_epsilon(80494.21945075665, worksheet.costs_an70, 0.001); end
  def test_costs_an150; assert_in_epsilon(98632.72307995662, worksheet.costs_an150, 0.001); end
  def test_costs_ao139; assert_in_epsilon(116075.99503903907, worksheet.costs_ao139, 0.001); end
  def test_costs_ao70; assert_in_epsilon(78034.3874707424, worksheet.costs_ao70, 0.001); end
  def test_costs_ao150; assert_in_epsilon(97055.19125489073, worksheet.costs_ao150, 0.001); end
  def test_costs_ap139; assert_in_epsilon(119793.0071770102, worksheet.costs_ap139, 0.001); end
  def test_costs_ap70; assert_in_epsilon(78834.82613235462, worksheet.costs_ap70, 0.001); end
  def test_costs_ap150; assert_in_epsilon(99313.9166546824, worksheet.costs_ap150, 0.001); end
  def test_costs_aq139; assert_in_epsilon(121677.67374286115, worksheet.costs_aq139, 0.001); end
  def test_costs_aq70; assert_in_epsilon(78155.37156413772, worksheet.costs_aq70, 0.001); end
  def test_costs_aq150; assert_in_epsilon(99916.52265349944, worksheet.costs_aq150, 0.001); end
  def test_costs_ar139; assert_in_epsilon(127122.28180036065, worksheet.costs_ar139, 0.001); end
  def test_costs_ar70; assert_in_epsilon(80697.261922437, worksheet.costs_ar70, 0.001); end
  def test_costs_ar150; assert_in_epsilon(103909.77186139883, worksheet.costs_ar150, 0.001); end
  def test_costs_as150; assert_in_epsilon(94714.62086038377, worksheet.costs_as150, 0.001); end
  def test_costs_bx150; assert_in_epsilon(77927.50523541558, worksheet.costs_bx150, 0.001); end
  def test_costs_by150; assert_in_epsilon(49191.36368623051, worksheet.costs_by150, 0.001); end
  def test_costs_bz150; assert_in_epsilon(39311.70146600325, worksheet.costs_bz150, 0.001); end
  def test_costs_ca150; assert_in_epsilon(22619.758455808682, worksheet.costs_ca150, 0.001); end
  def test_costs_cb150; assert_in_epsilon(14661.12580050542, worksheet.costs_cb150, 0.001); end
  def test_costs_cc150; assert_in_epsilon(8957.805755135998, worksheet.costs_cc150, 0.001); end
  def test_costs_cd150; assert_in_epsilon(5691.536886152619, worksheet.costs_cd150, 0.001); end
  def test_costs_ce150; assert_in_epsilon(3555.4398073625293, worksheet.costs_ce150, 0.001); end
  def test_costs_cf150; assert_in_epsilon(2295.8789435870153, worksheet.costs_cf150, 0.001); end
  def test_costs_cg150; assert_in_epsilon(224212.11603620162, worksheet.costs_cg150, 0.001); end
  def test_costs_b152; assert_equal("ELECTRICITY", worksheet.costs_b152); end
  def test_costs_f152; assert_equal("CAPITAL COSTS - AVERAGE", worksheet.costs_f152); end
  def test_costs_p152; assert_equal("O&M COSTS - AVERAGE", worksheet.costs_p152); end
  def test_costs_z152; assert_equal("FUEL COSTS - AVERAGE", worksheet.costs_z152); end
  def test_costs_aj152; assert_equal("TOTAL COSTS - AVERAGE", worksheet.costs_aj152); end
  def test_costs_b153; assert_equal("I.a", worksheet.costs_b153); end
  def test_costs_c153; assert_equal("Biomass and gas power stations", worksheet.costs_c153); end
  def test_costs_e153; assert_equal("MEUR", worksheet.costs_e153); end
  def test_costs_f153; assert_in_delta(0, (worksheet.costs_f153||0), 0.001); end
  def test_costs_o153; assert_in_epsilon(343.29310809132016, worksheet.costs_o153, 0.001); end
  def test_costs_y153; assert_in_epsilon(138.1153950032421, worksheet.costs_y153, 0.001); end
  def test_costs_ai153; assert_in_epsilon(1434.2937606970447, worksheet.costs_ai153, 0.001); end
  def test_costs_b154; assert_equal("I.b", worksheet.costs_b154); end
  def test_costs_c154; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c154); end
  def test_costs_e154; assert_equal("MEUR", worksheet.costs_e154); end
  def test_costs_f154; assert_in_delta(0, (worksheet.costs_f154||0), 0.001); end
  def test_costs_o154; assert_in_epsilon(106.12707792401585, worksheet.costs_o154, 0.001); end
  def test_costs_p154; assert_in_delta(0, (worksheet.costs_p154||0), 0.001); end
  def test_costs_y154; assert_in_epsilon(2.1225415584803167, worksheet.costs_y154, 0.001); end
  def test_costs_ai154; assert_in_epsilon(605.4611688937013, worksheet.costs_ai154, 0.001); end
  def test_costs_b155; assert_equal("II.a", worksheet.costs_b155); end
  def test_costs_c155; assert_equal("Nuclear power", worksheet.costs_c155); end
  def test_costs_e155; assert_equal("MEUR", worksheet.costs_e155); end
  def test_costs_f155; assert_in_delta(0, (worksheet.costs_f155||0), 0.001); end
  def test_costs_o155; assert_in_epsilon(394.44444444444446, worksheet.costs_o155, 0.001); end
  def test_costs_y155; assert_in_epsilon(646.6277777777777, worksheet.costs_y155, 0.001); end
  def test_costs_ai155; assert_in_epsilon(425.352166064, worksheet.costs_ai155, 0.001); end
  def test_costs_b156; assert_equal("III.a.1", worksheet.costs_b156); end
  def test_costs_c156; assert_equal("Onshore wind", worksheet.costs_c156); end
  def test_costs_e156; assert_equal("MEUR", worksheet.costs_e156); end
  def test_costs_f7; assert_in_epsilon(393.3010502283106, worksheet.costs_f7, 0.001); end
  def test_costs_f76; assert_in_epsilon(468.93586757990875, worksheet.costs_f76, 0.001); end
  def test_costs_f156; assert_in_epsilon(431.1184589041097, worksheet.costs_f156, 0.001); end
  def test_costs_g7; assert_in_epsilon(363.0471232876712, worksheet.costs_g7, 0.001); end
  def test_costs_g76; assert_in_epsilon(442.46368150684924, worksheet.costs_g76, 0.001); end
  def test_costs_g156; assert_in_epsilon(402.75540239726024, worksheet.costs_g156, 0.001); end
  def test_costs_h7; assert_in_epsilon(385, worksheet.costs_h7, 0.001); end
  def test_costs_h76; assert_in_epsilon(481.24999999999994, worksheet.costs_h76, 0.001); end
  def test_costs_h156; assert_in_epsilon(433.125, worksheet.costs_h156, 0.001); end
  def test_costs_i7; assert_in_epsilon(400, worksheet.costs_i7, 0.001); end
  def test_costs_i76; assert_in_epsilon(515, worksheet.costs_i76, 0.001); end
  def test_costs_i156; assert_in_epsilon(457.5, worksheet.costs_i156, 0.001); end
  def test_costs_j7; assert_in_epsilon(405, worksheet.costs_j7, 0.001); end
  def test_costs_j76; assert_in_epsilon(540, worksheet.costs_j76, 0.001); end
  def test_costs_j156; assert_in_epsilon(472.5, worksheet.costs_j156, 0.001); end
  def test_costs_k7; assert_in_epsilon(431.25, worksheet.costs_k7, 0.001); end
  def test_costs_k76; assert_in_epsilon(568.75, worksheet.costs_k76, 0.001); end
  def test_costs_k156; assert_in_epsilon(500, worksheet.costs_k156, 0.001); end
  def test_costs_l7; assert_in_epsilon(453.75000000000006, worksheet.costs_l7, 0.001); end
  def test_costs_l76; assert_in_epsilon(591.25, worksheet.costs_l76, 0.001); end
  def test_costs_l156; assert_in_epsilon(522.5, worksheet.costs_l156, 0.001); end
  def test_costs_m7; assert_in_epsilon(472.5, worksheet.costs_m7, 0.001); end
  def test_costs_m76; assert_in_epsilon(607.5, worksheet.costs_m76, 0.001); end
  def test_costs_m156; assert_in_epsilon(540, worksheet.costs_m156, 0.001); end
  def test_costs_n7; assert_in_epsilon(487.5, worksheet.costs_n7, 0.001); end
  def test_costs_n76; assert_in_epsilon(617.5, worksheet.costs_n76, 0.001); end
  def test_costs_n156; assert_in_epsilon(552.5, worksheet.costs_n156, 0.001); end
  def test_costs_o156; assert_in_epsilon(479.11098458904115, worksheet.costs_o156, 0.001); end
  def test_costs_p156; assert_in_epsilon(21.018749999999997, worksheet.costs_p156, 0.001); end
  def test_costs_q7; assert_in_epsilon(63.0808904109589, worksheet.costs_q7, 0.001); end
  def test_costs_q76; assert_in_epsilon(76.87983518835617, worksheet.costs_q76, 0.001); end
  def test_costs_q156; assert_in_epsilon(69.98036279965754, worksheet.costs_q156, 0.001); end
  def test_costs_r7; assert_in_epsilon(99.42329908675798, worksheet.costs_r7, 0.001); end
  def test_costs_r76; assert_in_epsilon(124.27912385844746, worksheet.costs_r76, 0.001); end
  def test_costs_r156; assert_in_epsilon(111.85121147260273, worksheet.costs_r156, 0.001); end
  def test_costs_s7; assert_in_epsilon(134.13481735159814, worksheet.costs_s7, 0.001); end
  def test_costs_s76; assert_in_epsilon(172.69857734018262, worksheet.costs_s76, 0.001); end
  def test_costs_s156; assert_in_epsilon(153.41669734589038, worksheet.costs_s156, 0.001); end
  def test_costs_t7; assert_in_epsilon(165.72133561643832, worksheet.costs_t7, 0.001); end
  def test_costs_t76; assert_in_epsilon(220.96178082191776, worksheet.costs_t76, 0.001); end
  def test_costs_t156; assert_in_epsilon(193.34155821917804, worksheet.costs_t156, 0.001); end
  def test_costs_u7; assert_in_epsilon(200.80407962328766, worksheet.costs_u7, 0.001); end
  def test_costs_u76; assert_in_epsilon(264.8285687785388, worksheet.costs_u76, 0.001); end
  def test_costs_u156; assert_in_epsilon(232.81632420091324, worksheet.costs_u156, 0.001); end
  def test_costs_v7; assert_in_epsilon(212.43660530821916, worksheet.costs_v7, 0.001); end
  def test_costs_v76; assert_in_epsilon(276.8113341894977, worksheet.costs_v76, 0.001); end
  def test_costs_v156; assert_in_epsilon(244.62396974885843, worksheet.costs_v156, 0.001); end
  def test_costs_w7; assert_in_epsilon(227.13981164383554, worksheet.costs_w7, 0.001); end
  def test_costs_w76; assert_in_epsilon(292.03690068493154, worksheet.costs_w76, 0.001); end
  def test_costs_w156; assert_in_epsilon(259.5883561643835, worksheet.costs_w156, 0.001); end
  def test_costs_x7; assert_in_epsilon(239.76113013698628, worksheet.costs_x7, 0.001); end
  def test_costs_x76; assert_in_epsilon(303.6974315068493, worksheet.costs_x76, 0.001); end
  def test_costs_x156; assert_in_epsilon(271.72928082191777, worksheet.costs_x156, 0.001); end
  def test_costs_y156; assert_in_epsilon(173.15183453037793, worksheet.costs_y156, 0.001); end
  def test_costs_z156; assert_in_delta(0, (worksheet.costs_z156||0), 0.001); end
  def test_costs_aa7; assert_in_delta(0, (worksheet.costs_aa7||0), 0.001); end
  def test_costs_aa76; assert_in_delta(0, (worksheet.costs_aa76||0), 0.001); end
  def test_costs_aa156; assert_in_delta(0, (worksheet.costs_aa156||0), 0.001); end
  def test_costs_ab7; assert_in_delta(0, (worksheet.costs_ab7||0), 0.001); end
  def test_costs_ab76; assert_in_delta(0, (worksheet.costs_ab76||0), 0.001); end
  def test_costs_ab156; assert_in_delta(0, (worksheet.costs_ab156||0), 0.001); end
  def test_costs_ac7; assert_in_delta(0, (worksheet.costs_ac7||0), 0.001); end
  def test_costs_ac76; assert_in_delta(0, (worksheet.costs_ac76||0), 0.001); end
  def test_costs_ac156; assert_in_delta(0, (worksheet.costs_ac156||0), 0.001); end
  def test_costs_ad7; assert_in_delta(0, (worksheet.costs_ad7||0), 0.001); end
  def test_costs_ad76; assert_in_delta(0, (worksheet.costs_ad76||0), 0.001); end
  def test_costs_ad156; assert_in_delta(0, (worksheet.costs_ad156||0), 0.001); end
  def test_costs_ae7; assert_in_delta(0, (worksheet.costs_ae7||0), 0.001); end
  def test_costs_ae76; assert_in_delta(0, (worksheet.costs_ae76||0), 0.001); end
  def test_costs_ae156; assert_in_delta(0, (worksheet.costs_ae156||0), 0.001); end
  def test_costs_af7; assert_in_delta(0, (worksheet.costs_af7||0), 0.001); end
  def test_costs_af76; assert_in_delta(0, (worksheet.costs_af76||0), 0.001); end
  def test_costs_af156; assert_in_delta(0, (worksheet.costs_af156||0), 0.001); end
  def test_costs_ag7; assert_in_delta(0, (worksheet.costs_ag7||0), 0.001); end
  def test_costs_ag76; assert_in_delta(0, (worksheet.costs_ag76||0), 0.001); end
  def test_costs_ag156; assert_in_delta(0, (worksheet.costs_ag156||0), 0.001); end
  def test_costs_ah7; assert_in_delta(0, (worksheet.costs_ah7||0), 0.001); end
  def test_costs_ah76; assert_in_delta(0, (worksheet.costs_ah76||0), 0.001); end
  def test_costs_ah156; assert_in_delta(0, (worksheet.costs_ah156||0), 0.001); end
  def test_costs_ai156; assert_in_delta(0, (worksheet.costs_ai156||0), 0.001); end
  def test_costs_b157; assert_equal("III.a.2", worksheet.costs_b157); end
  def test_costs_c157; assert_equal("Offshore wind", worksheet.costs_c157); end
  def test_costs_e157; assert_equal("MEUR", worksheet.costs_e157); end
  def test_costs_f8; assert_in_epsilon(1311.516, worksheet.costs_f8, 0.001); end
  def test_costs_f77; assert_in_epsilon(1384.3780000000002, worksheet.costs_f77, 0.001); end
  def test_costs_f157; assert_in_epsilon(1347.9470000000001, worksheet.costs_f157, 0.001); end
  def test_costs_g8; assert_in_epsilon(1147.5765000000001, worksheet.costs_g8, 0.001); end
  def test_costs_g77; assert_in_epsilon(1284.1927500000002, worksheet.costs_g77, 0.001); end
  def test_costs_g157; assert_in_epsilon(1215.8846250000001, worksheet.costs_g157, 0.001); end
  def test_costs_h8; assert_in_epsilon(1165.5, worksheet.costs_h8, 0.001); end
  def test_costs_h77; assert_in_epsilon(1402.9166666666665, worksheet.costs_h77, 0.001); end
  def test_costs_h157; assert_in_epsilon(1284.2083333333333, worksheet.costs_h157, 0.001); end
  def test_costs_i8; assert_in_epsilon(1125, worksheet.costs_i8, 0.001); end
  def test_costs_i77; assert_in_epsilon(1487.5, worksheet.costs_i77, 0.001); end
  def test_costs_i157; assert_in_epsilon(1306.25, worksheet.costs_i157, 0.001); end
  def test_costs_j8; assert_in_epsilon(1044, worksheet.costs_j8, 0.001); end
  def test_costs_j77; assert_in_epsilon(1566, worksheet.costs_j77, 0.001); end
  def test_costs_j157; assert_in_epsilon(1305, worksheet.costs_j157, 0.001); end
  def test_costs_k8; assert_in_epsilon(1130.25, worksheet.costs_k8, 0.001); end
  def test_costs_k77; assert_in_epsilon(1691.25, worksheet.costs_k77, 0.001); end
  def test_costs_k157; assert_in_epsilon(1410.75, worksheet.costs_k157, 0.001); end
  def test_costs_l8; assert_in_epsilon(1202.5, worksheet.costs_l8, 0.001); end
  def test_costs_l77; assert_in_epsilon(1794.5, worksheet.costs_l77, 0.001); end
  def test_costs_l157; assert_in_epsilon(1498.5, worksheet.costs_l157, 0.001); end
  def test_costs_m8; assert_in_epsilon(1260.75, worksheet.costs_m8, 0.001); end
  def test_costs_m77; assert_in_epsilon(1875.75, worksheet.costs_m77, 0.001); end
  def test_costs_m157; assert_in_epsilon(1568.25, worksheet.costs_m157, 0.001); end
  def test_costs_n8; assert_in_epsilon(1305, worksheet.costs_n8, 0.001); end
  def test_costs_n77; assert_in_epsilon(1935, worksheet.costs_n77, 0.001); end
  def test_costs_n157; assert_in_epsilon(1620, worksheet.costs_n157, 0.001); end
  def test_costs_o157; assert_in_epsilon(1395.1988842592593, worksheet.costs_o157, 0.001); end
  def test_costs_p157; assert_in_epsilon(19.424999999999997, worksheet.costs_p157, 0.001); end
  def test_costs_q8; assert_in_epsilon(159.98456249999998, worksheet.costs_q8, 0.001); end
  def test_costs_q77; assert_in_epsilon(179.03034375000004, worksheet.costs_q77, 0.001); end
  def test_costs_q157; assert_in_epsilon(169.507453125, worksheet.costs_q157, 0.001); end
  def test_costs_r8; assert_in_epsilon(260.08425000000005, worksheet.costs_r8, 0.001); end
  def test_costs_r77; assert_in_epsilon(313.06437500000004, worksheet.costs_r77, 0.001); end
  def test_costs_r157; assert_in_epsilon(286.5743125, worksheet.costs_r157, 0.001); end
  def test_costs_s8; assert_in_epsilon(338.143125, worksheet.costs_s8, 0.001); end
  def test_costs_s77; assert_in_epsilon(447.10035416666665, worksheet.costs_s77, 0.001); end
  def test_costs_s157; assert_in_epsilon(392.62173958333335, worksheet.costs_s157, 0.001); end
  def test_costs_t8; assert_in_epsilon(383.0144999999999, worksheet.costs_t8, 0.001); end
  def test_costs_t77; assert_in_epsilon(574.5217500000001, worksheet.costs_t77, 0.001); end
  def test_costs_t157; assert_in_epsilon(478.768125, worksheet.costs_t157, 0.001); end
  def test_costs_u8; assert_in_epsilon(479.8225208333332, worksheet.costs_u8, 0.001); end
  def test_costs_u77; assert_in_epsilon(717.9826041666665, worksheet.costs_u77, 0.001); end
  def test_costs_u157; assert_in_epsilon(598.9025624999999, worksheet.costs_u157, 0.001); end
  def test_costs_v8; assert_in_epsilon(515.3680729166666, worksheet.costs_v8, 0.001); end
  def test_costs_v77; assert_in_epsilon(769.0877395833332, worksheet.costs_v77, 0.001); end
  def test_costs_v157; assert_in_epsilon(642.2279062499999, worksheet.costs_v157, 0.001); end
  def test_costs_w8; assert_in_epsilon(559.82040625, worksheet.costs_w8, 0.001); end
  def test_costs_w77; assert_in_epsilon(832.90353125, worksheet.costs_w77, 0.001); end
  def test_costs_w157; assert_in_epsilon(696.36196875, worksheet.costs_w157, 0.001); end
  def test_costs_x8; assert_in_epsilon(598.346125, worksheet.costs_x8, 0.001); end
  def test_costs_x77; assert_in_epsilon(887.202875, worksheet.costs_x77, 0.001); end
  def test_costs_x157; assert_in_epsilon(742.7745, worksheet.costs_x157, 0.001); end
  def test_costs_y157; assert_in_epsilon(447.46261863425923, worksheet.costs_y157, 0.001); end
  def test_costs_z157; assert_in_delta(0, (worksheet.costs_z157||0), 0.001); end
  def test_costs_aa8; assert_in_delta(0, (worksheet.costs_aa8||0), 0.001); end
  def test_costs_aa77; assert_in_delta(0, (worksheet.costs_aa77||0), 0.001); end
  def test_costs_aa157; assert_in_delta(0, (worksheet.costs_aa157||0), 0.001); end
  def test_costs_ab8; assert_in_delta(0, (worksheet.costs_ab8||0), 0.001); end
  def test_costs_ab77; assert_in_delta(0, (worksheet.costs_ab77||0), 0.001); end
  def test_costs_ab157; assert_in_delta(0, (worksheet.costs_ab157||0), 0.001); end
  def test_costs_ac8; assert_in_delta(0, (worksheet.costs_ac8||0), 0.001); end
  def test_costs_ac77; assert_in_delta(0, (worksheet.costs_ac77||0), 0.001); end
  def test_costs_ac157; assert_in_delta(0, (worksheet.costs_ac157||0), 0.001); end
  def test_costs_ad8; assert_in_delta(0, (worksheet.costs_ad8||0), 0.001); end
  def test_costs_ad77; assert_in_delta(0, (worksheet.costs_ad77||0), 0.001); end
  def test_costs_ad157; assert_in_delta(0, (worksheet.costs_ad157||0), 0.001); end
  def test_costs_ae8; assert_in_delta(0, (worksheet.costs_ae8||0), 0.001); end
  def test_costs_ae77; assert_in_delta(0, (worksheet.costs_ae77||0), 0.001); end
  def test_costs_ae157; assert_in_delta(0, (worksheet.costs_ae157||0), 0.001); end
  def test_costs_af8; assert_in_delta(0, (worksheet.costs_af8||0), 0.001); end
  def test_costs_af77; assert_in_delta(0, (worksheet.costs_af77||0), 0.001); end
  def test_costs_af157; assert_in_delta(0, (worksheet.costs_af157||0), 0.001); end
  def test_costs_ag8; assert_in_delta(0, (worksheet.costs_ag8||0), 0.001); end
  def test_costs_ag77; assert_in_delta(0, (worksheet.costs_ag77||0), 0.001); end
  def test_costs_ag157; assert_in_delta(0, (worksheet.costs_ag157||0), 0.001); end
  def test_costs_ah8; assert_in_delta(0, (worksheet.costs_ah8||0), 0.001); end
  def test_costs_ah77; assert_in_delta(0, (worksheet.costs_ah77||0), 0.001); end
  def test_costs_ah157; assert_in_delta(0, (worksheet.costs_ah157||0), 0.001); end
  def test_costs_ai157; assert_in_delta(0, (worksheet.costs_ai157||0), 0.001); end
  def test_costs_b158; assert_equal("III.b", worksheet.costs_b158); end
  def test_costs_c158; assert_equal("Hydroelectric power stations", worksheet.costs_c158); end
  def test_costs_e158; assert_equal("MEUR", worksheet.costs_e158); end
  def test_costs_f158; assert_in_delta(0, (worksheet.costs_f158||0), 0.001); end
  def test_costs_g9; assert_in_epsilon(2.9257462593656247, worksheet.costs_g9, 0.001); end
  def test_costs_g78; assert_in_epsilon(3.9009950124875004, worksheet.costs_g78, 0.001); end
  def test_costs_g158; assert_in_epsilon(3.4133706359265625, worksheet.costs_g158, 0.001); end
  def test_costs_h9; assert_in_epsilon(2.8533303913973165, worksheet.costs_h9, 0.001); end
  def test_costs_h78; assert_in_epsilon(3.804440521863088, worksheet.costs_h78, 0.001); end
  def test_costs_h158; assert_in_epsilon(3.328885456630202, worksheet.costs_h158, 0.001); end
  def test_costs_i9; assert_in_epsilon(2.782706906454984, worksheet.costs_i9, 0.001); end
  def test_costs_i78; assert_in_epsilon(3.7102758752733127, worksheet.costs_i78, 0.001); end
  def test_costs_i158; assert_in_epsilon(3.2464913908641484, worksheet.costs_i158, 0.001); end
  def test_costs_j9; assert_in_epsilon(2.7138314408238533, worksheet.costs_j9, 0.001); end
  def test_costs_j78; assert_in_epsilon(3.618441921098472, worksheet.costs_j78, 0.001); end
  def test_costs_j158; assert_in_epsilon(3.166136680961163, worksheet.costs_j158, 0.001); end
  def test_costs_k9; assert_in_epsilon(2.646660728846405, worksheet.costs_k9, 0.001); end
  def test_costs_k78; assert_in_epsilon(3.5288809717952074, worksheet.costs_k78, 0.001); end
  def test_costs_k158; assert_in_epsilon(3.087770850320806, worksheet.costs_k158, 0.001); end
  def test_costs_l9; assert_in_epsilon(2.581152575744089, worksheet.costs_l9, 0.001); end
  def test_costs_l78; assert_in_epsilon(3.441536767658787, worksheet.costs_l78, 0.001); end
  def test_costs_l158; assert_in_epsilon(3.011344671701438, worksheet.costs_l158, 0.001); end
  def test_costs_m9; assert_in_epsilon(2.5172658311117395, worksheet.costs_m9, 0.001); end
  def test_costs_m78; assert_in_epsilon(3.3563544414823197, worksheet.costs_m78, 0.001); end
  def test_costs_m158; assert_in_epsilon(2.9368101362970296, worksheet.costs_m158, 0.001); end
  def test_costs_n9; assert_in_epsilon(2.4549603630680252, worksheet.costs_n9, 0.001); end
  def test_costs_n78; assert_in_epsilon(3.2732804840907006, worksheet.costs_n78, 0.001); end
  def test_costs_n158; assert_in_epsilon(2.864120423579363, worksheet.costs_n158, 0.001); end
  def test_costs_o158; assert_in_epsilon(2.7838811384756346, worksheet.costs_o158, 0.001); end
  def test_costs_p9; assert_in_epsilon(8.25, worksheet.costs_p9, 0.001); end
  def test_costs_p78; assert_in_epsilon(11, worksheet.costs_p78, 0.001); end
  def test_costs_p158; assert_in_epsilon(9.625, worksheet.costs_p158, 0.001); end
  def test_costs_q9; assert_in_epsilon(8.411520495676175, worksheet.costs_q9, 0.001); end
  def test_costs_q78; assert_in_epsilon(11.215360660901565, worksheet.costs_q78, 0.001); end
  def test_costs_q158; assert_in_epsilon(9.81344057828887, worksheet.costs_q158, 0.001); end
  def test_costs_r9; assert_in_epsilon(8.559991174191948, worksheet.costs_r9, 0.001); end
  def test_costs_r78; assert_in_epsilon(11.413321565589264, worksheet.costs_r78, 0.001); end
  def test_costs_r158; assert_in_epsilon(9.986656369890607, worksheet.costs_r158, 0.001); end
  def test_costs_s9; assert_in_epsilon(8.695959082671823, worksheet.costs_s9, 0.001); end
  def test_costs_s78; assert_in_epsilon(11.594612110229102, worksheet.costs_s78, 0.001); end
  def test_costs_s158; assert_in_epsilon(10.145285596450464, worksheet.costs_s158, 0.001); end
  def test_costs_t9; assert_in_epsilon(8.819952182677524, worksheet.costs_t9, 0.001); end
  def test_costs_t78; assert_in_epsilon(11.759936243570033, worksheet.costs_t78, 0.001); end
  def test_costs_t158; assert_in_epsilon(10.289944213123778, worksheet.costs_t158, 0.001); end
  def test_costs_u9; assert_in_epsilon(8.932479959856614, worksheet.costs_u9, 0.001); end
  def test_costs_u78; assert_in_epsilon(11.909973279808826, worksheet.costs_u78, 0.001); end
  def test_costs_u158; assert_in_epsilon(10.42122661983272, worksheet.costs_u158, 0.001); end
  def test_costs_v9; assert_in_epsilon(9.034034015104314, worksheet.costs_v9, 0.001); end
  def test_costs_v78; assert_in_epsilon(12.045378686805755, worksheet.costs_v78, 0.001); end
  def test_costs_v158; assert_in_epsilon(10.539706350955035, worksheet.costs_v158, 0.001); end
  def test_costs_w9; assert_in_epsilon(9.125088637780058, worksheet.costs_w9, 0.001); end
  def test_costs_w78; assert_in_epsilon(12.166784850373412, worksheet.costs_w78, 0.001); end
  def test_costs_w158; assert_in_epsilon(10.645936744076735, worksheet.costs_w158, 0.001); end
  def test_costs_x9; assert_in_epsilon(9.206101361505095, worksheet.costs_x9, 0.001); end
  def test_costs_x78; assert_in_epsilon(12.274801815340126, worksheet.costs_x78, 0.001); end
  def test_costs_x158; assert_in_epsilon(10.74045158842261, worksheet.costs_x158, 0.001); end
  def test_costs_y158; assert_in_epsilon(10.245294229004536, worksheet.costs_y158, 0.001); end
  def test_costs_z9; assert_in_delta(0, (worksheet.costs_z9||0), 0.001); end
  def test_costs_z78; assert_in_delta(0, (worksheet.costs_z78||0), 0.001); end
  def test_costs_z158; assert_in_delta(0, (worksheet.costs_z158||0), 0.001); end
  def test_costs_aa9; assert_in_delta(0, (worksheet.costs_aa9||0), 0.001); end
  def test_costs_aa78; assert_in_delta(0, (worksheet.costs_aa78||0), 0.001); end
  def test_costs_aa158; assert_in_delta(0, (worksheet.costs_aa158||0), 0.001); end
  def test_costs_ab9; assert_in_delta(0, (worksheet.costs_ab9||0), 0.001); end
  def test_costs_ab78; assert_in_delta(0, (worksheet.costs_ab78||0), 0.001); end
  def test_costs_ab158; assert_in_delta(0, (worksheet.costs_ab158||0), 0.001); end
  def test_costs_ac9; assert_in_delta(0, (worksheet.costs_ac9||0), 0.001); end
  def test_costs_ac78; assert_in_delta(0, (worksheet.costs_ac78||0), 0.001); end
  def test_costs_ac158; assert_in_delta(0, (worksheet.costs_ac158||0), 0.001); end
  def test_costs_ad9; assert_in_delta(0, (worksheet.costs_ad9||0), 0.001); end
  def test_costs_ad78; assert_in_delta(0, (worksheet.costs_ad78||0), 0.001); end
  def test_costs_ad158; assert_in_delta(0, (worksheet.costs_ad158||0), 0.001); end
  def test_costs_ae9; assert_in_delta(0, (worksheet.costs_ae9||0), 0.001); end
  def test_costs_ae78; assert_in_delta(0, (worksheet.costs_ae78||0), 0.001); end
  def test_costs_ae158; assert_in_delta(0, (worksheet.costs_ae158||0), 0.001); end
  def test_costs_af9; assert_in_delta(0, (worksheet.costs_af9||0), 0.001); end
  def test_costs_af78; assert_in_delta(0, (worksheet.costs_af78||0), 0.001); end
  def test_costs_af158; assert_in_delta(0, (worksheet.costs_af158||0), 0.001); end
  def test_costs_ag9; assert_in_delta(0, (worksheet.costs_ag9||0), 0.001); end
  def test_costs_ag78; assert_in_delta(0, (worksheet.costs_ag78||0), 0.001); end
  def test_costs_ag158; assert_in_delta(0, (worksheet.costs_ag158||0), 0.001); end
  def test_costs_ah9; assert_in_delta(0, (worksheet.costs_ah9||0), 0.001); end
  def test_costs_ah78; assert_in_delta(0, (worksheet.costs_ah78||0), 0.001); end
  def test_costs_ah158; assert_in_delta(0, (worksheet.costs_ah158||0), 0.001); end
  def test_costs_ai158; assert_in_delta(0, (worksheet.costs_ai158||0), 0.001); end
  def test_costs_b159; assert_equal("III.c", worksheet.costs_b159); end
  def test_costs_c159; assert_equal("Tidal and Wave [UNUSED]", worksheet.costs_c159); end
  def test_costs_e159; assert_equal("MEUR", worksheet.costs_e159); end
  def test_costs_f10; assert_in_delta(0, (worksheet.costs_f10||0), 0.001); end
  def test_costs_f79; assert_in_delta(0, (worksheet.costs_f79||0), 0.001); end
  def test_costs_f159; assert_in_delta(0, (worksheet.costs_f159||0), 0.001); end
  def test_costs_g10; assert_in_delta(0, (worksheet.costs_g10||0), 0.001); end
  def test_costs_g79; assert_in_delta(0, (worksheet.costs_g79||0), 0.001); end
  def test_costs_g159; assert_in_delta(0, (worksheet.costs_g159||0), 0.001); end
  def test_costs_h10; assert_in_delta(0, (worksheet.costs_h10||0), 0.001); end
  def test_costs_h79; assert_in_delta(0, (worksheet.costs_h79||0), 0.001); end
  def test_costs_h159; assert_in_delta(0, (worksheet.costs_h159||0), 0.001); end
  def test_costs_i10; assert_in_delta(0, (worksheet.costs_i10||0), 0.001); end
  def test_costs_i79; assert_in_delta(0, (worksheet.costs_i79||0), 0.001); end
  def test_costs_i159; assert_in_delta(0, (worksheet.costs_i159||0), 0.001); end
  def test_costs_j10; assert_in_delta(0, (worksheet.costs_j10||0), 0.001); end
  def test_costs_j79; assert_in_delta(0, (worksheet.costs_j79||0), 0.001); end
  def test_costs_j159; assert_in_delta(0, (worksheet.costs_j159||0), 0.001); end
  def test_costs_k10; assert_in_delta(0, (worksheet.costs_k10||0), 0.001); end
  def test_costs_k79; assert_in_delta(0, (worksheet.costs_k79||0), 0.001); end
  def test_costs_k159; assert_in_delta(0, (worksheet.costs_k159||0), 0.001); end
  def test_costs_l10; assert_in_delta(0, (worksheet.costs_l10||0), 0.001); end
  def test_costs_l79; assert_in_delta(0, (worksheet.costs_l79||0), 0.001); end
  def test_costs_l159; assert_in_delta(0, (worksheet.costs_l159||0), 0.001); end
  def test_costs_m10; assert_in_delta(0, (worksheet.costs_m10||0), 0.001); end
  def test_costs_m79; assert_in_delta(0, (worksheet.costs_m79||0), 0.001); end
  def test_costs_m159; assert_in_delta(0, (worksheet.costs_m159||0), 0.001); end
  def test_costs_n10; assert_in_delta(0, (worksheet.costs_n10||0), 0.001); end
  def test_costs_n79; assert_in_delta(0, (worksheet.costs_n79||0), 0.001); end
  def test_costs_n159; assert_in_delta(0, (worksheet.costs_n159||0), 0.001); end
  def test_costs_o159; assert_in_delta(0, (worksheet.costs_o159||0), 0.001); end
  def test_costs_p10; assert_in_delta(0, (worksheet.costs_p10||0), 0.001); end
  def test_costs_p79; assert_in_delta(0, (worksheet.costs_p79||0), 0.001); end
  def test_costs_p159; assert_in_delta(0, (worksheet.costs_p159||0), 0.001); end
  def test_costs_q10; assert_in_delta(0, (worksheet.costs_q10||0), 0.001); end
  def test_costs_q79; assert_in_delta(0, (worksheet.costs_q79||0), 0.001); end
  def test_costs_q159; assert_in_delta(0, (worksheet.costs_q159||0), 0.001); end
  def test_costs_r10; assert_in_delta(0, (worksheet.costs_r10||0), 0.001); end
  def test_costs_r79; assert_in_delta(0, (worksheet.costs_r79||0), 0.001); end
  def test_costs_r159; assert_in_delta(0, (worksheet.costs_r159||0), 0.001); end
  def test_costs_s10; assert_in_delta(0, (worksheet.costs_s10||0), 0.001); end
  def test_costs_s79; assert_in_delta(0, (worksheet.costs_s79||0), 0.001); end
  def test_costs_s159; assert_in_delta(0, (worksheet.costs_s159||0), 0.001); end
  def test_costs_t10; assert_in_delta(0, (worksheet.costs_t10||0), 0.001); end
  def test_costs_t79; assert_in_delta(0, (worksheet.costs_t79||0), 0.001); end
  def test_costs_t159; assert_in_delta(0, (worksheet.costs_t159||0), 0.001); end
  def test_costs_u10; assert_in_delta(0, (worksheet.costs_u10||0), 0.001); end
  def test_costs_u79; assert_in_delta(0, (worksheet.costs_u79||0), 0.001); end
  def test_costs_u159; assert_in_delta(0, (worksheet.costs_u159||0), 0.001); end
  def test_costs_v10; assert_in_delta(0, (worksheet.costs_v10||0), 0.001); end
  def test_costs_v79; assert_in_delta(0, (worksheet.costs_v79||0), 0.001); end
  def test_costs_v159; assert_in_delta(0, (worksheet.costs_v159||0), 0.001); end
  def test_costs_w10; assert_in_delta(0, (worksheet.costs_w10||0), 0.001); end
  def test_costs_w79; assert_in_delta(0, (worksheet.costs_w79||0), 0.001); end
  def test_costs_w159; assert_in_delta(0, (worksheet.costs_w159||0), 0.001); end
  def test_costs_x10; assert_in_delta(0, (worksheet.costs_x10||0), 0.001); end
  def test_costs_x79; assert_in_delta(0, (worksheet.costs_x79||0), 0.001); end
  def test_costs_x159; assert_in_delta(0, (worksheet.costs_x159||0), 0.001); end
  def test_costs_y159; assert_in_delta(0, (worksheet.costs_y159||0), 0.001); end
  def test_costs_z159; assert_in_delta(0, (worksheet.costs_z159||0), 0.001); end
  def test_costs_aa159; assert_in_delta(0, (worksheet.costs_aa159||0), 0.001); end
  def test_costs_ab159; assert_in_delta(0, (worksheet.costs_ab159||0), 0.001); end
  def test_costs_ac159; assert_in_delta(0, (worksheet.costs_ac159||0), 0.001); end
  def test_costs_ad159; assert_in_delta(0, (worksheet.costs_ad159||0), 0.001); end
  def test_costs_ae159; assert_in_delta(0, (worksheet.costs_ae159||0), 0.001); end
  def test_costs_af159; assert_in_delta(0, (worksheet.costs_af159||0), 0.001); end
  def test_costs_ag159; assert_in_delta(0, (worksheet.costs_ag159||0), 0.001); end
  def test_costs_ah159; assert_in_delta(0, (worksheet.costs_ah159||0), 0.001); end
  def test_costs_ai159; assert_in_delta(0, (worksheet.costs_ai159||0), 0.001); end
  def test_costs_aj10; assert_in_delta(0, (worksheet.costs_aj10||0), 0.001); end
  def test_costs_aj79; assert_in_delta(0, (worksheet.costs_aj79||0), 0.001); end
  def test_costs_aj159; assert_in_delta(0, (worksheet.costs_aj159||0), 0.001); end
  def test_costs_ak10; assert_in_delta(0, (worksheet.costs_ak10||0), 0.001); end
  def test_costs_ak79; assert_in_delta(0, (worksheet.costs_ak79||0), 0.001); end
  def test_costs_ak159; assert_in_delta(0, (worksheet.costs_ak159||0), 0.001); end
  def test_costs_al10; assert_in_delta(0, (worksheet.costs_al10||0), 0.001); end
  def test_costs_al79; assert_in_delta(0, (worksheet.costs_al79||0), 0.001); end
  def test_costs_al159; assert_in_delta(0, (worksheet.costs_al159||0), 0.001); end
  def test_costs_am10; assert_in_delta(0, (worksheet.costs_am10||0), 0.001); end
  def test_costs_am79; assert_in_delta(0, (worksheet.costs_am79||0), 0.001); end
  def test_costs_am159; assert_in_delta(0, (worksheet.costs_am159||0), 0.001); end
  def test_costs_an10; assert_in_delta(0, (worksheet.costs_an10||0), 0.001); end
  def test_costs_an79; assert_in_delta(0, (worksheet.costs_an79||0), 0.001); end
  def test_costs_an159; assert_in_delta(0, (worksheet.costs_an159||0), 0.001); end
  def test_costs_ao10; assert_in_delta(0, (worksheet.costs_ao10||0), 0.001); end
  def test_costs_ao79; assert_in_delta(0, (worksheet.costs_ao79||0), 0.001); end
  def test_costs_ao159; assert_in_delta(0, (worksheet.costs_ao159||0), 0.001); end
  def test_costs_ap10; assert_in_delta(0, (worksheet.costs_ap10||0), 0.001); end
  def test_costs_ap79; assert_in_delta(0, (worksheet.costs_ap79||0), 0.001); end
  def test_costs_ap159; assert_in_delta(0, (worksheet.costs_ap159||0), 0.001); end
  def test_costs_aq10; assert_in_delta(0, (worksheet.costs_aq10||0), 0.001); end
  def test_costs_aq79; assert_in_delta(0, (worksheet.costs_aq79||0), 0.001); end
  def test_costs_aq159; assert_in_delta(0, (worksheet.costs_aq159||0), 0.001); end
  def test_costs_ar10; assert_in_delta(0, (worksheet.costs_ar10||0), 0.001); end
  def test_costs_ar79; assert_in_delta(0, (worksheet.costs_ar79||0), 0.001); end
  def test_costs_ar159; assert_in_delta(0, (worksheet.costs_ar159||0), 0.001); end
  def test_costs_b160; assert_equal("III.d", worksheet.costs_b160); end
  def test_costs_c160; assert_equal("Geothermal electricity", worksheet.costs_c160); end
  def test_costs_e160; assert_equal("MEUR", worksheet.costs_e160); end
  def test_costs_f160; assert_in_delta(0, (worksheet.costs_f160||0), 0.001); end
  def test_costs_g11; assert_in_epsilon(25.6767313473, worksheet.costs_g11, 0.001); end
  def test_costs_g80; assert_in_epsilon(31.382671646699993, worksheet.costs_g80, 0.001); end
  def test_costs_g160; assert_in_epsilon(28.529701496999998, worksheet.costs_g160, 0.001); end
  def test_costs_h11; assert_in_epsilon(164.1576477793965, worksheet.costs_h11, 0.001); end
  def test_costs_h80; assert_in_epsilon(200.6371250637068, worksheet.costs_h80, 0.001); end
  def test_costs_h160; assert_in_epsilon(182.39738642155166, worksheet.costs_h160, 0.001); end
  def test_costs_i11; assert_in_epsilon(166.73238169712968, worksheet.costs_i11, 0.001); end
  def test_costs_i80; assert_in_epsilon(203.78402207426961, worksheet.costs_i80, 0.001); end
  def test_costs_i160; assert_in_epsilon(185.25820188569963, worksheet.costs_i160, 0.001); end
  def test_costs_j11; assert_in_epsilon(411.3163296144388, worksheet.costs_j11, 0.001); end
  def test_costs_j80; assert_in_epsilon(502.71995841764743, worksheet.costs_j80, 0.001); end
  def test_costs_j160; assert_in_epsilon(457.01814401604315, worksheet.costs_j160, 0.001); end
  def test_costs_k11; assert_in_epsilon(646.8544975878584, worksheet.costs_k11, 0.001); end
  def test_costs_k80; assert_in_epsilon(790.5999414962714, worksheet.costs_k80, 0.001); end
  def test_costs_k160; assert_in_epsilon(718.7272195420649, worksheet.costs_k160, 0.001); end
  def test_costs_l11; assert_in_epsilon(830.3722282326181, worksheet.costs_l11, 0.001); end
  def test_costs_l80; assert_in_epsilon(1014.899390062089, worksheet.costs_l80, 0.001); end
  def test_costs_l160; assert_in_epsilon(922.6358091473535, worksheet.costs_l160, 0.001); end
  def test_costs_m11; assert_in_epsilon(886.2340443006574, worksheet.costs_m11, 0.001); end
  def test_costs_m80; assert_in_epsilon(1083.174943034137, worksheet.costs_m80, 0.001); end
  def test_costs_m160; assert_in_epsilon(984.7044936673972, worksheet.costs_m160, 0.001); end
  def test_costs_n11; assert_in_epsilon(1174.8350440645597, worksheet.costs_n11, 0.001); end
  def test_costs_n80; assert_in_epsilon(1435.9094983011287, worksheet.costs_n80, 0.001); end
  def test_costs_n160; assert_in_epsilon(1305.372271182844, worksheet.costs_n160, 0.001); end
  def test_costs_o160; assert_in_epsilon(531.6270252622171, worksheet.costs_o160, 0.001); end
  def test_costs_p11; assert_in_delta(0, (worksheet.costs_p11||0), 0.001); end
  def test_costs_p80; assert_in_delta(0, (worksheet.costs_p80||0), 0.001); end
  def test_costs_p160; assert_in_delta(0, (worksheet.costs_p160||0), 0.001); end
  def test_costs_q11; assert_in_epsilon(3.2095914184125003, worksheet.costs_q11, 0.001); end
  def test_costs_q80; assert_in_epsilon(3.9228339558374996, worksheet.costs_q80, 0.001); end
  def test_costs_q160; assert_in_epsilon(3.5662126871249997, worksheet.costs_q160, 0.001); end
  def test_costs_r11; assert_in_epsilon(23.571995475579275, worksheet.costs_r11, 0.001); end
  def test_costs_r80; assert_in_epsilon(28.810216692374674, worksheet.costs_r80, 0.001); end
  def test_costs_r160; assert_in_epsilon(26.191106083976976, worksheet.costs_r160, 0.001); end
  def test_costs_s11; assert_in_epsilon(43.258280865704926, worksheet.costs_s11, 0.001); end
  def test_costs_s80; assert_in_epsilon(52.871232169194904, worksheet.costs_s80, 0.001); end
  def test_costs_s160; assert_in_epsilon(48.064756517449915, worksheet.costs_s160, 0.001); end
  def test_costs_t11; assert_in_epsilon(92.55273588086979, worksheet.costs_t11, 0.001); end
  def test_costs_t80; assert_in_epsilon(113.12001052106308, worksheet.costs_t80, 0.001); end
  def test_costs_t160; assert_in_epsilon(102.83637320096643, worksheet.costs_t160, 0.001); end
  def test_costs_u11; assert_in_epsilon(170.78964327081576, worksheet.costs_u11, 0.001); end
  def test_costs_u80; assert_in_epsilon(208.74289733099704, worksheet.costs_u80, 0.001); end
  def test_costs_u160; assert_in_epsilon(189.7662703009064, worksheet.costs_u160, 0.001); end
  def test_costs_v11; assert_in_epsilon(267.4566397264776, worksheet.costs_v11, 0.001); end
  def test_costs_v80; assert_in_epsilon(326.89144855458375, worksheet.costs_v80, 0.001); end
  def test_costs_v160; assert_in_epsilon(297.17404414053067, worksheet.costs_v160, 0.001); end
  def test_costs_w11; assert_in_epsilon(351.740570716441, worksheet.costs_w11, 0.001); end
  def test_costs_w80; assert_in_epsilon(429.90514198676135, worksheet.costs_w80, 0.001); end
  def test_costs_w160; assert_in_epsilon(390.8228563516012, worksheet.costs_w160, 0.001); end
  def test_costs_x11; assert_in_epsilon(452.9675167034783, worksheet.costs_x11, 0.001); end
  def test_costs_x80; assert_in_epsilon(553.6269648598068, worksheet.costs_x80, 0.001); end
  def test_costs_x160; assert_in_epsilon(503.29724078164253, worksheet.costs_x160, 0.001); end
  def test_costs_y160; assert_in_epsilon(173.524317784911, worksheet.costs_y160, 0.001); end
  def test_costs_z160; assert_in_delta(0, (worksheet.costs_z160||0), 0.001); end
  def test_costs_aa160; assert_in_delta(0, (worksheet.costs_aa160||0), 0.001); end
  def test_costs_ab160; assert_in_delta(0, (worksheet.costs_ab160||0), 0.001); end
  def test_costs_ac160; assert_in_delta(0, (worksheet.costs_ac160||0), 0.001); end
  def test_costs_ad160; assert_in_delta(0, (worksheet.costs_ad160||0), 0.001); end
  def test_costs_ae160; assert_in_delta(0, (worksheet.costs_ae160||0), 0.001); end
  def test_costs_af160; assert_in_delta(0, (worksheet.costs_af160||0), 0.001); end
  def test_costs_ag160; assert_in_delta(0, (worksheet.costs_ag160||0), 0.001); end
  def test_costs_ah160; assert_in_delta(0, (worksheet.costs_ah160||0), 0.001); end
  def test_costs_ai160; assert_in_delta(0, (worksheet.costs_ai160||0), 0.001); end
  def test_costs_b161; assert_equal("III.e", worksheet.costs_b161); end
  def test_costs_c161; assert_equal("Tidal [UNUSED]", worksheet.costs_c161); end
  def test_costs_e161; assert_equal("MEUR", worksheet.costs_e161); end
  def test_costs_f161; assert_in_delta(0, (worksheet.costs_f161||0), 0.001); end
  def test_costs_g161; assert_in_delta(0, (worksheet.costs_g161||0), 0.001); end
  def test_costs_h161; assert_in_delta(0, (worksheet.costs_h161||0), 0.001); end
  def test_costs_i161; assert_in_delta(0, (worksheet.costs_i161||0), 0.001); end
  def test_costs_j161; assert_in_delta(0, (worksheet.costs_j161||0), 0.001); end
  def test_costs_k161; assert_in_delta(0, (worksheet.costs_k161||0), 0.001); end
  def test_costs_l161; assert_in_delta(0, (worksheet.costs_l161||0), 0.001); end
  def test_costs_m161; assert_in_delta(0, (worksheet.costs_m161||0), 0.001); end
  def test_costs_n161; assert_in_delta(0, (worksheet.costs_n161||0), 0.001); end
  def test_costs_o161; assert_in_delta(0, (worksheet.costs_o161||0), 0.001); end
  def test_costs_p161; assert_in_delta(0, (worksheet.costs_p161||0), 0.001); end
  def test_costs_q161; assert_in_delta(0, (worksheet.costs_q161||0), 0.001); end
  def test_costs_r161; assert_in_delta(0, (worksheet.costs_r161||0), 0.001); end
  def test_costs_s161; assert_in_delta(0, (worksheet.costs_s161||0), 0.001); end
  def test_costs_t161; assert_in_delta(0, (worksheet.costs_t161||0), 0.001); end
  def test_costs_u161; assert_in_delta(0, (worksheet.costs_u161||0), 0.001); end
  def test_costs_v161; assert_in_delta(0, (worksheet.costs_v161||0), 0.001); end
  def test_costs_w161; assert_in_delta(0, (worksheet.costs_w161||0), 0.001); end
  def test_costs_x161; assert_in_delta(0, (worksheet.costs_x161||0), 0.001); end
  def test_costs_y161; assert_in_delta(0, (worksheet.costs_y161||0), 0.001); end
  def test_costs_z161; assert_in_delta(0, (worksheet.costs_z161||0), 0.001); end
  def test_costs_aa161; assert_in_delta(0, (worksheet.costs_aa161||0), 0.001); end
  def test_costs_ab161; assert_in_delta(0, (worksheet.costs_ab161||0), 0.001); end
  def test_costs_ac161; assert_in_delta(0, (worksheet.costs_ac161||0), 0.001); end
  def test_costs_ad161; assert_in_delta(0, (worksheet.costs_ad161||0), 0.001); end
  def test_costs_ae161; assert_in_delta(0, (worksheet.costs_ae161||0), 0.001); end
  def test_costs_af161; assert_in_delta(0, (worksheet.costs_af161||0), 0.001); end
  def test_costs_ag161; assert_in_delta(0, (worksheet.costs_ag161||0), 0.001); end
  def test_costs_ah161; assert_in_delta(0, (worksheet.costs_ah161||0), 0.001); end
  def test_costs_ai161; assert_in_delta(0, (worksheet.costs_ai161||0), 0.001); end
  def test_costs_aj161; assert_in_delta(0, (worksheet.costs_aj161||0), 0.001); end
  def test_costs_ak161; assert_in_delta(0, (worksheet.costs_ak161||0), 0.001); end
  def test_costs_al161; assert_in_delta(0, (worksheet.costs_al161||0), 0.001); end
  def test_costs_am161; assert_in_delta(0, (worksheet.costs_am161||0), 0.001); end
  def test_costs_an161; assert_in_delta(0, (worksheet.costs_an161||0), 0.001); end
  def test_costs_ao161; assert_in_delta(0, (worksheet.costs_ao161||0), 0.001); end
  def test_costs_ap161; assert_in_delta(0, (worksheet.costs_ap161||0), 0.001); end
  def test_costs_aq161; assert_in_delta(0, (worksheet.costs_aq161||0), 0.001); end
  def test_costs_ar161; assert_in_delta(0, (worksheet.costs_ar161||0), 0.001); end
  def test_costs_b162; assert_equal("IV.a", worksheet.costs_b162); end
  def test_costs_c162; assert_equal("Solar PV", worksheet.costs_c162); end
  def test_costs_e162; assert_equal("MEUR", worksheet.costs_e162); end
  def test_costs_o162; assert_in_epsilon(1720.3510955756972, worksheet.costs_o162, 0.001); end
  def test_costs_p162; assert_in_epsilon(26.108999999999998, worksheet.costs_p162, 0.001); end
  def test_costs_y162; assert_in_epsilon(159.1567519555167, worksheet.costs_y162, 0.001); end
  def test_costs_z162; assert_in_delta(0, (worksheet.costs_z162||0), 0.001); end
  def test_costs_ai162; assert_in_delta(0, (worksheet.costs_ai162||0), 0.001); end
  def test_costs_b163; assert_equal("VII.a.Imports", worksheet.costs_b163); end
  def test_costs_c163; assert_equal("Electricity imports", worksheet.costs_c163); end
  def test_costs_e163; assert_equal("MEUR", worksheet.costs_e163); end
  def test_costs_f163; assert_in_delta(0, (worksheet.costs_f163||0), 0.001); end
  def test_costs_g163; assert_in_delta(0, (worksheet.costs_g163||0), 0.001); end
  def test_costs_h163; assert_in_delta(0, (worksheet.costs_h163||0), 0.001); end
  def test_costs_i163; assert_in_delta(0, (worksheet.costs_i163||0), 0.001); end
  def test_costs_j163; assert_in_delta(0, (worksheet.costs_j163||0), 0.001); end
  def test_costs_k163; assert_in_delta(0, (worksheet.costs_k163||0), 0.001); end
  def test_costs_l163; assert_in_delta(0, (worksheet.costs_l163||0), 0.001); end
  def test_costs_m163; assert_in_delta(0, (worksheet.costs_m163||0), 0.001); end
  def test_costs_n163; assert_in_delta(0, (worksheet.costs_n163||0), 0.001); end
  def test_costs_o163; assert_in_delta(0, (worksheet.costs_o163||0), 0.001); end
  def test_costs_p163; assert_in_delta(0, (worksheet.costs_p163||0), 0.001); end
  def test_costs_q163; assert_in_delta(0, (worksheet.costs_q163||0), 0.001); end
  def test_costs_r163; assert_in_delta(0, (worksheet.costs_r163||0), 0.001); end
  def test_costs_s163; assert_in_delta(0, (worksheet.costs_s163||0), 0.001); end
  def test_costs_t163; assert_in_delta(0, (worksheet.costs_t163||0), 0.001); end
  def test_costs_u163; assert_in_delta(0, (worksheet.costs_u163||0), 0.001); end
  def test_costs_v163; assert_in_delta(0, (worksheet.costs_v163||0), 0.001); end
  def test_costs_w163; assert_in_delta(0, (worksheet.costs_w163||0), 0.001); end
  def test_costs_x163; assert_in_delta(0, (worksheet.costs_x163||0), 0.001); end
  def test_costs_y163; assert_in_delta(0, (worksheet.costs_y163||0), 0.001); end
  def test_costs_z21; assert_in_delta(0, (worksheet.costs_z21||0), 0.001); end
  def test_costs_z90; assert_in_delta(0, (worksheet.costs_z90||0), 0.001); end
  def test_costs_z163; assert_in_delta(0, (worksheet.costs_z163||0), 0.001); end
  def test_costs_aa21; assert_in_epsilon(178.5, worksheet.costs_aa21, 0.001); end
  def test_costs_aa90; assert_in_epsilon(211.3125, worksheet.costs_aa90, 0.001); end
  def test_costs_aa163; assert_in_epsilon(194.90625, worksheet.costs_aa163, 0.001); end
  def test_costs_ab21; assert_in_epsilon(336, worksheet.costs_ab21, 0.001); end
  def test_costs_ab90; assert_in_epsilon(467.25, worksheet.costs_ab90, 0.001); end
  def test_costs_ab163; assert_in_epsilon(401.625, worksheet.costs_ab163, 0.001); end
  def test_costs_ac21; assert_in_epsilon(539.4375000000001, worksheet.costs_ac21, 0.001); end
  def test_costs_ac90; assert_in_epsilon(720.5625000000001, worksheet.costs_ac90, 0.001); end
  def test_costs_ac163; assert_in_epsilon(630.0000000000001, worksheet.costs_ac163, 0.001); end
  def test_costs_ad21; assert_in_epsilon(766.5, worksheet.costs_ad21, 0.001); end
  def test_costs_ad90; assert_in_epsilon(987, worksheet.costs_ad90, 0.001); end
  def test_costs_ad163; assert_in_epsilon(876.75, worksheet.costs_ad163, 0.001); end
  def test_costs_ae21; assert_in_epsilon(951.5625, worksheet.costs_ae21, 0.001); end
  def test_costs_ae90; assert_in_epsilon(1214.0625, worksheet.costs_ae90, 0.001); end
  def test_costs_ae163; assert_in_epsilon(1082.8125, worksheet.costs_ae163, 0.001); end
  def test_costs_af21; assert_in_epsilon(1134, worksheet.costs_af21, 0.001); end
  def test_costs_af90; assert_in_epsilon(1433.25, worksheet.costs_af90, 0.001); end
  def test_costs_af163; assert_in_epsilon(1283.625, worksheet.costs_af163, 0.001); end
  def test_costs_ag21; assert_in_epsilon(1313.8125, worksheet.costs_ag21, 0.001); end
  def test_costs_ag90; assert_in_epsilon(1662.9375, worksheet.costs_ag90, 0.001); end
  def test_costs_ag163; assert_in_epsilon(1488.375, worksheet.costs_ag163, 0.001); end
  def test_costs_ah21; assert_in_epsilon(1491, worksheet.costs_ah21, 0.001); end
  def test_costs_ah90; assert_in_epsilon(1890, worksheet.costs_ah90, 0.001); end
  def test_costs_ah163; assert_in_epsilon(1690.5, worksheet.costs_ah163, 0.001); end
  def test_costs_ai163; assert_in_epsilon(849.84375, worksheet.costs_ai163, 0.001); end
  def test_costs_b164; assert_equal("VII.a.Exports", worksheet.costs_b164); end
  def test_costs_c164; assert_equal("Electricity exports", worksheet.costs_c164); end
  def test_costs_e164; assert_equal("MEUR", worksheet.costs_e164); end
  def test_costs_f164; assert_in_delta(0, (worksheet.costs_f164||0), 0.001); end
  def test_costs_g22; assert_in_delta(0, (worksheet.costs_g22||0), 0.001); end
  def test_costs_g91; assert_in_delta(0, (worksheet.costs_g91||0), 0.001); end
  def test_costs_g164; assert_in_delta(0, (worksheet.costs_g164||0), 0.001); end
  def test_costs_h22; assert_in_delta(0, (worksheet.costs_h22||0), 0.001); end
  def test_costs_h91; assert_in_delta(0, (worksheet.costs_h91||0), 0.001); end
  def test_costs_h164; assert_in_delta(0, (worksheet.costs_h164||0), 0.001); end
  def test_costs_i22; assert_in_delta(0, (worksheet.costs_i22||0), 0.001); end
  def test_costs_i91; assert_in_delta(0, (worksheet.costs_i91||0), 0.001); end
  def test_costs_i164; assert_in_delta(0, (worksheet.costs_i164||0), 0.001); end
  def test_costs_j22; assert_in_delta(0, (worksheet.costs_j22||0), 0.001); end
  def test_costs_j91; assert_in_delta(0, (worksheet.costs_j91||0), 0.001); end
  def test_costs_j164; assert_in_delta(0, (worksheet.costs_j164||0), 0.001); end
  def test_costs_k22; assert_in_delta(0, (worksheet.costs_k22||0), 0.001); end
  def test_costs_k91; assert_in_delta(0, (worksheet.costs_k91||0), 0.001); end
  def test_costs_k164; assert_in_delta(0, (worksheet.costs_k164||0), 0.001); end
  def test_costs_l22; assert_in_delta(0, (worksheet.costs_l22||0), 0.001); end
  def test_costs_l91; assert_in_delta(0, (worksheet.costs_l91||0), 0.001); end
  def test_costs_l164; assert_in_delta(0, (worksheet.costs_l164||0), 0.001); end
  def test_costs_m22; assert_in_delta(0, (worksheet.costs_m22||0), 0.001); end
  def test_costs_m91; assert_in_delta(0, (worksheet.costs_m91||0), 0.001); end
  def test_costs_m164; assert_in_delta(0, (worksheet.costs_m164||0), 0.001); end
  def test_costs_n22; assert_in_delta(0, (worksheet.costs_n22||0), 0.001); end
  def test_costs_n91; assert_in_delta(0, (worksheet.costs_n91||0), 0.001); end
  def test_costs_n164; assert_in_delta(0, (worksheet.costs_n164||0), 0.001); end
  def test_costs_o164; assert_in_delta(0, (worksheet.costs_o164||0), 0.001); end
  def test_costs_p22; assert_in_delta(0, (worksheet.costs_p22||0), 0.001); end
  def test_costs_p91; assert_in_delta(0, (worksheet.costs_p91||0), 0.001); end
  def test_costs_p164; assert_in_delta(0, (worksheet.costs_p164||0), 0.001); end
  def test_costs_q22; assert_in_delta(0, (worksheet.costs_q22||0), 0.001); end
  def test_costs_q91; assert_in_delta(0, (worksheet.costs_q91||0), 0.001); end
  def test_costs_q164; assert_in_delta(0, (worksheet.costs_q164||0), 0.001); end
  def test_costs_r22; assert_in_delta(0, (worksheet.costs_r22||0), 0.001); end
  def test_costs_r91; assert_in_delta(0, (worksheet.costs_r91||0), 0.001); end
  def test_costs_r164; assert_in_delta(0, (worksheet.costs_r164||0), 0.001); end
  def test_costs_s22; assert_in_delta(0, (worksheet.costs_s22||0), 0.001); end
  def test_costs_s91; assert_in_delta(0, (worksheet.costs_s91||0), 0.001); end
  def test_costs_s164; assert_in_delta(0, (worksheet.costs_s164||0), 0.001); end
  def test_costs_t22; assert_in_delta(0, (worksheet.costs_t22||0), 0.001); end
  def test_costs_t91; assert_in_delta(0, (worksheet.costs_t91||0), 0.001); end
  def test_costs_t164; assert_in_delta(0, (worksheet.costs_t164||0), 0.001); end
  def test_costs_u22; assert_in_delta(0, (worksheet.costs_u22||0), 0.001); end
  def test_costs_u91; assert_in_delta(0, (worksheet.costs_u91||0), 0.001); end
  def test_costs_u164; assert_in_delta(0, (worksheet.costs_u164||0), 0.001); end
  def test_costs_v22; assert_in_delta(0, (worksheet.costs_v22||0), 0.001); end
  def test_costs_v91; assert_in_delta(0, (worksheet.costs_v91||0), 0.001); end
  def test_costs_v164; assert_in_delta(0, (worksheet.costs_v164||0), 0.001); end
  def test_costs_w22; assert_in_delta(0, (worksheet.costs_w22||0), 0.001); end
  def test_costs_w91; assert_in_delta(0, (worksheet.costs_w91||0), 0.001); end
  def test_costs_w164; assert_in_delta(0, (worksheet.costs_w164||0), 0.001); end
  def test_costs_x22; assert_in_delta(0, (worksheet.costs_x22||0), 0.001); end
  def test_costs_x91; assert_in_delta(0, (worksheet.costs_x91||0), 0.001); end
  def test_costs_x164; assert_in_delta(0, (worksheet.costs_x164||0), 0.001); end
  def test_costs_y164; assert_in_delta(0, (worksheet.costs_y164||0), 0.001); end
  def test_costs_z22; assert_in_delta(0, (worksheet.costs_z22||0), 0.001); end
  def test_costs_z164; assert_in_delta(0, (worksheet.costs_z164||0), 0.001); end
  def test_costs_aa22; assert_in_delta(0, (worksheet.costs_aa22||0), 0.001); end
  def test_costs_aa164; assert_in_delta(0, (worksheet.costs_aa164||0), 0.001); end
  def test_costs_ab22; assert_in_delta(0, (worksheet.costs_ab22||0), 0.001); end
  def test_costs_ab164; assert_in_delta(0, (worksheet.costs_ab164||0), 0.001); end
  def test_costs_ac22; assert_in_delta(0, (worksheet.costs_ac22||0), 0.001); end
  def test_costs_ac164; assert_in_delta(0, (worksheet.costs_ac164||0), 0.001); end
  def test_costs_ad22; assert_in_delta(0, (worksheet.costs_ad22||0), 0.001); end
  def test_costs_ad164; assert_in_delta(0, (worksheet.costs_ad164||0), 0.001); end
  def test_costs_ae22; assert_in_delta(0, (worksheet.costs_ae22||0), 0.001); end
  def test_costs_ae164; assert_in_delta(0, (worksheet.costs_ae164||0), 0.001); end
  def test_costs_af22; assert_in_delta(0, (worksheet.costs_af22||0), 0.001); end
  def test_costs_af164; assert_in_delta(0, (worksheet.costs_af164||0), 0.001); end
  def test_costs_ag22; assert_in_delta(0, (worksheet.costs_ag22||0), 0.001); end
  def test_costs_ag164; assert_in_delta(0, (worksheet.costs_ag164||0), 0.001); end
  def test_costs_ah22; assert_in_delta(0, (worksheet.costs_ah22||0), 0.001); end
  def test_costs_ah164; assert_in_delta(0, (worksheet.costs_ah164||0), 0.001); end
  def test_costs_ai164; assert_in_delta(0, (worksheet.costs_ai164||0), 0.001); end
  def test_costs_b165; assert_equal("VII.b", worksheet.costs_b165); end
  def test_costs_c165; assert_equal("Electricity grid distribution", worksheet.costs_c165); end
  def test_costs_e165; assert_equal("MEUR", worksheet.costs_e165); end
  def test_costs_f23; assert_in_delta(0, (worksheet.costs_f23||0), 0.001); end
  def test_costs_f92; assert_in_delta(0, (worksheet.costs_f92||0), 0.001); end
  def test_costs_f165; assert_in_delta(0, (worksheet.costs_f165||0), 0.001); end
  def test_costs_g23; assert_in_epsilon(62.29685671941293, worksheet.costs_g23, 0.001); end
  def test_costs_g92; assert_in_epsilon(186.89057015823886, worksheet.costs_g92, 0.001); end
  def test_costs_g165; assert_in_epsilon(124.59371343882589, worksheet.costs_g165, 0.001); end
  def test_costs_h23; assert_in_epsilon(136.72128362782328, worksheet.costs_h23, 0.001); end
  def test_costs_h92; assert_in_epsilon(410.1638508834698, worksheet.costs_h92, 0.001); end
  def test_costs_h165; assert_in_epsilon(273.44256725564657, worksheet.costs_h165, 0.001); end
  def test_costs_i23; assert_in_epsilon(194.50857556779164, worksheet.costs_i23, 0.001); end
  def test_costs_i92; assert_in_epsilon(583.5257267033749, worksheet.costs_i92, 0.001); end
  def test_costs_i165; assert_in_epsilon(389.0171511355833, worksheet.costs_i165, 0.001); end
  def test_costs_j23; assert_in_epsilon(283.5588817973077, worksheet.costs_j23, 0.001); end
  def test_costs_j92; assert_in_epsilon(850.676645391923, worksheet.costs_j92, 0.001); end
  def test_costs_j165; assert_in_epsilon(567.1177635946153, worksheet.costs_j165, 0.001); end
  def test_costs_k23; assert_in_epsilon(338.7745255405241, worksheet.costs_k23, 0.001); end
  def test_costs_k92; assert_in_epsilon(1016.3235766215722, worksheet.costs_k92, 0.001); end
  def test_costs_k165; assert_in_epsilon(677.5490510810482, worksheet.costs_k165, 0.001); end
  def test_costs_l23; assert_in_epsilon(430.4416652997676, worksheet.costs_l23, 0.001); end
  def test_costs_l92; assert_in_epsilon(1291.3249958993026, worksheet.costs_l92, 0.001); end
  def test_costs_l165; assert_in_epsilon(860.8833305995352, worksheet.costs_l165, 0.001); end
  def test_costs_m23; assert_in_epsilon(479.3742076541887, worksheet.costs_m23, 0.001); end
  def test_costs_m92; assert_in_epsilon(1438.1226229625663, worksheet.costs_m92, 0.001); end
  def test_costs_m165; assert_in_epsilon(958.7484153083775, worksheet.costs_m165, 0.001); end
  def test_costs_n23; assert_in_epsilon(721.443527434353, worksheet.costs_n23, 0.001); end
  def test_costs_n92; assert_in_epsilon(2164.3305823030582, worksheet.costs_n92, 0.001); end
  def test_costs_n165; assert_in_epsilon(1442.8870548687055, worksheet.costs_n165, 0.001); end
  def test_costs_o165; assert_in_epsilon(588.2487830313707, worksheet.costs_o165, 0.001); end
  def test_costs_p23; assert_in_delta(0, (worksheet.costs_p23||0), 0.001); end
  def test_costs_p92; assert_in_delta(0, (worksheet.costs_p92||0), 0.001); end
  def test_costs_p165; assert_in_delta(0, (worksheet.costs_p165||0), 0.001); end
  def test_costs_q23; assert_in_epsilon(25.123807875116167, worksheet.costs_q23, 0.001); end
  def test_costs_q92; assert_in_epsilon(75.3714236253485, worksheet.costs_q92, 0.001); end
  def test_costs_q165; assert_in_epsilon(50.247615750232335, worksheet.costs_q165, 0.001); end
  def test_costs_r23; assert_in_epsilon(39.68451499594433, worksheet.costs_r23, 0.001); end
  def test_costs_r92; assert_in_epsilon(119.053544987833, worksheet.costs_r92, 0.001); end
  def test_costs_r165; assert_in_epsilon(79.36902999188867, worksheet.costs_r165, 0.001); end
  def test_costs_s23; assert_in_epsilon(59.41408374204845, worksheet.costs_s23, 0.001); end
  def test_costs_s92; assert_in_epsilon(178.24225122614536, worksheet.costs_s92, 0.001); end
  def test_costs_s165; assert_in_epsilon(118.8281674840969, worksheet.costs_s165, 0.001); end
  def test_costs_t23; assert_in_epsilon(87.78600210490642, worksheet.costs_t23, 0.001); end
  def test_costs_t92; assert_in_epsilon(263.35800631471926, worksheet.costs_t92, 0.001); end
  def test_costs_t165; assert_in_epsilon(175.57200420981283, worksheet.costs_t165, 0.001); end
  def test_costs_u23; assert_in_epsilon(117.48195974034508, worksheet.costs_u23, 0.001); end
  def test_costs_u92; assert_in_epsilon(352.4458792210353, worksheet.costs_u92, 0.001); end
  def test_costs_u165; assert_in_epsilon(234.96391948069018, worksheet.costs_u165, 0.001); end
  def test_costs_v23; assert_in_epsilon(153.72757732046728, worksheet.costs_v23, 0.001); end
  def test_costs_v92; assert_in_epsilon(461.1827319614019, worksheet.costs_v92, 0.001); end
  def test_costs_v165; assert_in_epsilon(307.45515464093455, worksheet.costs_v165, 0.001); end
  def test_costs_w23; assert_in_epsilon(188.3710195230012, worksheet.costs_w23, 0.001); end
  def test_costs_w92; assert_in_epsilon(565.1130585690037, worksheet.costs_w92, 0.001); end
  def test_costs_w165; assert_in_epsilon(376.74203904600245, worksheet.costs_w165, 0.001); end
  def test_costs_x23; assert_in_epsilon(251.25441211699982, worksheet.costs_x23, 0.001); end
  def test_costs_x92; assert_in_epsilon(753.7632363509995, worksheet.costs_x92, 0.001); end
  def test_costs_x165; assert_in_epsilon(502.50882423399963, worksheet.costs_x165, 0.001); end
  def test_costs_y165; assert_in_epsilon(205.07630609307304, worksheet.costs_y165, 0.001); end
  def test_costs_z165; assert_in_delta(0, (worksheet.costs_z165||0), 0.001); end
  def test_costs_aa165; assert_in_delta(0, (worksheet.costs_aa165||0), 0.001); end
  def test_costs_ab165; assert_in_delta(0, (worksheet.costs_ab165||0), 0.001); end
  def test_costs_ac165; assert_in_delta(0, (worksheet.costs_ac165||0), 0.001); end
  def test_costs_ad165; assert_in_delta(0, (worksheet.costs_ad165||0), 0.001); end
  def test_costs_ae165; assert_in_delta(0, (worksheet.costs_ae165||0), 0.001); end
  def test_costs_af165; assert_in_delta(0, (worksheet.costs_af165||0), 0.001); end
  def test_costs_ag165; assert_in_delta(0, (worksheet.costs_ag165||0), 0.001); end
  def test_costs_ah165; assert_in_delta(0, (worksheet.costs_ah165||0), 0.001); end
  def test_costs_ai165; assert_in_delta(0, (worksheet.costs_ai165||0), 0.001); end
  def test_costs_b166; assert_equal("VII.c", worksheet.costs_b166); end
  def test_costs_c166; assert_equal("EU transmission integration", worksheet.costs_c166); end
  def test_costs_e166; assert_equal("MEUR", worksheet.costs_e166); end
  def test_costs_f166; assert_in_delta(0, (worksheet.costs_f166||0), 0.001); end
  def test_costs_g24; assert_in_epsilon(107.26754254476744, worksheet.costs_g24, 0.001); end
  def test_costs_g93; assert_in_epsilon(170.15050131715114, worksheet.costs_g93, 0.001); end
  def test_costs_g166; assert_in_epsilon(138.7090219309593, worksheet.costs_g166, 0.001); end
  def test_costs_h24; assert_in_epsilon(225.05397954193754, worksheet.costs_h24, 0.001); end
  def test_costs_h93; assert_in_epsilon(346.8301568129063, worksheet.costs_h93, 0.001); end
  def test_costs_h166; assert_in_epsilon(285.9420681774219, worksheet.costs_h166, 0.001); end
  def test_costs_i24; assert_in_epsilon(328.8254901144238, worksheet.costs_i24, 0.001); end
  def test_costs_i93; assert_in_epsilon(703.9895418710856, worksheet.costs_i93, 0.001); end
  def test_costs_i166; assert_in_epsilon(516.4075159927547, worksheet.costs_i166, 0.001); end
  def test_costs_j24; assert_in_epsilon(517.685984089245, worksheet.costs_j24, 0.001); end
  def test_costs_j93; assert_in_epsilon(976.5673337464647, worksheet.costs_j93, 0.001); end
  def test_costs_j166; assert_in_epsilon(747.1266589178549, worksheet.costs_j166, 0.001); end
  def test_costs_k24; assert_in_epsilon(593.8449497936894, worksheet.costs_k24, 0.001); end
  def test_costs_k93; assert_in_epsilon(1205.4706752468533, worksheet.costs_k93, 0.001); end
  def test_costs_k166; assert_in_epsilon(899.6578125202714, worksheet.costs_k166, 0.001); end
  def test_costs_l24; assert_in_epsilon(671.6463950375996, worksheet.costs_l24, 0.001); end
  def test_costs_l93; assert_in_epsilon(1341.5408475173494, worksheet.costs_l93, 0.001); end
  def test_costs_l166; assert_in_epsilon(1006.5936212774745, worksheet.costs_l166, 0.001); end
  def test_costs_m24; assert_in_epsilon(643.4934031030558, worksheet.costs_m24, 0.001); end
  def test_costs_m93; assert_in_epsilon(1490.6065242304626, worksheet.costs_m93, 0.001); end
  def test_costs_m166; assert_in_epsilon(1067.0499636667591, worksheet.costs_m166, 0.001); end
  def test_costs_n24; assert_in_epsilon(1003.5799389810039, worksheet.costs_n24, 0.001); end
  def test_costs_n93; assert_in_epsilon(2031.2600157600907, worksheet.costs_n93, 0.001); end
  def test_costs_n166; assert_in_epsilon(1517.4199773705473, worksheet.costs_n166, 0.001); end
  def test_costs_o166; assert_in_epsilon(686.5451822060048, worksheet.costs_o166, 0.001); end
  def test_costs_p24; assert_in_epsilon(9.759487500000002, worksheet.costs_p24, 0.001); end
  def test_costs_p93; assert_in_epsilon(16.2658125, worksheet.costs_p93, 0.001); end
  def test_costs_p166; assert_in_epsilon(13.01265, worksheet.costs_p166, 0.001); end
  def test_costs_q24; assert_in_epsilon(19.74540190802118, worksheet.costs_q24, 0.001); end
  def test_costs_q93; assert_in_epsilon(30.320382302796922, worksheet.costs_q93, 0.001); end
  def test_costs_q166; assert_in_epsilon(25.03289210540905, worksheet.costs_q166, 0.001); end
  def test_costs_r24; assert_in_epsilon(46.137284326362476, worksheet.costs_r24, 0.001); end
  def test_costs_r93; assert_in_epsilon(65.82891027293553, worksheet.costs_r93, 0.001); end
  def test_costs_r166; assert_in_epsilon(55.983097299649, worksheet.costs_r166, 0.001); end
  def test_costs_s24; assert_in_epsilon(84.69637540184313, worksheet.costs_s24, 0.001); end
  def test_costs_s93; assert_in_epsilon(127.56976725020115, worksheet.costs_s93, 0.001); end
  def test_costs_s166; assert_in_epsilon(106.13307132602213, worksheet.costs_s166, 0.001); end
  def test_costs_t24; assert_in_epsilon(144.3162183357522, worksheet.costs_t24, 0.001); end
  def test_costs_t93; assert_in_epsilon(216.8807864128606, worksheet.costs_t93, 0.001); end
  def test_costs_t166; assert_in_epsilon(180.5985023743064, worksheet.costs_t166, 0.001); end
  def test_costs_u24; assert_in_epsilon(212.99928251745473, worksheet.costs_u24, 0.001); end
  def test_costs_u93; assert_in_epsilon(323.94330020562495, worksheet.costs_u93, 0.001); end
  def test_costs_u166; assert_in_epsilon(268.47129136153984, worksheet.costs_u166, 0.001); end
  def test_costs_v24; assert_in_epsilon(294.62752331109647, worksheet.costs_v24, 0.001); end
  def test_costs_v93; assert_in_epsilon(448.67544783160645, worksheet.costs_v93, 0.001); end
  def test_costs_v166; assert_in_epsilon(371.6514855713515, worksheet.costs_v166, 0.001); end
  def test_costs_w24; assert_in_epsilon(368.5365258370886, worksheet.costs_w24, 0.001); end
  def test_costs_w93; assert_in_epsilon(573.2869728881368, worksheet.costs_w93, 0.001); end
  def test_costs_w166; assert_in_epsilon(470.9117493626127, worksheet.costs_w166, 0.001); end
  def test_costs_x24; assert_in_epsilon(494.7338138860747, worksheet.costs_x24, 0.001); end
  def test_costs_x93; assert_in_epsilon(766.0719229960644, worksheet.costs_x93, 0.001); end
  def test_costs_x166; assert_in_epsilon(630.4028684410696, worksheet.costs_x166, 0.001); end
  def test_costs_y166; assert_in_epsilon(235.79973420466226, worksheet.costs_y166, 0.001); end
  def test_costs_z24; assert_in_delta(0, (worksheet.costs_z24||0), 0.001); end
  def test_costs_z93; assert_in_delta(0, (worksheet.costs_z93||0), 0.001); end
  def test_costs_z166; assert_in_delta(0, (worksheet.costs_z166||0), 0.001); end
  def test_costs_aa24; assert_in_epsilon(86.25099861467021, worksheet.costs_aa24, 0.001); end
  def test_costs_aa93; assert_in_epsilon(86.25099861467021, worksheet.costs_aa93, 0.001); end
  def test_costs_aa166; assert_in_epsilon(86.25099861467021, worksheet.costs_aa166, 0.001); end
  def test_costs_ab24; assert_in_epsilon(368.72999460816163, worksheet.costs_ab24, 0.001); end
  def test_costs_ab93; assert_in_epsilon(368.72999460816163, worksheet.costs_ab93, 0.001); end
  def test_costs_ab166; assert_in_epsilon(368.72999460816163, worksheet.costs_ab166, 0.001); end
  def test_costs_ac24; assert_in_epsilon(781.4219104199894, worksheet.costs_ac24, 0.001); end
  def test_costs_ac93; assert_in_epsilon(781.4219104199894, worksheet.costs_ac93, 0.001); end
  def test_costs_ac166; assert_in_epsilon(781.4219104199894, worksheet.costs_ac166, 0.001); end
  def test_costs_ad24; assert_in_epsilon(1410.886673758992, worksheet.costs_ad24, 0.001); end
  def test_costs_ad93; assert_in_epsilon(1410.886673758992, worksheet.costs_ad93, 0.001); end
  def test_costs_ad166; assert_in_epsilon(1410.886673758992, worksheet.costs_ad166, 0.001); end
  def test_costs_ae24; assert_in_epsilon(2138.408524252019, worksheet.costs_ae24, 0.001); end
  def test_costs_ae93; assert_in_epsilon(2138.408524252019, worksheet.costs_ae93, 0.001); end
  def test_costs_ae166; assert_in_epsilon(2138.408524252019, worksheet.costs_ae166, 0.001); end
  def test_costs_af24; assert_in_epsilon(3034.887755786043, worksheet.costs_af24, 0.001); end
  def test_costs_af93; assert_in_epsilon(3034.887755786043, worksheet.costs_af93, 0.001); end
  def test_costs_af166; assert_in_epsilon(3034.887755786043, worksheet.costs_af166, 0.001); end
  def test_costs_ag24; assert_in_epsilon(3813.6003166270602, worksheet.costs_ag24, 0.001); end
  def test_costs_ag93; assert_in_epsilon(3813.6003166270602, worksheet.costs_ag93, 0.001); end
  def test_costs_ag166; assert_in_epsilon(3813.6003166270602, worksheet.costs_ag166, 0.001); end
  def test_costs_ah24; assert_in_epsilon(5232.010406602544, worksheet.costs_ah24, 0.001); end
  def test_costs_ah93; assert_in_epsilon(5232.010406602544, worksheet.costs_ah93, 0.001); end
  def test_costs_ah166; assert_in_epsilon(5232.010406602544, worksheet.costs_ah166, 0.001); end
  def test_costs_ai166; assert_in_epsilon(1874.0218422966088, worksheet.costs_ai166, 0.001); end
  def test_costs_c167; assert_equal("Total", worksheet.costs_c167); end
  def test_costs_f13; assert_in_epsilon(1147.45, worksheet.costs_f13, 0.001); end
  def test_costs_f82; assert_in_epsilon(1190.75, worksheet.costs_f82, 0.001); end
  def test_costs_f162; assert_in_epsilon(1169.1, worksheet.costs_f162, 0.001); end
  def test_costs_f167; assert_in_epsilon(2948.16545890411, worksheet.costs_f167, 0.001); end
  def test_costs_g4; assert_in_epsilon(139.42782986411086, worksheet.costs_g4, 0.001); end
  def test_costs_g73; assert_in_epsilon(268.1304420463671, worksheet.costs_g73, 0.001); end
  def test_costs_g153; assert_in_epsilon(203.77913595523898, worksheet.costs_g153, 0.001); end
  def test_costs_g5; assert_in_delta(0, (worksheet.costs_g5||0), 0.001); end
  def test_costs_g74; assert_in_delta(0, (worksheet.costs_g74||0), 0.001); end
  def test_costs_g154; assert_in_delta(0, (worksheet.costs_g154||0), 0.001); end
  def test_costs_g6; assert_in_delta(0, (worksheet.costs_g6||0), 0.001); end
  def test_costs_g75; assert_in_delta(0, (worksheet.costs_g75||0), 0.001); end
  def test_costs_g155; assert_in_delta(0, (worksheet.costs_g155||0), 0.001); end
  def test_costs_g13; assert_in_epsilon(936.3625, worksheet.costs_g13, 0.001); end
  def test_costs_g82; assert_in_epsilon(1044.6125, worksheet.costs_g82, 0.001); end
  def test_costs_g162; assert_in_epsilon(990.4875, worksheet.costs_g162, 0.001); end
  def test_costs_g167; assert_in_epsilon(3108.152470855211, worksheet.costs_g167, 0.001); end
  def test_costs_e167; assert_in_epsilon(30281.58964879661, worksheet.costs_e167, 0.001); end
  def test_costs_h4; assert_in_epsilon(271.91049840688083, worksheet.costs_h4, 0.001); end
  def test_costs_h73; assert_in_epsilon(438.9561498610711, worksheet.costs_h73, 0.001); end
  def test_costs_h153; assert_in_epsilon(355.43332413397593, worksheet.costs_h153, 0.001); end
  def test_costs_h5; assert_in_delta(0, (worksheet.costs_h5||0), 0.001); end
  def test_costs_h74; assert_in_delta(0, (worksheet.costs_h74||0), 0.001); end
  def test_costs_h154; assert_in_delta(0, (worksheet.costs_h154||0), 0.001); end
  def test_costs_h6; assert_in_delta(0, (worksheet.costs_h6||0), 0.001); end
  def test_costs_h75; assert_in_delta(0, (worksheet.costs_h75||0), 0.001); end
  def test_costs_h155; assert_in_delta(0, (worksheet.costs_h155||0), 0.001); end
  def test_costs_h13; assert_in_epsilon(753.75, worksheet.costs_h13, 0.001); end
  def test_costs_h82; assert_in_epsilon(933.75, worksheet.costs_h82, 0.001); end
  def test_costs_h162; assert_in_epsilon(843.75, worksheet.costs_h162, 0.001); end
  def test_costs_h167; assert_in_epsilon(3661.62756477856, worksheet.costs_h167, 0.001); end
  def test_costs_i4; assert_in_epsilon(335.17660374788386, worksheet.costs_i4, 0.001); end
  def test_costs_i73; assert_in_epsilon(562.4735456163564, worksheet.costs_i73, 0.001); end
  def test_costs_i153; assert_in_epsilon(448.82507468212015, worksheet.costs_i153, 0.001); end
  def test_costs_i5; assert_in_epsilon(188.02041364491004, worksheet.costs_i5, 0.001); end
  def test_costs_i74; assert_in_epsilon(210.58286328229923, worksheet.costs_i74, 0.001); end
  def test_costs_i154; assert_in_epsilon(199.30163846360463, worksheet.costs_i154, 0.001); end
  def test_costs_i6; assert_in_epsilon(540, worksheet.costs_i6, 0.001); end
  def test_costs_i75; assert_in_epsilon(660, worksheet.costs_i75, 0.001); end
  def test_costs_i155; assert_in_epsilon(600, worksheet.costs_i155, 0.001); end
  def test_costs_i13; assert_in_epsilon(827.6469015003264, worksheet.costs_i13, 0.001); end
  def test_costs_i82; assert_in_epsilon(1210.9780979846882, worksheet.costs_i82, 0.001); end
  def test_costs_i162; assert_in_epsilon(1019.3124997425073, worksheet.costs_i162, 0.001); end
  def test_costs_i167; assert_in_epsilon(5125.1185732931335, worksheet.costs_i167, 0.001); end
  def test_costs_j4; assert_in_epsilon(361.58789950829157, worksheet.costs_j4, 0.001); end
  def test_costs_j73; assert_in_epsilon(615.1163075628048, worksheet.costs_j73, 0.001); end
  def test_costs_j153; assert_in_epsilon(488.35210353554817, worksheet.costs_j153, 0.001); end
  def test_costs_j5; assert_in_epsilon(150.41633091592803, worksheet.costs_j5, 0.001); end
  def test_costs_j74; assert_in_epsilon(180.49959709911363, worksheet.costs_j74, 0.001); end
  def test_costs_j154; assert_in_epsilon(165.45796400752084, worksheet.costs_j154, 0.001); end
  def test_costs_j6; assert_in_epsilon(540, worksheet.costs_j6, 0.001); end
  def test_costs_j75; assert_in_epsilon(660, worksheet.costs_j75, 0.001); end
  def test_costs_j155; assert_in_epsilon(600, worksheet.costs_j155, 0.001); end
  def test_costs_j13; assert_in_epsilon(771.4488055755828, worksheet.costs_j13, 0.001); end
  def test_costs_j82; assert_in_epsilon(1542.8976111511656, worksheet.costs_j82, 0.001); end
  def test_costs_j162; assert_in_epsilon(1157.1732083633742, worksheet.costs_j162, 0.001); end
  def test_costs_j167; assert_in_epsilon(5962.911979115917, worksheet.costs_j167, 0.001); end
  def test_costs_k4; assert_in_epsilon(317.187033785434, worksheet.costs_k4, 0.001); end
  def test_costs_k73; assert_in_epsilon(518.3604404316551, worksheet.costs_k73, 0.001); end
  def test_costs_k153; assert_in_epsilon(417.77373710854454, worksheet.costs_k153, 0.001); end
  def test_costs_k5; assert_in_epsilon(141.01531023368256, worksheet.costs_k5, 0.001); end
  def test_costs_k74; assert_in_epsilon(171.09857641686818, worksheet.costs_k74, 0.001); end
  def test_costs_k154; assert_in_epsilon(156.05694332527537, worksheet.costs_k154, 0.001); end
  def test_costs_k6; assert_in_epsilon(535, worksheet.costs_k6, 0.001); end
  def test_costs_k75; assert_in_epsilon(655, worksheet.costs_k75, 0.001); end
  def test_costs_k155; assert_in_epsilon(595, worksheet.costs_k155, 0.001); end
  def test_costs_k13; assert_in_epsilon(1187.5378422082606, worksheet.costs_k13, 0.001); end
  def test_costs_k82; assert_in_epsilon(2375.075684416521, worksheet.costs_k82, 0.001); end
  def test_costs_k162; assert_in_epsilon(1781.306763312391, worksheet.costs_k162, 0.001); end
  def test_costs_k167; assert_in_epsilon(7159.909297739917, worksheet.costs_k167, 0.001); end
  def test_costs_l4; assert_in_epsilon(220.47036888008856, worksheet.costs_l4, 0.001); end
  def test_costs_l73; assert_in_epsilon(423.981478615555, worksheet.costs_l73, 0.001); end
  def test_costs_l153; assert_in_epsilon(322.22592374782175, worksheet.costs_l153, 0.001); end
  def test_costs_l5; assert_in_epsilon(131.61428955143697, worksheet.costs_l5, 0.001); end
  def test_costs_l74; assert_in_epsilon(161.69755573462254, worksheet.costs_l74, 0.001); end
  def test_costs_l154; assert_in_epsilon(146.65592264302975, worksheet.costs_l154, 0.001); end
  def test_costs_l6; assert_in_epsilon(530, worksheet.costs_l6, 0.001); end
  def test_costs_l75; assert_in_epsilon(650, worksheet.costs_l75, 0.001); end
  def test_costs_l155; assert_in_epsilon(590, worksheet.costs_l155, 0.001); end
  def test_costs_l13; assert_in_epsilon(1547.5311113399946, worksheet.costs_l13, 0.001); end
  def test_costs_l82; assert_in_epsilon(3095.062222679989, worksheet.costs_l82, 0.001); end
  def test_costs_l162; assert_in_epsilon(2321.296667009992, worksheet.costs_l162, 0.001); end
  def test_costs_l167; assert_in_epsilon(8194.302619096909, worksheet.costs_l167, 0.001); end
  def test_costs_m4; assert_in_epsilon(323.0549968007201, worksheet.costs_m4, 0.001); end
  def test_costs_m73; assert_in_epsilon(506.9058109020507, worksheet.costs_m73, 0.001); end
  def test_costs_m153; assert_in_epsilon(414.9804038513854, worksheet.costs_m153, 0.001); end
  def test_costs_m5; assert_in_epsilon(122.21326886919147, worksheet.costs_m5, 0.001); end
  def test_costs_m74; assert_in_epsilon(152.29653505237707, worksheet.costs_m74, 0.001); end
  def test_costs_m154; assert_in_epsilon(137.25490196078425, worksheet.costs_m154, 0.001); end
  def test_costs_m6; assert_in_epsilon(525, worksheet.costs_m6, 0.001); end
  def test_costs_m75; assert_in_epsilon(645, worksheet.costs_m75, 0.001); end
  def test_costs_m155; assert_in_epsilon(585, worksheet.costs_m155, 0.001); end
  def test_costs_m13; assert_in_epsilon(2106.960740893329, worksheet.costs_m13, 0.001); end
  def test_costs_m82; assert_in_epsilon(4213.921481786658, worksheet.costs_m82, 0.001); end
  def test_costs_m162; assert_in_epsilon(3160.4411113399933, worksheet.costs_m162, 0.001); end
  def test_costs_m167; assert_in_epsilon(9419.366099930994, worksheet.costs_m167, 0.001); end
  def test_costs_n4; assert_in_epsilon(324.78595945275566, worksheet.costs_n4, 0.001); end
  def test_costs_n73; assert_in_epsilon(551.7505801617386, worksheet.costs_n73, 0.001); end
  def test_costs_n153; assert_in_epsilon(438.2682698072472, worksheet.costs_n153, 0.001); end
  def test_costs_n5; assert_in_epsilon(135.37469782433516, worksheet.costs_n5, 0.001); end
  def test_costs_n74; assert_in_epsilon(165.45796400752073, worksheet.costs_n74, 0.001); end
  def test_costs_n154; assert_in_epsilon(150.41633091592794, worksheet.costs_n154, 0.001); end
  def test_costs_n6; assert_in_epsilon(520, worksheet.costs_n6, 0.001); end
  def test_costs_n75; assert_in_epsilon(640, worksheet.costs_n75, 0.001); end
  def test_costs_n155; assert_in_epsilon(580, worksheet.costs_n155, 0.001); end
  def test_costs_n13; assert_in_epsilon(2026.8614069420119, worksheet.costs_n13, 0.001); end
  def test_costs_n82; assert_in_epsilon(4053.7228138840237, worksheet.costs_n82, 0.001); end
  def test_costs_n162; assert_in_epsilon(3040.292110413018, worksheet.costs_n162, 0.001); end
  def test_costs_n167; assert_in_epsilon(10650.02013498187, worksheet.costs_n167, 0.001); end
  def test_costs_o167; assert_in_epsilon(6247.730466521846, worksheet.costs_o167, 0.001); end
  def test_costs_p4; assert_in_epsilon(122.42772347537294, worksheet.costs_p4, 0.001); end
  def test_costs_p73; assert_in_epsilon(147.40542228767293, worksheet.costs_p73, 0.001); end
  def test_costs_p153; assert_in_epsilon(134.91657288152294, worksheet.costs_p153, 0.001); end
  def test_costs_p6; assert_in_epsilon(524.2049999999999, worksheet.costs_p6, 0.001); end
  def test_costs_p75; assert_in_epsilon(640.6949999999999, worksheet.costs_p75, 0.001); end
  def test_costs_p155; assert_in_epsilon(582.4499999999999, worksheet.costs_p155, 0.001); end
  def test_costs_p167; assert_in_epsilon(806.5569728815228, worksheet.costs_p167, 0.001); end
  def test_costs_q4; assert_in_epsilon(52.37014682031133, worksheet.costs_q4, 0.001); end
  def test_costs_q73; assert_in_epsilon(64.59795495466807, worksheet.costs_q73, 0.001); end
  def test_costs_q153; assert_in_epsilon(58.4840508874897, worksheet.costs_q153, 0.001); end
  def test_costs_q5; assert_in_delta(0, (worksheet.costs_q5||0), 0.001); end
  def test_costs_q74; assert_in_delta(0, (worksheet.costs_q74||0), 0.001); end
  def test_costs_q154; assert_in_delta(0, (worksheet.costs_q154||0), 0.001); end
  def test_costs_q6; assert_in_epsilon(524.2049999999999, worksheet.costs_q6, 0.001); end
  def test_costs_q75; assert_in_epsilon(640.6949999999999, worksheet.costs_q75, 0.001); end
  def test_costs_q155; assert_in_epsilon(582.4499999999999, worksheet.costs_q155, 0.001); end
  def test_costs_q13; assert_in_epsilon(67.72950000000002, worksheet.costs_q13, 0.001); end
  def test_costs_q82; assert_in_epsilon(75.55950000000001, worksheet.costs_q82, 0.001); end
  def test_costs_q162; assert_in_epsilon(71.64450000000002, worksheet.costs_q162, 0.001); end
  def test_costs_q167; assert_in_epsilon(1040.7265279332025, worksheet.costs_q167, 0.001); end
  def test_costs_r4; assert_in_epsilon(68.76302731812487, worksheet.costs_r4, 0.001); end
  def test_costs_r73; assert_in_epsilon(84.81837861718702, worksheet.costs_r73, 0.001); end
  def test_costs_r153; assert_in_epsilon(76.79070296765595, worksheet.costs_r153, 0.001); end
  def test_costs_r5; assert_in_delta(0, (worksheet.costs_r5||0), 0.001); end
  def test_costs_r74; assert_in_delta(0, (worksheet.costs_r74||0), 0.001); end
  def test_costs_r154; assert_in_delta(0, (worksheet.costs_r154||0), 0.001); end
  def test_costs_r6; assert_in_epsilon(524.2049999999999, worksheet.costs_r6, 0.001); end
  def test_costs_r75; assert_in_epsilon(640.6949999999999, worksheet.costs_r75, 0.001); end
  def test_costs_r155; assert_in_epsilon(582.4499999999999, worksheet.costs_r155, 0.001); end
  def test_costs_r13; assert_in_epsilon(88.72475000000003, worksheet.costs_r13, 0.001); end
  def test_costs_r82; assert_in_epsilon(109.91275000000002, worksheet.costs_r82, 0.001); end
  def test_costs_r162; assert_in_epsilon(99.31875000000002, worksheet.costs_r162, 0.001); end
  def test_costs_r167; assert_in_epsilon(1328.514866685664, worksheet.costs_r167, 0.001); end
  def test_costs_s4; assert_in_epsilon(94.53497071533955, worksheet.costs_s4, 0.001); end
  def test_costs_s73; assert_in_epsilon(116.60776512358201, worksheet.costs_s73, 0.001); end
  def test_costs_s153; assert_in_epsilon(105.57136791946078, worksheet.costs_s153, 0.001); end
  def test_costs_s5; assert_in_epsilon(3.7604082728982005, worksheet.costs_s5, 0.001); end
  def test_costs_s74; assert_in_epsilon(4.211657265645985, worksheet.costs_s74, 0.001); end
  def test_costs_s154; assert_in_epsilon(3.986032769272093, worksheet.costs_s154, 0.001); end
  def test_costs_s6; assert_in_epsilon(614.2049999999999, worksheet.costs_s6, 0.001); end
  def test_costs_s75; assert_in_epsilon(750.6949999999999, worksheet.costs_s75, 0.001); end
  def test_costs_s155; assert_in_epsilon(682.4499999999999, worksheet.costs_s155, 0.001); end
  def test_costs_s13; assert_in_epsilon(89.62062500000002, worksheet.costs_s13, 0.001); end
  def test_costs_s82; assert_in_epsilon(131.12912500000002, worksheet.costs_s82, 0.001); end
  def test_costs_s162; assert_in_epsilon(110.37487500000002, worksheet.costs_s162, 0.001); end
  def test_costs_s167; assert_in_epsilon(1731.591993541976, worksheet.costs_s167, 0.001); end
  def test_costs_t4; assert_in_epsilon(122.35029893758664, worksheet.costs_t4, 0.001); end
  def test_costs_t73; assert_in_epsilon(150.91764257561823, worksheet.costs_t73, 0.001); end
  def test_costs_t153; assert_in_epsilon(136.63397075660242, worksheet.costs_t153, 0.001); end
  def test_costs_t5; assert_in_epsilon(3.00832661831856, worksheet.costs_t5, 0.001); end
  def test_costs_t74; assert_in_epsilon(3.6099919419822726, worksheet.costs_t74, 0.001); end
  def test_costs_t154; assert_in_epsilon(3.3091592801504164, worksheet.costs_t154, 0.001); end
  def test_costs_t6; assert_in_epsilon(704.2049999999999, worksheet.costs_t6, 0.001); end
  def test_costs_t75; assert_in_epsilon(860.6949999999999, worksheet.costs_t75, 0.001); end
  def test_costs_t155; assert_in_epsilon(782.4499999999999, worksheet.costs_t155, 0.001); end
  def test_costs_t13; assert_in_epsilon(77.22280341264121, worksheet.costs_t13, 0.001); end
  def test_costs_t82; assert_in_epsilon(154.44560682528243, worksheet.costs_t82, 0.001); end
  def test_costs_t162; assert_in_epsilon(115.83420511896182, worksheet.costs_t162, 0.001); end
  def test_costs_t167; assert_in_epsilon(2179.633842373102, worksheet.costs_t167, 0.001); end
  def test_costs_u4; assert_in_epsilon(138.91439479111608, worksheet.costs_u4, 0.001); end
  def test_costs_u73; assert_in_epsilon(171.3492583486736, worksheet.costs_u73, 0.001); end
  def test_costs_u153; assert_in_epsilon(155.13182656989483, worksheet.costs_u153, 0.001); end
  def test_costs_u5; assert_in_epsilon(2.820306204673651, worksheet.costs_u5, 0.001); end
  def test_costs_u74; assert_in_epsilon(3.421971528337363, worksheet.costs_u74, 0.001); end
  def test_costs_u154; assert_in_epsilon(3.1211388665055066, worksheet.costs_u154, 0.001); end
  def test_costs_u6; assert_in_epsilon(633.33, worksheet.costs_u6, 0.001); end
  def test_costs_u75; assert_in_epsilon(774.0699999999999, worksheet.costs_u75, 0.001); end
  def test_costs_u155; assert_in_epsilon(703.7, worksheet.costs_u155, 0.001); end
  def test_costs_u13; assert_in_epsilon(101.89515485631891, worksheet.costs_u13, 0.001); end
  def test_costs_u82; assert_in_epsilon(203.79030971263782, worksheet.costs_u82, 0.001); end
  def test_costs_u162; assert_in_epsilon(152.84273228447836, worksheet.costs_u162, 0.001); end
  def test_costs_u167; assert_in_epsilon(2550.137292184761, worksheet.costs_u167, 0.001); end
  def test_costs_v4; assert_in_epsilon(155.40407776061846, worksheet.costs_v4, 0.001); end
  def test_costs_v73; assert_in_epsilon(191.68908671187273, worksheet.costs_v73, 0.001); end
  def test_costs_v153; assert_in_epsilon(173.5465822362456, worksheet.costs_v153, 0.001); end
  def test_costs_v5; assert_in_epsilon(2.6322857910287394, worksheet.costs_v5, 0.001); end
  def test_costs_v74; assert_in_epsilon(3.2339511146924504, worksheet.costs_v74, 0.001); end
  def test_costs_v154; assert_in_epsilon(2.9331184528605947, worksheet.costs_v154, 0.001); end
  def test_costs_v6; assert_in_epsilon(723.3299999999999, worksheet.costs_v6, 0.001); end
  def test_costs_v75; assert_in_epsilon(884.0699999999999, worksheet.costs_v75, 0.001); end
  def test_costs_v155; assert_in_epsilon(803.6999999999999, worksheet.costs_v155, 0.001); end
  def test_costs_v13; assert_in_epsilon(135.87650489236796, worksheet.costs_v13, 0.001); end
  def test_costs_v82; assert_in_epsilon(271.7530097847359, worksheet.costs_v82, 0.001); end
  def test_costs_v162; assert_in_epsilon(203.81475733855194, worksheet.costs_v162, 0.001); end
  def test_costs_v167; assert_in_epsilon(3057.6667247302876, worksheet.costs_v167, 0.001); end
  def test_costs_w4; assert_in_epsilon(171.7821414040804, worksheet.costs_w4, 0.001); end
  def test_costs_w73; assert_in_epsilon(211.8912339602877, worksheet.costs_w73, 0.001); end
  def test_costs_w153; assert_in_epsilon(191.83668768218405, worksheet.costs_w153, 0.001); end
  def test_costs_w5; assert_in_epsilon(2.4442653773838288, worksheet.costs_w5, 0.001); end
  def test_costs_w74; assert_in_epsilon(3.0459307010475407, worksheet.costs_w74, 0.001); end
  def test_costs_w154; assert_in_epsilon(2.7450980392156845, worksheet.costs_w154, 0.001); end
  def test_costs_w6; assert_in_epsilon(450, worksheet.costs_w6, 0.001); end
  def test_costs_w75; assert_in_epsilon(550, worksheet.costs_w75, 0.001); end
  def test_costs_w155; assert_in_epsilon(500, worksheet.costs_w155, 0.001); end
  def test_costs_w13; assert_in_epsilon(183.57447208775375, worksheet.costs_w13, 0.001); end
  def test_costs_w82; assert_in_epsilon(367.1489441755075, worksheet.costs_w82, 0.001); end
  def test_costs_w162; assert_in_epsilon(275.3617081316306, worksheet.costs_w162, 0.001); end
  def test_costs_w167; assert_in_epsilon(3175.016400271707, worksheet.costs_w167, 0.001); end
  def test_costs_x4; assert_in_epsilon(188.16020504754232, worksheet.costs_x4, 0.001); end
  def test_costs_x73; assert_in_epsilon(232.09338120870265, worksheet.costs_x73, 0.001); end
  def test_costs_x153; assert_in_epsilon(210.12679312812247, worksheet.costs_x153, 0.001); end
  def test_costs_x5; assert_in_epsilon(2.7074939564867035, worksheet.costs_x5, 0.001); end
  def test_costs_x74; assert_in_epsilon(3.3091592801504146, worksheet.costs_x74, 0.001); end
  def test_costs_x154; assert_in_epsilon(3.0083266183185593, worksheet.costs_x154, 0.001); end
  def test_costs_x6; assert_in_epsilon(540, worksheet.costs_x6, 0.001); end
  def test_costs_x75; assert_in_epsilon(660, worksheet.costs_x75, 0.001); end
  def test_costs_x155; assert_in_epsilon(600, worksheet.costs_x155, 0.001); end
  def test_costs_x13; assert_in_epsilon(251.40682648401832, worksheet.costs_x13, 0.001); end
  def test_costs_x82; assert_in_epsilon(502.81365296803665, worksheet.costs_x82, 0.001); end
  def test_costs_x162; assert_in_epsilon(377.1102397260275, worksheet.costs_x162, 0.001); end
  def test_costs_x167; assert_in_epsilon(3851.6985253395205, worksheet.costs_x167, 0.001); end
  def test_costs_y167; assert_in_epsilon(2191.282571771305, worksheet.costs_y167, 0.001); end
  def test_costs_z4; assert_in_epsilon(1896.1779082104529, worksheet.costs_z4, 0.001); end
  def test_costs_z73; assert_in_epsilon(1896.1779082104529, worksheet.costs_z73, 0.001); end
  def test_costs_z153; assert_in_epsilon(1896.1779082104529, worksheet.costs_z153, 0.001); end
  def test_costs_z5; assert_in_delta(0, (worksheet.costs_z5||0), 0.001); end
  def test_costs_z74; assert_in_delta(0, (worksheet.costs_z74||0), 0.001); end
  def test_costs_z154; assert_in_delta(0, (worksheet.costs_z154||0), 0.001); end
  def test_costs_z6; assert_in_epsilon(335.2439849219999, worksheet.costs_z6, 0.001); end
  def test_costs_z75; assert_in_epsilon(431.0279806139999, worksheet.costs_z75, 0.001); end
  def test_costs_z155; assert_in_epsilon(383.1359827679999, worksheet.costs_z155, 0.001); end
  def test_costs_z167; assert_in_epsilon(2279.313890978453, worksheet.costs_z167, 0.001); end
  def test_costs_aa4; assert_in_epsilon(422.35299520287157, worksheet.costs_aa4, 0.001); end
  def test_costs_aa73; assert_in_epsilon(571.4187582156496, worksheet.costs_aa73, 0.001); end
  def test_costs_aa153; assert_in_epsilon(496.88587670926063, worksheet.costs_aa153, 0.001); end
  def test_costs_aa5; assert_in_delta(0, (worksheet.costs_aa5||0), 0.001); end
  def test_costs_aa74; assert_in_delta(0, (worksheet.costs_aa74||0), 0.001); end
  def test_costs_aa154; assert_in_delta(0, (worksheet.costs_aa154||0), 0.001); end
  def test_costs_aa6; assert_in_epsilon(335.2439849219999, worksheet.costs_aa6, 0.001); end
  def test_costs_aa75; assert_in_epsilon(431.0279806139999, worksheet.costs_aa75, 0.001); end
  def test_costs_aa155; assert_in_epsilon(383.1359827679999, worksheet.costs_aa155, 0.001); end
  def test_costs_aa13; assert_in_delta(0, (worksheet.costs_aa13||0), 0.001); end
  def test_costs_aa82; assert_in_delta(0, (worksheet.costs_aa82||0), 0.001); end
  def test_costs_aa162; assert_in_delta(0, (worksheet.costs_aa162||0), 0.001); end
  def test_costs_aa167; assert_in_epsilon(1161.1791080919306, worksheet.costs_aa167, 0.001); end
  def test_costs_ab4; assert_in_epsilon(586.8566352935644, worksheet.costs_ab4, 0.001); end
  def test_costs_ab73; assert_in_epsilon(793.9825065736459, worksheet.costs_ab73, 0.001); end
  def test_costs_ab153; assert_in_epsilon(690.4195709336052, worksheet.costs_ab153, 0.001); end
  def test_costs_ab5; assert_in_delta(0, (worksheet.costs_ab5||0), 0.001); end
  def test_costs_ab74; assert_in_delta(0, (worksheet.costs_ab74||0), 0.001); end
  def test_costs_ab154; assert_in_delta(0, (worksheet.costs_ab154||0), 0.001); end
  def test_costs_ab6; assert_in_epsilon(335.2439849219999, worksheet.costs_ab6, 0.001); end
  def test_costs_ab75; assert_in_epsilon(431.0279806139999, worksheet.costs_ab75, 0.001); end
  def test_costs_ab155; assert_in_epsilon(383.1359827679999, worksheet.costs_ab155, 0.001); end
  def test_costs_ab13; assert_in_delta(0, (worksheet.costs_ab13||0), 0.001); end
  def test_costs_ab82; assert_in_delta(0, (worksheet.costs_ab82||0), 0.001); end
  def test_costs_ab162; assert_in_delta(0, (worksheet.costs_ab162||0), 0.001); end
  def test_costs_ab167; assert_in_epsilon(1843.9105483097667, worksheet.costs_ab167, 0.001); end
  def test_costs_ac4; assert_in_epsilon(848.9869663988513, worksheet.costs_ac4, 0.001); end
  def test_costs_ac73; assert_in_epsilon(1148.6294251278575, worksheet.costs_ac73, 0.001); end
  def test_costs_ac153; assert_in_epsilon(998.8081957633544, worksheet.costs_ac153, 0.001); end
  def test_costs_ac5; assert_in_epsilon(173.9000004556229, worksheet.costs_ac5, 0.001); end
  def test_costs_ac74; assert_in_epsilon(235.2764712046663, worksheet.costs_ac74, 0.001); end
  def test_costs_ac154; assert_in_epsilon(204.58823583014458, worksheet.costs_ac154, 0.001); end
  def test_costs_ac6; assert_in_epsilon(392.80154092199996, worksheet.costs_ac6, 0.001); end
  def test_costs_ac75; assert_in_epsilon(505.0305526139999, worksheet.costs_ac75, 0.001); end
  def test_costs_ac155; assert_in_epsilon(448.9160467679999, worksheet.costs_ac155, 0.001); end
  def test_costs_ac13; assert_in_delta(0, (worksheet.costs_ac13||0), 0.001); end
  def test_costs_ac82; assert_in_delta(0, (worksheet.costs_ac82||0), 0.001); end
  def test_costs_ac162; assert_in_delta(0, (worksheet.costs_ac162||0), 0.001); end
  def test_costs_ac167; assert_in_epsilon(3063.7343887814886, worksheet.costs_ac167, 0.001); end
  def test_costs_ad4; assert_in_epsilon(1150.7106458694057, worksheet.costs_ad4, 0.001); end
  def test_costs_ad73; assert_in_epsilon(1556.8438149997844, worksheet.costs_ad73, 0.001); end
  def test_costs_ad153; assert_in_epsilon(1353.777230434595, worksheet.costs_ad153, 0.001); end
  def test_costs_ad5; assert_in_epsilon(397.7033964417753, worksheet.costs_ad5, 0.001); end
  def test_costs_ad74; assert_in_epsilon(538.0693010682841, worksheet.costs_ad74, 0.001); end
  def test_costs_ad154; assert_in_epsilon(467.88634875502964, worksheet.costs_ad154, 0.001); end
  def test_costs_ad6; assert_in_epsilon(450.35909692200005, worksheet.costs_ad6, 0.001); end
  def test_costs_ad75; assert_in_epsilon(579.033124614, worksheet.costs_ad75, 0.001); end
  def test_costs_ad155; assert_in_epsilon(514.696110768, worksheet.costs_ad155, 0.001); end
  def test_costs_ad13; assert_in_delta(0, (worksheet.costs_ad13||0), 0.001); end
  def test_costs_ad82; assert_in_delta(0, (worksheet.costs_ad82||0), 0.001); end
  def test_costs_ad162; assert_in_delta(0, (worksheet.costs_ad162||0), 0.001); end
  def test_costs_ad167; assert_in_epsilon(4623.9963637166165, worksheet.costs_ad167, 0.001); end
  def test_costs_ae4; assert_in_epsilon(1322.536372228825, worksheet.costs_ae4, 0.001); end
  def test_costs_ae73; assert_in_epsilon(1789.3139153684099, worksheet.costs_ae73, 0.001); end
  def test_costs_ae153; assert_in_epsilon(1555.9251437986175, worksheet.costs_ae153, 0.001); end
  def test_costs_ae5; assert_in_epsilon(624.8400344958065, worksheet.costs_ae5, 0.001); end
  def test_costs_ae74; assert_in_epsilon(845.3718113766793, worksheet.costs_ae74, 0.001); end
  def test_costs_ae154; assert_in_epsilon(735.1059229362429, worksheet.costs_ae154, 0.001); end
  def test_costs_ae6; assert_in_epsilon(405.032521572, worksheet.costs_ae6, 0.001); end
  def test_costs_ae75; assert_in_epsilon(520.7560991639999, worksheet.costs_ae75, 0.001); end
  def test_costs_ae155; assert_in_epsilon(462.894310368, worksheet.costs_ae155, 0.001); end
  def test_costs_ae13; assert_in_delta(0, (worksheet.costs_ae13||0), 0.001); end
  def test_costs_ae82; assert_in_delta(0, (worksheet.costs_ae82||0), 0.001); end
  def test_costs_ae162; assert_in_delta(0, (worksheet.costs_ae162||0), 0.001); end
  def test_costs_ae167; assert_in_epsilon(5975.146401354879, worksheet.costs_ae167, 0.001); end
  def test_costs_af4; assert_in_epsilon(1497.470163971935, worksheet.costs_af4, 0.001); end
  def test_costs_af73; assert_in_epsilon(2025.9890453737946, worksheet.costs_af73, 0.001); end
  def test_costs_af153; assert_in_epsilon(1761.7296046728648, worksheet.costs_af153, 0.001); end
  def test_costs_af5; assert_in_epsilon(871.5189946163729, worksheet.costs_af5, 0.001); end
  def test_costs_af74; assert_in_epsilon(1179.1139338927396, worksheet.costs_af74, 0.001); end
  def test_costs_af154; assert_in_epsilon(1025.3164642545562, worksheet.costs_af154, 0.001); end
  def test_costs_af6; assert_in_epsilon(462.5900775719999, worksheet.costs_af6, 0.001); end
  def test_costs_af75; assert_in_epsilon(594.7586711639998, worksheet.costs_af75, 0.001); end
  def test_costs_af155; assert_in_epsilon(528.6743743679999, worksheet.costs_af155, 0.001); end
  def test_costs_af13; assert_in_delta(0, (worksheet.costs_af13||0), 0.001); end
  def test_costs_af82; assert_in_delta(0, (worksheet.costs_af82||0), 0.001); end
  def test_costs_af162; assert_in_delta(0, (worksheet.costs_af162||0), 0.001); end
  def test_costs_af167; assert_in_epsilon(7634.233199081464, worksheet.costs_af167, 0.001); end
  def test_costs_ag4; assert_in_epsilon(1675.1234286933968, worksheet.costs_ag4, 0.001); end
  def test_costs_ag73; assert_in_epsilon(2266.3434623498897, worksheet.costs_ag73, 0.001); end
  def test_costs_ag153; assert_in_epsilon(1970.7334455216433, worksheet.costs_ag153, 0.001); end
  def test_costs_ag5; assert_in_epsilon(1138.2545484368054, worksheet.costs_ag5, 0.001); end
  def test_costs_ag74; assert_in_epsilon(1539.9914478850894, worksheet.costs_ag74, 0.001); end
  def test_costs_ag154; assert_in_epsilon(1339.1229981609474, worksheet.costs_ag154, 0.001); end
  def test_costs_ag6; assert_in_epsilon(287.78778, worksheet.costs_ag6, 0.001); end
  def test_costs_ag75; assert_in_epsilon(370.01285999999993, worksheet.costs_ag75, 0.001); end
  def test_costs_ag155; assert_in_epsilon(328.90031999999997, worksheet.costs_ag155, 0.001); end
  def test_costs_ag13; assert_in_delta(0, (worksheet.costs_ag13||0), 0.001); end
  def test_costs_ag82; assert_in_delta(0, (worksheet.costs_ag82||0), 0.001); end
  def test_costs_ag162; assert_in_delta(0, (worksheet.costs_ag162||0), 0.001); end
  def test_costs_ag167; assert_in_epsilon(8940.732080309652, worksheet.costs_ag167, 0.001); end
  def test_costs_ah4; assert_in_epsilon(1856.5588396946557, worksheet.costs_ah4, 0.001); end
  def test_costs_ah73; assert_in_epsilon(2511.814900763358, worksheet.costs_ah73, 0.001); end
  def test_costs_ah153; assert_in_epsilon(2184.1868702290067, worksheet.costs_ah153, 0.001); end
  def test_costs_ah5; assert_in_epsilon(1425.560967590432, worksheet.costs_ah5, 0.001); end
  def test_costs_ah74; assert_in_epsilon(1928.7001326223492, worksheet.costs_ah74, 0.001); end
  def test_costs_ah154; assert_in_epsilon(1677.1305501063907, worksheet.costs_ah154, 0.001); end
  def test_costs_ah6; assert_in_epsilon(345.345336, worksheet.costs_ah6, 0.001); end
  def test_costs_ah75; assert_in_epsilon(444.015432, worksheet.costs_ah75, 0.001); end
  def test_costs_ah155; assert_in_epsilon(394.680384, worksheet.costs_ah155, 0.001); end
  def test_costs_ah13; assert_in_delta(0, (worksheet.costs_ah13||0), 0.001); end
  def test_costs_ah82; assert_in_delta(0, (worksheet.costs_ah82||0), 0.001); end
  def test_costs_ah162; assert_in_delta(0, (worksheet.costs_ah162||0), 0.001); end
  def test_costs_ah167; assert_in_epsilon(11178.508210937942, worksheet.costs_ah167, 0.001); end
  def test_costs_ai167; assert_in_epsilon(5188.972687951355, worksheet.costs_ai167, 0.001); end
  def test_costs_aj4; assert_in_epsilon(2018.6056316858258, worksheet.costs_aj4, 0.001); end
  def test_costs_aj73; assert_in_epsilon(2043.5833304981259, worksheet.costs_aj73, 0.001); end
  def test_costs_aj153; assert_in_epsilon(2031.094481091976, worksheet.costs_aj153, 0.001); end
  def test_costs_aj5; assert_in_delta(0, (worksheet.costs_aj5||0), 0.001); end
  def test_costs_aj74; assert_in_delta(0, (worksheet.costs_aj74||0), 0.001); end
  def test_costs_aj154; assert_in_delta(0, (worksheet.costs_aj154||0), 0.001); end
  def test_costs_aj6; assert_in_epsilon(859.4489849219999, worksheet.costs_aj6, 0.001); end
  def test_costs_aj75; assert_in_epsilon(1071.7229806139999, worksheet.costs_aj75, 0.001); end
  def test_costs_aj155; assert_in_epsilon(965.5859827679999, worksheet.costs_aj155, 0.001); end
  def test_costs_aj7; assert_in_epsilon(412.4760502283106, worksheet.costs_aj7, 0.001); end
  def test_costs_aj76; assert_in_epsilon(491.79836757990876, worksheet.costs_aj76, 0.001); end
  def test_costs_aj156; assert_in_epsilon(452.1372089041097, worksheet.costs_aj156, 0.001); end
  def test_costs_aj8; assert_in_epsilon(1330.4160000000002, worksheet.costs_aj8, 0.001); end
  def test_costs_aj77; assert_in_epsilon(1404.3280000000002, worksheet.costs_aj77, 0.001); end
  def test_costs_aj157; assert_in_epsilon(1367.3720000000003, worksheet.costs_aj157, 0.001); end
  def test_costs_aj9; assert_in_epsilon(8.25, worksheet.costs_aj9, 0.001); end
  def test_costs_aj78; assert_in_epsilon(11, worksheet.costs_aj78, 0.001); end
  def test_costs_aj158; assert_in_epsilon(9.625, worksheet.costs_aj158, 0.001); end
  def test_costs_aj11; assert_in_delta(0, (worksheet.costs_aj11||0), 0.001); end
  def test_costs_aj80; assert_in_delta(0, (worksheet.costs_aj80||0), 0.001); end
  def test_costs_aj160; assert_in_delta(0, (worksheet.costs_aj160||0), 0.001); end
  def test_costs_aj13; assert_in_epsilon(1173.0755000000001, worksheet.costs_aj13, 0.001); end
  def test_costs_aj82; assert_in_epsilon(1217.3425, worksheet.costs_aj82, 0.001); end
  def test_costs_aj162; assert_in_epsilon(1195.209, worksheet.costs_aj162, 0.001); end
  def test_costs_aj21; assert_in_delta(0, (worksheet.costs_aj21||0), 0.001); end
  def test_costs_aj90; assert_in_delta(0, (worksheet.costs_aj90||0), 0.001); end
  def test_costs_aj163; assert_in_delta(0, (worksheet.costs_aj163||0), 0.001); end
  def test_costs_aj22; assert_in_delta(0, (worksheet.costs_aj22||0), 0.001); end
  def test_costs_aj91; assert_in_delta(0, (worksheet.costs_aj91||0), 0.001); end
  def test_costs_aj164; assert_in_delta(0, (worksheet.costs_aj164||0), 0.001); end
  def test_costs_aj23; assert_in_delta(0, (worksheet.costs_aj23||0), 0.001); end
  def test_costs_aj92; assert_in_delta(0, (worksheet.costs_aj92||0), 0.001); end
  def test_costs_aj165; assert_in_delta(0, (worksheet.costs_aj165||0), 0.001); end
  def test_costs_aj24; assert_in_epsilon(9.759487500000002, worksheet.costs_aj24, 0.001); end
  def test_costs_aj93; assert_in_epsilon(16.2658125, worksheet.costs_aj93, 0.001); end
  def test_costs_aj166; assert_in_epsilon(13.01265, worksheet.costs_aj166, 0.001); end
  def test_costs_aj167; assert_in_epsilon(6034.0363227640855, worksheet.costs_aj167, 0.001); end
  def test_costs_ak4; assert_in_epsilon(614.1509718872937, worksheet.costs_ak4, 0.001); end
  def test_costs_ak73; assert_in_epsilon(904.1471552166847, worksheet.costs_ak73, 0.001); end
  def test_costs_ak153; assert_in_epsilon(759.1490635519892, worksheet.costs_ak153, 0.001); end
  def test_costs_ak5; assert_in_delta(0, (worksheet.costs_ak5||0), 0.001); end
  def test_costs_ak74; assert_in_delta(0, (worksheet.costs_ak74||0), 0.001); end
  def test_costs_ak154; assert_in_delta(0, (worksheet.costs_ak154||0), 0.001); end
  def test_costs_ak6; assert_in_epsilon(859.4489849219999, worksheet.costs_ak6, 0.001); end
  def test_costs_ak75; assert_in_epsilon(1071.7229806139999, worksheet.costs_ak75, 0.001); end
  def test_costs_ak155; assert_in_epsilon(965.5859827679999, worksheet.costs_ak155, 0.001); end
  def test_costs_ak7; assert_in_epsilon(426.12801369863007, worksheet.costs_ak7, 0.001); end
  def test_costs_ak76; assert_in_epsilon(519.3435166952054, worksheet.costs_ak76, 0.001); end
  def test_costs_ak156; assert_in_epsilon(472.7357651969177, worksheet.costs_ak156, 0.001); end
  def test_costs_ak8; assert_in_epsilon(1307.5610625000002, worksheet.costs_ak8, 0.001); end
  def test_costs_ak77; assert_in_epsilon(1463.2230937500003, worksheet.costs_ak77, 0.001); end
  def test_costs_ak157; assert_in_epsilon(1385.3920781250004, worksheet.costs_ak157, 0.001); end
  def test_costs_ak9; assert_in_epsilon(11.3372667550418, worksheet.costs_ak9, 0.001); end
  def test_costs_ak78; assert_in_epsilon(15.116355673389066, worksheet.costs_ak78, 0.001); end
  def test_costs_ak158; assert_in_epsilon(13.226811214215433, worksheet.costs_ak158, 0.001); end
  def test_costs_ak11; assert_in_epsilon(28.8863227657125, worksheet.costs_ak11, 0.001); end
  def test_costs_ak80; assert_in_epsilon(35.305505602537494, worksheet.costs_ak80, 0.001); end
  def test_costs_ak160; assert_in_epsilon(32.09591418412499, worksheet.costs_ak160, 0.001); end
  def test_costs_ak13; assert_in_epsilon(1004.092, worksheet.costs_ak13, 0.001); end
  def test_costs_ak82; assert_in_epsilon(1120.172, worksheet.costs_ak82, 0.001); end
  def test_costs_ak162; assert_in_epsilon(1062.132, worksheet.costs_ak162, 0.001); end
  def test_costs_ak21; assert_in_epsilon(178.5, worksheet.costs_ak21, 0.001); end
  def test_costs_ak90; assert_in_epsilon(211.3125, worksheet.costs_ak90, 0.001); end
  def test_costs_ak163; assert_in_epsilon(194.90625, worksheet.costs_ak163, 0.001); end
  def test_costs_ak22; assert_in_delta(0, (worksheet.costs_ak22||0), 0.001); end
  def test_costs_ak91; assert_in_delta(0, (worksheet.costs_ak91||0), 0.001); end
  def test_costs_ak164; assert_in_delta(0, (worksheet.costs_ak164||0), 0.001); end
  def test_costs_ak23; assert_in_epsilon(87.4206645945291, worksheet.costs_ak23, 0.001); end
  def test_costs_ak92; assert_in_epsilon(262.26199378358734, worksheet.costs_ak92, 0.001); end
  def test_costs_ak165; assert_in_epsilon(174.84132918905823, worksheet.costs_ak165, 0.001); end
  def test_costs_ak24; assert_in_epsilon(213.26394306745883, worksheet.costs_ak24, 0.001); end
  def test_costs_ak93; assert_in_epsilon(286.7218822346183, worksheet.costs_ak93, 0.001); end
  def test_costs_ak166; assert_in_epsilon(249.99291265103858, worksheet.costs_ak166, 0.001); end
  def test_costs_ak167; assert_in_epsilon(5310.058106880345, worksheet.costs_ak167, 0.001); end
  def test_costs_al4; assert_in_epsilon(927.5301610185701, worksheet.costs_al4, 0.001); end
  def test_costs_al73; assert_in_epsilon(1317.757035051904, worksheet.costs_al73, 0.001); end
  def test_costs_al153; assert_in_epsilon(1122.6435980352371, worksheet.costs_al153, 0.001); end
  def test_costs_al5; assert_in_delta(0, (worksheet.costs_al5||0), 0.001); end
  def test_costs_al74; assert_in_delta(0, (worksheet.costs_al74||0), 0.001); end
  def test_costs_al154; assert_in_delta(0, (worksheet.costs_al154||0), 0.001); end
  def test_costs_al6; assert_in_epsilon(859.4489849219999, worksheet.costs_al6, 0.001); end
  def test_costs_al75; assert_in_epsilon(1071.7229806139999, worksheet.costs_al75, 0.001); end
  def test_costs_al155; assert_in_epsilon(965.5859827679999, worksheet.costs_al155, 0.001); end
  def test_costs_al7; assert_in_epsilon(484.423299086758, worksheet.costs_al7, 0.001); end
  def test_costs_al76; assert_in_epsilon(605.5291238584474, worksheet.costs_al76, 0.001); end
  def test_costs_al156; assert_in_epsilon(544.9762114726027, worksheet.costs_al156, 0.001); end
  def test_costs_al8; assert_in_epsilon(1425.58425, worksheet.costs_al8, 0.001); end
  def test_costs_al77; assert_in_epsilon(1715.9810416666664, worksheet.costs_al77, 0.001); end
  def test_costs_al157; assert_in_epsilon(1570.7826458333334, worksheet.costs_al157, 0.001); end
  def test_costs_al9; assert_in_epsilon(11.413321565589264, worksheet.costs_al9, 0.001); end
  def test_costs_al78; assert_in_epsilon(15.217762087452352, worksheet.costs_al78, 0.001); end
  def test_costs_al158; assert_in_epsilon(13.315541826520807, worksheet.costs_al158, 0.001); end
  def test_costs_al11; assert_in_epsilon(187.7296432549758, worksheet.costs_al11, 0.001); end
  def test_costs_al80; assert_in_epsilon(229.44734175608147, worksheet.costs_al80, 0.001); end
  def test_costs_al160; assert_in_epsilon(208.58849250552862, worksheet.costs_al160, 0.001); end
  def test_costs_al13; assert_in_epsilon(842.4747500000001, worksheet.costs_al13, 0.001); end
  def test_costs_al82; assert_in_epsilon(1043.66275, worksheet.costs_al82, 0.001); end
  def test_costs_al162; assert_in_epsilon(943.06875, worksheet.costs_al162, 0.001); end
  def test_costs_al21; assert_in_epsilon(336, worksheet.costs_al21, 0.001); end
  def test_costs_al90; assert_in_epsilon(467.25, worksheet.costs_al90, 0.001); end
  def test_costs_al163; assert_in_epsilon(401.625, worksheet.costs_al163, 0.001); end
  def test_costs_al22; assert_in_delta(0, (worksheet.costs_al22||0), 0.001); end
  def test_costs_al91; assert_in_delta(0, (worksheet.costs_al91||0), 0.001); end
  def test_costs_al164; assert_in_delta(0, (worksheet.costs_al164||0), 0.001); end
  def test_costs_al23; assert_in_epsilon(176.40579862376762, worksheet.costs_al23, 0.001); end
  def test_costs_al92; assert_in_epsilon(529.2173958713029, worksheet.costs_al92, 0.001); end
  def test_costs_al165; assert_in_epsilon(352.81159724753525, worksheet.costs_al165, 0.001); end
  def test_costs_al24; assert_in_epsilon(639.9212584764616, worksheet.costs_al24, 0.001); end
  def test_costs_al93; assert_in_epsilon(781.3890616940034, worksheet.costs_al93, 0.001); end
  def test_costs_al166; assert_in_epsilon(710.6551600852325, worksheet.costs_al166, 0.001); end
  def test_costs_al167; assert_in_epsilon(6834.05297977399, worksheet.costs_al167, 0.001); end
  def test_costs_am4; assert_in_epsilon(1278.6985408620749, worksheet.costs_am4, 0.001); end
  def test_costs_am73; assert_in_epsilon(1827.7107358677958, worksheet.costs_am73, 0.001); end
  def test_costs_am153; assert_in_epsilon(1553.2046383649354, worksheet.costs_am153, 0.001); end
  def test_costs_am5; assert_in_epsilon(365.6808223734311, worksheet.costs_am5, 0.001); end
  def test_costs_am74; assert_in_epsilon(450.0709917526115, worksheet.costs_am74, 0.001); end
  def test_costs_am154; assert_in_epsilon(407.8759070630213, worksheet.costs_am154, 0.001); end
  def test_costs_am6; assert_in_epsilon(1547.0065409219999, worksheet.costs_am6, 0.001); end
  def test_costs_am75; assert_in_epsilon(1915.7255526139998, worksheet.costs_am75, 0.001); end
  def test_costs_am155; assert_in_epsilon(1731.3660467679997, worksheet.costs_am155, 0.001); end
  def test_costs_am7; assert_in_epsilon(534.1348173515981, worksheet.costs_am7, 0.001); end
  def test_costs_am76; assert_in_epsilon(687.6985773401826, worksheet.costs_am76, 0.001); end
  def test_costs_am156; assert_in_epsilon(610.9166973458904, worksheet.costs_am156, 0.001); end
  def test_costs_am8; assert_in_epsilon(1463.143125, worksheet.costs_am8, 0.001); end
  def test_costs_am77; assert_in_epsilon(1934.6003541666666, worksheet.costs_am77, 0.001); end
  def test_costs_am157; assert_in_epsilon(1698.8717395833332, worksheet.costs_am157, 0.001); end
  def test_costs_am9; assert_in_epsilon(11.478665989126807, worksheet.costs_am9, 0.001); end
  def test_costs_am78; assert_in_epsilon(15.304887985502415, worksheet.costs_am78, 0.001); end
  def test_costs_am158; assert_in_epsilon(13.39177698731461, worksheet.costs_am158, 0.001); end
  def test_costs_am11; assert_in_epsilon(209.99066256283461, worksheet.costs_am11, 0.001); end
  def test_costs_am80; assert_in_epsilon(256.6552542434645, worksheet.costs_am80, 0.001); end
  def test_costs_am160; assert_in_epsilon(233.32295840314958, worksheet.costs_am160, 0.001); end
  def test_costs_am13; assert_in_epsilon(917.2675265003264, worksheet.costs_am13, 0.001); end
  def test_costs_am82; assert_in_epsilon(1342.1072229846882, worksheet.costs_am82, 0.001); end
  def test_costs_am162; assert_in_epsilon(1129.6873747425072, worksheet.costs_am162, 0.001); end
  def test_costs_am21; assert_in_epsilon(539.4375000000001, worksheet.costs_am21, 0.001); end
  def test_costs_am90; assert_in_epsilon(720.5625000000001, worksheet.costs_am90, 0.001); end
  def test_costs_am163; assert_in_epsilon(630.0000000000001, worksheet.costs_am163, 0.001); end
  def test_costs_am22; assert_in_delta(0, (worksheet.costs_am22||0), 0.001); end
  def test_costs_am91; assert_in_delta(0, (worksheet.costs_am91||0), 0.001); end
  def test_costs_am164; assert_in_delta(0, (worksheet.costs_am164||0), 0.001); end
  def test_costs_am23; assert_in_epsilon(253.92265930984007, worksheet.costs_am23, 0.001); end
  def test_costs_am92; assert_in_epsilon(761.7679779295202, worksheet.costs_am92, 0.001); end
  def test_costs_am165; assert_in_epsilon(507.84531861968014, worksheet.costs_am165, 0.001); end
  def test_costs_am24; assert_in_epsilon(1194.9437759362563, worksheet.costs_am24, 0.001); end
  def test_costs_am93; assert_in_epsilon(1612.9812195412762, worksheet.costs_am93, 0.001); end
  def test_costs_am166; assert_in_epsilon(1403.9624977387662, worksheet.costs_am166, 0.001); end
  def test_costs_am167; assert_in_epsilon(9920.444955616598, worksheet.costs_am167, 0.001); end
  def test_costs_an4; assert_in_epsilon(1634.648844315284, worksheet.costs_an4, 0.001); end
  def test_costs_an73; assert_in_epsilon(2322.8777651382075, worksheet.costs_an73, 0.001); end
  def test_costs_an153; assert_in_epsilon(1978.7633047267457, worksheet.costs_an153, 0.001); end
  def test_costs_an5; assert_in_epsilon(551.1280539760219, worksheet.costs_an5, 0.001); end
  def test_costs_an74; assert_in_epsilon(722.17889010938, worksheet.costs_an74, 0.001); end
  def test_costs_an154; assert_in_epsilon(636.653472042701, worksheet.costs_an154, 0.001); end
  def test_costs_an6; assert_in_epsilon(1694.5640969219999, worksheet.costs_an6, 0.001); end
  def test_costs_an75; assert_in_epsilon(2099.728124614, worksheet.costs_an75, 0.001); end
  def test_costs_an155; assert_in_epsilon(1897.146110768, worksheet.costs_an155, 0.001); end
  def test_costs_an7; assert_in_epsilon(570.7213356164383, worksheet.costs_an7, 0.001); end
  def test_costs_an76; assert_in_epsilon(760.9617808219177, worksheet.costs_an76, 0.001); end
  def test_costs_an156; assert_in_epsilon(665.8415582191781, worksheet.costs_an156, 0.001); end
  def test_costs_an8; assert_in_epsilon(1427.0144999999998, worksheet.costs_an8, 0.001); end
  def test_costs_an77; assert_in_epsilon(2140.52175, worksheet.costs_an77, 0.001); end
  def test_costs_an157; assert_in_epsilon(1783.7681249999998, worksheet.costs_an157, 0.001); end
  def test_costs_an9; assert_in_epsilon(11.533783623501376, worksheet.costs_an9, 0.001); end
  def test_costs_an78; assert_in_epsilon(15.378378164668504, worksheet.costs_an78, 0.001); end
  def test_costs_an158; assert_in_epsilon(13.456080894084941, worksheet.costs_an158, 0.001); end
  def test_costs_an11; assert_in_epsilon(503.86906549530863, worksheet.costs_an11, 0.001); end
  def test_costs_an80; assert_in_epsilon(615.8399689387105, worksheet.costs_an80, 0.001); end
  def test_costs_an160; assert_in_epsilon(559.8545172170095, worksheet.costs_an160, 0.001); end
  def test_costs_an13; assert_in_epsilon(848.6716089882241, worksheet.costs_an13, 0.001); end
  def test_costs_an82; assert_in_epsilon(1697.3432179764482, worksheet.costs_an82, 0.001); end
  def test_costs_an162; assert_in_epsilon(1273.0074134823362, worksheet.costs_an162, 0.001); end
  def test_costs_an21; assert_in_epsilon(766.5, worksheet.costs_an21, 0.001); end
  def test_costs_an90; assert_in_epsilon(987, worksheet.costs_an90, 0.001); end
  def test_costs_an163; assert_in_epsilon(876.75, worksheet.costs_an163, 0.001); end
  def test_costs_an22; assert_in_delta(0, (worksheet.costs_an22||0), 0.001); end
  def test_costs_an91; assert_in_delta(0, (worksheet.costs_an91||0), 0.001); end
  def test_costs_an164; assert_in_delta(0, (worksheet.costs_an164||0), 0.001); end
  def test_costs_an23; assert_in_epsilon(371.3448839022141, worksheet.costs_an23, 0.001); end
  def test_costs_an92; assert_in_epsilon(1114.0346517066423, worksheet.costs_an92, 0.001); end
  def test_costs_an165; assert_in_epsilon(742.6897678044282, worksheet.costs_an165, 0.001); end
  def test_costs_an24; assert_in_epsilon(2072.888876183989, worksheet.costs_an24, 0.001); end
  def test_costs_an93; assert_in_epsilon(2604.3347939183172, worksheet.costs_an93, 0.001); end
  def test_costs_an166; assert_in_epsilon(2338.6118350511533, worksheet.costs_an166, 0.001); end
  def test_costs_an167; assert_in_epsilon(12766.542185205637, worksheet.costs_an167, 0.001); end
  def test_costs_ao4; assert_in_epsilon(1778.637800805375, worksheet.costs_ao4, 0.001); end
  def test_costs_ao73; assert_in_epsilon(2479.0236141487385, worksheet.costs_ao73, 0.001); end
  def test_costs_ao153; assert_in_epsilon(2128.830707477057, worksheet.costs_ao153, 0.001); end
  def test_costs_ao5; assert_in_epsilon(768.6756509341627, worksheet.costs_ao5, 0.001); end
  def test_costs_ao74; assert_in_epsilon(1019.8923593218848, worksheet.costs_ao74, 0.001); end
  def test_costs_ao154; assert_in_epsilon(894.2840051280238, worksheet.costs_ao154, 0.001); end
  def test_costs_ao6; assert_in_epsilon(1573.3625215719999, worksheet.costs_ao6, 0.001); end
  def test_costs_ao75; assert_in_epsilon(1949.826099164, worksheet.costs_ao75, 0.001); end
  def test_costs_ao155; assert_in_epsilon(1761.594310368, worksheet.costs_ao155, 0.001); end
  def test_costs_ao7; assert_in_epsilon(632.0540796232876, worksheet.costs_ao7, 0.001); end
  def test_costs_ao76; assert_in_epsilon(833.5785687785387, worksheet.costs_ao76, 0.001); end
  def test_costs_ao156; assert_in_epsilon(732.8163242009132, worksheet.costs_ao156, 0.001); end
  def test_costs_ao8; assert_in_epsilon(1610.0725208333333, worksheet.costs_ao8, 0.001); end
  def test_costs_ao77; assert_in_epsilon(2409.2326041666665, worksheet.costs_ao77, 0.001); end
  def test_costs_ao157; assert_in_epsilon(2009.6525625, worksheet.costs_ao157, 0.001); end
  def test_costs_ao9; assert_in_epsilon(11.579140688703019, worksheet.costs_ao9, 0.001); end
  def test_costs_ao78; assert_in_epsilon(15.438854251604033, worksheet.costs_ao78, 0.001); end
  def test_costs_ao158; assert_in_epsilon(13.508997470153526, worksheet.costs_ao158, 0.001); end
  def test_costs_ao11; assert_in_epsilon(817.6441408586742, worksheet.costs_ao11, 0.001); end
  def test_costs_ao80; assert_in_epsilon(999.3428388272685, worksheet.costs_ao80, 0.001); end
  def test_costs_ao160; assert_in_epsilon(908.4934898429713, worksheet.costs_ao160, 0.001); end
  def test_costs_ao13; assert_in_epsilon(1289.4329970645795, worksheet.costs_ao13, 0.001); end
  def test_costs_ao82; assert_in_epsilon(2578.865994129159, worksheet.costs_ao82, 0.001); end
  def test_costs_ao162; assert_in_epsilon(1934.1494955968692, worksheet.costs_ao162, 0.001); end
  def test_costs_ao21; assert_in_epsilon(951.5625, worksheet.costs_ao21, 0.001); end
  def test_costs_ao90; assert_in_epsilon(1214.0625, worksheet.costs_ao90, 0.001); end
  def test_costs_ao163; assert_in_epsilon(1082.8125, worksheet.costs_ao163, 0.001); end
  def test_costs_ao22; assert_in_delta(0, (worksheet.costs_ao22||0), 0.001); end
  def test_costs_ao91; assert_in_delta(0, (worksheet.costs_ao91||0), 0.001); end
  def test_costs_ao164; assert_in_delta(0, (worksheet.costs_ao164||0), 0.001); end
  def test_costs_ao23; assert_in_epsilon(456.2564852808692, worksheet.costs_ao23, 0.001); end
  def test_costs_ao92; assert_in_epsilon(1368.7694558426074, worksheet.costs_ao92, 0.001); end
  def test_costs_ao165; assert_in_epsilon(912.5129705617383, worksheet.costs_ao165, 0.001); end
  def test_costs_ao24; assert_in_epsilon(2945.252756563163, worksheet.costs_ao24, 0.001); end
  def test_costs_ao93; assert_in_epsilon(3667.822499704497, worksheet.costs_ao93, 0.001); end
  def test_costs_ao166; assert_in_epsilon(3306.5376281338304, worksheet.costs_ao166, 0.001); end
  def test_costs_ao167; assert_in_epsilon(15685.192991279557, worksheet.costs_ao167, 0.001); end
  def test_costs_ap4; assert_in_epsilon(1873.344610612642, worksheet.costs_ap4, 0.001); end
  def test_costs_ap73; assert_in_epsilon(2641.6596107012224, worksheet.costs_ap73, 0.001); end
  def test_costs_ap153; assert_in_epsilon(2257.502110656932, worksheet.costs_ap153, 0.001); end
  def test_costs_ap5; assert_in_epsilon(1005.7655699588386, worksheet.costs_ap5, 0.001); end
  def test_costs_ap74; assert_in_epsilon(1344.0454407420546, worksheet.costs_ap74, 0.001); end
  def test_costs_ap154; assert_in_epsilon(1174.9055053504467, worksheet.costs_ap154, 0.001); end
  def test_costs_ap6; assert_in_epsilon(1715.9200775719999, worksheet.costs_ap6, 0.001); end
  def test_costs_ap75; assert_in_epsilon(2128.828671164, worksheet.costs_ap75, 0.001); end
  def test_costs_ap155; assert_in_epsilon(1922.3743743679997, worksheet.costs_ap155, 0.001); end
  def test_costs_ap7; assert_in_epsilon(666.1866053082192, worksheet.costs_ap7, 0.001); end
  def test_costs_ap76; assert_in_epsilon(868.0613341894978, worksheet.costs_ap76, 0.001); end
  def test_costs_ap156; assert_in_epsilon(767.1239697488585, worksheet.costs_ap156, 0.001); end
  def test_costs_ap8; assert_in_epsilon(1717.8680729166667, worksheet.costs_ap8, 0.001); end
  def test_costs_ap77; assert_in_epsilon(2563.587739583333, worksheet.costs_ap77, 0.001); end
  def test_costs_ap157; assert_in_epsilon(2140.72790625, worksheet.costs_ap157, 0.001); end
  def test_costs_ap9; assert_in_epsilon(11.615186590848403, worksheet.costs_ap9, 0.001); end
  def test_costs_ap78; assert_in_epsilon(15.486915454464542, worksheet.costs_ap78, 0.001); end
  def test_costs_ap158; assert_in_epsilon(13.551051022656473, worksheet.costs_ap158, 0.001); end
  def test_costs_ap11; assert_in_epsilon(1097.8288679590958, worksheet.costs_ap11, 0.001); end
  def test_costs_ap80; assert_in_epsilon(1341.7908386166728, worksheet.costs_ap80, 0.001); end
  def test_costs_ap160; assert_in_epsilon(1219.8098532878844, worksheet.costs_ap160, 0.001); end
  def test_costs_ap13; assert_in_epsilon(1683.4076162323627, worksheet.costs_ap13, 0.001); end
  def test_costs_ap82; assert_in_epsilon(3366.8152324647253, worksheet.costs_ap82, 0.001); end
  def test_costs_ap162; assert_in_epsilon(2525.111424348544, worksheet.costs_ap162, 0.001); end
  def test_costs_ap21; assert_in_epsilon(1134, worksheet.costs_ap21, 0.001); end
  def test_costs_ap90; assert_in_epsilon(1433.25, worksheet.costs_ap90, 0.001); end
  def test_costs_ap163; assert_in_epsilon(1283.625, worksheet.costs_ap163, 0.001); end
  def test_costs_ap22; assert_in_delta(0, (worksheet.costs_ap22||0), 0.001); end
  def test_costs_ap91; assert_in_delta(0, (worksheet.costs_ap91||0), 0.001); end
  def test_costs_ap164; assert_in_delta(0, (worksheet.costs_ap164||0), 0.001); end
  def test_costs_ap23; assert_in_epsilon(584.1692426202349, worksheet.costs_ap23, 0.001); end
  def test_costs_ap92; assert_in_epsilon(1752.5077278607046, worksheet.costs_ap92, 0.001); end
  def test_costs_ap165; assert_in_epsilon(1168.3384852404697, worksheet.costs_ap165, 0.001); end
  def test_costs_ap24; assert_in_epsilon(4001.161674134739, worksheet.costs_ap24, 0.001); end
  def test_costs_ap93; assert_in_epsilon(4825.104051134998, worksheet.costs_ap93, 0.001); end
  def test_costs_ap166; assert_in_epsilon(4413.132862634869, worksheet.costs_ap166, 0.001); end
  def test_costs_ap167; assert_in_epsilon(18886.20254290866, worksheet.costs_ap167, 0.001); end
  def test_costs_aq4; assert_in_epsilon(2169.960566898197, worksheet.costs_aq4, 0.001); end
  def test_costs_aq73; assert_in_epsilon(2985.140507212228, worksheet.costs_aq73, 0.001); end
  def test_costs_aq153; assert_in_epsilon(2577.5505370552128, worksheet.costs_aq153, 0.001); end
  def test_costs_aq5; assert_in_epsilon(1262.9120826833807, worksheet.costs_aq5, 0.001); end
  def test_costs_aq74; assert_in_epsilon(1695.333913638514, worksheet.costs_aq74, 0.001); end
  def test_costs_aq154; assert_in_epsilon(1479.1229981609474, worksheet.costs_aq154, 0.001); end
  def test_costs_aq6; assert_in_epsilon(1262.78778, worksheet.costs_aq6, 0.001); end
  def test_costs_aq75; assert_in_epsilon(1565.0128599999998, worksheet.costs_aq75, 0.001); end
  def test_costs_aq155; assert_in_epsilon(1413.90032, worksheet.costs_aq155, 0.001); end
  def test_costs_aq7; assert_in_epsilon(699.6398116438355, worksheet.costs_aq7, 0.001); end
  def test_costs_aq76; assert_in_epsilon(899.5369006849315, worksheet.costs_aq76, 0.001); end
  def test_costs_aq156; assert_in_epsilon(799.5883561643835, worksheet.costs_aq156, 0.001); end
  def test_costs_aq8; assert_in_epsilon(1820.57040625, worksheet.costs_aq8, 0.001); end
  def test_costs_aq77; assert_in_epsilon(2708.65353125, worksheet.costs_aq77, 0.001); end
  def test_costs_aq157; assert_in_epsilon(2264.61196875, worksheet.costs_aq157, 0.001); end
  def test_costs_aq9; assert_in_epsilon(11.642354468891797, worksheet.costs_aq9, 0.001); end
  def test_costs_aq78; assert_in_epsilon(15.523139291855731, worksheet.costs_aq78, 0.001); end
  def test_costs_aq158; assert_in_epsilon(13.582746880373765, worksheet.costs_aq158, 0.001); end
  def test_costs_aq11; assert_in_epsilon(1237.9746150170984, worksheet.costs_aq11, 0.001); end
  def test_costs_aq80; assert_in_epsilon(1513.0800850208984, worksheet.costs_aq80, 0.001); end
  def test_costs_aq160; assert_in_epsilon(1375.5273500189983, worksheet.costs_aq160, 0.001); end
  def test_costs_aq13; assert_in_epsilon(2290.5352129810826, worksheet.costs_aq13, 0.001); end
  def test_costs_aq82; assert_in_epsilon(4581.070425962165, worksheet.costs_aq82, 0.001); end
  def test_costs_aq162; assert_in_epsilon(3435.802819471624, worksheet.costs_aq162, 0.001); end
  def test_costs_aq21; assert_in_epsilon(1313.8125, worksheet.costs_aq21, 0.001); end
  def test_costs_aq90; assert_in_epsilon(1662.9375, worksheet.costs_aq90, 0.001); end
  def test_costs_aq163; assert_in_epsilon(1488.375, worksheet.costs_aq163, 0.001); end
  def test_costs_aq22; assert_in_delta(0, (worksheet.costs_aq22||0), 0.001); end
  def test_costs_aq91; assert_in_delta(0, (worksheet.costs_aq91||0), 0.001); end
  def test_costs_aq164; assert_in_delta(0, (worksheet.costs_aq164||0), 0.001); end
  def test_costs_aq23; assert_in_epsilon(667.7452271771899, worksheet.costs_aq23, 0.001); end
  def test_costs_aq92; assert_in_epsilon(2003.23568153157, worksheet.costs_aq92, 0.001); end
  def test_costs_aq165; assert_in_epsilon(1335.4904543543798, worksheet.costs_aq165, 0.001); end
  def test_costs_aq24; assert_in_epsilon(4825.630245567205, worksheet.costs_aq24, 0.001); end
  def test_costs_aq93; assert_in_epsilon(5877.493813745659, worksheet.costs_aq93, 0.001); end
  def test_costs_aq166; assert_in_epsilon(5351.562029656432, worksheet.costs_aq166, 0.001); end
  def test_costs_aq167; assert_in_epsilon(21535.114580512352, worksheet.costs_aq167, 0.001); end
  def test_costs_ar4; assert_in_epsilon(2369.5050041949535, worksheet.costs_ar4, 0.001); end
  def test_costs_ar73; assert_in_epsilon(3295.658862133799, worksheet.costs_ar73, 0.001); end
  def test_costs_ar153; assert_in_epsilon(2832.581933164376, worksheet.costs_ar153, 0.001); end
  def test_costs_ar5; assert_in_epsilon(1563.643159371254, worksheet.costs_ar5, 0.001); end
  def test_costs_ar74; assert_in_epsilon(2097.4672559100204, worksheet.costs_ar74, 0.001); end
  def test_costs_ar154; assert_in_epsilon(1830.555207640637, worksheet.costs_ar154, 0.001); end
  def test_costs_ar6; assert_in_epsilon(1405.3453359999999, worksheet.costs_ar6, 0.001); end
  def test_costs_ar75; assert_in_epsilon(1744.015432, worksheet.costs_ar75, 0.001); end
  def test_costs_ar155; assert_in_epsilon(1574.6803839999998, worksheet.costs_ar155, 0.001); end
  def test_costs_ar7; assert_in_epsilon(727.2611301369863, worksheet.costs_ar7, 0.001); end
  def test_costs_ar76; assert_in_epsilon(921.1974315068493, worksheet.costs_ar76, 0.001); end
  def test_costs_ar156; assert_in_epsilon(824.2292808219178, worksheet.costs_ar156, 0.001); end
  def test_costs_ar8; assert_in_epsilon(1903.346125, worksheet.costs_ar8, 0.001); end
  def test_costs_ar77; assert_in_epsilon(2822.202875, worksheet.costs_ar77, 0.001); end
  def test_costs_ar157; assert_in_epsilon(2362.7745, worksheet.costs_ar157, 0.001); end
  def test_costs_ar9; assert_in_epsilon(11.66106172457312, worksheet.costs_ar9, 0.001); end
  def test_costs_ar78; assert_in_epsilon(15.548082299430828, worksheet.costs_ar78, 0.001); end
  def test_costs_ar158; assert_in_epsilon(13.604572012001974, worksheet.costs_ar158, 0.001); end
  def test_costs_ar11; assert_in_epsilon(1627.802560768038, worksheet.costs_ar11, 0.001); end
  def test_costs_ar80; assert_in_epsilon(1989.5364631609355, worksheet.costs_ar80, 0.001); end
  def test_costs_ar160; assert_in_epsilon(1808.6695119644867, worksheet.costs_ar160, 0.001); end
  def test_costs_ar13; assert_in_epsilon(2278.2682334260303, worksheet.costs_ar13, 0.001); end
  def test_costs_ar82; assert_in_epsilon(4556.536466852061, worksheet.costs_ar82, 0.001); end
  def test_costs_ar162; assert_in_epsilon(3417.4023501390457, worksheet.costs_ar162, 0.001); end
  def test_costs_ar21; assert_in_epsilon(1491, worksheet.costs_ar21, 0.001); end
  def test_costs_ar90; assert_in_epsilon(1890, worksheet.costs_ar90, 0.001); end
  def test_costs_ar163; assert_in_epsilon(1690.5, worksheet.costs_ar163, 0.001); end
  def test_costs_ar22; assert_in_delta(0, (worksheet.costs_ar22||0), 0.001); end
  def test_costs_ar91; assert_in_delta(0, (worksheet.costs_ar91||0), 0.001); end
  def test_costs_ar164; assert_in_delta(0, (worksheet.costs_ar164||0), 0.001); end
  def test_costs_ar23; assert_in_epsilon(972.6979395513528, worksheet.costs_ar23, 0.001); end
  def test_costs_ar92; assert_in_epsilon(2918.093818654058, worksheet.costs_ar92, 0.001); end
  def test_costs_ar165; assert_in_epsilon(1945.3958791027053, worksheet.costs_ar165, 0.001); end
  def test_costs_ar24; assert_in_epsilon(6730.324159469623, worksheet.costs_ar24, 0.001); end
  def test_costs_ar93; assert_in_epsilon(8029.342345358699, worksheet.costs_ar93, 0.001); end
  def test_costs_ar166; assert_in_epsilon(7379.833252414161, worksheet.costs_ar166, 0.001); end
  def test_costs_ar167; assert_in_epsilon(25680.22687125933, worksheet.costs_ar167, 0.001); end
  def test_costs_c168; assert_equal("Biomass and gas power stations", worksheet.costs_c168); end
  def test_costs_e168; assert_equal("MEUR", worksheet.costs_e168); end
  def test_costs_f168; assert_in_delta(0, (worksheet.costs_f168||0), 0.001); end
  def test_costs_g168; assert_in_epsilon(203.77913595523898, worksheet.costs_g168, 0.001); end
  def test_costs_h168; assert_in_epsilon(355.43332413397593, worksheet.costs_h168, 0.001); end
  def test_costs_i168; assert_in_epsilon(448.82507468212015, worksheet.costs_i168, 0.001); end
  def test_costs_j168; assert_in_epsilon(488.35210353554817, worksheet.costs_j168, 0.001); end
  def test_costs_k168; assert_in_epsilon(417.77373710854454, worksheet.costs_k168, 0.001); end
  def test_costs_l168; assert_in_epsilon(322.22592374782175, worksheet.costs_l168, 0.001); end
  def test_costs_m168; assert_in_epsilon(414.9804038513854, worksheet.costs_m168, 0.001); end
  def test_costs_n168; assert_in_epsilon(438.2682698072472, worksheet.costs_n168, 0.001); end
  def test_costs_p168; assert_in_epsilon(134.91657288152294, worksheet.costs_p168, 0.001); end
  def test_costs_q168; assert_in_epsilon(58.4840508874897, worksheet.costs_q168, 0.001); end
  def test_costs_r168; assert_in_epsilon(76.79070296765595, worksheet.costs_r168, 0.001); end
  def test_costs_s168; assert_in_epsilon(105.57136791946078, worksheet.costs_s168, 0.001); end
  def test_costs_t168; assert_in_epsilon(136.63397075660242, worksheet.costs_t168, 0.001); end
  def test_costs_u168; assert_in_epsilon(155.13182656989483, worksheet.costs_u168, 0.001); end
  def test_costs_v168; assert_in_epsilon(173.5465822362456, worksheet.costs_v168, 0.001); end
  def test_costs_w168; assert_in_epsilon(191.83668768218405, worksheet.costs_w168, 0.001); end
  def test_costs_x168; assert_in_epsilon(210.12679312812247, worksheet.costs_x168, 0.001); end
  def test_costs_y168; assert_in_epsilon(138.1153950032421, worksheet.costs_y168, 0.001); end
  def test_costs_z168; assert_in_epsilon(1896.1779082104529, worksheet.costs_z168, 0.001); end
  def test_costs_aa168; assert_in_epsilon(496.88587670926063, worksheet.costs_aa168, 0.001); end
  def test_costs_ab168; assert_in_epsilon(690.4195709336052, worksheet.costs_ab168, 0.001); end
  def test_costs_ac168; assert_in_epsilon(998.8081957633544, worksheet.costs_ac168, 0.001); end
  def test_costs_ad168; assert_in_epsilon(1353.777230434595, worksheet.costs_ad168, 0.001); end
  def test_costs_ae168; assert_in_epsilon(1555.9251437986175, worksheet.costs_ae168, 0.001); end
  def test_costs_af168; assert_in_epsilon(1761.7296046728648, worksheet.costs_af168, 0.001); end
  def test_costs_ag168; assert_in_epsilon(1970.7334455216433, worksheet.costs_ag168, 0.001); end
  def test_costs_ah168; assert_in_epsilon(2184.1868702290067, worksheet.costs_ah168, 0.001); end
  def test_costs_ai168; assert_in_epsilon(1434.2937606970447, worksheet.costs_ai168, 0.001); end
  def test_costs_aj168; assert_in_epsilon(2031.094481091976, worksheet.costs_aj168, 0.001); end
  def test_costs_ak168; assert_in_epsilon(759.1490635519892, worksheet.costs_ak168, 0.001); end
  def test_costs_al168; assert_in_epsilon(1122.6435980352371, worksheet.costs_al168, 0.001); end
  def test_costs_am168; assert_in_epsilon(1553.2046383649354, worksheet.costs_am168, 0.001); end
  def test_costs_an168; assert_in_epsilon(1978.7633047267457, worksheet.costs_an168, 0.001); end
  def test_costs_ao168; assert_in_epsilon(2128.830707477057, worksheet.costs_ao168, 0.001); end
  def test_costs_ap168; assert_in_epsilon(2257.502110656932, worksheet.costs_ap168, 0.001); end
  def test_costs_aq168; assert_in_epsilon(2577.5505370552128, worksheet.costs_aq168, 0.001); end
  def test_costs_ar168; assert_in_epsilon(2832.581933164376, worksheet.costs_ar168, 0.001); end
  def test_costs_c169; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c169); end
  def test_costs_e169; assert_equal("MEUR", worksheet.costs_e169); end
  def test_costs_f169; assert_in_delta(0, (worksheet.costs_f169||0), 0.001); end
  def test_costs_g169; assert_in_delta(0, (worksheet.costs_g169||0), 0.001); end
  def test_costs_h169; assert_in_delta(0, (worksheet.costs_h169||0), 0.001); end
  def test_costs_i169; assert_in_epsilon(199.30163846360463, worksheet.costs_i169, 0.001); end
  def test_costs_j169; assert_in_epsilon(165.45796400752084, worksheet.costs_j169, 0.001); end
  def test_costs_k169; assert_in_epsilon(156.05694332527537, worksheet.costs_k169, 0.001); end
  def test_costs_l169; assert_in_epsilon(146.65592264302975, worksheet.costs_l169, 0.001); end
  def test_costs_m169; assert_in_epsilon(137.25490196078425, worksheet.costs_m169, 0.001); end
  def test_costs_n169; assert_in_epsilon(150.41633091592794, worksheet.costs_n169, 0.001); end
  def test_costs_p169; assert_in_delta(0, (worksheet.costs_p169||0), 0.001); end
  def test_costs_q169; assert_in_delta(0, (worksheet.costs_q169||0), 0.001); end
  def test_costs_r169; assert_in_delta(0, (worksheet.costs_r169||0), 0.001); end
  def test_costs_s169; assert_in_epsilon(3.986032769272093, worksheet.costs_s169, 0.001); end
  def test_costs_t169; assert_in_epsilon(3.3091592801504164, worksheet.costs_t169, 0.001); end
  def test_costs_u169; assert_in_epsilon(3.1211388665055066, worksheet.costs_u169, 0.001); end
  def test_costs_v169; assert_in_epsilon(2.9331184528605947, worksheet.costs_v169, 0.001); end
  def test_costs_w169; assert_in_epsilon(2.7450980392156845, worksheet.costs_w169, 0.001); end
  def test_costs_x169; assert_in_epsilon(3.0083266183185593, worksheet.costs_x169, 0.001); end
  def test_costs_y169; assert_in_epsilon(2.1225415584803167, worksheet.costs_y169, 0.001); end
  def test_costs_z169; assert_in_delta(0, (worksheet.costs_z169||0), 0.001); end
  def test_costs_aa169; assert_in_delta(0, (worksheet.costs_aa169||0), 0.001); end
  def test_costs_ab169; assert_in_delta(0, (worksheet.costs_ab169||0), 0.001); end
  def test_costs_ac169; assert_in_epsilon(204.58823583014458, worksheet.costs_ac169, 0.001); end
  def test_costs_ad169; assert_in_epsilon(467.88634875502964, worksheet.costs_ad169, 0.001); end
  def test_costs_ae169; assert_in_epsilon(735.1059229362429, worksheet.costs_ae169, 0.001); end
  def test_costs_af169; assert_in_epsilon(1025.3164642545562, worksheet.costs_af169, 0.001); end
  def test_costs_ag169; assert_in_epsilon(1339.1229981609474, worksheet.costs_ag169, 0.001); end
  def test_costs_ah169; assert_in_epsilon(1677.1305501063907, worksheet.costs_ah169, 0.001); end
  def test_costs_ai169; assert_in_epsilon(605.4611688937013, worksheet.costs_ai169, 0.001); end
  def test_costs_aj169; assert_in_delta(0, (worksheet.costs_aj169||0), 0.001); end
  def test_costs_ak169; assert_in_delta(0, (worksheet.costs_ak169||0), 0.001); end
  def test_costs_al169; assert_in_delta(0, (worksheet.costs_al169||0), 0.001); end
  def test_costs_am169; assert_in_epsilon(407.8759070630213, worksheet.costs_am169, 0.001); end
  def test_costs_an169; assert_in_epsilon(636.653472042701, worksheet.costs_an169, 0.001); end
  def test_costs_ao169; assert_in_epsilon(894.2840051280238, worksheet.costs_ao169, 0.001); end
  def test_costs_ap169; assert_in_epsilon(1174.9055053504467, worksheet.costs_ap169, 0.001); end
  def test_costs_aq169; assert_in_epsilon(1479.1229981609474, worksheet.costs_aq169, 0.001); end
  def test_costs_ar169; assert_in_epsilon(1830.555207640637, worksheet.costs_ar169, 0.001); end
  def test_costs_c170; assert_equal("Nuclear power", worksheet.costs_c170); end
  def test_costs_e170; assert_equal("MEUR", worksheet.costs_e170); end
  def test_costs_f170; assert_in_delta(0, (worksheet.costs_f170||0), 0.001); end
  def test_costs_g170; assert_in_delta(0, (worksheet.costs_g170||0), 0.001); end
  def test_costs_h170; assert_in_delta(0, (worksheet.costs_h170||0), 0.001); end
  def test_costs_i170; assert_in_epsilon(600, worksheet.costs_i170, 0.001); end
  def test_costs_j170; assert_in_epsilon(600, worksheet.costs_j170, 0.001); end
  def test_costs_k170; assert_in_epsilon(595, worksheet.costs_k170, 0.001); end
  def test_costs_l170; assert_in_epsilon(590, worksheet.costs_l170, 0.001); end
  def test_costs_m170; assert_in_epsilon(585, worksheet.costs_m170, 0.001); end
  def test_costs_n170; assert_in_epsilon(580, worksheet.costs_n170, 0.001); end
  def test_costs_o170; assert_in_epsilon(394.44444444444446, worksheet.costs_o170, 0.001); end
  def test_costs_p170; assert_in_epsilon(582.4499999999999, worksheet.costs_p170, 0.001); end
  def test_costs_q170; assert_in_epsilon(582.4499999999999, worksheet.costs_q170, 0.001); end
  def test_costs_r170; assert_in_epsilon(582.4499999999999, worksheet.costs_r170, 0.001); end
  def test_costs_s170; assert_in_epsilon(682.4499999999999, worksheet.costs_s170, 0.001); end
  def test_costs_t170; assert_in_epsilon(782.4499999999999, worksheet.costs_t170, 0.001); end
  def test_costs_u170; assert_in_epsilon(703.7, worksheet.costs_u170, 0.001); end
  def test_costs_v170; assert_in_epsilon(803.6999999999999, worksheet.costs_v170, 0.001); end
  def test_costs_w170; assert_in_epsilon(500, worksheet.costs_w170, 0.001); end
  def test_costs_x170; assert_in_epsilon(600, worksheet.costs_x170, 0.001); end
  def test_costs_y170; assert_in_epsilon(646.6277777777777, worksheet.costs_y170, 0.001); end
  def test_costs_z170; assert_in_epsilon(383.1359827679999, worksheet.costs_z170, 0.001); end
  def test_costs_aa170; assert_in_epsilon(383.1359827679999, worksheet.costs_aa170, 0.001); end
  def test_costs_ab170; assert_in_epsilon(383.1359827679999, worksheet.costs_ab170, 0.001); end
  def test_costs_ac170; assert_in_epsilon(448.9160467679999, worksheet.costs_ac170, 0.001); end
  def test_costs_ad170; assert_in_epsilon(514.696110768, worksheet.costs_ad170, 0.001); end
  def test_costs_ae170; assert_in_epsilon(462.894310368, worksheet.costs_ae170, 0.001); end
  def test_costs_af170; assert_in_epsilon(528.6743743679999, worksheet.costs_af170, 0.001); end
  def test_costs_ag170; assert_in_epsilon(328.90031999999997, worksheet.costs_ag170, 0.001); end
  def test_costs_ah170; assert_in_epsilon(394.680384, worksheet.costs_ah170, 0.001); end
  def test_costs_ai170; assert_in_epsilon(425.352166064, worksheet.costs_ai170, 0.001); end
  def test_costs_aj170; assert_in_epsilon(965.5859827679999, worksheet.costs_aj170, 0.001); end
  def test_costs_ak170; assert_in_epsilon(965.5859827679999, worksheet.costs_ak170, 0.001); end
  def test_costs_al170; assert_in_epsilon(965.5859827679999, worksheet.costs_al170, 0.001); end
  def test_costs_am170; assert_in_epsilon(1731.3660467679997, worksheet.costs_am170, 0.001); end
  def test_costs_an170; assert_in_epsilon(1897.146110768, worksheet.costs_an170, 0.001); end
  def test_costs_ao170; assert_in_epsilon(1761.594310368, worksheet.costs_ao170, 0.001); end
  def test_costs_ap170; assert_in_epsilon(1922.3743743679997, worksheet.costs_ap170, 0.001); end
  def test_costs_aq170; assert_in_epsilon(1413.90032, worksheet.costs_aq170, 0.001); end
  def test_costs_ar170; assert_in_epsilon(1574.6803839999998, worksheet.costs_ar170, 0.001); end
  def test_costs_c171; assert_equal("Wind power (on and offshore)", worksheet.costs_c171); end
  def test_costs_e171; assert_equal("MEUR", worksheet.costs_e171); end
  def test_costs_p171; assert_in_epsilon(40.443749999999994, worksheet.costs_p171, 0.001); end
  def test_costs_q171; assert_in_epsilon(239.48781592465755, worksheet.costs_q171, 0.001); end
  def test_costs_r171; assert_in_epsilon(398.4255239726027, worksheet.costs_r171, 0.001); end
  def test_costs_s171; assert_in_epsilon(546.0384369292237, worksheet.costs_s171, 0.001); end
  def test_costs_t171; assert_in_epsilon(672.109683219178, worksheet.costs_t171, 0.001); end
  def test_costs_u171; assert_in_epsilon(831.7188867009131, worksheet.costs_u171, 0.001); end
  def test_costs_v171; assert_in_epsilon(886.8518759988583, worksheet.costs_v171, 0.001); end
  def test_costs_w171; assert_in_epsilon(955.9503249143835, worksheet.costs_w171, 0.001); end
  def test_costs_x171; assert_in_epsilon(1014.5037808219178, worksheet.costs_x171, 0.001); end
  def test_costs_y171; assert_in_epsilon(620.6144531646372, worksheet.costs_y171, 0.001); end
  def test_costs_z171; assert_in_delta(0, (worksheet.costs_z171||0), 0.001); end
  def test_costs_aa171; assert_in_delta(0, (worksheet.costs_aa171||0), 0.001); end
  def test_costs_ab171; assert_in_delta(0, (worksheet.costs_ab171||0), 0.001); end
  def test_costs_ac171; assert_in_delta(0, (worksheet.costs_ac171||0), 0.001); end
  def test_costs_ad171; assert_in_delta(0, (worksheet.costs_ad171||0), 0.001); end
  def test_costs_ae171; assert_in_delta(0, (worksheet.costs_ae171||0), 0.001); end
  def test_costs_af171; assert_in_delta(0, (worksheet.costs_af171||0), 0.001); end
  def test_costs_ag171; assert_in_delta(0, (worksheet.costs_ag171||0), 0.001); end
  def test_costs_ah171; assert_in_delta(0, (worksheet.costs_ah171||0), 0.001); end
  def test_costs_ai171; assert_in_delta(0, (worksheet.costs_ai171||0), 0.001); end
  def test_costs_aj171; assert_in_epsilon(1819.50920890411, worksheet.costs_aj171, 0.001); end
  def test_costs_ak171; assert_in_epsilon(1858.1278433219181, worksheet.costs_ak171, 0.001); end
  def test_costs_al171; assert_in_epsilon(2115.758857305936, worksheet.costs_al171, 0.001); end
  def test_costs_am171; assert_in_epsilon(2309.7884369292237, worksheet.costs_am171, 0.001); end
  def test_costs_an171; assert_in_epsilon(2449.609683219178, worksheet.costs_an171, 0.001); end
  def test_costs_ao171; assert_in_epsilon(2742.468886700913, worksheet.costs_ao171, 0.001); end
  def test_costs_ap171; assert_in_epsilon(2907.8518759988588, worksheet.costs_ap171, 0.001); end
  def test_costs_aq171; assert_in_epsilon(3064.2003249143836, worksheet.costs_aq171, 0.001); end
  def test_costs_ar171; assert_in_epsilon(3187.0037808219176, worksheet.costs_ar171, 0.001); end
  def test_costs_c172; assert_equal("Solar PV", worksheet.costs_c172); end
  def test_costs_e172; assert_equal("MEUR", worksheet.costs_e172); end
  def test_costs_f172; assert_in_epsilon(1169.1, worksheet.costs_f172, 0.001); end
  def test_costs_g172; assert_in_epsilon(990.4875, worksheet.costs_g172, 0.001); end
  def test_costs_h172; assert_in_epsilon(843.75, worksheet.costs_h172, 0.001); end
  def test_costs_i172; assert_in_epsilon(1019.3124997425073, worksheet.costs_i172, 0.001); end
  def test_costs_j172; assert_in_epsilon(1157.1732083633742, worksheet.costs_j172, 0.001); end
  def test_costs_k172; assert_in_epsilon(1781.306763312391, worksheet.costs_k172, 0.001); end
  def test_costs_l172; assert_in_epsilon(2321.296667009992, worksheet.costs_l172, 0.001); end
  def test_costs_m172; assert_in_epsilon(3160.4411113399933, worksheet.costs_m172, 0.001); end
  def test_costs_n172; assert_in_epsilon(3040.292110413018, worksheet.costs_n172, 0.001); end
  def test_costs_p172; assert_in_epsilon(26.108999999999998, worksheet.costs_p172, 0.001); end
  def test_costs_q172; assert_in_epsilon(71.64450000000002, worksheet.costs_q172, 0.001); end
  def test_costs_r172; assert_in_epsilon(99.31875000000002, worksheet.costs_r172, 0.001); end
  def test_costs_s172; assert_in_epsilon(110.37487500000002, worksheet.costs_s172, 0.001); end
  def test_costs_t172; assert_in_epsilon(115.83420511896182, worksheet.costs_t172, 0.001); end
  def test_costs_u172; assert_in_epsilon(152.84273228447836, worksheet.costs_u172, 0.001); end
  def test_costs_v172; assert_in_epsilon(203.81475733855194, worksheet.costs_v172, 0.001); end
  def test_costs_w172; assert_in_epsilon(275.3617081316306, worksheet.costs_w172, 0.001); end
  def test_costs_x172; assert_in_epsilon(377.1102397260275, worksheet.costs_x172, 0.001); end
  def test_costs_y172; assert_in_epsilon(159.1567519555167, worksheet.costs_y172, 0.001); end
  def test_costs_z172; assert_in_delta(0, (worksheet.costs_z172||0), 0.001); end
  def test_costs_aa172; assert_in_delta(0, (worksheet.costs_aa172||0), 0.001); end
  def test_costs_ab172; assert_in_delta(0, (worksheet.costs_ab172||0), 0.001); end
  def test_costs_ac172; assert_in_delta(0, (worksheet.costs_ac172||0), 0.001); end
  def test_costs_ad172; assert_in_delta(0, (worksheet.costs_ad172||0), 0.001); end
  def test_costs_ae172; assert_in_delta(0, (worksheet.costs_ae172||0), 0.001); end
  def test_costs_af172; assert_in_delta(0, (worksheet.costs_af172||0), 0.001); end
  def test_costs_ag172; assert_in_delta(0, (worksheet.costs_ag172||0), 0.001); end
  def test_costs_ah172; assert_in_delta(0, (worksheet.costs_ah172||0), 0.001); end
  def test_costs_ai172; assert_in_delta(0, (worksheet.costs_ai172||0), 0.001); end
  def test_costs_aj172; assert_in_epsilon(1195.209, worksheet.costs_aj172, 0.001); end
  def test_costs_ak172; assert_in_epsilon(1062.132, worksheet.costs_ak172, 0.001); end
  def test_costs_al172; assert_in_epsilon(943.06875, worksheet.costs_al172, 0.001); end
  def test_costs_am172; assert_in_epsilon(1129.6873747425072, worksheet.costs_am172, 0.001); end
  def test_costs_an172; assert_in_epsilon(1273.0074134823362, worksheet.costs_an172, 0.001); end
  def test_costs_ao172; assert_in_epsilon(1934.1494955968692, worksheet.costs_ao172, 0.001); end
  def test_costs_ap172; assert_in_epsilon(2525.111424348544, worksheet.costs_ap172, 0.001); end
  def test_costs_aq172; assert_in_epsilon(3435.802819471624, worksheet.costs_aq172, 0.001); end
  def test_costs_ar172; assert_in_epsilon(3417.4023501390457, worksheet.costs_ar172, 0.001); end
  def test_costs_c173; assert_equal("Hydro and geothermal", worksheet.costs_c173); end
  def test_costs_e173; assert_equal("MEUR", worksheet.costs_e173); end
  def test_costs_f173; assert_in_delta(0, (worksheet.costs_f173||0), 0.001); end
  def test_costs_p173; assert_in_epsilon(9.625, worksheet.costs_p173, 0.001); end
  def test_costs_q173; assert_in_epsilon(13.379653265413868, worksheet.costs_q173, 0.001); end
  def test_costs_r173; assert_in_epsilon(36.17776245386759, worksheet.costs_r173, 0.001); end
  def test_costs_s173; assert_in_epsilon(58.21004211390038, worksheet.costs_s173, 0.001); end
  def test_costs_t173; assert_in_epsilon(113.12631741409021, worksheet.costs_t173, 0.001); end
  def test_costs_u173; assert_in_epsilon(200.1874969207391, worksheet.costs_u173, 0.001); end
  def test_costs_v173; assert_in_epsilon(307.7137504914857, worksheet.costs_v173, 0.001); end
  def test_costs_w173; assert_in_epsilon(401.46879309567794, worksheet.costs_w173, 0.001); end
  def test_costs_x173; assert_in_epsilon(514.0376923700651, worksheet.costs_x173, 0.001); end
  def test_costs_y173; assert_in_epsilon(183.76961201391555, worksheet.costs_y173, 0.001); end
  def test_costs_z173; assert_in_delta(0, (worksheet.costs_z173||0), 0.001); end
  def test_costs_aa173; assert_in_delta(0, (worksheet.costs_aa173||0), 0.001); end
  def test_costs_ab173; assert_in_delta(0, (worksheet.costs_ab173||0), 0.001); end
  def test_costs_ac173; assert_in_delta(0, (worksheet.costs_ac173||0), 0.001); end
  def test_costs_ad173; assert_in_delta(0, (worksheet.costs_ad173||0), 0.001); end
  def test_costs_ae173; assert_in_delta(0, (worksheet.costs_ae173||0), 0.001); end
  def test_costs_af173; assert_in_delta(0, (worksheet.costs_af173||0), 0.001); end
  def test_costs_ag173; assert_in_delta(0, (worksheet.costs_ag173||0), 0.001); end
  def test_costs_ah173; assert_in_delta(0, (worksheet.costs_ah173||0), 0.001); end
  def test_costs_ai173; assert_in_delta(0, (worksheet.costs_ai173||0), 0.001); end
  def test_costs_aj173; assert_in_epsilon(9.625, worksheet.costs_aj173, 0.001); end
  def test_costs_ak173; assert_in_epsilon(45.322725398340424, worksheet.costs_ak173, 0.001); end
  def test_costs_al173; assert_in_epsilon(221.90403433204943, worksheet.costs_al173, 0.001); end
  def test_costs_am173; assert_in_epsilon(246.7147353904642, worksheet.costs_am173, 0.001); end
  def test_costs_an173; assert_in_epsilon(573.3105981110945, worksheet.costs_an173, 0.001); end
  def test_costs_ao173; assert_in_epsilon(922.0024873131248, worksheet.costs_ao173, 0.001); end
  def test_costs_ap173; assert_in_epsilon(1233.360904310541, worksheet.costs_ap173, 0.001); end
  def test_costs_aq173; assert_in_epsilon(1389.1100968993721, worksheet.costs_aq173, 0.001); end
  def test_costs_ar173; assert_in_epsilon(1822.2740839764886, worksheet.costs_ar173, 0.001); end
  def test_costs_c174; assert_equal("Net imports", worksheet.costs_c174); end
  def test_costs_e174; assert_equal("MEUR", worksheet.costs_e174); end
  def test_costs_f174; assert_in_delta(0, (worksheet.costs_f174||0), 0.001); end
  def test_costs_g174; assert_in_delta(0, (worksheet.costs_g174||0), 0.001); end
  def test_costs_h174; assert_in_delta(0, (worksheet.costs_h174||0), 0.001); end
  def test_costs_i174; assert_in_delta(0, (worksheet.costs_i174||0), 0.001); end
  def test_costs_j174; assert_in_delta(0, (worksheet.costs_j174||0), 0.001); end
  def test_costs_k174; assert_in_delta(0, (worksheet.costs_k174||0), 0.001); end
  def test_costs_l174; assert_in_delta(0, (worksheet.costs_l174||0), 0.001); end
  def test_costs_m174; assert_in_delta(0, (worksheet.costs_m174||0), 0.001); end
  def test_costs_n174; assert_in_delta(0, (worksheet.costs_n174||0), 0.001); end
  def test_costs_o174; assert_in_delta(0, (worksheet.costs_o174||0), 0.001); end
  def test_costs_p174; assert_in_delta(0, (worksheet.costs_p174||0), 0.001); end
  def test_costs_q174; assert_in_delta(0, (worksheet.costs_q174||0), 0.001); end
  def test_costs_r174; assert_in_delta(0, (worksheet.costs_r174||0), 0.001); end
  def test_costs_s174; assert_in_delta(0, (worksheet.costs_s174||0), 0.001); end
  def test_costs_t174; assert_in_delta(0, (worksheet.costs_t174||0), 0.001); end
  def test_costs_u174; assert_in_delta(0, (worksheet.costs_u174||0), 0.001); end
  def test_costs_v174; assert_in_delta(0, (worksheet.costs_v174||0), 0.001); end
  def test_costs_w174; assert_in_delta(0, (worksheet.costs_w174||0), 0.001); end
  def test_costs_x174; assert_in_delta(0, (worksheet.costs_x174||0), 0.001); end
  def test_costs_y174; assert_in_delta(0, (worksheet.costs_y174||0), 0.001); end
  def test_costs_z174; assert_in_delta(0, (worksheet.costs_z174||0), 0.001); end
  def test_costs_aa174; assert_in_epsilon(194.90625, worksheet.costs_aa174, 0.001); end
  def test_costs_ab174; assert_in_epsilon(401.625, worksheet.costs_ab174, 0.001); end
  def test_costs_ac174; assert_in_epsilon(630.0000000000001, worksheet.costs_ac174, 0.001); end
  def test_costs_ad174; assert_in_epsilon(876.75, worksheet.costs_ad174, 0.001); end
  def test_costs_ae174; assert_in_epsilon(1082.8125, worksheet.costs_ae174, 0.001); end
  def test_costs_af174; assert_in_epsilon(1283.625, worksheet.costs_af174, 0.001); end
  def test_costs_ag174; assert_in_epsilon(1488.375, worksheet.costs_ag174, 0.001); end
  def test_costs_ah174; assert_in_epsilon(1690.5, worksheet.costs_ah174, 0.001); end
  def test_costs_ai174; assert_in_epsilon(849.84375, worksheet.costs_ai174, 0.001); end
  def test_costs_aj174; assert_in_delta(0, (worksheet.costs_aj174||0), 0.001); end
  def test_costs_ak174; assert_in_epsilon(194.90625, worksheet.costs_ak174, 0.001); end
  def test_costs_al174; assert_in_epsilon(401.625, worksheet.costs_al174, 0.001); end
  def test_costs_am174; assert_in_epsilon(630.0000000000001, worksheet.costs_am174, 0.001); end
  def test_costs_an174; assert_in_epsilon(876.75, worksheet.costs_an174, 0.001); end
  def test_costs_ao174; assert_in_epsilon(1082.8125, worksheet.costs_ao174, 0.001); end
  def test_costs_ap174; assert_in_epsilon(1283.625, worksheet.costs_ap174, 0.001); end
  def test_costs_aq174; assert_in_epsilon(1488.375, worksheet.costs_aq174, 0.001); end
  def test_costs_ar174; assert_in_epsilon(1690.5, worksheet.costs_ar174, 0.001); end
  def test_costs_c175; assert_equal("Grid and balancing implications", worksheet.costs_c175); end
  def test_costs_e175; assert_equal("MEUR", worksheet.costs_e175); end
  def test_costs_p175; assert_in_epsilon(13.01265, worksheet.costs_p175, 0.001); end
  def test_costs_q175; assert_in_epsilon(75.28050785564139, worksheet.costs_q175, 0.001); end
  def test_costs_r175; assert_in_epsilon(135.35212729153767, worksheet.costs_r175, 0.001); end
  def test_costs_s175; assert_in_epsilon(224.96123881011903, worksheet.costs_s175, 0.001); end
  def test_costs_t175; assert_in_epsilon(356.17050658411927, worksheet.costs_t175, 0.001); end
  def test_costs_u175; assert_in_epsilon(503.43521084223005, worksheet.costs_u175, 0.001); end
  def test_costs_v175; assert_in_epsilon(679.106640212286, worksheet.costs_v175, 0.001); end
  def test_costs_w175; assert_in_epsilon(847.6537884086151, worksheet.costs_w175, 0.001); end
  def test_costs_x175; assert_in_epsilon(1132.9116926750692, worksheet.costs_x175, 0.001); end
  def test_costs_y175; assert_in_epsilon(440.8760402977353, worksheet.costs_y175, 0.001); end
  def test_costs_z175; assert_in_delta(0, (worksheet.costs_z175||0), 0.001); end
  def test_costs_aa175; assert_in_epsilon(86.25099861467021, worksheet.costs_aa175, 0.001); end
  def test_costs_ab175; assert_in_epsilon(368.72999460816163, worksheet.costs_ab175, 0.001); end
  def test_costs_ac175; assert_in_epsilon(781.4219104199894, worksheet.costs_ac175, 0.001); end
  def test_costs_ad175; assert_in_epsilon(1410.886673758992, worksheet.costs_ad175, 0.001); end
  def test_costs_ae175; assert_in_epsilon(2138.408524252019, worksheet.costs_ae175, 0.001); end
  def test_costs_af175; assert_in_epsilon(3034.887755786043, worksheet.costs_af175, 0.001); end
  def test_costs_ag175; assert_in_epsilon(3813.6003166270602, worksheet.costs_ag175, 0.001); end
  def test_costs_ah175; assert_in_epsilon(5232.010406602544, worksheet.costs_ah175, 0.001); end
  def test_costs_ai175; assert_in_epsilon(1874.0218422966088, worksheet.costs_ai175, 0.001); end
  def test_costs_aj175; assert_in_epsilon(13.01265, worksheet.costs_aj175, 0.001); end
  def test_costs_ak175; assert_in_epsilon(424.8342418400968, worksheet.costs_ak175, 0.001); end
  def test_costs_al175; assert_in_epsilon(1063.4667573327679, worksheet.costs_al175, 0.001); end
  def test_costs_am175; assert_in_epsilon(1911.8078163584464, worksheet.costs_am175, 0.001); end
  def test_costs_an175; assert_in_epsilon(3081.3016028555817, worksheet.costs_an175, 0.001); end
  def test_costs_ao175; assert_in_epsilon(4219.050598695569, worksheet.costs_ao175, 0.001); end
  def test_costs_ap175; assert_in_epsilon(5581.471347875338, worksheet.costs_ap175, 0.001); end
  def test_costs_aq175; assert_in_epsilon(6687.052484010812, worksheet.costs_aq175, 0.001); end
  def test_costs_ar175; assert_in_epsilon(9325.229131516866, worksheet.costs_ar175, 0.001); end
  def test_costs_c176; assert_equal("Total", worksheet.costs_c176); end
  def test_costs_e176; assert_equal("MEUR", worksheet.costs_e176); end
  def test_costs_f171; assert_in_epsilon(1779.0654589041098, worksheet.costs_f171, 0.001); end
  def test_costs_f175; assert_in_delta(0, (worksheet.costs_f175||0), 0.001); end
  def test_costs_f176; assert_in_epsilon(2948.16545890411, worksheet.costs_f176, 0.001); end
  def test_costs_g171; assert_in_epsilon(1618.6400273972604, worksheet.costs_g171, 0.001); end
  def test_costs_g173; assert_in_epsilon(31.94307213292656, worksheet.costs_g173, 0.001); end
  def test_costs_g175; assert_in_epsilon(263.3027353697852, worksheet.costs_g175, 0.001); end
  def test_costs_g176; assert_in_epsilon(3108.152470855211, worksheet.costs_g176, 0.001); end
  def test_costs_h171; assert_in_epsilon(1717.3333333333333, worksheet.costs_h171, 0.001); end
  def test_costs_h173; assert_in_epsilon(185.72627187818185, worksheet.costs_h173, 0.001); end
  def test_costs_h175; assert_in_epsilon(559.3846354330685, worksheet.costs_h175, 0.001); end
  def test_costs_h176; assert_in_epsilon(3661.6275647785596, worksheet.costs_h176, 0.001); end
  def test_costs_i171; assert_in_epsilon(1763.75, worksheet.costs_i171, 0.001); end
  def test_costs_i173; assert_in_epsilon(188.50469327656378, worksheet.costs_i173, 0.001); end
  def test_costs_i175; assert_in_epsilon(905.424667128338, worksheet.costs_i175, 0.001); end
  def test_costs_i176; assert_in_epsilon(5125.1185732931335, worksheet.costs_i176, 0.001); end
  def test_costs_j171; assert_in_epsilon(1777.5, worksheet.costs_j171, 0.001); end
  def test_costs_j173; assert_in_epsilon(460.18428069700434, worksheet.costs_j173, 0.001); end
  def test_costs_j175; assert_in_epsilon(1314.2444225124702, worksheet.costs_j175, 0.001); end
  def test_costs_j176; assert_in_epsilon(5962.911979115917, worksheet.costs_j176, 0.001); end
  def test_costs_k171; assert_in_epsilon(1910.75, worksheet.costs_k171, 0.001); end
  def test_costs_k173; assert_in_epsilon(721.8149903923857, worksheet.costs_k173, 0.001); end
  def test_costs_k175; assert_in_epsilon(1577.2068636013196, worksheet.costs_k175, 0.001); end
  def test_costs_k176; assert_in_epsilon(7159.909297739916, worksheet.costs_k176, 0.001); end
  def test_costs_l171; assert_in_epsilon(2021, worksheet.costs_l171, 0.001); end
  def test_costs_l173; assert_in_epsilon(925.6471538190549, worksheet.costs_l173, 0.001); end
  def test_costs_l175; assert_in_epsilon(1867.4769518770097, worksheet.costs_l175, 0.001); end
  def test_costs_l176; assert_in_epsilon(8194.302619096909, worksheet.costs_l176, 0.001); end
  def test_costs_m171; assert_in_epsilon(2108.25, worksheet.costs_m171, 0.001); end
  def test_costs_m173; assert_in_epsilon(987.6413038036942, worksheet.costs_m173, 0.001); end
  def test_costs_m175; assert_in_epsilon(2025.7983789751365, worksheet.costs_m175, 0.001); end
  def test_costs_m176; assert_in_epsilon(9419.366099930994, worksheet.costs_m176, 0.001); end
  def test_costs_n171; assert_in_epsilon(2172.5, worksheet.costs_n171, 0.001); end
  def test_costs_n173; assert_in_epsilon(1308.2363916064235, worksheet.costs_n173, 0.001); end
  def test_costs_n175; assert_in_epsilon(2960.3070322392527, worksheet.costs_n175, 0.001); end
  def test_costs_n176; assert_in_epsilon(10650.020134981869, worksheet.costs_n176, 0.001); end
  def test_costs_p176; assert_in_epsilon(806.5569728815229, worksheet.costs_p176, 0.001); end
  def test_costs_q176; assert_in_epsilon(1040.7265279332023, worksheet.costs_q176, 0.001); end
  def test_costs_r176; assert_in_epsilon(1328.514866685664, worksheet.costs_r176, 0.001); end
  def test_costs_s176; assert_in_epsilon(1731.5919935419759, worksheet.costs_s176, 0.001); end
  def test_costs_t176; assert_in_epsilon(2179.633842373102, worksheet.costs_t176, 0.001); end
  def test_costs_u176; assert_in_epsilon(2550.137292184761, worksheet.costs_u176, 0.001); end
  def test_costs_v176; assert_in_epsilon(3057.666724730288, worksheet.costs_v176, 0.001); end
  def test_costs_w176; assert_in_epsilon(3175.016400271707, worksheet.costs_w176, 0.001); end
  def test_costs_x176; assert_in_epsilon(3851.6985253395205, worksheet.costs_x176, 0.001); end
  def test_costs_z176; assert_in_epsilon(2279.313890978453, worksheet.costs_z176, 0.001); end
  def test_costs_aa176; assert_in_epsilon(1161.1791080919306, worksheet.costs_aa176, 0.001); end
  def test_costs_ab176; assert_in_epsilon(1843.9105483097667, worksheet.costs_ab176, 0.001); end
  def test_costs_ac176; assert_in_epsilon(3063.7343887814886, worksheet.costs_ac176, 0.001); end
  def test_costs_ad176; assert_in_epsilon(4623.9963637166165, worksheet.costs_ad176, 0.001); end
  def test_costs_ae176; assert_in_epsilon(5975.146401354879, worksheet.costs_ae176, 0.001); end
  def test_costs_af176; assert_in_epsilon(7634.233199081464, worksheet.costs_af176, 0.001); end
  def test_costs_ag176; assert_in_epsilon(8940.732080309652, worksheet.costs_ag176, 0.001); end
  def test_costs_ah176; assert_in_epsilon(11178.508210937942, worksheet.costs_ah176, 0.001); end
  def test_costs_aj176; assert_in_epsilon(6034.0363227640855, worksheet.costs_aj176, 0.001); end
  def test_costs_ak176; assert_in_epsilon(5310.058106880345, worksheet.costs_ak176, 0.001); end
  def test_costs_al176; assert_in_epsilon(6834.05297977399, worksheet.costs_al176, 0.001); end
  def test_costs_am176; assert_in_epsilon(9920.444955616598, worksheet.costs_am176, 0.001); end
  def test_costs_an176; assert_in_epsilon(12766.542185205637, worksheet.costs_an176, 0.001); end
  def test_costs_ao176; assert_in_epsilon(15685.192991279555, worksheet.costs_ao176, 0.001); end
  def test_costs_ap176; assert_in_epsilon(18886.20254290866, worksheet.costs_ap176, 0.001); end
  def test_costs_aq176; assert_in_epsilon(21535.114580512352, worksheet.costs_aq176, 0.001); end
  def test_costs_ar176; assert_in_epsilon(25680.22687125933, worksheet.costs_ar176, 0.001); end
  def test_costs_c179; assert_equal("Cost of electricity", worksheet.costs_c179); end
  def test_costs_f179; assert_equal("v.02", worksheet.costs_f179); end
  def test_costs_g179; assert_equal("Electricity (supplied to grid)", worksheet.costs_g179); end
  def test_costs_n179; assert_equal("TWh", worksheet.costs_n179); end
  def test_costs_p179; assert_equal("C4.low", worksheet.costs_p179); end
  def test_costs_q179; assert_equal("Low estimate of the COE in that year", worksheet.costs_q179); end
  def test_costs_x179; assert_equal("EUR/MWh", worksheet.costs_x179); end
  def test_costs_z179; assert_equal("C4.high", worksheet.costs_z179); end
  def test_costs_aa179; assert_equal("High estimate of the COE in that year", worksheet.costs_aa179); end
  def test_costs_ah179; assert_equal("EUR/MWh", worksheet.costs_ah179); end
  def test_costs_aj179; assert_equal("Average COE", worksheet.costs_aj179); end
  def test_costs_ar179; assert_equal("EUR/MWh", worksheet.costs_ar179); end
  def test_costs_b180; assert_equal("I.a", worksheet.costs_b180); end
  def test_costs_c180; assert_equal("Biomass and gas power stations", worksheet.costs_c180); end
  def test_costs_f180; assert_in_epsilon(41.46556349214996, worksheet.costs_f180, 0.001); end
  def test_costs_g180; assert_in_epsilon(11.45533021856457, worksheet.costs_g180, 0.001); end
  def test_costs_h180; assert_in_epsilon(13.0676987323912, worksheet.costs_h180, 0.001); end
  def test_costs_i180; assert_in_epsilon(9.298256658264933, worksheet.costs_i180, 0.001); end
  def test_costs_j180; assert_in_epsilon(12.034112594827535, worksheet.costs_j180, 0.001); end
  def test_costs_k180; assert_in_epsilon(13.663321483271472, worksheet.costs_k180, 0.001); end
  def test_costs_l180; assert_in_epsilon(15.285211280281526, worksheet.costs_l180, 0.001); end
  def test_costs_m180; assert_in_epsilon(16.896122440140765, worksheet.costs_m180, 0.001); end
  def test_costs_n180; assert_in_epsilon(18.5070336, worksheet.costs_n180, 0.001); end
  def test_costs_aj180; assert_in_epsilon(89.46063177114505, worksheet.costs_aj180, 0.001); end
  def test_costs_ak180; assert_in_epsilon(184.45887303591613, worksheet.costs_ak180, 0.001); end
  def test_costs_al180; assert_in_epsilon(189.2418316712783, worksheet.costs_al180, 0.001); end
  def test_costs_am180; assert_in_epsilon(193.7827103336689, worksheet.costs_am180, 0.001); end
  def test_costs_an180; assert_in_epsilon(198.1020298492773, worksheet.costs_an180, 0.001); end
  def test_costs_ao180; assert_in_epsilon(197.84440444097274, worksheet.costs_ao180, 0.001); end
  def test_costs_ap180; assert_in_epsilon(197.68514147693546, worksheet.costs_ap180, 0.001); end
  def test_costs_aq180; assert_in_epsilon(197.61942021868066, worksheet.costs_aq180, 0.001); end
  def test_costs_ar180; assert_in_epsilon(197.642656191875, worksheet.costs_ar180, 0.001); end
  def test_costs_as180; assert_equal("PPT", worksheet.costs_as180); end
  def test_costs_at180; assert_equal("Undiscounted", worksheet.costs_at180); end
  def test_costs_bd180; assert_equal("Discounted", worksheet.costs_bd180); end
  def test_costs_b181; assert_equal("I.b", worksheet.costs_b181); end
  def test_costs_c181; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_c181); end
  def test_costs_f181; assert_in_delta(0, (worksheet.costs_f181||0), 0.001); end
  def test_costs_g181; assert_in_delta(0, (worksheet.costs_g181||0), 0.001); end
  def test_costs_h181; assert_in_delta(0, (worksheet.costs_h181||0), 0.001); end
  def test_costs_i181; assert_in_epsilon(4.970602191780821, worksheet.costs_i181, 0.001); end
  def test_costs_j181; assert_in_epsilon(9.997242739726026, worksheet.costs_j181, 0.001); end
  def test_costs_k181; assert_in_epsilon(15.012675616438358, worksheet.costs_k181, 0.001); end
  def test_costs_l181; assert_in_epsilon(20.039316164383557, worksheet.costs_l181, 0.001); end
  def test_costs_m181; assert_in_epsilon(25.077164383561644, worksheet.costs_m181, 0.001); end
  def test_costs_n181; assert_in_epsilon(30.26071232876712, worksheet.costs_n181, 0.001); end
  def test_costs_aj181; assert_in_delta(0, (worksheet.costs_aj181||0), 0.001); end
  def test_costs_ak181; assert_in_delta(0, (worksheet.costs_ak181||0), 0.001); end
  def test_costs_al181; assert_in_delta(0, (worksheet.costs_al181||0), 0.001); end
  def test_costs_am181; assert_in_epsilon(118.98975345649617, worksheet.costs_am181, 0.001); end
  def test_costs_an181; assert_in_epsilon(127.30625554083218, worksheet.costs_an181, 0.001); end
  def test_costs_ao181; assert_in_epsilon(130.94295539463468, worksheet.costs_ao181, 0.001); end
  def test_costs_ap181; assert_in_epsilon(134.65835393445792, worksheet.costs_ap181, 0.001); end
  def test_costs_aq181; assert_in_epsilon(138.45218736582376, worksheet.costs_aq181, 0.001); end
  def test_costs_ar181; assert_in_epsilon(144.5883875875639, worksheet.costs_ar181, 0.001); end
  def test_costs_as181; assert_equal("Fuel", worksheet.costs_as181); end
  def test_costs_z150; assert_in_epsilon(28683.376704203103, worksheet.costs_z150, 0.001); end
  def test_costs_at181; assert_in_epsilon(28683.376704203103, worksheet.costs_at181, 0.001); end
  def test_costs_aa139; assert_in_epsilon(29969.915824323947, worksheet.costs_aa139, 0.001); end
  def test_costs_aa70; assert_in_epsilon(22185.096118123645, worksheet.costs_aa70, 0.001); end
  def test_costs_aa150; assert_in_epsilon(26077.505971223796, worksheet.costs_aa150, 0.001); end
  def test_costs_au181; assert_in_epsilon(26077.505971223796, worksheet.costs_au181, 0.001); end
  def test_costs_ab139; assert_in_epsilon(31135.391067044144, worksheet.costs_ab139, 0.001); end
  def test_costs_ab70; assert_in_epsilon(22972.183266225282, worksheet.costs_ab70, 0.001); end
  def test_costs_ab150; assert_in_epsilon(27053.787166634713, worksheet.costs_ab150, 0.001); end
  def test_costs_av181; assert_in_epsilon(27053.787166634713, worksheet.costs_av181, 0.001); end
  def test_costs_ac139; assert_in_epsilon(31355.67587436367, worksheet.costs_ac139, 0.001); end
  def test_costs_ac70; assert_in_epsilon(23206.541146085343, worksheet.costs_ac70, 0.001); end
  def test_costs_ac150; assert_in_epsilon(27281.108510224505, worksheet.costs_ac150, 0.001); end
  def test_costs_aw181; assert_in_epsilon(27281.108510224505, worksheet.costs_aw181, 0.001); end
  def test_costs_ad139; assert_in_epsilon(32103.584769761856, worksheet.costs_ad139, 0.001); end
  def test_costs_ad70; assert_in_epsilon(23834.26523519258, worksheet.costs_ad70, 0.001); end
  def test_costs_ad150; assert_in_epsilon(27968.92500247722, worksheet.costs_ad150, 0.001); end
  def test_costs_ax181; assert_in_epsilon(27968.92500247722, worksheet.costs_ax181, 0.001); end
  def test_costs_ae139; assert_in_epsilon(31222.197611134783, worksheet.costs_ae139, 0.001); end
  def test_costs_ae70; assert_in_epsilon(23374.336800195088, worksheet.costs_ae70, 0.001); end
  def test_costs_ae150; assert_in_epsilon(27298.267205664935, worksheet.costs_ae150, 0.001); end
  def test_costs_ay181; assert_in_epsilon(27298.267205664935, worksheet.costs_ay181, 0.001); end
  def test_costs_af139; assert_in_epsilon(31027.55938995992, worksheet.costs_af139, 0.001); end
  def test_costs_af70; assert_in_epsilon(23485.241873234518, worksheet.costs_af70, 0.001); end
  def test_costs_af150; assert_in_epsilon(27256.40063159722, worksheet.costs_af150, 0.001); end
  def test_costs_az181; assert_in_epsilon(27256.40063159722, worksheet.costs_az181, 0.001); end
  def test_costs_ag139; assert_in_epsilon(31024.769448625095, worksheet.costs_ag139, 0.001); end
  def test_costs_ag70; assert_in_epsilon(23653.020985104922, worksheet.costs_ag70, 0.001); end
  def test_costs_ag150; assert_in_epsilon(27338.895216865007, worksheet.costs_ag150, 0.001); end
  def test_costs_ba181; assert_in_epsilon(27338.895216865007, worksheet.costs_ba181, 0.001); end
  def test_costs_ah139; assert_in_epsilon(31704.53243509038, worksheet.costs_ah139, 0.001); end
  def test_costs_ah70; assert_in_epsilon(24539.071853541536, worksheet.costs_ah70, 0.001); end
  def test_costs_ah150; assert_in_epsilon(28121.80214431596, worksheet.costs_ah150, 0.001); end
  def test_costs_bb181; assert_in_epsilon(28121.80214431596, worksheet.costs_bb181, 0.001); end
  def test_costs_bn150; assert_in_epsilon(28683.376704203103, worksheet.costs_bn150, 0.001); end
  def test_costs_bd181; assert_in_epsilon(28683.376704203103, worksheet.costs_bd181, 0.001); end
  def test_costs_bo150; assert_in_epsilon(16192.079509735293, worksheet.costs_bo150, 0.001); end
  def test_costs_be181; assert_in_epsilon(16192.079509735293, worksheet.costs_be181, 0.001); end
  def test_costs_bp150; assert_in_epsilon(10430.406095750792, worksheet.costs_bp150, 0.001); end
  def test_costs_bf181; assert_in_epsilon(10430.406095750792, worksheet.costs_bf181, 0.001); end
  def test_costs_bq150; assert_in_epsilon(6530.880475325169, worksheet.costs_bq150, 0.001); end
  def test_costs_bg181; assert_in_epsilon(6530.880475325169, worksheet.costs_bg181, 0.001); end
  def test_costs_br150; assert_in_epsilon(4157.402484303389, worksheet.costs_br150, 0.001); end
  def test_costs_bh181; assert_in_epsilon(4157.402484303389, worksheet.costs_bh181, 0.001); end
  def test_costs_bs150; assert_in_epsilon(2519.520820251058, worksheet.costs_bs150, 0.001); end
  def test_costs_bi181; assert_in_epsilon(2519.520820251058, worksheet.costs_bi181, 0.001); end
  def test_costs_bt150; assert_in_epsilon(1562.0248883938773, worksheet.costs_bt150, 0.001); end
  def test_costs_bj181; assert_in_epsilon(1562.0248883938773, worksheet.costs_bj181, 0.001); end
  def test_costs_bu150; assert_in_epsilon(972.8300561503833, worksheet.costs_bu150, 0.001); end
  def test_costs_bk181; assert_in_epsilon(972.8300561503833, worksheet.costs_bk181, 0.001); end
  def test_costs_bv150; assert_in_epsilon(621.3491978884807, worksheet.costs_bv150, 0.001); end
  def test_costs_bl181; assert_in_epsilon(621.3491978884807, worksheet.costs_bl181, 0.001); end
  def test_costs_b182; assert_equal("II.a", worksheet.costs_b182); end
  def test_costs_c182; assert_equal("Nuclear power", worksheet.costs_c182); end
  def test_costs_f182; assert_in_epsilon(47.89199784599999, worksheet.costs_f182, 0.001); end
  def test_costs_g182; assert_in_epsilon(47.89199784599999, worksheet.costs_g182, 0.001); end
  def test_costs_h182; assert_in_epsilon(47.89199784599999, worksheet.costs_h182, 0.001); end
  def test_costs_i182; assert_in_epsilon(56.11450584599999, worksheet.costs_i182, 0.001); end
  def test_costs_j182; assert_in_epsilon(64.337013846, worksheet.costs_j182, 0.001); end
  def test_costs_k182; assert_in_epsilon(57.861788796, worksheet.costs_k182, 0.001); end
  def test_costs_l182; assert_in_epsilon(66.08429679599999, worksheet.costs_l182, 0.001); end
  def test_costs_m182; assert_in_epsilon(41.112539999999996, worksheet.costs_m182, 0.001); end
  def test_costs_n182; assert_in_epsilon(49.335048, worksheet.costs_n182, 0.001); end
  def test_costs_aj182; assert_in_epsilon(31.046395657489356, worksheet.costs_aj182, 0.001); end
  def test_costs_ak182; assert_in_epsilon(31.046395657489356, worksheet.costs_ak182, 0.001); end
  def test_costs_al182; assert_in_epsilon(31.046395657489356, worksheet.costs_al182, 0.001); end
  def test_costs_am182; assert_in_epsilon(36.523240539970516, worksheet.costs_am182, 0.001); end
  def test_costs_an182; assert_in_epsilon(40.60016341274341, worksheet.costs_an182, 0.001); end
  def test_costs_ao182; assert_in_epsilon(46.813374261330324, worksheet.costs_ao182, 0.001); end
  def test_costs_ap182; assert_in_epsilon(49.269468874073354, worksheet.costs_ap182, 0.001); end
  def test_costs_aq182; assert_in_epsilon(67.38488111630167, worksheet.costs_aq182, 0.001); end
  def test_costs_ar182; assert_in_epsilon(67.03880030240822, worksheet.costs_ar182, 0.001); end
  def test_costs_as182; assert_equal("O&M", worksheet.costs_as182); end
  def test_costs_p150; assert_in_epsilon(8980.927665038014, worksheet.costs_p150, 0.001); end
  def test_costs_at182; assert_in_epsilon(8980.927665038014, worksheet.costs_at182, 0.001); end
  def test_costs_q139; assert_in_epsilon(11374.127982921193, worksheet.costs_q139, 0.001); end
  def test_costs_q70; assert_in_epsilon(8901.814207747331, worksheet.costs_q70, 0.001); end
  def test_costs_q150; assert_in_epsilon(10137.971095334262, worksheet.costs_q150, 0.001); end
  def test_costs_au182; assert_in_epsilon(10137.971095334262, worksheet.costs_au182, 0.001); end
  def test_costs_r139; assert_in_epsilon(13354.894491503752, worksheet.costs_r139, 0.001); end
  def test_costs_r70; assert_in_epsilon(9228.166003276281, worksheet.costs_r70, 0.001); end
  def test_costs_r150; assert_in_epsilon(11291.530247390016, worksheet.costs_r150, 0.001); end
  def test_costs_av182; assert_in_epsilon(11291.530247390016, worksheet.costs_av182, 0.001); end
  def test_costs_s139; assert_in_epsilon(15101.252510748713, worksheet.costs_s139, 0.001); end
  def test_costs_s70; assert_in_epsilon(9176.38881549911, worksheet.costs_s70, 0.001); end
  def test_costs_s150; assert_in_epsilon(12138.820663123912, worksheet.costs_s150, 0.001); end
  def test_costs_aw182; assert_in_epsilon(12138.820663123912, worksheet.costs_aw182, 0.001); end
  def test_costs_t139; assert_in_epsilon(16694.685194021607, worksheet.costs_t139, 0.001); end
  def test_costs_t70; assert_in_epsilon(8890.325616286782, worksheet.costs_t70, 0.001); end
  def test_costs_t150; assert_in_epsilon(12792.505405154196, worksheet.costs_t150, 0.001); end
  def test_costs_ax182; assert_in_epsilon(12792.505405154196, worksheet.costs_ax182, 0.001); end
  def test_costs_u139; assert_in_epsilon(17884.367331570436, worksheet.costs_u139, 0.001); end
  def test_costs_u70; assert_in_epsilon(8302.440129933024, worksheet.costs_u70, 0.001); end
  def test_costs_u150; assert_in_epsilon(13093.40373075173, worksheet.costs_u150, 0.001); end
  def test_costs_ay182; assert_in_epsilon(13093.40373075173, worksheet.costs_ay182, 0.001); end
  def test_costs_v139; assert_in_epsilon(19084.549960666507, worksheet.costs_v139, 0.001); end
  def test_costs_v70; assert_in_epsilon(7709.49225328215, worksheet.costs_v70, 0.001); end
  def test_costs_v150; assert_in_epsilon(13397.021106974329, worksheet.costs_v150, 0.001); end
  def test_costs_az182; assert_in_epsilon(13397.021106974329, worksheet.costs_az182, 0.001); end
  def test_costs_w139; assert_in_epsilon(19665.884752978556, worksheet.costs_w139, 0.001); end
  def test_costs_w70; assert_in_epsilon(6654.696978565111, worksheet.costs_w70, 0.001); end
  def test_costs_w150; assert_in_epsilon(13160.290865771833, worksheet.costs_w150, 0.001); end
  def test_costs_ba182; assert_in_epsilon(13160.290865771833, worksheet.costs_ba182, 0.001); end
  def test_costs_x139; assert_in_epsilon(20737.249120415414, worksheet.costs_x139, 0.001); end
  def test_costs_x70; assert_in_epsilon(6052.108779939273, worksheet.costs_x70, 0.001); end
  def test_costs_x150; assert_in_epsilon(13394.678950177344, worksheet.costs_x150, 0.001); end
  def test_costs_bb182; assert_in_epsilon(13394.678950177344, worksheet.costs_bb182, 0.001); end
  def test_costs_bd150; assert_in_epsilon(8980.927665038014, worksheet.costs_bd150, 0.001); end
  def test_costs_bd182; assert_in_epsilon(8980.927665038014, worksheet.costs_bd182, 0.001); end
  def test_costs_be150; assert_in_epsilon(6294.8824256504195, worksheet.costs_be150, 0.001); end
  def test_costs_be182; assert_in_epsilon(6294.8824256504195, worksheet.costs_be182, 0.001); end
  def test_costs_bf150; assert_in_epsilon(4353.373714271798, worksheet.costs_bf150, 0.001); end
  def test_costs_bf182; assert_in_epsilon(4353.373714271798, worksheet.costs_bf182, 0.001); end
  def test_costs_bg150; assert_in_epsilon(2905.93715546998, worksheet.costs_bg150, 0.001); end
  def test_costs_bg182; assert_in_epsilon(2905.93715546998, worksheet.costs_bg182, 0.001); end
  def test_costs_bh150; assert_in_epsilon(1901.5244149405848, worksheet.costs_bh150, 0.001); end
  def test_costs_bh182; assert_in_epsilon(1901.5244149405848, worksheet.costs_bh182, 0.001); end
  def test_costs_bi150; assert_in_epsilon(1208.4687668650254, worksheet.costs_bi150, 0.001); end
  def test_costs_bi182; assert_in_epsilon(1208.4687668650254, worksheet.costs_bi182, 0.001); end
  def test_costs_bj150; assert_in_epsilon(767.7638981859106, worksheet.costs_bj150, 0.001); end
  def test_costs_bj182; assert_in_epsilon(767.7638981859106, worksheet.costs_bj182, 0.001); end
  def test_costs_bk150; assert_in_epsilon(468.2971422344219, worksheet.costs_bk150, 0.001); end
  def test_costs_bk182; assert_in_epsilon(468.2971422344219, worksheet.costs_bk182, 0.001); end
  def test_costs_bl150; assert_in_epsilon(295.9544690256854, worksheet.costs_bl150, 0.001); end
  def test_costs_bl182; assert_in_epsilon(295.9544690256854, worksheet.costs_bl182, 0.001); end
  def test_costs_b183; assert_equal("III.a.1", worksheet.costs_b183); end
  def test_costs_c183; assert_equal("Onshore wind", worksheet.costs_c183); end
  def test_costs_f183; assert_in_epsilon(1.2988890410958904, worksheet.costs_f183, 0.001); end
  def test_costs_g183; assert_in_epsilon(4.687254208123038, worksheet.costs_g183, 0.001); end
  def test_costs_h183; assert_in_epsilon(8.16054811905395, worksheet.costs_h183, 0.001); end
  def test_costs_i183; assert_in_epsilon(12.262733044189225, worksheet.costs_i183, 0.001); end
  def test_costs_j183; assert_in_epsilon(17.045257777528477, worksheet.costs_j183, 0.001); end
  def test_costs_k183; assert_in_epsilon(21.822424154255664, worksheet.costs_k183, 0.001); end
  def test_costs_l183; assert_in_epsilon(24.439193804676805, worksheet.costs_l183, 0.001); end
  def test_costs_m183; assert_in_epsilon(27.718905405030515, worksheet.costs_m183, 0.001); end
  def test_costs_n183; assert_in_epsilon(31.108050666324726, worksheet.costs_n183, 0.001); end
  def test_costs_p183; assert_in_epsilon(81.79275813357917, worksheet.costs_p183, 0.001); end
  def test_costs_q183; assert_in_epsilon(74.56428204943356, worksheet.costs_q183, 0.001); end
  def test_costs_r183; assert_in_epsilon(67.50258015498164, worksheet.costs_r183, 0.001); end
  def test_costs_s183; assert_in_epsilon(60.60462685291873, worksheet.costs_s183, 0.001); end
  def test_costs_t183; assert_in_epsilon(53.867445950558285, worksheet.costs_t183, 0.001); end
  def test_costs_u183; assert_in_epsilon(50.98249348556222, worksheet.costs_u183, 0.001); end
  def test_costs_v183; assert_in_epsilon(48.16083530594351, worksheet.costs_v183, 0.001); end
  def test_costs_w183; assert_in_epsilon(45.40134492988689, worksheet.costs_w183, 0.001); end
  def test_costs_x183; assert_in_epsilon(42.70291408483614, worksheet.costs_x183, 0.001); end
  def test_costs_z183; assert_in_epsilon(97.52213469772902, worksheet.costs_z183, 0.001); end
  def test_costs_aa183; assert_in_epsilon(90.87521874774716, worksheet.costs_aa183, 0.001); end
  def test_costs_ab183; assert_in_epsilon(84.37822519372705, worksheet.costs_ab183, 0.001); end
  def test_costs_ac183; assert_in_epsilon(78.02845707313288, worksheet.costs_ac183, 0.001); end
  def test_costs_ad183; assert_in_epsilon(71.82326126741106, worksheet.costs_ad183, 0.001); end
  def test_costs_ae183; assert_in_epsilon(67.23778126356758, worksheet.costs_ae183, 0.001); end
  def test_costs_af183; assert_in_epsilon(62.75502782289609, worksheet.costs_af183, 0.001); end
  def test_costs_ag183; assert_in_epsilon(58.373157766997416, worksheet.costs_ag183, 0.001); end
  def test_costs_ah183; assert_in_epsilon(54.09035784079245, worksheet.costs_ah183, 0.001); end
  def test_costs_aj183; assert_in_epsilon(89.65744641565409, worksheet.costs_aj183, 0.001); end
  def test_costs_ak183; assert_in_epsilon(82.71975039859035, worksheet.costs_ak183, 0.001); end
  def test_costs_al183; assert_in_epsilon(75.94040267435435, worksheet.costs_al183, 0.001); end
  def test_costs_am183; assert_in_epsilon(69.3165419630258, worksheet.costs_am183, 0.001); end
  def test_costs_an183; assert_in_epsilon(62.84535360898467, worksheet.costs_an183, 0.001); end
  def test_costs_ao183; assert_in_epsilon(59.1101373745649, worksheet.costs_ao183, 0.001); end
  def test_costs_ap183; assert_in_epsilon(55.457931564419795, worksheet.costs_ap183, 0.001); end
  def test_costs_aq183; assert_in_epsilon(51.88725134844215, worksheet.costs_aq183, 0.001); end
  def test_costs_ar183; assert_in_epsilon(48.396635962814294, worksheet.costs_ar183, 0.001); end
  def test_costs_as183; assert_equal("Investment", worksheet.costs_as183); end
  def test_costs_f150; assert_in_epsilon(40263.20086617446, worksheet.costs_f150, 0.001); end
  def test_costs_at183; assert_in_epsilon(40263.20086617446, worksheet.costs_at183, 0.001); end
  def test_costs_g139; assert_in_epsilon(50164.88645294413, worksheet.costs_g139, 0.001); end
  def test_costs_g70; assert_in_epsilon(35850.52567456203, worksheet.costs_g70, 0.001); end
  def test_costs_g150; assert_in_epsilon(43007.70606375308, worksheet.costs_g150, 0.001); end
  def test_costs_au183; assert_in_epsilon(43007.70606375308, worksheet.costs_au183, 0.001); end
  def test_costs_h139; assert_in_epsilon(73680.13592617176, worksheet.costs_h139, 0.001); end
  def test_costs_h70; assert_in_epsilon(53558.087788075005, worksheet.costs_h70, 0.001); end
  def test_costs_h150; assert_in_epsilon(63619.11185712338, worksheet.costs_h150, 0.001); end
  def test_costs_av183; assert_in_epsilon(63619.11185712338, worksheet.costs_av183, 0.001); end
  def test_costs_i139; assert_in_epsilon(64214.01905482399, worksheet.costs_i139, 0.001); end
  def test_costs_i70; assert_in_epsilon(45922.81180278138, worksheet.costs_i70, 0.001); end
  def test_costs_i150; assert_in_epsilon(55068.41542880269, worksheet.costs_i150, 0.001); end
  def test_costs_aw183; assert_in_epsilon(55068.41542880269, worksheet.costs_aw183, 0.001); end
  def test_costs_j139; assert_in_epsilon(67972.95674537313, worksheet.costs_j139, 0.001); end
  def test_costs_j70; assert_in_epsilon(47769.62859927728, worksheet.costs_j70, 0.001); end
  def test_costs_j150; assert_in_epsilon(57871.2926723252, worksheet.costs_j150, 0.001); end
  def test_costs_ax183; assert_in_epsilon(57871.2926723252, worksheet.costs_ax183, 0.001); end
  def test_costs_k139; assert_in_epsilon(66969.43009633385, worksheet.costs_k139, 0.001); end
  def test_costs_k70; assert_in_epsilon(46357.610540614296, worksheet.costs_k70, 0.001); end
  def test_costs_k150; assert_in_epsilon(56663.52031847407, worksheet.costs_k150, 0.001); end
  def test_costs_ay183; assert_in_epsilon(56663.52031847407, worksheet.costs_ay183, 0.001); end
  def test_costs_l139; assert_in_epsilon(69680.89782638375, worksheet.costs_l139, 0.001); end
  def test_costs_l70; assert_in_epsilon(47640.09200583793, worksheet.costs_l70, 0.001); end
  def test_costs_l150; assert_in_epsilon(58660.49491611084, worksheet.costs_l150, 0.001); end
  def test_costs_az183; assert_in_epsilon(58660.49491611084, worksheet.costs_az183, 0.001); end
  def test_costs_m139; assert_in_epsilon(70987.01954125751, worksheet.costs_m139, 0.001); end
  def test_costs_m70; assert_in_epsilon(47847.65360046769, worksheet.costs_m70, 0.001); end
  def test_costs_m150; assert_in_epsilon(59417.3365708626, worksheet.costs_m150, 0.001); end
  def test_costs_ba183; assert_in_epsilon(59417.3365708626, worksheet.costs_ba183, 0.001); end
  def test_costs_n139; assert_in_epsilon(74680.50024485488, worksheet.costs_n139, 0.001); end
  def test_costs_n70; assert_in_epsilon(50106.0812889562, worksheet.costs_n70, 0.001); end
  def test_costs_n150; assert_in_epsilon(62393.29076690554, worksheet.costs_n150, 0.001); end
  def test_costs_bb183; assert_in_epsilon(62393.29076690554, worksheet.costs_bb183, 0.001); end
  def test_costs_at150; assert_in_epsilon(40263.20086617446, worksheet.costs_at150, 0.001); end
  def test_costs_bd183; assert_in_epsilon(40263.20086617446, worksheet.costs_bd183, 0.001); end
  def test_costs_au150; assert_in_epsilon(26704.4017508448, worksheet.costs_au150, 0.001); end
  def test_costs_be183; assert_in_epsilon(26704.4017508448, worksheet.costs_be183, 0.001); end
  def test_costs_av150; assert_in_epsilon(24527.92165598066, worksheet.costs_av150, 0.001); end
  def test_costs_bf183; assert_in_epsilon(24527.92165598066, worksheet.costs_bf183, 0.001); end
  def test_costs_aw150; assert_in_epsilon(13182.940825013531, worksheet.costs_aw150, 0.001); end
  def test_costs_bg183; assert_in_epsilon(13182.940825013531, worksheet.costs_bg183, 0.001); end
  def test_costs_ax150; assert_in_epsilon(8602.198901261447, worksheet.costs_ax150, 0.001); end
  def test_costs_bh183; assert_in_epsilon(8602.198901261447, worksheet.costs_bh183, 0.001); end
  def test_costs_ay150; assert_in_epsilon(5229.816168019915, worksheet.costs_ay150, 0.001); end
  def test_costs_bi183; assert_in_epsilon(5229.816168019915, worksheet.costs_bi183, 0.001); end
  def test_costs_az150; assert_in_epsilon(3361.74809957283, worksheet.costs_az150, 0.001); end
  def test_costs_bj183; assert_in_epsilon(3361.74809957283, worksheet.costs_bj183, 0.001); end
  def test_costs_ba150; assert_in_epsilon(2114.3126089777243, worksheet.costs_ba150, 0.001); end
  def test_costs_bk183; assert_in_epsilon(2114.3126089777243, worksheet.costs_bk183, 0.001); end
  def test_costs_bb150; assert_in_epsilon(1378.5752766728497, worksheet.costs_bb150, 0.001); end
  def test_costs_bl183; assert_in_epsilon(1378.5752766728497, worksheet.costs_bl183, 0.001); end
  def test_costs_b184; assert_equal("III.a.2", worksheet.costs_b184); end
  def test_costs_c184; assert_equal("Offshore wind", worksheet.costs_c184); end
  def test_costs_f184; assert_in_delta(0.6258924000000001, worksheet.costs_f184, 0.001); end
  def test_costs_g184; assert_in_epsilon(6.232998555, worksheet.costs_g184, 0.001); end
  def test_costs_h184; assert_in_epsilon(12.497221602000002, worksheet.costs_h184, 0.001); end
  def test_costs_i184; assert_in_epsilon(21.07848984, worksheet.costs_i184, 0.001); end
  def test_costs_j184; assert_in_epsilon(32.082826577999995, worksheet.costs_j184, 0.001); end
  def test_costs_k184; assert_in_epsilon(44.210356739999995, worksheet.costs_k184, 0.001); end
  def test_costs_l184; assert_in_epsilon(50.042398455, worksheet.costs_l184, 0.001); end
  def test_costs_m184; assert_in_epsilon(57.45232017000001, worksheet.costs_m184, 0.001); end
  def test_costs_n184; assert_in_epsilon(65.11161267, worksheet.costs_n184, 0.001); end
  def test_costs_p184; assert_in_epsilon(167.30682566219005, worksheet.costs_p184, 0.001); end
  def test_costs_q184; assert_in_epsilon(142.21080181286155, worksheet.costs_q184, 0.001); end
  def test_costs_r184; assert_in_epsilon(115.3060555239418, worksheet.costs_r184, 0.001); end
  def test_costs_s184; assert_in_epsilon(88.88175113303845, worksheet.costs_s184, 0.001); end
  def test_costs_t184; assert_in_epsilon(66.14455898272631, worksheet.costs_t184, 0.001); end
  def test_costs_u184; assert_in_epsilon(60.13234521099392, worksheet.costs_u184, 0.001); end
  def test_costs_v184; assert_in_epsilon(57.05988961627161, worksheet.costs_v184, 0.001); end
  def test_costs_w184; assert_in_epsilon(53.987434021549305, worksheet.costs_w184, 0.001); end
  def test_costs_x184; assert_in_epsilon(50.91497842682698, worksheet.costs_x184, 0.001); end
  def test_costs_z184; assert_in_epsilon(176.60164931008953, worksheet.costs_z184, 0.001); end
  def test_costs_aa184; assert_in_epsilon(159.14065917153556, worksheet.costs_aa184, 0.001); end
  def test_costs_ab184; assert_in_epsilon(138.79432609363366, worksheet.costs_ab184, 0.001); end
  def test_costs_ac184; assert_in_epsilon(117.52142649812863, worksheet.costs_ac184, 0.001); end
  def test_costs_ad184; assert_in_epsilon(99.21683847408946, worksheet.costs_ad184, 0.001); end
  def test_costs_ae184; assert_in_epsilon(89.97905670258217, worksheet.costs_ae184, 0.001); end
  def test_costs_af184; assert_in_epsilon(85.15091219658994, worksheet.costs_af184, 0.001); end
  def test_costs_ag184; assert_in_epsilon(80.32276769059773, worksheet.costs_ag184, 0.001); end
  def test_costs_ah184; assert_in_epsilon(75.49462318460552, worksheet.costs_ah184, 0.001); end
  def test_costs_aj184; assert_in_epsilon(171.9542374861398, worksheet.costs_aj184, 0.001); end
  def test_costs_ak184; assert_in_epsilon(150.67573049219857, worksheet.costs_ak184, 0.001); end
  def test_costs_al184; assert_in_epsilon(127.05019080878773, worksheet.costs_al184, 0.001); end
  def test_costs_am184; assert_in_epsilon(103.20158881558353, worksheet.costs_am184, 0.001); end
  def test_costs_an184; assert_in_epsilon(82.68069872840789, worksheet.costs_an184, 0.001); end
  def test_costs_ao184; assert_in_epsilon(75.05570095678804, worksheet.costs_ao184, 0.001); end
  def test_costs_ap184; assert_in_epsilon(71.10540090643077, worksheet.costs_ap184, 0.001); end
  def test_costs_aq184; assert_in_epsilon(67.15510085607352, worksheet.costs_aq184, 0.001); end
  def test_costs_ar184; assert_in_epsilon(63.204800805716246, worksheet.costs_ar184, 0.001); end
  def test_costs_b185; assert_equal("III.b", worksheet.costs_b185); end
  def test_costs_c185; assert_equal("Hydroelectric power stations", worksheet.costs_c185); end
  def test_costs_f185; assert_in_delta(0.3760614, worksheet.costs_f185, 0.001); end
  def test_costs_g185; assert_in_delta(0.40071577500000005, worksheet.costs_g185, 0.001); end
  def test_costs_h185; assert_in_delta(0.42602760000000006, worksheet.costs_h185, 0.001); end
  def test_costs_i185; assert_in_delta(0.4519968750000001, worksheet.costs_i185, 0.001); end
  def test_costs_j185; assert_in_delta(0.4786236000000001, worksheet.costs_j185, 0.001); end
  def test_costs_k185; assert_in_delta(0.5059077750000001, worksheet.costs_k185, 0.001); end
  def test_costs_l185; assert_in_delta(0.5338494000000001, worksheet.costs_l185, 0.001); end
  def test_costs_m185; assert_in_delta(0.5624484750000001, worksheet.costs_m185, 0.001); end
  def test_costs_n185; assert_in_delta(0.591705, worksheet.costs_n185, 0.001); end
  def test_costs_p185; assert_in_epsilon(111.22344488173982, worksheet.costs_p185, 0.001); end
  def test_costs_q185; assert_in_epsilon(106.42391224187716, worksheet.costs_q185, 0.001); end
  def test_costs_r185; assert_in_epsilon(101.86775461038619, worksheet.costs_r185, 0.001); end
  def test_costs_s185; assert_in_epsilon(97.54010247315694, worksheet.costs_s185, 0.001); end
  def test_costs_t185; assert_in_epsilon(93.42718718567754, worksheet.costs_t185, 0.001); end
  def test_costs_u185; assert_in_epsilon(89.51624346296312, worksheet.costs_u185, 0.001); end
  def test_costs_v185; assert_in_epsilon(85.79542197966057, worksheet.costs_v185, 0.001); end
  def test_costs_w185; assert_in_epsilon(82.2537108802591, worksheet.costs_w185, 0.001); end
  def test_costs_x185; assert_in_epsilon(78.88086515935959, worksheet.costs_x185, 0.001); end
  def test_costs_z185; assert_in_epsilon(148.29792650898642, worksheet.costs_z185, 0.001); end
  def test_costs_aa185; assert_in_epsilon(141.89854965583623, worksheet.costs_aa185, 0.001); end
  def test_costs_ab185; assert_in_epsilon(135.82367281384828, worksheet.costs_ab185, 0.001); end
  def test_costs_ac185; assert_in_epsilon(130.05346996420928, worksheet.costs_ac185, 0.001); end
  def test_costs_ad185; assert_in_epsilon(124.56958291423675, worksheet.costs_ad185, 0.001); end
  def test_costs_ae185; assert_in_epsilon(119.35499128395085, worksheet.costs_ae185, 0.001); end
  def test_costs_af185; assert_in_epsilon(114.39389597288078, worksheet.costs_af185, 0.001); end
  def test_costs_ag185; assert_in_epsilon(109.67161450701214, worksheet.costs_ag185, 0.001); end
  def test_costs_ah185; assert_in_epsilon(105.1744868791461, worksheet.costs_ah185, 0.001); end
  def test_costs_aj185; assert_in_epsilon(129.76068569536312, worksheet.costs_aj185, 0.001); end
  def test_costs_ak185; assert_in_epsilon(124.1612309488567, worksheet.costs_ak185, 0.001); end
  def test_costs_al185; assert_in_epsilon(118.84571371211723, worksheet.costs_al185, 0.001); end
  def test_costs_am185; assert_in_epsilon(113.79678621868311, worksheet.costs_am185, 0.001); end
  def test_costs_an185; assert_in_epsilon(108.99838504995714, worksheet.costs_an185, 0.001); end
  def test_costs_ao185; assert_in_epsilon(104.43561737345698, worksheet.costs_ao185, 0.001); end
  def test_costs_ap185; assert_in_epsilon(100.09465897627068, worksheet.costs_ap185, 0.001); end
  def test_costs_aq185; assert_in_epsilon(95.96266269363562, worksheet.costs_aq185, 0.001); end
  def test_costs_ar185; assert_in_epsilon(92.02767601925285, worksheet.costs_ar185, 0.001); end
  def test_costs_b186; assert_equal("III.c", worksheet.costs_b186); end
  def test_costs_c186; assert_equal("Tidal and Wave [UNUSED]", worksheet.costs_c186); end
  def test_costs_f186; assert_in_delta(0, (worksheet.costs_f186||0), 0.001); end
  def test_costs_g186; assert_in_delta(0, (worksheet.costs_g186||0), 0.001); end
  def test_costs_h186; assert_in_delta(0, (worksheet.costs_h186||0), 0.001); end
  def test_costs_i186; assert_in_delta(0, (worksheet.costs_i186||0), 0.001); end
  def test_costs_j186; assert_in_delta(0, (worksheet.costs_j186||0), 0.001); end
  def test_costs_k186; assert_in_delta(0, (worksheet.costs_k186||0), 0.001); end
  def test_costs_l186; assert_in_delta(0, (worksheet.costs_l186||0), 0.001); end
  def test_costs_m186; assert_in_delta(0, (worksheet.costs_m186||0), 0.001); end
  def test_costs_n186; assert_in_delta(0, (worksheet.costs_n186||0), 0.001); end
  def test_costs_p186; assert_in_delta(0, (worksheet.costs_p186||0), 0.001); end
  def test_costs_q186; assert_in_delta(0, (worksheet.costs_q186||0), 0.001); end
  def test_costs_r186; assert_in_delta(0, (worksheet.costs_r186||0), 0.001); end
  def test_costs_s186; assert_in_delta(0, (worksheet.costs_s186||0), 0.001); end
  def test_costs_t186; assert_in_delta(0, (worksheet.costs_t186||0), 0.001); end
  def test_costs_u186; assert_in_delta(0, (worksheet.costs_u186||0), 0.001); end
  def test_costs_v186; assert_in_delta(0, (worksheet.costs_v186||0), 0.001); end
  def test_costs_w186; assert_in_delta(0, (worksheet.costs_w186||0), 0.001); end
  def test_costs_x186; assert_in_delta(0, (worksheet.costs_x186||0), 0.001); end
  def test_costs_z186; assert_in_delta(0, (worksheet.costs_z186||0), 0.001); end
  def test_costs_aa186; assert_in_delta(0, (worksheet.costs_aa186||0), 0.001); end
  def test_costs_ab186; assert_in_delta(0, (worksheet.costs_ab186||0), 0.001); end
  def test_costs_ac186; assert_in_delta(0, (worksheet.costs_ac186||0), 0.001); end
  def test_costs_ad186; assert_in_delta(0, (worksheet.costs_ad186||0), 0.001); end
  def test_costs_ae186; assert_in_delta(0, (worksheet.costs_ae186||0), 0.001); end
  def test_costs_af186; assert_in_delta(0, (worksheet.costs_af186||0), 0.001); end
  def test_costs_ag186; assert_in_delta(0, (worksheet.costs_ag186||0), 0.001); end
  def test_costs_ah186; assert_in_delta(0, (worksheet.costs_ah186||0), 0.001); end
  def test_costs_aj186; assert_in_delta(0, (worksheet.costs_aj186||0), 0.001); end
  def test_costs_ak186; assert_in_delta(0, (worksheet.costs_ak186||0), 0.001); end
  def test_costs_al186; assert_in_delta(0, (worksheet.costs_al186||0), 0.001); end
  def test_costs_am186; assert_in_delta(0, (worksheet.costs_am186||0), 0.001); end
  def test_costs_an186; assert_in_delta(0, (worksheet.costs_an186||0), 0.001); end
  def test_costs_ao186; assert_in_delta(0, (worksheet.costs_ao186||0), 0.001); end
  def test_costs_ap186; assert_in_delta(0, (worksheet.costs_ap186||0), 0.001); end
  def test_costs_aq186; assert_in_delta(0, (worksheet.costs_aq186||0), 0.001); end
  def test_costs_ar186; assert_in_delta(0, (worksheet.costs_ar186||0), 0.001); end
  def test_costs_b187; assert_equal("III.d", worksheet.costs_b187); end
  def test_costs_c187; assert_equal("Geothermal electricity", worksheet.costs_c187); end
  def test_costs_f187; assert_in_delta(0, (worksheet.costs_f187||0), 0.001); end
  def test_costs_g187; assert_in_delta(0.372555, worksheet.costs_g187, 0.001); end
  def test_costs_h187; assert_in_epsilon(2.23533, worksheet.costs_h187, 0.001); end
  def test_costs_i187; assert_in_epsilon(4.268488287671233, worksheet.costs_i187, 0.001); end
  def test_costs_j187; assert_in_epsilon(9.282086575342465, worksheet.costs_j187, 0.001); end
  def test_costs_k187; assert_in_epsilon(17.276124863013703, worksheet.costs_k187, 0.001); end
  def test_costs_l187; assert_in_epsilon(27.505493150684938, worksheet.costs_l187, 0.001); end
  def test_costs_m187; assert_in_epsilon(36.989751438356166, worksheet.costs_m187, 0.001); end
  def test_costs_n187; assert_in_epsilon(48.7093397260274, worksheet.costs_n187, 0.001); end
  def test_costs_aj187; assert_in_delta(0, (worksheet.costs_aj187||0), 0.001); end
  def test_costs_ak187; assert_in_epsilon(56.397729544110334, worksheet.costs_ak187, 0.001); end
  def test_costs_al187; assert_in_epsilon(69.03303527567859, worksheet.costs_al187, 0.001); end
  def test_costs_am187; assert_in_epsilon(66.3433547884933, worksheet.costs_am187, 0.001); end
  def test_costs_an187; assert_in_epsilon(65.27485459197743, worksheet.costs_an187, 0.001); end
  def test_costs_ao187; assert_in_epsilon(64.71686392828224, worksheet.costs_ao187, 0.001); end
  def test_costs_ap187; assert_in_epsilon(63.65554118538364, worksheet.costs_ap187, 0.001); end
  def test_costs_aq187; assert_in_epsilon(62.250567888310584, worksheet.costs_aq187, 0.001); end
  def test_costs_ar187; assert_in_epsilon(60.87753837006041, worksheet.costs_ar187, 0.001); end
  def test_costs_at187; assert_equal("Undiscounted", worksheet.costs_at187); end
  def test_costs_au187; assert_equal("Discounted", worksheet.costs_au187); end
  def test_costs_b188; assert_equal("III.e", worksheet.costs_b188); end
  def test_costs_c188; assert_equal("Tidal [UNUSED]", worksheet.costs_c188); end
  def test_costs_f188; assert_in_delta(0, (worksheet.costs_f188||0), 0.001); end
  def test_costs_g188; assert_in_delta(0, (worksheet.costs_g188||0), 0.001); end
  def test_costs_h188; assert_in_delta(0, (worksheet.costs_h188||0), 0.001); end
  def test_costs_i188; assert_in_delta(0, (worksheet.costs_i188||0), 0.001); end
  def test_costs_j188; assert_in_delta(0, (worksheet.costs_j188||0), 0.001); end
  def test_costs_k188; assert_in_delta(0, (worksheet.costs_k188||0), 0.001); end
  def test_costs_l188; assert_in_delta(0, (worksheet.costs_l188||0), 0.001); end
  def test_costs_m188; assert_in_delta(0, (worksheet.costs_m188||0), 0.001); end
  def test_costs_n188; assert_in_delta(0, (worksheet.costs_n188||0), 0.001); end
  def test_costs_p188; assert_in_delta(0, (worksheet.costs_p188||0), 0.001); end
  def test_costs_q188; assert_in_delta(0, (worksheet.costs_q188||0), 0.001); end
  def test_costs_r188; assert_in_delta(0, (worksheet.costs_r188||0), 0.001); end
  def test_costs_s188; assert_in_delta(0, (worksheet.costs_s188||0), 0.001); end
  def test_costs_t188; assert_in_delta(0, (worksheet.costs_t188||0), 0.001); end
  def test_costs_u188; assert_in_delta(0, (worksheet.costs_u188||0), 0.001); end
  def test_costs_v188; assert_in_delta(0, (worksheet.costs_v188||0), 0.001); end
  def test_costs_w188; assert_in_delta(0, (worksheet.costs_w188||0), 0.001); end
  def test_costs_x188; assert_in_delta(0, (worksheet.costs_x188||0), 0.001); end
  def test_costs_z188; assert_in_delta(0, (worksheet.costs_z188||0), 0.001); end
  def test_costs_aa188; assert_in_delta(0, (worksheet.costs_aa188||0), 0.001); end
  def test_costs_ab188; assert_in_delta(0, (worksheet.costs_ab188||0), 0.001); end
  def test_costs_ac188; assert_in_delta(0, (worksheet.costs_ac188||0), 0.001); end
  def test_costs_ad188; assert_in_delta(0, (worksheet.costs_ad188||0), 0.001); end
  def test_costs_ae188; assert_in_delta(0, (worksheet.costs_ae188||0), 0.001); end
  def test_costs_af188; assert_in_delta(0, (worksheet.costs_af188||0), 0.001); end
  def test_costs_ag188; assert_in_delta(0, (worksheet.costs_ag188||0), 0.001); end
  def test_costs_ah188; assert_in_delta(0, (worksheet.costs_ah188||0), 0.001); end
  def test_costs_aj188; assert_in_delta(0, (worksheet.costs_aj188||0), 0.001); end
  def test_costs_ak188; assert_in_delta(0, (worksheet.costs_ak188||0), 0.001); end
  def test_costs_al188; assert_in_delta(0, (worksheet.costs_al188||0), 0.001); end
  def test_costs_am188; assert_in_delta(0, (worksheet.costs_am188||0), 0.001); end
  def test_costs_an188; assert_in_delta(0, (worksheet.costs_an188||0), 0.001); end
  def test_costs_ao188; assert_in_delta(0, (worksheet.costs_ao188||0), 0.001); end
  def test_costs_ap188; assert_in_delta(0, (worksheet.costs_ap188||0), 0.001); end
  def test_costs_aq188; assert_in_delta(0, (worksheet.costs_aq188||0), 0.001); end
  def test_costs_ar188; assert_in_delta(0, (worksheet.costs_ar188||0), 0.001); end
  def test_costs_as188; assert_equal("Fuel", worksheet.costs_as188); end
  def test_costs_ai150; assert_in_epsilon(27453.340950356273, worksheet.costs_ai150, 0.001); end
  def test_costs_at188; assert_in_epsilon(27453.340950356273, worksheet.costs_at188, 0.001); end
  def test_costs_bw150; assert_in_epsilon(71669.87023200154, worksheet.costs_bw150, 0.001); end
  def test_costs_au188; assert_in_epsilon(71669.87023200154, worksheet.costs_au188, 0.001); end
  def test_costs_b189; assert_equal("IV.a", worksheet.costs_b189); end
  def test_costs_c189; assert_equal("Solar PV", worksheet.costs_c189); end
  def test_costs_f189; assert_in_delta(0.60143532, worksheet.costs_f189, 0.001); end
  def test_costs_g189; assert_in_epsilon(2.7436320000000007, worksheet.costs_g189, 0.001); end
  def test_costs_h189; assert_in_epsilon(4.640172000000001, worksheet.costs_h189, 0.001); end
  def test_costs_i189; assert_in_epsilon(6.611172000000002, worksheet.costs_i189, 0.001); end
  def test_costs_j189; assert_in_epsilon(9.6638822556391, worksheet.costs_j189, 0.001); end
  def test_costs_k189; assert_in_epsilon(13.732331639097747, worksheet.costs_k189, 0.001); end
  def test_costs_l189; assert_in_epsilon(19.837969714285723, worksheet.costs_l189, 0.001); end
  def test_costs_m189; assert_in_epsilon(29.23840682706769, worksheet.costs_m189, 0.001); end
  def test_costs_n189; assert_in_epsilon(44.04647600000002, worksheet.costs_n189, 0.001); end
  def test_costs_p189; assert_in_epsilon(487.4865921383241, worksheet.costs_p189, 0.001); end
  def test_costs_q189; assert_in_epsilon(275.845334417625, worksheet.costs_q189, 0.001); end
  def test_costs_r189; assert_in_epsilon(209.70151072721163, worksheet.costs_r189, 0.001); end
  def test_costs_s189; assert_in_epsilon(146.47849994295493, worksheet.costs_s189, 0.001); end
  def test_costs_t189; assert_in_epsilon(85.3329859274008, worksheet.costs_t189, 0.001); end
  def test_costs_u189; assert_in_epsilon(78.84640407772817, worksheet.costs_u189, 0.001); end
  def test_costs_v189; assert_in_epsilon(72.46110073528266, worksheet.costs_v189, 0.001); end
  def test_costs_w189; assert_in_epsilon(66.16260604403901, worksheet.costs_w189, 0.001); end
  def test_costs_x189; assert_in_epsilon(59.938461852062694, worksheet.costs_x189, 0.001); end
  def test_costs_z189; assert_in_epsilon(505.88231259637405, worksheet.costs_z189, 0.001); end
  def test_costs_aa189; assert_in_epsilon(307.7349684543446, worksheet.costs_aa189, 0.001); end
  def test_costs_ab189; assert_in_epsilon(259.7794834381876, worksheet.costs_ab189, 0.001); end
  def test_costs_ac189; assert_in_epsilon(214.3211736007446, worksheet.costs_ac189, 0.001); end
  def test_costs_ad189; assert_in_epsilon(170.6659718548016, worksheet.costs_ad189, 0.001); end
  def test_costs_ae189; assert_in_epsilon(157.69280815545633, worksheet.costs_ae189, 0.001); end
  def test_costs_af189; assert_in_epsilon(144.9222014705653, worksheet.costs_af189, 0.001); end
  def test_costs_ag189; assert_in_epsilon(132.32521208807802, worksheet.costs_ag189, 0.001); end
  def test_costs_ah189; assert_in_epsilon(119.87692370412539, worksheet.costs_ah189, 0.001); end
  def test_costs_aj189; assert_in_epsilon(496.6844523673491, worksheet.costs_aj189, 0.001); end
  def test_costs_ak189; assert_in_epsilon(291.7901514359848, worksheet.costs_ak189, 0.001); end
  def test_costs_al189; assert_in_epsilon(234.74049708269962, worksheet.costs_al189, 0.001); end
  def test_costs_am189; assert_in_epsilon(180.39983677184978, worksheet.costs_am189, 0.001); end
  def test_costs_an189; assert_in_epsilon(127.9994788911012, worksheet.costs_an189, 0.001); end
  def test_costs_ao189; assert_in_epsilon(118.26960611659226, worksheet.costs_ao189, 0.001); end
  def test_costs_ap189; assert_in_epsilon(108.69165110292398, worksheet.costs_ap189, 0.001); end
  def test_costs_aq189; assert_in_epsilon(99.2439090660585, worksheet.costs_aq189, 0.001); end
  def test_costs_ar189; assert_in_epsilon(89.90769277809405, worksheet.costs_ar189, 0.001); end
  def test_costs_as189; assert_equal("O&M", worksheet.costs_as189); end
  def test_costs_y150; assert_in_epsilon(12043.01663663507, worksheet.costs_y150, 0.001); end
  def test_costs_at189; assert_in_epsilon(12043.01663663507, worksheet.costs_at189, 0.001); end
  def test_costs_bm150; assert_in_epsilon(27177.129651681837, worksheet.costs_bm150, 0.001); end
  def test_costs_au189; assert_in_epsilon(27177.129651681837, worksheet.costs_au189, 0.001); end
  def test_costs_b190; assert_equal("IX.a", worksheet.costs_b190); end
  def test_costs_c190; assert_equal("Domestic space heating and hot water", worksheet.costs_c190); end
  def test_costs_f190; assert_in_delta(0, (worksheet.costs_f190||0), 0.001); end
  def test_costs_g190; assert_in_delta(0.17429681551268142, worksheet.costs_g190, 0.001); end
  def test_costs_h190; assert_in_delta(0.3219045615213166, worksheet.costs_h190, 0.001); end
  def test_costs_i190; assert_in_delta(0.42384932748594234, worksheet.costs_i190, 0.001); end
  def test_costs_j190; assert_in_delta(0.49303014497197023, worksheet.costs_j190, 0.001); end
  def test_costs_k190; assert_in_delta(0.5395077744382489, worksheet.costs_k190, 0.001); end
  def test_costs_l190; assert_in_delta(0.5588184439772026, worksheet.costs_l190, 0.001); end
  def test_costs_m190; assert_in_delta(0.5510708446761581, worksheet.costs_m190, 0.001); end
  def test_costs_n190; assert_in_delta(0.5191325895426346, worksheet.costs_n190, 0.001); end
  def test_costs_p190; assert_in_delta(0, (worksheet.costs_p190||0), 0.001); end
  def test_costs_q190; assert_in_delta(0, (worksheet.costs_q190||0), 0.001); end
  def test_costs_r190; assert_in_delta(0, (worksheet.costs_r190||0), 0.001); end
  def test_costs_s190; assert_in_delta(0, (worksheet.costs_s190||0), 0.001); end
  def test_costs_t190; assert_in_delta(0, (worksheet.costs_t190||0), 0.001); end
  def test_costs_u190; assert_in_delta(0, (worksheet.costs_u190||0), 0.001); end
  def test_costs_v190; assert_in_delta(0, (worksheet.costs_v190||0), 0.001); end
  def test_costs_w190; assert_in_delta(0, (worksheet.costs_w190||0), 0.001); end
  def test_costs_x190; assert_in_delta(0, (worksheet.costs_x190||0), 0.001); end
  def test_costs_z190; assert_in_delta(0, (worksheet.costs_z190||0), 0.001); end
  def test_costs_aa190; assert_in_delta(0, (worksheet.costs_aa190||0), 0.001); end
  def test_costs_ab190; assert_in_delta(0, (worksheet.costs_ab190||0), 0.001); end
  def test_costs_ac190; assert_in_delta(0, (worksheet.costs_ac190||0), 0.001); end
  def test_costs_ad190; assert_in_delta(0, (worksheet.costs_ad190||0), 0.001); end
  def test_costs_ae190; assert_in_delta(0, (worksheet.costs_ae190||0), 0.001); end
  def test_costs_af190; assert_in_delta(0, (worksheet.costs_af190||0), 0.001); end
  def test_costs_ag190; assert_in_delta(0, (worksheet.costs_ag190||0), 0.001); end
  def test_costs_ah190; assert_in_delta(0, (worksheet.costs_ah190||0), 0.001); end
  def test_costs_aj190; assert_in_delta(0, (worksheet.costs_aj190||0), 0.001); end
  def test_costs_ak190; assert_in_delta(0, (worksheet.costs_ak190||0), 0.001); end
  def test_costs_al190; assert_in_delta(0, (worksheet.costs_al190||0), 0.001); end
  def test_costs_am190; assert_in_delta(0, (worksheet.costs_am190||0), 0.001); end
  def test_costs_an190; assert_in_delta(0, (worksheet.costs_an190||0), 0.001); end
  def test_costs_ao190; assert_in_delta(0, (worksheet.costs_ao190||0), 0.001); end
  def test_costs_ap190; assert_in_delta(0, (worksheet.costs_ap190||0), 0.001); end
  def test_costs_aq190; assert_in_delta(0, (worksheet.costs_aq190||0), 0.001); end
  def test_costs_ar190; assert_in_delta(0, (worksheet.costs_ar190||0), 0.001); end
  def test_costs_as190; assert_equal("Investment", worksheet.costs_as190); end
  def test_costs_o150; assert_in_epsilon(55218.263273392426, worksheet.costs_o150, 0.001); end
  def test_costs_at190; assert_in_epsilon(55218.263273392426, worksheet.costs_at190, 0.001); end
  def test_costs_bc150; assert_in_epsilon(125365.11615251823, worksheet.costs_bc150, 0.001); end
  def test_costs_au190; assert_in_epsilon(125365.11615251823, worksheet.costs_au190, 0.001); end
  def test_costs_b191; assert_equal("IX.c", worksheet.costs_b191); end
  def test_costs_c191; assert_equal("Commercial heating and cooling", worksheet.costs_c191); end
  def test_costs_f191; assert_in_delta(0, (worksheet.costs_f191||0), 0.001); end
  def test_costs_g191; assert_in_delta(0, (worksheet.costs_g191||0), 0.001); end
  def test_costs_h191; assert_in_delta(0.04660787704349344, worksheet.costs_h191, 0.001); end
  def test_costs_i191; assert_in_delta(0.07822224803279638, worksheet.costs_i191, 0.001); end
  def test_costs_j191; assert_in_delta(0.0976635622478918, worksheet.costs_j191, 0.001); end
  def test_costs_k191; assert_in_delta(0.10567956729868155, worksheet.costs_k191, 0.001); end
  def test_costs_l191; assert_in_delta(0.10432854484878872, worksheet.costs_l191, 0.001); end
  def test_costs_m191; assert_in_delta(0.09462924352589439, worksheet.costs_m191, 0.001); end
  def test_costs_n191; assert_in_delta(0.08891270824391925, worksheet.costs_n191, 0.001); end
  def test_costs_p191; assert_in_delta(0, (worksheet.costs_p191||0), 0.001); end
  def test_costs_q191; assert_in_delta(0, (worksheet.costs_q191||0), 0.001); end
  def test_costs_r191; assert_in_delta(0, (worksheet.costs_r191||0), 0.001); end
  def test_costs_s191; assert_in_delta(0, (worksheet.costs_s191||0), 0.001); end
  def test_costs_t191; assert_in_delta(0, (worksheet.costs_t191||0), 0.001); end
  def test_costs_u191; assert_in_delta(0, (worksheet.costs_u191||0), 0.001); end
  def test_costs_v191; assert_in_delta(0, (worksheet.costs_v191||0), 0.001); end
  def test_costs_w191; assert_in_delta(0, (worksheet.costs_w191||0), 0.001); end
  def test_costs_x191; assert_in_delta(0, (worksheet.costs_x191||0), 0.001); end
  def test_costs_z191; assert_in_delta(0, (worksheet.costs_z191||0), 0.001); end
  def test_costs_aa191; assert_in_delta(0, (worksheet.costs_aa191||0), 0.001); end
  def test_costs_ab191; assert_in_delta(0, (worksheet.costs_ab191||0), 0.001); end
  def test_costs_ac191; assert_in_delta(0, (worksheet.costs_ac191||0), 0.001); end
  def test_costs_ad191; assert_in_delta(0, (worksheet.costs_ad191||0), 0.001); end
  def test_costs_ae191; assert_in_delta(0, (worksheet.costs_ae191||0), 0.001); end
  def test_costs_af191; assert_in_delta(0, (worksheet.costs_af191||0), 0.001); end
  def test_costs_ag191; assert_in_delta(0, (worksheet.costs_ag191||0), 0.001); end
  def test_costs_ah191; assert_in_delta(0, (worksheet.costs_ah191||0), 0.001); end
  def test_costs_aj191; assert_in_delta(0, (worksheet.costs_aj191||0), 0.001); end
  def test_costs_ak191; assert_in_delta(0, (worksheet.costs_ak191||0), 0.001); end
  def test_costs_al191; assert_in_delta(0, (worksheet.costs_al191||0), 0.001); end
  def test_costs_am191; assert_in_delta(0, (worksheet.costs_am191||0), 0.001); end
  def test_costs_an191; assert_in_delta(0, (worksheet.costs_an191||0), 0.001); end
  def test_costs_ao191; assert_in_delta(0, (worksheet.costs_ao191||0), 0.001); end
  def test_costs_ap191; assert_in_delta(0, (worksheet.costs_ap191||0), 0.001); end
  def test_costs_aq191; assert_in_delta(0, (worksheet.costs_aq191||0), 0.001); end
  def test_costs_ar191; assert_in_delta(0, (worksheet.costs_ar191||0), 0.001); end
  def test_costs_at191; assert_in_epsilon(94714.62086038376, worksheet.costs_at191, 0.001); end
  def test_costs_au191; assert_in_epsilon(224212.1160362016, worksheet.costs_au191, 0.001); end
  def test_costs_b192; assert_equal("VII.a", worksheet.costs_b192); end
  def test_costs_c192; assert_equal("Imports of decarbonized electricity", worksheet.costs_c192); end
  def test_costs_f192; assert_in_delta(0, (worksheet.costs_f192||0), 0.001); end
  def test_costs_g192; assert_in_epsilon(2.1, worksheet.costs_g192, 0.001); end
  def test_costs_h192; assert_in_epsilon(4.2, worksheet.costs_h192, 0.001); end
  def test_costs_i192; assert_in_epsilon(6.300000000000001, worksheet.costs_i192, 0.001); end
  def test_costs_j192; assert_in_epsilon(8.4, worksheet.costs_j192, 0.001); end
  def test_costs_k192; assert_in_epsilon(10.5, worksheet.costs_k192, 0.001); end
  def test_costs_l192; assert_in_epsilon(12.6, worksheet.costs_l192, 0.001); end
  def test_costs_m192; assert_in_epsilon(14.7, worksheet.costs_m192, 0.001); end
  def test_costs_n192; assert_in_epsilon(16.8, worksheet.costs_n192, 0.001); end
  def test_costs_aj192; assert_in_epsilon(72, worksheet.costs_aj192, 0.001); end
  def test_costs_ak192; assert_in_epsilon(74.25, worksheet.costs_ak192, 0.001); end
  def test_costs_al192; assert_in_epsilon(76.5, worksheet.costs_al192, 0.001); end
  def test_costs_am192; assert_in_epsilon(80, worksheet.costs_am192, 0.001); end
  def test_costs_an192; assert_in_epsilon(83.5, worksheet.costs_an192, 0.001); end
  def test_costs_ao192; assert_in_epsilon(82.5, worksheet.costs_ao192, 0.001); end
  def test_costs_ap192; assert_in_epsilon(81.5, worksheet.costs_ap192, 0.001); end
  def test_costs_aq192; assert_in_epsilon(81, worksheet.costs_aq192, 0.001); end
  def test_costs_ar192; assert_in_epsilon(80.5, worksheet.costs_ar192, 0.001); end
  def test_costs_c193; assert_equal("Total", worksheet.costs_c193); end
  def test_costs_ak193; assert_in_epsilon(78.28229310211432, worksheet.costs_ak193, 0.001); end
  def test_costs_al193; assert_in_epsilon(83.2496067788519, worksheet.costs_al193, 0.001); end
  def test_costs_am193; assert_in_epsilon(77.95442980834774, worksheet.costs_am193, 0.001); end
  def test_costs_an193; assert_in_epsilon(76.80389877402831, worksheet.costs_an193, 0.001); end
  def test_costs_ao193; assert_in_epsilon(80.14719341505231, worksheet.costs_ao193, 0.001); end
  def test_costs_ap193; assert_in_epsilon(79.63994048274837, worksheet.costs_ap193, 0.001); end
  def test_costs_aq193; assert_in_epsilon(85.17346031276921, worksheet.costs_aq193, 0.001); end
  def test_costs_d196; assert_equal("Electricity", worksheet.costs_d196); end
  def test_costs_e196; assert_equal("Fuel", worksheet.costs_e196); end
  def test_costs_ai176; assert_in_epsilon(5188.972687951355, worksheet.costs_ai176, 0.001); end
  def test_costs_f196; assert_in_epsilon(5188.972687951355, worksheet.costs_f196, 0.001); end
  def test_costs_e197; assert_equal("O&M", worksheet.costs_e197); end
  def test_costs_y176; assert_in_epsilon(2191.282571771305, worksheet.costs_y176, 0.001); end
  def test_costs_f197; assert_in_epsilon(2191.282571771305, worksheet.costs_f197, 0.001); end
  def test_costs_e198; assert_equal("Capital", worksheet.costs_e198); end
  def test_costs_o176; assert_in_epsilon(6247.730466521846, worksheet.costs_o176, 0.001); end
  def test_costs_f198; assert_in_epsilon(6247.730466521846, worksheet.costs_f198, 0.001); end
  def test_costs_e199; assert_equal("Total", worksheet.costs_e199); end
  def test_costs_f199; assert_in_epsilon(13627.985726244506, worksheet.costs_f199, 0.001); end
  def test_costs_d201; assert_equal("Energy", worksheet.costs_d201); end
  def test_costs_e201; assert_equal("Fuel", worksheet.costs_e201); end
  def test_costs_f201; assert_in_epsilon(10447.03283199995, worksheet.costs_f201, 0.001); end
  def test_costs_e202; assert_equal("O&M", worksheet.costs_e202); end
  def test_costs_f202; assert_in_epsilon(2729.2177133513924, worksheet.costs_f202, 0.001); end
  def test_costs_e203; assert_equal("Capital", worksheet.costs_e203); end
  def test_costs_f203; assert_in_epsilon(6663.38001156239, worksheet.costs_f203, 0.001); end
  def test_costs_e204; assert_equal("Total", worksheet.costs_e204); end
  def test_costs_f204; assert_in_epsilon(19839.630556913733, worksheet.costs_f204, 0.001); end
  def test_costs_m205; assert_in_epsilon(2679.99, worksheet.costs_m205, 0.001); end
  def test_costs_m206; assert_in_epsilon(1329.94, worksheet.costs_m206, 0.001); end
  def test_costs_d207; assert_equal("Electricity investments", worksheet.costs_d207); end
  def test_costs_e207; assert_equal("Grid and balancing implications", worksheet.costs_e207); end
  def test_costs_o175; assert_in_epsilon(1274.7939652373757, worksheet.costs_o175, 0.001); end
  def test_costs_f207; assert_in_epsilon(1274.7939652373757, worksheet.costs_f207, 0.001); end
  def test_costs_m207; assert_in_epsilon(4009.93, worksheet.costs_m207, 0.001); end
  def test_costs_e208; assert_equal("Wind power (on and offshore)", worksheet.costs_e208); end
  def test_costs_o171; assert_in_epsilon(1874.3098688483005, worksheet.costs_o171, 0.001); end
  def test_costs_f208; assert_in_epsilon(1874.3098688483005, worksheet.costs_f208, 0.001); end
  def test_costs_e209; assert_equal("Solar PV", worksheet.costs_e209); end
  def test_costs_o172; assert_in_epsilon(1720.3510955756972, worksheet.costs_o172, 0.001); end
  def test_costs_f209; assert_in_epsilon(1720.3510955756972, worksheet.costs_f209, 0.001); end
  def test_costs_e210; assert_equal("Carbon Capture Storage (CCS)", worksheet.costs_e210); end
  def test_costs_o169; assert_in_epsilon(106.12707792401585, worksheet.costs_o169, 0.001); end
  def test_costs_f210; assert_in_epsilon(106.12707792401585, worksheet.costs_f210, 0.001); end
  def test_costs_e211; assert_equal("Hydro and geothermal", worksheet.costs_e211); end
  def test_costs_o173; assert_in_epsilon(534.4109064006927, worksheet.costs_o173, 0.001); end
  def test_costs_f211; assert_in_epsilon(534.4109064006927, worksheet.costs_f211, 0.001); end
  def test_costs_e212; assert_equal("Biomass and gas power stations", worksheet.costs_e212); end
  def test_costs_o168; assert_in_epsilon(343.29310809132016, worksheet.costs_o168, 0.001); end
  def test_costs_f212; assert_in_epsilon(343.29310809132016, worksheet.costs_f212, 0.001); end
  def test_costs_e213; assert_equal("Total", worksheet.costs_e213); end
  def test_costs_f213; assert_in_epsilon(5853.286022077402, worksheet.costs_f213, 0.001); end
  def test_costs_d216; assert_equal("Discounting analysis", worksheet.costs_d216); end
  def test_costs_e216; assert_equal("Total costs not discounted", worksheet.costs_e216); end
  def test_costs_f217; assert_in_epsilon(2010, worksheet.costs_f217, 0.001); end
  def test_costs_g217; assert_in_epsilon(2015, worksheet.costs_g217, 0.001); end
  def test_costs_h217; assert_in_epsilon(2020, worksheet.costs_h217, 0.001); end
  def test_costs_i217; assert_in_epsilon(2025, worksheet.costs_i217, 0.001); end
  def test_costs_j217; assert_in_epsilon(2030, worksheet.costs_j217, 0.001); end
  def test_costs_k217; assert_in_epsilon(2035, worksheet.costs_k217, 0.001); end
  def test_costs_l217; assert_in_epsilon(2040, worksheet.costs_l217, 0.001); end
  def test_costs_m217; assert_in_epsilon(2045, worksheet.costs_m217, 0.001); end
  def test_costs_n217; assert_in_epsilon(2050, worksheet.costs_n217, 0.001); end
  def test_costs_o217; assert_equal("TOTAL OVER 40 YEARS", worksheet.costs_o217); end
  def test_costs_e218; assert_equal("Fuel", worksheet.costs_e218); end
  def test_costs_f218; assert_in_epsilon(28.683376704203102, worksheet.costs_f218, 0.001); end
  def test_costs_g218; assert_in_epsilon(26.077505971223797, worksheet.costs_g218, 0.001); end
  def test_costs_h218; assert_in_epsilon(27.053787166634713, worksheet.costs_h218, 0.001); end
  def test_costs_i218; assert_in_epsilon(27.281108510224506, worksheet.costs_i218, 0.001); end
  def test_costs_j218; assert_in_epsilon(27.96892500247722, worksheet.costs_j218, 0.001); end
  def test_costs_k218; assert_in_epsilon(27.298267205664935, worksheet.costs_k218, 0.001); end
  def test_costs_l218; assert_in_epsilon(27.25640063159722, worksheet.costs_l218, 0.001); end
  def test_costs_m218; assert_in_epsilon(27.338895216865005, worksheet.costs_m218, 0.001); end
  def test_costs_n218; assert_in_epsilon(28.12180214431596, worksheet.costs_n218, 0.001); end
  def test_costs_o218; assert_in_epsilon(247.08006855320644, worksheet.costs_o218, 0.001); end
  def test_costs_e219; assert_equal("O&M", worksheet.costs_e219); end
  def test_costs_f219; assert_in_epsilon(8.980927665038013, worksheet.costs_f219, 0.001); end
  def test_costs_g219; assert_in_epsilon(10.137971095334262, worksheet.costs_g219, 0.001); end
  def test_costs_h219; assert_in_epsilon(11.291530247390016, worksheet.costs_h219, 0.001); end
  def test_costs_i219; assert_in_epsilon(12.138820663123912, worksheet.costs_i219, 0.001); end
  def test_costs_j219; assert_in_epsilon(12.792505405154195, worksheet.costs_j219, 0.001); end
  def test_costs_k219; assert_in_epsilon(13.09340373075173, worksheet.costs_k219, 0.001); end
  def test_costs_l219; assert_in_epsilon(13.397021106974329, worksheet.costs_l219, 0.001); end
  def test_costs_m219; assert_in_epsilon(13.160290865771833, worksheet.costs_m219, 0.001); end
  def test_costs_n219; assert_in_epsilon(13.394678950177344, worksheet.costs_n219, 0.001); end
  def test_costs_o219; assert_in_epsilon(108.38714972971562, worksheet.costs_o219, 0.001); end
  def test_costs_e220; assert_equal("Capital", worksheet.costs_e220); end
  def test_costs_f220; assert_in_epsilon(40.263200866174465, worksheet.costs_f220, 0.001); end
  def test_costs_g220; assert_in_epsilon(43.00770606375308, worksheet.costs_g220, 0.001); end
  def test_costs_h220; assert_in_epsilon(63.61911185712338, worksheet.costs_h220, 0.001); end
  def test_costs_i220; assert_in_epsilon(55.068415428802695, worksheet.costs_i220, 0.001); end
  def test_costs_j220; assert_in_epsilon(57.871292672325204, worksheet.costs_j220, 0.001); end
  def test_costs_k220; assert_in_epsilon(56.66352031847407, worksheet.costs_k220, 0.001); end
  def test_costs_l220; assert_in_epsilon(58.660494916110835, worksheet.costs_l220, 0.001); end
  def test_costs_m220; assert_in_epsilon(59.4173365708626, worksheet.costs_m220, 0.001); end
  def test_costs_n220; assert_in_epsilon(62.393290766905544, worksheet.costs_n220, 0.001); end
  def test_costs_o220; assert_in_epsilon(496.9643694605318, worksheet.costs_o220, 0.001); end
  def test_costs_e221; assert_equal("Total", worksheet.costs_e221); end
  def test_costs_f221; assert_in_epsilon(77.92750523541558, worksheet.costs_f221, 0.001); end
  def test_costs_g221; assert_in_epsilon(79.22318313031114, worksheet.costs_g221, 0.001); end
  def test_costs_h221; assert_in_epsilon(101.9644292711481, worksheet.costs_h221, 0.001); end
  def test_costs_i221; assert_in_epsilon(94.48834460215112, worksheet.costs_i221, 0.001); end
  def test_costs_j221; assert_in_epsilon(98.63272307995662, worksheet.costs_j221, 0.001); end
  def test_costs_k221; assert_in_epsilon(97.05519125489073, worksheet.costs_k221, 0.001); end
  def test_costs_l221; assert_in_epsilon(99.31391665468239, worksheet.costs_l221, 0.001); end
  def test_costs_m221; assert_in_epsilon(99.91652265349944, worksheet.costs_m221, 0.001); end
  def test_costs_n221; assert_in_epsilon(103.90977186139884, worksheet.costs_n221, 0.001); end
  def test_costs_o221; assert_in_epsilon(852.431587743454, worksheet.costs_o221, 0.001); end
  def test_costs_e223; assert_equal("Total costs discounted", worksheet.costs_e223); end
  def test_costs_f224; assert_in_epsilon(2010, worksheet.costs_f224, 0.001); end
  def test_costs_g224; assert_in_epsilon(2015, worksheet.costs_g224, 0.001); end
  def test_costs_h224; assert_in_epsilon(2020, worksheet.costs_h224, 0.001); end
  def test_costs_i224; assert_in_epsilon(2025, worksheet.costs_i224, 0.001); end
  def test_costs_j224; assert_in_epsilon(2030, worksheet.costs_j224, 0.001); end
  def test_costs_k224; assert_in_epsilon(2035, worksheet.costs_k224, 0.001); end
  def test_costs_l224; assert_in_epsilon(2040, worksheet.costs_l224, 0.001); end
  def test_costs_m224; assert_in_epsilon(2045, worksheet.costs_m224, 0.001); end
  def test_costs_n224; assert_in_epsilon(2050, worksheet.costs_n224, 0.001); end
  def test_costs_o224; assert_equal("TOTAL OVER 40 YEARS", worksheet.costs_o224); end
  def test_costs_e225; assert_equal("Fuel", worksheet.costs_e225); end
  def test_costs_f225; assert_in_epsilon(28.683376704203102, worksheet.costs_f225, 0.001); end
  def test_costs_g225; assert_in_epsilon(16.192079509735294, worksheet.costs_g225, 0.001); end
  def test_costs_h225; assert_in_epsilon(10.430406095750792, worksheet.costs_h225, 0.001); end
  def test_costs_i225; assert_in_epsilon(6.530880475325169, worksheet.costs_i225, 0.001); end
  def test_costs_j225; assert_in_epsilon(4.15740248430339, worksheet.costs_j225, 0.001); end
  def test_costs_k225; assert_in_epsilon(2.519520820251058, worksheet.costs_k225, 0.001); end
  def test_costs_l225; assert_in_epsilon(1.5620248883938772, worksheet.costs_l225, 0.001); end
  def test_costs_m225; assert_in_delta(0.9728300561503832, worksheet.costs_m225, 0.001); end
  def test_costs_n225; assert_in_delta(0.6213491978884808, worksheet.costs_n225, 0.001); end
  def test_costs_o225; assert_in_epsilon(71.66987023200154, worksheet.costs_o225, 0.001); end
  def test_costs_e226; assert_equal("O&M", worksheet.costs_e226); end
  def test_costs_f226; assert_in_epsilon(8.980927665038013, worksheet.costs_f226, 0.001); end
  def test_costs_g226; assert_in_epsilon(6.294882425650419, worksheet.costs_g226, 0.001); end
  def test_costs_h226; assert_in_epsilon(4.3533737142717985, worksheet.costs_h226, 0.001); end
  def test_costs_i226; assert_in_epsilon(2.90593715546998, worksheet.costs_i226, 0.001); end
  def test_costs_j226; assert_in_epsilon(1.9015244149405848, worksheet.costs_j226, 0.001); end
  def test_costs_k226; assert_in_epsilon(1.2084687668650254, worksheet.costs_k226, 0.001); end
  def test_costs_l226; assert_in_delta(0.7677638981859106, worksheet.costs_l226, 0.001); end
  def test_costs_m226; assert_in_delta(0.4682971422344219, worksheet.costs_m226, 0.001); end
  def test_costs_n226; assert_in_delta(0.2959544690256854, worksheet.costs_n226, 0.001); end
  def test_costs_o226; assert_in_epsilon(27.17712965168184, worksheet.costs_o226, 0.001); end
  def test_costs_e227; assert_equal("Capital", worksheet.costs_e227); end
  def test_costs_f227; assert_in_epsilon(40.263200866174465, worksheet.costs_f227, 0.001); end
  def test_costs_g227; assert_in_epsilon(26.704401750844802, worksheet.costs_g227, 0.001); end
  def test_costs_h227; assert_in_epsilon(24.52792165598066, worksheet.costs_h227, 0.001); end
  def test_costs_i227; assert_in_epsilon(13.182940825013532, worksheet.costs_i227, 0.001); end
  def test_costs_j227; assert_in_epsilon(8.602198901261447, worksheet.costs_j227, 0.001); end
  def test_costs_k227; assert_in_epsilon(5.229816168019915, worksheet.costs_k227, 0.001); end
  def test_costs_l227; assert_in_epsilon(3.36174809957283, worksheet.costs_l227, 0.001); end
  def test_costs_m227; assert_in_epsilon(2.114312608977724, worksheet.costs_m227, 0.001); end
  def test_costs_n227; assert_in_epsilon(1.3785752766728496, worksheet.costs_n227, 0.001); end
  def test_costs_o227; assert_in_epsilon(125.36511615251823, worksheet.costs_o227, 0.001); end
  def test_costs_e228; assert_equal("Total", worksheet.costs_e228); end
  def test_costs_f228; assert_in_epsilon(77.92750523541558, worksheet.costs_f228, 0.001); end
  def test_costs_g228; assert_in_epsilon(49.19136368623052, worksheet.costs_g228, 0.001); end
  def test_costs_h228; assert_in_epsilon(39.31170146600325, worksheet.costs_h228, 0.001); end
  def test_costs_i228; assert_in_epsilon(22.61975845580868, worksheet.costs_i228, 0.001); end
  def test_costs_j228; assert_in_epsilon(14.661125800505422, worksheet.costs_j228, 0.001); end
  def test_costs_k228; assert_in_epsilon(8.957805755135999, worksheet.costs_k228, 0.001); end
  def test_costs_l228; assert_in_epsilon(5.691536886152617, worksheet.costs_l228, 0.001); end
  def test_costs_m228; assert_in_epsilon(3.5554398073625295, worksheet.costs_m228, 0.001); end
  def test_costs_n228; assert_in_epsilon(2.2958789435870157, worksheet.costs_n228, 0.001); end
  def test_costs_o228; assert_in_epsilon(224.21211603620162, worksheet.costs_o228, 0.001); end
  def test_control_ab8; assert_in_epsilon(40, worksheet.control_ab8, 0.001); end
  def test_control_ab12; assert_in_epsilon(40, worksheet.control_ab12, 0.001); end
  def test_control_ab28; assert_in_epsilon(10, worksheet.control_ab28, 0.001); end
  def test_control_ab19; assert_in_epsilon(40, worksheet.control_ab19, 0.001); end
  def test_control_h21; assert_in_epsilon(4, worksheet.control_h21, 0.001); end
  def test_control_h22; assert_in_epsilon(4, worksheet.control_h22, 0.001); end
  def test_control_h29; assert_in_epsilon(4, worksheet.control_h29, 0.001); end
  def test_control_h30; assert_in_epsilon(4, worksheet.control_h30, 0.001); end
  def test_control_h33; assert_in_epsilon(4, worksheet.control_h33, 0.001); end
  def test_control_h34; assert_in_epsilon(30, worksheet.control_h34, 0.001); end
  def test_control_h35; assert_in_epsilon(40, worksheet.control_h35, 0.001); end
  def test_control_h37; assert_in_epsilon(40, worksheet.control_h37, 0.001); end
  def test_control_h41; assert_in_epsilon(40, worksheet.control_h41, 0.001); end
  def test_output_ad277; assert_in_epsilon(28.526891432586943, worksheet.output_ad277, 0.001); end
  def test_output_ad278; assert_in_epsilon(7.756349470903815, worksheet.output_ad278, 0.001); end
  def test_output_ad279; assert_in_epsilon(106.97550727269866, worksheet.output_ad279, 0.001); end
  def test_output_ac277; assert_in_epsilon(32.52740886301405, worksheet.output_ac277, 0.001); end
  def test_output_ac278; assert_in_epsilon(8.36744876482892, worksheet.output_ac278, 0.001); end
  def test_output_ac279; assert_in_epsilon(114.28616266127325, worksheet.output_ac279, 0.001); end
  def test_output_ae277; assert_in_epsilon(22.636899236868782, worksheet.output_ae277, 0.001); end
  def test_output_ae278; assert_in_epsilon(5.9770149775434875, worksheet.output_ae278, 0.001); end
  def test_output_ae279; assert_in_epsilon(89.36954161796672, worksheet.output_ae279, 0.001); end
  def test_output_af277; assert_in_epsilon(16.58151199878163, worksheet.output_af277, 0.001); end
  def test_output_af278; assert_in_epsilon(4.410716395617129, worksheet.output_af278, 0.001); end
  def test_output_af279; assert_in_epsilon(72.58310351498324, worksheet.output_af279, 0.001); end
  def test_output_ag277; assert_in_epsilon(11.653118180913788, worksheet.output_ag277, 0.001); end
  def test_output_ag278; assert_in_epsilon(3.161630677938, worksheet.output_ag278, 0.001); end
  def test_output_ag279; assert_in_epsilon(56.72292839027392, worksheet.output_ag279, 0.001); end
  def test_output_ah277; assert_in_epsilon(7.830947142024896, worksheet.output_ah277, 0.001); end
  def test_output_ah278; assert_in_epsilon(2.1499872492039995, worksheet.output_ah278, 0.001); end
  def test_output_ah279; assert_in_epsilon(43.59633127393328, worksheet.output_ah279, 0.001); end
  def test_output_ai277; assert_in_epsilon(4.713354411401872, worksheet.output_ai277, 0.001); end
  def test_output_ai278; assert_in_epsilon(1.3637669441384097, worksheet.output_ai278, 0.001); end
  def test_output_ai279; assert_in_epsilon(34.391193566513635, worksheet.output_ai279, 0.001); end
  def test_output_aj277; assert_in_epsilon(2.2545946752590167, worksheet.output_aj277, 0.001); end
  def test_output_aj278; assert_in_delta(0.7707196889035367, worksheet.output_aj278, 0.001); end
  def test_output_aj279; assert_in_epsilon(26.541602234059948, worksheet.output_aj279, 0.001); end
  def test_control_h47; assert_in_epsilon(40, worksheet.control_h47, 0.001); end
  def test_control_h6; assert_in_epsilon(40, worksheet.control_h6, 0.001); end
  def test_control_h8; assert_in_epsilon(40, worksheet.control_h8, 0.001); end
  def test_control_h12; assert_in_epsilon(40, worksheet.control_h12, 0.001); end
  def test_control_h13; assert_in_epsilon(40, worksheet.control_h13, 0.001); end
  def test_control_h15; assert_in_epsilon(40, worksheet.control_h15, 0.001); end
  def test_control_h39; assert_in_epsilon(40, worksheet.control_h39, 0.001); end
  def test_control_h45; assert_in_epsilon(40, worksheet.control_h45, 0.001); end
  def test_control_h49; assert_in_epsilon(40, worksheet.control_h49, 0.001); end
  def test_control_h51; assert_in_epsilon(40, worksheet.control_h51, 0.001); end
  def test_control_h53; assert_in_epsilon(40, worksheet.control_h53, 0.001); end
  def test_control_h16; assert_in_epsilon(40, worksheet.control_h16, 0.001); end
  def test_control_ab31; assert_in_epsilon(10, worksheet.control_ab31, 0.001); end
end
